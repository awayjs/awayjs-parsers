{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-parsers/lib/AWDParser.ts",
    "awayjs-parsers/lib/MD2Parser.ts",
    "awayjs-parsers/lib/MD5AnimParser.ts",
    "awayjs-parsers/lib/MD5MeshParser.ts",
    "awayjs-parsers/lib/Max3DSParser.ts",
    "awayjs-parsers/lib/OBJParser.ts",
    "awayjs-parsers/lib/Parsers.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\nimport BitmapCubeTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapCubeTexture\");\nimport BitmapTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\nimport CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport ImageCubeTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageCubeTexture\");\nimport ImageTexture\t\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\nimport TextureProxyBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport TextField\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-renderergl/lib/managers/DefaultMaterialManager\");\n\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\n\nimport CurveMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/CurveMaterial\")\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport TimelineSceneGraphFactory \t= require(\"awayjs-player/lib/factories/TimelineSceneGraphFactory\");\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\nimport MovieClip \t\t\t\t\t= require(\"awayjs-player/lib/display/MovieClip\");\nimport TimelineKeyFrame \t\t\t= require(\"awayjs-player/lib/timeline/TimelineKeyFrame\");\nimport AddChildCommand \t\t\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildCommand\");\nimport UpdatePropertyCommand \t\t= require(\"awayjs-player/lib/timeline/commands/UpdatePropertyCommand\");\nimport RemoveChildCommand \t\t\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildCommand\");\nimport ApplyAS2DepthsCommand\t\t= require(\"awayjs-player/lib/timeline/commands/ApplyAS2DepthsCommand\");\n\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport TextFormat\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\n/**\n * AWDParser provides a parser for the AWD data type.\n */\nclass AWDParser extends ParserBase\n{\n\t//set to \"true\" to have some console.logs in the Console\n\tprivate _debug:boolean = true;\n\tprivate _byteData:ByteArray;\n\tprivate _startedParsing:boolean = false;\n\tprivate _cur_block_id:number;\n\tprivate _blocks:Array<AWDBlock>;\n\tprivate _newBlockBytes:ByteArray;\n\tprivate _version:Array<number>;\n\tprivate _compression:number;\n\tprivate _accuracyOnBlocks:boolean;\n\tprivate _accuracyMatrix:boolean;\n\tprivate _accuracyGeo:boolean;\n\tprivate _accuracyProps:boolean;\n\tprivate _matrixNrType:number;\n\tprivate _geoNrType:number;\n\tprivate _propsNrType:number;\n\tprivate _streaming:boolean;\n\tprivate _texture_users:Object = {};\n\tprivate _parsed_header:boolean = false;\n\tprivate _body:ByteArray;\n\tprivate _defaultTexture:BitmapTexture;     // HTML IMAGE TEXTURE >? !\n\tprivate _cubeTextures:Array<any>;\n\tprivate _defaultBitmapMaterial:MethodMaterial;\n\tprivate _defaultCubeTexture:BitmapCubeTexture;\n\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\n\tpublic static UNCOMPRESSED:number = 0;\n\tpublic static DEFLATE:number = 1;\n\tpublic static LZMA:number = 2;\n\tpublic static INT8:number = 1;\n\tpublic static INT16:number = 2;\n\tpublic static INT32:number = 3;\n\tpublic static UINT8:number = 4;\n\tpublic static UINT16:number = 5;\n\tpublic static UINT32:number = 6;\n\tpublic static FLOAT32:number = 7;\n\tpublic static FLOAT64:number = 8;\n\tpublic static BOOL:number = 21;\n\tpublic static COLOR:number = 22;\n\tpublic static BADDR:number = 23;\n\tpublic static AWDSTRING:number = 31;\n\tpublic static AWDBYTEARRAY:number = 32;\n\tpublic static VECTOR2x1:number = 41;\n\tpublic static VECTOR3x1:number = 42;\n\tpublic static VECTOR4x1:number = 43;\n\tpublic static MTX3x2:number = 44;\n\tpublic static MTX3x3:number = 45;\n\tpublic static MTX4x3:number = 46;\n\tpublic static MTX4x4:number = 47;\n\n\tprivate blendModeDic:Array<string>;\n\tprivate _depthSizeDic:Array<number>;\n\n\t/**\n\t * Creates a new AWDParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\n\t\tthis._blocks = new Array<AWDBlock>();\n\t\tthis._blocks[0] = new AWDBlock();\n\t\tthis._blocks[0].data = null; // Zero address means null in AWD\n\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.ADD);\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\n\t\tthis._depthSizeDic.push(256);\n\t\tthis._depthSizeDic.push(512);\n\t\tthis._depthSizeDic.push(2048);\n\t\tthis._depthSizeDic.push(1024);\n\t\tthis._version = Array<number>(); // will contain 2 int (major-version, minor-version) for awd-version-check\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"awd\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\t// this will be called when Dependency has finished loading.\n\t\t// the Assets waiting for this Bitmap, can be Texture or CubeTexture.\n\t\t// if the Bitmap is awaited by a CubeTexture, we need to check if its the last Bitmap of the CubeTexture,\n\t\t// so we know if we have to finalize the Asset (CubeTexture) or not.\n\t\tif (resourceDependency.assets.length == 1) {\n\t\t\tvar isCubeTextureArray:Array<string> = resourceDependency.id.split(\"#\");\n\t\t\tvar ressourceID:string = isCubeTextureArray[0];\n\t\t\tvar asset:TextureProxyBase;\n\t\t\tvar thisBitmapTexture:Texture2DBase;\n\t\t\tvar block:AWDBlock;\n\n\t\t\tif (isCubeTextureArray.length == 1) // Not a cube texture\n\t\t\t{\n\t\t\t\tasset = <Texture2DBase> resourceDependency.assets[0];\n\t\t\t\tif (asset) {\n\t\t\t\t\tvar mat:MethodMaterial;\n\t\t\t\t\tvar users:Array<string>;\n\n\t\t\t\t\tblock = this._blocks[ resourceDependency.id ];\n\t\t\t\t\tblock.data = asset; // Store finished asset\n\n\t\t\t\t\t// Reset name of texture to the one defined in the AWD file,\n\t\t\t\t\t// as opposed to whatever the image parser came up with.\n\t\t\t\t\tasset.resetAssetPath(block.name, null, true);\n\t\t\t\t\tblock.name = asset.name;\n\t\t\t\t\t// Finalize texture asset to dispatch texture event, which was\n\t\t\t\t\t// previously suppressed while the dependency was loaded.\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> asset);\n\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap for texture\");\n\t\t\t\t\t\tconsole.log(\"Parsed texture: Name = \" + block.name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isCubeTextureArray.length > 1) // Cube Texture\n\t\t\t{\n\t\t\t\tthisBitmapTexture = <BitmapTexture> resourceDependency.assets[0];\n\n\t\t\t\tvar tx:ImageTexture = <ImageTexture> thisBitmapTexture;\n\n\t\t\t\tthis._cubeTextures[ isCubeTextureArray[1] ] = tx.htmlImageElement; // ?\n\t\t\t\tthis._texture_users[ressourceID].push(1);\n\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + this._texture_users[ressourceID].length + \" / 6 for Cubetexture\");\n\t\t\t\t}\n\t\t\t\tif (this._texture_users[ressourceID].length == this._cubeTextures.length) {\n\n\t\t\t\t\tvar posX:any = this._cubeTextures[0];\n\t\t\t\t\tvar negX:any = this._cubeTextures[1];\n\t\t\t\t\tvar posY:any = this._cubeTextures[2];\n\t\t\t\t\tvar negY:any = this._cubeTextures[3];\n\t\t\t\t\tvar posZ:any = this._cubeTextures[4];\n\t\t\t\t\tvar negZ:any = this._cubeTextures[5];\n\n\t\t\t\t\tasset = <TextureProxyBase> new ImageCubeTexture(posX, negX, posY, negY, posZ, negZ);\n\t\t\t\t\tblock = this._blocks[ressourceID];\n\t\t\t\t\tblock.data = asset; // Store finished asset\n\n\t\t\t\t\t// Reset name of texture to the one defined in the AWD file,\n\t\t\t\t\t// as opposed to whatever the image parser came up with.\n\t\t\t\t\tasset.resetAssetPath(block.name, null, true);\n\t\t\t\t\tblock.name = asset.name;\n\t\t\t\t\t// Finalize texture asset to dispatch texture event, which was\n\t\t\t\t\t// previously suppressed while the dependency was loaded.\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> asset);\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + block.name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\t//not used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\n\t\t// this means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\tvar oldName:string = asset.name;\n\n\t\tif (asset) {\n\t\t\tvar block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\n\t\t\t// Reset name of texture to the one defined in the AWD file,\n\t\t\t// as opposed to whatever the image parser came up with.\n\t\t\tasset.resetAssetPath(block.name, null, true);\n\t\t}\n\n\t\tvar newName:string = asset.name;\n\n\t\tasset.name = oldName;\n\n\t\treturn newName;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\tif (!this._parsed_header) {\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Parse header and decompress body if needed\n\t\t\tthis.parseHeader();\n\n\t\t\tswitch (this._compression) {\n\n\t\t\t\tcase AWDParser.DEFLATE:\n\t\t\t\tcase AWDParser.LZMA:\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AWDParser.UNCOMPRESSED:\n\t\t\t\t\tthis._body = this._byteData;\n\t\t\t\t\tbreak;\n\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t// Compressed AWD Formats not yet supported\n\t\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t\t/*\n\t\t\t\t case AWDParser.DEFLATE:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress();\n\n\t\t\t\t break;\n\t\t\t\t case AWDParser.LZMA:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\n\n\t\t\t\t break;\n\t\t\t\t //*/\n\n\t\t\t}\n\n\t\t\tthis._parsed_header = true;\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t}\n\n\t\tif (this._body) {\n\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\n\t\t\t{\n\t\t\t\tthis.parseNextBlock();\n\n\t\t\t}\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Return complete status\n\t\t\tif (this._body.getBytesAvailable() == 0) {\n\t\t\t\tthis.dispose();\n\t\t\t\treturn  ParserBase.PARSING_DONE;\n\t\t\t} else {\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} else {\n\n\t\t\tswitch (this._compression) {\n\n\t\t\t\tcase AWDParser.DEFLATE:\n\t\t\t\tcase AWDParser.LZMA:\n\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"(!) AWDParser Error: Compressed AWD formats not yet supported (!)\");\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t\t// Error - most likely _body not set because we do not support compression.\n\t\t\treturn  ParserBase.PARSING_DONE;\n\n\t\t}\n\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\tprivate dispose():void\n\t{\n\n\t\tfor (var c in this._blocks) {\n\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[ c ];\n\t\t\tb.dispose();\n\n\t\t}\n\n\t}\n\n\tprivate parseNextBlock():void\n\t{\n\t\tvar block:AWDBlock;\n\t\tvar assetData:IAsset;\n\t\tvar isParsed:boolean = false;\n\t\tvar ns:number;\n\t\tvar type:number;\n\t\tvar flags:number;\n\t\tvar len:number;\n\n\t\tthis._cur_block_id = this._body.readUnsignedInt();\n\n\t\tns = this._body.readUnsignedByte();\n\t\ttype = this._body.readUnsignedByte();\n\t\tflags = this._body.readUnsignedByte();\n\t\tlen = this._body.readUnsignedInt();\n\n\t\tvar blockCompression:boolean = BitFlags.test(flags, BitFlags.FLAG4);\n\t\tvar blockCompressionLZMA:boolean = BitFlags.test(flags, BitFlags.FLAG5);\n\n\t\tif (this._accuracyOnBlocks) {\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG1);\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG2);\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG3);\n\t\t\tthis._geoNrType = AWDParser.FLOAT32;\n\n\t\t\tif (this._accuracyGeo) {\n\t\t\t\tthis._geoNrType = AWDParser.FLOAT64;\n\t\t\t}\n\n\t\t\tthis._matrixNrType = AWDParser.FLOAT32;\n\n\t\t\tif (this._accuracyMatrix) {\n\t\t\t\tthis._matrixNrType = AWDParser.FLOAT64;\n\t\t\t}\n\n\t\t\tthis._propsNrType = AWDParser.FLOAT32;\n\n\t\t\tif (this._accuracyProps) {\n\t\t\t\tthis._propsNrType = AWDParser.FLOAT64;\n\t\t\t}\n\t\t}\n\n\t\tvar blockEndAll:number = this._body.position + len;\n\n\t\tif (len > this._body.getBytesAvailable()) {\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\n\t\t\tthis._body.position += this._body.getBytesAvailable();\n\t\t\treturn;\n\t\t}\n\t\tthis._newBlockBytes = new ByteArray();\n\n\n\t\tthis._body.readBytes(this._newBlockBytes, 0, len);\n\n\t\t//----------------------------------------------------------------------------\n\t\t// Compressed AWD Formats not yet supported\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\n\t\t\t/*\n\t\t\t if (blockCompressionLZMA)\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress(AWDParser.COMPRESSIONMODE_LZMA);\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress();\n\t\t\t }\n\t\t\t */\n\n\t\t}\n\n\t\t//----------------------------------------------------------------------------\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t//----------------------------------------------------------------------------\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\n\t\t//----------------------------------------------------------------------------\n\n\t\tthis._newBlockBytes.position = 0;\n\t\tblock = new AWDBlock();\n\t\tblock.len = this._newBlockBytes.position + len;\n\t\tblock.id = this._cur_block_id;\n\n\t\tvar blockEndBlock:number = this._newBlockBytes.position + len;\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\n\t\t\t//block.len       = blockEndBlock;\n\t\t}\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + this._cur_block_id + \" | TypeID = \" + type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\n\t\t}\n\n\t\tthis._blocks[this._cur_block_id] = block;\n\n\t\tif ((this._version[0] == 3) && (this._version[1] == 0)) {\n\t\t\t// probably should contain some info about the type of animation\n\t\t\tvar factory = new AS2SceneGraphFactory();\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 24:\n\t\t\t\t\tthis.parseMeshLibraryBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 25:\n\t\t\t\t\tthis.parseBillBoardLibraryBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 44:\n\t\t\t\t\tthis.parseAudioBlock(this._cur_block_id, factory);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 133:\n\t\t\t\t\tthis.parseTimeLine(this._cur_block_id, factory);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 134:\n\t\t\t\t\tthis.paresTextField(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 135:\n\t\t\t\t\tthis.parseTesselatedFont(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 136:\n\t\t\t\t\tthis.parseTextFormat(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ((this._version[0] > 2)||((this._version[0] >= 2) && (this._version[1] >= 1))) {\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 11:\n\t\t\t\t\tthis.parsePrimitves(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 31:\n\t\t\t\t\tthis.parseSkyboxInstance(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 41:\n\t\t\t\t\tthis.parseLight(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 42:\n\t\t\t\t\tthis.parseCamera(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t//  case 43:\n\t\t\t\t//      parseTextureProjector(_cur_block_id);\n\t\t\t\t//      isParsed = true;\n\t\t\t\t//      break;\n\n\t\t\t\tcase 51:\n\t\t\t\t\tthis.parseLightPicker(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 81:\n\t\t\t\t\tthis.parseMaterial_v1(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 83:\n\t\t\t\t\tthis.parseCubeTexture(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 91:\n\t\t\t\t\tthis.parseSharedMethodBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 92:\n\t\t\t\t\tthis.parseShadowMethodBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 111:\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id, true);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 112:\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 113:\n\t\t\t\t\tthis.parseVertexAnimationSet(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 122:\n\t\t\t\t\tthis.parseAnimatorSet(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 253:\n\t\t\t\t\tthis.parseCommand(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t//*/\n\t\t}\n\t\t//*\n\t\tif (isParsed == false) {\n\t\t\tswitch (type) {\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.parseTriangleGeometrieBlock(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 22:\n\t\t\t\t\tthis.parseContainer(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 23:\n\t\t\t\t\tthis.parseMeshInstance(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 81:\n\t\t\t\t\tthis.parseMaterial(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 82:\n\t\t\t\t\tthis.parseTexture(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 101:\n\t\t\t\t\tthis.parseSkeleton(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 102:\n\t\t\t\t\tthis.parseSkeletonPose(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 103:\n\t\t\t\t\tthis.parseSkeletonAnimation(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 121:\n\t\t\t\t//this.parseUVAnimation(this._cur_block_id);\n\t\t\t\t//break;\n\t\t\t\tcase 254:\n\t\t\t\t\tthis.parseNameSpace(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 255:\n\t\t\t\t\tthis.parseMetaData(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"AWDBlock:   Unknown BlockType  (BlockID = \" + this._cur_block_id + \") - Skip \" + len + \" bytes\");\n\t\t\t\t\t}\n\t\t\t\t\tthis._newBlockBytes.position += len;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t//*/\n\n\t\tvar msgCnt:number = 0;\n\t\tif (this._newBlockBytes.position == blockEndBlock) {\n\t\t\tif (this._debug) {\n\t\t\t\tif (block.errorMessages) {\n\t\t\t\t\twhile (msgCnt < block.errorMessages.length) {\n\t\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\n\t\t\t\t\t\tmsgCnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._debug) {\n\t\t\t\tconsole.log(\"\\n\");\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._debug) {\n\n\t\t\t\tconsole.log(\"  (!)(!)(!) Error while reading AWDBlock ID \" + this._cur_block_id + \" = skip to next block\");\n\n\t\t\t\tif (block.errorMessages) {\n\t\t\t\t\twhile (msgCnt < block.errorMessages.length) {\n\t\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\n\t\t\t\t\t\tmsgCnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._body.position = blockEndAll;\n\t\tthis._newBlockBytes = null;\n\n\t}\n\n\n\t//--Parser Blocks---------------------------------------------------------------------------\n\n\n\tprivate parseTesselatedFont(blockID:number):void {\n\t\tvar name:string = this.parseVarStr();\n\t\tthis._blocks[blockID].name = name;\n\t\t//console.log(\"Font name = \"+this._blocks[blockID].name);\n\t\tvar font_style_cnt:number = this._newBlockBytes.readUnsignedInt();\n\t\t//console.log(\"Font font_style_cnt = \"+font_style_cnt);\n\t\tvar new_font:Font=new Font();\n\t\tfor (var i:number = 0; i < font_style_cnt; ++i) {\n\t\t\tvar font_style_name:string = this.parseVarStr();\n\t\t\t//console.log(\"Font font_style_name = \"+font_style_name);\n\t\t\tvar new_font_style:TesselatedFontTable=new_font.get_font_table(font_style_name);\n\t\t\tnew_font_style.set_font_em_size(this._newBlockBytes.readUnsignedInt());\n\t\t\t//console.log(\"Font new_font_style.font_em_size = \"+new_font_style.get_font_em_size);\n\t\t\tvar font_style_char_cnt:number = this._newBlockBytes.readUnsignedInt();\n\t\t\t//console.log(\"Font font_style_char_cnt = \"+font_style_char_cnt);\n\t\t\tfor (var i:number = 0; i < font_style_char_cnt; ++i) {\n\n\t\t\t\tvar font_style_char:number = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"Font font_style_char = \"+font_style_char);\n\t\t\t\t// todo: this is basically a simplified version of the subgeom-parsing done in parseTriangleGeometry. Make a parseSubGeom() instead (?)\n\t\t\t\tvar sm_len:number = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tvar sm_end:number = this._newBlockBytes.position + sm_len;\n\t\t\t\t//console.log(\"Font sm_len = \"+sm_len);\n\n\t\t\t\t//this.parseProperties(null); // no properties for font-table subgeos\n\t\t\t\t// Loop through data streams\n\t\t\t\twhile (this._newBlockBytes.position < sm_end) {\n\t\t\t\t\tvar idx:number = 0;\n\t\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\n\n\t\t\t\t\t// Type, field type, length\n\t\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\n\n\t\t\t\t\tif (str_type == 2) {//face indicies positions\n\t\t\t\t\t\tvar indices:Array<number> = new Array<number>();\n\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\t\tindices[idx++] = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\n\t\t\t\t\t\tvar idx_pos:number = 0;\n\t\t\t\t\t\tvar idx_curves:number = 0;\n\t\t\t\t\t\tvar idx_uvs:number = 0;\n\n\t\t\t\t\t\tvar positions:Array<number> = new Array<number>();\n\t\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\n\t\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// x\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// y\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// type\n\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.readNumber(this._accuracyGeo);// curve value 1\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.readNumber(this._accuracyGeo);// curve value 2\n\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.readNumber(this._accuracyGeo);// curve value 1\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.readNumber(this._accuracyGeo);// curve value 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//this.parseProperties(null);// no attributes for font-table subgeos\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\n\t\t\t\tcurve_sub_geom.updateIndices(indices);\n\t\t\t\tcurve_sub_geom.updatePositions(positions);\n\t\t\t\tcurve_sub_geom.updateCurves(curveData);\n\t\t\t\tcurve_sub_geom.updateUVs(uvs);\n\t\t\t\tnew_font_style.set_subgeo_for_char(font_style_char.toString(), curve_sub_geom);\n\t\t\t}\n\t\t\tconsole.log(\"Parsed a font-table\");\n\n\t\t}\n\t\t//console.log(\"Parsed a font\");\n\t\tthis.parseProperties(null);\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset>new_font, name);\n\t\tthis._blocks[blockID].data = new_font;\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a font: Name = '\" + name);\n\t\t}\n\n\t}\n\n\tprivate parseTextFormat(blockID:number):void {\n\t\tvar name:string = this.parseVarStr();\n\t\tthis._blocks[blockID].name = name;\n\t\t//console.log(\"this._blocks[blockID].name  '\" + this._blocks[blockID].name );\n\t\tvar font_id:number = this._newBlockBytes.readUnsignedInt();\n\t\t//console.log(\"font_id  '\" + font_id);\n\t\tvar font_style_name:string = this.parseVarStr();\n\t\t//console.log(\"font_style_name  '\" + font_style_name);\n\t\tvar returnArrayFont:Array<any> = this.getAssetByID(font_id, [AssetType.FONT]);\n\t\tvar font:Font;\n\t\tif (returnArrayFont[0]) {\n\t\t\tfont = <Font> returnArrayFont[1];\n\t\t} else {\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Font for this TextFormat. A empty Font is created!\");\n\t\t\tfont = new Font();\n\t\t}\n\t\tvar newTextFormat:TextFormat = new TextFormat();\n\t\tnewTextFormat.font_name = font.name;\n\t\tvar font_table:TesselatedFontTable = font.get_font_table(font_style_name);\n\t\tif(font_table!=null){\n\t\t\tnewTextFormat.font_style = font_style_name;\n\t\t\tnewTextFormat.font_table = font_table;\n\t\t}\n\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\n\t\t//console.log(\"mat  '\" + data_id);\n\t\tvar mat:BasicMaterial;\n\t\tvar returnedArrayMaterial:Array<any> = this.getAssetByID(data_id, [AssetType.MATERIAL]);\n\n\t\tif (returnedArrayMaterial[0]) {\n\t\t\tmat = <BasicMaterial> returnedArrayMaterial[1];\n\t\t} else {\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Material for this TextFormat. Default Material will be used!\");\n\t\t\tmat = new BasicMaterial();\n\t\t}\n\t\tmat.bothSides=true;\n\n\t\tvar num_uv_values:number = this._newBlockBytes.readUnsignedByte();\n\t\t//console.log(\"num_uv_values  '\" + num_uv_values);\n\t\tfor(var uvcnt:number=0; uvcnt<num_uv_values; uvcnt++){\n\t\t\tvar uv_value:number=this._newBlockBytes.readFloat();\n\t\t\t//console.log(\"uv_value  '\" + uv_value);\n\t\t}\n\t\tvar format_props:AWDProperties = this.parseProperties({1:AWDParser.UINT16, 2:AWDParser.UINT16, 3:AWDParser.UINT8,4:AWDParser.UINT8,5:AWDParser.UINT8});\n\n\t\tnewTextFormat.size = format_props.get(1,12);\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\n\t\t//newTextFormat.rotated = format_props.get(3,false);\n\t\tnewTextFormat.kerning = format_props.get(4,true);\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\n\t\tnewTextFormat.material = mat;\n\t\tthis.parseUserAttributes();// textformat has no extra-properties\n\t\t//newTextFormat.extra =\n\n\t\tthis._pFinalizeAsset(<IAsset> newTextFormat, name);\n\t\tthis._blocks[blockID].data = newTextFormat;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a TextFormat: Name = '\" + name + \" font: \"+font.name);\n\t\t}\n\n\t}\n\tprivate paresTextField(blockID:number):void {\n\t\tvar name:string = this.parseVarStr();\n\t\tthis._blocks[blockID].name = name;\n\t\t//console.log(\"name  '\" + name);\n\t\tvar newTextField:TextField = new TextField();\n\t\tvar num_paragraphs:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar complete_text:string = \"\";\n\t\t//console.log(\"num_paragraphs  '\" + num_paragraphs);\n\t\tfor(var paracnt:number=0; paracnt<num_paragraphs; paracnt++){\n\n\t\t\tvar num_textruns:number = this._newBlockBytes.readUnsignedInt();\n\t\t\t//console.log(\"num_textruns  '\" + num_textruns);\n\t\t\tfor(var textrun_cnt:number=0; textrun_cnt<num_textruns; textrun_cnt++) {\n\n\t\t\t\tvar format_id:number = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"format_id  '\" + format_id);\n\t\t\t\tvar text_format:TextFormat;\n\t\t\t\tvar textFormatArray:Array<any> = this.getAssetByID(format_id, [AssetType.TEXTFORMAT]);\n\t\t\t\tif (textFormatArray[0]) {\n\t\t\t\t\ttext_format = <TextFormat> textFormatArray[1];\n\t\t\t\t} else {\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find a Material for this Billboard. A empty material is created!\");\n\t\t\t\t\ttext_format = new TextFormat();\n\t\t\t\t}\n\t\t\t\t//console.log(\"text_format  '\" + text_format.name);\n\t\t\t\tvar txt_length = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"txt_length  '\" + txt_length);\n\t\t\t\tif (txt_length > 0) {\n\t\t\t\t\tvar this_txt:string = this._newBlockBytes.readUTFBytes(txt_length);\n\t\t\t\t\tnewTextField.appendText(this_txt, text_format);\n\t\t\t\t\tcomplete_text+=this_txt;\n\t\t\t\t\t//console.log(\"this_txt  '\" + this_txt);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnewTextField.closeParagraph();\n\t\t}\n\t\tnewTextField.construct_geometry();\n\t\t// todo: optional matrix etc can be put in properties.\n\t\tthis.parseProperties(null);\n\n\t\tnewTextField.extra = this.parseUserAttributes();\n\n\t\t//console.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\n\t\tthis._pFinalizeAsset(<IAsset> newTextField, name);\n\t\tthis._blocks[blockID].data = newTextField;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\n\t\t}\n\n\t}\n\n\t// Block ID = 25\n\tprivate parseBillBoardLibraryBlock(blockID:number):void {\n\n\t\tvar name:string = this.parseVarStr();\n\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar mat:BasicMaterial;\n\t\tvar returnedArrayMaterial:Array<any> = this.getAssetByID(data_id, [AssetType.MATERIAL]);\n\n\t\tif (returnedArrayMaterial[0]) {\n\t\t\tmat = <BasicMaterial> returnedArrayMaterial[1];\n\t\t} else {\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Material for this Billboard. A empty material is created!\");\n\t\t\tmat = new BasicMaterial();\n\t\t}\n\t\tmat.bothSides=true;\n\t\tvar billboard:Billboard = new Billboard(mat);\n\n\t\t// todo: optional matrix etc can be put in properties.\n\t\tthis.parseProperties(null);\n\n\t\tbillboard.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> billboard, name);\n\t\tthis._blocks[blockID].data = billboard;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a Library-Billboard: Name = '\" + name + \"| Material-Name = \" + mat.name);\n\t\t}\n\t}\n\t// Block ID = 24\n\tprivate parseMeshLibraryBlock(blockID:number):void {\n\t\tvar num_materials:number;\n\t\tvar materials_parsed:number;\n\n\t\tvar name:string = this.parseVarStr();\n\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar geom:Geometry;\n\t\tvar returnedArrayGeometry:Array<any> = this.getAssetByID(data_id, [AssetType.GEOMETRY])\n\n\t\tif (returnedArrayGeometry[0]) {\n\t\t\tgeom = <Geometry> returnedArrayGeometry[1];\n\t\t} else {\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Geometry for this Mesh. A empty Geometry is created!\");\n\t\t\tgeom = new Geometry();\n\t\t}\n\n\t\tthis._blocks[blockID].geoID = data_id;\n\t\tvar materials:Array<MaterialBase> = new Array<MaterialBase>();\n\t\tnum_materials = this._newBlockBytes.readUnsignedShort();\n\n\t\tvar materialNames:Array<string> = new Array<string>();\n\t\tmaterials_parsed = 0;\n\n\t\tvar returnedArrayMaterial:Array<any>;\n\n\t\twhile (materials_parsed < num_materials) {\n\t\t\tvar mat_id:number;\n\t\t\tmat_id = this._newBlockBytes.readUnsignedInt();\n\t\t\treturnedArrayMaterial = this.getAssetByID(mat_id, [AssetType.MATERIAL])\n\t\t\tif ((!returnedArrayMaterial[0]) && (mat_id > 0)) {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find Material Nr \" + materials_parsed + \" (ID = \" + mat_id + \" ) for this Mesh\");\n\t\t\t}\n\n\t\t\tvar m:MaterialBase = <MaterialBase> returnedArrayMaterial[1];\n\n\t\t\tmaterials.push(m);\n\t\t\tmaterialNames.push(m.name);\n\n\t\t\tmaterials_parsed++;\n\t\t}\n\n\t\tvar mesh:Mesh = new Mesh(geom, null);\n\n\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\n\t\t\tmesh.material = materials[0];\n\t\t} else if (materials.length > 1) {\n\t\t\tvar i:number;\n\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\n\t\t\t}\n\t\t}\n\t\tthis.parseProperties(null);\n\t\tmesh.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\n\t\tthis._blocks[blockID].data = mesh;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a Library-Mesh: Name = '\" + name + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\n\t\t}\n\t}\n\tprivate parseAudioBlock(blockID:number, factory:TimelineSceneGraphFactory):void {\n\n\t\t//var asset:Audio;todo create asset for audio\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar data_len:number;\n\n\t\t//this._texture_users[this._cur_block_id.toString()] = [];\n\n\t\t// External\n\t\tif (type == 0) {\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\tvar url:string;\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\n\t\t\t// todo parser needs to be able to handle mp3 and wav files if we trigger the loading of external ressource\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\n\t\t\tconsole.log(\"Audio url = \"+url);\n\n\t\t} else {\n\t\t\t// todo: exporter does not export embed sounds yet\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\n\t\t\tvar data:ByteArray;\n\t\t\tdata = new ByteArray();\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t// todo parse sound from bytes\n\t\t\t// this._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.by(data), true);\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\n\n\t\t}\n\n\t\t// Ignore for now\n\t\tthis.parseProperties(null);\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\n\t\tthis._pPauseAndRetrieveDependencies();\n\t\t//this._blocks[blockID].data = asset;todo\n\n\t\tif (this._debug) {\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Audio file\");\n\t\t}\n\t}\n\n\t//Block ID = 4\n\tprivate parseTimeLine(blockID:number, factory:TimelineSceneGraphFactory):void {\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar k:number;\n\t\tvar timeLineContainer = factory.createMovieClip();\n\t\tvar name = this.parseVarStr();\n\t\tvar isScene = !!this._newBlockBytes.readUnsignedByte();\n\t\tvar sceneID = this._newBlockBytes.readUnsignedByte();\n\t\tvar fps:number = this._newBlockBytes.readFloat();\n\t\tvar ms_per_frame = 1000 / fps;\n\t\tvar numFrames = this._newBlockBytes.readUnsignedShort();\n\t\tvar objectIDMap : { [id:string]:number; } = {};\n\n\t\t// var previousTimeLine:TimeLineFrame;\n\t\t// var fill_props:AWDProperties = this.parseProperties({1:AWDParser.UINT32});// { 1:UINT32, 6:AWDSTRING }  ); //; , 2:UINT32, 3:UINT32, 5:BOOL } );\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| isScene = \" + isScene + \"| sceneID = \" + sceneID + \"| numFrames = \" + numFrames);\n\n\t\tvar totalDuration = 0;\n\t\tfor (i = 0; i < numFrames; i++) {\n\n\t\t\tvar frame = new TimelineKeyFrame();\n\t\t\tvar traceString = \"frame = \" + i;\n\t\t\t// TODO: remove the ms_per_frame to set the duration in frames\n\t\t\tvar frameDuration = this._newBlockBytes.readUnsignedInt() * ms_per_frame;\n\t\t\tframe.setFrameTime(totalDuration, frameDuration);\n\t\t\ttotalDuration += frameDuration;\n\t\t\t//console.log(\"duration = \" + frameDuration);\n\t\t\ttraceString += \"duration = \" + frameDuration;\n\n\t\t\tvar numLabels = this._newBlockBytes.readUnsignedShort();\n\t\t\tfor (j = 0; j < numLabels; j++) {\n\t\t\t\tvar labelType = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tvar label = this.parseVarStr();\n\t\t\t\t// TODO: Handle labels differently\n\t\t\t\t//timeLineContainer.addFrameLabel(new FrameLabel(label, labelType, frame));\n\t\t\t\ttraceString += \"\\n     label = \" + label + \" - labelType = \" + labelType;\n\t\t\t}\n\n\t\t\tvar numCommands = this._newBlockBytes.readUnsignedShort();\n\t\t\ttraceString += \"\\n      Commands \" + numCommands;\n\t\t\tvar hasDepthChanges = false;\n\t\t\tvar commandString = \"\";\n\t\t\tfor (j = 0; j < numCommands; j++) {\n\t\t\t\tvar objectID:number;\n\t\t\t\tvar resourceID:number;\n\t\t\t\tvar commandType = this._newBlockBytes.readUnsignedShort();\n\n\t\t\t\t// 1 = Add object by local id (awd-block-id) + update properties\n\t\t\t\t// 2 = Add object by global id (string identifier) + update properties !Not used yet.!\n\t\t\t\t// 3 = UpdateObject - update a object that is already present\n\t\t\t\t// 4 = remove object\n\t\t\t\t// 5 = add / update sound\n\n\t\t\t\tswitch (commandType) {\n\n\t\t\t\t\tcase 1:\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tvar valid_command:boolean = false;\n\t\t\t\t\t\tobjectID = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\tvar instanceID = 0; // must be set in folling conditions:\n\t\t\t\t\t\tif (commandType == 1) {\n\t\t\t\t\t\t\t// this commands looks for a object by awd-id and puts it into the timeline\n\t\t\t\t\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\t\tvar instanceName = this.parseVarStr();\n\t\t\t\t\t\t\t// sound is added to timeline with dedicated Command, as it is no display-object (has no matrix etc)\n\t\t\t\t\t\t\t// check if a Geometry can be found at the resourceID (AWD-ID)\n\t\t\t\t\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this._blocks[resourceID].data;\n\t\t\t\t\t\t\tif (cmd_asset != null) {\n\t\t\t\t\t\t\t\tinstanceID = timeLineContainer.registerPotentialChild(cmd_asset);\n\t\t\t\t\t\t\t\tobjectIDMap[objectID] = instanceID;\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new AddChildCommand(instanceID));\n\n\t\t\t\t\t\t\t\tif (instanceName.length) {\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(instanceID, \"name\", instanceName));\n\t\t\t\t\t\t\t\t\tcommandString += \"\\n                instanceName = \" + instanceName;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvalid_command = true;\n\t\t\t\t\t\t\t\tcommandString += \"\\n      - Add new Resource = \" + resourceID + \" as object_id = \" + objectID;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tcommandString += \"\\n      - ERROR - object_id = \" + objectID + \" - NO DISPLAY_OBJECT AT ID = \" + resourceID;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (commandType == 3) {\n\t\t\t\t\t\t\tinstanceID = objectIDMap[objectID];\n\t\t\t\t\t\t\tvalid_command = true;\n\t\t\t\t\t\t\tcommandString += \"\\n      - Update object_id = \" + objectID;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// read the command properties\n\t\t\t\t\t\t// 1: matrix2d (6 x number with storage precision matrix)\n\t\t\t\t\t\t// 2: matrix2d (12 x number with storage precision matrix) not used yet\n\t\t\t\t\t\t// 3: colortransform (20 x number with storage precision properties)\n\t\t\t\t\t\t// 4: blendmode (uint8)\n\t\t\t\t\t\t// 5: visibilty (uint8)\n\t\t\t\t\t\t// 6: depth (uint32)\n\t\t\t\t\t\t// 7: mask (uint32)\n\t\t\t\t\t\tvar props:AWDProperties = this.parseProperties({\n\t\t\t\t\t\t\t1: this._matrixNrType,\n\t\t\t\t\t\t\t2: this._matrixNrType,\n\t\t\t\t\t\t\t3: this._propsNrType,\n\t\t\t\t\t\t\t4: AWDParser.UINT8,\n\t\t\t\t\t\t\t5: AWDParser.UINT8,\n\t\t\t\t\t\t\t6: AWDParser.UINT32,\n\t\t\t\t\t\t\t7: AWDParser.UINT32\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (valid_command) {\n\n\t\t\t\t\t\t\tvar matrix_2d:Float32Array = props.get(1, []);\n\t\t\t\t\t\t\t//var matrix_3d:Float32Array = props.get(2, []);\n\t\t\t\t\t\t\tvar colortransform:Float32Array = props.get(3, []);\n\t\t\t\t\t\t\tvar blendmode:number = props.get(4, -1);\n\t\t\t\t\t\t\tvar visibilty:number = props.get(5, -1);\n\t\t\t\t\t\t\tvar depth:number = props.get(6, -1);\n\t\t\t\t\t\t\tvar mask:Array<number> = props.get(7, []);\n\t\t\t\t\t\t\t// todo: handle filters\n\n\t\t\t\t\t\t\t//matrix2d must provide 6 values to be valid\n\n\t\t\t\t\t\t\tcommandString += \"\\n                transformArray = \" + matrix_2d.length;\n\t\t\t\t\t\t\tif (matrix_2d.length == 6) {\n\t\t\t\t\t\t\t\tvar thisMatrix = new Matrix3D();\n\t\t\t\t\t\t\t\tthisMatrix.position = new Vector3D(matrix_2d[4], matrix_2d[5], 0);\n\t\t\t\t\t\t\t\t// todo is this correct for 2d -> 3d scale and rotation. (i doubt it)\n\t\t\t\t\t\t\t\tthisMatrix.rawData[0] = matrix_2d[0];\n\t\t\t\t\t\t\t\tthisMatrix.rawData[1] = matrix_2d[1];\n\t\t\t\t\t\t\t\tthisMatrix.rawData[4] = matrix_2d[2];\n\t\t\t\t\t\t\t\tthisMatrix.rawData[5] = matrix_2d[3];\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(instanceID, \"_iMatrix3D\", thisMatrix));\n\n\t\t\t\t\t\t\t\tcommandString += \"\\n                transformArray = \" + matrix_2d;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//matrix2d must provide 20 values to be valid\n\t\t\t\t\t\t\tif (colortransform.length == 20) {\n\t\t\t\t\t\t\t\t// TODO: set ColorTransform on objectProps\n\t\t\t\t\t\t\t\tcommandString += \"\\n                colorMatrix = \" + colortransform;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// blendmode must be positive to be valid\n\t\t\t\t\t\t\tif (blendmode >= 0) {\n\t\t\t\t\t\t\t\tvar blendmode_string:string = this.blendModeDic[blendmode];\n\t\t\t\t\t\t\t\t// TODO: set Blendmode on objectProps\n\t\t\t\t\t\t\t\tcommandString += \"\\n                BlendMode = \" + blendmode_string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// visibilty must be positive to be valid\n\t\t\t\t\t\t\tif (visibilty >= 0) {\n\t\t\t\t\t\t\t\tif (visibilty == 0)\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(instanceID, \"visible\", false));\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(instanceID, \"visible\", true));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// depth must be positive to be valid\n\t\t\t\t\t\t\tif (depth >= 0) {\n\t\t\t\t\t\t\t\tcommandString += \"\\n                Depth = \" + depth;\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(instanceID, \"__AS2Depth\", depth));\n\t\t\t\t\t\t\t\thasDepthChanges = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// mask must be positive to be valid. i think only add-commands will have this value.\n\t\t\t\t\t\t\t// e.g. it should never be updated on already existing objects. (because depth of objects can change, i am not sure)\n\t\t\t\t\t\t\tif (mask.length > 0) {\n\t\t\t\t\t\t\t\tif((mask.length==1)&&(mask[0]<0)){\n\t\t\t\t\t\t\t\t\t// TODO: this object is used as mask\n\t\t\t\t\t\t\t\t\tcommandString += \"\\n                obj is used as mask\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t// TODO: this object is masked by one or more objects defined by ids in mask-array\n\t\t\t\t\t\t\t\t\tcommandString += \"\\n                obj is masked by \"+mask.length+\" objects\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// todo: handle filters\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 4:\n\n\t\t\t\t\t\t// Remove Object Command\n\t\t\t\t\t\tobjectID = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\tvar instanceID = objectIDMap[objectID];\n\t\t\t\t\t\tframe.addConstructCommand(new RemoveChildCommand(instanceID));\n\t\t\t\t\t\tcommandString += \"\\n       - Remove object with ID: \" + objectID;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 5:\n\n\t\t\t\t\t\t// Add Sound Command\n\t\t\t\t\t\t// TODO: create CommandPropsSound and check which asset to use\n\t\t\t\t\t\tobjectID = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\t// TODO: implement sound in timeline\n\t\t\t\t\t\tcommandString += \"\\n      - Add new Sound AWD-ID = \" + resourceID.toString() + \" as object_id = \" + objectID.toString();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tcommandString += \"\\n       - Unknown Command Type = \" + commandType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasDepthChanges) {\n\t\t\t\t// only want to do this once after all children's depth values are updated\n\t\t\t\tframe.addConstructCommand(new ApplyAS2DepthsCommand());\n\t\t\t\thasDepthChanges = false;\n\t\t\t}\n\n\t\t\tvar length_code = this._newBlockBytes.readUnsignedInt();\n\t\t\tif (length_code > 0) {\n\t\t\t\t// TODO: Script should probably not be attached to keyframes?\n\t\t\t\tvar frame_code = this._newBlockBytes.readUTFBytes(length_code);\n\t\t\t\t//frame.addToScript(frame_code);\n\t\t\t\ttraceString += \"\\nframe-code = \" + frame_code;\n\t\t\t}\n\t\t\ttraceString += commandString;\n\t\t\t//trace(\"length_code = \"+length_code+\" frame_code = \"+frame_code);\n\t\t\tthis._newBlockBytes.readUnsignedInt();// user attributes - skip for now\n\t\t\tconsole.log(traceString);\n\t\t\ttimeLineContainer.addFrame(frame);\n\n\t\t}\n\n\t\tthis._pFinalizeAsset(<IAsset>timeLineContainer, name);\n\t\tthis._blocks[blockID].data = timeLineContainer;\n\t\tthis.parseProperties(null);\n\t\tthis.parseUserAttributes();\n\t}\n\t//Block ID = 1\n\tprivate parseTriangleGeometrieBlock(blockID:number):void\n\t{\n\n\t\tvar geom:Geometry = new Geometry();\n\n\t\t// Read name and sub count\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_subs:number = this._newBlockBytes.readUnsignedShort();\n\n\t\t// Read optional properties\n\t\tvar props:AWDProperties = this.parseProperties({1:this._geoNrType, 2:this._geoNrType});\n\t\tvar geoScaleU:number = props.get(1, 1);\n\t\tvar geoScaleV:number = props.get(2, 1);\n\n\t\t// Loop through sub meshes\n\t\tvar subs_parsed:number = 0;\n\t\twhile (subs_parsed < num_subs) {\n\t\t\tvar is_curve_geom:boolean=false;\n\t\t\tvar i:number;\n\t\t\tvar sm_len:number, sm_end:number;\n\t\t\tvar w_indices:Array<number>;\n\t\t\tvar weights:Array<number>;\n\n\t\t\tsm_len = this._newBlockBytes.readUnsignedInt();\n\t\t\tsm_end = this._newBlockBytes.position + sm_len;\n\n\t\t\tvar subProps:AWDProperties = this.parseProperties({1:this._geoNrType, 2:this._geoNrType});\n\t\t\t// Loop through data streams\n\t\t\twhile (this._newBlockBytes.position < sm_end) {\n\t\t\t\tvar idx:number = 0;\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\n\n\t\t\t\t// Type, field type, length\n\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\n\n\t\t\t\tvar x:number, y:number, z:number;\n\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo);\n\n\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\tindices[idx++] = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 3) {\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\tuvs[idx++] = this.readNumber(this._accuracyGeo);\n\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 4) {\n\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\tnormals[idx++] = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 6) {\n\t\t\t\t\tw_indices = Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\tw_indices[idx++] = this._newBlockBytes.readUnsignedShort()*3;\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 7) {\n\n\t\t\t\t\tweights = new Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\tweights[idx++] = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\n\t\t\t\t\tis_curve_geom=true;\n\t\t\t\t\tvar idx_pos:number = 0;\n\t\t\t\t\tvar idx_curves:number = 0;\n\t\t\t\t\tvar idx_uvs:number = 0;\n\n\t\t\t\t\tvar positions:Array<number> = new Array<number>();\n\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// x\n\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// y\n\t\t\t\t\t\tpositions[idx_pos++] =  this.readNumber(this._accuracyGeo);// type\n\n\t\t\t\t\t\tcurveData[idx_curves++] = this.readNumber(this._accuracyGeo);// curve value 1\n\t\t\t\t\t\tcurveData[idx_curves++] = this.readNumber(this._accuracyGeo);// curve value 2\n\n\t\t\t\t\t\tuvs[idx_uvs++] = this.readNumber(this._accuracyGeo);// curve value 1\n\t\t\t\t\t\tuvs[idx_uvs++] = this.readNumber(this._accuracyGeo);// curve value 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.parseUserAttributes(); // Ignore sub-mesh attributes for now\n\t\t\tif(is_curve_geom){\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\n\t\t\t\tcurve_sub_geom.updateIndices(indices);\n\t\t\t\tcurve_sub_geom.updatePositions(positions);\n\t\t\t\tcurve_sub_geom.updateCurves(curveData);\n\t\t\t\tcurve_sub_geom.updateUVs(uvs);\n\t\t\t\tgeom.addSubGeometry(curve_sub_geom);\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Parsed a CurveSubGeometry\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar triangle_sub_geom = new TriangleSubGeometry(true);\n\t\t\t\tif (weights)\n\t\t\t\t\ttriangle_sub_geom.jointsPerVertex = weights.length / (verts.length / 3);\n\t\t\t\tif (normals)\n\t\t\t\t\ttriangle_sub_geom.autoDeriveNormals = false;\n\t\t\t\tif (uvs)\n\t\t\t\t\ttriangle_sub_geom.autoDeriveUVs = false;\n\t\t\t\t//triangle_sub_geom.autoDeriveNormals = false;\n\t\t\t\tif (true) {\n\t\t\t\t\ttriangle_sub_geom.autoDeriveTangents = true;\n\t\t\t\t}\n\t\t\t\ttriangle_sub_geom.updateIndices(indices);\n\t\t\t\ttriangle_sub_geom.updatePositions(verts);\n\t\t\t\ttriangle_sub_geom.updateVertexNormals(normals);\n\t\t\t\ttriangle_sub_geom.updateUVs(uvs);\n\t\t\t\ttriangle_sub_geom.updateVertexTangents(null);\n\t\t\t\ttriangle_sub_geom.updateJointWeights(weights);\n\t\t\t\ttriangle_sub_geom.updateJointIndices(w_indices);\n\n\t\t\t\tvar scaleU:number = subProps.get(1, 1);\n\t\t\t\tvar scaleV:number = subProps.get(2, 1);\n\t\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\n\n\t\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\n\t\t\t\t\tsetSubUVs = true;\n\t\t\t\t\tscaleU = geoScaleU / scaleU;\n\t\t\t\t\tscaleV = geoScaleV / scaleV;\n\t\t\t\t}\n\n\t\t\t\tif (setSubUVs)\n\t\t\t\t\ttriangle_sub_geom.scaleUV(scaleU, scaleV);\n\t\t\t\tgeom.addSubGeometry(triangle_sub_geom);\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Parsed a TriangleSubGeometry\");\n\t\t\t}\n\n\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\n\t\t\t// when creating meshes (and their material assignments.)\n\n\t\t\tsubs_parsed++;\n\t\t}\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\n\t\t\tgeom.scaleUV(geoScaleU, geoScaleV);\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> geom, name);\n\t\tthis._blocks[blockID].data = geom;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a TriangleGeometry: Name = \" + name);\n\t\t}\n\n\t}\n\n\n\t//Block ID = 11\n\tprivate parsePrimitves(blockID:number):void\n\t{\n\t\tvar name:string;\n\t\tvar prefab:PrefabBase;\n\t\tvar primType:number;\n\t\tvar subs_parsed:number;\n\t\tvar props:AWDProperties;\n\t\tvar bsm:Matrix3D;\n\n\t\t// Read name and sub count\n\t\tname = this.parseVarStr();\n\t\tprimType = this._newBlockBytes.readUnsignedByte();\n\t\tprops = this.parseProperties({101:this._geoNrType, 102:this._geoNrType, 103:this._geoNrType, 110:this._geoNrType, 111:this._geoNrType, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 303:AWDParser.UINT16, 701:AWDParser.BOOL, 702:AWDParser.BOOL, 703:AWDParser.BOOL, 704:AWDParser.BOOL});\n\n\t\tvar primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"]\n\n\t\tswitch (primType) {\n\t\t\t// to do, not all properties are set on all primitives\n\n\t\t\tcase 1:\n\t\t\t\tprefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tprefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\tprefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 4:\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\n\t\t\t\tif (!props.get(701, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\n\t\t\t\tif (!props.get(702, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\n\t\t\t\tif (!props.get(703, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\t\tprefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 6:\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 7:\n\t\t\t\tprefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tprefab = new PrefabBase();\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\n\t\t\t//geom.subGeometries;\n\t\t\t//geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\n\t\t}\n\n\t\tthis.parseUserAttributes();\n\t\tprefab.name = name;\n\t\tthis._pFinalizeAsset(prefab, name);\n\t\tthis._blocks[blockID].data = prefab;\n\n\t\tif (this._debug) {\n\t\t\tif ((primType < 0) || (primType > 7)) {\n\t\t\t\tprimType = 0;\n\t\t\t}\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + name + \"| type = \" + primitiveTypes[primType]);\n\t\t}\n\t}\n\n\t// Block ID = 22\n\tprivate parseContainer(blockID:number):void\n\t{\n\t\tvar name:string;\n\t\tvar par_id:number;\n\t\tvar mtx:Matrix3D;\n\t\tvar ctr:DisplayObjectContainer;\n\t\tvar parent:DisplayObjectContainer;\n\n\t\tpar_id = this._newBlockBytes.readUnsignedInt();\n\t\tmtx = this.parseMatrix3D();\n\t\tname = this.parseVarStr();\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tctr = new DisplayObjectContainer();\n\t\tctr.transform.matrix3D = mtx;\n\n\t\tvar returnedArray:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH]);\n\n\t\tif (returnedArray[0]) {\n\t\t\tvar obj:DisplayObject = (<DisplayObjectContainer> returnedArray[1]).addChild(ctr);\n\t\t\tparentName = (<DisplayObjectContainer> returnedArray[1]).name;\n\t\t} else if (par_id > 0) {\n\t\t\tthis._blocks[ blockID ].addError(\"Could not find a parent for this ObjectContainer3D\");\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(ctr);\n\t\t}\n\n\t\t// in AWD version 2.1 we read the Container properties\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tvar props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t}\n\t\t// in other versions we do not read the Container properties\n\t\telse {\n\t\t\tthis.parseProperties(null);\n\t\t}\n\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\n\t\tctr.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> ctr, name);\n\t\tthis._blocks[blockID].data = ctr;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + name + \"' | Parent-Name = \" + parentName);\n\t\t}\n\t}\n\n\t// Block ID = 23\n\tprivate parseMeshInstance(blockID:number):void\n\t{\n\t\tvar num_materials:number;\n\t\tvar materials_parsed:number;\n\t\tvar parent:DisplayObjectContainer;\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar geom:Geometry;\n\t\tvar returnedArrayGeometry:Array<any> = this.getAssetByID(data_id, [AssetType.GEOMETRY])\n\n\t\tif (returnedArrayGeometry[0]) {\n\t\t\tgeom = <Geometry> returnedArrayGeometry[1];\n\t\t} else {\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Geometry for this Mesh. A empty Geometry is created!\");\n\t\t\tgeom = new Geometry();\n\t\t}\n\n\t\tthis._blocks[blockID].geoID = data_id;\n\t\tvar materials:Array<MaterialBase> = new Array<MaterialBase>();\n\t\tnum_materials = this._newBlockBytes.readUnsignedShort();\n\n\t\tvar materialNames:Array<string> = new Array<string>();\n\t\tmaterials_parsed = 0;\n\n\t\tvar returnedArrayMaterial:Array<any>;\n\n\t\twhile (materials_parsed < num_materials) {\n\t\t\tvar mat_id:number;\n\t\t\tmat_id = this._newBlockBytes.readUnsignedInt();\n\t\t\treturnedArrayMaterial = this.getAssetByID(mat_id, [AssetType.MATERIAL])\n\t\t\tif ((!returnedArrayMaterial[0]) && (mat_id > 0)) {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find Material Nr \" + materials_parsed + \" (ID = \" + mat_id + \" ) for this Mesh\");\n\t\t\t}\n\n\t\t\tvar m:MaterialBase = <MaterialBase> returnedArrayMaterial[1];\n\n\t\t\tmaterials.push(m);\n\t\t\tmaterialNames.push(m.name);\n\n\t\t\tmaterials_parsed++;\n\t\t}\n\n\t\tvar mesh:Mesh = new Mesh(geom, null);\n\t\tmesh.transform.matrix3D = mtx;\n\n\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH])\n\n\t\tif (returnedArrayParent[0]) {\n\t\t\tvar objC:DisplayObjectContainer = <DisplayObjectContainer> returnedArrayParent[1];\n\t\t\tobjC.addChild(mesh);\n\t\t\tparentName = objC.name;\n\t\t} else if (par_id > 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Mesh\");\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\n\t\t}\n\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\n\t\t\tmesh.material = materials[0];\n\t\t} else if (materials.length > 1) {\n\t\t\tvar i:number;\n\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\n\t\t\t}\n\t\t}\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tvar props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8, 5:AWDParser.BOOL});\n\t\t\tmesh.pivot = new Vector3D(<number>props.get(1, 0), <number>props.get(2, 0), <number> props.get(3, 0));\n\t\t\tmesh.castsShadows = props.get(5, true);\n\t\t} else {\n\t\t\tthis.parseProperties(null);\n\t\t}\n\n\t\tmesh.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\n\t\tthis._blocks[blockID].data = mesh;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a Mesh: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\n\t\t}\n\t}\n\n\n\t//Block ID 31\n\tprivate parseSkyboxInstance(blockID:number):void\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar cubeTexAddr:number = this._newBlockBytes.readUnsignedInt();\n\n\t\tvar returnedArrayCubeTex:Array<any> = this.getAssetByID(cubeTexAddr, [AssetType.TEXTURE], \"CubeTexture\");\n\t\tif ((!returnedArrayCubeTex[0]) && (cubeTexAddr != 0))\n\t\t\tthis._blocks[blockID].addError(\"Could not find the Cubetexture (ID = \" + cubeTexAddr + \" ) for this Skybox\");\n\t\tvar asset:Skybox = new Skybox(<ImageCubeTexture> returnedArrayCubeTex[1]);\n\n\t\tthis.parseProperties(null)\n\t\tasset.extra = this.parseUserAttributes();\n\t\tthis._pFinalizeAsset(asset, name);\n\t\tthis._blocks[blockID].data = asset;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + name + \"' | CubeTexture-Name = \" + (<ImageCubeTexture> returnedArrayCubeTex[1]).name);\n\n\t}\n\n\t//Block ID = 41\n\tprivate parseLight(blockID:number):void\n\t{\n\t\tvar light:LightBase;\n\t\tvar newShadowMapper:ShadowMapperBase;\n\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\t\tvar lightType:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar props:AWDProperties = this.parseProperties({1:this._propsNrType, 2:this._propsNrType, 3:AWDParser.COLOR, 4:this._propsNrType, 5:this._propsNrType, 6:AWDParser.BOOL, 7:AWDParser.COLOR, 8:this._propsNrType, 9:AWDParser.UINT8, 10:AWDParser.UINT8, 11:this._propsNrType, 12:AWDParser.UINT16, 21:this._matrixNrType, 22:this._matrixNrType, 23:this._matrixNrType});\n\t\tvar shadowMapperType:number = props.get(9, 0);\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\n\n\t\tif (lightType == 1) {\n\t\t\tlight = new PointLight();\n\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 4) {\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlight.transform.matrix3D = mtx;\n\n\t\t}\n\n\t\tif (lightType == 2) {\n\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 1) {\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\n\t\t\t\t}\n\n\t\t\t\t//if (shadowMapperType == 2)\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\n\t\t\t\t//if (shadowMapperType == 3)\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\n\n\t\t\t}\n\n\t\t}\n\t\tlight.color = props.get(3, 0xffffff);\n\t\tlight.specular = props.get(4, 1.0);\n\t\tlight.diffuse = props.get(5, 1.0);\n\t\tlight.ambientColor = props.get(7, 0xffffff);\n\t\tlight.ambient = props.get(8, 0.0);\n\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\n\t\tif (newShadowMapper) {\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\n\t\t\t\tif (props.get(10, 1) != 1) {\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 1)];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (props.get(10, 2) != 2) {\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 2)];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlight.shadowMapper = newShadowMapper;\n\t\t\tlight.castsShadows = true;\n\t\t}\n\n\t\tif (par_id != 0) {\n\n\t\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH])\n\n\t\t\tif (returnedArrayParent[0]) {\n\t\t\t\t(<DisplayObjectContainer> returnedArrayParent[1]).addChild(light);\n\t\t\t\tparentName = (<DisplayObjectContainer> returnedArrayParent[1]).name;\n\t\t\t} else {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Light\");\n\t\t\t}\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(light);\n\t\t}\n\n\t\tthis.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(< IAsset> light, name);\n\n\t\tthis._blocks[blockID].data = light;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\n\n\t}\n\n\t//Block ID = 43\n\tprivate parseCamera(blockID:number):void\n\t{\n\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar projection:ProjectionBase;\n\n\t\tthis._newBlockBytes.readUnsignedByte(); //set as active camera\n\t\tthis._newBlockBytes.readShort(); //lengthof lenses - not used yet\n\n\t\tvar projectiontype:number = this._newBlockBytes.readShort();\n\t\tvar props:AWDProperties = this.parseProperties({101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 104:this._propsNrType});\n\n\t\tswitch (projectiontype) {\n\t\t\tcase 5001:\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\n\t\t\t\tbreak;\n\t\t\tcase 5002:\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\n\t\t\t\tbreak;\n\t\t\tcase 5003:\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\n\t\t\t\treturn;\n\t\t}\n\n\t\tvar camera:Camera = new Camera(projection);\n\t\tcamera.transform.matrix3D = mtx;\n\n\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH])\n\n\t\tif (returnedArrayParent[0]) {\n\n\t\t\tvar objC:DisplayObjectContainer = <DisplayObjectContainer> returnedArrayParent[1];\n\t\t\tobjC.addChild(camera);\n\n\t\t\tparentName = objC.name;\n\n\t\t} else if (par_id > 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Camera\");\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(camera);\n\t\t}\n\n\t\tcamera.name = name;\n\t\tprops = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\tcamera.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(camera, name);\n\n\t\tthis._blocks[blockID].data = camera\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\n\t\t}\n\n\t}\n\n\t//Block ID = 51\n\tprivate parseLightPicker(blockID:number):void\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar numLights:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\n\t\tvar k:number = 0;\n\t\tvar lightID:number = 0;\n\n\t\tvar returnedArrayLight:Array<any>;\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\n\n\t\tfor (k = 0; k < numLights; k++) {\n\t\t\tlightID = this._newBlockBytes.readUnsignedInt();\n\t\t\treturnedArrayLight = this.getAssetByID(lightID, [AssetType.LIGHT])\n\n\t\t\tif (returnedArrayLight[0]) {\n\t\t\t\tlightsArray.push(<LightBase> returnedArrayLight[1]);\n\t\t\t\tlightsArrayNames.push(( <LightBase> returnedArrayLight[1]).name);\n\n\t\t\t} else {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find a Light Nr \" + k + \" (ID = \" + lightID + \" ) for this LightPicker\");\n\t\t\t}\n\t\t}\n\n\t\tif (lightsArray.length == 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not create this LightPicker, cause no Light was found.\");\n\t\t\tthis.parseUserAttributes();\n\t\t\treturn; //return without any more parsing for this block\n\t\t}\n\n\t\tvar lightPick:LightPickerBase = new StaticLightPicker(lightsArray);\n\t\tlightPick.name = name;\n\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> lightPick, name);\n\n\t\tthis._blocks[blockID].data = lightPick\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + name + \"' | Texture-Name = \" + lightsArrayNames.toString());\n\t\t}\n\t}\n\n\t//Block ID = 81\n\tprivate parseMaterial(blockID:number):void\n\t{\n\t\t// TODO: not used\n\t\t////blockLength = block.len;\n\t\tvar name:string;\n\t\tvar type:number;\n\t\tvar props:AWDProperties;\n\t\tvar mat:MethodMaterial;\n\t\tvar attributes:Object;\n\t\tvar finalize:boolean;\n\t\tvar num_methods:number;\n\t\tvar methods_parsed:number;\n\t\tvar returnedArray:Array<any>;\n\n\t\tname = this.parseVarStr();\n\t\ttype = this._newBlockBytes.readUnsignedByte();\n\t\tnum_methods = this._newBlockBytes.readUnsignedByte();\n\n\t\t// Read material numerical properties\n\t\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\n\t\tprops = this.parseProperties({ 1:AWDParser.INT32, 2:AWDParser.BADDR, 10:this._propsNrType, 11:AWDParser.BOOL, 12:this._propsNrType, 13:AWDParser.BOOL});\n\n\t\tmethods_parsed = 0;\n\t\twhile (methods_parsed < num_methods) {\n\t\t\tvar method_type:number;\n\n\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\n\t\t\tthis.parseProperties(null);\n\t\t\tthis.parseUserAttributes();\n\t\t\tmethods_parsed += 1;\n\t\t}\n\t\tvar debugString:string = \"\";\n\t\tattributes = this.parseUserAttributes();\n\t\tif (type === 1) { // Color material\n\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\tvar color:number;\n\t\t\tcolor = props.get(1, 0xffffff);\n\t\t\tif (this.materialMode < 2) {\n\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\n\t\t\t} else {\n\t\t\t\tmat = new MethodMaterial(color);\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t}\n\t\t} else if (type === 2) {\n\t\t\tvar tex_addr:number = props.get(2, 0);\n\n\t\t\treturnedArray = this.getAssetByID(tex_addr, [AssetType.TEXTURE]);\n\n\t\t\tif ((!returnedArray[0]) && (tex_addr > 0))\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffsueTexture (ID = \" + tex_addr + \" ) for this Material\");\n\n\t\t\tmat = new MethodMaterial(<Texture2DBase> returnedArray[1]);\n\n\t\t\tif (this.materialMode < 2) {\n\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\n\t\t\t} else {\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\n\t\t\t}\n\t\t}\n\n\t\tmat.extra = attributes;\n\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\tmat.repeat = props.get(13, false);\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\n\t\tthis._blocks[blockID].data = mat;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(debugString);\n\n\t\t}\n\t}\n\n\t// Block ID = 81 AWD2.1\n\tprivate parseMaterial_v1(blockID:number):void\n\t{\n\t\tvar mat:MethodMaterial;\n\t\tvar normalTexture:Texture2DBase;\n\t\tvar specTexture:Texture2DBase;\n\t\tvar returnedArray:Array<any>;\n\n\t\tvar name:string = this.parseVarStr();\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar num_methods:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT32, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 4:AWDParser.UINT8, 5:AWDParser.BOOL, 6:AWDParser.BOOL, 7:AWDParser.BOOL, 8:AWDParser.BOOL, 9:AWDParser.UINT8, 10:this._propsNrType, 11:AWDParser.BOOL, 12:this._propsNrType, 13:AWDParser.BOOL, 15:this._propsNrType, 16:AWDParser.UINT32, 17:AWDParser.BADDR, 18:this._propsNrType, 19:this._propsNrType, 20:AWDParser.UINT32, 21:AWDParser.BADDR, 22:AWDParser.BADDR});\n\t\tvar spezialType:number = props.get(4, 0);\n\t\tvar debugString:string = \"Parsed Material \";\n\n\t\tif (spezialType >= 2) {//this is no supported material\n\t\t\tthis._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (type <= 2) {// Color material\n\t\t\tif (this.materialMode == 1)\n\t\t\t\tspezialType = 0;\n\t\t\telse if (this.materialMode == 2)\n\t\t\t\tspezialType = 1;\n\n\t\t\tif (spezialType < 2) {//this is SinglePass or MultiPass\n\n\t\t\t\tif (type == 1) {// Color material\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\n\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\n\t\t\t\t\t\tmat = new MethodMaterial(color);\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\n\n\t\t\t\t\t} else { //\tSinglePassMaterial\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\t\t\t}\n\n\t\t\t\t} else if (type == 2) {// texture material\n\t\t\t\t\tvar tex_addr:number = props.get(2, 0);//TODO temporarily swapped so that diffuse texture goes to ambient\n\t\t\t\t\treturnedArray = this.getAssetByID(tex_addr, [AssetType.TEXTURE]);\n\n\t\t\t\t\tif ((!returnedArray[0]) && (tex_addr > 0))\n\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the AmbientTexture (ID = \" + tex_addr + \" ) for this MethodMaterial\");\n\n\t\t\t\t\tvar texture:Texture2DBase = returnedArray[1];\n\n\t\t\t\t\tmat = new MethodMaterial(texture);\n\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + texture.name;\n\t\t\t\t\t} else {//\tSinglePassMaterial\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + texture.name;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar diffuseTexture:Texture2DBase;\n\t\t\t\tvar diffuseTex_addr:number = props.get(17, 0);\n\n\t\t\t\treturnedArray = this.getAssetByID(diffuseTex_addr, [AssetType.TEXTURE]);\n\n\t\t\t\tif ((!returnedArray[0]) && (diffuseTex_addr != 0)) {\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffuseTexture (ID = \" + diffuseTex_addr + \" ) for this MethodMaterial\");\n\t\t\t\t}\n\n\t\t\t\tif (returnedArray[0])\n\t\t\t\t\tdiffuseTexture = returnedArray[1];\n\n\t\t\t\tif (diffuseTexture) {\n\t\t\t\t\tmat.diffuseTexture = diffuseTexture;\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\n\t\t\t\t}\n\n\t\t\t\tvar normalTex_addr:number = props.get(3, 0);\n\n\t\t\t\treturnedArray = this.getAssetByID(normalTex_addr, [AssetType.TEXTURE]);\n\n\t\t\t\tif ((!returnedArray[0]) && (normalTex_addr != 0)) {\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the NormalTexture (ID = \" + normalTex_addr + \" ) for this MethodMaterial\");\n\t\t\t\t}\n\n\t\t\t\tif (returnedArray[0]) {\n\t\t\t\t\tnormalTexture = returnedArray[1];\n\t\t\t\t\tdebugString += \" | NormalTexture-Name = \" + normalTexture.name;\n\t\t\t\t}\n\n\t\t\t\tvar specTex_addr:number = props.get(21, 0);\n\t\t\t\treturnedArray = this.getAssetByID(specTex_addr, [AssetType.TEXTURE]);\n\n\t\t\t\tif ((!returnedArray[0]) && (specTex_addr != 0)) {\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SpecularTexture (ID = \" + specTex_addr + \" ) for this MethodMaterial\");\n\t\t\t\t}\n\t\t\t\tif (returnedArray[0]) {\n\t\t\t\t\tspecTexture = returnedArray[1];\n\t\t\t\t\tdebugString += \" | SpecularTexture-Name = \" + specTexture.name;\n\t\t\t\t}\n\n\t\t\t\tvar lightPickerAddr:number = props.get(22, 0);\n\t\t\t\treturnedArray = this.getAssetByID(lightPickerAddr, [AssetType.LIGHT_PICKER])\n\n\t\t\t\tif ((!returnedArray[0]) && (lightPickerAddr)) {\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightPicker (ID = \" + lightPickerAddr + \" ) for this MethodMaterial\");\n\t\t\t\t} else {\n\t\t\t\t\tmat.lightPicker = <LightPickerBase> returnedArray[1];\n\t\t\t\t\t//debugString+=\" | Lightpicker-Name = \"+LightPickerBase(returnedArray[1]).name;\n\t\t\t\t}\n\n\t\t\t\tmat.smooth = props.get(5, true);\n\t\t\t\tmat.mipmap = props.get(6, true);\n\t\t\t\tmat.bothSides = props.get(7, false);\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\n\t\t\t\tmat.blendMode = this.blendModeDic[props.get(9, 0)];\n\t\t\t\tmat.repeat = props.get(13, false);\n\n\t\t\t\tif (normalTexture)\n\t\t\t\t\tmat.normalMap = normalTexture;\n\n\t\t\t\tif (specTexture)\n\t\t\t\t\tmat.specularMap = specTexture;\n\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\t\t\tmat.ambient = props.get(15, 1.0);\n\t\t\t\tmat.diffuseColor = props.get(16, 0xffffff);\n\t\t\t\tmat.specular = props.get(18, 1.0);\n\t\t\t\tmat.gloss = props.get(19, 50);\n\t\t\t\tmat.specularColor = props.get(20, 0xffffff);\n\n\t\t\t\tvar methods_parsed:number = 0;\n\t\t\t\tvar targetID:number;\n\n\t\t\t\twhile (methods_parsed < num_methods) {\n\t\t\t\t\tvar method_type:number;\n\t\t\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\n\n\t\t\t\t\tprops = this.parseProperties({\n\t\t\t\t\t\t1: AWDParser.BADDR,\n\t\t\t\t\t\t2: AWDParser.BADDR,\n\t\t\t\t\t\t3: AWDParser.BADDR,\n\t\t\t\t\t\t101: this._propsNrType,\n\t\t\t\t\t\t102: this._propsNrType,\n\t\t\t\t\t\t103: this._propsNrType,\n\t\t\t\t\t\t201: AWDParser.UINT32,\n\t\t\t\t\t\t202: AWDParser.UINT32,\n\t\t\t\t\t\t301: AWDParser.UINT16,\n\t\t\t\t\t\t302: AWDParser.UINT16,\n\t\t\t\t\t\t401: AWDParser.UINT8,\n\t\t\t\t\t\t402: AWDParser.UINT8,\n\t\t\t\t\t\t601: AWDParser.COLOR,\n\t\t\t\t\t\t602: AWDParser.COLOR,\n\t\t\t\t\t\t701: AWDParser.BOOL,\n\t\t\t\t\t\t702: AWDParser.BOOL,\n\t\t\t\t\t\t801: AWDParser.MTX4x4\n\t\t\t\t\t});\n\n\t\t\t\t\tswitch (method_type) {\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffektMethod returned\n\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.EFFECTS_METHOD]);\n\n\t\t\t\t\t\t\tif (!returnedArray[0]) {\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EffectMethod (ID = \" + targetID + \" ) for this Material\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmat.addEffectMethod(returnedArray[1]);\n\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<EffectMethodBase> returnedArray[1]).name;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\n\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.SHADOW_MAP_METHOD]);\n\n\t\t\t\t\t\t\tif (!returnedArray[0]) {\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the ShadowMethod (ID = \" + targetID + \" ) for this Material\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmat.shadowMethod = returnedArray[1];\n\t\t\t\t\t\t\t\tdebugString += \" | ShadowMethod-Name = \" + (<ShadowMethodBase> returnedArray[1]).name;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE], \"CubeTexture\");\n\t\t\t\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this EnvMapAmbientMethodMaterial\");\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod(returnedArray[1]);\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + (<CubeTextureBase> returnedArray[1]).name;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\n\t\t\t\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the GradientDiffuseTexture (ID = \" + targetID + \" ) for this GradientDiffuseMethod\");\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(returnedArray[1]);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + (<Texture2DBase> returnedArray[1]).name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\n\t\t\t\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this LightMapDiffuseMethod\");\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(returnedArray[1], this.blendModeDic[props.get(401, 10)], false, mat.diffuseMethod);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + (<Texture2DBase> returnedArray[1]).name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\n\t\t\t\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SecoundNormalMap (ID = \" + targetID + \" ) for this SimpleWaterNormalMethod\");\n\t\t\t\t\t\t\tif (!mat.normalMap)\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find a normal Map on this Material to use with this SimpleWaterNormalMethod\");\n\n\t\t\t\t\t\t\tmat.normalMap = returnedArray[1];\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(mat.normalMap, returnedArray[1]);\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + (<Texture2DBase> returnedArray[1]).name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tthis.parseUserAttributes();\n\t\t\t\t\tmethods_parsed += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// todo: we should not need this anymore (if using texture-atlas)\n\t\telse if ((type>=3)&&(type<=7)){\n\t\t\t// if this is a curve material, we create it, finalize it, assign it to block-cache and return and return.\n\t\t\tvar color:number = props.get(1, 0xcccccc);\n\t\t\tdebugString+=color;\n\n\t\t\tvar diffuseTexture:Texture2DBase;\n\t\t\tvar diffuseTex_addr:number = props.get(2, 0);\n\n\t\t\treturnedArray = this.getAssetByID(diffuseTex_addr, [AssetType.TEXTURE]);\n\n\t\t\tif ((!returnedArray[0]) && (diffuseTex_addr != 0)) {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffuseTexture (ID = \" + diffuseTex_addr + \" ) for this MethodMaterial\");\n\t\t\t\tdiffuseTexture = DefaultMaterialManager.getDefaultTexture();\n\t\t\t}\n\n\t\t\tif (returnedArray[0])\n\t\t\t\tdiffuseTexture = returnedArray[1];\n\t\t\tvar curve_mat:CurveMaterial = new CurveMaterial(diffuseTexture);\n\t\t\t//debugString+= \" alpha = \"+props.get(10, 1.0)+\" \";\n\t\t\tdebugString+= \" texture = \"+diffuseTex_addr+\" \";\n\t\t\tcurve_mat.bothSides = true;\n\t\t\tcurve_mat.preserveAlpha = true;\n\t\t\tcurve_mat.alphaBlending = true;\n\t\t\tcurve_mat.extra = this.parseUserAttributes();\n\t\t\tthis._pFinalizeAsset(<IAsset> curve_mat, name);\n\t\t\tthis._blocks[blockID].data = curve_mat;\n\t\t\tif (this._debug)\n\t\t\t\tconsole.log(debugString);\n\t\t\treturn;\n\n\t\t}\n\t\tmat.extra = this.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\n\n\t\tthis._blocks[blockID].data = mat;\n\t\tif (this._debug) {\n\t\t\tconsole.log(debugString);\n\t\t}\n\t}\n\n\t//Block ID = 82\n\tprivate parseTexture(blockID:number):void\n\t{\n\n\t\tvar asset:Texture2DBase;\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar data_len:number;\n\n\t\tthis._texture_users[this._cur_block_id.toString()] = [];\n\n\t\t// External\n\t\tif (type == 0) {\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\tvar url:string;\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\n\n\t\t} else {\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\n\t\t\tvar data:ByteArray;\n\t\t\tdata = new ByteArray();\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t//\n\t\t\t// AWDParser - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\n\t\t\t//\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\n\t\t\t// This gives the browser time to initialise image width / height.\n\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\n\n\t\t}\n\n\t\t// Ignore for now\n\t\tthis.parseProperties(null);\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\n\t\tthis._pPauseAndRetrieveDependencies();\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug) {\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Bitmap for Texture\");\n\t\t}\n\n\t}\n\n\t//Block ID = 83\n\tprivate parseCubeTexture(blockID:number):void\n\t{\n\t\t//blockLength = block.len;\n\t\tvar data_len:number;\n\t\tvar asset:CubeTextureBase;\n\t\tvar i:number;\n\n\t\tthis._cubeTextures = new Array<any>();\n\t\tthis._texture_users[ this._cur_block_id.toString() ] = [];\n\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tfor (i = 0; i < 6; i++) {\n\t\t\tthis._texture_users[this._cur_block_id.toString()] = [];\n\t\t\tthis._cubeTextures.push(null);\n\n\t\t\t// External\n\t\t\tif (type == 0) {\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tvar url:string;\n\t\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\n\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString() + \"#\" + i, new URLRequest(url), false, null, true);\n\t\t\t} else {\n\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tvar data:ByteArray;\n\t\t\t\tdata = new ByteArray();\n\n\t\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString() + \"#\" + i, null, false, ParserUtils.byteArrayToImage(data), true);\n\t\t\t}\n\t\t}\n\n\t\t// Ignore for now\n\t\tthis.parseProperties(null);\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\n\t\tthis._pPauseAndRetrieveDependencies();\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug) {\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\n\t\t\tconsole.log(\"Start parsing 6 \" + textureStylesNames[type] + \" Bitmaps for CubeTexture\");\n\t\t}\n\t}\n\n\t//Block ID = 91\n\tprivate parseSharedMethodBlock(blockID:number):void\n\t{\n\t\tvar asset:EffectMethodBase;\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\t\tasset = this.parseSharedMethodList(blockID);\n\t\tthis.parseUserAttributes();\n\t\tthis._blocks[blockID].data = asset;\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\n\t\t}\n\t}\n\n\t//Block ID = 92\n\tprivate parseShadowMethodBlock(blockID:number):void\n\t{\n\t\tvar type:number;\n\t\tvar data_len:number;\n\t\tvar asset:ShadowMethodBase;\n\t\tvar shadowLightID:number;\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tshadowLightID = this._newBlockBytes.readUnsignedInt();\n\t\tvar returnedArray:Array<any> = this.getAssetByID(shadowLightID, [AssetType.LIGHT]);\n\n\t\tif (!returnedArray[0]) {\n\t\t\tthis._blocks[blockID].addError(\"Could not find the TargetLight (ID = \" + shadowLightID + \" ) for this ShadowMethod - ShadowMethod not created\");\n\t\t\treturn;\n\t\t}\n\n\t\tasset = this.parseShadowMethodList(<LightBase> returnedArray[1], blockID);\n\n\t\tif (!asset)\n\t\t\treturn;\n\n\t\tthis.parseUserAttributes(); // Ignore for now\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", ( <LightBase> returnedArray[1] ).name);\n\t\t}\n\t}\n\n\n\t//Block ID = 253\n\tprivate parseCommand(blockID:number):void\n\t{\n\t\tvar hasBlocks:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\n\t\tvar parentObject:DisplayObjectContainer;\n\t\tvar targetObject:DisplayObjectContainer;\n\n\t\tvar returnedArray:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH]);\n\n\t\tif (returnedArray[0]) {\n\t\t\tparentObject = <DisplayObjectContainer> returnedArray[1];\n\t\t}\n\n\t\tvar numCommands:number = this._newBlockBytes.readShort();\n\t\tvar typeCommand:number = this._newBlockBytes.readShort();\n\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR});\n\n\t\tswitch (typeCommand) {\n\t\t\tcase 1:\n\n\t\t\t\tvar targetID:number = props.get(1, 0);\n\t\t\t\tvar returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [AssetType.LIGHT, AssetType.TEXTURE_PROJECTOR]); //for no only light is requested!!!!\n\n\t\t\t\tif ((!returnedArrayTarget[0]) && (targetID != 0)) {\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the light (ID = \" + targetID + \" ( for this CommandBock!\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttargetObject = returnedArrayTarget[1];\n\n\t\t\t\tif (parentObject) {\n\t\t\t\t\tparentObject.addChild(targetObject);\n\t\t\t\t}\n\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (targetObject) {\n\t\t\tprops = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\n\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t\ttargetObject.extra = this.parseUserAttributes();\n\n\t\t}\n\t\tthis._blocks[blockID].data = targetObject\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\n\t\t}\n\n\t}\n\n\t//blockID 255\n\tprivate parseMetaData(blockID:number):void\n\t{\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT32, 2:AWDParser.AWDSTRING, 3:AWDParser.AWDSTRING, 4:AWDParser.AWDSTRING, 5:AWDParser.AWDSTRING});\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\n\t\t}\n\t}\n\n\t//blockID 254\n\tprivate parseNameSpace(blockID:number):void\n\t{\n\t\tvar id:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar nameSpaceString:string = this.parseVarStr();\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\n\t}\n\n\t//--Parser UTILS---------------------------------------------------------------------------\n\n\t// this functions reads and creates a ShadowMethodMethod\n\tprivate parseShadowMethodList(light:LightBase, blockID:number):ShadowMethodBase\n\t{\n\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar shadowMethod:ShadowMethodBase;\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 201:AWDParser.UINT32, 202:AWDParser.UINT32, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 401:AWDParser.UINT8, 402:AWDParser.UINT8, 601:AWDParser.COLOR, 602:AWDParser.COLOR, 701:AWDParser.BOOL, 702:AWDParser.BOOL, 801:AWDParser.MTX4x4});\n\n\t\tvar targetID:number;\n\t\tvar returnedArray:Array<any>\n\t\tswitch (methodType) {\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [AssetType.SHADOW_MAP_METHOD]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this CascadeShadowMapMethod - ShadowMethod not created\");\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\n\t\t\t//\t\t\t\t\t}\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 1002: //ShadowNearMethod\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.SHADOW_MAP_METHOD]);\n\t\t\t\tif (!returnedArray[0]) {\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this ShadowNearMethod - ShadowMethod not created\");\n\t\t\t\t\treturn shadowMethod;\n\t\t\t\t}\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> returnedArray[1]);\n\t\t\t\tbreak;\n\t\t\tcase 1101: //ShadowFilteredMethod\n\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t\tcase 1102: //ShadowDitheredMethod\n\n\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1103: //ShadowSoftMethod\n\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1104: //ShadowHardMethod\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\treturn shadowMethod;\n\t}\n\n\t//Block ID 101\n\tprivate parseSkeleton(blockID:number /*uint*/):void\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar skeleton:Skeleton = new Skeleton();\n\t\tthis.parseProperties(null); // Discard properties for now\n\n\t\tvar joints_parsed:number /*uint*/ = 0;\n\t\twhile (joints_parsed < num_joints) {\n\t\t\tvar joint:SkeletonJoint;\n\t\t\tvar ibp:Matrix3D;\n\t\t\t// Ignore joint id\n\t\t\tthis._newBlockBytes.readUnsignedShort();\n\t\t\tjoint = new SkeletonJoint();\n\t\t\tjoint.parentIndex = this._newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\n\t\t\tjoint.name = this.parseVarStr();\n\n\t\t\tibp = this.parseMatrix3D();\n\t\t\tjoint.inverseBindPose = ibp.rawData;\n\t\t\t// Ignore joint props/attributes for now\n\t\t\tthis.parseProperties(null);\n\t\t\tthis.parseUserAttributes();\n\t\t\tskeleton.joints.push(joint);\n\t\t\tjoints_parsed++;\n\t\t}\n\n\t\t// Discard attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(skeleton, name);\n\t\tthis._blocks[blockID].data = skeleton;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + skeleton.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\t//Block ID = 102\n\tprivate parseSkeletonPose(blockID:number /*uint*/):void\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tthis.parseProperties(null); // Ignore properties for now\n\n\t\tvar pose:SkeletonPose = new SkeletonPose();\n\n\t\tvar joints_parsed:number /*uint*/ = 0;\n\t\twhile (joints_parsed < num_joints) {\n\t\t\tvar joint_pose:JointPose;\n\t\t\tvar has_transform:number /*uint*/;\n\t\t\tjoint_pose = new JointPose();\n\t\t\thas_transform = this._newBlockBytes.readUnsignedByte();\n\t\t\tif (has_transform == 1) {\n\t\t\t\tvar mtx_data:Array<number> = this.parseMatrix43RawData();\n\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\n\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\n\t\t\t}\n\t\t\tjoints_parsed++;\n\t\t}\n\t\t// Skip attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(pose, name);\n\t\tthis._blocks[blockID].data = pose;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + pose.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\t//blockID 103\n\tprivate parseSkeletonAnimation(blockID:number /*uint*/):void\n\t{\n\t\tvar frame_dur:number;\n\t\tvar pose_addr:number /*uint*/;\n\t\tvar name:string = this.parseVarStr();\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tthis.parseProperties(null); // Ignore properties for now\n\n\t\tvar frames_parsed:number /*uint*/ = 0;\n\t\tvar returnedArray:Array<any>;\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tpose_addr = this._newBlockBytes.readUnsignedInt();\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\n\t\t\treturnedArray = this.getAssetByID(pose_addr, [AssetType.SKELETON_POSE]);\n\t\t\tif (!returnedArray[0])\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SkeletonPose Frame # \" + frames_parsed + \" (ID = \" + pose_addr + \" ) for this SkeletonClipNode\");\n\t\t\telse\n\t\t\t\tclip.addFrame(<SkeletonPose> this._blocks[pose_addr].data, frame_dur);\n\t\t\tframes_parsed++;\n\t\t}\n\t\tif (clip.frames.length == 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not this SkeletonClipNode, because no Frames where set.\");\n\t\t\treturn;\n\t\t}\n\t\t// Ignore attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(clip, name);\n\t\tthis._blocks[blockID].data = clip;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + clip.name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\n\t//Block ID = 111 /  Block ID = 112\n\tprivate parseMeshPoseAnimation(blockID:number /*uint*/, poseOnly:boolean = false):void\n\t{\n\t\tvar num_frames:number /*uint*/ = 1;\n\t\tvar num_submeshes:number /*uint*/;\n\t\tvar frames_parsed:number /*uint*/;\n\t\tvar subMeshParsed:number /*uint*/;\n\t\tvar frame_dur:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar str_len:number;\n\t\tvar str_end:number;\n\t\tvar geometry:Geometry;\n\t\tvar subGeom:TriangleSubGeometry;\n\t\tvar idx:number /*int*/ = 0;\n\t\tvar clip:VertexClipNode = new VertexClipNode();\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar verts:Array<number>;\n\t\tvar num_Streams:number /*int*/ = 0;\n\t\tvar streamsParsed:number /*int*/ = 0;\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\n\t\tvar props:AWDProperties;\n\t\tvar thisGeo:Geometry;\n\t\tvar name:string = this.parseVarStr();\n\t\tvar geoAdress:number /*int*/ = this._newBlockBytes.readUnsignedInt();\n\t\tvar returnedArray:Array<any> = this.getAssetByID(geoAdress, [AssetType.GEOMETRY]);\n\t\tif (!returnedArray[0]) {\n\t\t\tthis._blocks[blockID].addError(\"Could not find the target-Geometry-Object \" + geoAdress + \" ) for this VertexClipNode\");\n\t\t\treturn;\n\t\t}\n\t\tvar uvs:Array<Array<number>> = this.getUVForVertexAnimation(geoAdress);\n\t\tif (!poseOnly)\n\t\t\tnum_frames = this._newBlockBytes.readUnsignedShort();\n\n\t\tnum_submeshes = this._newBlockBytes.readUnsignedShort();\n\t\tnum_Streams = this._newBlockBytes.readUnsignedShort();\n\t\tstreamsParsed = 0;\n\t\twhile (streamsParsed < num_Streams) {\n\t\t\tstreamtypes.push(this._newBlockBytes.readUnsignedShort());\n\t\t\tstreamsParsed++;\n\t\t}\n\t\tprops = this.parseProperties({1:AWDParser.BOOL, 2:AWDParser.BOOL});\n\n\t\tclip.looping = props.get(1, true);\n\t\tclip.stitchFinalFrame = props.get(2, false);\n\n\t\tframes_parsed = 0;\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\n\t\t\tgeometry = new Geometry();\n\t\t\tsubMeshParsed = 0;\n\t\t\twhile (subMeshParsed < num_submeshes) {\n\t\t\t\tstreamsParsed = 0;\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\n\t\t\t\twhile (streamsParsed < num_Streams) {\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\n\t\t\t\t\t\tindices = (<Geometry> returnedArray[1]).subGeometries[subMeshParsed].indices;\n\t\t\t\t\t\tverts = new Array<number>();\n\t\t\t\t\t\tidx = 0;\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo)\n\t\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo)\n\t\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo)\n\t\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsubGeom = new TriangleSubGeometry(true);\n\t\t\t\t\t\tsubGeom.updateIndices(indices);\n\t\t\t\t\t\tsubGeom.updatePositions(verts);\n\t\t\t\t\t\tsubGeom.updateUVs(uvs[subMeshParsed]);\n\t\t\t\t\t\tsubGeom.updateVertexNormals(null);\n\t\t\t\t\t\tsubGeom.updateVertexTangents(null);\n\t\t\t\t\t\tsubGeom.autoDeriveNormals = false;\n\t\t\t\t\t\tsubGeom.autoDeriveTangents = false;\n\t\t\t\t\t\tsubMeshParsed++;\n\t\t\t\t\t\tgeometry.addSubGeometry(subGeom)\n\t\t\t\t\t} else\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t\tstreamsParsed++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tclip.addFrame(geometry, frame_dur);\n\t\t\tframes_parsed++;\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(clip, name);\n\n\t\tthis._blocks[blockID].data = clip;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + (<Geometry> returnedArray[1]).name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\n\t//BlockID 113\n\tprivate parseVertexAnimationSet(blockID:number /*uint*/):void\n\t{\n\t\tvar poseBlockAdress:number /*int*/\n\t\tvar outputString:string = \"\";\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT16});\n\t\tvar frames_parsed:number /*uint*/ = 0;\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tposeBlockAdress = this._newBlockBytes.readUnsignedInt();\n\t\t\tvar returnedArray:Array<any> = this.getAssetByID(poseBlockAdress, [AssetType.ANIMATION_NODE]);\n\t\t\tif (!returnedArray[0])\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the AnimationClipNode Nr \" + frames_parsed + \" ( \" + poseBlockAdress + \" ) for this AnimationSet\");\n\t\t\telse {\n\t\t\t\tif (returnedArray[1] instanceof VertexClipNode)\n\t\t\t\t\tvertexFrames.push(returnedArray[1])\n\t\t\t\tif (returnedArray[1] instanceof SkeletonClipNode)\n\t\t\t\t\tskeletonFrames.push(returnedArray[1])\n\t\t\t}\n\t\t\tframes_parsed++;\n\t\t}\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\n\t\t\tthis._blocks[blockID].addError(\"Could not create this AnimationSet, because it contains no animations\");\n\t\t\treturn;\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\tif (vertexFrames.length > 0) {\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\n\t\t\tthis._pFinalizeAsset(newVertexAnimationSet, name);\n\t\t\tthis._blocks[blockID].data = newVertexAnimationSet;\n\t\t\tif (this._debug)\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames.toString());\n\n\t\t} else if (skeletonFrames.length > 0) {\n\t\t\treturnedArray = this.getAssetByID(poseBlockAdress, [AssetType.ANIMATION_NODE]);\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\n\t\t\tthis._pFinalizeAsset(newSkeletonAnimationSet, name);\n\t\t\tthis._blocks[blockID].data = newSkeletonAnimationSet;\n\t\t\tif (this._debug)\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames.toString());\n\n\t\t}\n\t}\n\n\t//BlockID 122\n\tprivate parseAnimatorSet(blockID:number /*uint*/):void\n\t{\n\t\tvar targetMesh:Mesh;\n\t\tvar animSetBlockAdress:number /*int*/\n\t\tvar targetAnimationSet:AnimationSetBase;\n\t\tvar outputString:string = \"\";\n\t\tvar name:string = this.parseVarStr();\n\t\tvar type:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR});\n\n\t\tanimSetBlockAdress = this._newBlockBytes.readUnsignedInt();\n\t\tvar targetMeshLength:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar meshAdresses:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tfor (var i:number /*int*/ = 0; i < targetMeshLength; i++)\n\t\t\tmeshAdresses.push(this._newBlockBytes.readUnsignedInt());\n\n\t\tvar activeState:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar autoplay:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\n\t\tthis.parseUserAttributes();\n\t\tthis.parseUserAttributes();\n\n\t\tvar returnedArray:Array<any>;\n\t\tvar targetMeshes:Array<Mesh> = new Array<Mesh>();\n\n\t\tfor (i = 0; i < meshAdresses.length; i++) {\n\t\t\treturnedArray = this.getAssetByID(meshAdresses[i], [AssetType.MESH]);\n\t\t\tif (returnedArray[0])\n\t\t\t\ttargetMeshes.push(<Mesh> returnedArray[1]);\n\t\t}\n\t\treturnedArray = this.getAssetByID(animSetBlockAdress, [AssetType.ANIMATION_SET]);\n\t\tif (!returnedArray[0]) {\n\t\t\tthis._blocks[blockID].addError(\"Could not find the AnimationSet ( \" + animSetBlockAdress + \" ) for this Animator\");;\n\t\t\treturn\n\t\t}\n\t\ttargetAnimationSet = <AnimationSetBase> returnedArray[1];\n\t\tvar thisAnimator:AnimatorBase;\n\t\tif (type == 1) {\n\n\t\t\treturnedArray = this.getAssetByID(props.get(1, 0), [AssetType.SKELETON]);\n\t\t\tif (!returnedArray[0]) {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Skeleton ( \" + props.get(1, 0) + \" ) for this Animator\");\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, <Skeleton> returnedArray[1]);\n\n\t\t} else if (type == 2)\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\n\n\t\tthis._pFinalizeAsset(thisAnimator, name);\n\t\tthis._blocks[blockID].data = thisAnimator;\n\t\tfor (i = 0; i < targetMeshes.length; i++) {\n\t\t\tif (type == 1)\n\t\t\t\ttargetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\n\t\t\tif (type == 2)\n\t\t\t\ttargetMeshes[i].animator = (<VertexAnimator> thisAnimator);\n\n\t\t}\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + name);\n\t}\n\n\t// this functions reads and creates a EffectMethod\n\tprivate parseSharedMethodList(blockID:number):EffectMethodBase\n\t{\n\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar effectMethodReturn:EffectMethodBase;\n\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 104:this._propsNrType, 105:this._propsNrType, 106:this._propsNrType, 107:this._propsNrType, 201:AWDParser.UINT32, 202:AWDParser.UINT32, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 401:AWDParser.UINT8, 402:AWDParser.UINT8, 601:AWDParser.COLOR, 602:AWDParser.COLOR, 701:AWDParser.BOOL, 702:AWDParser.BOOL});\n\t\tvar targetID:number;\n\t\tvar returnedArray:Array<any>;\n\n\t\tswitch (methodType) {\n\t\t\t// Effect Methods\n\t\t\tcase 401: //ColorMatrix\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\n\t\t\t\tbreak;\n\t\t\tcase 402: //ColorTransform\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\n\t\t\t\tbreak;\n\t\t\tcase 403: //EnvMap\n\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\tconsole.log('ENV MAP', targetID);\n\n\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [ AssetType.TEXTURE ], \"CubeTexture\");\n\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this EnvMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(<CubeTextureBase> returnedArray[1], <number> props.get(101, 1));\n\t\t\t\ttargetID = props.get(2, 0);\n\t\t\t\tif (targetID > 0) {\n\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\n\t\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Mask-texture (ID = \" + targetID + \" ) for this EnvMapMethod\");\n\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <Texture2DBase> returnedArray[1];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 404: //LightMapMethod\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\n\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this LightMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(returnedArray[1], this.blendModeDic[props.get(401, 10)]); //usesecondaryUV not set\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [AssetType.TEXTURE_PROJECTOR]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this ProjectiveTextureMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 406: //RimLightMethod\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\n\t\t\t\tbreak;\n\t\t\tcase 407: //AlphaMaskMethod\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\n\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Alpha-texture (ID = \" + targetID + \" ) for this AlphaMaskMethod\");\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(returnedArray[1], props.get(701, false));\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [AssetType.TEXTURE], \"CubeTexture\");\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this RefractionEnvMapMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 410: //FresnelEnvMapMethod\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE], \"CubeTexture\");\n\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this FresnelEnvMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(returnedArray[1], props.get(101, 1));\n\t\t\t\tbreak;\n\t\t\tcase 411: //FogMethod\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\treturn effectMethodReturn;\n\n\t}\n\n\tprivate parseUserAttributes():Object\n\t{\n\t\tvar attributes:Object;\n\t\tvar list_len:number;\n\t\tvar attibuteCnt:number;\n\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\n\n\t\tif (list_len > 0) {\n\n\t\t\tvar list_end:number;\n\n\t\t\tattributes = {};\n\n\t\t\tlist_end = this._newBlockBytes.position + list_len;\n\n\t\t\twhile (this._newBlockBytes.position < list_end) {\n\t\t\t\tvar ns_id:number;\n\t\t\t\tvar attr_key:string;\n\t\t\t\tvar attr_type:number;\n\t\t\t\tvar attr_len:number;\n\t\t\t\tvar attr_val:any;\n\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_key = this.parseVarStr();\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn attributes;\n\t\t\t\t}\n\n\t\t\t\tswitch (attr_type) {\n\t\t\t\t\tcase AWDParser.AWDSTRING:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.BOOL:\n\t\t\t\t\tcase AWDParser.UINT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.UINT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.UINT32:\n\t\t\t\t\tcase AWDParser.BADDR:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.FLOAT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.FLOAT64:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\n\t\t\t\t}\n\n\t\t\t\tattributes[attr_key] = attr_val;\n\t\t\t\tattibuteCnt += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\tprivate parseProperties(expected:Object):AWDProperties\n\t{\n\t\tvar list_end:number;\n\t\tvar list_len:number;\n\t\tvar propertyCnt:number = 0;\n\t\tvar props:AWDProperties = new AWDProperties();\n\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\n\t\tlist_end = this._newBlockBytes.position + list_len;\n\n\t\tif (expected) {\n\n\t\t\twhile (this._newBlockBytes.position < list_end) {\n\t\t\t\tvar len:number;\n\t\t\t\tvar key:number;\n\t\t\t\tvar type:number;\n\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn props;\n\t\t\t\t}\n\n\t\t\t\tif (expected.hasOwnProperty(key.toString())) {\n\t\t\t\t\ttype = expected[key];\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\n\t\t\t\t} else {\n\t\t\t\t\tthis._newBlockBytes.position += len;\n\t\t\t\t}\n\n\t\t\t\tpropertyCnt += 1;\n\n\t\t\t}\n\t\t} else {\n\t\t\tthis._newBlockBytes.position = list_end;\n\t\t}\n\n\t\treturn props;\n\n\t}\n\n\tprivate parseAttrValue(type:number, len:number):any\n\t{\n\t\tvar elem_len:number;\n\t\tvar read_func:Function;\n\n\t\tswitch (type) {\n\n\t\t\tcase AWDParser.BOOL:\n\t\t\tcase AWDParser.INT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.INT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.INT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT32:\n\t\t\tcase AWDParser.COLOR:\n\t\t\tcase AWDParser.BADDR:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.FLOAT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.FLOAT64:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.AWDSTRING:\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\n\n\t\t\tcase AWDParser.VECTOR2x1:\n\t\t\tcase AWDParser.VECTOR3x1:\n\t\t\tcase AWDParser.VECTOR4x1:\n\t\t\tcase AWDParser.MTX3x2:\n\t\t\tcase AWDParser.MTX3x3:\n\t\t\tcase AWDParser.MTX4x3:\n\t\t\tcase AWDParser.MTX4x4:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif (elem_len < len) {\n\t\t\tvar list:Array<any> = [];\n\t\t\tvar num_read:number = 0;\n\t\t\tvar num_elems:number = len/elem_len;\n\n\t\t\twhile (num_read < num_elems) {\n\t\t\t\tlist.push(read_func.apply(this._newBlockBytes)); // list.push(read_func());\n\t\t\t\tnum_read++;\n\t\t\t}\n\n\t\t\treturn list;\n\t\t} else {\n\n\t\t\tvar val:any = read_func.apply(this._newBlockBytes);//read_func();\n\t\t\treturn val;\n\t\t}\n\t}\n\n\tprivate parseHeader():void\n\t{\n\t\tvar flags:number;\n\t\tvar body_len:number;\n\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\n\n\t\tthis._version[0] = this._byteData.readUnsignedByte();\n\t\tthis._version[1] = this._byteData.readUnsignedByte();\n\n\t\tflags = this._byteData.readUnsignedShort(); // Parse bit flags\n\n\t\tthis._streaming = BitFlags.test(flags, BitFlags.FLAG1);\n\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG2);\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG3);\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG4);\n\t\t}\n\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\n\n\t\t// set storagePrecision types\n\t\tthis._geoNrType = AWDParser.FLOAT32;\n\n\t\tif (this._accuracyGeo) {\n\t\t\tthis._geoNrType = AWDParser.FLOAT64;\n\t\t}\n\n\t\tthis._matrixNrType = AWDParser.FLOAT32;\n\n\t\tif (this._accuracyMatrix) {\n\t\t\tthis._matrixNrType = AWDParser.FLOAT64;\n\t\t}\n\n\t\tthis._propsNrType = AWDParser.FLOAT32;\n\n\t\tif (this._accuracyProps) {\n\t\t\tthis._propsNrType = AWDParser.FLOAT64;\n\t\t}\n\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._version[0] + \" - \" + this._version[1]);\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\n\t\t}\n\n\t\t// Check file integrity\n\t\tbody_len = this._byteData.readUnsignedInt();\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable()) {\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\n\t\t}\n\n\t}\n\t// Helper - functions\n\tprivate getUVForVertexAnimation(meshID:number /*uint*/):Array<Array<number>>\n\t{\n\t\tif (this._blocks[meshID].data instanceof Mesh)\n\t\t\tmeshID = this._blocks[meshID].geoID;\n\t\tif (this._blocks[meshID].uvsForVertexAnimation)\n\t\t\treturn this._blocks[meshID].uvsForVertexAnimation;\n\t\tvar geometry:Geometry = (<Geometry> this._blocks[meshID].data);\n\t\tvar geoCnt:number /*int*/ = 0;\n\t\tvar ud:Array<number>;\n\t\tvar uStride:number /*uint*/;\n\t\tvar uOffs:number /*uint*/;\n\t\tvar numPoints:number /*uint*/;\n\t\tvar i:number /*int*/;\n\t\tvar newUvs:Array<number>;\n\t\tvar sub_geom:TriangleSubGeometry;\n\t\tthis._blocks[meshID].uvsForVertexAnimation = new Array<Array<number>>();\n\t\twhile (geoCnt < geometry.subGeometries.length) {\n\t\t\tnewUvs = new Array<number>();\n\t\t\tsub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\n\t\t\tnumPoints = sub_geom.numVertices;\n\t\t\tud = sub_geom.uvs;\n\t\t\tuStride = sub_geom.getStride(TriangleSubGeometry.UV_DATA);\n\t\t\tuOffs = sub_geom.getOffset(TriangleSubGeometry.UV_DATA);\n\t\t\tfor (i = 0; i < numPoints; i++) {\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 0]);\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 1]);\n\t\t\t}\n\t\t\tthis._blocks[meshID].uvsForVertexAnimation.push(newUvs);\n\t\t\tgeoCnt++;\n\t\t}\n\t\treturn this._blocks[meshID].uvsForVertexAnimation;\n\t}\n\n\tprivate parseVarStr():string\n\t{\n\n\t\tvar len:number = this._newBlockBytes.readUnsignedShort();\n\t\treturn this._newBlockBytes.readUTFBytes(len);\n\t}\n\n\tprivate getAssetByID(assetID:number, assetTypesToGet:Array<string>, extraTypeInfo:string = \"SingleTexture\"):Array<any>\n\t{\n\t\tvar returnArray:Array<any> = new Array<any>();\n\t\tvar typeCnt:number = 0;\n\t\tif (assetID > 0) {\n\t\t\tif (this._blocks[assetID]) {\n\t\t\t\tif (this._blocks[assetID].data) {\n\t\t\t\t\twhile (typeCnt < assetTypesToGet.length) {\n\n\t\t\t\t\t\tvar iasset:IAsset = <IAsset> this._blocks[assetID].data;\n\n\t\t\t\t\t\tif (iasset.assetType == assetTypesToGet[typeCnt]) {\n\t\t\t\t\t\t\t//if the right assetType was found\n\t\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == AssetType.TEXTURE) && (extraTypeInfo == \"CubeTexture\")) {\n\t\t\t\t\t\t\t\tif (this._blocks[assetID].data instanceof ImageCubeTexture) {\n\t\t\t\t\t\t\t\t\treturnArray.push(true);\n\t\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\n\t\t\t\t\t\t\t\t\treturn returnArray;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == AssetType.TEXTURE) && (extraTypeInfo == \"SingleTexture\")) {\n\t\t\t\t\t\t\t\tif (this._blocks[assetID].data instanceof ImageTexture) {\n\t\t\t\t\t\t\t\t\treturnArray.push(true);\n\t\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\n\t\t\t\t\t\t\t\t\treturn returnArray;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturnArray.push(true);\n\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\n\t\t\t\t\t\t\t\treturn returnArray;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//if ((assetTypesToGet[typeCnt] == AssetType.GEOMETRY) && (IAsset(_blocks[assetID].data).assetType == AssetType.MESH)) {\n\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == AssetType.GEOMETRY) && (iasset.assetType == AssetType.MESH)) {\n\n\t\t\t\t\t\t\tvar mesh:Mesh = <Mesh> this._blocks[assetID].data\n\n\t\t\t\t\t\t\treturnArray.push(true);\n\t\t\t\t\t\t\treturnArray.push(mesh.geometry);\n\t\t\t\t\t\t\treturn returnArray;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttypeCnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// if the has not returned anything yet, the asset is not found, or the found asset is not the right type.\n\t\treturnArray.push(false);\n\t\treturnArray.push(this.getDefaultAsset(assetTypesToGet[0], extraTypeInfo));\n\t\treturn returnArray;\n\t}\n\tprivate getDefaultAsset(assetType:string, extraTypeInfo:string):IAsset\n\t{\n\t\tswitch (true) {\n\t\t\tcase (assetType == AssetType.TEXTURE):\n\t\t\t\tif (extraTypeInfo == \"CubeTexture\")\n\t\t\t\t\treturn this.getDefaultCubeTexture();\n\t\t\t\tif (extraTypeInfo == \"SingleTexture\")\n\t\t\t\t\treturn DefaultMaterialManager.getDefaultTexture();\n\t\t\t\tbreak;\n\t\t\tcase (assetType == AssetType.MATERIAL):\n\t\t\t\treturn DefaultMaterialManager.getDefaultMaterial();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate getDefaultCubeTexture():IAsset\n\t{\n\t\tif (!this._defaultCubeTexture) {\n\t\t\tvar defaultBitmap:BitmapData = DefaultMaterialManager.createCheckeredBitmapData();\n\n\t\t\tthis._defaultCubeTexture = new BitmapCubeTexture(defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap);\n\t\t\tthis._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t\t}\n\n\t\treturn <IAsset> this._defaultCubeTexture;\n\t}\n\n\tprivate readNumber(precision:boolean = false):number\n\t{\n\t\tif (precision)\n\t\t\treturn this._newBlockBytes.readDouble();\n\t\treturn this._newBlockBytes.readFloat();\n\n\t}\n\n\tprivate parseMatrix3D():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\n\t}\n\n\tprivate parseMatrix32RawData():Array<number>\n\t{\n\t\tvar i:number;\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\n\t\tfor (i = 0; i < 6; i++) {\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\n\t\t}\n\n\t\treturn mtx_raw;\n\t}\n\n\tprivate parseMatrix43RawData():Array<number>\n\t{\n\t\tvar mtx_raw:Array<number> = new Array<number>(16);\n\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[3] = 0.0;\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[7] = 0.0;\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[11] = 0.0;\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[15] = 1.0;\n\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\n\n\t\tif (isNaN(mtx_raw[0])) {\n\t\t\tmtx_raw[0] = 1;\n\t\t\tmtx_raw[1] = 0;\n\t\t\tmtx_raw[2] = 0;\n\t\t\tmtx_raw[4] = 0;\n\t\t\tmtx_raw[5] = 1;\n\t\t\tmtx_raw[6] = 0;\n\t\t\tmtx_raw[8] = 0;\n\t\t\tmtx_raw[9] = 0;\n\t\t\tmtx_raw[10] = 1;\n\t\t\tmtx_raw[12] = 0;\n\t\t\tmtx_raw[13] = 0;\n\t\t\tmtx_raw[14] = 0;\n\n\t\t}\n\n\t\treturn mtx_raw;\n\t}\n\n}\n\nexport = AWDParser;\n\nclass AWDBlock\n{\n\tpublic id:number;\n\tpublic name:string;\n\tpublic data:any;\n\tpublic len:any;\n\tpublic geoID:number;\n\tpublic extras:Object;\n\tpublic bytes:ByteArray;\n\tpublic errorMessages:Array<string>;\n\tpublic uvsForVertexAnimation:Array<Array<number>>;\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic dispose()\n\t{\n\n\t\tthis.id = null;\n\t\tthis.bytes = null;\n\t\tthis.errorMessages = null;\n\t\tthis.uvsForVertexAnimation = null;\n\n\t}\n\n\tpublic addError(errorMsg:string):void\n\t{\n\t\tif (!this.errorMessages)\n\t\t\tthis.errorMessages = new Array<string>();\n\n\t\tthis.errorMessages.push(errorMsg);\n\t}\n}\n\nclass AWDProperties\n{\n\tpublic set(key:number, value:any):void\n\t{\n\t\tthis[ key.toString() ] = value;\n\t}\n\n\tpublic get(key:number, fallback:any):any\n\t{\n\t\tif (this.hasOwnProperty(key.toString())) {\n\t\t\treturn this[key.toString()];\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n}\n\n/**\n *\n */\nclass BitFlags\n{\n\tpublic static FLAG1:number = 1;\n\tpublic static FLAG2:number = 2;\n\tpublic static FLAG3:number = 4;\n\tpublic static FLAG4:number = 8;\n\tpublic static FLAG5:number = 16;\n\tpublic static FLAG6:number = 32;\n\tpublic static FLAG7:number = 64;\n\tpublic static FLAG8:number = 128;\n\tpublic static FLAG9:number = 256;\n\tpublic static FLAG10:number = 512;\n\tpublic static FLAG11:number = 1024;\n\tpublic static FLAG12:number = 2048;\n\tpublic static FLAG13:number = 4096;\n\tpublic static FLAG14:number = 8192;\n\tpublic static FLAG15:number = 16384;\n\tpublic static FLAG16:number = 32768;\n\n\tpublic static test(flags:number, testFlag:number):boolean\n\t{\n\t\treturn (flags & testFlag) == testFlag;\n\t}\n}\n",
    "import BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-renderergl/lib/managers/DefaultMaterialManager\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\n\n/**\n * MD2Parser provides a parser for the MD2 data type.\n */\nclass MD2Parser extends ParserBase\n{\n\tpublic static FPS:number /*int*/ = 6;\n\n\tprivate _clipNodes:Object = new Object();\n\tprivate _byteData:ByteArray;\n\tprivate _startedParsing:boolean;\n\tprivate _parsedHeader:boolean;\n\tprivate _parsedUV:boolean;\n\tprivate _parsedFaces:boolean;\n\tprivate _parsedFrames:boolean;\n\n\tprivate _ident:number /*uint*/;\n\tprivate _version:number /*uint*/;\n\tprivate _skinWidth:number /*uint*/;\n\tprivate _skinHeight:number /*uint*/;\n\t//private _frameSize : number /*uint*/;\n\tprivate _numSkins:number /*uint*/;\n\tprivate _numVertices:number /*uint*/;\n\tprivate _numST:number /*uint*/;\n\tprivate _numTris:number /*uint*/;\n\t//private _numGlCmds : number /*uint*/;\n\tprivate _numFrames:number /*uint*/;\n\tprivate _offsetSkins:number /*uint*/;\n\tprivate _offsetST:number /*uint*/;\n\tprivate _offsetTris:number /*uint*/;\n\tprivate _offsetFrames:number /*uint*/;\n\t//private _offsetGlCmds : number /*uint*/;\n\tprivate _offsetEnd:number /*uint*/;\n\n\tprivate _uvIndices:Array<number>;\n\tprivate _indices:Array<number> /*uint*/;\n\tprivate _vertIndices:Array<number>;\n\n\t// the current subgeom being built\n\tprivate _animationSet:VertexAnimationSet = new VertexAnimationSet();\n\tprivate _firstSubGeom:TriangleSubGeometry;\n\tprivate _uvs:Array<number>;\n\tprivate _finalUV:Array<number>;\n\n\tprivate _materialNames:Array<string>;\n\tprivate _textureType:string;\n\tprivate _ignoreTexturePath:boolean;\n\tprivate _mesh:Mesh;\n\tprivate _geometry:Geometry;\n\n\tprivate materialFinal:boolean = false;\n\tprivate geoCreated:boolean = false;\n\n\t/**\n\t * Creates a new MD2Parser object.\n\t * @param textureType The extension of the texture (e.g. jpg/png/...)\n\t * @param ignoreTexturePath If true, the path of the texture is ignored\n\t */\n\tconstructor(textureType:string = \"jpg\", ignoreTexturePath:boolean = true)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\t\tthis._textureType = textureType;\n\t\tthis._ignoreTexturePath = ignoreTexturePath;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md2\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn (ParserUtils.toString(data, 4) == 'IDP2');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif (resourceDependency.assets.length != 1)\n\t\t\treturn;\n\n\t\tvar asset:Texture2DBase = <Texture2DBase> resourceDependency.assets[0];\n\n\t\tif (asset) {\n\t\t\tvar material:MethodMaterial = new MethodMaterial(asset);\n\n\t\t\tif (this.materialMode >= 2)\n\t\t\t\tmaterial.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\t\tmaterial.name = this._mesh.material.name;\n\t\t\tthis._mesh.material = material;\n\t\t\tthis._pFinalizeAsset(material);\n\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\n\t\t\tthis._pFinalizeAsset(this._mesh);\n\t\t}\n\t\tthis.materialFinal = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\t// apply system default\n\t\tif (this.materialMode < 2) {\n\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\n\t\t} else {\n\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\n\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\n\t\t}\n\n\t\t//add to the content property\n\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\tthis._pFinalizeAsset(this._mesh.geometry);\n\t\tthis._pFinalizeAsset(this._mesh);\n\t\tthis.materialFinal = true;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (!this._startedParsing) {\n\t\t\tthis._byteData = this._pGetByteData();\n\t\t\tthis._startedParsing = true;\n\n\t\t\t// Reset bytearray read position (which may have been\n\t\t\t// moved forward by the supportsData() function.)\n\t\t\tthis._byteData.position = 0;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\tif (!this._parsedHeader) {\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\n\n\t\t\t\t// TODO: Create a mesh only when encountered (if it makes sense\n\t\t\t\t// for this file format) and return it using this._pFinalizeAsset()\n\t\t\t\tthis._geometry = new Geometry();\n\t\t\t\tthis._mesh = new Mesh(this._geometry, null);\n\t\t\t\tif (this.materialMode < 2) {\n\t\t\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\n\t\t\t\t} else {\n\t\t\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\n\t\t\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t}\n\n\t\t\t\t//_geometry.animation = new VertexAnimation(2, VertexAnimationMode.ABSOLUTE);\n\t\t\t\t//_animator = new VertexAnimator(VertexAnimationState(_mesh.animationState));\n\n\t\t\t\t// Parse header and decompress body\n\t\t\t\tthis.parseHeader();\n\t\t\t\tthis.parseMaterialNames();\n\t\t\t} else if (!this._parsedUV) {\n\t\t\t\tthis.parseUV();\n\t\t\t} else if (!this._parsedFaces) {\n\t\t\t\tthis.parseFaces();\n\t\t\t} else if (!this._parsedFrames) {\n\t\t\t\tthis.parseFrames();\n\t\t\t} else if ((this.geoCreated) && (this.materialFinal)) {\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t} else if (!this.geoCreated) {\n\t\t\t\tthis.geoCreated = true;\n\t\t\t\t//create default subgeometry\n\t\t\t\tthis._geometry.addSubGeometry(this._firstSubGeom.clone());\n\t\t\t\t// Force name to be chosen by this._pFinalizeAsset()\n\t\t\t\tthis._mesh.name = \"\";\n\t\t\t\tif (this.materialFinal) {\n\t\t\t\t\t//add to the content property\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh);\n\t\t\t\t}\n\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t}\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\t/**\n\t * Reads in all that MD2 Header data that is declared as private variables.\n\t * I know its a lot, and it looks ugly, but only way to do it in Flash\n\t */\n\tprivate parseHeader()\n\t{\n\t\tthis._ident = this._byteData.readInt();\n\t\tthis._version = this._byteData.readInt();\n\t\tthis._skinWidth = this._byteData.readInt();\n\t\tthis._skinHeight = this._byteData.readInt();\n\t\t//skip this._frameSize\n\t\tthis._byteData.readInt();\n\t\tthis._numSkins = this._byteData.readInt();\n\t\tthis._numVertices = this._byteData.readInt();\n\t\tthis._numST = this._byteData.readInt();\n\t\tthis._numTris = this._byteData.readInt();\n\t\t//skip this._numGlCmds\n\t\tthis._byteData.readInt();\n\t\tthis._numFrames = this._byteData.readInt();\n\t\tthis._offsetSkins = this._byteData.readInt();\n\t\tthis._offsetST = this._byteData.readInt();\n\t\tthis._offsetTris = this._byteData.readInt();\n\t\tthis._offsetFrames = this._byteData.readInt();\n\t\t//skip this._offsetGlCmds\n\t\tthis._byteData.readInt();\n\t\tthis._offsetEnd = this._byteData.readInt();\n\n\t\tthis._parsedHeader = true;\n\t}\n\n\t/**\n\t * Parses the file names for the materials.\n\t */\n\tprivate parseMaterialNames()\n\t{\n\t\tvar url:string;\n\t\tvar name:string;\n\t\tvar extIndex:number /*int*/;\n\t\tvar slashIndex:number /*int*/;\n\t\tthis._materialNames = new Array<string>();\n\t\tthis._byteData.position = this._offsetSkins;\n\n\t\tvar regExp:RegExp = new RegExp(\"[^a-zA-Z0-9\\\\_\\/.]\", \"g\");\n\t\tfor (var i:number /*uint*/ = 0; i < this._numSkins; ++i) {\n\t\t\tname = this._byteData.readUTFBytes(64);\n\t\t\tname = name.replace(regExp, \"\");\n\t\t\textIndex = name.lastIndexOf(\".\");\n\t\t\tif (this._ignoreTexturePath)\n\t\t\t\tslashIndex = name.lastIndexOf(\"/\");\n\t\t\tif (name.toLowerCase().indexOf(\".jpg\") == -1 && name.toLowerCase().indexOf(\".png\") == -1) {\n\t\t\t\tname = name.substring(slashIndex + 1, extIndex);\n\t\t\t\turl = name + \".\" + this._textureType;\n\t\t\t} else {\n\t\t\t\turl = name;\n\t\t\t}\n\n\t\t\tthis._materialNames[i] = name;\n\n\t\t\t// only support 1 skin TODO: really?\n\t\t\tif (this.dependencies.length == 0)\n\t\t\t\tthis._pAddDependency(name, new URLRequest(url));\n\t\t}\n\n\t\tif (this._materialNames.length > 0)\n\t\t\tthis._mesh.material.name = this._materialNames[0]; else\n\t\t\tthis.materialFinal = true;\n\t}\n\n\t/**\n\t * Parses the uv data for the mesh.\n\t */\n\tprivate parseUV()\n\t{\n\t\tvar j:number /*uint*/ = 0;\n\n\t\tthis._uvs = new Array<number>(this._numST*2);\n\t\tthis._byteData.position = this._offsetST;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numST; i++) {\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinWidth;\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinHeight;\n\t\t}\n\n\t\tthis._parsedUV = true;\n\t}\n\n\t/**\n\t * Parses unique indices for the faces.\n\t */\n\tprivate parseFaces()\n\t{\n\t\tvar a:number /*uint*/, b:number /*uint*/, c:number /*uint*/, ta:number /*uint*/, tb:number /*uint*/, tc:number /*uint*/;\n\t\tvar i:number /*uint*/;\n\n\t\tthis._vertIndices = new Array<number>();\n\t\tthis._uvIndices = new Array<number>();\n\t\tthis._indices = new Array<number>() /*uint*/;\n\n\t\tthis._byteData.position = this._offsetTris;\n\n\t\tfor (i = 0; i < this._numTris; i++) {\n\t\t\t//collect vertex indices\n\t\t\ta = this._byteData.readUnsignedShort();\n\t\t\tb = this._byteData.readUnsignedShort();\n\t\t\tc = this._byteData.readUnsignedShort();\n\n\t\t\t//collect uv indices\n\t\t\tta = this._byteData.readUnsignedShort();\n\t\t\ttb = this._byteData.readUnsignedShort();\n\t\t\ttc = this._byteData.readUnsignedShort();\n\n\t\t\tthis.addIndex(a, ta);\n\t\t\tthis.addIndex(b, tb);\n\t\t\tthis.addIndex(c, tc);\n\t\t}\n\n\t\tvar len:number /*uint*/ = this._uvIndices.length;\n\t\tthis._finalUV = new Array<number>(len*2);\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._finalUV[i << 1] = this._uvs[this._uvIndices[i] << 1];\n\t\t\tthis._finalUV[(i << 1) + 1] = this._uvs[(this._uvIndices[i] << 1) + 1];\n\t\t}\n\n\t\tthis._parsedFaces = true;\n\t}\n\n\t/**\n\t * Adds a face index to the list if it doesn't exist yet, based on vertexIndex and uvIndex, and adds the\n\t * corresponding vertex and uv data in the correct location.\n\t * @param vertexIndex The original index in the vertex list.\n\t * @param uvIndex The original index in the uv list.\n\t */\n\tprivate addIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/)\n\t{\n\t\tvar index:number /*int*/ = this.findIndex(vertexIndex, uvIndex);\n\n\t\tif (index == -1) {\n\t\t\tthis._indices.push(this._vertIndices.length);\n\t\t\tthis._vertIndices.push(vertexIndex);\n\t\t\tthis._uvIndices.push(uvIndex);\n\t\t} else\n\t\t\tthis._indices.push(index);\n\t}\n\n\t/**\n\t * Finds the final index corresponding to the original MD2's vertex and uv indices. Returns -1 if it wasn't added yet.\n\t * @param vertexIndex The original index in the vertex list.\n\t * @param uvIndex The original index in the uv list.\n\t * @return The index of the final mesh corresponding to the original vertex and uv index. -1 if it doesn't exist yet.\n\t */\n\tprivate findIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/):number /*int*/\n\t{\n\t\tvar len:number /*uint*/ = this._vertIndices.length;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tif (this._vertIndices[i] == vertexIndex && this._uvIndices[i] == uvIndex)\n\t\t\t\treturn i;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Parses all the frame geometries.\n\t */\n\tprivate parseFrames()\n\t{\n\t\tvar sx:number, sy:number, sz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar geometry:Geometry;\n\t\tvar subGeom:TriangleSubGeometry;\n\t\tvar vertLen:number /*uint*/ = this._vertIndices.length;\n\t\tvar fvertices:Array<number>;\n\t\tvar tvertices:Array<number>;\n\t\tvar i:number /*uint*/, j:number /*int*/, k:number /*uint*/;\n\t\t//var ch : number /*uint*/;\n\t\tvar name:string = \"\";\n\t\tvar prevClip:VertexClipNode = null;\n\n\t\tthis._byteData.position = this._offsetFrames;\n\n\t\tfor (i = 0; i < this._numFrames; i++) {\n\n\t\t\ttvertices = new Array<number>();\n\t\t\tfvertices = new Array<number>(vertLen*3);\n\n\t\t\tsx = this._byteData.readFloat();\n\t\t\tsy = this._byteData.readFloat();\n\t\t\tsz = this._byteData.readFloat();\n\n\t\t\ttx = this._byteData.readFloat();\n\t\t\tty = this._byteData.readFloat();\n\t\t\ttz = this._byteData.readFloat();\n\n\t\t\tname = this.readFrameName();\n\n\t\t\t// Note, the extra data.position++ in the for loop is there\n\t\t\t// to skip over a byte that holds the \"vertex normal index\"\n\t\t\tfor (j = 0; j < this._numVertices; j++, this._byteData.position++)\n\t\t\t\ttvertices.push(sx*this._byteData.readUnsignedByte() + tx, sy*this._byteData.readUnsignedByte() + ty, sz*this._byteData.readUnsignedByte() + tz);\n\n\t\t\tk = 0;\n\t\t\tfor (j = 0; j < vertLen; j++) {\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3];\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 2];\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 1];\n\t\t\t}\n\n\t\t\tsubGeom = new TriangleSubGeometry(true);\n\n\t\t\tif (this._firstSubGeom == null)\n\t\t\t\tthis._firstSubGeom = subGeom;\n\n\t\t\tgeometry = new Geometry();\n\t\t\tgeometry.addSubGeometry(subGeom);\n\n\t\t\tsubGeom.updateIndices(this._indices);\n\t\t\tsubGeom.updatePositions(fvertices);\n\t\t\tsubGeom.updateUVs(this._finalUV);\n\t\t\tsubGeom.vertexNormals;\n\t\t\tsubGeom.vertexTangents;\n\t\t\tsubGeom.autoDeriveNormals = false;\n\t\t\tsubGeom.autoDeriveTangents = false;\n\n\t\t\tvar clip:VertexClipNode = this._clipNodes[name];\n\n\t\t\tif (!clip) {\n\t\t\t\t// If another sequence was parsed before this one, starting\n\t\t\t\t// a new state means the previous one is complete and can\n\t\t\t\t// hence be finalized.\n\t\t\t\tif (prevClip) {\n\t\t\t\t\tthis._pFinalizeAsset(prevClip);\n\t\t\t\t\tthis._animationSet.addAnimation(prevClip);\n\t\t\t\t}\n\n\t\t\t\tclip = new VertexClipNode();\n\t\t\t\tclip.name = name;\n\t\t\t\tclip.stitchFinalFrame = true;\n\n\t\t\t\tthis._clipNodes[name] = clip;\n\n\t\t\t\tprevClip = clip;\n\t\t\t}\n\t\t\tclip.addFrame(geometry, 1000/MD2Parser.FPS);\n\t\t}\n\n\t\t// Finalize the last state\n\t\tif (prevClip) {\n\t\t\tthis._pFinalizeAsset(prevClip);\n\t\t\tthis._animationSet.addAnimation(prevClip);\n\t\t}\n\n\t\t// Force this._pFinalizeAsset() to decide name\n\t\tthis._pFinalizeAsset(this._animationSet);\n\n\t\tthis._parsedFrames = true;\n\t}\n\n\tprivate readFrameName():string\n\t{\n\t\tvar name:string = \"\";\n\t\tvar k:number /*uint*/ = 0;\n\t\tfor (var j:number /*uint*/ = 0; j < 16; j++) {\n\t\t\tvar ch:number /*uint*/ = this._byteData.readUnsignedByte();\n\n\t\t\tif (Math.floor(ch) > 0x39 && Math.floor(ch) <= 0x7A && k == 0)\n\t\t\t\tname += String.fromCharCode(ch);\n\n\t\t\tif (Math.floor(ch) >= 0x30 && Math.floor(ch) <= 0x39)\n\t\t\t\tk++;\n\t\t}\n\t\treturn name;\n\t}\n}\n\nexport = MD2Parser;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\n\n/**\n * MD5AnimParser provides a parser for the md5anim data type, providing an animation sequence for the md5 format.\n *\n * todo: optimize\n */\nclass MD5AnimParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\n\tpublic static NUM_FRAMES_TOKEN:string = \"numFrames\";\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\n\tpublic static FRAME_RATE_TOKEN:string = \"frameRate\";\n\tpublic static NUM_ANIMATED_COMPONENTS_TOKEN:string = \"numAnimatedComponents\";\n\n\tpublic static HIERARCHY_TOKEN:string = \"hierarchy\";\n\tpublic static BOUNDS_TOKEN:string = \"bounds\";\n\tpublic static BASE_FRAME_TOKEN:string = \"baseframe\";\n\tpublic static FRAME_TOKEN:string = \"frame\";\n\n\tpublic static COMMENT_TOKEN:string = \"//\";\n\n\tprivate _parseIndex:number /*int*/ = 0;\n\tprivate _reachedEOF:boolean;\n\tprivate _line:number /*int*/ = 0;\n\tprivate _charLineIndex:number /*int*/ = 0;\n\tprivate _version:number /*int*/;\n\tprivate _frameRate:number /*int*/;\n\tprivate _numFrames:number /*int*/;\n\tprivate _numJoints:number /*int*/;\n\tprivate _numAnimatedComponents:number /*int*/;\n\n\tprivate _hierarchy:Array<HierarchyData>;\n\tprivate _bounds:Array<BoundsData>;\n\tprivate _frameData:Array<FrameData>;\n\tprivate _baseFrameData:Array<BaseFrameData>;\n\n\tprivate _rotationQuat:Quaternion;\n\tprivate _clip:SkeletonClipNode;\n\n\t/**\n\t * Creates a new MD5AnimParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._rotationQuat = new Quaternion();\n\t\tvar t1:Quaternion = new Quaternion();\n\t\tvar t2:Quaternion = new Quaternion();\n\n\t\tt1.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\n\t\tt2.fromAxisAngle(Vector3D.Y_AXIS, -Math.PI*.5);\n\n\t\tthis._rotationQuat.multiply(t2, t1);\n\n\t\tif (additionalRotationAxis) {\n\t\t\tthis._rotationQuat.multiply(t2, t1);\n\t\t\tt1.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\n\t\t\tthis._rotationQuat.multiply(t1, this._rotationQuat);\n\t\t}\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md5anim\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar token:string;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\ttoken = this.getNextToken();\n\t\t\tswitch (token) {\n\t\t\t\tcase MD5AnimParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"\":\n\t\t\t\t\t// can occur at the end of a file\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.VERSION_TOKEN:\n\t\t\t\t\tthis._version = this.getNextInt();\n\t\t\t\t\tif (this._version != 10)\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.COMMAND_LINE_TOKEN:\n\t\t\t\t\tthis.parseCMD();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_FRAMES_TOKEN:\n\t\t\t\t\tthis._numFrames = this.getNextInt();\n\t\t\t\t\tthis._bounds = new Array<BoundsData>();\n\t\t\t\t\tthis._frameData = new Array<FrameData>();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_JOINTS_TOKEN:\n\t\t\t\t\tthis._numJoints = this.getNextInt();\n\t\t\t\t\tthis._hierarchy = new Array<HierarchyData>(this._numJoints);\n\t\t\t\t\tthis._baseFrameData = new Array<BaseFrameData>(this._numJoints);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.FRAME_RATE_TOKEN:\n\t\t\t\t\tthis._frameRate = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_ANIMATED_COMPONENTS_TOKEN:\n\t\t\t\t\tthis._numAnimatedComponents = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.HIERARCHY_TOKEN:\n\t\t\t\t\tthis.parseHierarchy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.BOUNDS_TOKEN:\n\t\t\t\t\tthis.parseBounds();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.BASE_FRAME_TOKEN:\n\t\t\t\t\tthis.parseBaseFrame();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.FRAME_TOKEN:\n\t\t\t\t\tthis.parseFrame();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (!this._reachedEOF)\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\n\t\t\t}\n\n\t\t\tif (this._reachedEOF) {\n\t\t\t\tthis._clip = new SkeletonClipNode();\n\t\t\t\tthis.translateClip();\n\t\t\t\tthis._pFinalizeAsset(this._clip);\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t}\n\t\t}\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\t/**\n\t * Converts all key frame data to an SkinnedAnimationSequence.\n\t */\n\tprivate translateClip():void\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < this._numFrames; ++i)\n\t\t\tthis._clip.addFrame(this.translatePose(this._frameData[i]), 1000/this._frameRate);\n\t}\n\n\t/**\n\t * Converts a single key frame data to a SkeletonPose.\n\t * @param frameData The actual frame data.\n\t * @return A SkeletonPose containing the frame data's pose.\n\t */\n\tprivate translatePose(frameData:FrameData):SkeletonPose\n\t{\n\t\tvar hierarchy:HierarchyData;\n\t\tvar pose:JointPose;\n\t\tvar base:BaseFrameData;\n\t\tvar flags:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar translate:Vector3D = new Vector3D();\n\t\tvar orientation:Quaternion = new Quaternion();\n\t\tvar components:Array<number> = frameData.components;\n\t\tvar skelPose:SkeletonPose = new SkeletonPose();\n\t\tvar jointPoses:Array<JointPose> = skelPose.jointPoses;\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numJoints; ++i) {\n\t\t\tj = 0;\n\t\t\tpose = new JointPose();\n\t\t\thierarchy = this._hierarchy[i];\n\t\t\tbase = this._baseFrameData[i];\n\t\t\tflags = hierarchy.flags;\n\t\t\ttranslate.x = base.position.x;\n\t\t\ttranslate.y = base.position.y;\n\t\t\ttranslate.z = base.position.z;\n\t\t\torientation.x = base.orientation.x;\n\t\t\torientation.y = base.orientation.y;\n\t\t\torientation.z = base.orientation.z;\n\n\t\t\tif (flags & 1)\n\t\t\t\ttranslate.x = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 2)\n\t\t\t\ttranslate.y = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 4)\n\t\t\t\ttranslate.z = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 8)\n\t\t\t\torientation.x = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 16)\n\t\t\t\torientation.y = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 32)\n\t\t\t\torientation.z = components[hierarchy.startIndex + (j++)];\n\n\t\t\tvar w:number = 1 - orientation.x*orientation.x - orientation.y*orientation.y - orientation.z*orientation.z;\n\t\t\torientation.w = w < 0? 0 : -Math.sqrt(w);\n\n\t\t\tif (hierarchy.parentIndex < 0) {\n\t\t\t\tpose.orientation.multiply(this._rotationQuat, orientation);\n\t\t\t\tpose.translation = this._rotationQuat.rotatePoint(translate);\n\t\t\t} else {\n\t\t\t\tpose.orientation.copyFrom(orientation);\n\t\t\t\tpose.translation.x = translate.x;\n\t\t\t\tpose.translation.y = translate.y;\n\t\t\t\tpose.translation.z = translate.z;\n\t\t\t}\n\t\t\tpose.orientation.y = -pose.orientation.y;\n\t\t\tpose.orientation.z = -pose.orientation.z;\n\t\t\tpose.translation.x = -pose.translation.x;\n\n\t\t\tjointPoses[i] = pose;\n\t\t}\n\n\t\treturn skelPose;\n\t}\n\n\t/**\n\t * Parses the skeleton's hierarchy data.\n\t */\n\tprivate parseHierarchy():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:HierarchyData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new HierarchyData();\n\t\t\tdata.name = this.parseLiteralstring();\n\t\t\tdata.parentIndex = this.getNextInt();\n\t\t\tdata.flags = this.getNextInt();\n\t\t\tdata.startIndex = this.getNextInt();\n\t\t\tthis._hierarchy[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses frame bounds.\n\t */\n\tprivate parseBounds():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:BoundsData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new BoundsData();\n\t\t\tdata.min = this.parseVector3D();\n\t\t\tdata.max = this.parseVector3D();\n\t\t\tthis._bounds[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses the base frame.\n\t */\n\tprivate parseBaseFrame():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:BaseFrameData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new BaseFrameData();\n\t\t\tdata.position = this.parseVector3D();\n\t\t\tdata.orientation = this.parseQuaternion();\n\t\t\tthis._baseFrameData[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses a single frame.\n\t */\n\tprivate parseFrame():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:FrameData;\n\t\tvar token:string;\n\t\tvar frameIndex:number /*int*/;\n\n\t\tframeIndex = this.getNextInt();\n\n\t\ttoken = this.getNextToken();\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new FrameData();\n\t\t\tdata.components = new Array<number>(this._numAnimatedComponents);\n\n\t\t\tfor (var i:number /*int*/ = 0; i < this._numAnimatedComponents; ++i)\n\t\t\t\tdata.components[i] = this.getNextNumber();\n\n\t\t\tthis._frameData[frameIndex] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Puts back the last read character into the data stream.\n\t */\n\tprivate putBack():void\n\t{\n\t\tthis._parseIndex--;\n\t\tthis._charLineIndex--;\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\n\t}\n\n\t/**\n\t * Gets the next token in the data stream.\n\t */\n\tprivate getNextToken():string\n\t{\n\t\tvar ch:string;\n\t\tvar token:string = \"\";\n\n\t\twhile (!this._reachedEOF) {\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\n\t\t\t\tif (token != MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.skipWhiteSpace();\n\t\t\t\tif (token != \"\")\n\t\t\t\t\treturn token;\n\t\t\t} else\n\t\t\t\ttoken += ch;\n\n\t\t\tif (token == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\treturn token;\n\t\t}\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Skips all whitespace in the data stream.\n\t */\n\tprivate skipWhiteSpace():void\n\t{\n\t\tvar ch:string;\n\n\t\tdo\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\n\n\t\tthis.putBack();\n\t}\n\n\t/**\n\t * Skips to the next line.\n\t */\n\tprivate ignoreLine():void\n\t{\n\t\tvar ch:string;\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\n\t\t\tch = this.getNextChar();\n\t}\n\n\t/**\n\t * Retrieves the next single character in the data stream.\n\t */\n\tprivate getNextChar():string\n\t{\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\n\n\t\tif (ch == \"\\n\") {\n\t\t\t++this._line;\n\t\t\tthis._charLineIndex = 0;\n\t\t} else if (ch != \"\\r\")\n\t\t\t++this._charLineIndex;\n\n\t\tif (this._parseIndex == this._textData.length)\n\t\t\tthis._reachedEOF = true;\n\n\t\treturn ch;\n\t}\n\n\t/**\n\t * Retrieves the next integer in the data stream.\n\t */\n\tprivate getNextInt():number /*int*/\n\t{\n\t\tvar i:number = parseInt(this.getNextToken());\n\t\tif (isNaN(i))\n\t\t\tthis.sendParseError(\"int type\");\n\t\treturn i;\n\t}\n\n\t/**\n\t * Retrieves the next floating point number in the data stream.\n\t */\n\tprivate getNextNumber():number\n\t{\n\t\tvar f:number = parseFloat(this.getNextToken());\n\t\tif (isNaN(f))\n\t\t\tthis.sendParseError(\"float type\");\n\t\treturn f;\n\t}\n\n\t/**\n\t * Retrieves the next 3d vector in the data stream.\n\t */\n\tprivate parseVector3D():Vector3D\n\t{\n\t\tvar vec:Vector3D = new Vector3D();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tvec.x = this.getNextNumber();\n\t\tvec.y = this.getNextNumber();\n\t\tvec.z = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn vec;\n\t}\n\n\t/**\n\t * Retrieves the next quaternion in the data stream.\n\t */\n\tprivate parseQuaternion():Quaternion\n\t{\n\t\tvar quat:Quaternion = new Quaternion();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tquat.x = this.getNextNumber();\n\t\tquat.y = this.getNextNumber();\n\t\tquat.z = this.getNextNumber();\n\n\t\t// quat supposed to be unit length\n\t\tvar t:number = 1 - (quat.x*quat.x) - (quat.y*quat.y) - (quat.z*quat.z);\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn quat;\n\t}\n\n\t/**\n\t * Parses the command line data.\n\t */\n\tprivate parseCMD():void\n\t{\n\t\t// just ignore the command line property\n\t\tthis.parseLiteralstring();\n\t}\n\n\t/**\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\n\t * by double quotes.\n\t */\n\tprivate parseLiteralstring():string\n\t{\n\t\tthis.skipWhiteSpace();\n\n\t\tvar ch:string = this.getNextChar();\n\t\tvar str:string = \"\";\n\n\t\tif (ch != \"\\\"\")\n\t\t\tthis.sendParseError(\"\\\"\");\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch != \"\\\"\")\n\t\t\t\tstr += ch;\n\t\t} while (ch != \"\\\"\");\n\n\t\treturn str;\n\t}\n\n\t/**\n\t * Throws an end-of-file error when a premature end of file was encountered.\n\t */\n\tprivate sendEOFError():void\n\t{\n\t\tthrow new Error(\"Unexpected end of file\");\n\t}\n\n\t/**\n\t * Throws an error when an unexpected token was encountered.\n\t * @param expected The token type that was actually expected.\n\t */\n\tprivate sendParseError(expected:string):void\n\t{\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\n\t}\n\n\t/**\n\t * Throws an error when an unknown keyword was encountered.\n\t */\n\tprivate sendUnknownKeywordError():void\n\t{\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\n\t}\n}\n\nexport = MD5AnimParser;\n\n\n/**\n *\n */\nclass BaseFrameData\n{\n\t/**\n\t *\n\t */\n\tpublic position:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic orientation:Quaternion;\n}\n\n/**\n *\n */\nclass BoundsData\n{\n\t/**\n\t *\n\t */\n\tpublic min:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic max:Vector3D;\n}\n\n/**\n *\n */\nclass FrameData\n{\n\t/**\n\t *\n\t */\n\tpublic index:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic components:Array<number>;\n}\n\n/**\n *\n */\nclass HierarchyData\n{\n\t/**\n\t *\n\t */\n\tpublic name:string;\n\n\t/**\n\t *\n\t */\n\tpublic parentIndex:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic flags:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic startIndex:number /*int*/;\n}",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\n\n// todo: create animation system, parse skeleton\n\n/**\n * MD5MeshParser provides a parser for the md5mesh data type, providing the geometry of the md5 format.\n *\n * todo: optimize\n */\nclass MD5MeshParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\n\tpublic static NUM_MESHES_TOKEN:string = \"numMeshes\";\n\tpublic static COMMENT_TOKEN:string = \"//\";\n\tpublic static JOINTS_TOKEN:string = \"joints\";\n\tpublic static MESH_TOKEN:string = \"mesh\";\n\n\tpublic static MESH_SHADER_TOKEN:string = \"shader\";\n\tpublic static MESH_NUM_VERTS_TOKEN:string = \"numverts\";\n\tpublic static MESH_VERT_TOKEN:string = \"vert\";\n\tpublic static MESH_NUM_TRIS_TOKEN:string = \"numtris\";\n\tpublic static MESH_TRI_TOKEN:string = \"tri\";\n\tpublic static MESH_NUM_WEIGHTS_TOKEN:string = \"numweights\";\n\tpublic static MESH_WEIGHT_TOKEN:string = \"weight\";\n\n\tprivate _parseIndex:number /*int*/ = 0;\n\tprivate _reachedEOF:boolean;\n\tprivate _line:number /*int*/ = 0;\n\tprivate _charLineIndex:number /*int*/ = 0;\n\tprivate _version:number /*int*/;\n\tprivate _numJoints:number /*int*/;\n\tprivate _numMeshes:number /*int*/;\n\n\tprivate _mesh:Mesh;\n\tprivate _shaders:Array<string>;\n\n\tprivate _maxJointCount:number /*int*/;\n\tprivate _meshData:Array<MeshData>;\n\tprivate _bindPoses:Array<Matrix3D>;\n\tprivate _geometry:Geometry;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _animationSet:SkeletonAnimationSet;\n\n\tprivate _rotationQuat:Quaternion;\n\n\t/**\n\t * Creates a new MD5MeshParser object.\n\t */\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._rotationQuat = new Quaternion();\n\n\t\tthis._rotationQuat.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\n\n\t\tif (additionalRotationAxis) {\n\t\t\tvar quat:Quaternion = new Quaternion();\n\t\t\tquat.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\n\t\t\tthis._rotationQuat.multiply(this._rotationQuat, quat);\n\t\t}\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md5mesh\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar token:string;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\ttoken = this.getNextToken();\n\t\t\tswitch (token) {\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.VERSION_TOKEN:\n\t\t\t\t\tthis._version = this.getNextInt();\n\t\t\t\t\tif (this._version != 10)\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.COMMAND_LINE_TOKEN:\n\t\t\t\t\tthis.parseCMD();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.NUM_JOINTS_TOKEN:\n\t\t\t\t\tthis._numJoints = this.getNextInt();\n\t\t\t\t\tthis._bindPoses = new Array<Matrix3D>(this._numJoints);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.NUM_MESHES_TOKEN:\n\t\t\t\t\tthis._numMeshes = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.JOINTS_TOKEN:\n\t\t\t\t\tthis.parseJoints();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_TOKEN:\n\t\t\t\t\tthis.parseMesh();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (!this._reachedEOF)\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\n\t\t\t}\n\n\t\t\tif (this._reachedEOF) {\n\t\t\t\tthis.calculateMaxJointCount();\n\t\t\t\tthis._animationSet = new SkeletonAnimationSet(this._maxJointCount);\n\n\t\t\t\tthis._mesh = new Mesh(new Geometry(), null);\n\t\t\t\tthis._geometry = this._mesh.geometry;\n\n\t\t\t\tfor (var i:number /*int*/ = 0; i < this._meshData.length; ++i)\n\t\t\t\t\tthis._geometry.addSubGeometry(this.translateGeom(this._meshData[i].vertexData, this._meshData[i].weightData, this._meshData[i].indices));\n\n\t\t\t\t//_geometry.animation = _animation;\n\t\t\t\t//\t\t\t\t\t_mesh.animationController = _animationController;\n\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\t\t\tthis._pFinalizeAsset(this._geometry);\n\t\t\t\tthis._pFinalizeAsset(this._mesh);\n\t\t\t\tthis._pFinalizeAsset(this._skeleton);\n\t\t\t\tthis._pFinalizeAsset(this._animationSet);\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t}\n\t\t}\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\tprivate calculateMaxJointCount():void\n\t{\n\t\tthis._maxJointCount = 0;\n\n\t\tvar numMeshData:number /*int*/ = this._meshData.length;\n\t\tfor (var i:number /*int*/ = 0; i < numMeshData; ++i) {\n\t\t\tvar meshData:MeshData = this._meshData[i];\n\t\t\tvar vertexData:Array<VertexData> = meshData.vertexData;\n\t\t\tvar numVerts:number /*int*/ = vertexData.length;\n\n\t\t\tfor (var j:number /*int*/ = 0; j < numVerts; ++j) {\n\t\t\t\tvar zeroWeights:number /*int*/ = this.countZeroWeightJoints(vertexData[j], meshData.weightData);\n\t\t\t\tvar totalJoints:number /*int*/ = vertexData[j].countWeight - zeroWeights;\n\t\t\t\tif (totalJoints > this._maxJointCount)\n\t\t\t\t\tthis._maxJointCount = totalJoints;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate countZeroWeightJoints(vertex:VertexData, weights:Array<JointData>):number /*int*/\n\t{\n\t\tvar start:number /*int*/ = vertex.startWeight;\n\t\tvar end:number /*int*/ = vertex.startWeight + vertex.countWeight;\n\t\tvar count:number /*int*/ = 0;\n\t\tvar weight:number;\n\n\t\tfor (var i:number /*int*/ = start; i < end; ++i) {\n\t\t\tweight = weights[i].bias;\n\t\t\tif (weight == 0)\n\t\t\t\t++count;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Parses the skeleton's joints.\n\t */\n\tprivate parseJoints():void\n\t{\n\t\tvar ch:string;\n\t\tvar joint:SkeletonJoint;\n\t\tvar pos:Vector3D;\n\t\tvar quat:Quaternion;\n\t\tvar i:number /*int*/ = 0;\n\t\tvar token:string = this.getNextToken();\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tthis._skeleton = new Skeleton();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tjoint = new SkeletonJoint();\n\t\t\tjoint.name = this.parseLiteralstring();\n\t\t\tjoint.parentIndex = this.getNextInt();\n\t\t\tpos = this.parseVector3D();\n\t\t\tpos = this._rotationQuat.rotatePoint(pos);\n\t\t\tquat = this.parseQuaternion();\n\n\t\t\t// todo: check if this is correct, or maybe we want to actually store it as quats?\n\t\t\tthis._bindPoses[i] = quat.toMatrix3D();\n\t\t\tthis._bindPoses[i].appendTranslation(pos.x, pos.y, pos.z);\n\t\t\tvar inv:Matrix3D = this._bindPoses[i].clone();\n\t\t\tinv.invert();\n\t\t\tjoint.inverseBindPose = inv.rawData;\n\n\t\t\tthis._skeleton.joints[i++] = joint;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Puts back the last read character into the data stream.\n\t */\n\tprivate putBack():void\n\t{\n\t\tthis._parseIndex--;\n\t\tthis._charLineIndex--;\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\n\t}\n\n\t/**\n\t * Parses the mesh geometry.\n\t */\n\tprivate parseMesh():void\n\t{\n\t\tvar token:string = this.getNextToken();\n\t\tvar ch:string;\n\t\tvar vertexData:Array<VertexData>;\n\t\tvar weights:Array<JointData>;\n\t\tvar indices:Array<number> /*uint*/;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tif (this._shaders == null)\n\t\t\tthis._shaders = new Array<string>();\n\n\t\twhile (ch != \"}\") {\n\t\t\tch = this.getNextToken();\n\t\t\tswitch (ch) {\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_SHADER_TOKEN:\n\t\t\t\t\tthis._shaders.push(this.parseLiteralstring());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_VERTS_TOKEN:\n\t\t\t\t\tvertexData = new Array<VertexData>(this.getNextInt());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_TRIS_TOKEN:\n\t\t\t\t\tindices = new Array<number>(this.getNextInt()*3) /*uint*/;\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_WEIGHTS_TOKEN:\n\t\t\t\t\tweights = new Array<JointData>(this.getNextInt());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_VERT_TOKEN:\n\t\t\t\t\tthis.parseVertex(vertexData);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_TRI_TOKEN:\n\t\t\t\t\tthis.parseTri(indices);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_WEIGHT_TOKEN:\n\t\t\t\t\tthis.parseJoint(weights);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this._meshData == null)\n\t\t\tthis._meshData = new Array<MeshData>();\n\n\t\tvar i:number /*uint*/ = this._meshData.length;\n\t\tthis._meshData[i] = new MeshData();\n\t\tthis._meshData[i].vertexData = vertexData;\n\t\tthis._meshData[i].weightData = weights;\n\t\tthis._meshData[i].indices = indices;\n\t}\n\n\t/**\n\t * Converts the mesh data to a SkinnedSub instance.\n\t * @param vertexData The mesh's vertices.\n\t * @param weights The joint weights per vertex.\n\t * @param indices The indices for the faces.\n\t * @return A SubGeometry instance containing all geometrical data for the current mesh.\n\t */\n\tprivate translateGeom(vertexData:Array<VertexData>, weights:Array<JointData>, indices:Array<number> /*uint*/):TriangleSubGeometry\n\t{\n\t\tvar len:number /*int*/ = vertexData.length;\n\t\tvar v1:number /*int*/, v2:number /*int*/, v3:number /*int*/;\n\t\tvar vertex:VertexData;\n\t\tvar weight:JointData;\n\t\tvar bindPose:Matrix3D;\n\t\tvar pos:Vector3D;\n\t\tvar subGeom:TriangleSubGeometry = new TriangleSubGeometry(true);\n\t\tvar uvs:Array<number> = new Array<number>(len*2);\n\t\tvar vertices:Array<number> = new Array<number>(len*3);\n\t\tvar jointIndices:Array<number> = new Array<number>(len*this._maxJointCount);\n\t\tvar jointWeights:Array<number> = new Array<number>(len*this._maxJointCount);\n\t\tvar l:number /*int*/ = 0;\n\t\tvar nonZeroWeights:number /*int*/;\n\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i) {\n\t\t\tvertex = vertexData[i];\n\t\t\tv1 = vertex.index*3;\n\t\t\tv2 = v1 + 1;\n\t\t\tv3 = v1 + 2;\n\t\t\tvertices[v1] = vertices[v2] = vertices[v3] = 0;\n\n\t\t\tnonZeroWeights = 0;\n\t\t\tfor (var j:number /*int*/ = 0; j < vertex.countWeight; ++j) {\n\t\t\t\tweight = weights[vertex.startWeight + j];\n\t\t\t\tif (weight.bias > 0) {\n\t\t\t\t\tbindPose = this._bindPoses[weight.joint];\n\t\t\t\t\tpos = bindPose.transformVector(weight.pos);\n\t\t\t\t\tvertices[v1] += pos.x*weight.bias;\n\t\t\t\t\tvertices[v2] += pos.y*weight.bias;\n\t\t\t\t\tvertices[v3] += pos.z*weight.bias;\n\n\t\t\t\t\t// indices need to be multiplied by 3 (amount of matrix registers)\n\t\t\t\t\tjointIndices[l] = weight.joint*3;\n\t\t\t\t\tjointWeights[l++] = weight.bias;\n\t\t\t\t\t++nonZeroWeights;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = nonZeroWeights; j < this._maxJointCount; ++j) {\n\t\t\t\tjointIndices[l] = 0;\n\t\t\t\tjointWeights[l++] = 0;\n\t\t\t}\n\n\t\t\tv1 = vertex.index << 1;\n\t\t\tuvs[v1++] = vertex.s;\n\t\t\tuvs[v1] = vertex.t;\n\t\t}\n\n\t\tsubGeom.jointsPerVertex = this._maxJointCount;\n\t\tsubGeom.updateIndices(indices);\n\t\tsubGeom.updatePositions(vertices);\n\t\tsubGeom.updateUVs(uvs);\n\t\tsubGeom.updateJointIndices(jointIndices);\n\t\tsubGeom.updateJointWeights(jointWeights);\n\t\t// cause explicit updates\n\t\tsubGeom.vertexNormals;\n\t\tsubGeom.vertexTangents;\n\t\t// turn auto updates off because they may be animated and set explicitly\n\t\tsubGeom.autoDeriveTangents = false;\n\t\tsubGeom.autoDeriveNormals = false;\n\n\t\treturn subGeom;\n\t}\n\n\t/**\n\t * Retrieve the next triplet of vertex indices that form a face.\n\t * @param indices The index list in which to store the read data.\n\t */\n\tprivate parseTri(indices:Array<number> /*uint*/):void\n\t{\n\t\tvar index:number /*int*/ = this.getNextInt()*3;\n\t\tindices[index] = this.getNextInt();\n\t\tindices[index + 1] = this.getNextInt();\n\t\tindices[index + 2] = this.getNextInt();\n\t}\n\n\t/**\n\t * Reads a new joint data set for a single joint.\n\t * @param weights the target list to contain the weight data.\n\t */\n\tprivate parseJoint(weights:Array<JointData>):void\n\t{\n\t\tvar weight:JointData = new JointData();\n\t\tweight.index = this.getNextInt();\n\t\tweight.joint = this.getNextInt();\n\t\tweight.bias = this.getNextNumber();\n\t\tweight.pos = this.parseVector3D();\n\t\tweights[weight.index] = weight;\n\t}\n\n\t/**\n\t * Reads the data for a single vertex.\n\t * @param vertexData The list to contain the vertex data.\n\t */\n\tprivate parseVertex(vertexData:Array<VertexData>):void\n\t{\n\t\tvar vertex:VertexData = new VertexData();\n\t\tvertex.index = this.getNextInt();\n\t\tthis.parseUV(vertex);\n\t\tvertex.startWeight = this.getNextInt();\n\t\tvertex.countWeight = this.getNextInt();\n\t\t//\t\t\tif (vertex.countWeight > _maxJointCount) _maxJointCount = vertex.countWeight;\n\t\tvertexData[vertex.index] = vertex;\n\t}\n\n\t/**\n\t * Reads the next uv coordinate.\n\t * @param vertexData The vertexData to contain the UV coordinates.\n\t */\n\tprivate parseUV(vertexData:VertexData):void\n\t{\n\t\tvar ch:string = this.getNextToken();\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tvertexData.s = this.getNextNumber();\n\t\tvertexData.t = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\t}\n\n\t/**\n\t * Gets the next token in the data stream.\n\t */\n\tprivate getNextToken():string\n\t{\n\t\tvar ch:string;\n\t\tvar token:string = \"\";\n\n\t\twhile (!this._reachedEOF) {\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\n\t\t\t\tif (token != MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.skipWhiteSpace();\n\t\t\t\tif (token != \"\")\n\t\t\t\t\treturn token;\n\t\t\t} else\n\t\t\t\ttoken += ch;\n\n\t\t\tif (token == MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\treturn token;\n\t\t}\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Skips all whitespace in the data stream.\n\t */\n\tprivate skipWhiteSpace():void\n\t{\n\t\tvar ch:string;\n\n\t\tdo\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\n\n\t\tthis.putBack();\n\t}\n\n\t/**\n\t * Skips to the next line.\n\t */\n\tprivate ignoreLine():void\n\t{\n\t\tvar ch:string;\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\n\t\t\tch = this.getNextChar();\n\t}\n\n\t/**\n\t * Retrieves the next single character in the data stream.\n\t */\n\tprivate getNextChar():string\n\t{\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\n\n\t\tif (ch == \"\\n\") {\n\t\t\t++this._line;\n\t\t\tthis._charLineIndex = 0;\n\t\t} else if (ch != \"\\r\")\n\t\t\t++this._charLineIndex;\n\n\t\tif (this._parseIndex >= this._textData.length)\n\t\t\tthis._reachedEOF = true;\n\n\t\treturn ch;\n\t}\n\n\t/**\n\t * Retrieves the next integer in the data stream.\n\t */\n\tprivate getNextInt():number /*int*/\n\t{\n\t\tvar i:number = parseInt(this.getNextToken());\n\t\tif (isNaN(i))\n\t\t\tthis.sendParseError(\"int type\");\n\t\treturn i;\n\t}\n\n\t/**\n\t * Retrieves the next floating point number in the data stream.\n\t */\n\tprivate getNextNumber():number\n\t{\n\t\tvar f:number = parseFloat(this.getNextToken());\n\t\tif (isNaN(f))\n\t\t\tthis.sendParseError(\"float type\");\n\t\treturn f;\n\t}\n\n\t/**\n\t * Retrieves the next 3d vector in the data stream.\n\t */\n\tprivate parseVector3D():Vector3D\n\t{\n\t\tvar vec:Vector3D = new Vector3D();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tvec.x = -this.getNextNumber();\n\t\tvec.y = this.getNextNumber();\n\t\tvec.z = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn vec;\n\t}\n\n\t/**\n\t * Retrieves the next quaternion in the data stream.\n\t */\n\tprivate parseQuaternion():Quaternion\n\t{\n\t\tvar quat:Quaternion = new Quaternion();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tquat.x = this.getNextNumber();\n\t\tquat.y = -this.getNextNumber();\n\t\tquat.z = -this.getNextNumber();\n\n\t\t// quat supposed to be unit length\n\t\tvar t:number = 1 - quat.x*quat.x - quat.y*quat.y - quat.z*quat.z;\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\tvar rotQuat:Quaternion = new Quaternion();\n\t\trotQuat.multiply(this._rotationQuat, quat);\n\t\treturn rotQuat;\n\t}\n\n\t/**\n\t * Parses the command line data.\n\t */\n\tprivate parseCMD():void\n\t{\n\t\t// just ignore the command line property\n\t\tthis.parseLiteralstring();\n\t}\n\n\t/**\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\n\t * by double quotes.\n\t */\n\tprivate parseLiteralstring():string\n\t{\n\t\tthis.skipWhiteSpace();\n\n\t\tvar ch:string = this.getNextChar();\n\t\tvar str:string = \"\";\n\n\t\tif (ch != \"\\\"\")\n\t\t\tthis.sendParseError(\"\\\"\");\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch != \"\\\"\")\n\t\t\t\tstr += ch;\n\t\t} while (ch != \"\\\"\");\n\n\t\treturn str;\n\t}\n\n\t/**\n\t * Throws an end-of-file error when a premature end of file was encountered.\n\t */\n\tprivate sendEOFError():void\n\t{\n\t\tthrow new Error(\"Unexpected end of file\");\n\t}\n\n\t/**\n\t * Throws an error when an unexpected token was encountered.\n\t * @param expected The token type that was actually expected.\n\t */\n\tprivate sendParseError(expected:string):void\n\t{\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\n\t}\n\n\t/**\n\t * Throws an error when an unknown keyword was encountered.\n\t */\n\tprivate sendUnknownKeywordError():void\n\t{\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\n\t}\n}\n\nexport = MD5MeshParser;\n\n\nclass VertexData\n{\n\tpublic index:number /*int*/;\n\tpublic s:number;\n\tpublic t:number;\n\tpublic startWeight:number /*int*/;\n\tpublic countWeight:number /*int*/;\n}\n\nclass JointData\n{\n\tpublic index:number /*int*/;\n\tpublic joint:number /*int*/;\n\tpublic bias:number;\n\tpublic pos:Vector3D;\n}\n\nclass MeshData\n{\n\tpublic vertexData:Array<VertexData>;\n\tpublic weightData:Array<JointData>;\n\tpublic indices:Array<number> /*uint*/;\n}",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\nimport TextureProxyBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-renderergl/lib/managers/DefaultMaterialManager\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\n\n/**\n * Max3DSParser provides a parser for the 3ds data type.\n */\nclass Max3DSParser extends ParserBase\n{\n\tprivate _byteData:ByteArray;\n\n\tprivate _textures:Object;\n\tprivate _materials:Object;\n\tprivate _unfinalized_objects:Object;\n\n\tprivate _cur_obj_end:number;\n\tprivate _cur_obj:ObjectVO;\n\n\tprivate _cur_mat_end:number;\n\tprivate _cur_mat:MaterialVO;\n\tprivate _useSmoothingGroups:boolean;\n\n\t/**\n\t * Creates a new <code>Max3DSParser</code> object.\n\t *\n\t * @param useSmoothingGroups Determines whether the parser looks for smoothing groups in the 3ds file or assumes uniform smoothing. Defaults to true.\n\t */\n\tconstructor(useSmoothingGroups:boolean = true)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\n\t\tthis._useSmoothingGroups = useSmoothingGroups;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"3ds\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tvar ba:ByteArray;\n\n\t\tba = ParserUtils.toByteArray(data);\n\t\tif (ba) {\n\t\t\tba.position = 0;\n\t\t\tif (ba.readShort() == 0x4d4d)\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\n\t{\n\t\tif (resourceDependency.assets.length == 1) {\n\t\t\tvar asset:IAsset;\n\n\t\t\tasset = resourceDependency.assets[0];\n\t\t\tif (asset.assetType == AssetType.TEXTURE) {\n\t\t\t\tvar tex:TextureVO;\n\n\t\t\t\ttex = this._textures[resourceDependency.id];\n\t\t\t\ttex.texture = <Texture2DBase> asset;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\n\t{\n\t\t// TODO: Implement\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (!this._byteData) {\n\t\t\tthis._byteData = this._pGetByteData();\n\t\t\tthis._byteData.position = 0;\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;// Should be default\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t\tthis._textures = {};\n\t\t\tthis._materials = {};\n\t\t\tthis._unfinalized_objects = {};\n\t\t}\n\n\t\t// TODO: With this construct, the loop will run no-op for as long\n\t\t// as there is time once file has finished reading. Consider a nice\n\t\t// way to stop loop when byte array is empty, without putting it in\n\t\t// the while-conditional, which will prevent finalizations from\n\t\t// happening after the last chunk.\n\t\twhile (this._pHasTime()) {\n\n\t\t\t// If we are currently working on an object, and the most recent chunk was\n\t\t\t// the last one in that object, finalize the current object.\n\t\t\tif (this._cur_mat && this._byteData.position >= this._cur_mat_end)\n\t\t\t\tthis.finalizeCurrentMaterial();\n\t\t\telse if (this._cur_obj && this._byteData.position >= this._cur_obj_end) {\n\t\t\t\t// Can't finalize at this point, because we have to wait until the full\n\t\t\t\t// animation section has been parsed for any potential pivot definitions\n\t\t\t\tthis._unfinalized_objects[this._cur_obj.name] = this._cur_obj;\n\t\t\t\tthis._cur_obj_end = Number.MAX_VALUE /*uint*/;\n\t\t\t\tthis._cur_obj = null;\n\t\t\t}\n\n\t\t\tif (this._byteData.getBytesAvailable() > 0) {\n\t\t\t\tvar cid:number /*uint*/;\n\t\t\t\tvar len:number /*uint*/;\n\t\t\t\tvar end:number /*uint*/;\n\n\t\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\t\tlen = this._byteData.readUnsignedInt();\n\t\t\t\tend = this._byteData.position + (len - 6);\n\n\t\t\t\tswitch (cid) {\n\t\t\t\t\tcase 0x4D4D: // MAIN3DS\n\t\t\t\t\tcase 0x3D3D: // EDIT3DS\n\t\t\t\t\tcase 0xB000: // KEYF3DS\n\t\t\t\t\t\t// This types are \"container chunks\" and contain only\n\t\t\t\t\t\t// sub-chunks (no data on their own.) This means that\n\t\t\t\t\t\t// there is nothing more to parse at this point, and\n\t\t\t\t\t\t// instead we should progress to the next chunk, which\n\t\t\t\t\t\t// will be the first sub-chunk of this one.\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0xAFFF: // MATERIAL\n\t\t\t\t\t\tthis._cur_mat_end = end;\n\t\t\t\t\t\tthis._cur_mat = this.parseMaterial();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4000: // EDIT_OBJECT\n\t\t\t\t\t\tthis._cur_obj_end = end;\n\t\t\t\t\t\tthis._cur_obj = new ObjectVO();\n\t\t\t\t\t\tthis._cur_obj.name = this.readNulTermstring();\n\t\t\t\t\t\tthis._cur_obj.materials = new Array<string>();\n\t\t\t\t\t\tthis._cur_obj.materialFaces = {};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4100: // OBJ_TRIMESH\n\t\t\t\t\t\tthis._cur_obj.type = AssetType.MESH;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4110: // TRI_VERTEXL\n\t\t\t\t\t\tthis.parseVertexList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4120: // TRI_FACELIST\n\t\t\t\t\t\tthis.parseFaceList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4140: // TRI_MAPPINGCOORDS\n\t\t\t\t\t\tthis.parseUVList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4130: // Face materials\n\t\t\t\t\t\tthis.parseFaceMaterialList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4160: // Transform\n\t\t\t\t\t\tthis._cur_obj.transform = this.readTransform();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0xB002: // Object animation (including pivot)\n\t\t\t\t\t\tthis.parseObjectAnimation(end);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4150: // Smoothing groups\n\t\t\t\t\t\tthis.parseSmoothingGroups();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Skip this (unknown) chunk\n\t\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Pause parsing if there were any dependencies found during this\n\t\t\t\t// iteration (i.e. if there are any dependencies that need to be\n\t\t\t\t// retrieved at this time.)\n\t\t\t\tif (this.dependencies.length) {\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// More parsing is required if the entire byte array has not yet\n\t\t// been read, or if there is a currently non-finalized object in\n\t\t// the pipeline.\n\t\tif (this._byteData.getBytesAvailable() || this._cur_obj || this._cur_mat) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t} else {\n\t\t\tvar name:string;\n\n\t\t\t// Finalize any remaining objects before ending.\n\t\t\tfor (name in this._unfinalized_objects) {\n\t\t\t\tvar obj:DisplayObjectContainer;\n\t\t\t\tobj = this.constructObject(this._unfinalized_objects[name]);\n\t\t\t\tif (obj) {\n\t\t\t\t\t//add to the content property\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\n\n\t\t\t\t\tthis._pFinalizeAsset(obj, name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\tprivate parseMaterial():MaterialVO\n\t{\n\t\tvar mat:MaterialVO;\n\n\t\tmat = new MaterialVO();\n\n\t\twhile (this._byteData.position < this._cur_mat_end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\t\t\tvar end:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\t\t\tend = this._byteData.position + (len - 6);\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xA000: // Material name\n\t\t\t\t\tmat.name = this.readNulTermstring();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA010: // Ambient color\n\t\t\t\t\tmat.ambientColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA020: // Diffuse color\n\t\t\t\t\tmat.diffuseColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA030: // Specular color\n\t\t\t\t\tmat.specularColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA081: // Two-sided, existence indicates \"true\"\n\t\t\t\t\tmat.twoSided = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA200: // Main (color) texture\n\t\t\t\t\tmat.colorMap = this.parseTexture(end);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA204: // Specular map\n\t\t\t\t\tmat.specularMap = this.parseTexture(end);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._byteData.position = end;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn mat;\n\t}\n\n\tprivate parseTexture(end:number /*uint*/):TextureVO\n\t{\n\t\tvar tex:TextureVO;\n\n\t\ttex = new TextureVO();\n\n\t\twhile (this._byteData.position < end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xA300:\n\t\t\t\t\ttex.url = this.readNulTermstring();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t// Skip this unknown texture sub-chunk\n\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._textures[tex.url] = tex;\n\t\tthis._pAddDependency(tex.url, new URLRequest(tex.url));\n\n\t\treturn tex;\n\t}\n\n\tprivate parseVertexList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.verts = new Array<number>(count*3);\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.verts.length;\n\t\twhile (i < len) {\n\t\t\tvar x:number, y:number, z:number;\n\n\t\t\tx = this._byteData.readFloat();\n\t\t\ty = this._byteData.readFloat();\n\t\t\tz = this._byteData.readFloat();\n\n\t\t\tthis._cur_obj.verts[i++] = x;\n\t\t\tthis._cur_obj.verts[i++] = z;\n\t\t\tthis._cur_obj.verts[i++] = y;\n\t\t}\n\t}\n\n\tprivate parseFaceList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.indices = new Array<number>(count*3) /*uint*/;\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.indices.length;\n\t\twhile (i < len) {\n\t\t\tvar i0:number /*uint*/, i1:number /*uint*/, i2:number /*uint*/;\n\n\t\t\ti0 = this._byteData.readUnsignedShort();\n\t\t\ti1 = this._byteData.readUnsignedShort();\n\t\t\ti2 = this._byteData.readUnsignedShort();\n\n\t\t\tthis._cur_obj.indices[i++] = i0;\n\t\t\tthis._cur_obj.indices[i++] = i2;\n\t\t\tthis._cur_obj.indices[i++] = i1;\n\n\t\t\t// Skip \"face info\", irrelevant in Away3D\n\t\t\tthis._byteData.position += 2;\n\t\t}\n\n\t\tthis._cur_obj.smoothingGroups = new Array<number>(count) /*uint*/;\n\t}\n\n\tprivate parseSmoothingGroups():void\n\t{\n\t\tvar len:number /*uint*/ = this._cur_obj.indices.length/3;\n\t\tvar i:number /*uint*/ = 0;\n\t\twhile (i < len) {\n\t\t\tthis._cur_obj.smoothingGroups[i] = this._byteData.readUnsignedInt();\n\t\t\ti++;\n\t\t}\n\t}\n\n\tprivate parseUVList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.uvs = new Array<number>(count*2);\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.uvs.length;\n\t\twhile (i < len) {\n\t\t\tthis._cur_obj.uvs[i++] = this._byteData.readFloat();\n\t\t\tthis._cur_obj.uvs[i++] = 1.0 - this._byteData.readFloat();\n\t\t}\n\t}\n\n\tprivate parseFaceMaterialList():void\n\t{\n\t\tvar mat:string;\n\t\tvar count:number /*uint*/;\n\t\tvar i:number /*uint*/;\n\t\tvar faces:Array<number> /*uint*/;\n\n\t\tmat = this.readNulTermstring();\n\t\tcount = this._byteData.readUnsignedShort();\n\n\t\tfaces = new Array<number>(count) /*uint*/;\n\t\ti = 0;\n\t\twhile (i < faces.length)\n\t\t\tfaces[i++] = this._byteData.readUnsignedShort();\n\n\t\tthis._cur_obj.materials.push(mat);\n\t\tthis._cur_obj.materialFaces[mat] = faces;\n\t}\n\n\tprivate parseObjectAnimation(end:number):void\n\t{\n\t\tvar vo:ObjectVO;\n\t\tvar obj:DisplayObjectContainer;\n\t\tvar pivot:Vector3D;\n\t\tvar name:string;\n\t\tvar hier:number /*uint*/;\n\n\t\t// Pivot defaults to origin\n\t\tpivot = new Vector3D;\n\n\t\twhile (this._byteData.position < end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xb010: // Name/hierarchy\n\t\t\t\t\tname = this.readNulTermstring();\n\t\t\t\t\tthis._byteData.position += 4;\n\t\t\t\t\thier = this._byteData.readShort();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xb013: // Pivot\n\t\t\t\t\tpivot.x = this._byteData.readFloat();\n\t\t\t\t\tpivot.z = this._byteData.readFloat();\n\t\t\t\t\tpivot.y = this._byteData.readFloat();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If name is \"$$$DUMMY\" this is an empty object (e.g. a container)\n\t\t// and will be ignored in this version of the parser\n\t\t// TODO: Implement containers in 3DS parser.\n\t\tif (name != '$$$DUMMY' && this._unfinalized_objects.hasOwnProperty(name)) {\n\t\t\tvo = this._unfinalized_objects[name];\n\t\t\tobj = this.constructObject(vo, pivot);\n\n\t\t\tif (obj) {\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\n\n\t\t\t\tthis._pFinalizeAsset(obj, vo.name);\n\t\t\t}\n\n\n\t\t\tdelete this._unfinalized_objects[name];\n\t\t}\n\t}\n\n\tprivate constructObject(obj:ObjectVO, pivot:Vector3D = null):DisplayObjectContainer\n\t{\n\t\tif (obj.type == AssetType.MESH) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar sub:TriangleSubGeometry;\n\t\t\tvar geom:Geometry;\n\t\t\tvar mat:MaterialBase;\n\t\t\tvar mesh:Mesh;\n\t\t\tvar mtx:Matrix3D;\n\t\t\tvar vertices:Array<VertexVO>;\n\t\t\tvar faces:Array<FaceVO>;\n\n\t\t\tif (obj.materials.length > 1)\n\t\t\t\tconsole.log(\"The Away3D 3DS parser does not support multiple materials per mesh at this point.\");\n\n\t\t\t// Ignore empty objects\n\t\t\tif (!obj.indices || obj.indices.length == 0)\n\t\t\t\treturn null;\n\n\t\t\tvertices = new Array<VertexVO>(obj.verts.length/3);\n\t\t\tfaces = new Array<FaceVO>(obj.indices.length/3);\n\n\t\t\tthis.prepareData(vertices, faces, obj);\n\n\t\t\tif (this._useSmoothingGroups)\n\t\t\t\tthis.applySmoothGroups(vertices, faces);\n\n\t\t\tobj.verts = new Array<number>(vertices.length*3);\n\t\t\tfor (i = 0; i < vertices.length; i++) {\n\t\t\t\tobj.verts[i*3] = vertices[i].x;\n\t\t\t\tobj.verts[i*3 + 1] = vertices[i].y;\n\t\t\t\tobj.verts[i*3 + 2] = vertices[i].z;\n\t\t\t}\n\t\t\tobj.indices = new Array<number>(faces.length*3) /*uint*/;\n\n\t\t\tfor (i = 0; i < faces.length; i++) {\n\t\t\t\tobj.indices[i*3] = faces[i].a;\n\t\t\t\tobj.indices[i*3 + 1] = faces[i].b;\n\t\t\t\tobj.indices[i*3 + 2] = faces[i].c;\n\t\t\t}\n\n\t\t\tif (obj.uvs) {\n\t\t\t\t// If the object had UVs to start with, use UVs generated by\n\t\t\t\t// smoothing group splitting algorithm. Otherwise those UVs\n\t\t\t\t// will be nonsense and should be skipped.\n\t\t\t\tobj.uvs = new Array<number>(vertices.length*2);\n\t\t\t\tfor (i = 0; i < vertices.length; i++) {\n\t\t\t\t\tobj.uvs[i*2] = vertices[i].u;\n\t\t\t\t\tobj.uvs[i*2 + 1] = vertices[i].v;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeom = new Geometry();\n\n\t\t\t// Construct sub-geometries (potentially splitting buffers)\n\t\t\t// and add them to geometry.\n\t\t\tsub = new TriangleSubGeometry(true);\n\t\t\tsub.updateIndices(obj.indices);\n\t\t\tsub.updatePositions(obj.verts);\n\t\t\tsub.updateUVs(obj.uvs);\n\n\t\t\tgeom.addSubGeometry(sub);\n\n\t\t\tif (obj.materials.length > 0) {\n\t\t\t\tvar mname:string;\n\t\t\t\tmname = obj.materials[0];\n\t\t\t\tmat = this._materials[mname].material;\n\t\t\t}\n\n\t\t\t// Apply pivot translation to geometry if a pivot was\n\t\t\t// found while parsing the keyframe chunk earlier.\n\t\t\tif (pivot) {\n\t\t\t\tif (obj.transform) {\n\t\t\t\t\t// If a transform was found while parsing the\n\t\t\t\t\t// object chunk, use it to find the local pivot vector\n\t\t\t\t\tvar dat:Array<number> = obj.transform.concat();\n\t\t\t\t\tdat[12] = 0;\n\t\t\t\t\tdat[13] = 0;\n\t\t\t\t\tdat[14] = 0;\n\t\t\t\t\tmtx = new Matrix3D(dat);\n\t\t\t\t\tpivot = mtx.transformVector(pivot);\n\t\t\t\t}\n\n\t\t\t\tpivot.scaleBy(-1);\n\n\t\t\t\tmtx = new Matrix3D();\n\t\t\t\tmtx.appendTranslation(pivot.x, pivot.y, pivot.z);\n\t\t\t\tgeom.applyTransformation(mtx);\n\t\t\t}\n\n\t\t\t// Apply transformation to geometry if a transformation\n\t\t\t// was found while parsing the object chunk earlier.\n\t\t\tif (obj.transform) {\n\t\t\t\tmtx = new Matrix3D(obj.transform);\n\t\t\t\tmtx.invert();\n\t\t\t\tgeom.applyTransformation(mtx);\n\t\t\t}\n\n\t\t\t// Final transform applied to geometry. Finalize the geometry,\n\t\t\t// which will no longer be modified after this point.\n\t\t\tthis._pFinalizeAsset(geom, obj.name.concat('_geom'));\n\n\t\t\t// Build mesh and return it\n\t\t\tmesh = new Mesh(geom, mat);\n\t\t\tmesh.transform.matrix3D = new Matrix3D(obj.transform);\n\t\t\treturn mesh;\n\t\t}\n\n\t\t// If reached, unknown\n\t\treturn null;\n\t}\n\n\tprivate prepareData(vertices:Array<VertexVO>, faces:Array<FaceVO>, obj:ObjectVO):void\n\t{\n\t\t// convert raw ObjectVO's data to structured VertexVO and FaceVO\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar k:number /*int*/;\n\t\tvar len:number /*int*/ = obj.verts.length;\n\t\tfor (i = 0, j = 0, k = 0; i < len;) {\n\t\t\tvar v:VertexVO = new VertexVO;\n\t\t\tv.x = obj.verts[i++];\n\t\t\tv.y = obj.verts[i++];\n\t\t\tv.z = obj.verts[i++];\n\t\t\tif (obj.uvs) {\n\t\t\t\tv.u = obj.uvs[j++];\n\t\t\t\tv.v = obj.uvs[j++];\n\t\t\t}\n\t\t\tvertices[k++] = v;\n\t\t}\n\t\tlen = obj.indices.length;\n\t\tfor (i = 0, k = 0; i < len;) {\n\t\t\tvar f:FaceVO = new FaceVO();\n\t\t\tf.a = obj.indices[i++];\n\t\t\tf.b = obj.indices[i++];\n\t\t\tf.c = obj.indices[i++];\n\t\t\tf.smoothGroup = obj.smoothingGroups[k] || 0;\n\t\t\tfaces[k++] = f;\n\t\t}\n\t}\n\n\tprivate applySmoothGroups(vertices:Array<VertexVO>, faces:Array<FaceVO>):void\n\t{\n\t\t// clone vertices according to following rule:\n\t\t// clone if vertex's in faces from groups 1+2 and 3\n\t\t// don't clone if vertex's in faces from groups 1+2, 3 and 1+3\n\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar k:number /*int*/;\n\t\tvar l:number /*int*/;\n\t\tvar len:number /*int*/;\n\t\tvar numVerts:number /*uint*/ = vertices.length;\n\t\tvar numFaces:number /*uint*/ = faces.length;\n\n\t\t// extract groups data for vertices\n\t\tvar vGroups:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\n\t\tfor (i = 0; i < numVerts; i++)\n\t\t\tvGroups[i] = new Array<number>() /*uint*/;\n\t\tfor (i = 0; i < numFaces; i++) {\n\t\t\tvar face:FaceVO = faces[i];\n\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\tvar groups:Array<number> /*uint*/ = vGroups[(j == 0)? face.a : ((j == 1)? face.b : face.c)];\n\t\t\t\tvar group:number /*uint*/ = face.smoothGroup;\n\t\t\t\tfor (k = groups.length - 1; k >= 0; k--) {\n\t\t\t\t\tif ((group & groups[k]) > 0) {\n\t\t\t\t\t\tgroup |= groups[k];\n\t\t\t\t\t\tgroups.splice(k, 1);\n\t\t\t\t\t\tk = groups.length - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tgroups.push(group);\n\t\t\t}\n\t\t}\n\t\t// clone vertices\n\t\tvar vClones:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\n\t\tfor (i = 0; i < numVerts; i++) {\n\t\t\tif ((len = vGroups[i].length) < 1)\n\t\t\t\tcontinue;\n\t\t\tvar clones:Array<number> /*uint*/ = new Array<number>(len) /*uint*/;\n\t\t\tvClones[i] = clones;\n\t\t\tclones[0] = i;\n\t\t\tvar v0:VertexVO = vertices[i];\n\t\t\tfor (j = 1; j < len; j++) {\n\t\t\t\tvar v1:VertexVO = new VertexVO;\n\t\t\t\tv1.x = v0.x;\n\t\t\t\tv1.y = v0.y;\n\t\t\t\tv1.z = v0.z;\n\t\t\t\tv1.u = v0.u;\n\t\t\t\tv1.v = v0.v;\n\t\t\t\tclones[j] = vertices.length;\n\t\t\t\tvertices.push(v1);\n\t\t\t}\n\t\t}\n\t\tnumVerts = vertices.length;\n\n\t\tfor (i = 0; i < numFaces; i++) {\n\t\t\tface = faces[i];\n\t\t\tgroup = face.smoothGroup;\n\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\tk = (j == 0)? face.a : ((j == 1)? face.b : face.c);\n\t\t\t\tgroups = vGroups[k];\n\t\t\t\tlen = groups.length;\n\t\t\t\tclones = vClones[k];\n\t\t\t\tfor (l = 0; l < len; l++) {\n\t\t\t\t\tif (((group == 0) && (groups[l] == 0)) || ((group & groups[l]) > 0)) {\n\t\t\t\t\t\tvar index:number /*uint*/ = clones[l];\n\t\t\t\t\t\tif (group == 0) {\n\t\t\t\t\t\t\t// vertex is unique if no smoothGroup found\n\t\t\t\t\t\t\tgroups.splice(l, 1);\n\t\t\t\t\t\t\tclones.splice(l, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j == 0)\n\t\t\t\t\t\t\tface.a = index; else if (j == 1)\n\t\t\t\t\t\t\tface.b = index; else\n\t\t\t\t\t\t\tface.c = index;\n\t\t\t\t\t\tl = len;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate finalizeCurrentMaterial():void\n\t{\n\t\tvar mat:MethodMaterial;\n\n\t\tif (this._cur_mat.colorMap)\n\t\t\tmat = new MethodMaterial(this._cur_mat.colorMap.texture || DefaultMaterialManager.getDefaultTexture());\n\t\telse\n\t\t\tmat = new MethodMaterial(this._cur_mat.ambientColor);\n\n\t\tmat.diffuseColor = this._cur_mat.diffuseColor;\n\t\tmat.specularColor = this._cur_mat.specularColor;\n\n\t\tif (this.materialMode >= 2)\n\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS\n\n\t\tmat.bothSides = this._cur_mat.twoSided;\n\n\t\tthis._pFinalizeAsset(mat, this._cur_mat.name);\n\n\t\tthis._materials[this._cur_mat.name] = this._cur_mat;\n\t\tthis._cur_mat.material = mat;\n\n\t\tthis._cur_mat = null;\n\t}\n\n\tprivate readNulTermstring():string\n\t{\n\t\tvar chr:number /*int*/;\n\t\tvar str:string = \"\";\n\n\t\twhile ((chr = this._byteData.readUnsignedByte()) > 0)\n\t\t\tstr += String.fromCharCode(chr);\n\n\t\treturn str;\n\t}\n\n\tprivate readTransform():Array<number>\n\t{\n\t\tvar data:Array<number>;\n\n\t\tdata = new Array<number>(16);\n\n\t\t// X axis\n\t\tdata[0] = this._byteData.readFloat(); // X\n\t\tdata[2] = this._byteData.readFloat(); // Z\n\t\tdata[1] = this._byteData.readFloat(); // Y\n\t\tdata[3] = 0;\n\n\t\t// Z axis\n\t\tdata[8] = this._byteData.readFloat(); // X\n\t\tdata[10] = this._byteData.readFloat(); // Z\n\t\tdata[9] = this._byteData.readFloat(); // Y\n\t\tdata[11] = 0;\n\n\t\t// Y Axis\n\t\tdata[4] = this._byteData.readFloat(); // X\n\t\tdata[6] = this._byteData.readFloat(); // Z\n\t\tdata[5] = this._byteData.readFloat(); // Y\n\t\tdata[7] = 0;\n\n\t\t// Translation\n\t\tdata[12] = this._byteData.readFloat(); // X\n\t\tdata[14] = this._byteData.readFloat(); // Z\n\t\tdata[13] = this._byteData.readFloat(); // Y\n\t\tdata[15] = 1;\n\n\t\treturn data;\n\t}\n\n\tprivate readColor():number /*int*/\n\t{\n\t\tvar cid:number /*int*/;\n\t\tvar len:number /*int*/;\n\t\tvar r:number /*int*/, g:number /*int*/, b:number /*int*/;\n\n\t\tcid = this._byteData.readUnsignedShort();\n\t\tlen = this._byteData.readUnsignedInt();\n\n\t\tswitch (cid) {\n\t\t\tcase 0x0010: // Floats\n\t\t\t\tr = this._byteData.readFloat()*255;\n\t\t\t\tg = this._byteData.readFloat()*255;\n\t\t\t\tb = this._byteData.readFloat()*255;\n\t\t\t\tbreak;\n\t\t\tcase 0x0011: // 24-bit color\n\t\t\t\tr = this._byteData.readUnsignedByte();\n\t\t\t\tg = this._byteData.readUnsignedByte();\n\t\t\t\tb = this._byteData.readUnsignedByte();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n}\n\nexport = Max3DSParser;\n\n/**\n *\n */\nclass FaceVO\n{\n\tpublic a:number /*int*/;\n\tpublic b:number /*int*/;\n\tpublic c:number /*int*/;\n\tpublic smoothGroup:number /*int*/;\n}\n\n/**\n *\n */\nclass MaterialVO\n{\n\tpublic name:string;\n\tpublic ambientColor:number /*int*/;\n\tpublic diffuseColor:number /*int*/;\n\tpublic specularColor:number /*int*/;\n\tpublic twoSided:boolean;\n\tpublic colorMap:TextureVO;\n\tpublic specularMap:TextureVO;\n\tpublic material:MaterialBase;\n}\n\n/**\n *\n */\nclass ObjectVO\n{\n\tpublic name:string;\n\tpublic type:string;\n\tpublic pivotX:number;\n\tpublic pivotY:number;\n\tpublic pivotZ:number;\n\tpublic transform:Array<number>;\n\tpublic verts:Array<number>;\n\tpublic indices:Array<number> /*int*/;\n\tpublic uvs:Array<number>;\n\tpublic materialFaces:Object;\n\tpublic materials:Array<string>;\n\tpublic smoothingGroups:Array<number> /*int*/;\n}\n\n/**\n *\n */\nclass TextureVO\n{\n\tpublic url:string;\n\tpublic texture:Texture2DBase;\n}\n\n/**\n *\n */\nclass VertexVO\n{\n\tpublic x:number;\n\tpublic y:number;\n\tpublic z:number;\n\tpublic u:number;\n\tpublic v:number;\n\tpublic normal:Vector3D;\n\tpublic tangent:Vector3D;\n}",
    "import TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-renderergl/lib/managers/DefaultMaterialManager\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\n\n/**\n * OBJParser provides a parser for the OBJ data type.\n */\nclass OBJParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tprivate _charIndex:number;\n\tprivate _oldIndex:number;\n\tprivate _stringLength:number;\n\tprivate _currentObject:ObjectGroup;\n\tprivate _currentGroup:Group;\n\tprivate _currentMaterialGroup:MaterialGroup;\n\tprivate _objects:Array<ObjectGroup>;\n\tprivate _materialIDs:string[];\n\tprivate _materialLoaded:Array<LoadedMaterial>;\n\tprivate _materialSpecularData:Array<SpecularData>;\n\tprivate _meshes:Array<Mesh>;\n\tprivate _lastMtlID:string;\n\tprivate _objectIndex:number;\n\tprivate _realIndices;\n\tprivate _vertexIndex:number;\n\tprivate _vertices:Array<Vertex>;\n\tprivate _vertexNormals:Array<Vertex>;\n\tprivate _uvs:Array<UV>;\n\tprivate _scale:number;\n\tprivate _mtlLib:boolean;\n\tprivate _mtlLibLoaded:boolean = true;\n\tprivate _activeMaterialID:string = \"\";\n\n\t/**\n\t * Creates a new OBJParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(scale:number = 1)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._scale = scale;\n\t}\n\n\t/**\n\t * Scaling factor applied directly to vertices data\n\t * @param value The scaling factor.\n\t */\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"obj\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tvar content:string = ParserUtils.toString(data);\n\t\tvar hasV:boolean = false;\n\t\tvar hasF:boolean = false;\n\n\t\tif (content) {\n\t\t\thasV = content.indexOf(\"\\nv \") != -1;\n\t\t\thasF = content.indexOf(\"\\nf \") != -1;\n\t\t}\n\n\t\treturn hasV && hasF;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif (resourceDependency.id == 'mtl') {\n\t\t\tvar str:string = ParserUtils.toString(resourceDependency.data);\n\t\t\tthis.parseMtl(str);\n\n\t\t} else {\n\t\t\tvar asset:IAsset;\n\n\t\t\tif (resourceDependency.assets.length != 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tasset = resourceDependency.assets[0];\n\n\t\t\tif (asset.assetType == AssetType.TEXTURE) {\n\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\t\tlm.materialID = resourceDependency.id;\n\t\t\t\tlm.texture = <Texture2DBase> asset;\n\n\t\t\t\tthis._materialLoaded.push(lm);\n\n\t\t\t\tif (this._meshes.length > 0) {\n\t\t\t\t\tthis.applyMaterial(lm);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tif (resourceDependency.id == \"mtl\") {\n\t\t\tthis._mtlLib = false;\n\t\t\tthis._mtlLibLoaded = false;\n\t\t} else {\n\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\tlm.materialID = resourceDependency.id;\n\t\t\tthis._materialLoaded.push(lm);\n\t\t}\n\n\t\tif (this._meshes.length > 0)\n\t\t\tthis.applyMaterial(lm);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar line:string;\n\t\tvar creturn:string = String.fromCharCode(10);\n\t\tvar trunk;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\t// Merge linebreaks that are immediately preceeded by\n\t\t\t// the \"escape\" backward slash into single lines.\n\t\t\tthis._textData = this._textData.replace(/\\\\[\\r\\n]+\\s*/gm, ' ');\n\t\t}\n\n\t\tif (this._textData.indexOf(creturn) == -1)\n\t\t\tcreturn = String.fromCharCode(13);\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._startedParsing = true;\n\t\t\tthis._vertices = new Array<Vertex>();\n\t\t\tthis._vertexNormals = new Array<Vertex>();\n\t\t\tthis._materialIDs = new Array<string>();\n\t\t\tthis._materialLoaded = new Array<LoadedMaterial>();\n\t\t\tthis._meshes = new Array<Mesh>();\n\t\t\tthis._uvs = new Array<UV>();\n\t\t\tthis._stringLength = this._textData.length;\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, 0);\n\t\t\tthis._oldIndex = 0;\n\t\t\tthis._objects = new Array<ObjectGroup>();\n\t\t\tthis._objectIndex = 0;\n\t\t}\n\n\t\twhile (this._charIndex < this._stringLength && this._pHasTime()) {\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, this._oldIndex);\n\n\t\t\tif (this._charIndex == -1)\n\t\t\t\tthis._charIndex = this._stringLength;\n\n\t\t\tline = this._textData.substring(this._oldIndex, this._charIndex);\n\t\t\tline = line.split('\\r').join(\"\");\n\t\t\tline = line.replace(\"  \", \" \");\n\t\t\ttrunk = line.split(\" \");\n\t\t\tthis._oldIndex = this._charIndex + 1;\n\t\t\tthis.parseLine(trunk);\n\n\t\t\t// If whatever was parsed on this line resulted in the\n\t\t\t// parsing being paused to retrieve dependencies, break\n\t\t\t// here and do not continue parsing until un-paused.\n\t\t\tif (this.parsingPaused) {\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._charIndex >= this._stringLength) {\n\n\t\t\tif (this._mtlLib && !this._mtlLibLoaded) {\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\n\t\t\tthis.translate();\n\t\t\tthis.applyMaterials();\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\t/**\n\t * Parses a single line in the OBJ file.\n\t */\n\tprivate parseLine(trunk)\n\t{\n\t\tswitch (trunk[0]) {\n\n\t\t\tcase \"mtllib\":\n\n\t\t\t\tthis._mtlLib = true;\n\t\t\t\tthis._mtlLibLoaded = false;\n\t\t\t\tthis.loadMtl(trunk[1]);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"g\":\n\n\t\t\t\tthis.createGroup(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"o\":\n\n\t\t\t\tthis.createObject(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"usemtl\":\n\n\t\t\t\tif (this._mtlLib) {\n\n\t\t\t\t\tif (!trunk[1])\n\t\t\t\t\t\ttrunk[1] = \"def000\";\n\n\t\t\t\t\tthis._materialIDs.push(trunk[1]);\n\t\t\t\t\tthis._activeMaterialID = trunk[1];\n\n\t\t\t\t\tif (this._currentGroup)\n\t\t\t\t\t\tthis._currentGroup.materialID = this._activeMaterialID;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"v\":\n\n\t\t\t\tthis.parseVertex(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"vt\":\n\n\t\t\t\tthis.parseUV(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"vn\":\n\n\t\t\t\tthis.parseVertexNormal(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"f\":\n\n\t\t\t\tthis.parseFace(trunk);\n\n\t\t}\n\t}\n\n\t/**\n\t * Converts the parsed data into an Away3D scenegraph structure\n\t */\n\tprivate translate()\n\t{\n\t\tfor (var objIndex:number = 0; objIndex < this._objects.length; ++objIndex) {\n\t\t\tvar groups:Array<Group> = this._objects[objIndex].groups;\n\t\t\tvar numGroups:number = groups.length;\n\t\t\tvar materialGroups:Array<MaterialGroup>;\n\t\t\tvar numMaterialGroups:number;\n\t\t\tvar geometry:Geometry;\n\t\t\tvar mesh:Mesh;\n\n\t\t\tvar m:number;\n\t\t\tvar sm:number;\n\t\t\tvar bmMaterial:MethodMaterial;\n\n\t\t\tfor (var g:number = 0; g < numGroups; ++g) {\n\t\t\t\tgeometry = new Geometry();\n\t\t\t\tmaterialGroups = groups[g].materialGroups;\n\t\t\t\tnumMaterialGroups = materialGroups.length;\n\n\t\t\t\tfor (m = 0; m < numMaterialGroups; ++m)\n\t\t\t\t\tthis.translateMaterialGroup(materialGroups[m], geometry);\n\n\t\t\t\tif (geometry.subGeometries.length == 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Finalize and force type-based name\n\t\t\t\tthis._pFinalizeAsset(<IAsset> geometry);//, \"\");\n\n\t\t\t\tbmMaterial = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\n\n\t\t\t\t//check for multipass\n\t\t\t\tif (this.materialMode >= 2)\n\t\t\t\t\tbmMaterial.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\tmesh = new Mesh(geometry, bmMaterial);\n\n\t\t\t\tif (this._objects[objIndex].name) {\n\t\t\t\t\t// this is a full independent object ('o' tag in OBJ file)\n\t\t\t\t\tmesh.name = this._objects[objIndex].name;\n\n\t\t\t\t} else if (groups[g].name) {\n\n\t\t\t\t\t// this is a group so the sub groups contain the actual mesh object names ('g' tag in OBJ file)\n\t\t\t\t\tmesh.name = groups[g].name;\n\n\t\t\t\t} else {\n\t\t\t\t\t// No name stored. Use empty string which will force it\n\t\t\t\t\t// to be overridden by finalizeAsset() to type default.\n\t\t\t\t\tmesh.name = \"\";\n\t\t\t\t}\n\n\t\t\t\tthis._meshes.push(mesh);\n\n\t\t\t\tif (groups[g].materialID != \"\")\n\t\t\t\t\tbmMaterial.name = groups[g].materialID + \"~\" + mesh.name; else\n\t\t\t\t\tbmMaterial.name = this._lastMtlID + \"~\" + mesh.name;\n\n\t\t\t\tif (mesh.subMeshes.length > 1) {\n\t\t\t\t\tfor (sm = 1; sm < mesh.subMeshes.length; ++sm)\n\t\t\t\t\t\tmesh.subMeshes[sm].material = bmMaterial;\n\t\t\t\t}\n\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\n\n\t\t\t\tthis._pFinalizeAsset(<IAsset> mesh);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Translates an obj's material group to a subgeometry.\n\t * @param materialGroup The material group data to convert.\n\t * @param geometry The Geometry to contain the converted SubGeometry.\n\t */\n\tprivate translateMaterialGroup(materialGroup:MaterialGroup, geometry:Geometry)\n\t{\n\t\tvar faces:Array<FaceData> = materialGroup.faces;\n\t\tvar face:FaceData;\n\t\tvar numFaces:number = faces.length;\n\t\tvar numVerts:number;\n\t\tvar sub:TriangleSubGeometry;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\t\tvar uvs:Array<number> = new Array<number>();\n\t\tvar normals:Array<number> = new Array<number>();\n\t\tvar indices:Array<number> /*uint*/ = new Array<number>();\n\n\t\tthis._realIndices = [];\n\t\tthis._vertexIndex = 0;\n\n\t\tvar j:number;\n\t\tfor (var i:number = 0; i < numFaces; ++i) {\n\n\t\t\tface = faces[i];\n\t\t\tnumVerts = face.indexIds.length - 1;\n\n\t\t\tfor (j = 1; j < numVerts; ++j) {\n\n\t\t\t\tthis.translateVertexData(face, j, vertices, uvs, indices, normals);\n\t\t\t\tthis.translateVertexData(face, 0, vertices, uvs, indices, normals);\n\t\t\t\tthis.translateVertexData(face, j + 1, vertices, uvs, indices, normals);\n\t\t\t}\n\t\t}\n\t\tif (vertices.length > 0) {\n\t\t\tsub = new TriangleSubGeometry(true);\n\t\t\tsub.autoDeriveNormals = normals.length? false : true;\n\t\t\tsub.updateIndices(indices);\n\t\t\tsub.updatePositions(vertices);\n\t\t\tsub.updateVertexNormals(normals);\n\t\t\tsub.updateUVs(uvs);\n\n\t\t\tgeometry.addSubGeometry(sub);\n\t\t}\n\t}\n\n\tprivate translateVertexData(face:FaceData, vertexIndex:number, vertices:Array<number>, uvs:Array<number>, indices:Array<number> /*uint*/, normals:Array<number>)\n\t{\n\t\tvar index:number;\n\t\tvar vertex:Vertex;\n\t\tvar vertexNormal:Vertex;\n\t\tvar uv:UV;\n\n\t\tif (!this._realIndices[face.indexIds[vertexIndex]]) {\n\n\t\t\tindex = this._vertexIndex;\n\t\t\tthis._realIndices[face.indexIds[vertexIndex]] = ++this._vertexIndex;\n\t\t\tvertex = this._vertices[face.vertexIndices[vertexIndex] - 1];\n\t\t\tvertices.push(vertex.x*this._scale, vertex.y*this._scale, vertex.z*this._scale);\n\n\t\t\tif (face.normalIndices.length > 0) {\n\t\t\t\tvertexNormal = this._vertexNormals[face.normalIndices[vertexIndex] - 1];\n\t\t\t\tnormals.push(vertexNormal.x, vertexNormal.y, vertexNormal.z);\n\t\t\t}\n\n\t\t\tif (face.uvIndices.length > 0) {\n\n\t\t\t\ttry {\n\t\t\t\t\tuv = this._uvs[face.uvIndices[vertexIndex] - 1];\n\t\t\t\t\tuvs.push(uv.u, uv.v);\n\n\t\t\t\t} catch (e) {\n\n\t\t\t\t\tswitch (vertexIndex) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tuvs.push(0, 1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tuvs.push(.5, 0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tuvs.push(1, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tindex = this._realIndices[face.indexIds[vertexIndex]] - 1;\n\t\t}\n\n\t\tindices.push(index);\n\t}\n\n\t/**\n\t * Creates a new object group.\n\t * @param trunk The data block containing the object tag and its parameters\n\t */\n\tprivate createObject(trunk)\n\t{\n\t\tthis._currentGroup = null;\n\t\tthis._currentMaterialGroup = null;\n\t\tthis._objects.push(this._currentObject = new ObjectGroup());\n\n\t\tif (trunk)\n\t\t\tthis._currentObject.name = trunk[1];\n\t}\n\n\t/**\n\t * Creates a new group.\n\t * @param trunk The data block containing the group tag and its parameters\n\t */\n\tprivate createGroup(trunk)\n\t{\n\t\tif (!this._currentObject)\n\t\t\tthis.createObject(null);\n\t\tthis._currentGroup = new Group();\n\n\t\tthis._currentGroup.materialID = this._activeMaterialID;\n\n\t\tif (trunk)\n\t\t\tthis._currentGroup.name = trunk[1];\n\t\tthis._currentObject.groups.push(this._currentGroup);\n\n\t\tthis.createMaterialGroup(null);\n\t}\n\n\t/**\n\t * Creates a new material group.\n\t * @param trunk The data block containing the material tag and its parameters\n\t */\n\tprivate createMaterialGroup(trunk)\n\t{\n\t\tthis._currentMaterialGroup = new MaterialGroup();\n\t\tif (trunk)\n\t\t\tthis._currentMaterialGroup.url = trunk[1];\n\t\tthis._currentGroup.materialGroups.push(this._currentMaterialGroup);\n\t}\n\n\t/**\n\t * Reads the next vertex coordinates.\n\t * @param trunk The data block containing the vertex tag and its parameters\n\t */\n\tprivate parseVertex(trunk)\n\t{\n\t\t//for the very rare cases of other delimiters/charcodes seen in some obj files\n\n\t\tvar v1:number, v2:number , v3:number;\n\t\tif (trunk.length > 4) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\n\t\t\tv1 = <number> nTrunk[0];\n\t\t\tv2 = <number> nTrunk[1];\n\t\t\tv3 = <number> -nTrunk[2];\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\n\n\t\t} else {\n\t\t\tv1 = <number> parseFloat(trunk[1]);\n\t\t\tv2 = <number> parseFloat(trunk[2]);\n\t\t\tv3 = <number> -parseFloat(trunk[3]);\n\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the next uv coordinates.\n\t * @param trunk The data block containing the uv tag and its parameters\n\t */\n\tprivate parseUV(trunk)\n\t{\n\t\tif (trunk.length > 3) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\t\t\tthis._uvs.push(new UV(nTrunk[0], 1 - nTrunk[1]));\n\n\t\t} else {\n\t\t\tthis._uvs.push(new UV(parseFloat(trunk[1]), 1 - parseFloat(trunk[2])));\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the next vertex normal coordinates.\n\t * @param trunk The data block containing the vertex normal tag and its parameters\n\t */\n\tprivate parseVertexNormal(trunk)\n\t{\n\t\tif (trunk.length > 4) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\t\t\tthis._vertexNormals.push(new Vertex(nTrunk[0], nTrunk[1], -nTrunk[2]));\n\n\t\t} else {\n\t\t\tthis._vertexNormals.push(new Vertex(parseFloat(trunk[1]), parseFloat(trunk[2]), -parseFloat(trunk[3])));\n\t\t}\n\t}\n\n\t/**\n\t * Reads the next face's indices.\n\t * @param trunk The data block containing the face tag and its parameters\n\t */\n\tprivate parseFace(trunk)\n\t{\n\t\tvar len:number = trunk.length;\n\t\tvar face:FaceData = new FaceData();\n\n\t\tif (!this._currentGroup) {\n\t\t\tthis.createGroup(null);\n\t\t}\n\n\t\tvar indices;\n\t\tfor (var i:number = 1; i < len; ++i) {\n\n\t\t\tif (trunk[i] == \"\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices = trunk[i].split(\"/\");\n\t\t\tface.vertexIndices.push(this.parseIndex(parseInt(indices[0]), this._vertices.length));\n\n\t\t\tif (indices[1] && String(indices[1]).length > 0)\n\t\t\t\tface.uvIndices.push(this.parseIndex(parseInt(indices[1]), this._uvs.length));\n\n\t\t\tif (indices[2] && String(indices[2]).length > 0)\n\t\t\t\tface.normalIndices.push(this.parseIndex(parseInt(indices[2]), this._vertexNormals.length));\n\n\t\t\tface.indexIds.push(trunk[i]);\n\t\t}\n\n\t\tthis._currentMaterialGroup.faces.push(face);\n\t}\n\n\t/**\n\t * This is a hack around negative face coords\n\t */\n\tprivate parseIndex(index:number, length:number):number\n\t{\n\t\tif (index < 0)\n\t\t\treturn index + length + 1; else\n\t\t\treturn index;\n\t}\n\n\tprivate parseMtl(data:string)\n\t{\n\t\tvar materialDefinitions = data.split('newmtl');\n\t\tvar lines;\n\t\tvar trunk;\n\t\tvar j:number;\n\n\t\tvar basicSpecularMethod:SpecularBasicMethod;\n\t\tvar useSpecular:boolean;\n\t\tvar useColor:boolean;\n\t\tvar diffuseColor:number;\n\t\tvar color:number;\n\t\tvar specularColor:number;\n\t\tvar specular:number;\n\t\tvar alpha:number;\n\t\tvar mapkd:string;\n\n\t\tfor (var i:number = 0; i < materialDefinitions.length; ++i) {\n\n\n\t\t\tlines = (materialDefinitions[i].split('\\r')).join(\"\").split('\\n');\n\t\t\t//lines = (materialDefinitions[i].split('\\r') as Array).join(\"\").split('\\n');\n\n\t\t\tif (lines.length == 1)\n\t\t\t\tlines = materialDefinitions[i].split(String.fromCharCode(13));\n\n\t\t\tdiffuseColor = color = specularColor = 0xFFFFFF;\n\t\t\tspecular = 0;\n\t\t\tuseSpecular = false;\n\t\t\tuseColor = false;\n\t\t\talpha = 1;\n\t\t\tmapkd = \"\";\n\n\t\t\tfor (j = 0; j < lines.length; ++j) {\n\n\t\t\t\tlines[j] = lines[j].replace(/\\s+$/, \"\");\n\n\t\t\t\tif (lines[j].substring(0, 1) != \"#\" && (j == 0 || lines[j] != \"\")) {\n\t\t\t\t\ttrunk = lines[j].split(\" \");\n\n\t\t\t\t\tif (String(trunk[0]).charCodeAt(0) == 9 || String(trunk[0]).charCodeAt(0) == 32)\n\t\t\t\t\t\ttrunk[0] = trunk[0].substring(1, trunk[0].length);\n\n\t\t\t\t\tif (j == 0) {\n\t\t\t\t\t\tthis._lastMtlID = trunk.join(\"\");\n\t\t\t\t\t\tthis._lastMtlID = (this._lastMtlID == \"\")? \"def000\" : this._lastMtlID;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tswitch (trunk[0]) {\n\n\t\t\t\t\t\t\tcase \"Ka\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3])))\n\t\t\t\t\t\t\t\t\tcolor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Ks\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\n\t\t\t\t\t\t\t\t\tspecularColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\t\tuseSpecular = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Ns\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\n\t\t\t\t\t\t\t\t\tspecular = Number(trunk[1])*0.001;\n\t\t\t\t\t\t\t\tif (specular == 0)\n\t\t\t\t\t\t\t\t\tuseSpecular = false;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Kd\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\n\t\t\t\t\t\t\t\t\tdiffuseColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\t\tuseColor = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"tr\":\n\t\t\t\t\t\t\tcase \"d\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\n\t\t\t\t\t\t\t\t\talpha = Number(trunk[1]);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"map_Kd\":\n\t\t\t\t\t\t\t\tmapkd = this.parseMapKdString(trunk);\n\t\t\t\t\t\t\t\tmapkd = mapkd.replace(/\\\\/g, \"/\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mapkd != \"\") {\n\n\t\t\t\tif (useSpecular) {\n\n\t\t\t\t\tbasicSpecularMethod = new SpecularBasicMethod();\n\t\t\t\t\tbasicSpecularMethod.specularColor = specularColor;\n\t\t\t\t\tbasicSpecularMethod.specular = specular;\n\n\t\t\t\t\tvar specularData:SpecularData = new SpecularData();\n\t\t\t\t\tspecularData.alpha = alpha;\n\t\t\t\t\tspecularData.basicSpecularMethod = basicSpecularMethod;\n\t\t\t\t\tspecularData.materialID = this._lastMtlID;\n\n\t\t\t\t\tif (!this._materialSpecularData)\n\t\t\t\t\t\tthis._materialSpecularData = new Array<SpecularData>();\n\n\t\t\t\t\tthis._materialSpecularData.push(specularData);\n\n\t\t\t\t}\n\n\t\t\t\tthis._pAddDependency(this._lastMtlID, new URLRequest(mapkd));\n\n\t\t\t} else if (useColor && !isNaN(color)) {\n\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\t\tlm.materialID = this._lastMtlID;\n\n\t\t\t\tif (alpha == 0)\n\t\t\t\t\tconsole.log(\"Warning: an alpha value of 0 was found in mtl color tag (Tr or d) ref:\" + this._lastMtlID + \", mesh(es) using it will be invisible!\");\n\n\t\t\t\tvar cm:MethodMaterial;\n\n\t\t\t\tif (this.materialMode < 2) {\n\t\t\t\t\tcm = new MethodMaterial(color);\n\n\t\t\t\t\tvar colorMat:MethodMaterial = <MethodMaterial> cm;\n\n\t\t\t\t\tcolorMat.alpha = alpha;\n\t\t\t\t\tcolorMat.diffuseColor = diffuseColor;\n\t\t\t\t\tcolorMat.repeat = true;\n\n\t\t\t\t\tif (useSpecular) {\n\t\t\t\t\t\tcolorMat.specularColor = specularColor;\n\t\t\t\t\t\tcolorMat.specular = specular;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tcm = new MethodMaterial(color);\n\t\t\t\t\tcm.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\t\tvar colorMultiMat:MethodMaterial = <MethodMaterial> cm;\n\n\n\t\t\t\t\tcolorMultiMat.diffuseColor = diffuseColor;\n\t\t\t\t\tcolorMultiMat.repeat = true;\n\n\t\t\t\t\tif (useSpecular) {\n\t\t\t\t\t\tcolorMultiMat.specularColor = specularColor;\n\t\t\t\t\t\tcolorMultiMat.specular = specular;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlm.cm = cm;\n\n\t\t\t\tthis._materialLoaded.push(lm);\n\n\t\t\t\tif (this._meshes.length > 0)\n\t\t\t\t\tthis.applyMaterial(lm);\n\n\t\t\t}\n\t\t}\n\n\t\tthis._mtlLibLoaded = true;\n\t}\n\n\tprivate parseMapKdString(trunk):string\n\t{\n\t\tvar url:string = \"\";\n\t\tvar i:number;\n\t\tvar breakflag:boolean;\n\n\t\tfor (i = 1; i < trunk.length;) {\n\t\t\tswitch (trunk[i]) {\n\t\t\t\tcase \"-blendu\":\n\t\t\t\tcase \"-blendv\":\n\t\t\t\tcase \"-cc\":\n\t\t\t\tcase \"-clamp\":\n\t\t\t\tcase \"-texres\":\n\t\t\t\t\ti += 2; //Skip ahead 1 attribute\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"-mm\":\n\t\t\t\t\ti += 3; //Skip ahead 2 attributes\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"-o\":\n\t\t\t\tcase \"-s\":\n\t\t\t\tcase \"-t\":\n\t\t\t\t\ti += 4; //Skip ahead 3 attributes\n\t\t\t\t\tcontinue;\n\t\t\t\tdefault:\n\t\t\t\t\tbreakflag = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (breakflag)\n\t\t\t\tbreak;\n\t\t}\n\n\t\t//Reconstruct URL/filename\n\t\tfor (i; i < trunk.length; i++) {\n\t\t\turl += trunk[i];\n\t\t\turl += \" \";\n\t\t}\n\n\t\t//Remove the extraneous space and/or newline from the right side\n\t\turl = url.replace(/\\s+$/, \"\");\n\n\t\treturn url;\n\t}\n\n\tprivate loadMtl(mtlurl:string)\n\t{\n\t\t// Add raw-data dependency to queue and load dependencies now,\n\t\t// which will pause the parsing in the meantime.\n\t\tthis._pAddDependency('mtl', new URLRequest(mtlurl), true);\n\t\tthis._pPauseAndRetrieveDependencies();//\n\t}\n\n\tprivate applyMaterial(lm:LoadedMaterial)\n\t{\n\t\tvar decomposeID;\n\t\tvar mesh:Mesh;\n\t\tvar tm:MethodMaterial;\n\t\tvar j:number;\n\t\tvar specularData:SpecularData;\n\n\t\tfor (var i:number = 0; i < this._meshes.length; ++i) {\n\t\t\tmesh = this._meshes[i];\n\t\t\tdecomposeID = mesh.material.name.split(\"~\");\n\n\t\t\tif (decomposeID[0] == lm.materialID) {\n\n\t\t\t\tif (lm.cm) {\n\t\t\t\t\tif (mesh.material)\n\t\t\t\t\t\tmesh.material = null;\n\t\t\t\t\tmesh.material = lm.cm;\n\n\t\t\t\t} else if (lm.texture) {\n\t\t\t\t\tif (this.materialMode < 2) { // if materialMode is 0 or 1, we create a SinglePass\n\t\t\t\t\t\ttm = <MethodMaterial > mesh.material;\n\n\t\t\t\t\t\ttm.texture = lm.texture;\n\t\t\t\t\t\ttm.color = lm.color;\n\t\t\t\t\t\ttm.alpha = lm.alpha;\n\t\t\t\t\t\ttm.repeat = true;\n\n\t\t\t\t\t\tif (lm.specularMethod) {\n\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\n\t\t\t\t\t\t\ttm.specularMethod = null;\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\n\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\n\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\n\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\n\t\t\t\t\t\t\t\t\ttm.alpha = specularData.alpha;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { //if materialMode==2 this is a MultiPassTexture\n\t\t\t\t\t\ttm = <MethodMaterial> mesh.material;\n\t\t\t\t\t\ttm.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\t\t\ttm.texture = lm.texture;\n\t\t\t\t\t\ttm.color = lm.color;\n\t\t\t\t\t\ttm.repeat = true;\n\n\t\t\t\t\t\tif (lm.specularMethod) {\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\n\t\t\t\t\t\t\ttm.specularMethod = null;\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\n\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmesh.material.name = decomposeID[1]? decomposeID[1] : decomposeID[0];\n\t\t\t\tthis._meshes.splice(i, 1);\n\t\t\t\t--i;\n\t\t\t}\n\t\t}\n\n\t\tif (lm.cm || tm)\n\t\t\tthis._pFinalizeAsset(lm.cm || tm);\n\t}\n\n\tprivate applyMaterials()\n\t{\n\t\tif (this._materialLoaded.length == 0)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._materialLoaded.length; ++i)\n\t\t\tthis.applyMaterial(this._materialLoaded[i]);\n\t}\n}\n\nexport = OBJParser;\n\nclass ObjectGroup\n{\n\tpublic name:string;\n\tpublic groups:Group[] = new Array<Group>();\n}\n\nclass Group\n{\n\tpublic name:string;\n\tpublic materialID:string;\n\tpublic materialGroups:MaterialGroup[] = new Array<MaterialGroup>();\n}\n\nclass MaterialGroup\n{\n\tpublic url:string;\n\tpublic faces:FaceData[] = new Array<FaceData>();\n}\n\nclass SpecularData\n{\n\tpublic materialID:string;\n\tpublic basicSpecularMethod:SpecularBasicMethod;\n\tpublic color:number = 0xFFFFFF;\n\tpublic alpha:number = 1;\n}\n\nclass LoadedMaterial\n{\n\tpublic materialID:string;\n\tpublic texture:Texture2DBase;\n\tpublic cm:MaterialBase;\n\tpublic specularMethod:SpecularBasicMethod;\n\tpublic color:number = 0xFFFFFF;\n\tpublic alpha:number = 1;\n}\n\nclass FaceData\n{\n\tpublic vertexIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic uvIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic normalIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic indexIds:string[] = new Array<string>(); // used for real index lookups\n}\n\n/**\n* Texture coordinates value object.\n*/\nclass UV\n{\n\tprivate _u:number;\n\tprivate _v:number;\n\n\t/**\n\t * Creates a new <code>UV</code> object.\n\t *\n\t * @param    u        [optional]    The horizontal coordinate of the texture value. Defaults to 0.\n\t * @param    v        [optional]    The vertical coordinate of the texture value. Defaults to 0.\n\t */\n\tconstructor(u:number = 0, v:number = 0)\n\t{\n\t\tthis._u = u;\n\t\tthis._v = v;\n\t}\n\n\t/**\n\t * Defines the vertical coordinate of the texture value.\n\t */\n\tpublic get v():number\n\t{\n\t\treturn this._v;\n\t}\n\n\tpublic set v(value:number)\n\t{\n\t\tthis._v = value;\n\t}\n\n\t/**\n\t * Defines the horizontal coordinate of the texture value.\n\t */\n\tpublic get u():number\n\t{\n\t\treturn this._u;\n\t}\n\n\tpublic set u(value:number)\n\t{\n\t\tthis._u = value;\n\t}\n\n\t/**\n\t * returns a new UV value Object\n\t */\n\tpublic clone():UV\n\t{\n\t\treturn new UV(this._u, this._v);\n\t}\n\n\t/**\n\t * returns the value object as a string for trace/debug purpose\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._u + \",\" + this._v;\n\t}\n}\n\nclass Vertex\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _z:number;\n\tprivate _index:number;\n\n\t/**\n\t * Creates a new <code>Vertex</code> value object.\n\t *\n\t * @param    x            [optional]    The x value. Defaults to 0.\n\t * @param    y            [optional]    The y value. Defaults to 0.\n\t * @param    z            [optional]    The z value. Defaults to 0.\n\t * @param    index        [optional]    The index value. Defaults is NaN.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, index:number = 0)\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._index = index;\n\t}\n\n\t/**\n\t * To define/store the index of value object\n\t * @param    ind        The index\n\t */\n\tpublic set index(ind:number)\n\t{\n\t\tthis._index = ind;\n\t}\n\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n\n\t/**\n\t * To define/store the x value of the value object\n\t * @param    value        The x value\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tthis._x = value;\n\t}\n\n\t/**\n\t * To define/store the y value of the value object\n\t * @param    value        The y value\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tthis._y = value;\n\t}\n\n\t/**\n\t * To define/store the z value of the value object\n\t * @param    value        The z value\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(value:number)\n\t{\n\t\tthis._z = value;\n\t}\n\n\t/**\n\t * returns a new Vertex value Object\n\t */\n\tpublic clone():Vertex\n\t{\n\t\treturn new Vertex(this._x, this._y, this._z);\n\t}\n}",
    "import AssetLoader\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\n\nimport AWDParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWDParser\");\nimport Max3DSParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/Max3DSParser\");\nimport MD2Parser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/MD2Parser\");\nimport OBJParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/OBJParser\");\n\n/**\n *\n */\nclass Parsers\n{\n\t/**\n\t * A list of all parsers that come bundled with Away3D. Use this to quickly\n\t * enable support for all bundled parsers to the file format auto-detection\n\t * feature, using any of the enableParsers() methods on loaders, e.g.:\n\t *\n\t * <code>AssetLibrary.enableParsers(Parsers.ALL_BUNDLED);</code>\n\t *\n\t * Beware however that this requires all parser classes to be included in the\n\t * SWF file, which will add 50-100 kb to the file. When only a limited set of\n\t * file formats are used, SWF file size can be saved by adding the parsers\n\t * individually using AssetLibrary.enableParser()\n\t *\n\t * A third way is to specify a parser for each loaded file, thereby bypassing\n\t * the auto-detection mechanisms altogether, while at the same time allowing\n\t * any properties that are unique to that parser to be set for that load.\n\t *\n\t * The bundled parsers are:\n\t *\n\t * <ul>\n\t * <li>AC3D (.ac)</li>\n\t * <li>Away Data version 1 ASCII and version 2 binary (.awd). AWD1 BSP unsupported</li>\n\t * <li>3DMax (.3ds)</li>\n\t * <li>DXF (.dxf)</li>\n\t * <li>Quake 2 MD2 models (.md2)</li>\n\t * <li>Doom 3 MD5 animation clips (.md5anim)</li>\n\t * <li>Doom 3 MD5 meshes (.md5mesh)</li>\n\t * <li>Wavefront OBJ (.obj)</li>\n\t * <li>Collada (.dae)</li>\n\t * <li>Images (.jpg, .png)</li>\n\t * </ul>\n\t *\n\t * @see away.library.AssetLibrary.enableParser\n\t */\n\tpublic static ALL_BUNDLED:Array<Object> = Array<Object>(AWDParser, Max3DSParser, MD2Parser, OBJParser);\n\n\t/**\n\t * Short-hand function to enable all bundled parsers for auto-detection. In practice,\n\t * this is the same as invoking enableParsers(Parsers.ALL_BUNDLED) on any of the\n\t * loader classes SingleFileLoader, AssetLoader, AssetLibrary or Loader3D.\n\t *\n\t * See notes about file size in the documentation for the ALL_BUNDLED constant.\n\t *\n\t * @see away.parsers.Parsers.ALL_BUNDLED\n\t */\n\tpublic static enableAllBundled():void\n\t{\n\t\tAssetLoader.enableParsers(Parsers.ALL_BUNDLED);\n\t}\n}\n\nexport = Parsers;"
  ]
}