{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "..\\index.ts",
    "lib\\lib\\AWD3ParserUtils\\AWD3Utils.ts",
    "lib\\lib\\AWD3ParserUtils\\AWDBlock.ts",
    "lib\\AWDParser.ts",
    "lib\\FNTParser.ts",
    "lib\\MD2Parser.ts",
    "lib\\MD5AnimParser.ts",
    "lib\\MD5MeshParser.ts",
    "lib\\Max3DSParser.ts",
    "lib\\OBJParser.ts",
    "lib\\Parsers.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "export {default as AWDParser}\t\t\t\t\t\tfrom \"./lib/AWDParser\";\r\nexport {default as Max3DSParser}\t\t\t\t\tfrom \"./lib/Max3DSParser\";\r\nexport {default as MD2Parser}\t\t\t\t\t\tfrom \"./lib/MD2Parser\";\r\nexport {default as MD5AnimParser}\t\t\t\t\tfrom \"./lib/MD5AnimParser\";\r\nexport {default as MD5MeshParser}\t\t\t\t\tfrom \"./lib/MD5MeshParser\";\r\nexport {default as OBJParser}\t\t\t\t\t\tfrom \"./lib/OBJParser\";\r\nexport {default as Parsers}\t\t\t\t\t\t\tfrom \"./lib/Parsers\";",
    "\r\nclass AWD3Utils {\r\n\tpublic static BLOCKSTATE_FINALIZE:number = 0;\r\n\tpublic static BLOCKSTATE_INVALID:number = 1;\r\n\tpublic static BLOCKSTATE_LOAD_DEPENDENICES:number = 2;\r\n\tpublic static BLOCKSTATE_NO_ASSET:number = 3;\r\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\r\n\tpublic static UNCOMPRESSED:number = 0;\r\n\tpublic static DEFLATE:number = 1;\r\n\tpublic static LZMA:number = 2;\r\n\tpublic static INT8:number = 1;\r\n\tpublic static INT16:number = 2;\r\n\tpublic static INT32:number = 3;\r\n\tpublic static UINT8:number = 4;\r\n\tpublic static UINT16:number = 5;\r\n\tpublic static UINT32:number = 6;\r\n\tpublic static FLOAT32:number = 7;\r\n\tpublic static FLOAT64:number = 8;\r\n\tpublic static BOOL:number = 21;\r\n\tpublic static COLOR:number = 22;\r\n\tpublic static BADDR:number = 23;\r\n\tpublic static AWDSTRING:number = 31;\r\n\tpublic static AWDBYTEARRAY:number = 32;\r\n\tpublic static VECTOR2x1:number = 41;\r\n\tpublic static VECTOR3x1:number = 42;\r\n\tpublic static VECTOR4x1:number = 43;\r\n\tpublic static MTX3x2:number = 44;\r\n\tpublic static MTX3x3:number = 45;\r\n\tpublic static MTX4x3:number = 46;\r\n\tpublic static MTX4x4:number = 47;\r\n}\r\nexport default AWD3Utils;",
    "import ByteArray\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\r\n\r\nimport AWD3Utils\t\t\t\t\t\tfrom \"../AWD3ParserUtils/AWD3Utils\";\r\n\r\n\r\nclass AWDBlock\r\n{\r\n\tpublic id:number;\r\n\tpublic name:string;\r\n\tpublic type:number;\r\n\tpublic data:any;\r\n\tpublic dependencies_data:Array<ByteArray>;\r\n\tpublic dependencies_urls:Array<string>;\r\n\tpublic loaded_dependencies:Array<any>;\r\n\tpublic loaded_dependencies_cnt:number;\r\n\tpublic len:number;\r\n\tpublic geoID:number;\r\n\tpublic state:number;\r\n\tpublic extras:Object;\r\n\tpublic bytes:ByteArray;\r\n\tpublic errorMessages:Array<string>;\r\n\tpublic uvsForVertexAnimation:Array<Float32Array>;\r\n\r\n\tconstructor(this_id:number, this_type:number)\r\n\t{\r\n\t\tthis.type=this_type;\r\n\t\tthis.id=this_id;\r\n\t\tthis.state = AWD3Utils.BLOCKSTATE_FINALIZE;\r\n\t\tthis.dependencies_data=Array<any>();\r\n\t\tthis.dependencies_urls=Array<string>();\r\n\t\tif(this_type==83){\r\n\t\t\tthis.loaded_dependencies=Array<any>(6);\r\n\t\t}\r\n\t\tthis.loaded_dependencies_cnt=0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t\tthis.id = null;\r\n\t\tthis.bytes = null;\r\n\t\tthis.errorMessages = null;\r\n\t\tthis.uvsForVertexAnimation = null;\r\n\r\n\t}\r\n\r\n\tpublic addError(errorMsg:string):void\r\n\t{\r\n\t\tif (!this.errorMessages)\r\n\t\t\tthis.errorMessages = new Array<string>();\r\n\r\n\t\tthis.errorMessages.push(errorMsg);\r\n\t}\r\n}\r\nexport default AWDBlock;",
    "import AttributesBuffer\t\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\r\nimport Short3Attributes\t\t\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\r\nimport Float3Attributes\t\t\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\r\nimport Float2Attributes\t\t\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\r\nimport Byte4Attributes\t\t\t\t\tfrom \"awayjs-core/lib/attributes/Byte4Attributes\";\r\n\r\nimport BitmapImage2D\t\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\r\nimport BitmapImageCube\t\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImageCube\";\r\nimport BlendMode\t\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\r\nimport Sampler2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\r\nimport WaveAudio\t\t\t\t\t\tfrom \"awayjs-core/lib/audio/WaveAudio\";\r\nimport ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\r\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport URLLoaderDataFormat\t\t\t\tfrom \"awayjs-core/lib/net/URLLoaderDataFormat\";\r\nimport URLRequest\t\t\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\r\nimport IAsset\t\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\r\nimport ParserBase\t\t\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\r\nimport ParserUtils\t\t\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserUtils\";\r\nimport ResourceDependency\t\t\t\tfrom \"awayjs-core/lib/parsers/ResourceDependency\";\r\nimport ProjectionBase\t\t\t\t\tfrom \"awayjs-core/lib/projections/ProjectionBase\";\r\nimport PerspectiveProjection\t\t\tfrom \"awayjs-core/lib/projections/PerspectiveProjection\";\r\nimport OrthographicProjection\t\t\tfrom \"awayjs-core/lib/projections/OrthographicProjection\";\r\nimport OrthographicOffCenterProjection\tfrom \"awayjs-core/lib/projections/OrthographicOffCenterProjection\";\r\nimport ByteArray\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\r\nimport Point\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\r\n\r\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\r\nimport DisplayObjectContainer\t\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\r\nimport View\t\t\t\t\t\t\t\tfrom \"awayjs-display/lib/View\";\r\nimport DisplayObject\t\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\r\nimport LightBase\t\t\t\t\t\tfrom \"awayjs-display/lib/display/LightBase\";\r\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\r\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\r\nimport ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\r\nimport DirectionalLight\t\t\t\t\tfrom \"awayjs-display/lib/display/DirectionalLight\";\r\nimport PointLight\t\t\t\t\t\tfrom \"awayjs-display/lib/display/PointLight\";\r\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\r\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\r\nimport TextField\t\t\t\t\t\tfrom \"awayjs-display/lib/display/TextField\";\r\nimport Billboard\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Billboard\";\r\nimport Skybox\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\r\nimport DefaultMaterialManager\t\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\r\nimport MaterialBase\t\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\r\nimport LightPickerBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/lightpickers/LightPickerBase\";\r\nimport StaticLightPicker\t\t\t\tfrom \"awayjs-display/lib/materials/lightpickers/StaticLightPicker\";\r\nimport CubeMapShadowMapper\t\t\t\tfrom \"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\";\r\nimport DirectionalShadowMapper\t\t\tfrom \"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\";\r\nimport ShadowMapperBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\";\r\n\r\nimport PrefabBase\t\t\t\t\t\tfrom \"awayjs-display/lib/prefabs/PrefabBase\";\r\nimport PrimitivePrefabBase\t\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitivePrefabBase\";\r\nimport PrimitiveCapsulePrefab\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\";\r\nimport PrimitiveConePrefab\t\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitiveConePrefab\";\r\nimport PrimitiveCubePrefab\t\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitiveCubePrefab\";\r\nimport PrimitiveCylinderPrefab\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\";\r\nimport PrimitivePlanePrefab\t\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitivePlanePrefab\";\r\nimport PrimitiveSpherePrefab\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\";\r\nimport PrimitiveTorusPrefab\t\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\";\r\nimport SingleCubeTexture\t\t\t\tfrom \"awayjs-display/lib/textures/SingleCubeTexture\";\r\nimport Single2DTexture\t\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\r\nimport TextureBase\t\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\r\n\r\nimport AnimationSetBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimationSetBase\";\r\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\r\nimport VertexAnimationSet\t\t\t\tfrom \"awayjs-renderergl/lib/animators/VertexAnimationSet\";\r\nimport VertexAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/VertexAnimator\";\r\nimport SkeletonAnimationSet\t\t\t\tfrom \"awayjs-renderergl/lib/animators/SkeletonAnimationSet\";\r\nimport SkeletonAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/SkeletonAnimator\";\r\nimport JointPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/JointPose\";\r\nimport Skeleton\t\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/Skeleton\";\r\nimport SkeletonPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/SkeletonPose\";\r\nimport SkeletonJoint\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/SkeletonJoint\";\r\nimport SkeletonClipNode\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\";\r\nimport VertexClipNode\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/VertexClipNode\";\r\nimport AnimationClipNodeBase\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\";\r\n\r\nimport MethodMaterialMode\t\t\t\tfrom \"awayjs-methodmaterials/lib/MethodMaterialMode\";\r\nimport MethodMaterial\t\t\t\t\tfrom \"awayjs-methodmaterials/lib/MethodMaterial\";\r\nimport AmbientEnvMapMethod\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\";\r\nimport DiffuseDepthMethod\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\";\r\nimport DiffuseCelMethod\t\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\";\r\nimport DiffuseGradientMethod\t\t\tfrom \"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\";\r\nimport DiffuseLightMapMethod\t\t\tfrom \"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\";\r\nimport DiffuseWrapMethod\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\";\r\nimport EffectAlphaMaskMethod\t\t\tfrom \"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\";\r\nimport EffectColorMatrixMethod\t\t\tfrom \"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\";\r\nimport EffectColorTransformMethod\t\tfrom \"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\";\r\nimport EffectEnvMapMethod\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\";\r\nimport EffectFogMethod\t\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/EffectFogMethod\";\r\nimport EffectFresnelEnvMapMethod\t\tfrom \"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\";\r\nimport EffectLightMapMethod\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\";\r\nimport EffectMethodBase\t\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/EffectMethodBase\";\r\nimport EffectRimLightMethod\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\";\r\nimport NormalSimpleWaterMethod\t\t\tfrom \"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\";\r\nimport ShadowDitheredMethod\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\";\r\nimport ShadowFilteredMethod\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\";\r\nimport ShadowMapMethodBase\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\";\r\nimport ShadowMethodBase\t\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/ShadowMethodBase\";\r\nimport SpecularFresnelMethod\t\t\tfrom \"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\";\r\nimport ShadowHardMethod\t\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/ShadowHardMethod\";\r\nimport SpecularAnisotropicMethod\t\tfrom \"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\";\r\nimport SpecularCelMethod\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/SpecularCelMethod\";\r\nimport SpecularPhongMethod\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\";\r\nimport ShadowNearMethod\t\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/ShadowNearMethod\";\r\nimport ShadowSoftMethod\t\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\";\r\n\r\nimport BasicMaterial\t\t\t\t\tfrom \"awayjs-display/lib/materials/BasicMaterial\";\r\n\r\nimport ITimelineSceneGraphFactory \tfrom \"awayjs-display/lib/factories/ITimelineSceneGraphFactory\";\r\nimport AS2SceneGraphFactory \t\tfrom \"awayjs-player/lib/factories/AS2SceneGraphFactory\";\r\nimport MovieClip \t\t\t\t\tfrom \"awayjs-display/lib/display/MovieClip\";\r\nimport Timeline\t\t\t \t\t\tfrom \"awayjs-display/lib/base/Timeline\";\r\n\r\n\r\nimport AssetLibrary\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetLibrary\";\r\n\r\nimport Font\t\t\t\t\t\t\tfrom \"awayjs-display/lib/text/Font\";\r\nimport TesselatedFontTable\t\t\tfrom \"awayjs-display/lib/text/TesselatedFontTable\";\r\nimport TextFormat\t\t\t\t\tfrom \"awayjs-display/lib/text/TextFormat\";\r\nimport TextFieldType\t\t\t\tfrom \"awayjs-display/lib/text/TextFieldType\";\r\n\r\nimport AWDBlock\t\t\t\t\t\tfrom \"./AWD3ParserUtils/AWDBlock\";\r\nimport Rectangle \t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\r\nimport Style \t\t\t\t\t\tfrom \"awayjs-display/lib/base/Style\";\r\nimport Matrix \t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\r\nimport MappingMode \t\t\t\t\tfrom \"awayjs-display/lib/textures/MappingMode\";\r\nimport ElementsType from \"awayjs-display/lib/graphics/ElementsType\";\r\nimport Graphic from \"awayjs-display/lib/graphics/Graphic\";\r\n/**\r\n * AWDParser provides a parser for the AWD data type.\r\n */\r\nclass AWDParser extends ParserBase\r\n{\r\n\tprivate _view:View;\r\n\r\n\t//set to \"true\" to have some console.logs in the Console\r\n\tprivate _debug:boolean = false;\r\n\tprivate _debugTimers:boolean = true;\r\n\tprivate _byteData:ByteArray;\r\n\tprivate _startedParsing:boolean = false;\r\n\tprivate _cur_block_id:number;\r\n\tprivate _blocks:Array<AWDBlock>;\r\n\tprivate _newBlockBytes:ByteArray;\r\n\tprivate _version:Array<number>;\r\n\tprivate _compression:number;\r\n\tprivate _accuracyOnBlocks:boolean;\r\n\tprivate _accuracyMatrix:boolean;\r\n\tprivate _accuracyGeo:boolean;\r\n\tprivate _accuracyProps:boolean;\r\n\tprivate _streaming:boolean;\r\n\tprivate _texture_users:Object = {};\r\n\tprivate _parsed_header:boolean = false;\r\n\tprivate _body:ByteArray;\r\n\r\n\r\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\r\n\tpublic static UNCOMPRESSED:number = 0;\r\n\tpublic static DEFLATE:number = 1;\r\n\tpublic static LZMA:number = 2;\r\n\tpublic static INT8:number = 1;\r\n\tpublic static INT16:number = 2;\r\n\tpublic static INT32:number = 3;\r\n\tpublic static UINT8:number = 4;\r\n\tpublic static UINT16:number = 5;\r\n\tpublic static UINT32:number = 6;\r\n\tpublic static FLOAT32:number = 7;\r\n\tpublic static FLOAT64:number = 8;\r\n\tpublic static BOOL:number = 21;\r\n\tpublic static COLOR:number = 22;\r\n\tpublic static BADDR:number = 23;\r\n\tpublic static AWDSTRING:number = 31;\r\n\tpublic static AWDBYTEARRAY:number = 32;\r\n\tpublic static VECTOR2x1:number = 41;\r\n\tpublic static VECTOR3x1:number = 42;\r\n\tpublic static VECTOR4x1:number = 43;\r\n\tpublic static MTX3x2:number = 44;\r\n\tpublic static MTX3x3:number = 45;\r\n\tpublic static MTX4x3:number = 46;\r\n\tpublic static MTX4x4:number = 47;\r\n\tpublic static GEO_NUMBER:number = 48;\r\n\tpublic static MATRIX_NUMBER:number = 49;\r\n\tpublic static PROPERTY_NUMBER:number = 50;\r\n\t\r\n\r\n\tprivate blendModeDic:Array<string>;\r\n\tprivate _depthSizeDic:Array<number>;\r\n\r\n\tprivate start_timeing:number;\r\n\tprivate _time_all:number=0;\r\n\tprivate _time_graphics:number=0;\r\n\tprivate _time_graphics_bytes:number=0;\r\n\tprivate _time_timeline:number=0;\r\n\tprivate _time_fonts:number=0;\r\n\tprivate _time_textfields:number=0;\r\n\tprivate _time_sounds:number=0;\r\n\tprivate _time_textures:number=0;\r\n\tprivate _time_materials:number=0;\r\n\tprivate _time_sprites:number=0;\r\n\tprivate _num_graphics:number=0;\r\n\tprivate _num_timeline:number=0;\r\n\tprivate _num_fonts:number=0;\r\n\tprivate _num_textfields:number=0;\r\n\tprivate _num_sounds:number=0;\r\n\tprivate _num_textures:number=0;\r\n\tprivate _num_materials:number=0;\r\n\tprivate _num_sprites:number=0;\r\n\r\n\r\n\t/**\r\n\t * Creates a new AWD3Parserutils object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(view:View = null)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n\t\tthis._view = view;\r\n\t\tthis._blocks = new Array<AWDBlock>();\r\n\t\tthis._blocks[0] = new AWDBlock(0,255);\r\n\t\tthis._blocks[0].data = null; // Zero address means null in AWD\r\n\r\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.ADD);\r\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\r\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\r\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\r\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\r\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\r\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\r\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\r\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\r\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\r\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\r\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\r\n\t\tthis._depthSizeDic.push(256);\r\n\t\tthis._depthSizeDic.push(512);\r\n\t\tthis._depthSizeDic.push(2048);\r\n\t\tthis._depthSizeDic.push(1024);\r\n\t\tthis._version = Array<number>(); // will contain 2 int (major-version, minor-version) for awd-version-check\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"awd\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t// this will be called when Dependency has finished loading.\r\n\t\t// the ressource dependecniy has a id that point to the awd_block waiting for it.\r\n\t\t//console.log(\"AWDParser resolve dependencies\";\r\n\t\tif (resourceDependency.assets.length == 1) {\r\n\t\t\tvar this_block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\r\n\t\t\tif(this_block.type==82){\r\n\t\t\t\tvar image_asset:BitmapImage2D = <BitmapImage2D> resourceDependency.assets[0];\r\n\t\t\t\tthis_block.data = image_asset; // Store finished asset\r\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> image_asset, this_block.name);\r\n\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"Parsed Texture: Name = \" + this_block.name);\r\n\t\t\t}\r\n\t\t\telse if(this_block.type==44){\r\n\t\t\t\tvar audio_asset:WaveAudio = <WaveAudio> resourceDependency.assets[0];\r\n\t\t\t\tthis_block.data = audio_asset; // Store finished asset\r\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\t//console.log(\"Parsing audio \" + this_block.name);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> audio_asset, this_block.name);\r\n\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"Parsed WaveAudio: Name = \" + this_block.name);\r\n\t\t\t}\r\n\t\t\telse if(this_block.type==83){\r\n\t\t\t\tthis_block.loaded_dependencies[resourceDependency.sub_id]= resourceDependency.assets[0];\r\n\t\t\t\tthis_block.loaded_dependencies_cnt++;\r\n\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + resourceDependency.sub_id + \" / 6 for Cubetexture\");\r\n\r\n\t\t\t\tif(this_block.loaded_dependencies_cnt==6){\r\n\t\t\t\t\tvar cube_image_asset = new BitmapImageCube(this_block.loaded_dependencies[0].width);\r\n\r\n\t\t\t\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\t\t\t\tcube_image_asset.draw(i, this_block.loaded_dependencies[i]);\r\n\r\n\t\t\t\t\tthis_block.data = cube_image_asset; // Store finished asset\r\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> cube_image_asset, this_block.name);\r\n\r\n\t\t\t\t\tif (this._debug)\r\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + this_block.name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._debugTimers && !this._isParsing)\r\n\t\t\t\tthis.updateTimers(this_block.type);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t//not used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\r\n\t\t// this means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency name\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\r\n\t{\r\n\t\tvar oldName:string = asset.name;\r\n\r\n\t\tif (asset) {\r\n\t\t\tvar block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\r\n\t\t\t// Reset name of texture to the one defined in the AWD file,\r\n\t\t\t// as opposed to whatever the image parser came up with.\r\n\t\t\tasset.resetAssetPath(block.name, null, true);\r\n\t\t}\r\n\r\n\t\tvar newName:string = asset.name;\r\n\r\n\t\tasset.name = oldName;\r\n\r\n\t\treturn newName;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\tif (!this._parsed_header) {\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Parse header and decompress body if needed\r\n\t\t\tthis.parseHeader();\r\n\r\n\t\t\tswitch (this._compression) {\r\n\t\t\t\tcase AWDParser.DEFLATE:\r\n\t\t\t\tcase AWDParser.LZMA:\r\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase AWDParser.UNCOMPRESSED:\r\n\t\t\t\t\tthis._body = this._byteData;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t// Compressed AWD Formats not yet supported\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t case AWD3Parserutils.DEFLATE:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress();\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t case AWD3Parserutils.LZMA:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t //*/\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._parsed_header = true;\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t}\r\n\r\n\t\tif (this._body) {\r\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\r\n\t\t\t\tthis.parseNextBlock();\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Return complete status\r\n\t\t\tif (this._body.getBytesAvailable() == 0) {\r\n\t\t\t\tthis.dispose();\r\n\r\n\t\t\t\tif (this._debugTimers)\r\n\t\t\t\t\tconsole.log(\"Parsing total: \"+(this._time_all | 0)+\"ms\",\r\n\t\t\t\t\t\t\" | graphics: \"+this._num_graphics+\", \"+(this._time_graphics | 0)+\"ms\",\r\n\t\t\t\t\t\t\" | graphics bytes: \"+this._num_graphics+\", \"+(this._time_graphics_bytes | 0)+\"ms\",\r\n\t\t\t\t\t\t\" | timelines: \"+this._num_timeline+\", \"+(this._time_timeline | 0)+\"ms\",\r\n\t\t\t\t\t\t\" | fonts: \"+this._num_fonts+\", \"+(this._time_fonts | 0)+\"ms\",\r\n\t\t\t\t\t\t\" | sounds: \"+this._num_sounds+\", \"+(this._time_sounds | 0)+\"ms\",\r\n\t\t\t\t\t\t\" | mats: \"+this._num_materials+\", \"+(this._time_materials | 0)+\"ms\",\r\n\t\t\t\t\t\t\" | textures: \"+this._num_textures+\", \"+(this._time_textures | 0)+\"ms\",\r\n\t\t\t\t\t\t\" | sprites: \"+this._num_sprites+\", \"+(this._time_sprites | 0)+\"ms\");\r\n\r\n\t\t\t\treturn  ParserBase.PARSING_DONE;\r\n\t\t\t} else {\r\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\tswitch (this._compression) {\r\n\t\t\t\tcase AWDParser.DEFLATE:\r\n\t\t\t\tcase AWDParser.LZMA:\r\n\t\t\t\t\tif (this._debug)\r\n\t\t\t\t\t\tconsole.log(\"(!) AWDParser Error: Compressed AWD formats not yet supported (!)\");\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t// Error - most likely _body not set because we do not support compression.\r\n\t\t\treturn  ParserBase.PARSING_DONE;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\t}\r\n\r\n\tprivate dispose()\r\n\t{\r\n\t\tfor (var c in this._blocks) {\r\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[c];\r\n\t\t\tb.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseNextBlock()\r\n\t{\r\n\t\tvar block:AWDBlock;\r\n\t\tvar isParsed:boolean = false;\r\n\t\tvar ns:number;\r\n\t\tvar type:number;\r\n\t\tvar flags:number;\r\n\t\tvar len:number;\r\n//*\r\n\t\tif (this._debugTimers)\r\n\t\t\tthis.start_timeing = performance.now();\r\n//*/\r\n\t\tthis._cur_block_id = this._body.readUnsignedInt();\r\n\r\n\t\tns = this._body.readUnsignedByte();\r\n\t\ttype = this._body.readUnsignedByte();\r\n\t\tflags = this._body.readUnsignedByte();\r\n\t\tlen = this._body.readUnsignedInt();\r\n\r\n\t\tvar blockCompression:boolean = BitFlags.test(flags, BitFlags.FLAG4);\r\n\t\tvar blockCompressionLZMA:boolean = BitFlags.test(flags, BitFlags.FLAG5);\r\n\r\n\t\tif (this._accuracyOnBlocks) {\r\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG1);\r\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG2);\r\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG3);\r\n\t\t}\r\n\r\n\t\tvar blockEndAll:number = this._body.position + len;\r\n\r\n\t\tif (len > this._body.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\r\n\t\t\tthis._body.position += this._body.getBytesAvailable();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// Compressed AWD Formats not yet supported\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\tthis._newBlockBytes = new ByteArray();\r\n\t\t\tthis._body.readBytes(this._newBlockBytes, 0, len);\r\n\t\t\tthis._newBlockBytes.position = 0;\r\n\t\t\t/*\r\n\t\t\t if (blockCompressionLZMA)\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress(AWD3Parserutils.COMPRESSIONMODE_LZMA);\r\n\t\t\t }\r\n\t\t\t else\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress();\r\n\t\t\t }\r\n\t\t\t */\r\n\r\n\t\t} else {\r\n\t\t\tthis._newBlockBytes = this._body;\r\n\t\t}\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\r\n\t\t//----------------------------------------------------------------------------\r\n\r\n\t\tblock = new AWDBlock(this._cur_block_id, type);\r\n\t\tblock.len = len;\r\n\t\tvar blockEndBlock:number = this._newBlockBytes.position + len;\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\r\n\t\t\t//block.len       = blockEndBlock;\r\n\t\t}\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + this._cur_block_id + \" | TypeID = \" + type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Graphics-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\r\n\r\n\t\tthis._blocks[this._cur_block_id] = block;\r\n\r\n\t\tif ((this._version[0] == 3) && (this._version[1] == 0)) {\r\n\t\t\t// probably should contain some info about the type of animation\r\n\t\t\tvar factory = new AS2SceneGraphFactory(this._view);\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 24:\r\n\t\t\t\t\tthis.parseSpriteLibraryBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 25:\r\n\t\t\t\t\tthis.parseBillBoardLibraryBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4444:\r\n\t\t\t\t\tthis.parseAudioBlock(this._cur_block_id, factory);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 133:\r\n\t\t\t\t\tthis.parseMovieClip(this._cur_block_id, factory);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 134:\r\n\t\t\t\t\tthis.parseTextField(this._cur_block_id, factory);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 135:\r\n\t\t\t\t\tthis.parseTesselatedFont(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 136:\r\n\t\t\t\t\tthis.parseTextFormat(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ((this._version[0] > 2)||((this._version[0] >= 2) && (this._version[1] >= 1))) {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 11:\r\n\t\t\t\t\tthis.parsePrimitves(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 31:\r\n\t\t\t\t\tthis.parseSkyboxInstance(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 41:\r\n\t\t\t\t\tthis.parseLight(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 42:\r\n\t\t\t\t\tthis.parseCamera(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//  case 43:\r\n\t\t\t\t//      parseTextureProjector(_cur_block_id);\r\n\t\t\t\t//      isParsed = true;\r\n\t\t\t\t//      break;\r\n\r\n\t\t\t\tcase 51:\r\n\t\t\t\t\tthis.parseLightPicker(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 81:\r\n\t\t\t\t\tthis.parseMaterial_v1(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 83:\r\n\t\t\t\t\tthis.parseCubeTexture(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 91:\r\n\t\t\t\t\tthis.parseSharedMethodBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 92:\r\n\t\t\t\t\tthis.parseShadowMethodBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 111:\r\n\t\t\t\t\tthis.parseSpritePoseAnimation(this._cur_block_id, true);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 112:\r\n\t\t\t\t\tthis.parseSpritePoseAnimation(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 113:\r\n\t\t\t\t\tthis.parseVertexAnimationSet(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 122:\r\n\t\t\t\t\tthis.parseAnimatorSet(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 253:\r\n\t\t\t\t\tthis.parseCommand(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isParsed == false) {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.parseGraphics(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 22:\r\n\t\t\t\t\tthis.parseContainer(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 23:\r\n\t\t\t\t\tthis.parseSpriteInstance(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 81:\r\n\t\t\t\t\tthis.parseMaterial(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 82:\r\n\t\t\t\t\tthis.parseTexture(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 101:\r\n\t\t\t\t\tthis.parseSkeleton(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 102:\r\n\t\t\t\t\tthis.parseSkeletonPose(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 103:\r\n\t\t\t\t\tthis.parseSkeletonAnimation(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 121:\r\n\t\t\t\t//this.parseUVAnimation(this._cur_block_id);\r\n\t\t\t\t//break;\r\n\t\t\t\tcase 254:\r\n\t\t\t\t\tthis.parseNameSpace(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 255:\r\n\t\t\t\t\tthis.parseMetaData(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (this._debug)\r\n\t\t\t\t\t\tconsole.log(\"AWDBlock:   Unknown BlockType  (BlockID = \" + this._cur_block_id + \") - Skip \" + len + \" bytes\");\r\n\r\n\t\t\t\t\tthis._newBlockBytes.position += len;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tif (this._newBlockBytes.position != blockEndBlock)\r\n\t\t\t\tconsole.log(\"  (!)(!)(!) Error while reading AWDBlock ID \" + this._cur_block_id + \" = skip to next block\");\r\n\r\n\t\t\tif (block.errorMessages) {\r\n\t\t\t\tvar len:number = block.errorMessages.length;\r\n\t\t\t\tfor (var msgCnt:number = 0; msgCnt < len; msgCnt++)\r\n\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\"\\n\");\r\n\t\t}\r\n\r\n\t\tif (this._debugTimers && !this.parsingPaused)\r\n\t\t\tthis.updateTimers(type);\r\n\r\n\t\tthis._body.position = blockEndAll;\r\n\t\tthis._newBlockBytes = null;\r\n\t}\r\n\r\n\tprivate updateTimers(type:number)\r\n\t{\r\n\t\tvar end_timing = performance.now();\r\n\t\tvar time_delta = end_timing - this.start_timeing;\r\n\t\tthis._time_all += time_delta;\r\n\r\n\t\tif (type == 1) {\r\n\t\t\tthis._time_graphics += time_delta;\r\n\t\t\tthis._num_graphics++;\r\n\t\t} else if (type == 133) {\r\n\t\t\tthis._time_timeline += time_delta;\r\n\t\t\tthis._num_timeline++;\r\n\t\t} else if (type == 135) {\r\n\t\t\tthis._time_fonts += time_delta;\r\n\t\t\tthis._num_fonts++;\r\n\t\t} else if (type == 134) {\r\n\t\t\tthis._time_textfields += time_delta;\r\n\t\t\tthis._num_textfields++;\r\n\t\t} else if (type == 44) {\r\n\t\t\tthis._time_sounds += time_delta;\r\n\t\t\tthis._num_sounds++;\r\n\t\t} else if (type == 82) {\r\n\t\t\tthis._time_textures += time_delta;\r\n\t\t\tthis._num_textures++;\r\n\t\t} else if (type == 81) {\r\n\t\t\tthis._time_materials += time_delta;\r\n\t\t\tthis._num_materials++;\r\n\t\t} else if(type==24) {\r\n\t\t\tthis._time_sprites += time_delta;\r\n\t\t\tthis._num_sprites++;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//--Parser Blocks---------------------------------------------------------------------------\r\n\r\n\r\n\tprivate parseTesselatedFont(blockID:number)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tthis._blocks[blockID].name = name;\r\n\t\tvar new_font:Font=<Font>AssetLibrary.getAsset(this._blocks[blockID].name);\r\n\t\tvar newfont:Boolean = false;\r\n\t\tif(new_font==undefined){\r\n\t\t\tnew_font = new Font();\r\n\t\t\tnewfont=true;\r\n\t\t}\r\n\t\tvar font_style_cnt:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar font_style_char_cnt:number;\r\n\t\tvar font_style_name:string;\r\n\t\tvar new_font_style:TesselatedFontTable;\r\n\t\tvar font_style_char:number;\r\n\t\tvar attr_count:number=0;\r\n\t\tvar sm_len:number;\r\n\t\tvar sm_end:number;\r\n\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\t\tfor (var i:number = 0; i < font_style_cnt; ++i) {\r\n\t\t\tfont_style_name = this.parseVarStr();\r\n\r\n\t\t\t// dirty hack for icycle\r\n\t\t\t// we use bold chars for non-latin chars, but we use regular for � sign,\r\n\t\t\t// so the dirty hack is to merge the regular and the bold style\r\n\t\t\tif((this._blocks[blockID].name==\"Tahoma\") && (font_style_name==\"RegularStyle\")){\r\n\t\t\t\tfont_style_name=\"BoldStyle\";\r\n\t\t\t}\r\n\r\n\t\t\tnew_font_style = new_font.get_font_table(font_style_name);\r\n\t\t\tnew_font_style.set_font_em_size(this._newBlockBytes.readUnsignedInt());\r\n\t\t\tnew_font_style.set_whitespace_width(this._newBlockBytes.readUnsignedInt());\r\n\t\t\tnew_font_style.ascent=this._newBlockBytes.readFloat();\r\n\t\t\tnew_font_style.descent=this._newBlockBytes.readFloat();\r\n\t\t\t//console.log(new_font_style.get_whitespace_width());\r\n\t\t\tfont_style_char_cnt = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tfor (var j:number = 0; j < font_style_char_cnt; ++j) {\r\n\t\t\t\t// todo: this is basically a simplified version of the elements-parsing done in parseGraphics. Make a parseElements() instead (?)\r\n\t\t\t\tfont_style_char = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar char_width=this._newBlockBytes.readFloat();\r\n\t\t\t\tsm_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tsm_end = this._newBlockBytes.position + sm_len;\r\n\r\n\t\t\t\t// Loop through data streams\r\n\t\t\t\twhile (this._newBlockBytes.position < sm_end) {\r\n\t\t\t\t\t// Type, field type, length\r\n\t\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\r\n\r\n\t\t\t\t\tif (str_type == 2) {//face indices positions\r\n\t\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\t\t\t\t\t\tfor(var idx:number = 0; this._newBlockBytes.position < str_end; idx++)\r\n\t\t\t\t\t\t\tindices[idx] = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t} else if (str_type == 11) {// combined vertex2D stream 5 x float32 (position + curvedata)\r\n\t\t\t\t\t\tattr_count = 20;\r\n\t\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\r\n\t\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\r\n\t\t\t\t\t} else if (str_type == 12) {// combined vertex2D stream 5 x float32 (position + curvedata)\r\n\t\t\t\t\t\tattr_count = 12;\r\n\t\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\r\n\t\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\r\n\t\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 7 x float32 (position + curvedata + uv)\r\n\t\t\t\t\t\tattr_count = 28;\r\n\t\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\r\n\t\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(curveData) {\r\n\t\t\t\t\tvar vertexBuffer:AttributesBuffer = new AttributesBuffer(attr_count, str_len / attr_count);\r\n\t\t\t\t\tvertexBuffer.bufferView = new Uint8Array(<ArrayBuffer> curveData.arraybytes);\r\n\r\n\t\t\t\t\tvar curve_elements:TriangleElements = new TriangleElements(vertexBuffer);\r\n\r\n\t\t\t\t\tcurve_elements.setPositions(new Float2Attributes(vertexBuffer));\r\n\t\t\t\t\tif (attr_count == 20)\r\n\t\t\t\t\t\tcurve_elements.setCustomAttributes(\"curves\", new Float3Attributes(vertexBuffer));\r\n\t\t\t\t\telse if(attr_count == 12)\r\n\t\t\t\t\t\tcurve_elements.setCustomAttributes(\"curves\", new Byte4Attributes(vertexBuffer, false));\r\n\r\n\t\t\t\t\t//add UVs if they exist in the data\r\n\t\t\t\t\tif (attr_count == 28)\r\n\t\t\t\t\t\tcurve_elements.setUVs(new Float2Attributes(vertexBuffer));\r\n\r\n\t\t\t\t\tnew_font_style.setChar(font_style_char.toString(), curve_elements, char_width);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.parseProperties(null);\r\n\t\tthis.parseUserAttributes();\r\n\t\tif(newfont) {\r\n\t\t\tthis._pFinalizeAsset(<IAsset>new_font, name);\r\n\t\t}\r\n\r\n\t\tthis._blocks[blockID].data = new_font;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a font: Name = '\" + name);\r\n\t}\r\n\r\n\tprivate static textFormatProperties:Object = {\r\n\t\t1:AWDParser.UINT16,\t\t//fontsize\r\n\t\t2:AWDParser.FLOAT32,\t\t//letterspacing\r\n\t\t3:AWDParser.UINT8,\t\t//rotated\r\n\t\t4:AWDParser.UINT8,\t\t//auto-kerning\r\n\t\t5:AWDParser.UINT8,\t\t//baselineshift\r\n\t\t6:AWDParser.UINT8,\t\t//align\r\n\t\t7:AWDParser.FLOAT32,\t\t//intent\r\n\t\t8:AWDParser.FLOAT32,\t\t//left margin\r\n\t\t9:AWDParser.FLOAT32,\t\t//right margin\r\n\t\t10:AWDParser.FLOAT32};\t//line spacing\r\n\r\n\tprivate parseTextFormat(blockID:number)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tthis._blocks[blockID].name = name;\r\n\r\n\t\tvar font:Font = <Font> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\tvar font_style_name:string = this.parseVarStr();\r\n\r\n\t\tvar newTextFormat:TextFormat = new TextFormat();\r\n\t\tnewTextFormat.font_name = font.name;\r\n\r\n\t\tvar font_table:TesselatedFontTable = font.get_font_table(font_style_name);\r\n\t\tif (font_table!=null) {\r\n\t\t\tnewTextFormat.font_style = font_style_name;\r\n\t\t\tnewTextFormat.font_table = font_table;\r\n\t\t}\r\n\r\n\t\tvar mat:BasicMaterial = <BasicMaterial> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\tmat.bothSides = true;\r\n\t\tmat.curves = true;\r\n\t\tvar num_uv_values:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar uv_values:Array<number> = [];\r\n\t\tfor(var uvcnt:number = 0; uvcnt < num_uv_values; uvcnt++)\r\n\t\t\tuv_values[uvcnt] = this._newBlockBytes.readFloat();\r\n\r\n\t\tnewTextFormat.uv_values = uv_values;\r\n\t\tvar format_props:AWDProperties = this.parseProperties(AWDParser.textFormatProperties);\r\n\r\n\t\tnewTextFormat.size = format_props.get(1,12);\r\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\r\n\t\t//newTextFormat.rotated = format_props.get(3,false);\r\n\t\tnewTextFormat.kerning = format_props.get(4,true);\r\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\r\n\t\tvar tf_align_int:number = format_props.get(6,0);\r\n\t\tif(tf_align_int==1){\r\n\t\t\tnewTextFormat.align=\"right\";\r\n\t\t}\r\n\t\telse if(tf_align_int==2){\r\n\t\t\tnewTextFormat.align=\"center\";\r\n\t\t}\r\n\t\tnewTextFormat.indent = format_props.get(7,0);\r\n\t\tnewTextFormat.leftMargin = format_props.get(8,0);\r\n\t\tnewTextFormat.rightMargin = format_props.get(9,0);\r\n\t\tnewTextFormat.leading = format_props.get(10,0);\r\n\t\tnewTextFormat.material = mat;\r\n\t\tthis.parseUserAttributes();// textformat has no extra-properties\r\n\t\t//newTextFormat.extra =\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> newTextFormat, name);\r\n\t\tthis._blocks[blockID].data = newTextFormat;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a TextFormat: Name = '\" + name + \" font: \"+font.name);\r\n\t}\r\n\r\n\tprivate static textFieldProperties:Object = {\r\n\t\t1:AWDParser.BOOL,\r\n\t\t3:AWDParser.BOOL,\r\n\t\t4:AWDParser.BOOL,\r\n\t\t5:AWDParser.BOOL,\r\n\t\t7:AWDParser.UINT8,\r\n\t\t8:AWDParser.UINT8,\r\n\t\t9:AWDParser.UINT8};\r\n\r\n\tprivate static textFieldTypes:Array<string> = [\"static\", \"dynamic\", \"input\", \"input\"];\r\n\r\n\r\n\tprivate parseTextField(blockID:number, factory:ITimelineSceneGraphFactory)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tthis._blocks[blockID].name = name;\r\n        var newTextField = factory.createTextField();\r\n\t\tvar text_field_type:number=this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\tnewTextField.type = AWDParser.textFieldTypes[text_field_type];\r\n\r\n\t\tif(text_field_type == 3)\r\n\t\t\tnewTextField.displayAsPassword = true;\r\n\r\n\t\t//\r\n\t\tnewTextField.textWidth = Math.abs(this._newBlockBytes.readFloat());\r\n\t\tnewTextField.textHeight = Math.abs(this._newBlockBytes.readFloat());\r\n\t\tvar num_paragraphs:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar complete_text:string = \"\";\r\n\t\t//console.log(\"num_paragraphs  '\" + num_paragraphs);\r\n\t\tfor(var paracnt:number=0; paracnt<num_paragraphs; paracnt++){\r\n\r\n\t\t\tvar num_textruns:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t//console.log(\"num_textruns  '\" + num_textruns);\r\n\t\t\tfor(var textrun_cnt:number=0; textrun_cnt<num_textruns; textrun_cnt++) {\r\n\t\t\t\tvar text_format:TextFormat = <TextFormat> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\t\t\tvar txt_length = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"txt_length  '\" + txt_length);\r\n\t\t\t\tif (txt_length > 0) {\r\n\t\t\t\t\tvar this_txt:string = this._newBlockBytes.readUTFBytes(txt_length);\r\n\t\t\t\t\t//newTextField.appendText(this_txt, text_format);\r\n\t\t\t\t\tcomplete_text += this_txt;\r\n\t\t\t\t\t//console.log(\"this_txt  '\" + this_txt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//newTextField.closeParagraph();\r\n\t\t}\r\n\t\tnewTextField.textFormat=text_format;\r\n\t\tnewTextField.text=complete_text;\r\n\t\t//newTextField.construct_graphics();\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.textFieldProperties);\r\n\t\tnewTextField.selectable = props.get(1, false);\r\n\t\tnewTextField.border =  props.get(3, false);\r\n\t\t//newTextField.renderHTML =  props.get(4, false);\r\n\t\t//newTextField.scrollable =  props.get(5, false);\r\n\t\t//newTextField.text_flow =  props.get(7, 0);\r\n\t\t//newTextField.orientationMode =  props.get(8, 0);\r\n\t\t//newTextField.line_mode =  props.get(9, 0);\r\n\t\tnewTextField.extra = this.parseUserAttributes();\r\n\r\n\t\t//console.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\r\n\t\tthis._pFinalizeAsset(<IAsset> newTextField, name);\r\n\t\tthis._blocks[blockID].data = newTextField;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\r\n\t}\r\n\r\n\t// Block ID = 25\r\n\tprivate parseBillBoardLibraryBlock(blockID:number)\r\n\t{\r\n\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar mat:BasicMaterial = <BasicMaterial> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\tmat.bothSides=true;\r\n\t\tvar billboard:Billboard = new Billboard(mat);\r\n\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\t\tthis.parseProperties(null);\r\n\r\n\t\tbillboard.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> billboard, name);\r\n\r\n\t\tthis._blocks[blockID].data = billboard;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Library-Billboard: Name = '\" + name + \"| Material-Name = \" + mat.name);\r\n\t}\r\n\t// Block ID = 24\r\n\tprivate parseSpriteLibraryBlock(blockID:number)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar graphics:Graphics = <Graphics> this._blocks[data_id].data;\r\n\t\tthis._blocks[blockID].geoID = data_id;\r\n\r\n\t\tvar num_materials:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar materials:Array<MethodMaterial> = new Array<MethodMaterial>();\r\n\t\tvar materialNames:Array<string> = new Array<string>();\r\n\t\tvar mat:MethodMaterial;\r\n\t\tfor (var materials_parsed:number = 0; materials_parsed < num_materials; materials_parsed++) {\r\n\t\t\tmat = <MethodMaterial> (this._blocks[this._newBlockBytes.readUnsignedInt()].data || DefaultMaterialManager.getDefaultMaterial());\r\n\t\t\t//mat.preserveAlpha = true;\r\n\t\t\tmat.alphaBlending = true;\r\n\t\t\tmat.useColorTransform = true;\r\n\t\t\tmaterials[materials_parsed] = mat;\r\n\t\t\tmaterialNames[materials_parsed] = mat.name;\r\n\t\t}\r\n\r\n\t\tvar start_timeing = performance.now();\r\n\t\tvar sprite:Sprite = new Sprite();\r\n\t\tgraphics.copyTo(sprite.graphics);\r\n\t\tvar end_timing = performance.now();\r\n\t\tvar time_delta = end_timing - start_timeing;\r\n\t\tthis._time_graphics_bytes += time_delta;\r\n\r\n\t\tif (materials.length >= 1 && sprite.graphics.count == 1) {\r\n\t\t\tsprite.material = materials[0];\r\n\t\t} else if (materials.length > 1) {\r\n\t\t\t// Assign each sub-sprite in the sprite a material from the list. If more sub-sprites\r\n\t\t\t// than materials, repeat the last material for all remaining sub-sprites.\r\n\t\t\tfor (var i:number = 0; i < sprite.graphics.count; i++)\r\n\t\t\t\tsprite.graphics.getGraphicAt(i).material = materials[Math.min(materials.length - 1, i)];\r\n\t\t}\r\n\r\n\t\tvar count:number = this._newBlockBytes.readUnsignedShort();\r\n\t\t//if(count != sprite.graphics.count)\r\n\t\t//\tthrow new Error(\"num elements does not match num subsprites\";\r\n\r\n\t\tfor (var i:number = 0; i < count; i++) {\r\n\t\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\t\tvar sampler:Sampler2D = new Sampler2D();\r\n\t\t\tvar graphic:Graphic = sprite.graphics.getGraphicAt(i);\r\n\t\t\tif(graphic) {\r\n\t\t\t\tgraphic.style = new Style();\r\n\t\t\t\tgraphic.style.addSamplerAt(sampler, graphic.material.getTextureAt(0));\r\n\t\t\t}\r\n\t\t\tif (type == 3) {// solid color fill - need tx and ty\r\n\t\t\t\tvar tx:number=this._newBlockBytes.readFloat();\r\n\t\t\t\tvar ty:number=this._newBlockBytes.readFloat();\r\n\t\t\t\tif(graphic) {\r\n\t\t\t\t\tgraphic.material.animateUVs = true;\r\n\t\t\t\t\tgraphic.style.uvMatrix = new Matrix(0, 0, 0, 0, tx, ty);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (type == 4) {// texture fill - need full matrix\r\n\t\t\t\tvar matrix:Array<number> = this.parseMatrix32RawData();\r\n\t\t\t\tif(graphic) {\r\n\t\t\t\t\tgraphic.material.animateUVs = true;\r\n\t\t\t\t\tgraphic.style.uvMatrix = new Matrix(matrix[0], matrix[2], matrix[1], matrix[3], matrix[4], matrix[5]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (type == 5) {// linear gradient fill - need a, c , tx and ty\r\n\t\t\t\tvar newMatrix:Matrix = new Matrix(this._newBlockBytes.readFloat(), this._newBlockBytes.readFloat(), 0, 0, this._newBlockBytes.readFloat(), this._newBlockBytes.readFloat());\r\n\t\t\t\tif(graphic) {\r\n\t\t\t\t\tgraphic.material.animateUVs = true;\r\n\t\t\t\t\tgraphic.style.uvMatrix = newMatrix;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\telse if (type == 6) {// radial gradient fill - need image rectangle + full transform\r\n\t\t\t\t\tvar x:number = this._newBlockBytes.readFloat();\r\n\t\t\t\t\tvar y:number = this._newBlockBytes.readFloat();\r\n\t\t\t\t\tvar width:number = this._newBlockBytes.readFloat();\r\n\t\t\t\t\tvar height:number = this._newBlockBytes.readFloat();\r\n\t\t\t\t\tvar matrix:Array<number> = this.parseMatrix32RawData();\r\n\t\t\t\t\tif(graphic) {\r\n\t\t\t\t\t\tsampler.imageRect = new Rectangle(x, y, width, height);\r\n\t\t\t\t\t\tgraphic.material.imageRect = true;\r\n\t\t\t\t\t\tgraphic.material.animateUVs = true;\r\n\t\t\t\t\t\tgraphic.style.uvMatrix = new Matrix(matrix[0], matrix[2], matrix[1], matrix[3], matrix[4], matrix[5]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\tif(graphic) {\r\n\t\t\t\t//check if curves are needed\r\n\t\t\t\tif (graphic.elements.getCustomAtributes(\"curves\"))\r\n\t\t\t\t\tgraphic.material.curves = true;\r\n\t\t\t}\r\n\t\t\t// todo: finish optional properties (spreadmode + focalpoint)\r\n\t\t\tthis._newBlockBytes.readUnsignedInt();\r\n\t\t}\r\n\r\n\t\tthis.parseProperties(null);\r\n\t\tsprite.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> sprite, name);\r\n\r\n\t\tthis._blocks[blockID].data = sprite;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Library-Sprite: Name = '\" + name + \"| Graphics-Name = \" + graphics.name + \" | Graphics-Count = \" + sprite.graphics.count + \" | Mat-Names = \" + materialNames);\r\n\t}\r\n\r\n\tprivate parseAudioBlock(blockID:number, factory:ITimelineSceneGraphFactory)\r\n\t{\r\n\t\t//var asset:Audio;todo create asset for audio\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\r\n\t\t\t// todo parser needs to be able to handle mp3 and wav files if we trigger the loading of external ressource\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\r\n\t\t} else {\r\n\t\t\t// todo: exporter does not export embed sounds yet\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray = new ByteArray(data_len);\r\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t// todo parse sound from bytes\r\n\t\t\t// this._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.by(data), true);\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t//this._blocks[blockID].data = asset;todo\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Start parsing a \" + [\"external\", \"embed\"][type] + \" Audio file\");\r\n\t}\r\n\r\n\tprivate static movieClipProperties:Object = {\r\n\t\t1:AWDParser.FLOAT32,\t//fps\r\n\t\t2:AWDParser.UINT16,\t\t// sceneID if not present or 0, mc is no scene\r\n\t\t3:AWDParser.UINT8};\t\t// scripting-language right now its always as2\r\n\t//Block ID = 4\r\n\tprivate parseMovieClip(blockID:number, factory:ITimelineSceneGraphFactory)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar cmd_asset:DisplayObject;\r\n\t\tvar new_timeline:Timeline = new Timeline();\r\n\t\tvar new_mc = factory.createMovieClip(new_timeline);\r\n\t\tvar name = this.parseVarStr();\r\n\r\n\t\t// register list of potential childs\r\n\t\t// a potential child can be reused on a timeline (added / removed / added)\r\n\t\t// However, for each potential child, we need to register the max-number of instances that a frame contains\r\n\t\t// we parse 2 lists of potential-childs:\r\n\t\t// -\tthe first list contains potential-childs that are only ever instanced once per frame.\r\n\t\t// -\tthe second list contains potential-childs that are instanced multiple times on some frames.\r\n\r\n\t\t// on registering a child, the child gets a incremental-id assigned. This is the id, that the commands are using to access the childs.\r\n\t\t// hence we need to be careful to register all objects in correct order.\r\n\r\n\t\tvar num_potential_childs:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_childs; i++) {\r\n\t\t\tcmd_asset = <DisplayObject> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\tnew_timeline.registerPotentialChild(cmd_asset);\r\n\t\t\t} else {\r\n\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar num_all_display_instances:number = num_potential_childs;\r\n\r\n\t\tvar num_potential_childs_multi_instanced = this._newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_childs_multi_instanced; i++) {\r\n\t\t\tcmd_asset = <DisplayObject> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\t\tvar num_instances:number = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tnum_all_display_instances += num_instances;\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\tfor (j = 0; j < num_instances; j++)\r\n\t\t\t\t\tnew_timeline.registerPotentialChild(cmd_asset);\r\n\t\t\t} else {\r\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\r\n\t\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed \" + (num_potential_childs + num_potential_childs_multi_instanced) + \" potential childs. They will be used by \" + num_all_display_instances + \" instances.\");\r\n\r\n\t\t// register list of potential sounds - for now we always have 0 sounds\r\n\t\tvar num_potential_sounds = this._newBlockBytes.readUnsignedShort();\r\n\r\n\r\n\t\tvar str_cnt = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar str_len = 0;\r\n\t\tvar str_data_type = 0;\r\n\t\tvar str_type=0;\r\n\t\tvar str_counter=0;\r\n\t\tfor(i=0; i<str_cnt;i++){\r\n\t\t\t// the first 6 lists are not optional and always in same order\r\n\t\t\t// hence we can get type by incremental counter instead of stored uint8\r\n\t\t\tif(str_counter<6)\r\n\t\t\t\tstr_type=str_counter;\r\n\t\t\telse\r\n\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t// get the data type for this stream (1:UINT8 - 2:UINT16 - 3:UINT32)\r\n\t\t\tstr_data_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t// size of this stream in byte\r\n\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tif(str_len>0) {\r\n\t\t\t\tvar keyframes_start_indices_data:ByteArray = new ByteArray(str_len);\r\n\t\t\t\tthis._newBlockBytes.readBytes(keyframes_start_indices_data, 0, str_len);\r\n\t\t\t\tvar new_buffer:ArrayBufferView;\r\n\t\t\t\t//console.log(\"str_data_type = \"+str_type);\r\n\t\t\t\tswitch (str_data_type) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tnew_buffer = new Uint8Array(<ArrayBuffer> keyframes_start_indices_data.arraybytes);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tnew_buffer = new Uint16Array(<ArrayBuffer> keyframes_start_indices_data.arraybytes);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\tnew_buffer = new Uint32Array(<ArrayBuffer> keyframes_start_indices_data.arraybytes);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tswitch (str_type) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tnew_timeline.keyframe_durations = new_buffer;\r\n\t\t\t\t\t\tnew_timeline.numKeyFrames=str_len / str_data_type;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tnew_timeline.frame_command_indices = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tnew_timeline.frame_recipe = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tnew_timeline.command_length_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\tnew_timeline.command_index_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\tnew_timeline.add_child_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\tnew_timeline.remove_child_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\tnew_timeline.update_child_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 8:\r\n\t\t\t\t\t\tnew_timeline.update_child_props_indices_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 9:\r\n\t\t\t\t\t\tnew_timeline.update_child_props_length_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 10:\r\n\t\t\t\t\t\tnew_timeline.property_type_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 11:\r\n\t\t\t\t\t\tnew_timeline.property_index_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 12:\r\n\t\t\t\t\t\tnew_timeline.properties_stream_int = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tstr_counter++;\r\n\t\t}\r\n\t\tvar lc:number=0;\r\n\t\tvar float_array_data:ByteArray;\r\n\t\tstr_cnt = this._newBlockBytes.readUnsignedByte();\r\n\t\tfor(i=0; i<str_cnt;i++){\r\n\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tswitch(str_type) {\r\n\t\t\t\tcase 0://mtx_scale\r\n\t\t\t\t\tfloat_array_data = new ByteArray(str_len);\r\n\t\t\t\t\tthis._newBlockBytes.readBytes(float_array_data, 0, str_len);\r\n\t\t\t\t\tnew_timeline.properties_stream_f32_mtx_scale_rot=new Float32Array(<ArrayBuffer> float_array_data.arraybytes);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 1://mtx_pos\r\n\t\t\t\t\tfloat_array_data = new ByteArray(str_len);\r\n\t\t\t\t\tthis._newBlockBytes.readBytes(float_array_data, 0, str_len);\r\n\t\t\t\t\tnew_timeline.properties_stream_f32_mtx_pos=new Float32Array(<ArrayBuffer> float_array_data.arraybytes);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2://mtx_all\r\n\t\t\t\t\tfloat_array_data = new ByteArray(str_len);\r\n\t\t\t\t\tthis._newBlockBytes.readBytes(float_array_data, 0, str_len);\r\n\t\t\t\t\tnew_timeline.properties_stream_f32_mtx_all=new Float32Array(<ArrayBuffer> float_array_data.arraybytes);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3://ct\r\n\t\t\t\t\tfloat_array_data = new ByteArray(str_len);\r\n\t\t\t\t\tthis._newBlockBytes.readBytes(float_array_data, 0, str_len);\r\n\t\t\t\t\tnew_timeline.properties_stream_f32_ct=new Float32Array(<ArrayBuffer> float_array_data.arraybytes);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4://labels\r\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t//console.log(\"start reading labels \"+str_len);\r\n\t\t\t\t\tfor (lc = 0; lc < str_len; lc++) {\r\n\t\t\t\t\t\tnew_timeline._labels[this.parseVarStr()] = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 5://name_stream\r\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\tvar string_props_array:Array<string>=[];\r\n\t\t\t\t\tfor (lc = 0; lc < str_len; lc++) {\r\n\t\t\t\t\t\tstring_props_array.push(this._newBlockBytes.readUTFBytes(this._newBlockBytes.readUnsignedShort()));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnew_timeline.properties_stream_strings = string_props_array;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 6://script_stream\r\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\tfor (lc = 0; lc < str_len; lc++) {\r\n\t\t\t\t\t\tvar frame_index=this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\tvar one_str_len=this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\t//this._newBlockBytes.readUTFBytes(one_str_len);\r\n\t\t\t\t\t\tnew_timeline.add_framescript(this._newBlockBytes.readUTFBytes(one_str_len), frame_index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tnew_timeline.init();\r\n\r\n\t\tvar sceneID:number = 0;\r\n\t\tvar fps:number = 25;\r\n\t\tthis.parseProperties(AWDParser.movieClipProperties);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset>new_mc, name);\r\n\r\n\t\tthis._blocks[blockID].data = new_mc;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| sceneID = \" + sceneID + \"| numFrames = \" + new_mc.timeline.numFrames);\r\n\t}\r\n\r\n\tprivate static graphicsProperties:Object = {\r\n\t\t1:AWDParser.GEO_NUMBER,\r\n\t\t2:AWDParser.GEO_NUMBER};\r\n\r\n\tprivate static elementsProperties:Object = {\r\n\t\t1:AWDParser.GEO_NUMBER,\r\n\t\t2:AWDParser.GEO_NUMBER};\r\n\r\n\t//Block ID = 1\r\n\tprivate parseGraphics(blockID:number)\r\n\t{\r\n\t\tvar graphics:Graphics = new Graphics();\r\n\r\n\t\t// Read name and sub count\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar numElements:number = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t// Read optional properties\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.graphicsProperties);\r\n\t\tvar geoScaleU:number = props.get(1, 1);\r\n\t\tvar geoScaleV:number = props.get(2, 1);\r\n\t\tvar target_start_idx:number=0;\r\n\t\tvar target_vert_cnt:number=0;\r\n\t\tvar element_type:number = ElementType.STANDART_STREAMS;\r\n\t\tvar target_element:ElementsBase = null;\r\n\t\t// Loop through sub sprites\r\n\t\tfor (var elements_parsed:number = 0;  elements_parsed < numElements; elements_parsed++) {\r\n\t\t\tvar is_curve_elements:boolean=false;\r\n\t\t\tvar attr_count:number=0;\r\n\t\t\tvar sm_len:number, sm_end:number;\r\n\t\t\tvar w_indices:Array<number>;\r\n\t\t\tvar weights:Array<number>;\r\n\t\t\ttarget_start_idx=0;\r\n\t\t\ttarget_vert_cnt=0;\r\n\t\t\telement_type = ElementType.STANDART_STREAMS;\r\n\t\t\ttarget_element = null;\r\n\t\t\tsm_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tsm_end = this._newBlockBytes.position + sm_len;\r\n\t\t\tvar elementsProps:AWDProperties = this.parseProperties(AWDParser.elementsProperties);\r\n\t\t\t// Loop through data streams\r\n\t\t\twhile (this._newBlockBytes.position < sm_end) {\r\n\t\t\t\tvar idx:number = 0;\r\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n\t\t\t\t// Type, field type, length\r\n\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\r\n\r\n\t\t\t\tvar x:number, y:number, z:number;\r\n\r\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\r\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo);\r\n\r\n\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\r\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\r\n\t\t\t\t\t\tindices[idx++] = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t\t\t} else if (str_type == 3) {\r\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\r\n\t\t\t\t\t\tuvs[idx++] = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t} else if (str_type == 4) {\r\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\r\n\t\t\t\t\t\tnormals[idx++] = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t} else if (str_type == 6) {\r\n\t\t\t\t\tw_indices = Array<number>();\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\r\n\t\t\t\t\t\tw_indices[idx++] = this._newBlockBytes.readUnsignedShort()*3;\r\n\t\t\t\t} else if (str_type == 7) {\r\n\t\t\t\t\tweights = new Array<number>();\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\r\n\t\t\t\t\t\tweights[idx++] = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 7 x float32 (2d pos + uv + curvedata)\r\n\t\t\t\t\telement_type=ElementType.CONCENATED_STREAMS;\r\n\t\t\t\t\tattr_count = 28;\r\n\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\r\n\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\r\n\t\t\t\t} else if (str_type == 11) {// combined vertex2D stream 5 x float32 (2d pos + curvedata)\r\n\t\t\t\t\telement_type=ElementType.CONCENATED_STREAMS;\r\n\t\t\t\t\tattr_count = 20;\r\n\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\r\n\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\r\n\t\t\t\t} else if (str_type == 12) {// combined vertex2D stream 5 x float32 (2d pos + curvedata)\r\n\t\t\t\t\telement_type=ElementType.CONCENATED_STREAMS;\r\n\t\t\t\t\tattr_count = 12;\r\n\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\r\n\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\r\n\t\t\t\t} else if (str_type == 13) {// combined vertex2D stream 5 x float32 (2d pos + curvedata)else {\r\n\t\t\t\t\telement_type=ElementType.SHARED_BUFFER;\r\n\t\t\t\t\tvar targetGraphic:Graphics=<Graphics>(this._blocks[this._newBlockBytes.readUnsignedInt()].data);\r\n\t\t\t\t\tvar element_idx:number=this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\ttarget_element = targetGraphic.getGraphicAt(element_idx).elements;\r\n\t\t\t\t\ttarget_start_idx = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\ttarget_vert_cnt = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.log(\"skipping unknown subgeom stream\");\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.parseUserAttributes(); // Ignore sub-sprite attributes for now\r\n\r\n\t\t\tif(element_type==ElementType.CONCENATED_STREAMS){\r\n\t\t\t\t//console.log(\"str_len/attr_count = \"+str_len/attr_count)\r\n\t\t\t\tvar vertexBuffer:AttributesBuffer = new AttributesBuffer(attr_count, str_len/attr_count);\r\n\t\t\t\tvertexBuffer.bufferView = new Uint8Array(<ArrayBuffer> curveData.arraybytes);\r\n\r\n\t\t\t\tvar curve_elements:TriangleElements = new TriangleElements(vertexBuffer);\r\n\r\n\t\t\t\tcurve_elements.setPositions(new Float2Attributes(vertexBuffer));\r\n\t\t\t\tif(attr_count==20){\r\n\t\t\t\t\tcurve_elements.setCustomAttributes(\"curves\", new Float3Attributes(vertexBuffer));\r\n\t\t\t\t}\r\n\t\t\t\telse if(attr_count==12){\r\n\t\t\t\t\tcurve_elements.setCustomAttributes(\"curves\", new Byte4Attributes(vertexBuffer, false));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(attr_count==28)\r\n\t\t\t\t\tcurve_elements.setUVs(new Float2Attributes(vertexBuffer));\r\n\r\n\t\t\t\tgraphics.addGraphic(curve_elements);\r\n\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a TriangleElements with curves\");\r\n\r\n\t\t\t}\r\n\t\t\telse if(element_type==ElementType.STANDART_STREAMS){\r\n\t\t\t\tvar triangle_elements = new TriangleElements(new AttributesBuffer());\r\n\r\n\t\t\t\tif (weights)\r\n\t\t\t\t\ttriangle_elements.jointsPerVertex = weights.length / (verts.length / 3);\r\n\r\n\t\t\t\tif (normals)\r\n\t\t\t\t\ttriangle_elements.autoDeriveNormals = false;\r\n\r\n\t\t\t\ttriangle_elements.autoDeriveTangents = true;\r\n\r\n\t\t\t\ttriangle_elements.setIndices(indices);\r\n\t\t\t\ttriangle_elements.setPositions(verts);\r\n\t\t\t\ttriangle_elements.setNormals(normals);\r\n\t\t\t\ttriangle_elements.setUVs(uvs);\r\n\t\t\t\ttriangle_elements.setJointWeights(weights);\r\n\t\t\t\ttriangle_elements.setJointIndices(w_indices);\r\n\r\n\t\t\t\tvar scaleU:number = elementsProps.get(1, 1);\r\n\t\t\t\tvar scaleV:number = elementsProps.get(2, 1);\r\n\t\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the graphics\r\n\r\n\t\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\r\n\t\t\t\t\tsetSubUVs = true;\r\n\t\t\t\t\tscaleU = geoScaleU / scaleU;\r\n\t\t\t\t\tscaleV = geoScaleV / scaleV;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (setSubUVs)\r\n\t\t\t\t\ttriangle_elements.scaleUV(scaleU, scaleV);\r\n\r\n\t\t\t\tgraphics.addGraphic(triangle_elements);\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a TriangleElements\");\r\n\t\t\t}\r\n\t\t\telse if(element_type==ElementType.SHARED_BUFFER){\r\n\r\n\t\t\t\tvar graphic:Graphic = graphics.addGraphic(target_element);\r\n\t\t\t\tgraphic.offset = target_start_idx;\r\n\t\t\t\tgraphic.count = target_vert_cnt;\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a TriangleElements that shares buffer from target geom\");\r\n\t\t\t}\r\n\r\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\r\n\t\t\t// when creating sprites (and their material assignments.)\r\n\t\t}\r\n\r\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\r\n\t\t\tgraphics.scaleUV(geoScaleU, geoScaleV);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> graphics, name);\r\n\t\tthis._blocks[blockID].data = graphics;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed Graphics: Name = \" + name);\r\n\t}\r\n\r\n\tprivate static primitiveProperties:Object = {\r\n\t\t101:AWDParser.GEO_NUMBER,\r\n\t\t102:AWDParser.GEO_NUMBER,\r\n\t\t103:AWDParser.GEO_NUMBER,\r\n\t\t110:AWDParser.GEO_NUMBER,\r\n\t\t111:AWDParser.GEO_NUMBER,\r\n\t\t301:AWDParser.UINT16,\r\n\t\t302:AWDParser.UINT16,\r\n\t\t303:AWDParser.UINT16,\r\n\t\t701:AWDParser.BOOL,\r\n\t\t702:AWDParser.BOOL,\r\n\t\t703:AWDParser.BOOL,\r\n\t\t704:AWDParser.BOOL};\r\n\r\n\tprivate static primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"];\r\n\r\n\t//Block ID = 11\r\n\tprivate parsePrimitves(blockID:number)\r\n\t{\r\n\t\tvar name:string;\r\n\t\tvar prefab:PrefabBase;\r\n\t\tvar primType:number;\r\n\t\tvar elements_parsed:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar bsm:Matrix3D;\r\n\r\n\t\t// Read name and sub count\r\n\t\tname = this.parseVarStr();\r\n\t\tprimType = this._newBlockBytes.readUnsignedByte();\r\n\t\tprops = this.parseProperties(AWDParser.primitiveProperties);\r\n\r\n\t\t// to do, not all properties are set on all primitives\r\n\t\tswitch (primType) {\r\n\t\t\tcase 1:\r\n\t\t\t\tprefab = new PrimitivePlanePrefab(null, ElementsType.TRIANGLE, props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tprefab = new PrimitiveCubePrefab(null, ElementsType.TRIANGLE, props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\tprefab = new PrimitiveSpherePrefab(null, ElementsType.TRIANGLE, props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(null, ElementsType.TRIANGLE, props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\r\n\t\t\t\tif (!props.get(701, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\r\n\t\t\t\tif (!props.get(702, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\r\n\t\t\t\tif (!props.get(703, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 5:\r\n\t\t\t\tprefab = new PrimitiveConePrefab(null, ElementsType.TRIANGLE, props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(null, ElementsType.TRIANGLE, props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 7:\r\n\t\t\t\tprefab = new PrimitiveTorusPrefab(null, ElementsType.TRIANGLE, props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tprefab = new PrefabBase();\r\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\r\n\t\t\t//graphics.elements;\r\n\t\t\t//graphics.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\r\n\t\t}\r\n\r\n\t\tthis.parseUserAttributes();\r\n\t\tprefab.name = name;\r\n\t\tthis._pFinalizeAsset(prefab, name);\r\n\t\tthis._blocks[blockID].data = prefab;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tif ((primType < 0) || (primType > 7))\r\n\t\t\t\tprimType = 0;\r\n\r\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + name + \"| type = \" + AWDParser.primitiveTypes[primType]);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static containerProperties:Object = {\r\n\t\t1:AWDParser.MATRIX_NUMBER,\r\n\t\t2:AWDParser.MATRIX_NUMBER,\r\n\t\t3:AWDParser.MATRIX_NUMBER,\r\n\t\t4:AWDParser.UINT8};\r\n\r\n\t// Block ID = 22\r\n\tprivate parseContainer(blockID:number)\r\n\t{\r\n\t\tvar name:string;\r\n\t\tvar mtx:Matrix3D;\r\n\t\tvar ctr:DisplayObjectContainer;\r\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\r\n\t\tmtx = this.parseMatrix3D();\r\n\t\tname = this.parseVarStr();\r\n\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tctr = new DisplayObjectContainer();\r\n\t\tctr.transform.matrix3D = mtx;\r\n\r\n\t\tif (parent) {\r\n\t\t\tparent.addChild(ctr);\r\n\t\t\tparentName = parent.name;\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(ctr);\r\n\t\t}\r\n\r\n\t\t// in AWD version 2.1 we read the Container properties\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tvar props:AWDProperties = this.parseProperties(AWDParser.containerProperties);\r\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t} else {// in other versions we do not read the Container properties\r\n\t\t\tthis.parseProperties(null);\r\n\t\t}\r\n\r\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\r\n\t\tctr.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> ctr, name);\r\n\t\tthis._blocks[blockID].data = ctr;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + name + \"' | Parent-Name = \" + parentName);\r\n\t}\r\n\r\n\tprivate static spriteInstanceProperties:Object = {\r\n\t\t1:AWDParser.MATRIX_NUMBER,\r\n\t\t2:AWDParser.MATRIX_NUMBER,\r\n\t\t3:AWDParser.MATRIX_NUMBER,\r\n\t\t4:AWDParser.UINT8,\r\n\t\t5:AWDParser.BOOL};\r\n\r\n\t// Block ID = 23\r\n\tprivate parseSpriteInstance(blockID:number)\r\n\t{\r\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\r\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar asset:IAsset = <IAsset> this._blocks[data_id].data;\r\n\t\tvar graphics:Graphics;\r\n\t\tvar prefab:PrefabBase;\r\n\t\tvar isPrefab:boolean=false;\r\n\t\tif (asset.isAsset(Graphics)) {\r\n\t\t\tgraphics = <Graphics> asset;\r\n\t\t} else {\r\n\t\t\tisPrefab = true;\r\n\t\t\tprefab = <PrefabBase> asset;\r\n\t\t}\r\n\r\n\t\tthis._blocks[blockID].geoID = data_id;\r\n\t\tvar num_materials:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar materials:Array<MethodMaterial> = new Array<MethodMaterial>();\r\n\t\tvar materialNames:Array<string> = new Array<string>();\r\n\t\tvar mat:MethodMaterial;\r\n\t\tfor (var materials_parsed:number = 0; materials_parsed < num_materials; materials_parsed++) {\r\n\t\t\tmat = <MethodMaterial> (this._blocks[this._newBlockBytes.readUnsignedInt()].data || DefaultMaterialManager.getDefaultMaterial());\r\n\t\t\tmaterials[materials_parsed] = mat;\r\n\t\t\tmaterialNames[materials_parsed] = mat.name;\r\n\t\t}\r\n\r\n\t\tvar sprite:Sprite;\r\n\r\n\t\tif (isPrefab) {\r\n\t\t\tsprite = <Sprite> prefab.getNewObject()\r\n\t\t} else {\r\n\t\t\tsprite = new Sprite();\r\n\t\t\tgraphics.copyTo(sprite.graphics);\r\n\t\t}\r\n\r\n\t\tsprite.transform.matrix3D = mtx;\r\n\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tif (parent) {\r\n\t\t\tparent.addChild(sprite);\r\n\t\t\tparentName = parent.name;\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(sprite);\r\n\t\t}\r\n\r\n\t\tif (materials.length >= 1 && sprite.graphics.count == 1) {\r\n\t\t\tsprite.material = materials[0];\r\n\t\t} else if (materials.length > 1) {\r\n\t\t\t// Assign each sub-sprite in the sprite a material from the list. If more sub-sprites\r\n\t\t\t// than materials, repeat the last material for all remaining sub-sprites.\r\n\t\t\tfor (var i:number = 0; i < sprite.graphics.count; i++)\r\n\t\t\t\tsprite.graphics.getGraphicAt(i).material = materials[Math.min(materials.length - 1, i)];\r\n\t\t}\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tvar props:AWDProperties = this.parseProperties(AWDParser.spriteInstanceProperties);\r\n\t\t\tsprite.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t\tsprite.castsShadows = props.get(5, true);\r\n\t\t} else {\r\n\t\t\tthis.parseProperties(null);\r\n\t\t}\r\n\r\n\t\tsprite.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> sprite, name);\r\n\t\tthis._blocks[blockID].data = sprite;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tif (isPrefab)\r\n\t\t\t\tconsole.log(\"Parsed a Sprite for Prefab: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Prefab-Name = \" + prefab.name + \" | Graphics-Count = \" + sprite.graphics.count + \" | Mat-Names = \" + materialNames);\r\n\t\t\telse\r\n\t\t\t\tconsole.log(\"Parsed a Sprite for Graphics: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Graphics-Name = \" + graphics.name + \" | Graphics-Count = \" + sprite.graphics.count + \" | Mat-Names = \" + materialNames);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//Block ID 31\r\n\tprivate parseSkyboxInstance(blockID:number)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar asset:Skybox = new Skybox();\r\n\t\tvar tex:SingleCubeTexture = new SingleCubeTexture(<BitmapImageCube> this._blocks[this._newBlockBytes.readUnsignedInt()].data || DefaultMaterialManager.getDefaultImageCube());\r\n\t\tasset.texture = tex;\r\n\r\n\t\tthis.parseProperties(null);\r\n\t\tasset.extra = this.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(asset, name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + name + \"' | CubeTexture-Name = \" + tex.name);\r\n\t}\r\n\r\n\tprivate static lightProperties:Object = {\r\n\t\t1:AWDParser.PROPERTY_NUMBER,\r\n\t\t2:AWDParser.PROPERTY_NUMBER,\r\n\t\t3:AWDParser.COLOR,\r\n\t\t4:AWDParser.PROPERTY_NUMBER,\r\n\t\t5:AWDParser.PROPERTY_NUMBER,\r\n\t\t6:AWDParser.BOOL,\r\n\t\t7:AWDParser.COLOR,\r\n\t\t8:AWDParser.PROPERTY_NUMBER,\r\n\t\t9:AWDParser.UINT8,\r\n\t\t10:AWDParser.UINT8,\r\n\t\t11:AWDParser.PROPERTY_NUMBER,\r\n\t\t12:AWDParser.UINT16,\r\n\t\t21:AWDParser.MATRIX_NUMBER,\r\n\t\t22:AWDParser.MATRIX_NUMBER,\r\n\t\t23:AWDParser.MATRIX_NUMBER};\r\n\r\n\t//Block ID = 41\r\n\tprivate parseLight(blockID:number)\r\n\t{\r\n\t\tvar light:LightBase;\r\n\t\tvar newShadowMapper:ShadowMapperBase;\r\n\r\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar lightType:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.lightProperties);\r\n\t\tvar shadowMapperType:number = props.get(9, 0);\r\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\r\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\r\n\r\n\t\tif (lightType == 1) {\r\n\t\t\tlight = new PointLight();\r\n\r\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\r\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 4) {\r\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.transform.matrix3D = mtx;\r\n\t\t}\r\n\r\n\t\tif (lightType == 2) {\r\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 1) {\r\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//if (shadowMapperType == 2)\r\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\r\n\t\t\t\t//if (shadowMapperType == 3)\r\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlight.color = props.get(3, 0xffffff);\r\n\t\tlight.specular = props.get(4, 1.0);\r\n\t\tlight.diffuse = props.get(5, 1.0);\r\n\t\tlight.ambientColor = props.get(7, 0xffffff);\r\n\t\tlight.ambient = props.get(8, 0.0);\r\n\r\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\r\n\t\tif (newShadowMapper) {\r\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\r\n\t\t\t\tif (props.get(10, 1) != 1)\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 1)];\r\n\t\t\t} else {\r\n\t\t\t\tif (props.get(10, 2) != 2)\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 2)];\r\n\t\t\t}\r\n\r\n\t\t\tlight.shadowMapper = newShadowMapper;\r\n\t\t\tlight.castsShadows = true;\r\n\t\t}\r\n\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tif (parent) {\r\n\t\t\tparent.addChild(light);\r\n\t\t\tparentName = parent.name;\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(light);\r\n\t\t}\r\n\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(< IAsset> light, name);\r\n\r\n\t\tthis._blocks[blockID].data = light;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\r\n\t}\r\n\r\n\tprivate static cameraProperties:Object = {\r\n\t\t101:AWDParser.PROPERTY_NUMBER,\r\n\t\t102:AWDParser.PROPERTY_NUMBER,\r\n\t\t103:AWDParser.PROPERTY_NUMBER,\r\n\t\t104:AWDParser.PROPERTY_NUMBER};\r\n\r\n\tprivate static cameraPivotProperties:Object = {\r\n\t\t1:AWDParser.MATRIX_NUMBER,\r\n\t\t2:AWDParser.MATRIX_NUMBER,\r\n\t\t3:AWDParser.MATRIX_NUMBER,\r\n\t\t4:AWDParser.UINT8};\r\n\r\n\t//Block ID = 43\r\n\tprivate parseCamera(blockID:number)\r\n\t{\r\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar projection:ProjectionBase;\r\n\r\n\t\tthis._newBlockBytes.readUnsignedByte(); //set as active camera\r\n\t\tthis._newBlockBytes.readShort(); //lengthof lenses - not used yet\r\n\r\n\t\tvar projectiontype:number = this._newBlockBytes.readShort();\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.cameraProperties);\r\n\r\n\t\tswitch (projectiontype) {\r\n\t\t\tcase 5001:\r\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5002:\r\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5003:\r\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar camera:Camera = new Camera(projection);\r\n\t\tcamera.transform.matrix3D = mtx;\r\n\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tif (parent) {\r\n\t\t\tparent.addChild(camera);\r\n\t\t\tparentName = parent.name;\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(camera);\r\n\t\t}\r\n\r\n\t\tcamera.name = name;\r\n\t\tprops = this.parseProperties(AWDParser.cameraPivotProperties);\r\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\tcamera.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(camera, name);\r\n\r\n\t\tthis._blocks[blockID].data = camera;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\r\n\t}\r\n\r\n\t//Block ID = 51\r\n\tprivate parseLightPicker(blockID:number)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar numLights:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\r\n\r\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\r\n\r\n\t\tfor (var k:number = 0; k < numLights; k++) {\r\n\t\t\tvar light:LightBase = <LightBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\t\tlightsArray.push(light);\r\n\t\t\tlightsArrayNames.push(light.name);\r\n\t\t}\r\n\r\n\t\tif (lightsArray.length == 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not create this LightPicker, cause no Light was found.\");\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\treturn; //return without any more parsing for this block\r\n\t\t}\r\n\r\n\t\tvar lightPick:LightPickerBase = new StaticLightPicker(lightsArray);\r\n\t\tlightPick.name = name;\r\n\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> lightPick, name);\r\n\r\n\t\tthis._blocks[blockID].data = lightPick;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + name + \"' | Texture-Name = \" + lightsArrayNames);\r\n\t}\r\n\r\n\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\r\n\tprivate static materialProperties:Object = {\r\n\t\t1:AWDParser.INT32,\r\n\t\t2:AWDParser.BADDR,\r\n\t\t10:AWDParser.PROPERTY_NUMBER,\r\n\t\t11:AWDParser.BOOL,\r\n\t\t12:AWDParser.PROPERTY_NUMBER,\r\n\t\t13:AWDParser.BOOL};\r\n\r\n\t//Block ID = 81\r\n\tprivate parseMaterial(blockID:number)\r\n\t{\r\n\t\t// TODO: not used\r\n\t\t////blockLength = block.len;\r\n\t\tvar name:string;\r\n\t\tvar type:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar finalize:boolean;\r\n\t\tvar num_methods:number;\r\n\t\tvar methods_parsed:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tname = this.parseVarStr();\r\n\t\ttype = this._newBlockBytes.readUnsignedByte();\r\n\t\tnum_methods = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\t// Read material numerical properties\r\n\t\tprops = this.parseProperties(AWDParser.materialProperties);\r\n\r\n\t\tmethods_parsed = 0;\r\n\t\twhile (methods_parsed < num_methods) {\r\n\t\t\tvar method_type:number;\r\n\r\n\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tthis.parseProperties(null);\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\tmethods_parsed += 1;\r\n\t\t}\r\n\r\n\t\tvar debugString:string = \"\";\r\n\t\tif (type === 1) { // Color material\r\n\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\tvar color:number = props.get(1, 0xffffff);\r\n\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t} else {\r\n\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t}\r\n\t\t} else if (type === 2) {\r\n\t\t\tvar texture:Single2DTexture = new Single2DTexture(<BitmapImage2D> this._blocks[props.get(2, 0)].data);\r\n\r\n\t\t\tmat = new MethodMaterial();\r\n\t\t\tmat.ambientMethod.texture = texture;\r\n\r\n\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\r\n\t\t\t} else {\r\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmat.extra = this.parseUserAttributes();\r\n\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\tmat.style.sampler = new Sampler2D(props.get(13, false));\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\r\n\r\n\t\tthis._blocks[blockID].data = mat;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(debugString);\r\n\t}\r\n\t\r\n\tprivate static material_v1Properties:Object = {1:AWDParser.UINT32,\r\n\t\t2:AWDParser.BADDR,\r\n\t\t3:AWDParser.BADDR,\r\n\t\t4:AWDParser.UINT8,\r\n\t\t5:AWDParser.BOOL,\r\n\t\t6:AWDParser.BOOL,\r\n\t\t7:AWDParser.BOOL,\r\n\t\t8:AWDParser.BOOL,\r\n\t\t9:AWDParser.UINT8,\r\n\t\t10:AWDParser.PROPERTY_NUMBER,\r\n\t\t11:AWDParser.BOOL,\r\n\t\t12:AWDParser.PROPERTY_NUMBER,\r\n\t\t13:AWDParser.BOOL,\r\n\t\t15:AWDParser.PROPERTY_NUMBER,\r\n\t\t16:AWDParser.UINT32,\r\n\t\t17:AWDParser.BADDR,\r\n\t\t18:AWDParser.PROPERTY_NUMBER,\r\n\t\t19:AWDParser.PROPERTY_NUMBER,\r\n\t\t20:AWDParser.UINT32,\r\n\t\t21:AWDParser.BADDR,\r\n\t\t22:AWDParser.BADDR};\r\n\r\n\tprivate static method_v1Properties:Object = {\r\n\t\t1:AWDParser.BADDR,\r\n\t\t2:AWDParser.BADDR,\r\n\t\t3:AWDParser.BADDR,\r\n\t\t101:AWDParser.PROPERTY_NUMBER,\r\n\t\t102:AWDParser.PROPERTY_NUMBER,\r\n\t\t103:AWDParser.PROPERTY_NUMBER,\r\n\t\t201:AWDParser.UINT32,\r\n\t\t202:AWDParser.UINT32,\r\n\t\t301:AWDParser.UINT16,\r\n\t\t302:AWDParser.UINT16,\r\n\t\t401:AWDParser.UINT8,\r\n\t\t402:AWDParser.UINT8,\r\n\t\t601:AWDParser.COLOR,\r\n\t\t602:AWDParser.COLOR,\r\n\t\t701:AWDParser.BOOL,\r\n\t\t702:AWDParser.BOOL,\r\n\t\t801:AWDParser.MTX4x4};\r\n\r\n\t// Block ID = 81 AWD2.1\r\n\tprivate parseMaterial_v1(blockID:number)\r\n\t{\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar diffuseImage:BitmapImage2D;\r\n\t\tvar normalImage:BitmapImage2D;\r\n\t\tvar specImage:BitmapImage2D;\r\n\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar num_methods:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.material_v1Properties);\r\n\t\tvar spezialType:number = props.get(4, 0);\r\n\t\tvar debugString:string = \"Parsed Material \";\r\n\r\n\t\tif (spezialType >= 2) {//this is no supported material\r\n\t\t\tthis._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (type <= 2) {// Color material\r\n\t\t\tif (this.materialMode == 1)\r\n\t\t\t\tspezialType = 0;\r\n\t\t\telse if (this.materialMode == 2)\r\n\t\t\t\tspezialType = 1;\r\n\r\n\t\t\tif (spezialType < 2) {//this is SinglePass or MultiPass\r\n\r\n\t\t\t\tif (type == 1) {// Color material\r\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\r\n\r\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\r\n\r\n\t\t\t\t\t} else { //\tSinglePassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (type == 2) {// texture material\r\n\t\t\t\t\tvar texture:Single2DTexture = new Single2DTexture(<BitmapImage2D> this._blocks[props.get(2, 0)].data);\r\n\r\n\t\t\t\t\tmat = new MethodMaterial();\r\n\t\t\t\t\tmat.ambientMethod.texture = texture;\r\n\r\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\r\n\t\t\t\t\t} else {//\tSinglePassMaterial\r\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiffuseImage = <BitmapImage2D> this._blocks[props.get(17, 0)].data;\r\n\t\t\t\tnormalImage = <BitmapImage2D> this._blocks[props.get(3, 0)].data;\r\n\t\t\t\tspecImage = <BitmapImage2D> this._blocks[props.get(21, 0)].data;\r\n\t\t\t\tmat.lightPicker = <LightPickerBase> this._blocks[props.get(22, 0)].data;\r\n\t\t\t\tmat.style.sampler = new Sampler2D(props.get(13, false), props.get(5, true), props.get(6, true));\r\n\t\t\t\tmat.bothSides = props.get(7, false);\r\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\r\n\t\t\t\tmat.blendMode = this.blendModeDic[props.get(9, 0)];\r\n\r\n\t\t\t\tif (diffuseImage) {\r\n\t\t\t\t\tmat.diffuseTexture = new Single2DTexture(diffuseImage);\r\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseImage.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (normalImage) {\r\n\t\t\t\t\tmat.normalMethod.texture = new Single2DTexture(normalImage);\r\n\t\t\t\t\tdebugString += \" | NormalTexture-Name = \" + normalImage.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (specImage) {\r\n\t\t\t\t\tmat.specularMethod.texture = new Single2DTexture(specImage);\r\n\t\t\t\t\tdebugString += \" | SpecularTexture-Name = \" + specImage.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\t\t\tmat.ambientMethod.strength = props.get(15, 1.0);\r\n\t\t\t\tmat.diffuseMethod.color = props.get(16, 0xffffff);\r\n\t\t\t\tmat.specularMethod.strength = props.get(18, 1.0);\r\n\t\t\t\tmat.specularMethod.gloss = props.get(19, 50);\r\n\t\t\t\tmat.specularMethod.color = props.get(20, 0xffffff);\r\n\r\n\t\t\t\tfor (var methods_parsed:number = 0; methods_parsed < num_methods; methods_parsed++) {\r\n\t\t\t\t\tvar method_type:number;\r\n\t\t\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t\t\t\tprops = this.parseProperties(AWDParser.method_v1Properties);\r\n\r\n\t\t\t\t\tswitch (method_type) {\r\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffektMethod returned\r\n\t\t\t\t\t\t\tvar effectMethod:EffectMethodBase = <EffectMethodBase> this._blocks[props.get(1, 0)].data;\r\n\t\t\t\t\t\t\tmat.addEffectMethod(effectMethod);\r\n\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + effectMethod.name;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\r\n\t\t\t\t\t\t\tvar shadowMapMethod:ShadowMapMethodBase = <ShadowMapMethodBase> this._blocks[props.get(1, 0)].data;\r\n\t\t\t\t\t\t\tmat.shadowMethod = shadowMapMethod;\r\n\t\t\t\t\t\t\tdebugString += \" | ShadowMethod-Name = \" + shadowMapMethod.name;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\r\n\t\t\t\t\t\t\tvar cubeTexture:SingleCubeTexture = new SingleCubeTexture(<BitmapImageCube> this._blocks[props.get(1, 0)].data);\r\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod();\r\n\t\t\t\t\t\t\tmat.ambientMethod.texture = cubeTexture;\r\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + cubeTexture.name;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\r\n\t\t\t\t\t\t\tvar texture:Single2DTexture = new Single2DTexture(<BitmapImage2D> this._blocks[props.get(1, 0)].data);\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(texture);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + texture.name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\r\n\t\t\t\t\t\t\tvar texture:Single2DTexture = new Single2DTexture(<BitmapImage2D> this._blocks[props.get(1, 0)].data);\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(texture, this.blendModeDic[props.get(401, 10)], false, mat.diffuseMethod);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + texture.name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\r\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\r\n\t\t\t\t\t\t\tvar texture:Single2DTexture = new Single2DTexture(<BitmapImage2D> this._blocks[props.get(1, 0)].data);\r\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(<Single2DTexture> mat.normalMethod.texture || texture, texture);\r\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + texture.name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.parseUserAttributes();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// todo: we should not need this anymore (if using texture-atlas)\r\n\t\telse if ((type>=3)&&(type<=7)){\r\n\t\t\t// if this is a basic material, we create it, finalize it, assign it to block-cache and return.\r\n\t\t\tvar color:number = props.get(1, 0xcccccc);\r\n\t\t\tdebugString+=color;\r\n\t\t\tvar diffuseTexture:Single2DTexture = new Single2DTexture(<BitmapImage2D> this._blocks[props.get(2, 0)].data);\r\n\t\t\tif(type==5){\r\n\t\t\t\tdiffuseTexture.mappingMode = MappingMode.LINEAR_GRADIENT;\r\n\t\t\t}\r\n\t\t\telse if(type==6){\r\n\t\t\t\tdiffuseTexture.mappingMode = MappingMode.RADIAL_GRADIENT;\r\n\t\t\t}\r\n\t\t\tvar basic_mat:BasicMaterial = new BasicMaterial();\r\n\t\t\tbasic_mat.texture = diffuseTexture;\r\n\t\t\tbasic_mat.bothSides = true;\r\n\t\t\t//basic_mat.preserveAlpha = true;\r\n\t\t\tbasic_mat.alphaBlending = true;\r\n\t\t\tbasic_mat.extra = this.parseUserAttributes();\r\n\t\t\tthis._pFinalizeAsset(<IAsset> basic_mat, name);\r\n\t\t\tthis._blocks[blockID].data = basic_mat;\r\n\t\t\tif (this._debug)\r\n\t\t\t\tconsole.log(debugString);\r\n\t\t\treturn;\r\n\t\t\r\n\t\t}\r\n\t\tmat.extra = this.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\r\n\r\n\t\tthis._blocks[blockID].data = mat;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(debugString);\r\n\t}\r\n\r\n\t//Block ID = 82\r\n\tprivate parseTexture(blockID:number)\r\n\t{\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\tthis._texture_users[this._cur_block_id] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tvar url:string = this._newBlockBytes.readUTFBytes(this._newBlockBytes.readUnsignedInt());\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\r\n\r\n\t\t} else {\r\n\t\t\tvar data_len:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar data:ByteArray = new ByteArray(data_len);\r\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t//\r\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\r\n\t\t\t//\r\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\r\n\t\t\t// This gives the browser time to initialise image width / height.\r\n\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\r\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Start parsing a \" + [\"external\", \"embed\"][type] + \" Bitmap for Texture\");\r\n\t}\r\n\r\n\t//Block ID = 83\r\n\tprivate parseCubeTexture(blockID:number)\r\n\t{\r\n\t\t//blockLength = block.len;\r\n\t\tvar data_len:number;\r\n\t\tvar i:number;\r\n\r\n\t\tthis._texture_users[ this._cur_block_id ] = [];\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\tthis._texture_users[this._cur_block_id] = [];\r\n\r\n\t\t\t// External\r\n\t\t\tif (type == 0) {\r\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar url:string;\r\n\t\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\r\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true, i);\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar data:ByteArray = new ByteArray(data_len);\r\n\t\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true, i);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Start parsing 6 \" + [\"external\", \"embed\"][type] + \" Bitmaps for CubeTexture\");\r\n\t}\r\n\r\n\t//Block ID = 91\r\n\tprivate parseSharedMethodBlock(blockID:number)\r\n\t{\r\n\t\tvar asset:EffectMethodBase;\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\t\tasset = this.parseSharedMethodList(blockID);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._blocks[blockID].data = asset;\r\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\r\n\t}\r\n\r\n\t//Block ID = 92\r\n\tprivate parseShadowMethodBlock(blockID:number)\r\n\t{\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\t\tvar light:LightBase = <LightBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\tvar asset:ShadowMethodBase = this.parseShadowMethodList(light, blockID);\r\n\r\n\t\tif (!asset)\r\n\t\t\treturn;\r\n\r\n\t\tthis.parseUserAttributes(); // Ignore for now\r\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", light.name);\r\n\t}\r\n\r\n\tprivate static commandProperties:Object = {\r\n\t\t1:AWDParser.BADDR};\r\n\r\n\tprivate static targetProperties:Object = {\r\n\t\t1:AWDParser.MATRIX_NUMBER,\r\n\t\t2:AWDParser.MATRIX_NUMBER,\r\n\t\t3:AWDParser.MATRIX_NUMBER,\r\n\t\t4:AWDParser.UINT8};\r\n\t\r\n\t//Block ID = 253\r\n\tprivate parseCommand(blockID:number)\r\n\t{\r\n\t\tvar hasBlocks:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tvar parentObject:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\tvar targetObject:DisplayObjectContainer;\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\r\n\t\tvar numCommands:number = this._newBlockBytes.readShort();\r\n\t\tvar typeCommand:number = this._newBlockBytes.readShort();\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.commandProperties);\r\n\r\n\t\tswitch (typeCommand) {\r\n\t\t\tcase 1:\r\n\t\t\t\ttargetObject = this._blocks[props.get(1, 0)].data;\r\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\r\n\r\n\t\t\t\tif (parentObject)\r\n\t\t\t\t\tparentObject.addChild(targetObject);\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (targetObject) {\r\n\t\t\tprops = this.parseProperties(AWDParser.targetProperties);\r\n\r\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t\ttargetObject.extra = this.parseUserAttributes();\r\n\t\t}\r\n\r\n\t\tthis._blocks[blockID].data = targetObject;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\r\n\t}\r\n\t\r\n\tprivate static metaDataProperties:Object = {\r\n\t\t1:AWDParser.UINT32,\r\n\t\t2:AWDParser.AWDSTRING,\r\n\t\t3:AWDParser.AWDSTRING,\r\n\t\t4:AWDParser.AWDSTRING,\r\n\t\t5:AWDParser.AWDSTRING};\r\n\r\n\t//blockID 255\r\n\tprivate parseMetaData(blockID:number)\r\n\t{\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.metaDataProperties);\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\r\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\r\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\r\n\t\t}\r\n\t}\r\n\r\n\t//blockID 254\r\n\tprivate parseNameSpace(blockID:number)\r\n\t{\r\n\t\tvar id:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar nameSpaceString:string = this.parseVarStr();\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\r\n\t}\r\n\r\n\t//--Parser UTILS---------------------------------------------------------------------------\r\n\r\n\tprivate shadowMethodListProperties:Object = {\r\n\t\t1:AWDParser.BADDR,\r\n\t\t2:AWDParser.BADDR,\r\n\t\t3:AWDParser.BADDR,\r\n\t\t101:AWDParser.PROPERTY_NUMBER,\r\n\t\t102:AWDParser.PROPERTY_NUMBER,\r\n\t\t103:AWDParser.PROPERTY_NUMBER,\r\n\t\t201:AWDParser.UINT32,\r\n\t\t202:AWDParser.UINT32,\r\n\t\t301:AWDParser.UINT16,\r\n\t\t302:AWDParser.UINT16,\r\n\t\t401:AWDParser.UINT8,\r\n\t\t402:AWDParser.UINT8,\r\n\t\t601:AWDParser.COLOR,\r\n\t\t602:AWDParser.COLOR,\r\n\t\t701:AWDParser.BOOL,\r\n\t\t702:AWDParser.BOOL,\r\n\t\t801:AWDParser.MTX4x4}\r\n\t\r\n\t// this functions reads and creates a ShadowMethodMethod\r\n\tprivate parseShadowMethodList(light:LightBase, blockID:number):ShadowMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar shadowMethod:ShadowMethodBase;\r\n\t\tvar props:AWDProperties = this.parseProperties(this.shadowMethodListProperties);\r\n\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>\r\n\t\tswitch (methodType) {\r\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this CascadeShadowMapMethod - ShadowMethod not created\");\r\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\r\n\t\t\t//\t\t\t\t\t}\r\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 1002: //ShadowNearMethod\r\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> this._blocks[props.get(1, 0)].data);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1101: //ShadowFilteredMethod\r\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 1102: //ShadowDitheredMethod\r\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1103: //ShadowSoftMethod\r\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1104: //ShadowHardMethod\r\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\treturn shadowMethod;\r\n\t}\r\n\r\n\t//Block ID 101\r\n\tprivate parseSkeleton(blockID:number /*uint*/)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar skeleton:Skeleton = new Skeleton();\r\n\t\tthis.parseProperties(null); // Discard properties for now\r\n\r\n\t\tfor (var joints_parsed:number = 0; joints_parsed < num_joints; joints_parsed++) {\r\n\t\t\tvar joint:SkeletonJoint;\r\n\t\t\tvar ibp:Matrix3D;\r\n\t\t\t// Ignore joint id\r\n\t\t\tthis._newBlockBytes.readUnsignedShort();\r\n\t\t\tjoint = new SkeletonJoint();\r\n\t\t\tjoint.parentIndex = this._newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\r\n\t\t\tjoint.name = this.parseVarStr();\r\n\r\n\t\t\tibp = this.parseMatrix3D();\r\n\t\t\tjoint.inverseBindPose = ibp.rawData;\r\n\t\t\t// Ignore joint props/attributes for now\r\n\t\t\tthis.parseProperties(null);\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\tskeleton.joints.push(joint);\r\n\t\t}\r\n\r\n\t\t// Discard attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(skeleton, name);\r\n\r\n\t\tthis._blocks[blockID].data = skeleton;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + skeleton.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\t//Block ID = 102\r\n\tprivate parseSkeletonPose(blockID:number /*uint*/)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tthis.parseProperties(null); // Ignore properties for now\r\n\r\n\t\tvar pose:SkeletonPose = new SkeletonPose();\r\n\r\n\t\tfor (var joints_parsed:number = 0; joints_parsed < num_joints; joints_parsed++) {\r\n\t\t\tvar joint_pose:JointPose;\r\n\t\t\tvar has_transform:number /*uint*/;\r\n\t\t\tjoint_pose = new JointPose();\r\n\t\t\thas_transform = this._newBlockBytes.readUnsignedByte();\r\n\t\t\tif (has_transform == 1) {\r\n\t\t\t\tvar mtx_data:Float32Array = this.parseMatrix43RawData();\r\n\r\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\r\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\r\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\r\n\r\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Skip attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(pose, name);\r\n\r\n\t\tthis._blocks[blockID].data = pose;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + pose.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\t//blockID 103\r\n\tprivate parseSkeletonAnimation(blockID:number /*uint*/)\r\n\t{\r\n\t\tvar frame_dur:number;\r\n\t\tvar pose_id:number;\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\r\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tthis.parseProperties(null); // Ignore properties for now\r\n\r\n\t\tfor (var frames_parsed:number = 0; frames_parsed < num_frames; frames_parsed++) {\r\n\t\t\tpose_id = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tclip.addFrame(<SkeletonPose> this._blocks[pose_id].data, frame_dur);\r\n\t\t}\r\n\t\tif (clip.frames.length == 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not this SkeletonClipNode, because no Frames where set.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Ignore attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(clip, name);\r\n\t\tthis._blocks[blockID].data = clip;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + clip.name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\t\r\n\tprivate spritePoseAnimationProperties:Object = {\r\n\t\t1:AWDParser.BOOL,\r\n\t\t2:AWDParser.BOOL};\r\n\r\n\t//Block ID = 111 /  Block ID = 112\r\n\tprivate parseSpritePoseAnimation(blockID:number /*uint*/, poseOnly:boolean = false)\r\n\t{\r\n\t\tvar subSpriteParsed:number /*uint*/;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar str_len:number;\r\n\t\tvar str_end:number;\r\n\t\tvar elements:TriangleElements;\r\n\t\tvar idx:number /*int*/ = 0;\r\n\t\tvar clip:VertexClipNode = new VertexClipNode();\r\n\t\tvar indices:Short3Attributes;\r\n\t\tvar verts:Array<number>;\r\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar geo_id:number /*int*/ = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar graphics:Graphics = <Graphics> this._blocks[geo_id].data;\r\n\r\n\t\tvar uvs:Array<Float32Array> = this.getUVForVertexAnimation(geo_id);\r\n\r\n\t\tvar num_frames:number = (!poseOnly)? this._newBlockBytes.readUnsignedShort() : 1;\r\n\r\n\t\tvar num_subsprites:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar num_Streams:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tfor (var streamsParsed:number = 0; streamsParsed < num_Streams; streamsParsed++)\r\n\t\t\tstreamtypes.push(this._newBlockBytes.readUnsignedShort());\r\n\r\n\t\tprops = this.parseProperties(this.spritePoseAnimationProperties);\r\n\r\n\t\tclip.looping = props.get(1, true);\r\n\t\tclip.stitchFinalFrame = props.get(2, false);\r\n\r\n\t\tvar frame_dur:number;\r\n\t\tfor (var frames_parsed:number = 0; frames_parsed < num_frames; frames_parsed++) {\r\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tgraphics = new Graphics();\r\n\t\t\tsubSpriteParsed = 0;\r\n\t\t\twhile (subSpriteParsed < num_subsprites) {\r\n\t\t\t\tstreamsParsed = 0;\r\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\r\n\t\t\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\r\n\t\t\t\t\t\tindices = graphics.getGraphicAt(subSpriteParsed).elements.indices;\r\n\t\t\t\t\t\tverts = new Array<number>();\r\n\t\t\t\t\t\tidx = 0;\r\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telements = new TriangleElements(new AttributesBuffer());\r\n\t\t\t\t\t\telements.setIndices(indices);\r\n\t\t\t\t\t\telements.setPositions(verts);\r\n\t\t\t\t\t\telements.setUVs(uvs[subSpriteParsed]);\r\n\t\t\t\t\t\telements.setNormals(null);\r\n\t\t\t\t\t\telements.setTangents(null);\r\n\t\t\t\t\t\telements.autoDeriveNormals = false;\r\n\t\t\t\t\t\telements.autoDeriveTangents = false;\r\n\t\t\t\t\t\tsubSpriteParsed++;\r\n\t\t\t\t\t\tgraphics.addGraphic(elements);\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t\tstreamsParsed++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tclip.addFrame(graphics, frame_dur);\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(clip, name);\r\n\r\n\t\tthis._blocks[blockID].data = clip;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Graphics-Name = \" + graphics.name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\tprivate static vertexAnimationSetProperties:Object = {\r\n\t\t1:AWDParser.UINT16};\r\n\t\r\n\t//BlockID 113\r\n\tprivate parseVertexAnimationSet(blockID:number /*uint*/)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.vertexAnimationSetProperties);\r\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\r\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\r\n\t\tvar clipNode:AnimationClipNodeBase;\r\n\t\tfor (var frames_parsed:number = 0; frames_parsed < num_frames; frames_parsed++) {\r\n\t\t\tclipNode = <AnimationClipNodeBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\t\tif (clipNode instanceof VertexClipNode)\r\n\t\t\t\tvertexFrames.push(<VertexClipNode> clipNode);\r\n\t\t\telse if (clipNode instanceof SkeletonClipNode)\r\n\t\t\t\tskeletonFrames.push(<SkeletonClipNode> clipNode);\r\n\t\t}\r\n\r\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not create this AnimationSet, because it contains no animations\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.parseUserAttributes();\r\n\r\n\t\tif (vertexFrames.length > 0) {\r\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\r\n\r\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\r\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\r\n\r\n\t\t\tthis._pFinalizeAsset(newVertexAnimationSet, name);\r\n\r\n\t\t\tthis._blocks[blockID].data = newVertexAnimationSet;\r\n\r\n\t\t\tif (this._debug)\r\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames);\r\n\r\n\t\t} else if (skeletonFrames.length > 0) {\r\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\r\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\r\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\r\n\t\t\tthis._pFinalizeAsset(newSkeletonAnimationSet, name);\r\n\r\n\t\t\tthis._blocks[blockID].data = newSkeletonAnimationSet;\r\n\r\n\t\t\tif (this._debug)\r\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static animatorSetProperties:Object = {1:AWDParser.BADDR};\r\n\t\r\n\t//BlockID 122\r\n\tprivate parseAnimatorSet(blockID:number /*uint*/)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.animatorSetProperties);\r\n\t\tvar targetAnimationSet:AnimationSetBase = <AnimationSetBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\r\n\t\tvar targetSpritees:Array<Sprite> = new Array<Sprite>();\r\n\t\tvar targetSpriteLength:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tfor (var i:number /*int*/ = 0; i < targetSpriteLength; i++)\r\n\t\t\ttargetSpritees.push(<Sprite> this._blocks[this._newBlockBytes.readUnsignedInt()].data);\r\n\r\n\t\tvar activeState:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar autoplay:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis.parseUserAttributes();\r\n\r\n\t\tvar thisAnimator:AnimatorBase;\r\n\t\tif (type == 1)\r\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, <Skeleton> this._blocks[props.get(1, 0)].data);\r\n\t\telse if (type == 2)\r\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\r\n\r\n\t\tthis._pFinalizeAsset(thisAnimator, name);\r\n\t\tthis._blocks[blockID].data = thisAnimator;\r\n\r\n\t\tfor (i = 0; i < targetSpritees.length; i++) {\r\n\t\t\tif (type == 1)\r\n\t\t\t\ttargetSpritees[i].animator = (<SkeletonAnimator> thisAnimator);\r\n\t\t\telse if (type == 2)\r\n\t\t\t\ttargetSpritees[i].animator = (<VertexAnimator> thisAnimator);\r\n\t\t}\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + name);\r\n\t}\r\n\r\n\tprivate sharedMethodListProperties:Object = {\r\n\t\t1:AWDParser.BADDR,\r\n\t\t2:AWDParser.BADDR,\r\n\t\t3:AWDParser.BADDR,\r\n\t\t101:AWDParser.PROPERTY_NUMBER,\r\n\t\t102:AWDParser.PROPERTY_NUMBER,\r\n\t\t103:AWDParser.PROPERTY_NUMBER,\r\n\t\t104:AWDParser.PROPERTY_NUMBER,\r\n\t\t105:AWDParser.PROPERTY_NUMBER,\r\n\t\t106:AWDParser.PROPERTY_NUMBER,\r\n\t\t107:AWDParser.PROPERTY_NUMBER,\r\n\t\t201:AWDParser.UINT32,\r\n\t\t202:AWDParser.UINT32,\r\n\t\t301:AWDParser.UINT16,\r\n\t\t302:AWDParser.UINT16,\r\n\t\t401:AWDParser.UINT8,\r\n\t\t402:AWDParser.UINT8,\r\n\t\t601:AWDParser.COLOR,\r\n\t\t602:AWDParser.COLOR,\r\n\t\t701:AWDParser.BOOL,\r\n\t\t702:AWDParser.BOOL};\r\n\r\n\t// this functions reads and creates a EffectMethod\r\n\tprivate parseSharedMethodList(blockID:number):EffectMethodBase\r\n\t{\r\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar effectMethodReturn:EffectMethodBase;\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties(this.sharedMethodListProperties);\r\n\r\n\t\tswitch (methodType) {\r\n\t\t\t// Effect Methods\r\n\t\t\tcase 401: //ColorMatrix\r\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 402: //ColorTransform\r\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\r\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\r\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 403: //EnvMap\r\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(new SingleCubeTexture(<BitmapImageCube> this._blocks[props.get(1, 0)].data), <number> props.get(101, 1));\r\n\t\t\t\tvar targetID:number = props.get(2, 0);\r\n\t\t\t\tif (targetID > 0) {\r\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\r\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <TextureBase> this._blocks[targetID].data;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 404: //LightMapMethod\r\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(this._blocks[props.get(1, 0)].data, this.blendModeDic[props.get(401, 10)]); //usesecondaryUV not set\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureProjector.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this ProjectiveTextureMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 406: //RimLightMethod\r\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\r\n\t\t\t\tbreak;\r\n\t\t\tcase 407: //AlphaMaskMethod\r\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(this._blocks[props.get(1, 0)].data, props.get(701, false));\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this RefractionEnvMapMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\r\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 410: //FresnelEnvMapMethod\r\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(this._blocks[props.get(1, 0)].data, props.get(101, 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 411: //FogMethod\r\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\treturn effectMethodReturn;\r\n\r\n\t}\r\n\r\n\tprivate parseUserAttributes():Object\r\n\t{\r\n\t\tvar list_len:number = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\tif (list_len > 0) {\r\n\t\t\tvar list_end:number = this._newBlockBytes.position + list_len;\r\n\t\t\tvar attributes:Object = {};\r\n\r\n\t\t\tfor (var attibuteCnt:number = 0; this._newBlockBytes.position < list_end; attibuteCnt++) {\r\n\t\t\t\tvar ns_id:number;\r\n\t\t\t\tvar attr_key:string;\r\n\t\t\t\tvar attr_type:number;\r\n\t\t\t\tvar attr_len:number;\r\n\t\t\t\tvar attr_val:any;\r\n\r\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\r\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_key = this.parseVarStr();\r\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn attributes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (attr_type) {\r\n\t\t\t\t\tcase AWDParser.AWDSTRING:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.BOOL:\r\n\t\t\t\t\tcase AWDParser.UINT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.UINT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.UINT32:\r\n\t\t\t\t\tcase AWDParser.BADDR:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.FLOAT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.FLOAT64:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\r\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattributes[attr_key] = attr_val;\r\n\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\t}\r\n\r\n\tprivate parseProperties(expected:Object):AWDProperties\r\n\t{\r\n\t\tvar list_len:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar props:AWDProperties = new AWDProperties();\r\n\t\tvar list_end:number = this._newBlockBytes.position + list_len;\r\n\r\n\t\tif (expected) {\r\n\t\t\tvar len:number;\r\n\t\t\tvar key:number;\r\n\t\t\tvar type:number;\r\n\r\n\t\t\tfor (var propertyCnt:number = 0; this._newBlockBytes.position < list_end; propertyCnt++) {\r\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn props;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (expected[key]) {\r\n\t\t\t\t\ttype = expected[key];\r\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newBlockBytes.position += len;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t}\r\n\r\n\t\treturn props;\r\n\t}\r\n\r\n\tprivate parseAttrValue(type:number, len:number):any\r\n\t{\r\n\t\tvar elem_len:number;\r\n\t\tvar read_func:Function;\r\n\t\tvar accuracy:boolean;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase AWDParser.BOOL:\r\n\t\t\tcase AWDParser.INT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.INT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.INT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT32:\r\n\t\t\tcase AWDParser.COLOR:\r\n\t\t\tcase AWDParser.BADDR:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.FLOAT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.FLOAT64:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.AWDSTRING:\r\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\r\n\t\t\tcase AWDParser.VECTOR2x1:\r\n\t\t\tcase AWDParser.VECTOR3x1:\r\n\t\t\tcase AWDParser.VECTOR4x1:\r\n\t\t\tcase AWDParser.MTX3x2:\r\n\t\t\tcase AWDParser.MTX3x3:\r\n\t\t\tcase AWDParser.MTX4x3:\r\n\t\t\tcase AWDParser.MTX4x4:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\t\t\tcase AWDParser.GEO_NUMBER:\r\n\t\t\t\taccuracy = this._accuracyGeo;\r\n\t\t\tcase AWDParser.MATRIX_NUMBER:\r\n\t\t\t\taccuracy = this._accuracyMatrix;\r\n\t\t\tcase AWDParser.PROPERTY_NUMBER:\r\n\t\t\t\taccuracy = this._accuracyProps;\r\n\t\t\tdefault:\r\n\t\t\t\tif (accuracy) {\r\n\t\t\t\t\telem_len = 8;\r\n\t\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\t} else {\r\n\t\t\t\t\telem_len = 4;\r\n\t\t\t\t\tread_func = this._newBlockBytes.readFloat;\r\n\t\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (elem_len < len) {\r\n\t\t\tvar list:Array<any> = [];\r\n\t\t\tvar num_elems:number = len/elem_len;\r\n\r\n\t\t\tfor (var num_read:number = 0; num_read < num_elems; num_read++)\r\n\t\t\t\tlist[num_read] = read_func.call(this._newBlockBytes);\r\n\r\n\t\t\treturn list;\r\n\t\t} else {\r\n\t\t\treturn read_func.call(this._newBlockBytes);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseHeader()\r\n\t{\r\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\r\n\r\n\t\tthis._version[0] = this._byteData.readUnsignedByte();\r\n\t\tthis._version[1] = this._byteData.readUnsignedByte();\r\n\r\n\t\tvar flags:number = this._byteData.readUnsignedShort(); // Parse bit flags\r\n\r\n\t\tthis._streaming = BitFlags.test(flags, BitFlags.FLAG1);\r\n\r\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG2);\r\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG3);\r\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG4);\r\n\t\t}\r\n\r\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._version[0] + \" - \" + this._version[1]);\r\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Graphics-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\r\n\t\t}\r\n\r\n\t\t// Check file integrity\r\n\t\tvar body_len:number = this._byteData.readUnsignedInt();\r\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable())\r\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\r\n\r\n\t}\r\n\t// Helper - functions\r\n\tprivate getUVForVertexAnimation(spriteID:number /*uint*/):Array<Float32Array>\r\n\t{\r\n\t\tif (this._blocks[spriteID].data instanceof Sprite)\r\n\t\t\tspriteID = this._blocks[spriteID].geoID;\r\n\r\n\t\tif (this._blocks[spriteID].uvsForVertexAnimation)\r\n\t\t\treturn this._blocks[spriteID].uvsForVertexAnimation;\r\n\r\n\t\tvar graphics:Graphics = (<Graphics> this._blocks[spriteID].data);\r\n\t\tvar elements:TriangleElements;\r\n\t\tvar uvsForVertexAnimation:Array<ArrayBufferView> = this._blocks[spriteID].uvsForVertexAnimation = new Array<Float32Array>();\r\n\r\n\t\tvar len:number = graphics.count;\r\n\t\tfor (var geoCnt:number= 0; geoCnt < len; geoCnt++) {\r\n\t\t\telements = <TriangleElements> graphics.getGraphicAt(geoCnt).elements;\r\n\t\t\tuvsForVertexAnimation[geoCnt] = elements.uvs.get(elements.numVertices);\r\n\t\t}\r\n\r\n\t\treturn this._blocks[spriteID].uvsForVertexAnimation;\r\n\t}\r\n\r\n\tprivate parseVarStr():string\r\n\t{\r\n\t\treturn this._newBlockBytes.readUTFBytes(this._newBlockBytes.readUnsignedShort());\r\n\t}\r\n\r\n\tprivate readNumber(precision:boolean = false):number\r\n\t{\r\n\t\tif (precision)\r\n\t\t\treturn this._newBlockBytes.readDouble();\r\n\r\n\t\treturn this._newBlockBytes.readFloat();\r\n\t}\r\n\r\n\tprivate parseMatrix3D():Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\r\n\t}\r\n\r\n\tprivate parseMatrix32RawData():Array<number>\r\n\t{\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n\tprivate parseMatrix43RawData():Float32Array\r\n\t{\r\n\t\tvar mtx_raw:Float32Array = new Float32Array(16);\r\n\r\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[3] = 0.0;\r\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[7] = 0.0;\r\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[11] = 0.0;\r\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[15] = 1.0;\r\n\r\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\r\n\r\n\t\tif (isNaN(mtx_raw[0])) {\r\n\t\t\tmtx_raw[0] = 1;\r\n\t\t\tmtx_raw[1] = 0;\r\n\t\t\tmtx_raw[2] = 0;\r\n\t\t\tmtx_raw[4] = 0;\r\n\t\t\tmtx_raw[5] = 1;\r\n\t\t\tmtx_raw[6] = 0;\r\n\t\t\tmtx_raw[8] = 0;\r\n\t\t\tmtx_raw[9] = 0;\r\n\t\t\tmtx_raw[10] = 1;\r\n\t\t\tmtx_raw[12] = 0;\r\n\t\t\tmtx_raw[13] = 0;\r\n\t\t\tmtx_raw[14] = 0;\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n}\r\n\r\nexport default AWDParser;\r\n\r\nclass ElementType {\r\n\tpublic static STANDART_STREAMS:number = 0;\r\n\tpublic static CONCENATED_STREAMS:number = 1;\r\n\tpublic static SHARED_BUFFER:number = 2;\r\n}\r\n\r\nclass AWDProperties\r\n{\r\n\tpublic set(key:number, value:any)\r\n\t{\r\n\t\tthis[key] = value;\r\n\t}\r\n\r\n\tpublic get(key:number, fallback:any):any\r\n\t{\r\n\t\treturn (this[key] || fallback);\r\n\t}\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass BitFlags\r\n{\r\n\tpublic static FLAG1:number = 1;\r\n\tpublic static FLAG2:number = 2;\r\n\tpublic static FLAG3:number = 4;\r\n\tpublic static FLAG4:number = 8;\r\n\tpublic static FLAG5:number = 16;\r\n\tpublic static FLAG6:number = 32;\r\n\tpublic static FLAG7:number = 64;\r\n\tpublic static FLAG8:number = 128;\r\n\tpublic static FLAG9:number = 256;\r\n\tpublic static FLAG10:number = 512;\r\n\tpublic static FLAG11:number = 1024;\r\n\tpublic static FLAG12:number = 2048;\r\n\tpublic static FLAG13:number = 4096;\r\n\tpublic static FLAG14:number = 8192;\r\n\tpublic static FLAG15:number = 16384;\r\n\tpublic static FLAG16:number = 32768;\r\n\r\n\tpublic static test(flags:number, testFlag:number):boolean\r\n\t{\r\n\t\treturn (flags & testFlag) == testFlag;\r\n\t}\r\n}\r\n",
    "import Sampler2D\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\r\nimport BitmapImage2D\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\r\nimport Rectangle\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\r\nimport IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\r\nimport URLLoaderDataFormat\t\tfrom \"awayjs-core/lib/net/URLLoaderDataFormat\";\r\nimport URLRequest\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\r\nimport ParserBase\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\r\nimport ParserUtils\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserUtils\";\r\nimport ResourceDependency\t\tfrom \"awayjs-core/lib/parsers/ResourceDependency\";\r\nimport XmlUtils\t\t\t\t\tfrom \"awayjs-core/lib/utils/XmlUtils\";\r\n\r\n/**\r\n * TextureAtlasParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\r\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\r\n * exception cases.\r\n */\r\nclass FNTParser extends ParserBase\r\n{\r\n\tprivate _doc:Node;\r\n\tprivate _imagePath:string;\r\n\tprivate _imageData:BitmapImage2D;\r\n\tprivate _chars:NodeList;\r\n\tprivate _parseState:number = 0;\r\n\r\n\t/**\r\n\t * Creates a new TextureAtlasParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"fnt\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\ttry {\r\n\t\t\tvar content:string = ParserUtils.toString(data);\r\n\t\t\tif(content.indexOf(\"font\") != -1 || content.indexOf(\"Font\") != -1)\r\n\t\t\t\treturn true;\r\n\r\n\t\t\treturn false;\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif(resourceDependency.assets.length) {\r\n\t\t\tthis._imageData = <BitmapImage2D> resourceDependency.assets[0];\r\n\t\t\tthis._pFinalizeAsset(this._imageData);\r\n\t\t\tthis._parseState = FNTParserState.PARSE_CHARS;\r\n\t\t} else {\r\n\t\t\tthis._parseState = FNTParserState.PARSE_COMPLETE;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tthis._parseState = FNTParserState.PARSE_COMPLETE;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar nodes:NodeList;\r\n\r\n\t\tswitch(this._parseState) {\r\n\t\t\tcase FNTParserState.PARSE_XML:\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._doc = XmlUtils.getChildrenWithTag(XmlUtils.strToXml(this._pGetTextData()), \"font\")[0];\r\n\r\n\t\t\t\t\tthis._imagePath = XmlUtils.readAttributeValue(this._doc, \"imagePath\");\r\n\r\n\t\t\t\t\tthis._chars = XmlUtils.getChildrenWithTag(this._doc, \"chars\");\r\n\r\n\t\t\t\t\tthis._parseState = FNTParserState.PARSE_IMAGE;\r\n\r\n\t\t\t\t} catch(Error) {\r\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase FNTParserState.PARSE_IMAGE:\r\n\t\t\t\tif (this._imagePath){\r\n\t\t\t\t\tthis._pAddDependency(this._imagePath, new URLRequest(this._imagePath));\r\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase FNTParserState.PARSE_CHARS:\r\n\t\t\t\tvar sampler:Sampler2D;\r\n\t\t\t\tvar element:Node;\r\n\t\t\t\tvar x:string;\r\n\t\t\t\tvar y:string;\r\n\t\t\t\tvar width:string;\r\n\t\t\t\tvar height:string;\r\n\t\t\t\tvar len:number = this._chars.length;\r\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\t\t\telement = this._chars[i];\r\n\t\t\t\t\tsampler = new Sampler2D();\r\n\r\n\t\t\t\t\t//setup subtexture rect\r\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"x\");\r\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"y\");\r\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"width\");\r\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"height\");\r\n\t\t\t\t\tif (x || y || width || height)\r\n\t\t\t\t\t\tsampler.imageRect = new Rectangle(parseInt(x)/this._imageData.width, parseInt(y)/this._imageData.height, parseInt(width)/this._imageData.width, parseInt(height)/this._imageData.height);\r\n\r\n\t\t\t\t\t//setup frame rect\r\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"frameX\");\r\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"frameY\");\r\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"frameWidth\");\r\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"frameHeight\");\r\n\t\t\t\t\tif (x || y || width || height)\r\n\t\t\t\t\t\tsampler.frameRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(sampler, XmlUtils.readAttributeValue(element, \"name\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._parseState = FNTParserState.PARSE_COMPLETE;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase FNTParserState.PARSE_COMPLETE:\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n}\r\n\r\nexport default FNTParser;\r\n\r\nclass FNTParserState {\r\n\tpublic static PARSE_XML:number = 0;\r\n\tpublic static PARSE_IMAGE:number = 1;\r\n\tpublic static PARSE_CHARS:number = 2;\r\n\tpublic static PARSE_COMPLETE:number = 3;\r\n}",
    "import AttributesBuffer\t\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\r\nimport BitmapImage2D\t\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\r\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport URLLoaderDataFormat\t\t\t\tfrom \"awayjs-core/lib/net/URLLoaderDataFormat\";\r\nimport URLRequest\t\t\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\r\nimport ParserBase\t\t\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\r\nimport ParserUtils\t\t\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserUtils\";\r\nimport ResourceDependency\t\t\t\tfrom \"awayjs-core/lib/parsers/ResourceDependency\";\r\nimport ByteArray\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\r\n\r\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\r\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\r\nimport DisplayObjectContainer\t\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\r\nimport DisplayObject\t\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\r\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\r\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\r\nimport DefaultMaterialManager\t\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\r\nimport Single2DTexture\t\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\r\n\r\nimport VertexClipNode\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/VertexClipNode\";\r\nimport VertexAnimationSet\t\t\t\tfrom \"awayjs-renderergl/lib/animators/VertexAnimationSet\";\r\n\r\nimport MethodMaterial\t\t\t\t\tfrom \"awayjs-methodmaterials/lib/MethodMaterial\";\r\nimport MethodMaterialMode\t\t\t\tfrom \"awayjs-methodmaterials/lib/MethodMaterialMode\";\r\n\r\n/**\r\n * MD2Parser provides a parser for the MD2 data type.\r\n */\r\nclass MD2Parser extends ParserBase\r\n{\r\n\tpublic static FPS:number /*int*/ = 6;\r\n\r\n\tprivate _clipNodes:Object = new Object();\r\n\tprivate _byteData:ByteArray;\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _parsedHeader:boolean;\r\n\tprivate _parsedUV:boolean;\r\n\tprivate _parsedFaces:boolean;\r\n\tprivate _parsedFrames:boolean;\r\n\r\n\tprivate _ident:number /*uint*/;\r\n\tprivate _version:number /*uint*/;\r\n\tprivate _skinWidth:number /*uint*/;\r\n\tprivate _skinHeight:number /*uint*/;\r\n\t//private _frameSize : number /*uint*/;\r\n\tprivate _numSkins:number /*uint*/;\r\n\tprivate _numVertices:number /*uint*/;\r\n\tprivate _numST:number /*uint*/;\r\n\tprivate _numTris:number /*uint*/;\r\n\t//private _numGlCmds : number /*uint*/;\r\n\tprivate _numFrames:number /*uint*/;\r\n\tprivate _offsetSkins:number /*uint*/;\r\n\tprivate _offsetST:number /*uint*/;\r\n\tprivate _offsetTris:number /*uint*/;\r\n\tprivate _offsetFrames:number /*uint*/;\r\n\t//private _offsetGlCmds : number /*uint*/;\r\n\tprivate _offsetEnd:number /*uint*/;\r\n\r\n\tprivate _uvIndices:Array<number>;\r\n\tprivate _indices:Array<number> /*uint*/;\r\n\tprivate _vertIndices:Array<number>;\r\n\r\n\t// the current elements being built\r\n\tprivate _animationSet:VertexAnimationSet = new VertexAnimationSet();\r\n\tprivate _firstElements:TriangleElements;\r\n\tprivate _uvs:Array<number>;\r\n\tprivate _finalUV:Array<number>;\r\n\r\n\tprivate _materialNames:Array<string>;\r\n\tprivate _textureType:string;\r\n\tprivate _ignoreTexturePath:boolean;\r\n\tprivate _sprite:Sprite;\r\n\tprivate _graphics:Graphics;\r\n\r\n\tprivate materialFinal:boolean = false;\r\n\tprivate graphicsCreated:boolean = false;\r\n\r\n\t/**\r\n\t * Creates a new MD2Parser object.\r\n\t * @param textureType The extension of the texture (e.g. jpg/png/...)\r\n\t * @param ignoreTexturePath If true, the path of the texture is ignored\r\n\t */\r\n\tconstructor(textureType:string = \"jpg\", ignoreTexturePath:boolean = true)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\t\tthis._textureType = textureType;\r\n\t\tthis._ignoreTexturePath = ignoreTexturePath;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md2\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn (ParserUtils.toString(data, 4) == 'IDP2');\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.assets.length != 1)\r\n\t\t\treturn;\r\n\r\n\t\tvar material:MethodMaterial = new MethodMaterial(<BitmapImage2D> resourceDependency.assets[0]);\r\n\r\n\t\tif (this.materialMode >= 2)\r\n\t\t\tmaterial.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t//add to the content property\r\n\t\t(<DisplayObjectContainer> this._pContent).addChild(this._sprite);\r\n\r\n\t\tmaterial.name = this._sprite.material.name;\r\n\t\tthis._sprite.material = material;\r\n\t\tthis._pFinalizeAsset(material);\r\n\t\tthis._pFinalizeAsset(this._sprite.graphics);\r\n\t\tthis._pFinalizeAsset(this._sprite);\r\n\r\n\t\tthis.materialFinal = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t// apply system default\r\n\t\tif (this.materialMode < 2) {\r\n\t\t\tthis._sprite.material = DefaultMaterialManager.getDefaultMaterial();\r\n\t\t} else {\r\n\t\t\tthis._sprite.material = new MethodMaterial(DefaultMaterialManager.getDefaultImage2D());\r\n\t\t\t(<MethodMaterial> this._sprite.material).mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t}\r\n\r\n\t\t//add to the content property\r\n\t\t(<DisplayObjectContainer> this._pContent).addChild(this._sprite);\r\n\r\n\t\tthis._pFinalizeAsset(this._sprite.graphics);\r\n\t\tthis._pFinalizeAsset(this._sprite);\r\n\t\tthis.materialFinal = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._byteData = this._pGetByteData();\r\n\t\t\tthis._startedParsing = true;\r\n\r\n\t\t\t// Reset bytearray read position (which may have been\r\n\t\t\t// moved forward by the supportsData() function.)\r\n\t\t\tthis._byteData.position = 0;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\tif (!this._parsedHeader) {\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n\r\n\t\t\t\t// TODO: Create a sprite only when encountered (if it makes sense\r\n\t\t\t\t// for this file format) and return it using this._pFinalizeAsset()\r\n\t\t\t\tthis._sprite = new Sprite();\r\n\t\t\t\tthis._graphics = this._sprite.graphics;\r\n\t\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\t\tthis._sprite.material = DefaultMaterialManager.getDefaultMaterial();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._sprite.material = new MethodMaterial(DefaultMaterialManager.getDefaultImage2D());\r\n\t\t\t\t\t(<MethodMaterial> this._sprite.material).mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//_graphics.animation = new VertexAnimation(2, VertexAnimationMode.ABSOLUTE);\r\n\t\t\t\t//_animator = new VertexAnimator(VertexAnimationState(_sprite.animationState));\r\n\r\n\t\t\t\t// Parse header and decompress body\r\n\t\t\t\tthis.parseHeader();\r\n\t\t\t\tthis.parseMaterialNames();\r\n\t\t\t} else if (!this._parsedUV) {\r\n\t\t\t\tthis.parseUV();\r\n\t\t\t} else if (!this._parsedFaces) {\r\n\t\t\t\tthis.parseFaces();\r\n\t\t\t} else if (!this._parsedFrames) {\r\n\t\t\t\tthis.parseFrames();\r\n\t\t\t} else if ((this.graphicsCreated) && (this.materialFinal)) {\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t} else if (!this.graphicsCreated) {\r\n\t\t\t\tthis.graphicsCreated = true;\r\n\t\t\t\t//create default subgraphics\r\n\t\t\t\tthis._graphics.addGraphic(this._firstElements.clone());\r\n\t\t\t\t// Force name to be chosen by this._pFinalizeAsset()\r\n\t\t\t\tthis._sprite.name = \"\";\r\n\t\t\t\tif (this.materialFinal) {\r\n\t\t\t\t\t//add to the content property\r\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._sprite);\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(this._sprite.graphics);\r\n\t\t\t\t\tthis._pFinalizeAsset(this._sprite);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\t}\r\n\r\n\t/**\r\n\t * Reads in all that MD2 Header data that is declared as private variables.\r\n\t * I know its a lot, and it looks ugly, but only way to do it in Flash\r\n\t */\r\n\tprivate parseHeader()\r\n\t{\r\n\t\tthis._ident = this._byteData.readInt();\r\n\t\tthis._version = this._byteData.readInt();\r\n\t\tthis._skinWidth = this._byteData.readInt();\r\n\t\tthis._skinHeight = this._byteData.readInt();\r\n\t\t//skip this._frameSize\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._numSkins = this._byteData.readInt();\r\n\t\tthis._numVertices = this._byteData.readInt();\r\n\t\tthis._numST = this._byteData.readInt();\r\n\t\tthis._numTris = this._byteData.readInt();\r\n\t\t//skip this._numGlCmds\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._numFrames = this._byteData.readInt();\r\n\t\tthis._offsetSkins = this._byteData.readInt();\r\n\t\tthis._offsetST = this._byteData.readInt();\r\n\t\tthis._offsetTris = this._byteData.readInt();\r\n\t\tthis._offsetFrames = this._byteData.readInt();\r\n\t\t//skip this._offsetGlCmds\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._offsetEnd = this._byteData.readInt();\r\n\r\n\t\tthis._parsedHeader = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the file names for the materials.\r\n\t */\r\n\tprivate parseMaterialNames()\r\n\t{\r\n\t\tvar url:string;\r\n\t\tvar name:string;\r\n\t\tvar extIndex:number /*int*/;\r\n\t\tvar slashIndex:number /*int*/;\r\n\t\tthis._materialNames = new Array<string>();\r\n\t\tthis._byteData.position = this._offsetSkins;\r\n\r\n\t\tvar regExp:RegExp = new RegExp(\"[^a-zA-Z0-9\\\\_\\/.]\", \"g\");\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numSkins; ++i) {\r\n\t\t\tname = this._byteData.readUTFBytes(64);\r\n\t\t\tname = name.replace(regExp, \"\");\r\n\t\t\textIndex = name.lastIndexOf(\".\");\r\n\t\t\tif (this._ignoreTexturePath)\r\n\t\t\t\tslashIndex = name.lastIndexOf(\"/\");\r\n\t\t\tif (name.toLowerCase().indexOf(\".jpg\") == -1 && name.toLowerCase().indexOf(\".png\") == -1) {\r\n\t\t\t\tname = name.substring(slashIndex + 1, extIndex);\r\n\t\t\t\turl = name + \".\" + this._textureType;\r\n\t\t\t} else {\r\n\t\t\t\turl = name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._materialNames[i] = name;\r\n\r\n\t\t\t// only support 1 skin TODO: really?\r\n\t\t\tif (this.dependencies.length == 0)\r\n\t\t\t\tthis._pAddDependency(name, new URLRequest(url));\r\n\t\t}\r\n\r\n\t\tif (this._materialNames.length > 0)\r\n\t\t\tthis._sprite.material.name = this._materialNames[0];\r\n\t\telse\r\n\t\t\tthis.materialFinal = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the uv data for the sprite.\r\n\t */\r\n\tprivate parseUV()\r\n\t{\r\n\t\tvar j:number /*uint*/ = 0;\r\n\r\n\t\tthis._uvs = new Array<number>(this._numST*2);\r\n\t\tthis._byteData.position = this._offsetST;\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numST; i++) {\r\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinWidth;\r\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinHeight;\r\n\t\t}\r\n\r\n\t\tthis._parsedUV = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses unique indices for the faces.\r\n\t */\r\n\tprivate parseFaces()\r\n\t{\r\n\t\tvar a:number /*uint*/, b:number /*uint*/, c:number /*uint*/, ta:number /*uint*/, tb:number /*uint*/, tc:number /*uint*/;\r\n\t\tvar i:number /*uint*/;\r\n\r\n\t\tthis._vertIndices = new Array<number>();\r\n\t\tthis._uvIndices = new Array<number>();\r\n\t\tthis._indices = new Array<number>() /*uint*/;\r\n\r\n\t\tthis._byteData.position = this._offsetTris;\r\n\r\n\t\tfor (i = 0; i < this._numTris; i++) {\r\n\t\t\t//collect vertex indices\r\n\t\t\ta = this._byteData.readUnsignedShort();\r\n\t\t\tb = this._byteData.readUnsignedShort();\r\n\t\t\tc = this._byteData.readUnsignedShort();\r\n\r\n\t\t\t//collect uv indices\r\n\t\t\tta = this._byteData.readUnsignedShort();\r\n\t\t\ttb = this._byteData.readUnsignedShort();\r\n\t\t\ttc = this._byteData.readUnsignedShort();\r\n\r\n\t\t\tthis.addIndex(a, ta);\r\n\t\t\tthis.addIndex(b, tb);\r\n\t\t\tthis.addIndex(c, tc);\r\n\t\t}\r\n\r\n\t\tvar len:number /*uint*/ = this._uvIndices.length;\r\n\t\tthis._finalUV = new Array<number>(len*2);\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tthis._finalUV[i << 1] = this._uvs[this._uvIndices[i] << 1];\r\n\t\t\tthis._finalUV[(i << 1) + 1] = this._uvs[(this._uvIndices[i] << 1) + 1];\r\n\t\t}\r\n\r\n\t\tthis._parsedFaces = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a face index to the list if it doesn't exist yet, based on vertexIndex and uvIndex, and adds the\r\n\t * corresponding vertex and uv data in the correct location.\r\n\t * @param vertexIndex The original index in the vertex list.\r\n\t * @param uvIndex The original index in the uv list.\r\n\t */\r\n\tprivate addIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/)\r\n\t{\r\n\t\tvar index:number /*int*/ = this.findIndex(vertexIndex, uvIndex);\r\n\r\n\t\tif (index == -1) {\r\n\t\t\tthis._indices.push(this._vertIndices.length);\r\n\t\t\tthis._vertIndices.push(vertexIndex);\r\n\t\t\tthis._uvIndices.push(uvIndex);\r\n\t\t} else\r\n\t\t\tthis._indices.push(index);\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the final index corresponding to the original MD2's vertex and uv indices. Returns -1 if it wasn't added yet.\r\n\t * @param vertexIndex The original index in the vertex list.\r\n\t * @param uvIndex The original index in the uv list.\r\n\t * @return The index of the final sprite corresponding to the original vertex and uv index. -1 if it doesn't exist yet.\r\n\t */\r\n\tprivate findIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/):number /*int*/\r\n\t{\r\n\t\tvar len:number /*uint*/ = this._vertIndices.length;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\r\n\t\t\tif (this._vertIndices[i] == vertexIndex && this._uvIndices[i] == uvIndex)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses all the frame elements.\r\n\t */\r\n\tprivate parseFrames()\r\n\t{\r\n\t\tvar sx:number, sy:number, sz:number;\r\n\t\tvar tx:number, ty:number, tz:number;\r\n\t\tvar graphics:Graphics;\r\n\t\tvar elements:TriangleElements;\r\n\t\tvar vertLen:number /*uint*/ = this._vertIndices.length;\r\n\t\tvar fvertices:Array<number>;\r\n\t\tvar tvertices:Array<number>;\r\n\t\tvar i:number /*uint*/, j:number /*int*/, k:number /*uint*/;\r\n\t\t//var ch : number /*uint*/;\r\n\t\tvar name:string = \"\";\r\n\t\tvar prevClip:VertexClipNode = null;\r\n\r\n\t\tthis._byteData.position = this._offsetFrames;\r\n\r\n\t\tfor (i = 0; i < this._numFrames; i++) {\r\n\r\n\t\t\ttvertices = new Array<number>();\r\n\t\t\tfvertices = new Array<number>(vertLen*3);\r\n\r\n\t\t\tsx = this._byteData.readFloat();\r\n\t\t\tsy = this._byteData.readFloat();\r\n\t\t\tsz = this._byteData.readFloat();\r\n\r\n\t\t\ttx = this._byteData.readFloat();\r\n\t\t\tty = this._byteData.readFloat();\r\n\t\t\ttz = this._byteData.readFloat();\r\n\r\n\t\t\tname = this.readFrameName();\r\n\r\n\t\t\t// Note, the extra data.position++ in the for loop is there\r\n\t\t\t// to skip over a byte that holds the \"vertex normal index\"\r\n\t\t\tfor (j = 0; j < this._numVertices; j++, this._byteData.position++)\r\n\t\t\t\ttvertices.push(sx*this._byteData.readUnsignedByte() + tx, sy*this._byteData.readUnsignedByte() + ty, sz*this._byteData.readUnsignedByte() + tz);\r\n\r\n\t\t\tk = 0;\r\n\t\t\tfor (j = 0; j < vertLen; j++) {\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3];\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 2];\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 1];\r\n\t\t\t}\r\n\r\n\t\t\telements = new TriangleElements(new AttributesBuffer());\r\n\r\n\t\t\tif (this._firstElements == null)\r\n\t\t\t\tthis._firstElements = elements;\r\n\r\n\t\t\tgraphics = new Graphics();\r\n\t\t\tgraphics.addGraphic(elements);\r\n\r\n\t\t\telements.setIndices(this._indices);\r\n\t\t\telements.setPositions(fvertices);\r\n\t\t\telements.setUVs(this._finalUV);\r\n\t\t\t// cause explicit updates\r\n\t\t\telements.setNormals(null);\r\n\t\t\telements.setTangents(null);\r\n\t\t\t// turn auto updates off because they may be animated and set explicitly\r\n\t\t\telements.autoDeriveNormals = false;\r\n\t\t\telements.autoDeriveTangents = false;\r\n\r\n\t\t\tvar clip:VertexClipNode = this._clipNodes[name];\r\n\r\n\t\t\tif (!clip) {\r\n\t\t\t\t// If another sequence was parsed before this one, starting\r\n\t\t\t\t// a new state means the previous one is complete and can\r\n\t\t\t\t// hence be finalized.\r\n\t\t\t\tif (prevClip) {\r\n\t\t\t\t\tthis._pFinalizeAsset(prevClip);\r\n\t\t\t\t\tthis._animationSet.addAnimation(prevClip);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tclip = new VertexClipNode();\r\n\t\t\t\tclip.name = name;\r\n\t\t\t\tclip.stitchFinalFrame = true;\r\n\r\n\t\t\t\tthis._clipNodes[name] = clip;\r\n\r\n\t\t\t\tprevClip = clip;\r\n\t\t\t}\r\n\t\t\tclip.addFrame(graphics, 1000/MD2Parser.FPS);\r\n\t\t}\r\n\r\n\t\t// Finalize the last state\r\n\t\tif (prevClip) {\r\n\t\t\tthis._pFinalizeAsset(prevClip);\r\n\t\t\tthis._animationSet.addAnimation(prevClip);\r\n\t\t}\r\n\r\n\t\t// Force this._pFinalizeAsset() to decide name\r\n\t\tthis._pFinalizeAsset(this._animationSet);\r\n\r\n\t\tthis._parsedFrames = true;\r\n\t}\r\n\r\n\tprivate readFrameName():string\r\n\t{\r\n\t\tvar name:string = \"\";\r\n\t\tvar k:number /*uint*/ = 0;\r\n\t\tfor (var j:number /*uint*/ = 0; j < 16; j++) {\r\n\t\t\tvar ch:number /*uint*/ = this._byteData.readUnsignedByte();\r\n\r\n\t\t\tif (Math.floor(ch) > 0x39 && Math.floor(ch) <= 0x7A && k == 0)\r\n\t\t\t\tname += String.fromCharCode(ch);\r\n\r\n\t\t\tif (Math.floor(ch) >= 0x30 && Math.floor(ch) <= 0x39)\r\n\t\t\t\tk++;\r\n\t\t}\r\n\t\treturn name;\r\n\t}\r\n}\r\n\r\nexport default MD2Parser;",
    "import Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\r\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport URLLoaderDataFormat\t\t\t\tfrom \"awayjs-core/lib/net/URLLoaderDataFormat\";\r\nimport ParserBase\t\t\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\r\n\r\nimport JointPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/JointPose\";\r\nimport SkeletonPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/SkeletonPose\";\r\nimport SkeletonClipNode\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\";\r\n\r\n/**\r\n * MD5AnimParser provides a parser for the md5anim data type, providing an animation sequence for the md5 format.\r\n *\r\n * todo: optimize\r\n */\r\nclass MD5AnimParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\r\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\r\n\tpublic static NUM_FRAMES_TOKEN:string = \"numFrames\";\r\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\r\n\tpublic static FRAME_RATE_TOKEN:string = \"frameRate\";\r\n\tpublic static NUM_ANIMATED_COMPONENTS_TOKEN:string = \"numAnimatedComponents\";\r\n\r\n\tpublic static HIERARCHY_TOKEN:string = \"hierarchy\";\r\n\tpublic static BOUNDS_TOKEN:string = \"bounds\";\r\n\tpublic static BASE_FRAME_TOKEN:string = \"baseframe\";\r\n\tpublic static FRAME_TOKEN:string = \"frame\";\r\n\r\n\tpublic static COMMENT_TOKEN:string = \"//\";\r\n\r\n\tprivate _parseIndex:number /*int*/ = 0;\r\n\tprivate _reachedEOF:boolean;\r\n\tprivate _line:number /*int*/ = 0;\r\n\tprivate _charLineIndex:number /*int*/ = 0;\r\n\tprivate _version:number /*int*/;\r\n\tprivate _frameRate:number /*int*/;\r\n\tprivate _numFrames:number /*int*/;\r\n\tprivate _numJoints:number /*int*/;\r\n\tprivate _numAnimatedComponents:number /*int*/;\r\n\r\n\tprivate _hierarchy:Array<HierarchyData>;\r\n\tprivate _bounds:Array<BoundsData>;\r\n\tprivate _frameData:Array<FrameData>;\r\n\tprivate _baseFrameData:Array<BaseFrameData>;\r\n\r\n\tprivate _rotationQuat:Quaternion;\r\n\tprivate _clip:SkeletonClipNode;\r\n\r\n\t/**\r\n\t * Creates a new MD5AnimParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._rotationQuat = new Quaternion();\r\n\t\tvar t1:Quaternion = new Quaternion();\r\n\t\tvar t2:Quaternion = new Quaternion();\r\n\r\n\t\tt1.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\r\n\t\tt2.fromAxisAngle(Vector3D.Y_AXIS, -Math.PI*.5);\r\n\r\n\t\tthis._rotationQuat.multiply(t2, t1);\r\n\r\n\t\tif (additionalRotationAxis) {\r\n\t\t\tthis._rotationQuat.multiply(t2, t1);\r\n\t\t\tt1.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\r\n\t\t\tthis._rotationQuat.multiply(t1, this._rotationQuat);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md5anim\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar token:string;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\ttoken = this.getNextToken();\r\n\t\t\tswitch (token) {\r\n\t\t\t\tcase MD5AnimParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"\":\r\n\t\t\t\t\t// can occur at the end of a file\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.VERSION_TOKEN:\r\n\t\t\t\t\tthis._version = this.getNextInt();\r\n\t\t\t\t\tif (this._version != 10)\r\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.COMMAND_LINE_TOKEN:\r\n\t\t\t\t\tthis.parseCMD();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_FRAMES_TOKEN:\r\n\t\t\t\t\tthis._numFrames = this.getNextInt();\r\n\t\t\t\t\tthis._bounds = new Array<BoundsData>();\r\n\t\t\t\t\tthis._frameData = new Array<FrameData>();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_JOINTS_TOKEN:\r\n\t\t\t\t\tthis._numJoints = this.getNextInt();\r\n\t\t\t\t\tthis._hierarchy = new Array<HierarchyData>(this._numJoints);\r\n\t\t\t\t\tthis._baseFrameData = new Array<BaseFrameData>(this._numJoints);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.FRAME_RATE_TOKEN:\r\n\t\t\t\t\tthis._frameRate = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_ANIMATED_COMPONENTS_TOKEN:\r\n\t\t\t\t\tthis._numAnimatedComponents = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.HIERARCHY_TOKEN:\r\n\t\t\t\t\tthis.parseHierarchy();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.BOUNDS_TOKEN:\r\n\t\t\t\t\tthis.parseBounds();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.BASE_FRAME_TOKEN:\r\n\t\t\t\t\tthis.parseBaseFrame();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.FRAME_TOKEN:\r\n\t\t\t\t\tthis.parseFrame();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (!this._reachedEOF)\r\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._reachedEOF) {\r\n\t\t\t\tthis._clip = new SkeletonClipNode();\r\n\t\t\t\tthis.translateClip();\r\n\t\t\t\tthis._pFinalizeAsset(this._clip);\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts all key frame data to an SkinnedAnimationSequence.\r\n\t */\r\n\tprivate translateClip():void\r\n\t{\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numFrames; ++i)\r\n\t\t\tthis._clip.addFrame(this.translatePose(this._frameData[i]), 1000/this._frameRate);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a single key frame data to a SkeletonPose.\r\n\t * @param frameData The actual frame data.\r\n\t * @return A SkeletonPose containing the frame data's pose.\r\n\t */\r\n\tprivate translatePose(frameData:FrameData):SkeletonPose\r\n\t{\r\n\t\tvar hierarchy:HierarchyData;\r\n\t\tvar pose:JointPose;\r\n\t\tvar base:BaseFrameData;\r\n\t\tvar flags:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar translate:Vector3D = new Vector3D();\r\n\t\tvar orientation:Quaternion = new Quaternion();\r\n\t\tvar components:Array<number> = frameData.components;\r\n\t\tvar skelPose:SkeletonPose = new SkeletonPose();\r\n\t\tvar jointPoses:Array<JointPose> = skelPose.jointPoses;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numJoints; ++i) {\r\n\t\t\tj = 0;\r\n\t\t\tpose = new JointPose();\r\n\t\t\thierarchy = this._hierarchy[i];\r\n\t\t\tbase = this._baseFrameData[i];\r\n\t\t\tflags = hierarchy.flags;\r\n\t\t\ttranslate.x = base.position.x;\r\n\t\t\ttranslate.y = base.position.y;\r\n\t\t\ttranslate.z = base.position.z;\r\n\t\t\torientation.x = base.orientation.x;\r\n\t\t\torientation.y = base.orientation.y;\r\n\t\t\torientation.z = base.orientation.z;\r\n\r\n\t\t\tif (flags & 1)\r\n\t\t\t\ttranslate.x = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 2)\r\n\t\t\t\ttranslate.y = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 4)\r\n\t\t\t\ttranslate.z = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 8)\r\n\t\t\t\torientation.x = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 16)\r\n\t\t\t\torientation.y = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 32)\r\n\t\t\t\torientation.z = components[hierarchy.startIndex + (j++)];\r\n\r\n\t\t\tvar w:number = 1 - orientation.x*orientation.x - orientation.y*orientation.y - orientation.z*orientation.z;\r\n\t\t\torientation.w = w < 0? 0 : -Math.sqrt(w);\r\n\r\n\t\t\tif (hierarchy.parentIndex < 0) {\r\n\t\t\t\tpose.orientation.multiply(this._rotationQuat, orientation);\r\n\t\t\t\tpose.translation = this._rotationQuat.rotatePoint(translate);\r\n\t\t\t} else {\r\n\t\t\t\tpose.orientation.copyFrom(orientation);\r\n\t\t\t\tpose.translation.x = translate.x;\r\n\t\t\t\tpose.translation.y = translate.y;\r\n\t\t\t\tpose.translation.z = translate.z;\r\n\t\t\t}\r\n\t\t\tpose.orientation.y = -pose.orientation.y;\r\n\t\t\tpose.orientation.z = -pose.orientation.z;\r\n\t\t\tpose.translation.x = -pose.translation.x;\r\n\r\n\t\t\tjointPoses[i] = pose;\r\n\t\t}\r\n\r\n\t\treturn skelPose;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the skeleton's hierarchy data.\r\n\t */\r\n\tprivate parseHierarchy():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:HierarchyData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new HierarchyData();\r\n\t\t\tdata.name = this.parseLiteralstring();\r\n\t\t\tdata.parentIndex = this.getNextInt();\r\n\t\t\tdata.flags = this.getNextInt();\r\n\t\t\tdata.startIndex = this.getNextInt();\r\n\t\t\tthis._hierarchy[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses frame bounds.\r\n\t */\r\n\tprivate parseBounds():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:BoundsData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new BoundsData();\r\n\t\t\tdata.min = this.parseVector3D();\r\n\t\t\tdata.max = this.parseVector3D();\r\n\t\t\tthis._bounds[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the base frame.\r\n\t */\r\n\tprivate parseBaseFrame():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:BaseFrameData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new BaseFrameData();\r\n\t\t\tdata.position = this.parseVector3D();\r\n\t\t\tdata.orientation = this.parseQuaternion();\r\n\t\t\tthis._baseFrameData[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a single frame.\r\n\t */\r\n\tprivate parseFrame():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:FrameData;\r\n\t\tvar token:string;\r\n\t\tvar frameIndex:number /*int*/;\r\n\r\n\t\tframeIndex = this.getNextInt();\r\n\r\n\t\ttoken = this.getNextToken();\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new FrameData();\r\n\t\t\tdata.components = new Array<number>(this._numAnimatedComponents);\r\n\r\n\t\t\tfor (var i:number /*int*/ = 0; i < this._numAnimatedComponents; ++i)\r\n\t\t\t\tdata.components[i] = this.getNextNumber();\r\n\r\n\t\t\tthis._frameData[frameIndex] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Puts back the last read character into the data stream.\r\n\t */\r\n\tprivate putBack():void\r\n\t{\r\n\t\tthis._parseIndex--;\r\n\t\tthis._charLineIndex--;\r\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the next token in the data stream.\r\n\t */\r\n\tprivate getNextToken():string\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar token:string = \"\";\r\n\r\n\t\twhile (!this._reachedEOF) {\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\r\n\t\t\t\tif (token != MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.skipWhiteSpace();\r\n\t\t\t\tif (token != \"\")\r\n\t\t\t\t\treturn token;\r\n\t\t\t} else\r\n\t\t\t\ttoken += ch;\r\n\r\n\t\t\tif (token == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\treturn token;\r\n\t\t}\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Skips all whitespace in the data stream.\r\n\t */\r\n\tprivate skipWhiteSpace():void\r\n\t{\r\n\t\tvar ch:string;\r\n\r\n\t\tdo\r\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\r\n\r\n\t\tthis.putBack();\r\n\t}\r\n\r\n\t/**\r\n\t * Skips to the next line.\r\n\t */\r\n\tprivate ignoreLine():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\r\n\t\t\tch = this.getNextChar();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next single character in the data stream.\r\n\t */\r\n\tprivate getNextChar():string\r\n\t{\r\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\r\n\r\n\t\tif (ch == \"\\n\") {\r\n\t\t\t++this._line;\r\n\t\t\tthis._charLineIndex = 0;\r\n\t\t} else if (ch != \"\\r\")\r\n\t\t\t++this._charLineIndex;\r\n\r\n\t\tif (this._parseIndex == this._textData.length)\r\n\t\t\tthis._reachedEOF = true;\r\n\r\n\t\treturn ch;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next integer in the data stream.\r\n\t */\r\n\tprivate getNextInt():number /*int*/\r\n\t{\r\n\t\tvar i:number = parseInt(this.getNextToken());\r\n\t\tif (isNaN(i))\r\n\t\t\tthis.sendParseError(\"int type\");\r\n\t\treturn i;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next floating point number in the data stream.\r\n\t */\r\n\tprivate getNextNumber():number\r\n\t{\r\n\t\tvar f:number = parseFloat(this.getNextToken());\r\n\t\tif (isNaN(f))\r\n\t\t\tthis.sendParseError(\"float type\");\r\n\t\treturn f;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next 3d vector in the data stream.\r\n\t */\r\n\tprivate parseVector3D():Vector3D\r\n\t{\r\n\t\tvar vec:Vector3D = new Vector3D();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvec.x = this.getNextNumber();\r\n\t\tvec.y = this.getNextNumber();\r\n\t\tvec.z = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next quaternion in the data stream.\r\n\t */\r\n\tprivate parseQuaternion():Quaternion\r\n\t{\r\n\t\tvar quat:Quaternion = new Quaternion();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tquat.x = this.getNextNumber();\r\n\t\tquat.y = this.getNextNumber();\r\n\t\tquat.z = this.getNextNumber();\r\n\r\n\t\t// quat supposed to be unit length\r\n\t\tvar t:number = 1 - (quat.x*quat.x) - (quat.y*quat.y) - (quat.z*quat.z);\r\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn quat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the command line data.\r\n\t */\r\n\tprivate parseCMD():void\r\n\t{\r\n\t\t// just ignore the command line property\r\n\t\tthis.parseLiteralstring();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\r\n\t * by double quotes.\r\n\t */\r\n\tprivate parseLiteralstring():string\r\n\t{\r\n\t\tthis.skipWhiteSpace();\r\n\r\n\t\tvar ch:string = this.getNextChar();\r\n\t\tvar str:string = \"\";\r\n\r\n\t\tif (ch != \"\\\"\")\r\n\t\t\tthis.sendParseError(\"\\\"\");\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch != \"\\\"\")\r\n\t\t\t\tstr += ch;\r\n\t\t} while (ch != \"\\\"\");\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an end-of-file error when a premature end of file was encountered.\r\n\t */\r\n\tprivate sendEOFError():void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected end of file\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unexpected token was encountered.\r\n\t * @param expected The token type that was actually expected.\r\n\t */\r\n\tprivate sendParseError(expected:string):void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unknown keyword was encountered.\r\n\t */\r\n\tprivate sendUnknownKeywordError():void\r\n\t{\r\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\r\n\t}\r\n}\r\n\r\nexport default MD5AnimParser;\r\n\r\n\r\n/**\r\n *\r\n */\r\nclass BaseFrameData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic position:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientation:Quaternion;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass BoundsData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic min:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic max:Vector3D;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass FrameData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic index:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic components:Array<number>;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass HierarchyData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic name:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic parentIndex:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic flags:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic startIndex:number /*int*/;\r\n}",
    "import AttributesBuffer\t\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\r\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\r\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport URLLoaderDataFormat\t\t\t\tfrom \"awayjs-core/lib/net/URLLoaderDataFormat\";\r\nimport ParserBase\t\t\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\r\n\r\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\r\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\r\nimport DisplayObjectContainer\t\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\r\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\r\n\r\nimport SkeletonAnimationSet\t\t\t\tfrom \"awayjs-renderergl/lib/animators/SkeletonAnimationSet\";\r\nimport Skeleton\t\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/Skeleton\";\r\nimport SkeletonJoint\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/SkeletonJoint\";\r\n\r\n// todo: create animation system, parse skeleton\r\n\r\n/**\r\n * MD5MeshParser provides a parser for the md5mesh data type, providing the graphics of the md5 format.\r\n *\r\n * todo: optimize\r\n */\r\nclass MD5MeshParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\r\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\r\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\r\n\tpublic static NUM_MESHES_TOKEN:string = \"numMeshes\";\r\n\tpublic static COMMENT_TOKEN:string = \"//\";\r\n\tpublic static JOINTS_TOKEN:string = \"joints\";\r\n\tpublic static MESH_TOKEN:string = \"mesh\";\r\n\r\n\tpublic static MESH_SHADER_TOKEN:string = \"shader\";\r\n\tpublic static MESH_NUM_VERTS_TOKEN:string = \"numverts\";\r\n\tpublic static MESH_VERT_TOKEN:string = \"vert\";\r\n\tpublic static MESH_NUM_TRIS_TOKEN:string = \"numtris\";\r\n\tpublic static MESH_TRI_TOKEN:string = \"tri\";\r\n\tpublic static MESH_NUM_WEIGHTS_TOKEN:string = \"numweights\";\r\n\tpublic static MESH_WEIGHT_TOKEN:string = \"weight\";\r\n\r\n\tprivate _parseIndex:number /*int*/ = 0;\r\n\tprivate _reachedEOF:boolean;\r\n\tprivate _line:number /*int*/ = 0;\r\n\tprivate _charLineIndex:number /*int*/ = 0;\r\n\tprivate _version:number /*int*/;\r\n\tprivate _numJoints:number /*int*/;\r\n\tprivate _numMeshes:number /*int*/;\r\n\r\n\tprivate _sprite:Sprite;\r\n\tprivate _shaders:Array<string>;\r\n\r\n\tprivate _maxJointCount:number /*int*/;\r\n\tprivate _elementsData:Array<ElementsData>;\r\n\tprivate _bindPoses:Array<Matrix3D>;\r\n\tprivate _graphics:Graphics;\r\n\r\n\tprivate _skeleton:Skeleton;\r\n\tprivate _animationSet:SkeletonAnimationSet;\r\n\r\n\tprivate _rotationQuat:Quaternion;\r\n\r\n\t/**\r\n\t * Creates a new MD5MeshParser object.\r\n\t */\r\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._rotationQuat = new Quaternion();\r\n\r\n\t\tthis._rotationQuat.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\r\n\r\n\t\tif (additionalRotationAxis) {\r\n\t\t\tvar quat:Quaternion = new Quaternion();\r\n\t\t\tquat.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\r\n\t\t\tthis._rotationQuat.multiply(this._rotationQuat, quat);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md5sprite\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar token:string;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\ttoken = this.getNextToken();\r\n\t\t\tswitch (token) {\r\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.VERSION_TOKEN:\r\n\t\t\t\t\tthis._version = this.getNextInt();\r\n\t\t\t\t\tif (this._version != 10)\r\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.COMMAND_LINE_TOKEN:\r\n\t\t\t\t\tthis.parseCMD();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.NUM_JOINTS_TOKEN:\r\n\t\t\t\t\tthis._numJoints = this.getNextInt();\r\n\t\t\t\t\tthis._bindPoses = new Array<Matrix3D>(this._numJoints);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.NUM_MESHES_TOKEN:\r\n\t\t\t\t\tthis._numMeshes = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.JOINTS_TOKEN:\r\n\t\t\t\t\tthis.parseJoints();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_TOKEN:\r\n\t\t\t\t\tthis.parseMesh();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (!this._reachedEOF)\r\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._reachedEOF) {\r\n\t\t\t\tthis.calculateMaxJointCount();\r\n\t\t\t\tthis._animationSet = new SkeletonAnimationSet(this._maxJointCount);\r\n\r\n\t\t\t\tthis._sprite = new Sprite();\r\n\t\t\t\tthis._graphics = this._sprite.graphics;\r\n\r\n\t\t\t\tfor (var i:number /*int*/ = 0; i < this._elementsData.length; ++i)\r\n\t\t\t\t\tthis._graphics.addGraphic(this.translateElements(this._elementsData[i].positionData, this._elementsData[i].weightData, this._elementsData[i].indices));\r\n\r\n\t\t\t\t//_graphics.animation = _animation;\r\n\t\t\t\t//\t\t\t\t\t_sprite.animationController = _animationController;\r\n\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._sprite);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(this._graphics);\r\n\t\t\t\tthis._pFinalizeAsset(this._sprite);\r\n\t\t\t\tthis._pFinalizeAsset(this._skeleton);\r\n\t\t\t\tthis._pFinalizeAsset(this._animationSet);\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\t}\r\n\r\n\tprivate calculateMaxJointCount():void\r\n\t{\r\n\t\tthis._maxJointCount = 0;\r\n\r\n\t\tvar numElementsData:number /*int*/ = this._elementsData.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < numElementsData; ++i) {\r\n\t\t\tvar elementsData:ElementsData = this._elementsData[i];\r\n\t\t\tvar positionData:Array<PositionData> = elementsData.positionData;\r\n\t\t\tvar numVerts:number /*int*/ = positionData.length;\r\n\r\n\t\t\tfor (var j:number /*int*/ = 0; j < numVerts; ++j) {\r\n\t\t\t\tvar zeroWeights:number /*int*/ = this.countZeroWeightJoints(positionData[j], elementsData.weightData);\r\n\t\t\t\tvar totalJoints:number /*int*/ = positionData[j].countWeight - zeroWeights;\r\n\t\t\t\tif (totalJoints > this._maxJointCount)\r\n\t\t\t\t\tthis._maxJointCount = totalJoints;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate countZeroWeightJoints(position:PositionData, weights:Array<JointData>):number /*int*/\r\n\t{\r\n\t\tvar start:number /*int*/ = position.startWeight;\r\n\t\tvar end:number /*int*/ = position.startWeight + position.countWeight;\r\n\t\tvar count:number /*int*/ = 0;\r\n\t\tvar weight:number;\r\n\r\n\t\tfor (var i:number /*int*/ = start; i < end; ++i) {\r\n\t\t\tweight = weights[i].bias;\r\n\t\t\tif (weight == 0)\r\n\t\t\t\t++count;\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the skeleton's joints.\r\n\t */\r\n\tprivate parseJoints():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar joint:SkeletonJoint;\r\n\t\tvar pos:Vector3D;\r\n\t\tvar quat:Quaternion;\r\n\t\tvar i:number /*int*/ = 0;\r\n\t\tvar token:string = this.getNextToken();\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tthis._skeleton = new Skeleton();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tjoint = new SkeletonJoint();\r\n\t\t\tjoint.name = this.parseLiteralstring();\r\n\t\t\tjoint.parentIndex = this.getNextInt();\r\n\t\t\tpos = this.parseVector3D();\r\n\t\t\tpos = this._rotationQuat.rotatePoint(pos);\r\n\t\t\tquat = this.parseQuaternion();\r\n\r\n\t\t\t// todo: check if this is correct, or maybe we want to actually store it as quats?\r\n\t\t\tthis._bindPoses[i] = quat.toMatrix3D();\r\n\t\t\tthis._bindPoses[i].appendTranslation(pos.x, pos.y, pos.z);\r\n\t\t\tvar inv:Matrix3D = this._bindPoses[i].clone();\r\n\t\t\tinv.invert();\r\n\t\t\tjoint.inverseBindPose = inv.rawData;\r\n\r\n\t\t\tthis._skeleton.joints[i++] = joint;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Puts back the last read character into the data stream.\r\n\t */\r\n\tprivate putBack():void\r\n\t{\r\n\t\tthis._parseIndex--;\r\n\t\tthis._charLineIndex--;\r\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the mesh graphics.\r\n\t */\r\n\tprivate parseMesh():void\r\n\t{\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar ch:string;\r\n\t\tvar positionData:Array<PositionData>;\r\n\t\tvar weights:Array<JointData>;\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tif (this._shaders == null)\r\n\t\t\tthis._shaders = new Array<string>();\r\n\r\n\t\twhile (ch != \"}\") {\r\n\t\t\tch = this.getNextToken();\r\n\t\t\tswitch (ch) {\r\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_SHADER_TOKEN:\r\n\t\t\t\t\tthis._shaders.push(this.parseLiteralstring());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_VERTS_TOKEN:\r\n\t\t\t\t\tpositionData = new Array<PositionData>(this.getNextInt());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_TRIS_TOKEN:\r\n\t\t\t\t\tindices = new Array<number>(this.getNextInt()*3) /*uint*/;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_WEIGHTS_TOKEN:\r\n\t\t\t\t\tweights = new Array<JointData>(this.getNextInt());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_VERT_TOKEN:\r\n\t\t\t\t\tthis.parseVertex(positionData);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_TRI_TOKEN:\r\n\t\t\t\t\tthis.parseTri(indices);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_WEIGHT_TOKEN:\r\n\t\t\t\t\tthis.parseJoint(weights);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._elementsData == null)\r\n\t\t\tthis._elementsData = new Array<ElementsData>();\r\n\r\n\t\tvar i:number /*uint*/ = this._elementsData.length;\r\n\t\tthis._elementsData[i] = new ElementsData();\r\n\t\tthis._elementsData[i].positionData = positionData;\r\n\t\tthis._elementsData[i].weightData = weights;\r\n\t\tthis._elementsData[i].indices = indices;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the sprite data to a SkinnedSub instance.\r\n\t * @param positionData The sprite's positions.\r\n\t * @param weights The joint weights per position.\r\n\t * @param indices The indices for the faces.\r\n\t * @return A TriangleElements instance containing all elements data for the current sprite.\r\n\t */\r\n\tprivate translateElements(positionData:Array<PositionData>, weights:Array<JointData>, indices:Array<number> /*uint*/):TriangleElements\r\n\t{\r\n\t\tvar len:number /*int*/ = positionData.length;\r\n\t\tvar v1:number /*int*/, v2:number /*int*/, v3:number /*int*/;\r\n\t\tvar position:PositionData;\r\n\t\tvar weight:JointData;\r\n\t\tvar bindPose:Matrix3D;\r\n\t\tvar pos:Vector3D;\r\n\t\tvar elements:TriangleElements = new TriangleElements(new AttributesBuffer());\r\n\t\tvar uvs:Array<number> = new Array<number>(len*2);\r\n\t\tvar positions:Array<number> = new Array<number>(len*3);\r\n\t\tvar jointIndices:Array<number> = new Array<number>(len*this._maxJointCount);\r\n\t\tvar jointWeights:Array<number> = new Array<number>(len*this._maxJointCount);\r\n\t\tvar l:number /*int*/ = 0;\r\n\t\tvar nonZeroWeights:number /*int*/;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i) {\r\n\t\t\tposition = positionData[i];\r\n\t\t\tv1 = position.index*3;\r\n\t\t\tv2 = v1 + 1;\r\n\t\t\tv3 = v1 + 2;\r\n\t\t\tpositions[v1] = positions[v2] = positions[v3] = 0;\r\n\r\n\t\t\tnonZeroWeights = 0;\r\n\t\t\tfor (var j:number /*int*/ = 0; j < position.countWeight; ++j) {\r\n\t\t\t\tweight = weights[position.startWeight + j];\r\n\t\t\t\tif (weight.bias > 0) {\r\n\t\t\t\t\tbindPose = this._bindPoses[weight.joint];\r\n\t\t\t\t\tpos = bindPose.transformVector(weight.pos);\r\n\t\t\t\t\tpositions[v1] += pos.x*weight.bias;\r\n\t\t\t\t\tpositions[v2] += pos.y*weight.bias;\r\n\t\t\t\t\tpositions[v3] += pos.z*weight.bias;\r\n\r\n\t\t\t\t\t// indices need to be multiplied by 3 (amount of matrix registers)\r\n\t\t\t\t\tjointIndices[l] = weight.joint*3;\r\n\t\t\t\t\tjointWeights[l++] = weight.bias;\r\n\t\t\t\t\t++nonZeroWeights;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = nonZeroWeights; j < this._maxJointCount; ++j) {\r\n\t\t\t\tjointIndices[l] = 0;\r\n\t\t\t\tjointWeights[l++] = 0;\r\n\t\t\t}\r\n\r\n\t\t\tv1 = position.index << 1;\r\n\t\t\tuvs[v1++] = position.s;\r\n\t\t\tuvs[v1] = position.t;\r\n\t\t}\r\n\r\n\t\telements.jointsPerVertex = this._maxJointCount;\r\n\t\telements.setIndices(indices);\r\n\t\telements.setPositions(positions);\r\n\t\telements.setUVs(uvs);\r\n\t\telements.setJointIndices(jointIndices);\r\n\t\telements.setJointWeights(jointWeights);\r\n\t\t// cause explicit updates\r\n\t\telements.setNormals(null);\r\n\t\telements.setTangents(null);\r\n\t\t// turn auto updates off because they may be animated and set explicitly\r\n\t\telements.autoDeriveTangents = false;\r\n\t\telements.autoDeriveNormals = false;\r\n\r\n\t\treturn elements;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve the next triplet of position indices that form a face.\r\n\t * @param indices The index list in which to store the read data.\r\n\t */\r\n\tprivate parseTri(indices:Array<number> /*uint*/):void\r\n\t{\r\n\t\tvar index:number /*int*/ = this.getNextInt()*3;\r\n\t\tindices[index] = this.getNextInt();\r\n\t\tindices[index + 1] = this.getNextInt();\r\n\t\tindices[index + 2] = this.getNextInt();\r\n\t}\r\n\r\n\t/**\r\n\t * Reads a new joint data set for a single joint.\r\n\t * @param weights the target list to contain the weight data.\r\n\t */\r\n\tprivate parseJoint(weights:Array<JointData>):void\r\n\t{\r\n\t\tvar weight:JointData = new JointData();\r\n\t\tweight.index = this.getNextInt();\r\n\t\tweight.joint = this.getNextInt();\r\n\t\tweight.bias = this.getNextNumber();\r\n\t\tweight.pos = this.parseVector3D();\r\n\t\tweights[weight.index] = weight;\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the data for a single position.\r\n\t * @param positionData The list to contain the position data.\r\n\t */\r\n\tprivate parseVertex(positionData:Array<PositionData>):void\r\n\t{\r\n\t\tvar position:PositionData = new PositionData();\r\n\t\tposition.index = this.getNextInt();\r\n\t\tthis.parseUV(position);\r\n\t\tposition.startWeight = this.getNextInt();\r\n\t\tposition.countWeight = this.getNextInt();\r\n\t\t//\t\t\tif (position.countWeight > _maxJointCount) _maxJointCount = position.countWeight;\r\n\t\tpositionData[position.index] = position;\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next uv coordinate.\r\n\t * @param positionData The positionData to contain the UV coordinates.\r\n\t */\r\n\tprivate parseUV(positionData:PositionData):void\r\n\t{\r\n\t\tvar ch:string = this.getNextToken();\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tpositionData.s = this.getNextNumber();\r\n\t\tpositionData.t = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the next token in the data stream.\r\n\t */\r\n\tprivate getNextToken():string\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar token:string = \"\";\r\n\r\n\t\twhile (!this._reachedEOF) {\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\r\n\t\t\t\tif (token != MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.skipWhiteSpace();\r\n\t\t\t\tif (token != \"\")\r\n\t\t\t\t\treturn token;\r\n\t\t\t} else\r\n\t\t\t\ttoken += ch;\r\n\r\n\t\t\tif (token == MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\treturn token;\r\n\t\t}\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Skips all whitespace in the data stream.\r\n\t */\r\n\tprivate skipWhiteSpace():void\r\n\t{\r\n\t\tvar ch:string;\r\n\r\n\t\tdo\r\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\r\n\r\n\t\tthis.putBack();\r\n\t}\r\n\r\n\t/**\r\n\t * Skips to the next line.\r\n\t */\r\n\tprivate ignoreLine():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\r\n\t\t\tch = this.getNextChar();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next single character in the data stream.\r\n\t */\r\n\tprivate getNextChar():string\r\n\t{\r\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\r\n\r\n\t\tif (ch == \"\\n\") {\r\n\t\t\t++this._line;\r\n\t\t\tthis._charLineIndex = 0;\r\n\t\t} else if (ch != \"\\r\")\r\n\t\t\t++this._charLineIndex;\r\n\r\n\t\tif (this._parseIndex >= this._textData.length)\r\n\t\t\tthis._reachedEOF = true;\r\n\r\n\t\treturn ch;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next integer in the data stream.\r\n\t */\r\n\tprivate getNextInt():number /*int*/\r\n\t{\r\n\t\tvar i:number = parseInt(this.getNextToken());\r\n\t\tif (isNaN(i))\r\n\t\t\tthis.sendParseError(\"int type\");\r\n\t\treturn i;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next floating point number in the data stream.\r\n\t */\r\n\tprivate getNextNumber():number\r\n\t{\r\n\t\tvar f:number = parseFloat(this.getNextToken());\r\n\t\tif (isNaN(f))\r\n\t\t\tthis.sendParseError(\"float type\");\r\n\t\treturn f;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next 3d vector in the data stream.\r\n\t */\r\n\tprivate parseVector3D():Vector3D\r\n\t{\r\n\t\tvar vec:Vector3D = new Vector3D();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvec.x = -this.getNextNumber();\r\n\t\tvec.y = this.getNextNumber();\r\n\t\tvec.z = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next quaternion in the data stream.\r\n\t */\r\n\tprivate parseQuaternion():Quaternion\r\n\t{\r\n\t\tvar quat:Quaternion = new Quaternion();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tquat.x = this.getNextNumber();\r\n\t\tquat.y = -this.getNextNumber();\r\n\t\tquat.z = -this.getNextNumber();\r\n\r\n\t\t// quat supposed to be unit length\r\n\t\tvar t:number = 1 - quat.x*quat.x - quat.y*quat.y - quat.z*quat.z;\r\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\tvar rotQuat:Quaternion = new Quaternion();\r\n\t\trotQuat.multiply(this._rotationQuat, quat);\r\n\t\treturn rotQuat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the command line data.\r\n\t */\r\n\tprivate parseCMD():void\r\n\t{\r\n\t\t// just ignore the command line property\r\n\t\tthis.parseLiteralstring();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\r\n\t * by double quotes.\r\n\t */\r\n\tprivate parseLiteralstring():string\r\n\t{\r\n\t\tthis.skipWhiteSpace();\r\n\r\n\t\tvar ch:string = this.getNextChar();\r\n\t\tvar str:string = \"\";\r\n\r\n\t\tif (ch != \"\\\"\")\r\n\t\t\tthis.sendParseError(\"\\\"\");\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch != \"\\\"\")\r\n\t\t\t\tstr += ch;\r\n\t\t} while (ch != \"\\\"\");\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an end-of-file error when a premature end of file was encountered.\r\n\t */\r\n\tprivate sendEOFError():void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected end of file\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unexpected token was encountered.\r\n\t * @param expected The token type that was actually expected.\r\n\t */\r\n\tprivate sendParseError(expected:string):void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unknown keyword was encountered.\r\n\t */\r\n\tprivate sendUnknownKeywordError():void\r\n\t{\r\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\r\n\t}\r\n}\r\n\r\nexport default MD5MeshParser;\r\n\r\n\r\nclass PositionData\r\n{\r\n\tpublic index:number /*int*/;\r\n\tpublic s:number;\r\n\tpublic t:number;\r\n\tpublic startWeight:number /*int*/;\r\n\tpublic countWeight:number /*int*/;\r\n}\r\n\r\nclass JointData\r\n{\r\n\tpublic index:number /*int*/;\r\n\tpublic joint:number /*int*/;\r\n\tpublic bias:number;\r\n\tpublic pos:Vector3D;\r\n}\r\n\r\nclass ElementsData\r\n{\r\n\tpublic positionData:Array<PositionData>;\r\n\tpublic weightData:Array<JointData>;\r\n\tpublic indices:Array<number> /*uint*/;\r\n}",
    "import AttributesBuffer\t\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\r\nimport BitmapImage2D\t\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\r\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport IAsset\t\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\r\nimport URLLoaderDataFormat\t\t\t\tfrom \"awayjs-core/lib/net/URLLoaderDataFormat\";\r\nimport URLRequest\t\t\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\r\nimport ParserBase\t\t\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\r\nimport ParserUtils\t\t\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserUtils\";\r\nimport ResourceDependency\t\t\t\tfrom \"awayjs-core/lib/parsers/ResourceDependency\";\r\nimport ByteArray\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\r\n\r\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\r\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\r\nimport DisplayObjectContainer\t\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\r\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\r\nimport DefaultMaterialManager\t\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\r\nimport MaterialBase\t\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\r\nimport Single2DTexture\t\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\r\n\r\nimport MethodMaterial\t\t\t\t\tfrom \"awayjs-methodmaterials/lib/MethodMaterial\";\r\nimport MethodMaterialMode\t\t\t\tfrom \"awayjs-methodmaterials/lib/MethodMaterialMode\";\r\n\r\n/**\r\n * Max3DSParser provides a parser for the 3ds data type.\r\n */\r\nclass Max3DSParser extends ParserBase\r\n{\r\n\tprivate _byteData:ByteArray;\r\n\r\n\tprivate _textures:Object;\r\n\tprivate _materials:Object;\r\n\tprivate _unfinalized_objects:Object;\r\n\r\n\tprivate _cur_obj_end:number;\r\n\tprivate _cur_obj:ObjectVO;\r\n\r\n\tprivate _cur_mat_end:number;\r\n\tprivate _cur_mat:MaterialVO;\r\n\tprivate _useSmoothingGroups:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>Max3DSParser</code> object.\r\n\t *\r\n\t * @param useSmoothingGroups Determines whether the parser looks for smoothing groups in the 3ds file or assumes uniform smoothing. Defaults to true.\r\n\t */\r\n\tconstructor(useSmoothingGroups:boolean = true)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n\t\tthis._useSmoothingGroups = useSmoothingGroups;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"3ds\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\tvar ba:ByteArray;\r\n\r\n\t\tba = ParserUtils.toByteArray(data);\r\n\t\tif (ba) {\r\n\t\t\tba.position = 0;\r\n\t\t\tif (ba.readShort() == 0x4d4d)\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\tif (resourceDependency.assets.length == 1) {\r\n\t\t\tvar asset:IAsset;\r\n\r\n\t\t\tasset = resourceDependency.assets[0];\r\n\t\t\tif (asset.isAsset(BitmapImage2D)) {\r\n\t\t\t\tvar tex:TextureVO;\r\n\r\n\t\t\t\ttex = this._textures[resourceDependency.id];\r\n\t\t\t\ttex.texture = new Single2DTexture(<BitmapImage2D> asset);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\t// TODO: Implement\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (!this._byteData) {\r\n\t\t\tthis._byteData = this._pGetByteData();\r\n\t\t\tthis._byteData.position = 0;\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\tthis._textures = {};\r\n\t\t\tthis._materials = {};\r\n\t\t\tthis._unfinalized_objects = {};\r\n\t\t}\r\n\r\n\t\t// TODO: With this construct, the loop will run no-op for as long\r\n\t\t// as there is time once file has finished reading. Consider a nice\r\n\t\t// way to stop loop when byte array is empty, without putting it in\r\n\t\t// the while-conditional, which will prevent finalizations from\r\n\t\t// happening after the last chunk.\r\n\t\twhile (this._pHasTime()) {\r\n\r\n\t\t\t// If we are currently working on an object, and the most recent chunk was\r\n\t\t\t// the last one in that object, finalize the current object.\r\n\t\t\tif (this._cur_mat && this._byteData.position >= this._cur_mat_end)\r\n\t\t\t\tthis.finalizeCurrentMaterial();\r\n\t\t\telse if (this._cur_obj && this._byteData.position >= this._cur_obj_end) {\r\n\t\t\t\t// Can't finalize at this point, because we have to wait until the full\r\n\t\t\t\t// animation section has been parsed for any potential pivot definitions\r\n\t\t\t\tthis._unfinalized_objects[this._cur_obj.name] = this._cur_obj;\r\n\t\t\t\tthis._cur_obj_end = Number.MAX_VALUE /*uint*/;\r\n\t\t\t\tthis._cur_obj = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._byteData.getBytesAvailable() > 0) {\r\n\t\t\t\tvar cid:number /*uint*/;\r\n\t\t\t\tvar len:number /*uint*/;\r\n\t\t\t\tvar end:number /*uint*/;\r\n\r\n\t\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\t\tlen = this._byteData.readUnsignedInt();\r\n\t\t\t\tend = this._byteData.position + (len - 6);\r\n\r\n\t\t\t\tswitch (cid) {\r\n\t\t\t\t\tcase 0x4D4D: // MAIN3DS\r\n\t\t\t\t\tcase 0x3D3D: // EDIT3DS\r\n\t\t\t\t\tcase 0xB000: // KEYF3DS\r\n\t\t\t\t\t\t// This types are \"container chunks\" and contain only\r\n\t\t\t\t\t\t// sub-chunks (no data on their own.) This means that\r\n\t\t\t\t\t\t// there is nothing more to parse at this point, and\r\n\t\t\t\t\t\t// instead we should progress to the next chunk, which\r\n\t\t\t\t\t\t// will be the first sub-chunk of this one.\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tcase 0xAFFF: // MATERIAL\r\n\t\t\t\t\t\tthis._cur_mat_end = end;\r\n\t\t\t\t\t\tthis._cur_mat = this.parseMaterial();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4000: // EDIT_OBJECT\r\n\t\t\t\t\t\tthis._cur_obj_end = end;\r\n\t\t\t\t\t\tthis._cur_obj = new ObjectVO();\r\n\t\t\t\t\t\tthis._cur_obj.name = this.readNulTermstring();\r\n\t\t\t\t\t\tthis._cur_obj.materials = new Array<string>();\r\n\t\t\t\t\t\tthis._cur_obj.materialFaces = {};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4100: // OBJ_TRIMESH\r\n\t\t\t\t\t\tthis._cur_obj.type = Sprite.assetType;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4110: // TRI_VERTEXL\r\n\t\t\t\t\t\tthis.parseVertexList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4120: // TRI_FACELIST\r\n\t\t\t\t\t\tthis.parseFaceList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4140: // TRI_MAPPINGCOORDS\r\n\t\t\t\t\t\tthis.parseUVList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4130: // Face materials\r\n\t\t\t\t\t\tthis.parseFaceMaterialList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4160: // Transform\r\n\t\t\t\t\t\tthis._cur_obj.transform = this.readTransform();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0xB002: // Object animation (including pivot)\r\n\t\t\t\t\t\tthis.parseObjectAnimation(end);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4150: // Smoothing groups\r\n\t\t\t\t\t\tthis.parseSmoothingGroups();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// Skip this (unknown) chunk\r\n\t\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Pause parsing if there were any dependencies found during this\r\n\t\t\t\t// iteration (i.e. if there are any dependencies that need to be\r\n\t\t\t\t// retrieved at this time.)\r\n\t\t\t\tif (this.dependencies.length) {\r\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// More parsing is required if the entire byte array has not yet\r\n\t\t// been read, or if there is a currently non-finalized object in\r\n\t\t// the pipeline.\r\n\t\tif (this._byteData.getBytesAvailable() || this._cur_obj || this._cur_mat) {\r\n\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t} else {\r\n\t\t\tvar name:string;\r\n\r\n\t\t\t// Finalize any remaining objects before ending.\r\n\t\t\tfor (name in this._unfinalized_objects) {\r\n\t\t\t\tvar obj:DisplayObjectContainer;\r\n\t\t\t\tobj = this.constructObject(this._unfinalized_objects[name]);\r\n\t\t\t\tif (obj) {\r\n\t\t\t\t\t//add to the content property\r\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(obj, name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\t}\r\n\r\n\tprivate parseMaterial():MaterialVO\r\n\t{\r\n\t\tvar mat:MaterialVO;\r\n\r\n\t\tmat = new MaterialVO();\r\n\r\n\t\twhile (this._byteData.position < this._cur_mat_end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\t\t\tvar end:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\t\t\tend = this._byteData.position + (len - 6);\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xA000: // Material name\r\n\t\t\t\t\tmat.name = this.readNulTermstring();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA010: // Ambient color\r\n\t\t\t\t\tmat.ambientColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA020: // Diffuse color\r\n\t\t\t\t\tmat.diffuseColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA030: // Specular color\r\n\t\t\t\t\tmat.specularColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA081: // Two-sided, existence indicates \"true\"\r\n\t\t\t\t\tmat.twoSided = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA200: // Main (color) texture\r\n\t\t\t\t\tmat.colorMap = this.parseTexture(end);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA204: // Specular map\r\n\t\t\t\t\tmat.specularMap = this.parseTexture(end);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._byteData.position = end;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn mat;\r\n\t}\r\n\r\n\tprivate parseTexture(end:number /*uint*/):TextureVO\r\n\t{\r\n\t\tvar tex:TextureVO;\r\n\r\n\t\ttex = new TextureVO();\r\n\r\n\t\twhile (this._byteData.position < end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xA300:\r\n\t\t\t\t\ttex.url = this.readNulTermstring();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// Skip this unknown texture sub-chunk\r\n\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._textures[tex.url] = tex;\r\n\t\tthis._pAddDependency(tex.url, new URLRequest(tex.url));\r\n\r\n\t\treturn tex;\r\n\t}\r\n\r\n\tprivate parseVertexList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.verts = new Array<number>(count*3);\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.verts.length;\r\n\t\twhile (i < len) {\r\n\t\t\tvar x:number, y:number, z:number;\r\n\r\n\t\t\tx = this._byteData.readFloat();\r\n\t\t\ty = this._byteData.readFloat();\r\n\t\t\tz = this._byteData.readFloat();\r\n\r\n\t\t\tthis._cur_obj.verts[i++] = x;\r\n\t\t\tthis._cur_obj.verts[i++] = z;\r\n\t\t\tthis._cur_obj.verts[i++] = y;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseFaceList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.indices = new Array<number>(count*3) /*uint*/;\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.indices.length;\r\n\t\twhile (i < len) {\r\n\t\t\tvar i0:number /*uint*/, i1:number /*uint*/, i2:number /*uint*/;\r\n\r\n\t\t\ti0 = this._byteData.readUnsignedShort();\r\n\t\t\ti1 = this._byteData.readUnsignedShort();\r\n\t\t\ti2 = this._byteData.readUnsignedShort();\r\n\r\n\t\t\tthis._cur_obj.indices[i++] = i0;\r\n\t\t\tthis._cur_obj.indices[i++] = i2;\r\n\t\t\tthis._cur_obj.indices[i++] = i1;\r\n\r\n\t\t\t// Skip \"face info\", irrelevant in Away3D\r\n\t\t\tthis._byteData.position += 2;\r\n\t\t}\r\n\r\n\t\tthis._cur_obj.smoothingGroups = new Array<number>(count) /*uint*/;\r\n\t}\r\n\r\n\tprivate parseSmoothingGroups():void\r\n\t{\r\n\t\tvar len:number /*uint*/ = this._cur_obj.indices.length/3;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\t\twhile (i < len) {\r\n\t\t\tthis._cur_obj.smoothingGroups[i] = this._byteData.readUnsignedInt();\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseUVList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.uvs = new Array<number>(count*2);\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.uvs.length;\r\n\t\twhile (i < len) {\r\n\t\t\tthis._cur_obj.uvs[i++] = this._byteData.readFloat();\r\n\t\t\tthis._cur_obj.uvs[i++] = 1.0 - this._byteData.readFloat();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseFaceMaterialList():void\r\n\t{\r\n\t\tvar mat:string;\r\n\t\tvar count:number /*uint*/;\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar faces:Array<number> /*uint*/;\r\n\r\n\t\tmat = this.readNulTermstring();\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\r\n\t\tfaces = new Array<number>(count) /*uint*/;\r\n\t\ti = 0;\r\n\t\twhile (i < faces.length)\r\n\t\t\tfaces[i++] = this._byteData.readUnsignedShort();\r\n\r\n\t\tthis._cur_obj.materials.push(mat);\r\n\t\tthis._cur_obj.materialFaces[mat] = faces;\r\n\t}\r\n\r\n\tprivate parseObjectAnimation(end:number):void\r\n\t{\r\n\t\tvar vo:ObjectVO;\r\n\t\tvar obj:DisplayObjectContainer;\r\n\t\tvar pivot:Vector3D;\r\n\t\tvar name:string;\r\n\t\tvar hier:number /*uint*/;\r\n\r\n\t\t// Pivot defaults to origin\r\n\t\tpivot = new Vector3D;\r\n\r\n\t\twhile (this._byteData.position < end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xb010: // Name/hierarchy\r\n\t\t\t\t\tname = this.readNulTermstring();\r\n\t\t\t\t\tthis._byteData.position += 4;\r\n\t\t\t\t\thier = this._byteData.readShort();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xb013: // Pivot\r\n\t\t\t\t\tpivot.x = this._byteData.readFloat();\r\n\t\t\t\t\tpivot.z = this._byteData.readFloat();\r\n\t\t\t\t\tpivot.y = this._byteData.readFloat();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If name is \"$$$DUMMY\" this is an empty object (e.g. a container)\r\n\t\t// and will be ignored in this version of the parser\r\n\t\t// TODO: Implement containers in 3DS parser.\r\n\t\tif (name != '$$$DUMMY' && this._unfinalized_objects.hasOwnProperty(name)) {\r\n\t\t\tvo = this._unfinalized_objects[name];\r\n\t\t\tobj = this.constructObject(vo, pivot);\r\n\r\n\t\t\tif (obj) {\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(obj, vo.name);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tdelete this._unfinalized_objects[name];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate constructObject(obj:ObjectVO, pivot:Vector3D = null):DisplayObjectContainer\r\n\t{\r\n\t\tif (obj.type == Sprite.assetType) {\r\n\t\t\tvar i:number /*uint*/;\r\n\t\t\tvar sub:TriangleElements;\r\n\t\t\tvar graphics:Graphics;\r\n\t\t\tvar mat:MaterialBase;\r\n\t\t\tvar sprite:Sprite;\r\n\t\t\tvar mtx:Matrix3D;\r\n\t\t\tvar vertices:Array<VertexVO>;\r\n\t\t\tvar faces:Array<FaceVO>;\r\n\r\n\t\t\tif (obj.materials.length > 1)\r\n\t\t\t\tconsole.log(\"The Away3D 3DS parser does not support multiple materials per sprite at this point.\");\r\n\r\n\t\t\t// Ignore empty objects\r\n\t\t\tif (!obj.indices || obj.indices.length == 0)\r\n\t\t\t\treturn null;\r\n\r\n\t\t\tvertices = new Array<VertexVO>(obj.verts.length/3);\r\n\t\t\tfaces = new Array<FaceVO>(obj.indices.length/3);\r\n\r\n\t\t\tthis.prepareData(vertices, faces, obj);\r\n\r\n\t\t\tif (this._useSmoothingGroups)\r\n\t\t\t\tthis.applySmoothGroups(vertices, faces);\r\n\r\n\t\t\tobj.verts = new Array<number>(vertices.length*3);\r\n\t\t\tfor (i = 0; i < vertices.length; i++) {\r\n\t\t\t\tobj.verts[i*3] = vertices[i].x;\r\n\t\t\t\tobj.verts[i*3 + 1] = vertices[i].y;\r\n\t\t\t\tobj.verts[i*3 + 2] = vertices[i].z;\r\n\t\t\t}\r\n\t\t\tobj.indices = new Array<number>(faces.length*3) /*uint*/;\r\n\r\n\t\t\tfor (i = 0; i < faces.length; i++) {\r\n\t\t\t\tobj.indices[i*3] = faces[i].a;\r\n\t\t\t\tobj.indices[i*3 + 1] = faces[i].b;\r\n\t\t\t\tobj.indices[i*3 + 2] = faces[i].c;\r\n\t\t\t}\r\n\r\n\t\t\tif (obj.uvs) {\r\n\t\t\t\t// If the object had UVs to start with, use UVs generated by\r\n\t\t\t\t// smoothing group splitting algorithm. Otherwise those UVs\r\n\t\t\t\t// will be nonsense and should be skipped.\r\n\t\t\t\tobj.uvs = new Array<number>(vertices.length*2);\r\n\t\t\t\tfor (i = 0; i < vertices.length; i++) {\r\n\t\t\t\t\tobj.uvs[i*2] = vertices[i].u;\r\n\t\t\t\t\tobj.uvs[i*2 + 1] = vertices[i].v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (obj.materials.length > 0) {\r\n\t\t\t\tvar mname:string;\r\n\t\t\t\tmname = obj.materials[0];\r\n\t\t\t\tmat = this._materials[mname].material;\r\n\t\t\t}\r\n\r\n\t\t\t// Build sprite and return it\r\n\t\t\tsprite = new Sprite(mat);\r\n\t\t\tsprite.transform.matrix3D = new Matrix3D(obj.transform);\r\n\r\n\t\t\tgraphics = sprite.graphics;\r\n\r\n\t\t\t// Construct elements (potentially splitting buffers)\r\n\t\t\t// and add them to graphics.\r\n\t\t\tsub = new TriangleElements(new AttributesBuffer());\r\n\t\t\tsub.setIndices(obj.indices);\r\n\t\t\tsub.setPositions(obj.verts);\r\n\t\t\tsub.setUVs(obj.uvs);\r\n\r\n\t\t\tgraphics.addGraphic(sub);\r\n\r\n\t\t\t// Apply pivot translation to graphics if a pivot was\r\n\t\t\t// found while parsing the keyframe chunk earlier.\r\n\t\t\tif (pivot) {\r\n\t\t\t\tif (obj.transform) {\r\n\t\t\t\t\t// If a transform was found while parsing the\r\n\t\t\t\t\t// object chunk, use it to find the local pivot vector\r\n\t\t\t\t\tmtx = new Matrix3D(obj.transform);\r\n\t\t\t\t\tmtx.rawData[12] = 0;\r\n\t\t\t\t\tmtx.rawData[13] = 0;\r\n\t\t\t\t\tmtx.rawData[14] = 0;\r\n\t\t\t\t\tpivot = mtx.transformVector(pivot);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpivot.scaleBy(-1);\r\n\r\n\t\t\t\tmtx = new Matrix3D();\r\n\t\t\t\tmtx.appendTranslation(pivot.x, pivot.y, pivot.z);\r\n\t\t\t\tgraphics.applyTransformation(mtx);\r\n\t\t\t}\r\n\r\n\t\t\t// Apply transformation to graphics if a transformation\r\n\t\t\t// was found while parsing the object chunk earlier.\r\n\t\t\tif (obj.transform) {\r\n\t\t\t\tmtx = new Matrix3D(obj.transform);\r\n\t\t\t\tmtx.invert();\r\n\t\t\t\tgraphics.applyTransformation(mtx);\r\n\t\t\t}\r\n\r\n\t\t\t// Final transform applied to graphics. Finalize the graphics,\r\n\t\t\t// which will no longer be modified after this point.\r\n\t\t\tthis._pFinalizeAsset(graphics, obj.name.concat('_graphics'));\r\n\r\n\t\t\treturn sprite;\r\n\t\t}\r\n\r\n\t\t// If reached, unknown\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate prepareData(vertices:Array<VertexVO>, faces:Array<FaceVO>, obj:ObjectVO):void\r\n\t{\r\n\t\t// convert raw ObjectVO's data to structured VertexVO and FaceVO\r\n\t\tvar i:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar k:number /*int*/;\r\n\t\tvar len:number /*int*/ = obj.verts.length;\r\n\t\tfor (i = 0, j = 0, k = 0; i < len;) {\r\n\t\t\tvar v:VertexVO = new VertexVO;\r\n\t\t\tv.x = obj.verts[i++];\r\n\t\t\tv.y = obj.verts[i++];\r\n\t\t\tv.z = obj.verts[i++];\r\n\t\t\tif (obj.uvs) {\r\n\t\t\t\tv.u = obj.uvs[j++];\r\n\t\t\t\tv.v = obj.uvs[j++];\r\n\t\t\t}\r\n\t\t\tvertices[k++] = v;\r\n\t\t}\r\n\t\tlen = obj.indices.length;\r\n\t\tfor (i = 0, k = 0; i < len;) {\r\n\t\t\tvar f:FaceVO = new FaceVO();\r\n\t\t\tf.a = obj.indices[i++];\r\n\t\t\tf.b = obj.indices[i++];\r\n\t\t\tf.c = obj.indices[i++];\r\n\t\t\tf.smoothGroup = obj.smoothingGroups[k] || 0;\r\n\t\t\tfaces[k++] = f;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate applySmoothGroups(vertices:Array<VertexVO>, faces:Array<FaceVO>):void\r\n\t{\r\n\t\t// clone vertices according to following rule:\r\n\t\t// clone if vertex's in faces from groups 1+2 and 3\r\n\t\t// don't clone if vertex's in faces from groups 1+2, 3 and 1+3\r\n\r\n\t\tvar i:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar k:number /*int*/;\r\n\t\tvar l:number /*int*/;\r\n\t\tvar len:number /*int*/;\r\n\t\tvar numVerts:number /*uint*/ = vertices.length;\r\n\t\tvar numFaces:number /*uint*/ = faces.length;\r\n\r\n\t\t// extract groups data for vertices\r\n\t\tvar vGroups:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\r\n\t\tfor (i = 0; i < numVerts; i++)\r\n\t\t\tvGroups[i] = new Array<number>() /*uint*/;\r\n\t\tfor (i = 0; i < numFaces; i++) {\r\n\t\t\tvar face:FaceVO = faces[i];\r\n\t\t\tfor (j = 0; j < 3; j++) {\r\n\t\t\t\tvar groups:Array<number> /*uint*/ = vGroups[(j == 0)? face.a : ((j == 1)? face.b : face.c)];\r\n\t\t\t\tvar group:number /*uint*/ = face.smoothGroup;\r\n\t\t\t\tfor (k = groups.length - 1; k >= 0; k--) {\r\n\t\t\t\t\tif ((group & groups[k]) > 0) {\r\n\t\t\t\t\t\tgroup |= groups[k];\r\n\t\t\t\t\t\tgroups.splice(k, 1);\r\n\t\t\t\t\t\tk = groups.length - 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tgroups.push(group);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// clone vertices\r\n\t\tvar vClones:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\r\n\t\tfor (i = 0; i < numVerts; i++) {\r\n\t\t\tif ((len = vGroups[i].length) < 1)\r\n\t\t\t\tcontinue;\r\n\t\t\tvar clones:Array<number> /*uint*/ = new Array<number>(len) /*uint*/;\r\n\t\t\tvClones[i] = clones;\r\n\t\t\tclones[0] = i;\r\n\t\t\tvar v0:VertexVO = vertices[i];\r\n\t\t\tfor (j = 1; j < len; j++) {\r\n\t\t\t\tvar v1:VertexVO = new VertexVO;\r\n\t\t\t\tv1.x = v0.x;\r\n\t\t\t\tv1.y = v0.y;\r\n\t\t\t\tv1.z = v0.z;\r\n\t\t\t\tv1.u = v0.u;\r\n\t\t\t\tv1.v = v0.v;\r\n\t\t\t\tclones[j] = vertices.length;\r\n\t\t\t\tvertices.push(v1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tnumVerts = vertices.length;\r\n\r\n\t\tfor (i = 0; i < numFaces; i++) {\r\n\t\t\tface = faces[i];\r\n\t\t\tgroup = face.smoothGroup;\r\n\t\t\tfor (j = 0; j < 3; j++) {\r\n\t\t\t\tk = (j == 0)? face.a : ((j == 1)? face.b : face.c);\r\n\t\t\t\tgroups = vGroups[k];\r\n\t\t\t\tlen = groups.length;\r\n\t\t\t\tclones = vClones[k];\r\n\t\t\t\tfor (l = 0; l < len; l++) {\r\n\t\t\t\t\tif (((group == 0) && (groups[l] == 0)) || ((group & groups[l]) > 0)) {\r\n\t\t\t\t\t\tvar index:number /*uint*/ = clones[l];\r\n\t\t\t\t\t\tif (group == 0) {\r\n\t\t\t\t\t\t\t// vertex is unique if no smoothGroup found\r\n\t\t\t\t\t\t\tgroups.splice(l, 1);\r\n\t\t\t\t\t\t\tclones.splice(l, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (j == 0)\r\n\t\t\t\t\t\t\tface.a = index; else if (j == 1)\r\n\t\t\t\t\t\t\tface.b = index; else\r\n\t\t\t\t\t\t\tface.c = index;\r\n\t\t\t\t\t\tl = len;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate finalizeCurrentMaterial():void\r\n\t{\r\n\t\tvar mat:MethodMaterial;\r\n\r\n\t\tmat = new MethodMaterial(this._cur_mat.ambientColor);\r\n\r\n\t\tif (this._cur_mat.colorMap)\r\n\t\t\tmat.ambientMethod.texture = this._cur_mat.colorMap.texture || DefaultMaterialManager.getDefaultTexture();\r\n\r\n\t\tmat.diffuseMethod.color = this._cur_mat.diffuseColor;\r\n\t\tmat.specularMethod.color = this._cur_mat.specularColor;\r\n\r\n\t\tif (this.materialMode >= 2)\r\n\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\tmat.bothSides = this._cur_mat.twoSided;\r\n\r\n\t\tthis._pFinalizeAsset(mat, this._cur_mat.name);\r\n\r\n\t\tthis._materials[this._cur_mat.name] = this._cur_mat;\r\n\t\tthis._cur_mat.material = mat;\r\n\r\n\t\tthis._cur_mat = null;\r\n\t}\r\n\r\n\tprivate readNulTermstring():string\r\n\t{\r\n\t\tvar chr:number /*int*/;\r\n\t\tvar str:string = \"\";\r\n\r\n\t\twhile ((chr = this._byteData.readUnsignedByte()) > 0)\r\n\t\t\tstr += String.fromCharCode(chr);\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\tprivate readTransform():Float32Array\r\n\t{\r\n\t\tvar data:Float32Array = new Float32Array(16);\r\n\r\n\t\t// X axis\r\n\t\tdata[0] = this._byteData.readFloat(); // X\r\n\t\tdata[2] = this._byteData.readFloat(); // Z\r\n\t\tdata[1] = this._byteData.readFloat(); // Y\r\n\t\tdata[3] = 0;\r\n\r\n\t\t// Z axis\r\n\t\tdata[8] = this._byteData.readFloat(); // X\r\n\t\tdata[10] = this._byteData.readFloat(); // Z\r\n\t\tdata[9] = this._byteData.readFloat(); // Y\r\n\t\tdata[11] = 0;\r\n\r\n\t\t// Y Axis\r\n\t\tdata[4] = this._byteData.readFloat(); // X\r\n\t\tdata[6] = this._byteData.readFloat(); // Z\r\n\t\tdata[5] = this._byteData.readFloat(); // Y\r\n\t\tdata[7] = 0;\r\n\r\n\t\t// Translation\r\n\t\tdata[12] = this._byteData.readFloat(); // X\r\n\t\tdata[14] = this._byteData.readFloat(); // Z\r\n\t\tdata[13] = this._byteData.readFloat(); // Y\r\n\t\tdata[15] = 1;\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tprivate readColor():number /*int*/\r\n\t{\r\n\t\tvar cid:number /*int*/;\r\n\t\tvar len:number /*int*/;\r\n\t\tvar r:number /*int*/, g:number /*int*/, b:number /*int*/;\r\n\r\n\t\tcid = this._byteData.readUnsignedShort();\r\n\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\tswitch (cid) {\r\n\t\t\tcase 0x0010: // Floats\r\n\t\t\t\tr = this._byteData.readFloat()*255;\r\n\t\t\t\tg = this._byteData.readFloat()*255;\r\n\t\t\t\tb = this._byteData.readFloat()*255;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0x0011: // 24-bit color\r\n\t\t\t\tr = this._byteData.readUnsignedByte();\r\n\t\t\t\tg = this._byteData.readUnsignedByte();\r\n\t\t\t\tb = this._byteData.readUnsignedByte();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn (r << 16) | (g << 8) | b;\r\n\t}\r\n}\r\n\r\nexport default Max3DSParser;\r\n\r\n/**\r\n *\r\n */\r\nclass FaceVO\r\n{\r\n\tpublic a:number /*int*/;\r\n\tpublic b:number /*int*/;\r\n\tpublic c:number /*int*/;\r\n\tpublic smoothGroup:number /*int*/;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass MaterialVO\r\n{\r\n\tpublic name:string;\r\n\tpublic ambientColor:number /*int*/;\r\n\tpublic diffuseColor:number /*int*/;\r\n\tpublic specularColor:number /*int*/;\r\n\tpublic twoSided:boolean;\r\n\tpublic colorMap:TextureVO;\r\n\tpublic specularMap:TextureVO;\r\n\tpublic material:MaterialBase;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass ObjectVO\r\n{\r\n\tpublic name:string;\r\n\tpublic type:string;\r\n\tpublic pivotX:number;\r\n\tpublic pivotY:number;\r\n\tpublic pivotZ:number;\r\n\tpublic transform:Float32Array;\r\n\tpublic verts:Array<number>;\r\n\tpublic indices:Array<number> /*int*/;\r\n\tpublic uvs:Array<number>;\r\n\tpublic materialFaces:Object;\r\n\tpublic materials:Array<string>;\r\n\tpublic smoothingGroups:Array<number> /*int*/;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass TextureVO\r\n{\r\n\tpublic url:string;\r\n\tpublic texture:Single2DTexture;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass VertexVO\r\n{\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n\tpublic z:number;\r\n\tpublic u:number;\r\n\tpublic v:number;\r\n\tpublic normal:Vector3D;\r\n\tpublic tangent:Vector3D;\r\n}",
    "import Sampler2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\r\nimport AttributesBuffer\t\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\r\nimport BitmapImage2D\t\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\r\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\r\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport IAsset\t\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\r\nimport URLLoaderDataFormat\t\t\t\tfrom \"awayjs-core/lib/net/URLLoaderDataFormat\";\r\nimport URLRequest\t\t\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\r\nimport ParserBase\t\t\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\r\nimport ParserUtils\t\t\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserUtils\";\r\nimport ResourceDependency\t\t\t\tfrom \"awayjs-core/lib/parsers/ResourceDependency\";\r\n\r\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\r\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\r\nimport DisplayObjectContainer\t\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\r\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\r\nimport DefaultMaterialManager\t\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\r\nimport MaterialBase\t\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\r\nimport Single2DTexture\t\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\r\n\r\nimport MethodMaterial\t\t\t\t\tfrom \"awayjs-methodmaterials/lib/MethodMaterial\";\r\nimport MethodMaterialMode\t\t\t\tfrom \"awayjs-methodmaterials/lib/MethodMaterialMode\";\r\nimport SpecularBasicMethod\t\t\t\tfrom \"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\";\r\n\r\n/**\r\n * OBJParser provides a parser for the OBJ data type.\r\n */\r\nclass OBJParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _charIndex:number;\r\n\tprivate _oldIndex:number;\r\n\tprivate _stringLength:number;\r\n\tprivate _currentObject:ObjectGroup;\r\n\tprivate _currentGroup:Group;\r\n\tprivate _currentMaterialGroup:MaterialGroup;\r\n\tprivate _objects:Array<ObjectGroup>;\r\n\tprivate _materialIDs:string[];\r\n\tprivate _materialLoaded:Array<LoadedMaterial>;\r\n\tprivate _materialSpecularData:Array<SpecularData>;\r\n\tprivate _sprites:Array<Sprite>;\r\n\tprivate _lastMtlID:string;\r\n\tprivate _objectIndex:number;\r\n\tprivate _realIndices;\r\n\tprivate _vertexIndex:number;\r\n\tprivate _vertices:Array<Vertex>;\r\n\tprivate _vertexNormals:Array<Vertex>;\r\n\tprivate _uvs:Array<UV>;\r\n\tprivate _scale:number;\r\n\tprivate _mtlLib:boolean;\r\n\tprivate _mtlLibLoaded:boolean = true;\r\n\tprivate _activeMaterialID:string = \"\";\r\n\r\n\t/**\r\n\t * Creates a new OBJParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(scale:number = 1)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._scale = scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Scaling factor applied directly to vertices data\r\n\t * @param value The scaling factor.\r\n\t */\r\n\tpublic set scale(value:number)\r\n\t{\r\n\t\tthis._scale = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"obj\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\tvar content:string = ParserUtils.toString(data);\r\n\t\tvar hasV:boolean = false;\r\n\t\tvar hasF:boolean = false;\r\n\r\n\t\tif (content) {\r\n\t\t\thasV = content.indexOf(\"\\nv \") != -1;\r\n\t\t\thasF = content.indexOf(\"\\nf \") != -1;\r\n\t\t}\r\n\r\n\t\treturn hasV && hasF;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.id == 'mtl') {\r\n\t\t\tvar str:string = ParserUtils.toString(resourceDependency.data);\r\n\t\t\tthis.parseMtl(str);\r\n\r\n\t\t} else {\r\n\t\t\tvar asset:IAsset;\r\n\r\n\t\t\tif (resourceDependency.assets.length != 1) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tasset = resourceDependency.assets[0];\r\n\r\n\t\t\tif (asset.isAsset(BitmapImage2D)) {\r\n\r\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\t\tlm.materialID = resourceDependency.id;\r\n\t\t\t\tlm.texture = new Single2DTexture(<BitmapImage2D> asset);\r\n\r\n\t\t\t\tthis._materialLoaded.push(lm);\r\n\r\n\t\t\t\tif (this._sprites.length > 0) {\r\n\t\t\t\t\tthis.applyMaterial(lm);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.id == \"mtl\") {\r\n\t\t\tthis._mtlLib = false;\r\n\t\t\tthis._mtlLibLoaded = false;\r\n\t\t} else {\r\n\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\tlm.materialID = resourceDependency.id;\r\n\t\t\tthis._materialLoaded.push(lm);\r\n\t\t}\r\n\r\n\t\tif (this._sprites.length > 0)\r\n\t\t\tthis.applyMaterial(lm);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar line:string;\r\n\t\tvar creturn:string = String.fromCharCode(10);\r\n\t\tvar trunk;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\t// Merge linebreaks that are immediately preceeded by\r\n\t\t\t// the \"escape\" backward slash into single lines.\r\n\t\t\tthis._textData = this._textData.replace(/\\\\[\\r\\n]+\\s*/gm, ' ');\r\n\t\t}\r\n\r\n\t\tif (this._textData.indexOf(creturn) == -1)\r\n\t\t\tcreturn = String.fromCharCode(13);\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._startedParsing = true;\r\n\t\t\tthis._vertices = new Array<Vertex>();\r\n\t\t\tthis._vertexNormals = new Array<Vertex>();\r\n\t\t\tthis._materialIDs = new Array<string>();\r\n\t\t\tthis._materialLoaded = new Array<LoadedMaterial>();\r\n\t\t\tthis._sprites = new Array<Sprite>();\r\n\t\t\tthis._uvs = new Array<UV>();\r\n\t\t\tthis._stringLength = this._textData.length;\r\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, 0);\r\n\t\t\tthis._oldIndex = 0;\r\n\t\t\tthis._objects = new Array<ObjectGroup>();\r\n\t\t\tthis._objectIndex = 0;\r\n\t\t}\r\n\r\n\t\twhile (this._charIndex < this._stringLength && this._pHasTime()) {\r\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, this._oldIndex);\r\n\r\n\t\t\tif (this._charIndex == -1)\r\n\t\t\t\tthis._charIndex = this._stringLength;\r\n\r\n\t\t\tline = this._textData.substring(this._oldIndex, this._charIndex);\r\n\t\t\tline = line.split('\\r').join(\"\");\r\n\t\t\tline = line.replace(\"  \", \" \");\r\n\t\t\ttrunk = line.split(\" \");\r\n\t\t\tthis._oldIndex = this._charIndex + 1;\r\n\t\t\tthis.parseLine(trunk);\r\n\r\n\t\t\t// If whatever was parsed on this line resulted in the\r\n\t\t\t// parsing being paused to retrieve dependencies, break\r\n\t\t\t// here and do not continue parsing until un-paused.\r\n\t\t\tif (this.parsingPaused) {\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._charIndex >= this._stringLength) {\r\n\r\n\t\t\tif (this._mtlLib && !this._mtlLibLoaded) {\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\r\n\t\t\tthis.translate();\r\n\t\t\tthis.applyMaterials();\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a single line in the OBJ file.\r\n\t */\r\n\tprivate parseLine(trunk)\r\n\t{\r\n\t\tswitch (trunk[0]) {\r\n\r\n\t\t\tcase \"mtllib\":\r\n\r\n\t\t\t\tthis._mtlLib = true;\r\n\t\t\t\tthis._mtlLibLoaded = false;\r\n\t\t\t\tthis.loadMtl(trunk[1]);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"g\":\r\n\r\n\t\t\t\tthis.createGroup(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"o\":\r\n\r\n\t\t\t\tthis.createObject(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"usemtl\":\r\n\r\n\t\t\t\tif (this._mtlLib) {\r\n\r\n\t\t\t\t\tif (!trunk[1])\r\n\t\t\t\t\t\ttrunk[1] = \"def000\";\r\n\r\n\t\t\t\t\tthis._materialIDs.push(trunk[1]);\r\n\t\t\t\t\tthis._activeMaterialID = trunk[1];\r\n\r\n\t\t\t\t\tif (this._currentGroup)\r\n\t\t\t\t\t\tthis._currentGroup.materialID = this._activeMaterialID;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"v\":\r\n\r\n\t\t\t\tthis.parseVertex(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"vt\":\r\n\r\n\t\t\t\tthis.parseUV(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"vn\":\r\n\r\n\t\t\t\tthis.parseVertexNormal(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"f\":\r\n\r\n\t\t\t\tthis.parseFace(trunk);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the parsed data into an Away3D scenegraph structure\r\n\t */\r\n\tprivate translate()\r\n\t{\r\n\t\tfor (var objIndex:number = 0; objIndex < this._objects.length; ++objIndex) {\r\n\t\t\tvar groups:Array<Group> = this._objects[objIndex].groups;\r\n\t\t\tvar numGroups:number = groups.length;\r\n\t\t\tvar materialGroups:Array<MaterialGroup>;\r\n\t\t\tvar numMaterialGroups:number;\r\n\t\t\tvar graphics:Graphics;\r\n\t\t\tvar sprite:Sprite;\r\n\r\n\t\t\tvar m:number;\r\n\t\t\tvar sm:number;\r\n\t\t\tvar bmMaterial:MethodMaterial;\r\n\r\n\t\t\tfor (var g:number = 0; g < numGroups; ++g) {\r\n\t\t\t\tbmMaterial = new MethodMaterial(DefaultMaterialManager.getDefaultImage2D());\r\n\r\n\t\t\t\t//check for multipass\r\n\t\t\t\tif (this.materialMode >= 2)\r\n\t\t\t\t\tbmMaterial.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\tsprite = new Sprite(bmMaterial);\r\n\t\t\t\tgraphics = sprite.graphics;\r\n\t\t\t\tmaterialGroups = groups[g].materialGroups;\r\n\t\t\t\tnumMaterialGroups = materialGroups.length;\r\n\r\n\t\t\t\tfor (m = 0; m < numMaterialGroups; ++m)\r\n\t\t\t\t\tthis.translateMaterialGroup(materialGroups[m], graphics);\r\n\r\n\t\t\t\tif (graphics.count == 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Finalize and force type-based name\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> graphics);//, \"\");\r\n\r\n\t\t\t\tif (this._objects[objIndex].name) {\r\n\t\t\t\t\t// this is a full independent object ('o' tag in OBJ file)\r\n\t\t\t\t\tsprite.name = this._objects[objIndex].name;\r\n\r\n\t\t\t\t} else if (groups[g].name) {\r\n\r\n\t\t\t\t\t// this is a group so the sub groups contain the actual sprite object names ('g' tag in OBJ file)\r\n\t\t\t\t\tsprite.name = groups[g].name;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// No name stored. Use empty string which will force it\r\n\t\t\t\t\t// to be overridden by finalizeAsset() to type default.\r\n\t\t\t\t\tsprite.name = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._sprites.push(sprite);\r\n\r\n\t\t\t\tif (groups[g].materialID != \"\")\r\n\t\t\t\t\tbmMaterial.name = groups[g].materialID + \"~\" + sprite.name; else\r\n\t\t\t\t\tbmMaterial.name = this._lastMtlID + \"~\" + sprite.name;\r\n\r\n\t\t\t\tif (sprite.graphics.count > 1) {\r\n\t\t\t\t\tfor (sm = 1; sm < sprite.graphics.count; ++sm)\r\n\t\t\t\t\t\tsprite.graphics.getGraphicAt(sm).material = bmMaterial;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(sprite);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> sprite);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Translates an obj's material group to a subgraphics.\r\n\t * @param materialGroup The material group data to convert.\r\n\t * @param graphics The Graphics to contain the converted Elements.\r\n\t */\r\n\tprivate translateMaterialGroup(materialGroup:MaterialGroup, graphics:Graphics)\r\n\t{\r\n\t\tvar faces:Array<FaceData> = materialGroup.faces;\r\n\t\tvar face:FaceData;\r\n\t\tvar numFaces:number = faces.length;\r\n\t\tvar numVerts:number;\r\n\t\tvar elements:TriangleElements;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\tvar normals:Array<number> = new Array<number>();\r\n\t\tvar indices:Array<number> /*uint*/ = new Array<number>();\r\n\r\n\t\tthis._realIndices = [];\r\n\t\tthis._vertexIndex = 0;\r\n\r\n\t\tvar j:number;\r\n\t\tfor (var i:number = 0; i < numFaces; ++i) {\r\n\r\n\t\t\tface = faces[i];\r\n\t\t\tnumVerts = face.indexIds.length - 1;\r\n\r\n\t\t\tfor (j = 1; j < numVerts; ++j) {\r\n\r\n\t\t\t\tthis.translateVertexData(face, j, vertices, uvs, indices, normals);\r\n\t\t\t\tthis.translateVertexData(face, 0, vertices, uvs, indices, normals);\r\n\t\t\t\tthis.translateVertexData(face, j + 1, vertices, uvs, indices, normals);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (vertices.length > 0) {\r\n\t\t\telements = new TriangleElements(new AttributesBuffer());\r\n\t\t\telements.autoDeriveNormals = normals.length? false : true;\r\n\t\t\telements.setIndices(indices);\r\n\t\t\telements.setPositions(vertices);\r\n\t\t\telements.setNormals(normals);\r\n\t\t\telements.setUVs(uvs);\r\n\r\n\t\t\tgraphics.addGraphic(elements);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate translateVertexData(face:FaceData, vertexIndex:number, vertices:Array<number>, uvs:Array<number>, indices:Array<number> /*uint*/, normals:Array<number>)\r\n\t{\r\n\t\tvar index:number;\r\n\t\tvar vertex:Vertex;\r\n\t\tvar vertexNormal:Vertex;\r\n\t\tvar uv:UV;\r\n\r\n\t\tif (!this._realIndices[face.indexIds[vertexIndex]]) {\r\n\r\n\t\t\tindex = this._vertexIndex;\r\n\t\t\tthis._realIndices[face.indexIds[vertexIndex]] = ++this._vertexIndex;\r\n\t\t\tvertex = this._vertices[face.vertexIndices[vertexIndex] - 1];\r\n\t\t\tvertices.push(vertex.x*this._scale, vertex.y*this._scale, vertex.z*this._scale);\r\n\r\n\t\t\tif (face.normalIndices.length > 0) {\r\n\t\t\t\tvertexNormal = this._vertexNormals[face.normalIndices[vertexIndex] - 1];\r\n\t\t\t\tnormals.push(vertexNormal.x, vertexNormal.y, vertexNormal.z);\r\n\t\t\t}\r\n\r\n\t\t\tif (face.uvIndices.length > 0) {\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tuv = this._uvs[face.uvIndices[vertexIndex] - 1];\r\n\t\t\t\t\tuvs.push(uv.u, uv.v);\r\n\r\n\t\t\t\t} catch (e) {\r\n\r\n\t\t\t\t\tswitch (vertexIndex) {\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\tuvs.push(0, 1);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\tuvs.push(.5, 0);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\tuvs.push(1, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tindex = this._realIndices[face.indexIds[vertexIndex]] - 1;\r\n\t\t}\r\n\r\n\t\tindices.push(index);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new object group.\r\n\t * @param trunk The data block containing the object tag and its parameters\r\n\t */\r\n\tprivate createObject(trunk)\r\n\t{\r\n\t\tthis._currentGroup = null;\r\n\t\tthis._currentMaterialGroup = null;\r\n\t\tthis._objects.push(this._currentObject = new ObjectGroup());\r\n\r\n\t\tif (trunk)\r\n\t\t\tthis._currentObject.name = trunk[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new group.\r\n\t * @param trunk The data block containing the group tag and its parameters\r\n\t */\r\n\tprivate createGroup(trunk)\r\n\t{\r\n\t\tif (!this._currentObject)\r\n\t\t\tthis.createObject(null);\r\n\t\tthis._currentGroup = new Group();\r\n\r\n\t\tthis._currentGroup.materialID = this._activeMaterialID;\r\n\r\n\t\tif (trunk)\r\n\t\t\tthis._currentGroup.name = trunk[1];\r\n\t\tthis._currentObject.groups.push(this._currentGroup);\r\n\r\n\t\tthis.createMaterialGroup(null);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new material group.\r\n\t * @param trunk The data block containing the material tag and its parameters\r\n\t */\r\n\tprivate createMaterialGroup(trunk)\r\n\t{\r\n\t\tthis._currentMaterialGroup = new MaterialGroup();\r\n\t\tif (trunk)\r\n\t\t\tthis._currentMaterialGroup.url = trunk[1];\r\n\t\tthis._currentGroup.materialGroups.push(this._currentMaterialGroup);\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next vertex coordinates.\r\n\t * @param trunk The data block containing the vertex tag and its parameters\r\n\t */\r\n\tprivate parseVertex(trunk)\r\n\t{\r\n\t\t//for the very rare cases of other delimiters/charcodes seen in some obj files\r\n\r\n\t\tvar v1:number, v2:number , v3:number;\r\n\t\tif (trunk.length > 4) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\r\n\t\t\tv1 = <number> nTrunk[0];\r\n\t\t\tv2 = <number> nTrunk[1];\r\n\t\t\tv3 = <number> -nTrunk[2];\r\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\r\n\r\n\t\t} else {\r\n\t\t\tv1 = <number> parseFloat(trunk[1]);\r\n\t\t\tv2 = <number> parseFloat(trunk[2]);\r\n\t\t\tv3 = <number> -parseFloat(trunk[3]);\r\n\r\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next uv coordinates.\r\n\t * @param trunk The data block containing the uv tag and its parameters\r\n\t */\r\n\tprivate parseUV(trunk)\r\n\t{\r\n\t\tif (trunk.length > 3) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\t\t\tthis._uvs.push(new UV(nTrunk[0], 1 - nTrunk[1]));\r\n\r\n\t\t} else {\r\n\t\t\tthis._uvs.push(new UV(parseFloat(trunk[1]), 1 - parseFloat(trunk[2])));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next vertex normal coordinates.\r\n\t * @param trunk The data block containing the vertex normal tag and its parameters\r\n\t */\r\n\tprivate parseVertexNormal(trunk)\r\n\t{\r\n\t\tif (trunk.length > 4) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\t\t\tthis._vertexNormals.push(new Vertex(nTrunk[0], nTrunk[1], -nTrunk[2]));\r\n\r\n\t\t} else {\r\n\t\t\tthis._vertexNormals.push(new Vertex(parseFloat(trunk[1]), parseFloat(trunk[2]), -parseFloat(trunk[3])));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next face's indices.\r\n\t * @param trunk The data block containing the face tag and its parameters\r\n\t */\r\n\tprivate parseFace(trunk)\r\n\t{\r\n\t\tvar len:number = trunk.length;\r\n\t\tvar face:FaceData = new FaceData();\r\n\r\n\t\tif (!this._currentGroup) {\r\n\t\t\tthis.createGroup(null);\r\n\t\t}\r\n\r\n\t\tvar indices;\r\n\t\tfor (var i:number = 1; i < len; ++i) {\r\n\r\n\t\t\tif (trunk[i] == \"\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tindices = trunk[i].split(\"/\");\r\n\t\t\tface.vertexIndices.push(this.parseIndex(parseInt(indices[0]), this._vertices.length));\r\n\r\n\t\t\tif (indices[1] && String(indices[1]).length > 0)\r\n\t\t\t\tface.uvIndices.push(this.parseIndex(parseInt(indices[1]), this._uvs.length));\r\n\r\n\t\t\tif (indices[2] && String(indices[2]).length > 0)\r\n\t\t\t\tface.normalIndices.push(this.parseIndex(parseInt(indices[2]), this._vertexNormals.length));\r\n\r\n\t\t\tface.indexIds.push(trunk[i]);\r\n\t\t}\r\n\r\n\t\tthis._currentMaterialGroup.faces.push(face);\r\n\t}\r\n\r\n\t/**\r\n\t * This is a hack around negative face coords\r\n\t */\r\n\tprivate parseIndex(index:number, length:number):number\r\n\t{\r\n\t\tif (index < 0)\r\n\t\t\treturn index + length + 1; else\r\n\t\t\treturn index;\r\n\t}\r\n\r\n\tprivate parseMtl(data:string)\r\n\t{\r\n\t\tvar materialDefinitions = data.split('newmtl');\r\n\t\tvar lines;\r\n\t\tvar trunk;\r\n\t\tvar j:number;\r\n\r\n\t\tvar basicSpecularMethod:SpecularBasicMethod;\r\n\t\tvar useSpecular:boolean;\r\n\t\tvar useColor:boolean;\r\n\t\tvar diffuseColor:number;\r\n\t\tvar color:number;\r\n\t\tvar specularColor:number;\r\n\t\tvar specular:number;\r\n\t\tvar alpha:number;\r\n\t\tvar mapkd:string;\r\n\r\n\t\tfor (var i:number = 0; i < materialDefinitions.length; ++i) {\r\n\r\n\r\n\t\t\tlines = (materialDefinitions[i].split('\\r')).join(\"\").split('\\n');\r\n\t\t\t//lines = (materialDefinitions[i].split('\\r') as Array).join(\"\").split('\\n');\r\n\r\n\t\t\tif (lines.length == 1)\r\n\t\t\t\tlines = materialDefinitions[i].split(String.fromCharCode(13));\r\n\r\n\t\t\tdiffuseColor = color = specularColor = 0xFFFFFF;\r\n\t\t\tspecular = 0;\r\n\t\t\tuseSpecular = false;\r\n\t\t\tuseColor = false;\r\n\t\t\talpha = 1;\r\n\t\t\tmapkd = \"\";\r\n\r\n\t\t\tfor (j = 0; j < lines.length; ++j) {\r\n\r\n\t\t\t\tlines[j] = lines[j].replace(/\\s+$/, \"\");\r\n\r\n\t\t\t\tif (lines[j].substring(0, 1) != \"#\" && (j == 0 || lines[j] != \"\")) {\r\n\t\t\t\t\ttrunk = lines[j].split(\" \");\r\n\r\n\t\t\t\t\tif (String(trunk[0]).charCodeAt(0) == 9 || String(trunk[0]).charCodeAt(0) == 32)\r\n\t\t\t\t\t\ttrunk[0] = trunk[0].substring(1, trunk[0].length);\r\n\r\n\t\t\t\t\tif (j == 0) {\r\n\t\t\t\t\t\tthis._lastMtlID = trunk.join(\"\");\r\n\t\t\t\t\t\tthis._lastMtlID = (this._lastMtlID == \"\")? \"def000\" : this._lastMtlID;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tswitch (trunk[0]) {\r\n\r\n\t\t\t\t\t\t\tcase \"Ka\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3])))\r\n\t\t\t\t\t\t\t\t\tcolor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Ks\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\r\n\t\t\t\t\t\t\t\t\tspecularColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\t\tuseSpecular = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Ns\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\r\n\t\t\t\t\t\t\t\t\tspecular = Number(trunk[1])*0.001;\r\n\t\t\t\t\t\t\t\tif (specular == 0)\r\n\t\t\t\t\t\t\t\t\tuseSpecular = false;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Kd\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\r\n\t\t\t\t\t\t\t\t\tdiffuseColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\t\tuseColor = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"tr\":\r\n\t\t\t\t\t\t\tcase \"d\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\r\n\t\t\t\t\t\t\t\t\talpha = Number(trunk[1]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"map_Kd\":\r\n\t\t\t\t\t\t\t\tmapkd = this.parseMapKdString(trunk);\r\n\t\t\t\t\t\t\t\tmapkd = mapkd.replace(/\\\\/g, \"/\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (mapkd != \"\") {\r\n\r\n\t\t\t\tif (useSpecular) {\r\n\r\n\t\t\t\t\tbasicSpecularMethod = new SpecularBasicMethod();\r\n\t\t\t\t\tbasicSpecularMethod.color = specularColor;\r\n\t\t\t\t\tbasicSpecularMethod.strength = specular;\r\n\r\n\t\t\t\t\tvar specularData:SpecularData = new SpecularData();\r\n\t\t\t\t\tspecularData.alpha = alpha;\r\n\t\t\t\t\tspecularData.basicSpecularMethod = basicSpecularMethod;\r\n\t\t\t\t\tspecularData.materialID = this._lastMtlID;\r\n\r\n\t\t\t\t\tif (!this._materialSpecularData)\r\n\t\t\t\t\t\tthis._materialSpecularData = new Array<SpecularData>();\r\n\r\n\t\t\t\t\tthis._materialSpecularData.push(specularData);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pAddDependency(this._lastMtlID, new URLRequest(mapkd));\r\n\r\n\t\t\t} else if (useColor && !isNaN(color)) {\r\n\r\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\t\tlm.materialID = this._lastMtlID;\r\n\r\n\t\t\t\tif (alpha == 0)\r\n\t\t\t\t\tconsole.log(\"Warning: an alpha value of 0 was found in mtl color tag (Tr or d) ref:\" + this._lastMtlID + \", sprite(es) using it will be invisible!\");\r\n\r\n\t\t\t\tvar cm:MethodMaterial = new MethodMaterial(color);\r\n\r\n\t\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\t\tcm.alpha = alpha;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcm.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcm.diffuseMethod.color = diffuseColor;\r\n\r\n\t\t\t\tif (useSpecular) {\r\n\t\t\t\t\tcm.specularMethod.color = specularColor;\r\n\t\t\t\t\tcm.specularMethod.strength = specular;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlm.cm = cm;\r\n\r\n\t\t\t\tthis._materialLoaded.push(lm);\r\n\r\n\t\t\t\tif (this._sprites.length > 0)\r\n\t\t\t\t\tthis.applyMaterial(lm);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._mtlLibLoaded = true;\r\n\t}\r\n\r\n\tprivate parseMapKdString(trunk):string\r\n\t{\r\n\t\tvar url:string = \"\";\r\n\t\tvar i:number;\r\n\t\tvar breakflag:boolean;\r\n\r\n\t\tfor (i = 1; i < trunk.length;) {\r\n\t\t\tswitch (trunk[i]) {\r\n\t\t\t\tcase \"-blendu\":\r\n\t\t\t\tcase \"-blendv\":\r\n\t\t\t\tcase \"-cc\":\r\n\t\t\t\tcase \"-clamp\":\r\n\t\t\t\tcase \"-texres\":\r\n\t\t\t\t\ti += 2; //Skip ahead 1 attribute\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"-mm\":\r\n\t\t\t\t\ti += 3; //Skip ahead 2 attributes\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"-o\":\r\n\t\t\t\tcase \"-s\":\r\n\t\t\t\tcase \"-t\":\r\n\t\t\t\t\ti += 4; //Skip ahead 3 attributes\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreakflag = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (breakflag)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t//Reconstruct URL/filename\r\n\t\tfor (i; i < trunk.length; i++) {\r\n\t\t\turl += trunk[i];\r\n\t\t\turl += \" \";\r\n\t\t}\r\n\r\n\t\t//Remove the extraneous space and/or newline from the right side\r\n\t\turl = url.replace(/\\s+$/, \"\");\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\tprivate loadMtl(mtlurl:string)\r\n\t{\r\n\t\t// Add raw-data dependency to queue and load dependencies now,\r\n\t\t// which will pause the parsing in the meantime.\r\n\t\tthis._pAddDependency('mtl', new URLRequest(mtlurl), true);\r\n\t\tthis._pPauseAndRetrieveDependencies();//\r\n\t}\r\n\r\n\tprivate applyMaterial(lm:LoadedMaterial)\r\n\t{\r\n\t\tvar decomposeID;\r\n\t\tvar sprite:Sprite;\r\n\t\tvar tm:MethodMaterial;\r\n\t\tvar j:number;\r\n\t\tvar specularData:SpecularData;\r\n\r\n\t\tfor (var i:number = 0; i < this._sprites.length; ++i) {\r\n\t\t\tsprite = this._sprites[i];\r\n\t\t\tdecomposeID = sprite.material.name.split(\"~\");\r\n\r\n\t\t\tif (decomposeID[0] == lm.materialID) {\r\n\r\n\t\t\t\tif (lm.cm) {\r\n\t\t\t\t\tif (sprite.material)\r\n\t\t\t\t\t\tsprite.material = null;\r\n\t\t\t\t\tsprite.material = lm.cm;\r\n\r\n\t\t\t\t} else if (lm.texture) {\r\n\t\t\t\t\ttm = <MethodMaterial > sprite.material;\r\n\r\n\t\t\t\t\ttm.ambientMethod.texture = lm.texture;\r\n\t\t\t\t\ttm.style.color = lm.color;\r\n\t\t\t\t\ttm.alpha = lm.alpha;\r\n\t\t\t\t\ttm.style.sampler = new Sampler2D(true);\r\n\r\n\t\t\t\t\tif (this.materialMode < 2) // if materialMode is 0 or 1, we create a SinglePass\r\n\t\t\t\t\t\ttm.alpha = lm.alpha;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\ttm.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\tif (lm.specularMethod) {\r\n\r\n\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\r\n\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\r\n\t\t\t\t\t\t// the new method being overridden with the settings from the old\r\n\t\t\t\t\t\t// one, which is default behavior of the setter.\r\n\t\t\t\t\t\ttm.specularMethod = null;\r\n\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\r\n\r\n\t\t\t\t\t} else if (this._materialSpecularData) {\r\n\r\n\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\r\n\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\r\n\r\n\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\r\n\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\r\n\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\r\n\t\t\t\t\t\t\t\ttm.specularMethod.color = specularData.color;\r\n\t\t\t\t\t\t\t\ttm.specularMethod.strength = specularData.alpha;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsprite.material.name = decomposeID[1]? decomposeID[1] : decomposeID[0];\r\n\t\t\t\tthis._sprites.splice(i, 1);\r\n\t\t\t\t--i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lm.cm || tm)\r\n\t\t\tthis._pFinalizeAsset(lm.cm || tm);\r\n\t}\r\n\r\n\tprivate applyMaterials()\r\n\t{\r\n\t\tif (this._materialLoaded.length == 0)\r\n\t\t\treturn;\r\n\r\n\t\tfor (var i:number = 0; i < this._materialLoaded.length; ++i)\r\n\t\t\tthis.applyMaterial(this._materialLoaded[i]);\r\n\t}\r\n}\r\n\r\nexport default OBJParser;\r\n\r\nclass ObjectGroup\r\n{\r\n\tpublic name:string;\r\n\tpublic groups:Group[] = new Array<Group>();\r\n}\r\n\r\nclass Group\r\n{\r\n\tpublic name:string;\r\n\tpublic materialID:string;\r\n\tpublic materialGroups:MaterialGroup[] = new Array<MaterialGroup>();\r\n}\r\n\r\nclass MaterialGroup\r\n{\r\n\tpublic url:string;\r\n\tpublic faces:FaceData[] = new Array<FaceData>();\r\n}\r\n\r\nclass SpecularData\r\n{\r\n\tpublic materialID:string;\r\n\tpublic basicSpecularMethod:SpecularBasicMethod;\r\n\tpublic color:number = 0xFFFFFF;\r\n\tpublic alpha:number = 1;\r\n}\r\n\r\nclass LoadedMaterial\r\n{\r\n\tpublic materialID:string;\r\n\tpublic texture:Single2DTexture;\r\n\tpublic cm:MaterialBase;\r\n\tpublic specularMethod:SpecularBasicMethod;\r\n\tpublic color:number = 0xFFFFFF;\r\n\tpublic alpha:number = 1;\r\n}\r\n\r\nclass FaceData\r\n{\r\n\tpublic vertexIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic uvIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic normalIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic indexIds:string[] = new Array<string>(); // used for real index lookups\r\n}\r\n\r\n/**\r\n* Texture coordinates value object.\r\n*/\r\nclass UV\r\n{\r\n\tprivate _u:number;\r\n\tprivate _v:number;\r\n\r\n\t/**\r\n\t * Creates a new <code>UV</code> object.\r\n\t *\r\n\t * @param    u        [optional]    The horizontal coordinate of the texture value. Defaults to 0.\r\n\t * @param    v        [optional]    The vertical coordinate of the texture value. Defaults to 0.\r\n\t */\r\n\tconstructor(u:number = 0, v:number = 0)\r\n\t{\r\n\t\tthis._u = u;\r\n\t\tthis._v = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the vertical coordinate of the texture value.\r\n\t */\r\n\tpublic get v():number\r\n\t{\r\n\t\treturn this._v;\r\n\t}\r\n\r\n\tpublic set v(value:number)\r\n\t{\r\n\t\tthis._v = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the horizontal coordinate of the texture value.\r\n\t */\r\n\tpublic get u():number\r\n\t{\r\n\t\treturn this._u;\r\n\t}\r\n\r\n\tpublic set u(value:number)\r\n\t{\r\n\t\tthis._u = value;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new UV value Object\r\n\t */\r\n\tpublic clone():UV\r\n\t{\r\n\t\treturn new UV(this._u, this._v);\r\n\t}\r\n\r\n\t/**\r\n\t * returns the value object as a string for trace/debug purpose\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn this._u + \",\" + this._v;\r\n\t}\r\n}\r\n\r\nclass Vertex\r\n{\r\n\tprivate _x:number;\r\n\tprivate _y:number;\r\n\tprivate _z:number;\r\n\tprivate _index:number;\r\n\r\n\t/**\r\n\t * Creates a new <code>Vertex</code> value object.\r\n\t *\r\n\t * @param    x            [optional]    The x value. Defaults to 0.\r\n\t * @param    y            [optional]    The y value. Defaults to 0.\r\n\t * @param    z            [optional]    The z value. Defaults to 0.\r\n\t * @param    index        [optional]    The index value. Defaults is NaN.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, index:number = 0)\r\n\t{\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._index = index;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the index of value object\r\n\t * @param    ind        The index\r\n\t */\r\n\tpublic set index(ind:number)\r\n\t{\r\n\t\tthis._index = ind;\r\n\t}\r\n\r\n\tpublic get index():number\r\n\t{\r\n\t\treturn this._index;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the x value of the value object\r\n\t * @param    value        The x value\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tthis._x = value;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the y value of the value object\r\n\t * @param    value        The y value\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tthis._y = value;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the z value of the value object\r\n\t * @param    value        The z value\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(value:number)\r\n\t{\r\n\t\tthis._z = value;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new Vertex value Object\r\n\t */\r\n\tpublic clone():Vertex\r\n\t{\r\n\t\treturn new Vertex(this._x, this._y, this._z);\r\n\t}\r\n}",
    "import Loader\t\t\t\t\t\t\tfrom \"awayjs-core/lib/library/Loader\";\r\n\r\nimport AWDParser\t\t\t\t\t\tfrom \"./AWDParser\";\r\nimport Max3DSParser\t\t\t\t\t\tfrom \"./Max3DSParser\";\r\nimport MD2Parser\t\t\t\t\t\tfrom \"./MD2Parser\";\r\nimport OBJParser\t\t\t\t\t\tfrom \"./OBJParser\";\r\n\r\n/**\r\n *\r\n */\r\nclass Parsers\r\n{\r\n\t/**\r\n\t * A list of all parsers that come bundled with Away3D. Use this to quickly\r\n\t * enable support for all bundled parsers to the file format auto-detection\r\n\t * feature, using any of the enableParsers() methods on loaders, e.g.:\r\n\t *\r\n\t * <code>AssetLibrary.enableParsers(Parsers.ALL_BUNDLED);</code>\r\n\t *\r\n\t * Beware however that this requires all parser classes to be included in the\r\n\t * SWF file, which will add 50-100 kb to the file. When only a limited set of\r\n\t * file formats are used, SWF file size can be saved by adding the parsers\r\n\t * individually using AssetLibrary.enableParser()\r\n\t *\r\n\t * A third way is to specify a parser for each loaded file, thereby bypassing\r\n\t * the auto-detection mechanisms altogether, while at the same time allowing\r\n\t * any properties that are unique to that parser to be set for that load.\r\n\t *\r\n\t * The bundled parsers are:\r\n\t *\r\n\t * <ul>\r\n\t * <li>AC3D (.ac)</li>\r\n\t * <li>Away Data version 1 ASCII and version 2 binary (.awd). AWD1 BSP unsupported</li>\r\n\t * <li>3DMax (.3ds)</li>\r\n\t * <li>DXF (.dxf)</li>\r\n\t * <li>Quake 2 MD2 models (.md2)</li>\r\n\t * <li>Doom 3 MD5 animation clips (.md5anim)</li>\r\n\t * <li>Doom 3 MD5 sprites (.md5sprite)</li>\r\n\t * <li>Wavefront OBJ (.obj)</li>\r\n\t * <li>Collada (.dae)</li>\r\n\t * <li>Images (.jpg, .png)</li>\r\n\t * </ul>\r\n\t *\r\n\t * @see away.library.AssetLibrary.enableParser\r\n\t */\r\n\tpublic static ALL_BUNDLED:Array<Object> = Array<Object>(AWDParser, Max3DSParser, MD2Parser, OBJParser);\r\n\r\n\t/**\r\n\t * Short-hand function to enable all bundled parsers for auto-detection. In practice,\r\n\t * this is the same as invoking enableParsers(Parsers.ALL_BUNDLED) on any of the\r\n\t * loader classes SingleFileLoader, LoaderSession, AssetLibrary or Loader3D.\r\n\t *\r\n\t * See notes about file size in the documentation for the ALL_BUNDLED constant.\r\n\t *\r\n\t * @see away.parsers.Parsers.ALL_BUNDLED\r\n\t */\r\n\tpublic static enableAllBundled():void\r\n\t{\r\n\t\tLoader.enableParsers(Parsers.ALL_BUNDLED);\r\n\t}\r\n}\r\n\r\nexport default Parsers;"
  ]
}