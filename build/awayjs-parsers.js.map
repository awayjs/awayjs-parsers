{
  "version": 3,
  "sources": [
    "node_modules\\browserify\\node_modules\\browser-pack\\_prelude.js",
    "awayjs-parsers/lib/AWDParser.ts",
    "awayjs-parsers/lib/MD2Parser.ts",
    "awayjs-parsers/lib/MD5AnimParser.ts",
    "awayjs-parsers/lib/MD5MeshParser.ts",
    "awayjs-parsers/lib/Max3DSParser.ts",
    "awayjs-parsers/lib/OBJParser.ts",
    "awayjs-parsers/lib/Parsers.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\r\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\r\nimport BitmapCubeTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapCubeTexture\");\r\nimport BitmapTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\r\nimport CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\nimport ImageCubeTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageCubeTexture\");\r\nimport ImageTexture\t\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport TextureProxyBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\r\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\r\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\r\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\r\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\r\n\r\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-renderergl/lib/managers/DefaultMaterialManager\");\r\n\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\r\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\r\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\r\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\r\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\r\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\r\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\r\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\r\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\r\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\r\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\r\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\r\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\r\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\r\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\r\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\r\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\r\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\r\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\r\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\r\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\r\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\r\n\r\nimport TimelineSceneGraphFactory = require(\"awayjs-player/lib/fl/factories/TimelineSceneGraphFactory\");\r\nimport AS2SceneGraphFactory = require(\"awayjs-player/lib/fl/factories/AS2SceneGraphFactory\");\r\nimport MovieClip = require(\"awayjs-player/lib/fl/display/MovieClip\");\r\nimport TimelineKeyFrame = require(\"awayjs-player/lib/fl/timeline/TimelineKeyFrame\");\r\nimport AddChildCommand = require(\"awayjs-player/lib/fl/timeline/commands/AddChildCommand\");\r\nimport UpdatePropertyCommand = require(\"awayjs-player/lib/fl/timeline/commands/UpdatePropertyCommand\");\r\nimport RemoveChildCommand = require(\"awayjs-player/lib/fl/timeline/commands/RemoveChildCommand\");\r\nimport ApplyAS2DepthsCommand = require(\"awayjs-player/lib/fl/timeline/commands/ApplyAS2DepthsCommand\");\r\n\r\n/**\r\n * AWDParser provides a parser for the AWD data type.\r\n */\r\nclass AWDParser extends ParserBase\r\n{\r\n    //set to \"true\" to have some console.logs in the Console\r\n    private _debug:boolean = false;\r\n    private _byteData:ByteArray;\r\n    private _startedParsing:boolean = false;\r\n    private _cur_block_id:number;\r\n    private _blocks:Array<AWDBlock>;\r\n    private _newBlockBytes:ByteArray;\r\n    private _version:Array<number>;\r\n    private _compression:number;\r\n    private _accuracyOnBlocks:boolean;\r\n    private _accuracyMatrix:boolean;\r\n    private _accuracyGeo:boolean;\r\n    private _accuracyProps:boolean;\r\n    private _matrixNrType:number;\r\n    private _geoNrType:number;\r\n    private _propsNrType:number;\r\n    private _streaming:boolean;\r\n    private _texture_users:Object = {};\r\n    private _parsed_header:boolean = false;\r\n    private _body:ByteArray;\r\n    private _defaultTexture:BitmapTexture;     // HTML IMAGE TEXTURE >? !\r\n    private _cubeTextures:Array<any>;\r\n    private _defaultBitmapMaterial:MethodMaterial;\r\n    private _defaultCubeTexture:BitmapCubeTexture;\r\n\r\n    public static COMPRESSIONMODE_LZMA:string = \"lzma\";\r\n    public static UNCOMPRESSED:number = 0;\r\n    public static DEFLATE:number = 1;\r\n    public static LZMA:number = 2;\r\n    public static INT8:number = 1;\r\n    public static INT16:number = 2;\r\n    public static INT32:number = 3;\r\n    public static UINT8:number = 4;\r\n    public static UINT16:number = 5;\r\n    public static UINT32:number = 6;\r\n    public static FLOAT32:number = 7;\r\n    public static FLOAT64:number = 8;\r\n    public static BOOL:number = 21;\r\n    public static COLOR:number = 22;\r\n    public static BADDR:number = 23;\r\n    public static AWDSTRING:number = 31;\r\n    public static AWDBYTEARRAY:number = 32;\r\n    public static VECTOR2x1:number = 41;\r\n    public static VECTOR3x1:number = 42;\r\n    public static VECTOR4x1:number = 43;\r\n    public static MTX3x2:number = 44;\r\n    public static MTX3x3:number = 45;\r\n    public static MTX4x3:number = 46;\r\n    public static MTX4x4:number = 47;\r\n\r\n    private blendModeDic:Array<string>;\r\n    private _depthSizeDic:Array<number>;\r\n\r\n    /**\r\n     * Creates a new AWDParser object.\r\n     * @param uri The url or id of the data or file to be parsed.\r\n     * @param extra The holder for extra contextual data that the parser might need.\r\n     */\r\n    constructor()\r\n    {\r\n        super(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n        this._blocks = new Array<AWDBlock>();\r\n        this._blocks[0] = new AWDBlock();\r\n        this._blocks[0].data = null; // Zero address means null in AWD\r\n\r\n        this.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\r\n        this.blendModeDic.push(BlendMode.NORMAL);\r\n        this.blendModeDic.push(BlendMode.ADD);\r\n        this.blendModeDic.push(BlendMode.ALPHA);\r\n        this.blendModeDic.push(BlendMode.DARKEN);\r\n        this.blendModeDic.push(BlendMode.DIFFERENCE);\r\n        this.blendModeDic.push(BlendMode.ERASE);\r\n        this.blendModeDic.push(BlendMode.HARDLIGHT);\r\n        this.blendModeDic.push(BlendMode.INVERT);\r\n        this.blendModeDic.push(BlendMode.LAYER);\r\n        this.blendModeDic.push(BlendMode.LIGHTEN);\r\n        this.blendModeDic.push(BlendMode.MULTIPLY);\r\n        this.blendModeDic.push(BlendMode.NORMAL);\r\n        this.blendModeDic.push(BlendMode.OVERLAY);\r\n        this.blendModeDic.push(BlendMode.SCREEN);\r\n        this.blendModeDic.push(BlendMode.SHADER);\r\n        this.blendModeDic.push(BlendMode.OVERLAY);\r\n\r\n        this._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\r\n        this._depthSizeDic.push(256);\r\n        this._depthSizeDic.push(512);\r\n        this._depthSizeDic.push(2048);\r\n        this._depthSizeDic.push(1024);\r\n        this._version = Array<number>(); // will contain 2 int (major-version, minor-version) for awd-version-check\r\n    }\r\n\r\n    /**\r\n     * Indicates whether or not a given file extension is supported by the parser.\r\n     * @param extension The file extension of a potential file to be parsed.\r\n     * @return Whether or not the given file type is supported.\r\n     */\r\n    public static supportsType(extension:string):boolean\r\n    {\r\n        extension = extension.toLowerCase();\r\n        return extension == \"awd\";\r\n    }\r\n\r\n    /**\r\n     * Tests whether a data block can be parsed by the parser.\r\n     * @param data The data block to potentially be parsed.\r\n     * @return Whether or not the given data is supported.\r\n     */\r\n    public static supportsData(data:any):boolean\r\n    {\r\n        return (ParserUtils.toString(data, 3) == 'AWD');\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    public _iResolveDependency(resourceDependency:ResourceDependency)\r\n    {\r\n        // this will be called when Dependency has finished loading.\r\n        // the Assets waiting for this Bitmap, can be Texture or CubeTexture.\r\n        // if the Bitmap is awaited by a CubeTexture, we need to check if its the last Bitmap of the CubeTexture,\r\n        // so we know if we have to finalize the Asset (CubeTexture) or not.\r\n        if (resourceDependency.assets.length == 1) {\r\n            var isCubeTextureArray:Array<string> = resourceDependency.id.split(\"#\");\r\n            var ressourceID:string = isCubeTextureArray[0];\r\n            var asset:TextureProxyBase;\r\n            var thisBitmapTexture:Texture2DBase;\r\n            var block:AWDBlock;\r\n\r\n            if (isCubeTextureArray.length == 1) // Not a cube texture\r\n            {\r\n                asset = <Texture2DBase> resourceDependency.assets[0];\r\n                if (asset) {\r\n                    var mat:MethodMaterial;\r\n                    var users:Array<string>;\r\n\r\n                    block = this._blocks[ resourceDependency.id ];\r\n                    block.data = asset; // Store finished asset\r\n\r\n                    // Reset name of texture to the one defined in the AWD file,\r\n                    // as opposed to whatever the image parser came up with.\r\n                    asset.resetAssetPath(block.name, null, true);\r\n                    block.name = asset.name;\r\n                    // Finalize texture asset to dispatch texture event, which was\r\n                    // previously suppressed while the dependency was loaded.\r\n                    this._pFinalizeAsset(<IAsset> asset);\r\n\r\n                    if (this._debug) {\r\n                        console.log(\"Successfully loaded Bitmap for texture\");\r\n                        console.log(\"Parsed texture: Name = \" + block.name);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (isCubeTextureArray.length > 1) // Cube Texture\r\n            {\r\n                thisBitmapTexture = <BitmapTexture> resourceDependency.assets[0];\r\n\r\n                var tx:ImageTexture = <ImageTexture> thisBitmapTexture;\r\n\r\n                this._cubeTextures[ isCubeTextureArray[1] ] = tx.htmlImageElement; // ?\r\n                this._texture_users[ressourceID].push(1);\r\n\r\n                if (this._debug) {\r\n                    console.log(\"Successfully loaded Bitmap \" + this._texture_users[ressourceID].length + \" / 6 for Cubetexture\");\r\n                }\r\n                if (this._texture_users[ressourceID].length == this._cubeTextures.length) {\r\n\r\n                    var posX:any = this._cubeTextures[0];\r\n                    var negX:any = this._cubeTextures[1];\r\n                    var posY:any = this._cubeTextures[2];\r\n                    var negY:any = this._cubeTextures[3];\r\n                    var posZ:any = this._cubeTextures[4];\r\n                    var negZ:any = this._cubeTextures[5];\r\n\r\n                    asset = <TextureProxyBase> new ImageCubeTexture(posX, negX, posY, negY, posZ, negZ);\r\n                    block = this._blocks[ressourceID];\r\n                    block.data = asset; // Store finished asset\r\n\r\n                    // Reset name of texture to the one defined in the AWD file,\r\n                    // as opposed to whatever the image parser came up with.\r\n                    asset.resetAssetPath(block.name, null, true);\r\n                    block.name = asset.name;\r\n                    // Finalize texture asset to dispatch texture event, which was\r\n                    // previously suppressed while the dependency was loaded.\r\n                    this._pFinalizeAsset(<IAsset> asset);\r\n                    if (this._debug) {\r\n                        console.log(\"Parsed CubeTexture: Name = \" + block.name);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    public _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n    {\r\n        //not used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\r\n        // this means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\r\n    }\r\n\r\n    /**\r\n     * Resolve a dependency name\r\n     *\r\n     * @param resourceDependency The dependency to be resolved.\r\n     */\r\n    public _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\r\n    {\r\n        var oldName:string = asset.name;\r\n\r\n        if (asset) {\r\n            var block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\r\n            // Reset name of texture to the one defined in the AWD file,\r\n            // as opposed to whatever the image parser came up with.\r\n            asset.resetAssetPath(block.name, null, true);\r\n        }\r\n\r\n        var newName:string = asset.name;\r\n\r\n        asset.name = oldName;\r\n\r\n        return newName;\r\n\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    public _pProceedParsing():boolean\r\n    {\r\n\r\n        if (!this._startedParsing) {\r\n            this._byteData = this._pGetByteData();//getByteData();\r\n            this._startedParsing = true;\r\n        }\r\n\r\n        if (!this._parsed_header) {\r\n\r\n            //----------------------------------------------------------------------------\r\n            // LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n            //----------------------------------------------------------------------------\r\n            //this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n            //----------------------------------------------------------------------------\r\n\r\n            //----------------------------------------------------------------------------\r\n            // Parse header and decompress body if needed\r\n            this.parseHeader();\r\n\r\n            switch (this._compression) {\r\n\r\n                case AWDParser.DEFLATE:\r\n                case AWDParser.LZMA:\r\n                    this._pDieWithError('Compressed AWD formats not yet supported');\r\n                    break;\r\n\r\n                case AWDParser.UNCOMPRESSED:\r\n                    this._body = this._byteData;\r\n                    break;\r\n\r\n                //----------------------------------------------------------------------------\r\n                // Compressed AWD Formats not yet supported\r\n                //----------------------------------------------------------------------------\r\n\r\n                /*\r\n                 case AWDParser.DEFLATE:\r\n\r\n                 this._body = new ByteArray();\r\n                 this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n                 this._body.uncompress();\r\n\r\n                 break;\r\n                 case AWDParser.LZMA:\r\n\r\n                 this._body = new ByteArray();\r\n                 this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n                 this._body.uncompress(COMPRESSIONMODE_LZMA);\r\n\r\n                 break;\r\n                 //*/\r\n\r\n            }\r\n\r\n            this._parsed_header = true;\r\n\r\n            //----------------------------------------------------------------------------\r\n            // LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n            //----------------------------------------------------------------------------\r\n            //this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n            //----------------------------------------------------------------------------\r\n\r\n        }\r\n\r\n        if (this._body) {\r\n\r\n            while (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\r\n            {\r\n                this.parseNextBlock();\r\n\r\n            }\r\n\r\n            //----------------------------------------------------------------------------\r\n            // Return complete status\r\n            if (this._body.getBytesAvailable() == 0) {\r\n                this.dispose();\r\n                return  ParserBase.PARSING_DONE;\r\n            } else {\r\n                return  ParserBase.MORE_TO_PARSE;\r\n            }\r\n        } else {\r\n\r\n            switch (this._compression) {\r\n\r\n                case AWDParser.DEFLATE:\r\n                case AWDParser.LZMA:\r\n\r\n                    if (this._debug) {\r\n                        console.log(\"(!) AWDParser Error: Compressed AWD formats not yet supported (!)\");\r\n                    }\r\n\r\n                    break;\r\n\r\n            }\r\n            // Error - most likely _body not set because we do not support compression.\r\n            return  ParserBase.PARSING_DONE;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public _pStartParsing(frameLimit:number)\r\n    {\r\n        super._pStartParsing(frameLimit);\r\n\r\n        //create a content object for Loaders\r\n        this._pContent = new DisplayObjectContainer();\r\n    }\r\n\r\n    private dispose():void\r\n    {\r\n\r\n        for (var c in this._blocks) {\r\n\r\n            var b:AWDBlock = <AWDBlock> this._blocks[ c ];\r\n            b.dispose();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private parseNextBlock():void\r\n    {\r\n        var block:AWDBlock;\r\n        var assetData:IAsset;\r\n        var isParsed:boolean = false;\r\n        var ns:number;\r\n        var type:number;\r\n        var flags:number;\r\n        var len:number;\r\n\r\n        this._cur_block_id = this._body.readUnsignedInt();\r\n\r\n        ns = this._body.readUnsignedByte();\r\n        type = this._body.readUnsignedByte();\r\n        flags = this._body.readUnsignedByte();\r\n        len = this._body.readUnsignedInt();\r\n\r\n        var blockCompression:boolean = BitFlags.test(flags, BitFlags.FLAG4);\r\n        var blockCompressionLZMA:boolean = BitFlags.test(flags, BitFlags.FLAG5);\r\n\r\n        if (this._accuracyOnBlocks) {\r\n            this._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG1);\r\n            this._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG2);\r\n            this._accuracyProps = BitFlags.test(flags, BitFlags.FLAG3);\r\n            this._geoNrType = AWDParser.FLOAT32;\r\n\r\n            if (this._accuracyGeo) {\r\n                this._geoNrType = AWDParser.FLOAT64;\r\n            }\r\n\r\n            this._matrixNrType = AWDParser.FLOAT32;\r\n\r\n            if (this._accuracyMatrix) {\r\n                this._matrixNrType = AWDParser.FLOAT64;\r\n            }\r\n\r\n            this._propsNrType = AWDParser.FLOAT32;\r\n\r\n            if (this._accuracyProps) {\r\n                this._propsNrType = AWDParser.FLOAT64;\r\n            }\r\n        }\r\n\r\n        var blockEndAll:number = this._body.position + len;\r\n\r\n        if (len > this._body.getBytesAvailable()) {\r\n            this._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\r\n            this._body.position += this._body.getBytesAvailable();\r\n            return;\r\n        }\r\n        this._newBlockBytes = new ByteArray();\r\n\r\n\r\n        this._body.readBytes(this._newBlockBytes, 0, len);\r\n\r\n        //----------------------------------------------------------------------------\r\n        // Compressed AWD Formats not yet supported\r\n\r\n        if (blockCompression) {\r\n            this._pDieWithError('Compressed AWD formats not yet supported');\r\n\r\n            /*\r\n             if (blockCompressionLZMA)\r\n             {\r\n             this._newBlockBytes.uncompress(AWDParser.COMPRESSIONMODE_LZMA);\r\n             }\r\n             else\r\n             {\r\n             this._newBlockBytes.uncompress();\r\n             }\r\n             */\r\n\r\n        }\r\n\r\n        //----------------------------------------------------------------------------\r\n        // LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n        //----------------------------------------------------------------------------\r\n        //this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\r\n        //----------------------------------------------------------------------------\r\n\r\n        this._newBlockBytes.position = 0;\r\n        block = new AWDBlock();\r\n        block.len = this._newBlockBytes.position + len;\r\n        block.id = this._cur_block_id;\r\n\r\n        var blockEndBlock:number = this._newBlockBytes.position + len;\r\n\r\n        if (blockCompression) {\r\n            this._pDieWithError('Compressed AWD formats not yet supported');\r\n            //blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\r\n            //block.len       = blockEndBlock;\r\n        }\r\n\r\n        if (this._debug) {\r\n            console.log(\"AWDBlock:  ID = \" + this._cur_block_id + \" | TypeID = \" + type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\r\n        }\r\n\r\n        this._blocks[this._cur_block_id] = block;\r\n\r\n        if ((this._version[0] == 3) && (this._version[1] == 0)) {\r\n            // probably should contain some info about the type of animation\r\n            var factory = new AS2SceneGraphFactory();\r\n\r\n            switch (type) {\r\n                case 44:\r\n                    this.parseAduioBlock(this._cur_block_id, factory);\r\n                    isParsed = true;\r\n                    break;\r\n                case 4:// just because i used blockID 4 in first exporter earlier\r\n                case 133:\r\n                    this.parseTimeLine(this._cur_block_id, factory);\r\n                    isParsed = true;\r\n                    break;\r\n            }\r\n        }\r\n        if ((this._version[0] > 2)||((this._version[0] >= 2) && (this._version[1] >= 1))) {\r\n\r\n            switch (type) {\r\n                case 11:\r\n                    this.parsePrimitves(this._cur_block_id);\r\n                    isParsed = true;\r\n                    break;\r\n                case 31:\r\n                    this.parseSkyboxInstance(this._cur_block_id);\r\n                    isParsed = true;\r\n                    break;\r\n                case 41:\r\n                    this.parseLight(this._cur_block_id);\r\n                    isParsed = true;\r\n                    break;\r\n                case 42:\r\n                    this.parseCamera(this._cur_block_id);\r\n                    isParsed = true;\r\n                    break;\r\n\r\n                //  case 43:\r\n                //      parseTextureProjector(_cur_block_id);\r\n                //      isParsed = true;\r\n                //      break;\r\n\r\n                case 51:\r\n                    this.parseLightPicker(this._cur_block_id);\r\n                    isParsed = true;\r\n                    break;\r\n                case 81:\r\n                    this.parseMaterial_v1(this._cur_block_id);\r\n                    isParsed = true;\r\n                    break;\r\n                case 83:\r\n                    this.parseCubeTexture(this._cur_block_id);\r\n                    isParsed = true;\r\n                    break;\r\n                case 91:\r\n                    this.parseSharedMethodBlock(this._cur_block_id);\r\n                    isParsed = true;\r\n                    break;\r\n                case 92:\r\n                    this.parseShadowMethodBlock(this._cur_block_id);\r\n                    isParsed = true;\r\n                    break;\r\n                case 111:\r\n                    this.parseMeshPoseAnimation(this._cur_block_id, true);\r\n                    isParsed = true;\r\n                    break;\r\n                case 112:\r\n                    this.parseMeshPoseAnimation(this._cur_block_id);\r\n                    isParsed = true;\r\n                    break;\r\n                case 113:\r\n                    this.parseVertexAnimationSet(this._cur_block_id);\r\n                    isParsed = true;\r\n                    break;\r\n                case 122:\r\n                    this.parseAnimatorSet(this._cur_block_id);\r\n                    isParsed = true;\r\n                    break;\r\n                case 253:\r\n                    this.parseCommand(this._cur_block_id);\r\n                    isParsed = true;\r\n                    break;\r\n            }\r\n            //*/\r\n        }\r\n        //*\r\n        if (isParsed == false) {\r\n            switch (type) {\r\n\r\n                case 1:\r\n                    this.parseTriangleGeometrieBlock(this._cur_block_id);\r\n                    break;\r\n                case 22:\r\n                    this.parseContainer(this._cur_block_id);\r\n                    break;\r\n                case 23:\r\n                    this.parseMeshInstance(this._cur_block_id);\r\n                    break;\r\n                case 81:\r\n                    this.parseMaterial(this._cur_block_id);\r\n                    break;\r\n                case 82:\r\n                    this.parseTexture(this._cur_block_id);\r\n                    break;\r\n                case 101:\r\n                    this.parseSkeleton(this._cur_block_id);\r\n                    break;\r\n                case 102:\r\n                    this.parseSkeletonPose(this._cur_block_id);\r\n                    break;\r\n                case 103:\r\n                    this.parseSkeletonAnimation(this._cur_block_id);\r\n                    break;\r\n                case 121:\r\n                //this.parseUVAnimation(this._cur_block_id);\r\n                //break;\r\n                case 254:\r\n                    this.parseNameSpace(this._cur_block_id);\r\n                    break;\r\n                case 255:\r\n                    this.parseMetaData(this._cur_block_id);\r\n                    break;\r\n                default:\r\n                    if (this._debug) {\r\n                        console.log(\"AWDBlock:   Unknown BlockType  (BlockID = \" + this._cur_block_id + \") - Skip \" + len + \" bytes\");\r\n                    }\r\n                    this._newBlockBytes.position += len;\r\n                    break;\r\n            }\r\n        }\r\n        //*/\r\n\r\n        var msgCnt:number = 0;\r\n        if (this._newBlockBytes.position == blockEndBlock) {\r\n            if (this._debug) {\r\n                if (block.errorMessages) {\r\n                    while (msgCnt < block.errorMessages.length) {\r\n                        console.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\r\n                        msgCnt++;\r\n                    }\r\n                }\r\n            }\r\n            if (this._debug) {\r\n                console.log(\"\\n\");\r\n            }\r\n        } else {\r\n            if (this._debug) {\r\n\r\n                console.log(\"  (!)(!)(!) Error while reading AWDBlock ID \" + this._cur_block_id + \" = skip to next block\");\r\n\r\n                if (block.errorMessages) {\r\n                    while (msgCnt < block.errorMessages.length) {\r\n                        console.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\r\n                        msgCnt++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this._body.position = blockEndAll;\r\n        this._newBlockBytes = null;\r\n\r\n    }\r\n\r\n\r\n    //--Parser Blocks---------------------------------------------------------------------------\r\n\r\n    private parseAduioBlock(blockID:number, factory:TimelineSceneGraphFactory):void {\r\n\r\n        //var asset:Audio;todo create asset for audio\r\n\r\n        this._blocks[blockID].name = this.parseVarStr();\r\n\r\n        var type:number = this._newBlockBytes.readUnsignedByte();\r\n        var data_len:number;\r\n\r\n        //this._texture_users[this._cur_block_id.toString()] = [];\r\n\r\n        // External\r\n        if (type == 0) {\r\n            data_len = this._newBlockBytes.readUnsignedInt();\r\n            var url:string;\r\n            url = this._newBlockBytes.readUTFBytes(data_len);\r\n            // todo parser needs to be able to handle mp3 and wav files if we trigger the loading of external ressource\r\n            //this._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\r\n            console.log(\"Audio url = \"+url);\r\n\r\n        } else {\r\n            // todo: exporter does not export embed sounds yet\r\n            data_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n            var data:ByteArray;\r\n            data = new ByteArray();\r\n            this._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n            // todo parse sound from bytes\r\n            // this._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.by(data), true);\r\n            //this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\r\n\r\n        }\r\n\r\n        // Ignore for now\r\n        this.parseProperties(null);\r\n        this._blocks[blockID].extras = this.parseUserAttributes();\r\n        this._pPauseAndRetrieveDependencies();\r\n        //this._blocks[blockID].data = asset;todo\r\n\r\n        if (this._debug) {\r\n            var textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n            console.log(\"Start parsing a \" + textureStylesNames[type] + \" Audio file\");\r\n        }\r\n    }\r\n\r\n    //Block ID = 4\r\n    private parseTimeLine(blockID:number, factory:TimelineSceneGraphFactory):void {\r\n\r\n        var i:number;\r\n        var j:number;\r\n        var k:number;\r\n        var timeLineContainer = factory.createMovieClip();\r\n        var name = this.parseVarStr();\r\n        var isScene = !!this._newBlockBytes.readUnsignedByte();\r\n        var sceneID = this._newBlockBytes.readUnsignedByte();\r\n        var fps:number = this._newBlockBytes.readFloat();\r\n        var ms_per_frame = 1000 / fps;\r\n        var numFrames = this._newBlockBytes.readUnsignedShort();\r\n        var objectIDMap : { [id:string]:number; } = {};\r\n\r\n        // var previousTimeLine:TimeLineFrame;\r\n        // var fill_props:AWDProperties = this.parseProperties({1:AWDParser.UINT32});// { 1:UINT32, 6:AWDSTRING }  ); //; , 2:UINT32, 3:UINT32, 5:BOOL } );\r\n\r\n        if (this._debug)\r\n            console.log(\"Parsed a TIMELINE: Name = \" + name + \"| isScene = \" + isScene + \"| sceneID = \" + sceneID + \"| numFrames = \" + numFrames);\r\n\r\n        var totalDuration = 0;\r\n        for (i = 0; i < numFrames; i++) {\r\n\r\n            var frame = new TimelineKeyFrame();\r\n            var traceString = \"frame = \" + i;\r\n            // TODO: remove the ms_per_frame to set the duration in frames\r\n            var frameDuration = this._newBlockBytes.readUnsignedInt() * ms_per_frame;\r\n            frame.setFrameTime(totalDuration, frameDuration);\r\n            totalDuration += frameDuration;\r\n            //console.log(\"duration = \" + frameDuration);\r\n\r\n            var numLabels = this._newBlockBytes.readUnsignedShort();\r\n            for (j = 0; j < numLabels; j++) {\r\n                var labelType = this._newBlockBytes.readUnsignedByte();\r\n                var label = this.parseVarStr();\r\n                // TODO: Handle labels differently\r\n                //timeLineContainer.addFrameLabel(new FrameLabel(label, labelType, frame));\r\n                traceString += \"\\n     label = \" + label + \" - labelType = \" + labelType;\r\n            }\r\n\r\n            var numCommands = this._newBlockBytes.readUnsignedShort();\r\n            var commandString = \"\\n      Commands \" + numCommands;\r\n            var hasDepthChanges = false;\r\n            for (j = 0; j < numCommands; j++) {\r\n                var objectID:number;\r\n                var resourceID:number;\r\n                var commandType = this._newBlockBytes.readUnsignedShort();\r\n\r\n                // 1 = Add object by local id (awd-block-id) + update properties\r\n                // 2 = Add object by global id (string identifier) + update properties !Not used yet.!\r\n                // 3 = UpdateObject - update a object that is already present\r\n                // 4 = remove object\r\n                // 5 = add / update sound\r\n\r\n                switch (commandType) {\r\n\r\n                    case 1:\r\n                    case 2:\r\n                    case 3:\r\n\r\n                        objectID = this._newBlockBytes.readUnsignedInt();\r\n                        var instanceID=0; // must be set in folling conditions:\r\n                        if (commandType==1) {\r\n                            // this commands looks for a object by awd-id and puts it into the timeline\r\n                            resourceID = this._newBlockBytes.readUnsignedInt();\r\n\r\n                            var newChild;\r\n\r\n                            var numFills = this._newBlockBytes.readUnsignedShort();\r\n                            commandString += \"\\n                number of fills = \" + numFills;\r\n\r\n                            // sound is added to timeline with dedicated Command, as it is no display-object (has no matrix etc)\r\n                            // check if a Geometry can be found at the resourceID (AWD-ID)\r\n                            var returnedArray:any[] = this.getAssetByID(resourceID, [ AssetType.GEOMETRY ]);\r\n                            if (returnedArray[0]) {\r\n                                var geom = <Geometry>returnedArray[1];\r\n                                newChild = new Mesh(geom);\r\n                                // geometry found. create new Command, add the props and the materials to it\r\n                                for (k = 0; k < numFills; k++) {\r\n                                    var returnedArray2:any[] = this.getAssetByID(this._newBlockBytes.readUnsignedInt(), [ AssetType.MATERIAL ]);\r\n                                    if (returnedArray2[0] && newChild.subMeshes.length > k)\r\n                                        newChild.subMeshes[k].material = returnedArray2[1];\r\n                                }\r\n\r\n                            }\r\n                            else {\r\n                                // no geometry found, so we check for TIMELINE.\r\n                                // there should be no fills in this case, but geometry check might have failed, and fill-ids still need to be parsed\r\n                                for (k = 0; k < numFills; k++)\r\n                                    this._newBlockBytes.readUnsignedInt();\r\n\r\n                                var returnedArray:any[] = this.getAssetByID(resourceID, [ AssetType.TIMELINE ]);\r\n                                if (returnedArray[0])\r\n                                    newChild = <MovieClip>returnedArray[1];\r\n                            }\r\n\r\n                            instanceID = timeLineContainer.registerPotentialChild(newChild);\r\n                            objectIDMap[objectID] = instanceID;\r\n                            frame.addConstructCommand(new AddChildCommand(instanceID));\r\n\r\n                            var instanceName = this.parseVarStr();\r\n                            if (instanceName.length) {\r\n                                frame.addConstructCommand(new UpdatePropertyCommand(instanceID, \"name\", instanceName));\r\n                                commandString += \"\\n                instanceName = \" + instanceName;\r\n                            }\r\n                            commandString += \"\\n      - Add new Resource = \" + resourceID + \" as object_id = \" + objectID;\r\n                        }\r\n                        else if (commandType==2) {\r\n                            // this commands looks for a object by global string identifier and puts it into the timeline\r\n                            // this is not used yet, but might be useful to do things like text-localization\r\n                            var global_ressource_id = this.parseVarStr();\r\n                            // todo (if needed)\r\n                        }\r\n                        else {\r\n                            instanceID = objectIDMap[objectID];\r\n                            commandString += \"\\n      - Update object_id = \" + objectID;\r\n                        }\r\n                        // read the command properties\r\n                        // 1: matrix2d (6 x number with storage precision matrix)\r\n                        // 2: matrix2d (12 x number with storage precision matrix) not used yet\r\n                        // 3: colortransform (20 x number with storage precision properties)\r\n                        // 4: blendmode (uint8)\r\n                        // 5: visibilty (uint8)\r\n                        // 6: depth (uint32)\r\n                        // 7: mask (uint32)\r\n\r\n                        var props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._propsNrType, 4:AWDParser.UINT8, 5:AWDParser.UINT8, 6:AWDParser.UINT32, 7:AWDParser.UINT32});\r\n\r\n                        var matrix_2d:Float32Array = props.get(1, []);\r\n                        //var matrix_3d:Float32Array = props.get(2, []);\r\n                        var colortransform:Float32Array = props.get(3, []);\r\n                        var blendmode:number = props.get(4, -1);\r\n                        var visibilty:number = props.get(5, -1);\r\n                        var depth:number = props.get(6, -1);\r\n                        var mask:number = props.get(7, -1);\r\n                        // todo: handle filters\r\n\r\n                        //matrix2d must provide 6 values to be valid\r\n\r\n                        commandString += \"\\n                transformArray = \" + matrix_2d.length;\r\n                        if (matrix_2d.length==6) {\r\n                            var thisMatrix = new Matrix3D();\r\n                            // todo set rotation + scale from matrix 2x3 to matrix3d\r\n                            thisMatrix.position = new Vector3D(matrix_2d[4], matrix_2d[5], 0);\r\n                            frame.addConstructCommand(new UpdatePropertyCommand(instanceID, \"_iMatrix3D\", thisMatrix));\r\n\r\n                            commandString += \"\\n                transformArray = \" + matrix_2d;\r\n                        }\r\n                        //matrix2d must provide 20 values to be valid\r\n                        if (colortransform.length==20) {\r\n                            // TODO: set ColorTransform on objectProps\r\n                            commandString += \"\\n                colorMatrix = \" + colortransform;\r\n                        }\r\n\r\n                        // blendmode must be positive to be valid\r\n                        if (blendmode>=0) {\r\n                            var blendmode_string:string = this.blendModeDic[blendmode];\r\n                            // TODO: set Blendmode on objectProps\r\n                            commandString += \"\\n                BlendMode = \" + blendmode_string;\r\n                        }\r\n                        // visibilty must be positive to be valid\r\n                        if (visibilty>=0) {\r\n                            if(visibilty==0)\r\n                                frame.addConstructCommand(new UpdatePropertyCommand(instanceID, \"visible\", false));\r\n                            else\r\n                                frame.addConstructCommand(new UpdatePropertyCommand(instanceID, \"visible\", true));\r\n                        }\r\n                        // depth must be positive to be valid\r\n                        if (depth>=0) {\r\n                            commandString += \"\\n                Depth = \" + depth;\r\n                            frame.addConstructCommand(new UpdatePropertyCommand(instanceID, \"__AS2Depth\", depth));\r\n                            hasDepthChanges = true;\r\n                        }\r\n                        // mask must be positive to be valid. i think only add-commands will have this value.\r\n                        // e.g. it should never be updated on already existing objects. (because depth of objects can change, i am not sure)\r\n                        if (mask>=0) {\r\n                            commandString += \"\\n                Mask-up to obj-id: \" + mask;\r\n                            // TODO: set depthClipChange on objectProps\r\n                        }\r\n                        // todo: handle filters\r\n                        break;\r\n\r\n                    case 4:\r\n\r\n                        // Remove Object Command\r\n                        objectID = this._newBlockBytes.readUnsignedInt();\r\n                        var instanceID = objectIDMap[objectID];\r\n                        frame.addConstructCommand(new RemoveChildCommand(instanceID));\r\n                        commandString += \"\\n       - Remove object with ID: \" + objectID;\r\n                        break;\r\n\r\n                    case 5:\r\n\r\n                        // Add Sound Command\r\n                        // TODO: create CommandPropsSound and check which asset to use\r\n                        objectID = this._newBlockBytes.readUnsignedInt();\r\n                        resourceID = this._newBlockBytes.readUnsignedInt();\r\n                        // TODO: implement sound in timeline\r\n                        commandString += \"\\n      - Add new Sound AWD-ID = \" + resourceID.toString() + \" as object_id = \" + objectID.toString();\r\n                        break;\r\n\r\n                    default:\r\n\r\n                        commandString += \"\\n       - Unknown Command Type = \" + commandType;\r\n                        break;\r\n\r\n                }\r\n            }\r\n\r\n            if (hasDepthChanges) {\r\n                // only want to do this once after all children's depth values are updated\r\n                frame.addConstructCommand(new ApplyAS2DepthsCommand());\r\n                hasDepthChanges = false;\r\n            }\r\n\r\n            var length_code = this._newBlockBytes.readUnsignedInt();\r\n            if (length_code > 0) {\r\n                // TODO: Script should probably not be attached to keyframes?\r\n                var frame_code = this._newBlockBytes.readUTFBytes(length_code);\r\n                //frame.addToScript(frame_code);\r\n                traceString += \"\\nframe-code = \" + frame_code;\r\n            }\r\n            traceString += commandString;\r\n            //trace(\"length_code = \"+length_code+\" frame_code = \"+frame_code);\r\n            this._newBlockBytes.readUnsignedInt();// user attributes - skip for now\r\n            //console.log(traceString);\r\n            timeLineContainer.addFrame(frame);\r\n\r\n        }\r\n\r\n        this._pFinalizeAsset(<IAsset>timeLineContainer, name);\r\n        this._blocks[blockID].data = timeLineContainer;\r\n        this.parseProperties(null);\r\n        this.parseUserAttributes();\r\n    }\r\n\r\n    //Block ID = 1\r\n    private parseTriangleGeometrieBlock(blockID:number):void\r\n    {\r\n\r\n        var geom:Geometry = new Geometry();\r\n\r\n        // Read name and sub count\r\n        var name:string = this.parseVarStr();\r\n        var num_subs:number = this._newBlockBytes.readUnsignedShort();\r\n\r\n        // Read optional properties\r\n        var props:AWDProperties = this.parseProperties({1:this._geoNrType, 2:this._geoNrType});\r\n        var geoScaleU:number = props.get(1, 1);\r\n        var geoScaleV:number = props.get(2, 1);\r\n\r\n        // Loop through sub meshes\r\n        var subs_parsed:number = 0;\r\n        while (subs_parsed < num_subs) {\r\n            var is_2d_geom:boolean=false;\r\n            var i:number;\r\n            var sm_len:number, sm_end:number;\r\n            var w_indices:Array<number>;\r\n            var weights:Array<number>;\r\n\r\n            sm_len = this._newBlockBytes.readUnsignedInt();\r\n            sm_end = this._newBlockBytes.position + sm_len;\r\n\r\n            var subProps:AWDProperties = this.parseProperties({1:this._geoNrType, 2:this._geoNrType});\r\n            // Loop through data streams\r\n            while (this._newBlockBytes.position < sm_end) {\r\n                var idx:number = 0;\r\n                var uv_idx:number = 0;\r\n                var n_idx:number = 0;\r\n                var t_idx:number = 0;\r\n                var str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n                // Type, field type, length\r\n                str_type = this._newBlockBytes.readUnsignedByte();\r\n                str_ftype = this._newBlockBytes.readUnsignedByte();\r\n                str_len = this._newBlockBytes.readUnsignedInt();\r\n                str_end = this._newBlockBytes.position + str_len;\r\n\r\n                var x:number, y:number, z:number;\r\n\r\n                if (str_type == 1) {//vertex 3d positions\r\n                    var verts:Array<number> = new Array<number>();\r\n\r\n                    while (this._newBlockBytes.position < str_end) {\r\n\r\n                        x = this.readNumber(this._accuracyGeo);\r\n                        y = this.readNumber(this._accuracyGeo);\r\n                        z = this.readNumber(this._accuracyGeo);\r\n\r\n                        verts[idx++] = x;\r\n                        verts[idx++] = y;\r\n                        verts[idx++] = z;\r\n                    }\r\n                } else if (str_type == 2) {//face indicies positions\r\n                    var indices:Array<number> = new Array<number>();\r\n\r\n                    while (this._newBlockBytes.position < str_end) {\r\n                        indices[idx++] = this._newBlockBytes.readUnsignedShort();\r\n                    }\r\n\r\n                } else if (str_type == 3) {\r\n                    var uvs:Array<number> = new Array<number>();\r\n                    while (this._newBlockBytes.position < str_end) {\r\n                        uvs[idx++] = this.readNumber(this._accuracyGeo);\r\n\r\n                    }\r\n                } else if (str_type == 4) {\r\n\r\n                    var normals:Array<number> = new Array<number>();\r\n\r\n                    while (this._newBlockBytes.position < str_end) {\r\n                        normals[idx++] = this.readNumber(this._accuracyGeo);\r\n                    }\r\n\r\n                } else if (str_type == 6) {\r\n                    w_indices = Array<number>();\r\n\r\n                    while (this._newBlockBytes.position < str_end) {\r\n                        w_indices[idx++] = this._newBlockBytes.readUnsignedShort()*3;\r\n                    }\r\n\r\n                } else if (str_type == 7) {\r\n\r\n                    weights = new Array<number>();\r\n\r\n                    while (this._newBlockBytes.position < str_end) {\r\n                        weights[idx++] = this.readNumber(this._accuracyGeo);\r\n                    }\r\n                } else if (str_type == 8) {// 2d-positions - not used yet.\r\n                    this._newBlockBytes.position = str_end;\r\n                } else if (str_type == 9) {// combined vertex3D stream 13 x float32\r\n                    this._newBlockBytes.position = str_end;\r\n                } else if (str_type == 10) {// combined vertex2D stream 9 x float32\r\n\r\n                    var x:number, y:number, z:number;\r\n                    var type:number;\r\n                    var r:number, g:number, b:number,a:number;\r\n                    var u:number, v:number;\r\n\r\n                    var verts:Array<number> = new Array<number>();\r\n                    var uvs:Array<number> = new Array<number>();\r\n                    var normals:Array<number> = new Array<number>();\r\n                    var tangents:Array<number> = new Array<number>();\r\n\r\n                    while (this._newBlockBytes.position < str_end) {\r\n\r\n                        x = this.readNumber(this._accuracyGeo);\r\n                        y = this.readNumber(this._accuracyGeo);\r\n                        z = -0.1 * subs_parsed;\r\n                        //z = subs_parsed;\r\n                        //z = (blockID*0.001) + subs_parsed\r\n                        type = this.readNumber(this._accuracyGeo);\r\n                        u = this.readNumber(this._accuracyGeo);\r\n                        v = this.readNumber(this._accuracyGeo);\r\n                        /* r = this.readNumber(this._accuracyGeo);\r\n                         g = this.readNumber(this._accuracyGeo);\r\n                         b = this.readNumber(this._accuracyGeo);\r\n                         a = this.readNumber(this._accuracyGeo);*/\r\n\r\n                        // while this is true, be parse the vertex-data, so it can be rendered as \"normal\" 3d-geometry\r\n                        if (true) {\r\n                            uvs[idx] = 0.0;\r\n                            normals[idx] = 0.0;\r\n                            verts[idx++] = x;\r\n                            uvs[idx] = 0.0;\r\n                            normals[idx] = 0.0;\r\n                            verts[idx++] = y;\r\n                            normals[idx] = 1.0;\r\n                            verts[idx++] = z;\r\n                        }\r\n                        else{\r\n                            // parse and set-data, so the 3d-geometry contains all data (but is no longer valid for normal 3d-render)\r\n                            // away3d-vertexdata    |   awayJS-shape-data\r\n                            // -----------------------------------------------------------------------\r\n                            // pos.x                |   pos.x\r\n                            // pos.y                |   pos.y\r\n                            // pos.z                |   pos.z (for now we just use this as depth (set each subgeo to its own depth))\r\n                            // normal.x             |   curve-type (0:notCurved, 1: convex, 2:concave)\r\n                            // normal.y             |   alpha\r\n                            // normal.z             |   not used\r\n                            // uv.u                 |   curve.u\r\n                            // uv.v                 |   curve.v\r\n                            // tangent.x            |   red\r\n                            // tangent.y            |   green\r\n                            // tangent.z            |   blue\r\n                            verts[idx++] = x;\r\n                            //uv2[idx] = x;\r\n                            verts[idx++] = y;\r\n                            //uv2[idx] = y;\r\n                            verts[idx++] = z;\r\n                            uvs[uv_idx++] = u;\r\n                            uvs[uv_idx++] = v;\r\n                            normals[n_idx++] = type;\r\n                            normals[n_idx++] = a;\r\n                            normals[n_idx++] = 0;\r\n                            // trace(\"r=\" + r + \" g=\" + g + \" b=\" + b + \" a=\" + a);\r\n                            tangents[t_idx++] = r;\r\n                            tangents[t_idx++] = g;\r\n                            tangents[t_idx++] = b;\r\n                        }\r\n                    }\r\n                } else if (str_type == 11) {// combined vertex2D stream 5 x float32\r\n                    this._newBlockBytes.position = str_end;\r\n                }else {\r\n                    this._newBlockBytes.position = str_end;\r\n                }\r\n\r\n            }\r\n\r\n            this.parseUserAttributes(); // Ignore sub-mesh attributes for now\r\n            var sub_geom:TriangleSubGeometry;\r\n            sub_geom = new TriangleSubGeometry(true);\r\n            if (weights)\r\n                sub_geom.jointsPerVertex = weights.length/(verts.length/3);\r\n            if (normals)\r\n                sub_geom.autoDeriveNormals = false;\r\n            if (uvs)\r\n                sub_geom.autoDeriveUVs = false;\r\n            sub_geom.autoDeriveNormals = false;\r\n            // when rendering as \"normal\" 3d-geometry, we need to autoDerive tangents\r\n            if(true){\r\n                sub_geom.autoDeriveTangents = true;\r\n            }\r\n            sub_geom.updateIndices(indices);\r\n            sub_geom.updatePositions(verts);\r\n            sub_geom.updateVertexNormals(normals);\r\n            sub_geom.updateUVs(uvs);\r\n            sub_geom.updateVertexTangents(null);\r\n            sub_geom.updateJointWeights(weights);\r\n            sub_geom.updateJointIndices(w_indices);\r\n\r\n            var scaleU:number = subProps.get(1, 1);\r\n            var scaleV:number = subProps.get(2, 1);\r\n            var setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\r\n\r\n            if ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\r\n                setSubUVs = true;\r\n                scaleU = geoScaleU/scaleU;\r\n                scaleV = geoScaleV/scaleV;\r\n            }\r\n\r\n            if (setSubUVs)\r\n                sub_geom.scaleUV(scaleU, scaleV);\r\n\r\n            geom.addSubGeometry(sub_geom);\r\n\r\n            // TODO: Somehow map in-sub to out-sub indices to enable look-up\r\n            // when creating meshes (and their material assignments.)\r\n\r\n            subs_parsed++;\r\n        }\r\n        if ((geoScaleU != 1) || (geoScaleV != 1))\r\n            geom.scaleUV(geoScaleU, geoScaleV);\r\n        this.parseUserAttributes();\r\n        this._pFinalizeAsset(<IAsset> geom, name);\r\n        this._blocks[blockID].data = geom;\r\n\r\n        if (this._debug) {\r\n            console.log(\"Parsed a TriangleGeometry: Name = \" + name + \"| Id = \" + sub_geom.id);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //Block ID = 11\r\n    private parsePrimitves(blockID:number):void\r\n    {\r\n        var name:string;\r\n        var prefab:PrefabBase;\r\n        var primType:number;\r\n        var subs_parsed:number;\r\n        var props:AWDProperties;\r\n        var bsm:Matrix3D;\r\n\r\n        // Read name and sub count\r\n        name = this.parseVarStr();\r\n        primType = this._newBlockBytes.readUnsignedByte();\r\n        props = this.parseProperties({101:this._geoNrType, 102:this._geoNrType, 103:this._geoNrType, 110:this._geoNrType, 111:this._geoNrType, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 303:AWDParser.UINT16, 701:AWDParser.BOOL, 702:AWDParser.BOOL, 703:AWDParser.BOOL, 704:AWDParser.BOOL});\r\n\r\n        var primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"]\r\n\r\n        switch (primType) {\r\n            // to do, not all properties are set on all primitives\r\n\r\n            case 1:\r\n                prefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\r\n                break;\r\n\r\n            case 2:\r\n                prefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\r\n                break;\r\n\r\n            case 3:\r\n                prefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\r\n                break;\r\n\r\n            case 4:\r\n                prefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\r\n                if (!props.get(701, true))\r\n                    (<PrimitiveCylinderPrefab>prefab).topClosed = false;\r\n                if (!props.get(702, true))\r\n                    (<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\r\n                if (!props.get(703, true))\r\n                    (<PrimitiveCylinderPrefab>prefab).yUp = false;\r\n\r\n                break;\r\n\r\n            case 5:\r\n                prefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\r\n                break;\r\n\r\n            case 6:\r\n                prefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\r\n                break;\r\n\r\n            case 7:\r\n                prefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\r\n                break;\r\n\r\n            default:\r\n                prefab = new PrefabBase();\r\n                console.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\r\n                break;\r\n        }\r\n\r\n        if ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\r\n            //geom.subGeometries;\r\n            //geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\r\n        }\r\n\r\n        this.parseUserAttributes();\r\n        prefab.name = name;\r\n        this._pFinalizeAsset(prefab, name);\r\n        this._blocks[blockID].data = prefab;\r\n\r\n        if (this._debug) {\r\n            if ((primType < 0) || (primType > 7)) {\r\n                primType = 0;\r\n            }\r\n            console.log(\"Parsed a Primivite: Name = \" + name + \"| type = \" + primitiveTypes[primType]);\r\n        }\r\n    }\r\n\r\n    // Block ID = 22\r\n    private parseContainer(blockID:number):void\r\n    {\r\n        var name:string;\r\n        var par_id:number;\r\n        var mtx:Matrix3D;\r\n        var ctr:DisplayObjectContainer;\r\n        var parent:DisplayObjectContainer;\r\n\r\n        par_id = this._newBlockBytes.readUnsignedInt();\r\n        mtx = this.parseMatrix3D();\r\n        name = this.parseVarStr();\r\n\r\n        var parentName:string = \"Root (TopLevel)\";\r\n        ctr = new DisplayObjectContainer();\r\n        ctr.transform.matrix3D = mtx;\r\n\r\n        var returnedArray:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH]);\r\n\r\n        if (returnedArray[0]) {\r\n            var obj:DisplayObject = (<DisplayObjectContainer> returnedArray[1]).addChild(ctr);\r\n            parentName = (<DisplayObjectContainer> returnedArray[1]).name;\r\n        } else if (par_id > 0) {\r\n            this._blocks[ blockID ].addError(\"Could not find a parent for this ObjectContainer3D\");\r\n        } else {\r\n            //add to the content property\r\n            (<DisplayObjectContainer> this._pContent).addChild(ctr);\r\n        }\r\n\r\n        // in AWD version 2.1 we read the Container properties\r\n        if ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n            var props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\r\n            ctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n        }\r\n        // in other versions we do not read the Container properties\r\n        else {\r\n            this.parseProperties(null);\r\n        }\r\n\r\n        // the extraProperties should only be set for AWD2.1-Files, but is read for both versions\r\n        ctr.extra = this.parseUserAttributes();\r\n\r\n        this._pFinalizeAsset(<IAsset> ctr, name);\r\n        this._blocks[blockID].data = ctr;\r\n\r\n        if (this._debug) {\r\n            console.log(\"Parsed a Container: Name = '\" + name + \"' | Parent-Name = \" + parentName);\r\n        }\r\n    }\r\n\r\n    // Block ID = 23\r\n    private parseMeshInstance(blockID:number):void\r\n    {\r\n        var num_materials:number;\r\n        var materials_parsed:number;\r\n        var parent:DisplayObjectContainer;\r\n        var par_id:number = this._newBlockBytes.readUnsignedInt();\r\n        var mtx:Matrix3D = this.parseMatrix3D();\r\n        var name:string = this.parseVarStr();\r\n        var parentName:string = \"Root (TopLevel)\";\r\n        var data_id:number = this._newBlockBytes.readUnsignedInt();\r\n        var geom:Geometry;\r\n        var returnedArrayGeometry:Array<any> = this.getAssetByID(data_id, [AssetType.GEOMETRY])\r\n\r\n        if (returnedArrayGeometry[0]) {\r\n            geom = <Geometry> returnedArrayGeometry[1];\r\n        } else {\r\n            this._blocks[blockID].addError(\"Could not find a Geometry for this Mesh. A empty Geometry is created!\");\r\n            geom = new Geometry();\r\n        }\r\n\r\n        this._blocks[blockID].geoID = data_id;\r\n        var materials:Array<MaterialBase> = new Array<MaterialBase>();\r\n        num_materials = this._newBlockBytes.readUnsignedShort();\r\n\r\n        var materialNames:Array<string> = new Array<string>();\r\n        materials_parsed = 0;\r\n\r\n        var returnedArrayMaterial:Array<any>;\r\n\r\n        while (materials_parsed < num_materials) {\r\n            var mat_id:number;\r\n            mat_id = this._newBlockBytes.readUnsignedInt();\r\n            returnedArrayMaterial = this.getAssetByID(mat_id, [AssetType.MATERIAL])\r\n            if ((!returnedArrayMaterial[0]) && (mat_id > 0)) {\r\n                this._blocks[blockID].addError(\"Could not find Material Nr \" + materials_parsed + \" (ID = \" + mat_id + \" ) for this Mesh\");\r\n            }\r\n\r\n            var m:MaterialBase = <MaterialBase> returnedArrayMaterial[1];\r\n\r\n            materials.push(m);\r\n            materialNames.push(m.name);\r\n\r\n            materials_parsed++;\r\n        }\r\n\r\n        var mesh:Mesh = new Mesh(geom, null);\r\n        mesh.transform.matrix3D = mtx;\r\n\r\n        var returnedArrayParent:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH])\r\n\r\n        if (returnedArrayParent[0]) {\r\n            var objC:DisplayObjectContainer = <DisplayObjectContainer> returnedArrayParent[1];\r\n            objC.addChild(mesh);\r\n            parentName = objC.name;\r\n        } else if (par_id > 0) {\r\n            this._blocks[blockID].addError(\"Could not find a parent for this Mesh\");\r\n        } else {\r\n            //add to the content property\r\n            (<DisplayObjectContainer> this._pContent).addChild(mesh);\r\n        }\r\n\r\n        if (materials.length >= 1 && mesh.subMeshes.length == 1) {\r\n            mesh.material = materials[0];\r\n        } else if (materials.length > 1) {\r\n            var i:number;\r\n\r\n            // Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\r\n            // than materials, repeat the last material for all remaining sub-meshes.\r\n            for (i = 0; i < mesh.subMeshes.length; i++) {\r\n                mesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\r\n            }\r\n        }\r\n        if ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n            var props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8, 5:AWDParser.BOOL});\r\n            mesh.pivot = new Vector3D(<number>props.get(1, 0), <number>props.get(2, 0), <number> props.get(3, 0));\r\n            mesh.castsShadows = props.get(5, true);\r\n        } else {\r\n            this.parseProperties(null);\r\n        }\r\n\r\n        mesh.extra = this.parseUserAttributes();\r\n\r\n        this._pFinalizeAsset(<IAsset> mesh, name);\r\n        this._blocks[blockID].data = mesh;\r\n\r\n        if (this._debug) {\r\n            console.log(\"Parsed a Mesh: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\r\n        }\r\n    }\r\n\r\n\r\n    //Block ID 31\r\n    private parseSkyboxInstance(blockID:number):void\r\n    {\r\n        var name:string = this.parseVarStr();\r\n        var cubeTexAddr:number = this._newBlockBytes.readUnsignedInt();\r\n\r\n        var returnedArrayCubeTex:Array<any> = this.getAssetByID(cubeTexAddr, [AssetType.TEXTURE], \"CubeTexture\");\r\n        if ((!returnedArrayCubeTex[0]) && (cubeTexAddr != 0))\r\n            this._blocks[blockID].addError(\"Could not find the Cubetexture (ID = \" + cubeTexAddr + \" ) for this Skybox\");\r\n        var asset:Skybox = new Skybox(<ImageCubeTexture> returnedArrayCubeTex[1]);\r\n\r\n        this.parseProperties(null)\r\n        asset.extra = this.parseUserAttributes();\r\n        this._pFinalizeAsset(asset, name);\r\n        this._blocks[blockID].data = asset;\r\n        if (this._debug)\r\n            console.log(\"Parsed a Skybox: Name = '\" + name + \"' | CubeTexture-Name = \" + (<ImageCubeTexture> returnedArrayCubeTex[1]).name);\r\n\r\n    }\r\n\r\n    //Block ID = 41\r\n    private parseLight(blockID:number):void\r\n    {\r\n        var light:LightBase;\r\n        var newShadowMapper:ShadowMapperBase;\r\n\r\n        var par_id:number = this._newBlockBytes.readUnsignedInt();\r\n        var mtx:Matrix3D = this.parseMatrix3D();\r\n        var name:string = this.parseVarStr();\r\n        var lightType:number = this._newBlockBytes.readUnsignedByte();\r\n        var props:AWDProperties = this.parseProperties({1:this._propsNrType, 2:this._propsNrType, 3:AWDParser.COLOR, 4:this._propsNrType, 5:this._propsNrType, 6:AWDParser.BOOL, 7:AWDParser.COLOR, 8:this._propsNrType, 9:AWDParser.UINT8, 10:AWDParser.UINT8, 11:this._propsNrType, 12:AWDParser.UINT16, 21:this._matrixNrType, 22:this._matrixNrType, 23:this._matrixNrType});\r\n        var shadowMapperType:number = props.get(9, 0);\r\n        var parentName:string = \"Root (TopLevel)\";\r\n        var lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\r\n        var shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\r\n\r\n        if (lightType == 1) {\r\n            light = new PointLight();\r\n\r\n            (<PointLight> light).radius = props.get(1, 90000);\r\n            (<PointLight> light).fallOff = props.get(2, 100000);\r\n\r\n            if (shadowMapperType > 0) {\r\n                if (shadowMapperType == 4) {\r\n                    newShadowMapper = new CubeMapShadowMapper();\r\n                }\r\n            }\r\n\r\n            light.transform.matrix3D = mtx;\r\n\r\n        }\r\n\r\n        if (lightType == 2) {\r\n\r\n            light = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\r\n\r\n            if (shadowMapperType > 0) {\r\n                if (shadowMapperType == 1) {\r\n                    newShadowMapper = new DirectionalShadowMapper();\r\n                }\r\n\r\n                //if (shadowMapperType == 2)\r\n                //  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\r\n                //if (shadowMapperType == 3)\r\n                //   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\r\n\r\n            }\r\n\r\n        }\r\n        light.color = props.get(3, 0xffffff);\r\n        light.specular = props.get(4, 1.0);\r\n        light.diffuse = props.get(5, 1.0);\r\n        light.ambientColor = props.get(7, 0xffffff);\r\n        light.ambient = props.get(8, 0.0);\r\n\r\n        // if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\r\n        if (newShadowMapper) {\r\n            if (newShadowMapper instanceof CubeMapShadowMapper) {\r\n                if (props.get(10, 1) != 1) {\r\n                    newShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 1)];\r\n                }\r\n            } else {\r\n                if (props.get(10, 2) != 2) {\r\n                    newShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 2)];\r\n                }\r\n            }\r\n\r\n            light.shadowMapper = newShadowMapper;\r\n            light.castsShadows = true;\r\n        }\r\n\r\n        if (par_id != 0) {\r\n\r\n            var returnedArrayParent:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH])\r\n\r\n            if (returnedArrayParent[0]) {\r\n                (<DisplayObjectContainer> returnedArrayParent[1]).addChild(light);\r\n                parentName = (<DisplayObjectContainer> returnedArrayParent[1]).name;\r\n            } else {\r\n                this._blocks[blockID].addError(\"Could not find a parent for this Light\");\r\n            }\r\n        } else {\r\n            //add to the content property\r\n            (<DisplayObjectContainer> this._pContent).addChild(light);\r\n        }\r\n\r\n        this.parseUserAttributes();\r\n\r\n        this._pFinalizeAsset(< IAsset> light, name);\r\n\r\n        this._blocks[blockID].data = light;\r\n\r\n        if (this._debug)\r\n            console.log(\"Parsed a Light: Name = '\" + name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\r\n\r\n    }\r\n\r\n    //Block ID = 43\r\n    private parseCamera(blockID:number):void\r\n    {\r\n\r\n        var par_id:number = this._newBlockBytes.readUnsignedInt();\r\n        var mtx:Matrix3D = this.parseMatrix3D();\r\n        var name:string = this.parseVarStr();\r\n        var parentName:string = \"Root (TopLevel)\";\r\n        var projection:ProjectionBase;\r\n\r\n        this._newBlockBytes.readUnsignedByte(); //set as active camera\r\n        this._newBlockBytes.readShort(); //lengthof lenses - not used yet\r\n\r\n        var projectiontype:number = this._newBlockBytes.readShort();\r\n        var props:AWDProperties = this.parseProperties({101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 104:this._propsNrType});\r\n\r\n        switch (projectiontype) {\r\n            case 5001:\r\n                projection = new PerspectiveProjection(props.get(101, 60));\r\n                break;\r\n            case 5002:\r\n                projection = new OrthographicProjection(props.get(101, 500));\r\n                break;\r\n            case 5003:\r\n                projection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\r\n                break;\r\n            default:\r\n                console.log(\"unsupportedLenstype\");\r\n                return;\r\n        }\r\n\r\n        var camera:Camera = new Camera(projection);\r\n        camera.transform.matrix3D = mtx;\r\n\r\n        var returnedArrayParent:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH])\r\n\r\n        if (returnedArrayParent[0]) {\r\n\r\n            var objC:DisplayObjectContainer = <DisplayObjectContainer> returnedArrayParent[1];\r\n            objC.addChild(camera);\r\n\r\n            parentName = objC.name;\r\n\r\n        } else if (par_id > 0) {\r\n            this._blocks[blockID].addError(\"Could not find a parent for this Camera\");\r\n        } else {\r\n            //add to the content property\r\n            (<DisplayObjectContainer> this._pContent).addChild(camera);\r\n        }\r\n\r\n        camera.name = name;\r\n        props = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\r\n        camera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n        camera.extra = this.parseUserAttributes();\r\n\r\n        this._pFinalizeAsset(camera, name);\r\n\r\n        this._blocks[blockID].data = camera\r\n\r\n        if (this._debug) {\r\n            console.log(\"Parsed a Camera: Name = '\" + name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\r\n        }\r\n\r\n    }\r\n\r\n    //Block ID = 51\r\n    private parseLightPicker(blockID:number):void\r\n    {\r\n        var name:string = this.parseVarStr();\r\n        var numLights:number = this._newBlockBytes.readUnsignedShort();\r\n        var lightsArray:Array<LightBase> = new Array<LightBase>();\r\n        var k:number = 0;\r\n        var lightID:number = 0;\r\n\r\n        var returnedArrayLight:Array<any>;\r\n        var lightsArrayNames:Array<string> = new Array<string>();\r\n\r\n        for (k = 0; k < numLights; k++) {\r\n            lightID = this._newBlockBytes.readUnsignedInt();\r\n            returnedArrayLight = this.getAssetByID(lightID, [AssetType.LIGHT])\r\n\r\n            if (returnedArrayLight[0]) {\r\n                lightsArray.push(<LightBase> returnedArrayLight[1]);\r\n                lightsArrayNames.push(( <LightBase> returnedArrayLight[1]).name);\r\n\r\n            } else {\r\n                this._blocks[blockID].addError(\"Could not find a Light Nr \" + k + \" (ID = \" + lightID + \" ) for this LightPicker\");\r\n            }\r\n        }\r\n\r\n        if (lightsArray.length == 0) {\r\n            this._blocks[blockID].addError(\"Could not create this LightPicker, cause no Light was found.\");\r\n            this.parseUserAttributes();\r\n            return; //return without any more parsing for this block\r\n        }\r\n\r\n        var lightPick:LightPickerBase = new StaticLightPicker(lightsArray);\r\n        lightPick.name = name;\r\n\r\n        this.parseUserAttributes();\r\n        this._pFinalizeAsset(<IAsset> lightPick, name);\r\n\r\n        this._blocks[blockID].data = lightPick\r\n        if (this._debug) {\r\n            console.log(\"Parsed a StaticLightPicker: Name = '\" + name + \"' | Texture-Name = \" + lightsArrayNames.toString());\r\n        }\r\n    }\r\n\r\n    //Block ID = 81\r\n    private parseMaterial(blockID:number):void\r\n    {\r\n        // TODO: not used\r\n        ////blockLength = block.len;\r\n        var name:string;\r\n        var type:number;\r\n        var props:AWDProperties;\r\n        var mat:MethodMaterial;\r\n        var attributes:Object;\r\n        var finalize:boolean;\r\n        var num_methods:number;\r\n        var methods_parsed:number;\r\n        var returnedArray:Array<any>;\r\n\r\n        name = this.parseVarStr();\r\n        type = this._newBlockBytes.readUnsignedByte();\r\n        num_methods = this._newBlockBytes.readUnsignedByte();\r\n\r\n        // Read material numerical properties\r\n        // (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\r\n        props = this.parseProperties({ 1:AWDParser.INT32, 2:AWDParser.BADDR, 10:this._propsNrType, 11:AWDParser.BOOL, 12:this._propsNrType, 13:AWDParser.BOOL});\r\n\r\n        methods_parsed = 0;\r\n        while (methods_parsed < num_methods) {\r\n            var method_type:number;\r\n\r\n            method_type = this._newBlockBytes.readUnsignedShort();\r\n            this.parseProperties(null);\r\n            this.parseUserAttributes();\r\n            methods_parsed += 1;\r\n        }\r\n        var debugString:string = \"\";\r\n        attributes = this.parseUserAttributes();\r\n        if (type === 1) { // Color material\r\n            debugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n            var color:number;\r\n            color = props.get(1, 0xffffff);\r\n            if (this.materialMode < 2) {\r\n                mat = new MethodMaterial(color, props.get(10, 1.0));\r\n            } else {\r\n                mat = new MethodMaterial(color);\r\n                mat.mode = MethodMaterialMode.MULTI_PASS;\r\n            }\r\n        } else if (type === 2) {\r\n            var tex_addr:number = props.get(2, 0);\r\n\r\n            returnedArray = this.getAssetByID(tex_addr, [AssetType.TEXTURE]);\r\n\r\n            if ((!returnedArray[0]) && (tex_addr > 0))\r\n                this._blocks[blockID].addError(\"Could not find the DiffsueTexture (ID = \" + tex_addr + \" ) for this Material\");\r\n\r\n            mat = new MethodMaterial(<Texture2DBase> returnedArray[1]);\r\n\r\n            if (this.materialMode < 2) {\r\n                mat.alphaBlending = props.get(11, false);\r\n                mat.alpha = props.get(10, 1.0);\r\n                debugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n            } else {\r\n                mat.mode = MethodMaterialMode.MULTI_PASS;\r\n                debugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n            }\r\n        }\r\n\r\n        mat.extra = attributes;\r\n        mat.alphaThreshold = props.get(12, 0.0);\r\n        mat.repeat = props.get(13, false);\r\n        this._pFinalizeAsset(<IAsset> mat, name);\r\n        this._blocks[blockID].data = mat;\r\n\r\n        if (this._debug) {\r\n            console.log(debugString);\r\n\r\n        }\r\n    }\r\n\r\n    // Block ID = 81 AWD2.1\r\n    private parseMaterial_v1(blockID:number):void\r\n    {\r\n        var mat:MethodMaterial;\r\n        var normalTexture:Texture2DBase;\r\n        var specTexture:Texture2DBase;\r\n        var returnedArray:Array<any>;\r\n\r\n        var name:string = this.parseVarStr();\r\n        var type:number = this._newBlockBytes.readUnsignedByte();\r\n        var num_methods:number = this._newBlockBytes.readUnsignedByte();\r\n        var props:AWDProperties = this.parseProperties({1:AWDParser.UINT32, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 4:AWDParser.UINT8, 5:AWDParser.BOOL, 6:AWDParser.BOOL, 7:AWDParser.BOOL, 8:AWDParser.BOOL, 9:AWDParser.UINT8, 10:this._propsNrType, 11:AWDParser.BOOL, 12:this._propsNrType, 13:AWDParser.BOOL, 15:this._propsNrType, 16:AWDParser.UINT32, 17:AWDParser.BADDR, 18:this._propsNrType, 19:this._propsNrType, 20:AWDParser.UINT32, 21:AWDParser.BADDR, 22:AWDParser.BADDR});\r\n        var spezialType:number = props.get(4, 0);\r\n        var debugString:string = \"Parsed Material \";\r\n\r\n        if (spezialType >= 2) {//this is no supported material\r\n            this._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\r\n            return;\r\n        }\r\n\r\n        if (type <= 2) {// Color material\r\n            if (this.materialMode == 1)\r\n                spezialType = 0;\r\n            else if (this.materialMode == 2)\r\n                spezialType = 1;\r\n\r\n            if (spezialType < 2) {//this is SinglePass or MultiPass\r\n\r\n                if (type == 1) {// Color material\r\n                    var color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\r\n\r\n                    if (spezialType == 1) {//\tMultiPassMaterial\r\n                        mat = new MethodMaterial(color);\r\n                        mat.mode = MethodMaterialMode.MULTI_PASS;\r\n                        debugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\r\n\r\n                    } else { //\tSinglePassMaterial\r\n                        mat = new MethodMaterial(color, props.get(10, 1.0));\r\n                        mat.alphaBlending = props.get(11, false);\r\n                        debugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n                    }\r\n\r\n                } else if (type == 2) {// texture material\r\n                    var tex_addr:number = props.get(2, 0);//TODO temporarily swapped so that diffuse texture goes to ambient\r\n                    returnedArray = this.getAssetByID(tex_addr, [AssetType.TEXTURE]);\r\n\r\n                    if ((!returnedArray[0]) && (tex_addr > 0))\r\n                        this._blocks[blockID].addError(\"Could not find the AmbientTexture (ID = \" + tex_addr + \" ) for this MethodMaterial\");\r\n\r\n                    var texture:Texture2DBase = returnedArray[1];\r\n\r\n                    mat = new MethodMaterial(texture);\r\n\r\n                    if (spezialType == 1) {// MultiPassMaterial\r\n                        mat.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n                        debugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + texture.name;\r\n                    } else {//\tSinglePassMaterial\r\n                        mat.alpha = props.get(10, 1.0);\r\n                        mat.alphaBlending = props.get(11, false);\r\n\r\n                        debugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + texture.name;\r\n                    }\r\n                }\r\n\r\n                var diffuseTexture:Texture2DBase;\r\n                var diffuseTex_addr:number = props.get(17, 0);\r\n\r\n                returnedArray = this.getAssetByID(diffuseTex_addr, [AssetType.TEXTURE]);\r\n\r\n                if ((!returnedArray[0]) && (diffuseTex_addr != 0)) {\r\n                    this._blocks[blockID].addError(\"Could not find the DiffuseTexture (ID = \" + diffuseTex_addr + \" ) for this MethodMaterial\");\r\n                }\r\n\r\n                if (returnedArray[0])\r\n                    diffuseTexture = returnedArray[1];\r\n\r\n                if (diffuseTexture) {\r\n                    mat.diffuseTexture = diffuseTexture;\r\n                    debugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\r\n                }\r\n\r\n                var normalTex_addr:number = props.get(3, 0);\r\n\r\n                returnedArray = this.getAssetByID(normalTex_addr, [AssetType.TEXTURE]);\r\n\r\n                if ((!returnedArray[0]) && (normalTex_addr != 0)) {\r\n                    this._blocks[blockID].addError(\"Could not find the NormalTexture (ID = \" + normalTex_addr + \" ) for this MethodMaterial\");\r\n                }\r\n\r\n                if (returnedArray[0]) {\r\n                    normalTexture = returnedArray[1];\r\n                    debugString += \" | NormalTexture-Name = \" + normalTexture.name;\r\n                }\r\n\r\n                var specTex_addr:number = props.get(21, 0);\r\n                returnedArray = this.getAssetByID(specTex_addr, [AssetType.TEXTURE]);\r\n\r\n                if ((!returnedArray[0]) && (specTex_addr != 0)) {\r\n                    this._blocks[blockID].addError(\"Could not find the SpecularTexture (ID = \" + specTex_addr + \" ) for this MethodMaterial\");\r\n                }\r\n                if (returnedArray[0]) {\r\n                    specTexture = returnedArray[1];\r\n                    debugString += \" | SpecularTexture-Name = \" + specTexture.name;\r\n                }\r\n\r\n                var lightPickerAddr:number = props.get(22, 0);\r\n                returnedArray = this.getAssetByID(lightPickerAddr, [AssetType.LIGHT_PICKER])\r\n\r\n                if ((!returnedArray[0]) && (lightPickerAddr)) {\r\n                    this._blocks[blockID].addError(\"Could not find the LightPicker (ID = \" + lightPickerAddr + \" ) for this MethodMaterial\");\r\n                } else {\r\n                    mat.lightPicker = <LightPickerBase> returnedArray[1];\r\n                    //debugString+=\" | Lightpicker-Name = \"+LightPickerBase(returnedArray[1]).name;\r\n                }\r\n\r\n                mat.smooth = props.get(5, true);\r\n                mat.mipmap = props.get(6, true);\r\n                mat.bothSides = props.get(7, false);\r\n                mat.alphaPremultiplied = props.get(8, false);\r\n                mat.blendMode = this.blendModeDic[props.get(9, 0)];\r\n                mat.repeat = props.get(13, false);\r\n\r\n                if (normalTexture)\r\n                    mat.normalMap = normalTexture;\r\n\r\n                if (specTexture)\r\n                    mat.specularMap = specTexture;\r\n\r\n                mat.alphaThreshold = props.get(12, 0.0);\r\n                mat.ambient = props.get(15, 1.0);\r\n                mat.diffuseColor = props.get(16, 0xffffff);\r\n                mat.specular = props.get(18, 1.0);\r\n                mat.gloss = props.get(19, 50);\r\n                mat.specularColor = props.get(20, 0xffffff);\r\n\r\n                var methods_parsed:number = 0;\r\n                var targetID:number;\r\n\r\n                while (methods_parsed < num_methods) {\r\n                    var method_type:number;\r\n                    method_type = this._newBlockBytes.readUnsignedShort();\r\n\r\n                    props = this.parseProperties({\r\n                        1: AWDParser.BADDR,\r\n                        2: AWDParser.BADDR,\r\n                        3: AWDParser.BADDR,\r\n                        101: this._propsNrType,\r\n                        102: this._propsNrType,\r\n                        103: this._propsNrType,\r\n                        201: AWDParser.UINT32,\r\n                        202: AWDParser.UINT32,\r\n                        301: AWDParser.UINT16,\r\n                        302: AWDParser.UINT16,\r\n                        401: AWDParser.UINT8,\r\n                        402: AWDParser.UINT8,\r\n                        601: AWDParser.COLOR,\r\n                        602: AWDParser.COLOR,\r\n                        701: AWDParser.BOOL,\r\n                        702: AWDParser.BOOL,\r\n                        801: AWDParser.MTX4x4\r\n                    });\r\n\r\n                    switch (method_type) {\r\n                        case 999: //wrapper-Methods that will load a previous parsed EffektMethod returned\r\n\r\n                            targetID = props.get(1, 0);\r\n                            returnedArray = this.getAssetByID(targetID, [AssetType.EFFECTS_METHOD]);\r\n\r\n                            if (!returnedArray[0]) {\r\n                                this._blocks[blockID].addError(\"Could not find the EffectMethod (ID = \" + targetID + \" ) for this Material\");\r\n                            } else {\r\n                                mat.addEffectMethod(returnedArray[1]);\r\n\r\n                                debugString += \" | EffectMethod-Name = \" + (<EffectMethodBase> returnedArray[1]).name;\r\n                            }\r\n\r\n                            break;\r\n\r\n                        case 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\r\n\r\n                            targetID = props.get(1, 0);\r\n                            returnedArray = this.getAssetByID(targetID, [AssetType.SHADOW_MAP_METHOD]);\r\n\r\n                            if (!returnedArray[0]) {\r\n                                this._blocks[blockID].addError(\"Could not find the ShadowMethod (ID = \" + targetID + \" ) for this Material\");\r\n                            } else {\r\n                                mat.shadowMethod = returnedArray[1];\r\n                                debugString += \" | ShadowMethod-Name = \" + (<ShadowMethodBase> returnedArray[1]).name;\r\n                            }\r\n\r\n                            break;\r\n\r\n                        case 1: //EnvMapAmbientMethod\r\n                            targetID = props.get(1, 0);\r\n                            returnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE], \"CubeTexture\");\r\n                            if (!returnedArray[0])\r\n                                this._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this EnvMapAmbientMethodMaterial\");\r\n                            mat.ambientMethod = new AmbientEnvMapMethod(returnedArray[1]);\r\n                            debugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + (<CubeTextureBase> returnedArray[1]).name;\r\n                            break;\r\n\r\n                        case 51: //DepthDiffuseMethod\r\n                            mat.diffuseMethod = new DiffuseDepthMethod();\r\n                            debugString += \" | DiffuseDepthMethod\";\r\n                            break;\r\n                        case 52: //GradientDiffuseMethod\r\n                            targetID = props.get(1, 0);\r\n                            returnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\r\n                            if (!returnedArray[0])\r\n                                this._blocks[blockID].addError(\"Could not find the GradientDiffuseTexture (ID = \" + targetID + \" ) for this GradientDiffuseMethod\");\r\n                            mat.diffuseMethod = new DiffuseGradientMethod(returnedArray[1]);\r\n                            debugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + (<Texture2DBase> returnedArray[1]).name;\r\n                            break;\r\n                        case 53: //WrapDiffuseMethod\r\n                            mat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\r\n                            debugString += \" | DiffuseWrapMethod\";\r\n                            break;\r\n                        case 54: //LightMapDiffuseMethod\r\n                            targetID = props.get(1, 0);\r\n                            returnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\r\n                            if (!returnedArray[0])\r\n                                this._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this LightMapDiffuseMethod\");\r\n                            mat.diffuseMethod = new DiffuseLightMapMethod(returnedArray[1], this.blendModeDic[props.get(401, 10)], false, mat.diffuseMethod);\r\n                            debugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + (<Texture2DBase> returnedArray[1]).name;\r\n                            break;\r\n                        case 55: //CelDiffuseMethod\r\n                            mat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\r\n                            (<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\r\n                            debugString += \" | DiffuseCelMethod\";\r\n                            break;\r\n                        case 56: //SubSurfaceScatteringMethod\r\n                            //\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\r\n                            //\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\r\n                            //\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\r\n                            //\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\r\n                            //\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\r\n                            break;\r\n\r\n                        case 101: //AnisotropicSpecularMethod\r\n                            mat.specularMethod = new SpecularAnisotropicMethod();\r\n                            debugString += \" | SpecularAnisotropicMethod\";\r\n                            break;\r\n                        case 102: //SpecularPhongMethod\r\n                            mat.specularMethod = new SpecularPhongMethod();\r\n                            debugString += \" | SpecularPhongMethod\";\r\n                            break;\r\n                        case 103: //CellSpecularMethod\r\n                            mat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\r\n                            (<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\r\n                            debugString += \" | SpecularCelMethod\";\r\n                            break;\r\n                        case 104: //SpecularFresnelMethod\r\n                            mat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\r\n                            (<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\r\n                            (<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\r\n                            debugString += \" | SpecularFresnelMethod\";\r\n                            break;\r\n                        case 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\r\n                            break;\r\n                        case 152: //SimpleWaterNormalMethod\r\n                            targetID = props.get(1, 0);\r\n                            returnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\r\n                            if (!returnedArray[0])\r\n                                this._blocks[blockID].addError(\"Could not find the SecoundNormalMap (ID = \" + targetID + \" ) for this SimpleWaterNormalMethod\");\r\n                            if (!mat.normalMap)\r\n                                this._blocks[blockID].addError(\"Could not find a normal Map on this Material to use with this SimpleWaterNormalMethod\");\r\n\r\n                            mat.normalMap = returnedArray[1];\r\n                            mat.normalMethod = new NormalSimpleWaterMethod(mat.normalMap, returnedArray[1]);\r\n                            debugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + (<Texture2DBase> returnedArray[1]).name;\r\n                            break;\r\n                    }\r\n                    this.parseUserAttributes();\r\n                    methods_parsed += 1;\r\n                }\r\n            }\r\n        }\r\n        else if (type==3){\r\n            var color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\r\n            debugString+=color;\r\n            mat = new MethodMaterial(color, props.get(10, 1.0));\r\n            debugString+= \"alpha = \"+props.get(10, 1.0)+\" \";\r\n            mat.bothSides = true;\r\n\r\n        }\r\n        mat.extra = this.parseUserAttributes();\r\n        this._pFinalizeAsset(<IAsset> mat, name);\r\n\r\n        this._blocks[blockID].data = mat;\r\n        if (this._debug) {\r\n            console.log(debugString);\r\n        }\r\n    }\r\n\r\n    //Block ID = 82\r\n    private parseTexture(blockID:number):void\r\n    {\r\n\r\n        var asset:Texture2DBase;\r\n\r\n        this._blocks[blockID].name = this.parseVarStr();\r\n\r\n        var type:number = this._newBlockBytes.readUnsignedByte();\r\n        var data_len:number;\r\n\r\n        this._texture_users[this._cur_block_id.toString()] = [];\r\n\r\n        // External\r\n        if (type == 0) {\r\n            data_len = this._newBlockBytes.readUnsignedInt();\r\n            var url:string;\r\n            url = this._newBlockBytes.readUTFBytes(data_len);\r\n            this._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\r\n\r\n        } else {\r\n            data_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n            var data:ByteArray;\r\n            data = new ByteArray();\r\n            this._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n            //\r\n            // AWDParser - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\r\n            //\r\n            // Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\r\n            // This gives the browser time to initialise image width / height.\r\n\r\n            this._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\r\n            //this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\r\n\r\n        }\r\n\r\n        // Ignore for now\r\n        this.parseProperties(null);\r\n        this._blocks[blockID].extras = this.parseUserAttributes();\r\n        this._pPauseAndRetrieveDependencies();\r\n        this._blocks[blockID].data = asset;\r\n\r\n        if (this._debug) {\r\n            var textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n            console.log(\"Start parsing a \" + textureStylesNames[type] + \" Bitmap for Texture\");\r\n        }\r\n\r\n    }\r\n\r\n    //Block ID = 83\r\n    private parseCubeTexture(blockID:number):void\r\n    {\r\n        //blockLength = block.len;\r\n        var data_len:number;\r\n        var asset:CubeTextureBase;\r\n        var i:number;\r\n\r\n        this._cubeTextures = new Array<any>();\r\n        this._texture_users[ this._cur_block_id.toString() ] = [];\r\n\r\n        var type:number = this._newBlockBytes.readUnsignedByte();\r\n\r\n        this._blocks[blockID].name = this.parseVarStr();\r\n\r\n        for (i = 0; i < 6; i++) {\r\n            this._texture_users[this._cur_block_id.toString()] = [];\r\n            this._cubeTextures.push(null);\r\n\r\n            // External\r\n            if (type == 0) {\r\n                data_len = this._newBlockBytes.readUnsignedInt();\r\n                var url:string;\r\n                url = this._newBlockBytes.readUTFBytes(data_len);\r\n\r\n                this._pAddDependency(this._cur_block_id.toString() + \"#\" + i, new URLRequest(url), false, null, true);\r\n            } else {\r\n\r\n                data_len = this._newBlockBytes.readUnsignedInt();\r\n                var data:ByteArray;\r\n                data = new ByteArray();\r\n\r\n                this._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n                this._pAddDependency(this._cur_block_id.toString() + \"#\" + i, null, false, ParserUtils.byteArrayToImage(data), true);\r\n            }\r\n        }\r\n\r\n        // Ignore for now\r\n        this.parseProperties(null);\r\n        this._blocks[blockID].extras = this.parseUserAttributes();\r\n        this._pPauseAndRetrieveDependencies();\r\n        this._blocks[blockID].data = asset;\r\n\r\n        if (this._debug) {\r\n            var textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n            console.log(\"Start parsing 6 \" + textureStylesNames[type] + \" Bitmaps for CubeTexture\");\r\n        }\r\n    }\r\n\r\n    //Block ID = 91\r\n    private parseSharedMethodBlock(blockID:number):void\r\n    {\r\n        var asset:EffectMethodBase;\r\n\r\n        this._blocks[blockID].name = this.parseVarStr();\r\n        asset = this.parseSharedMethodList(blockID);\r\n        this.parseUserAttributes();\r\n        this._blocks[blockID].data = asset;\r\n        this._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\r\n        this._blocks[blockID].data = asset;\r\n\r\n        if (this._debug) {\r\n            console.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\r\n        }\r\n    }\r\n\r\n    //Block ID = 92\r\n    private parseShadowMethodBlock(blockID:number):void\r\n    {\r\n        var type:number;\r\n        var data_len:number;\r\n        var asset:ShadowMethodBase;\r\n        var shadowLightID:number;\r\n        this._blocks[blockID].name = this.parseVarStr();\r\n\r\n        shadowLightID = this._newBlockBytes.readUnsignedInt();\r\n        var returnedArray:Array<any> = this.getAssetByID(shadowLightID, [AssetType.LIGHT]);\r\n\r\n        if (!returnedArray[0]) {\r\n            this._blocks[blockID].addError(\"Could not find the TargetLight (ID = \" + shadowLightID + \" ) for this ShadowMethod - ShadowMethod not created\");\r\n            return;\r\n        }\r\n\r\n        asset = this.parseShadowMethodList(<LightBase> returnedArray[1], blockID);\r\n\r\n        if (!asset)\r\n            return;\r\n\r\n        this.parseUserAttributes(); // Ignore for now\r\n        this._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\r\n        this._blocks[blockID].data = asset;\r\n\r\n        if (this._debug) {\r\n            console.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", ( <LightBase> returnedArray[1] ).name);\r\n        }\r\n    }\r\n\r\n\r\n    //Block ID = 253\r\n    private parseCommand(blockID:number):void\r\n    {\r\n        var hasBlocks:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\r\n        var par_id:number = this._newBlockBytes.readUnsignedInt();\r\n        var mtx:Matrix3D = this.parseMatrix3D();\r\n        var name:string = this.parseVarStr();\r\n\r\n        var parentObject:DisplayObjectContainer;\r\n        var targetObject:DisplayObjectContainer;\r\n\r\n        var returnedArray:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH]);\r\n\r\n        if (returnedArray[0]) {\r\n            parentObject = <DisplayObjectContainer> returnedArray[1];\r\n        }\r\n\r\n        var numCommands:number = this._newBlockBytes.readShort();\r\n        var typeCommand:number = this._newBlockBytes.readShort();\r\n\r\n        var props:AWDProperties = this.parseProperties({1:AWDParser.BADDR});\r\n\r\n        switch (typeCommand) {\r\n            case 1:\r\n\r\n                var targetID:number = props.get(1, 0);\r\n                var returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [AssetType.LIGHT, AssetType.TEXTURE_PROJECTOR]); //for no only light is requested!!!!\r\n\r\n                if ((!returnedArrayTarget[0]) && (targetID != 0)) {\r\n                    this._blocks[blockID].addError(\"Could not find the light (ID = \" + targetID + \" ( for this CommandBock!\");\r\n                    return;\r\n                }\r\n\r\n                targetObject = returnedArrayTarget[1];\r\n\r\n                if (parentObject) {\r\n                    parentObject.addChild(targetObject);\r\n                }\r\n\r\n                targetObject.transform.matrix3D = mtx;\r\n\r\n                break;\r\n        }\r\n\r\n        if (targetObject) {\r\n            props = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\r\n\r\n            targetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n            targetObject.extra = this.parseUserAttributes();\r\n\r\n        }\r\n        this._blocks[blockID].data = targetObject\r\n\r\n        if (this._debug) {\r\n            console.log(\"Parsed a CommandBlock: Name = '\" + name);\r\n        }\r\n\r\n    }\r\n\r\n    //blockID 255\r\n    private parseMetaData(blockID:number):void\r\n    {\r\n        var props:AWDProperties = this.parseProperties({1:AWDParser.UINT32, 2:AWDParser.AWDSTRING, 3:AWDParser.AWDSTRING, 4:AWDParser.AWDSTRING, 5:AWDParser.AWDSTRING});\r\n\r\n        if (this._debug) {\r\n            console.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\r\n            console.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\r\n            console.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\r\n            console.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\r\n            console.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\r\n        }\r\n    }\r\n\r\n    //blockID 254\r\n    private parseNameSpace(blockID:number):void\r\n    {\r\n        var id:number = this._newBlockBytes.readUnsignedByte();\r\n        var nameSpaceString:string = this.parseVarStr();\r\n        if (this._debug)\r\n            console.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\r\n    }\r\n\r\n    //--Parser UTILS---------------------------------------------------------------------------\r\n\r\n    // this functions reads and creates a ShadowMethodMethod\r\n    private parseShadowMethodList(light:LightBase, blockID:number):ShadowMethodBase\r\n    {\r\n\r\n        var methodType:number = this._newBlockBytes.readUnsignedShort();\r\n        var shadowMethod:ShadowMethodBase;\r\n        var props:AWDProperties = this.parseProperties({1:AWDParser.BADDR, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 201:AWDParser.UINT32, 202:AWDParser.UINT32, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 401:AWDParser.UINT8, 402:AWDParser.UINT8, 601:AWDParser.COLOR, 602:AWDParser.COLOR, 701:AWDParser.BOOL, 702:AWDParser.BOOL, 801:AWDParser.MTX4x4});\r\n\r\n        var targetID:number;\r\n        var returnedArray:Array<any>\r\n        switch (methodType) {\r\n            //\t\t\t\tcase 1001: //CascadeShadowMapMethod\r\n            //\t\t\t\t\ttargetID = props.get(1, 0);\r\n            //\t\t\t\t\treturnedArray = getAssetByID(targetID, [AssetType.SHADOW_MAP_METHOD]);\r\n            //\t\t\t\t\tif (!returnedArray[0]) {\r\n            //\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this CascadeShadowMapMethod - ShadowMethod not created\");\r\n            //\t\t\t\t\t\treturn shadowMethod;\r\n            //\t\t\t\t\t}\r\n            //\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\r\n            //\t\t\t\t\tbreak;\r\n            case 1002: //ShadowNearMethod\r\n                targetID = props.get(1, 0);\r\n                returnedArray = this.getAssetByID(targetID, [AssetType.SHADOW_MAP_METHOD]);\r\n                if (!returnedArray[0]) {\r\n                    this._blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this ShadowNearMethod - ShadowMethod not created\");\r\n                    return shadowMethod;\r\n                }\r\n                shadowMethod = new ShadowNearMethod(<ShadowMethodBase> returnedArray[1]);\r\n                break;\r\n            case 1101: //ShadowFilteredMethod\r\n\r\n                shadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\r\n                (<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\r\n                (<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n                break;\r\n\r\n            case 1102: //ShadowDitheredMethod\r\n\r\n\r\n                shadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n                (<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\r\n                (<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n                (<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n                break;\r\n            case 1103: //ShadowSoftMethod\r\n\r\n                shadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n                (<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\r\n                (<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n                (<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n                break;\r\n            case 1104: //ShadowHardMethod\r\n                shadowMethod = new ShadowHardMethod(light);\r\n                (<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\r\n                (<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n                break;\r\n\r\n        }\r\n        this.parseUserAttributes();\r\n        return shadowMethod;\r\n    }\r\n\r\n    //Block ID 101\r\n    private parseSkeleton(blockID:number /*uint*/):void\r\n    {\r\n        var name:string = this.parseVarStr();\r\n        var num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n        var skeleton:Skeleton = new Skeleton();\r\n        this.parseProperties(null); // Discard properties for now\r\n\r\n        var joints_parsed:number /*uint*/ = 0;\r\n        while (joints_parsed < num_joints) {\r\n            var joint:SkeletonJoint;\r\n            var ibp:Matrix3D;\r\n            // Ignore joint id\r\n            this._newBlockBytes.readUnsignedShort();\r\n            joint = new SkeletonJoint();\r\n            joint.parentIndex = this._newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\r\n            joint.name = this.parseVarStr();\r\n\r\n            ibp = this.parseMatrix3D();\r\n            joint.inverseBindPose = ibp.rawData;\r\n            // Ignore joint props/attributes for now\r\n            this.parseProperties(null);\r\n            this.parseUserAttributes();\r\n            skeleton.joints.push(joint);\r\n            joints_parsed++;\r\n        }\r\n\r\n        // Discard attributes for now\r\n        this.parseUserAttributes();\r\n        this._pFinalizeAsset(skeleton, name);\r\n        this._blocks[blockID].data = skeleton;\r\n        if (this._debug)\r\n            console.log(\"Parsed a Skeleton: Name = \" + skeleton.name + \" | Number of Joints = \" + joints_parsed);\r\n    }\r\n\r\n    //Block ID = 102\r\n    private parseSkeletonPose(blockID:number /*uint*/):void\r\n    {\r\n        var name:string = this.parseVarStr();\r\n        var num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n        this.parseProperties(null); // Ignore properties for now\r\n\r\n        var pose:SkeletonPose = new SkeletonPose();\r\n\r\n        var joints_parsed:number /*uint*/ = 0;\r\n        while (joints_parsed < num_joints) {\r\n            var joint_pose:JointPose;\r\n            var has_transform:number /*uint*/;\r\n            joint_pose = new JointPose();\r\n            has_transform = this._newBlockBytes.readUnsignedByte();\r\n            if (has_transform == 1) {\r\n                var mtx_data:Array<number> = this.parseMatrix43RawData();\r\n\r\n                var mtx:Matrix3D = new Matrix3D(mtx_data);\r\n                joint_pose.orientation.fromMatrix(mtx);\r\n                joint_pose.translation.copyFrom(mtx.position);\r\n\r\n                pose.jointPoses[joints_parsed] = joint_pose;\r\n            }\r\n            joints_parsed++;\r\n        }\r\n        // Skip attributes for now\r\n        this.parseUserAttributes();\r\n        this._pFinalizeAsset(pose, name);\r\n        this._blocks[blockID].data = pose;\r\n        if (this._debug)\r\n            console.log(\"Parsed a SkeletonPose: Name = \" + pose.name + \" | Number of Joints = \" + joints_parsed);\r\n    }\r\n\r\n    //blockID 103\r\n    private parseSkeletonAnimation(blockID:number /*uint*/):void\r\n    {\r\n        var frame_dur:number;\r\n        var pose_addr:number /*uint*/;\r\n        var name:string = this.parseVarStr();\r\n        var clip:SkeletonClipNode = new SkeletonClipNode();\r\n        var num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n        this.parseProperties(null); // Ignore properties for now\r\n\r\n        var frames_parsed:number /*uint*/ = 0;\r\n        var returnedArray:Array<any>;\r\n        while (frames_parsed < num_frames) {\r\n            pose_addr = this._newBlockBytes.readUnsignedInt();\r\n            frame_dur = this._newBlockBytes.readUnsignedShort();\r\n            returnedArray = this.getAssetByID(pose_addr, [AssetType.SKELETON_POSE]);\r\n            if (!returnedArray[0])\r\n                this._blocks[blockID].addError(\"Could not find the SkeletonPose Frame # \" + frames_parsed + \" (ID = \" + pose_addr + \" ) for this SkeletonClipNode\");\r\n            else\r\n                clip.addFrame(<SkeletonPose> this._blocks[pose_addr].data, frame_dur);\r\n            frames_parsed++;\r\n        }\r\n        if (clip.frames.length == 0) {\r\n            this._blocks[blockID].addError(\"Could not this SkeletonClipNode, because no Frames where set.\");\r\n            return;\r\n        }\r\n        // Ignore attributes for now\r\n        this.parseUserAttributes();\r\n        this._pFinalizeAsset(clip, name);\r\n        this._blocks[blockID].data = clip;\r\n        if (this._debug)\r\n            console.log(\"Parsed a SkeletonClipNode: Name = \" + clip.name + \" | Number of Frames = \" + clip.frames.length);\r\n    }\r\n\r\n    //Block ID = 111 /  Block ID = 112\r\n    private parseMeshPoseAnimation(blockID:number /*uint*/, poseOnly:boolean = false):void\r\n    {\r\n        var num_frames:number /*uint*/ = 1;\r\n        var num_submeshes:number /*uint*/;\r\n        var frames_parsed:number /*uint*/;\r\n        var subMeshParsed:number /*uint*/;\r\n        var frame_dur:number;\r\n        var x:number;\r\n        var y:number;\r\n        var z:number;\r\n        var str_len:number;\r\n        var str_end:number;\r\n        var geometry:Geometry;\r\n        var subGeom:TriangleSubGeometry;\r\n        var idx:number /*int*/ = 0;\r\n        var clip:VertexClipNode = new VertexClipNode();\r\n        var indices:Array<number> /*uint*/;\r\n        var verts:Array<number>;\r\n        var num_Streams:number /*int*/ = 0;\r\n        var streamsParsed:number /*int*/ = 0;\r\n        var streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\r\n        var props:AWDProperties;\r\n        var thisGeo:Geometry;\r\n        var name:string = this.parseVarStr();\r\n        var geoAdress:number /*int*/ = this._newBlockBytes.readUnsignedInt();\r\n        var returnedArray:Array<any> = this.getAssetByID(geoAdress, [AssetType.GEOMETRY]);\r\n        if (!returnedArray[0]) {\r\n            this._blocks[blockID].addError(\"Could not find the target-Geometry-Object \" + geoAdress + \" ) for this VertexClipNode\");\r\n            return;\r\n        }\r\n        var uvs:Array<Array<number>> = this.getUVForVertexAnimation(geoAdress);\r\n        if (!poseOnly)\r\n            num_frames = this._newBlockBytes.readUnsignedShort();\r\n\r\n        num_submeshes = this._newBlockBytes.readUnsignedShort();\r\n        num_Streams = this._newBlockBytes.readUnsignedShort();\r\n        streamsParsed = 0;\r\n        while (streamsParsed < num_Streams) {\r\n            streamtypes.push(this._newBlockBytes.readUnsignedShort());\r\n            streamsParsed++;\r\n        }\r\n        props = this.parseProperties({1:AWDParser.BOOL, 2:AWDParser.BOOL});\r\n\r\n        clip.looping = props.get(1, true);\r\n        clip.stitchFinalFrame = props.get(2, false);\r\n\r\n        frames_parsed = 0;\r\n        while (frames_parsed < num_frames) {\r\n            frame_dur = this._newBlockBytes.readUnsignedShort();\r\n            geometry = new Geometry();\r\n            subMeshParsed = 0;\r\n            while (subMeshParsed < num_submeshes) {\r\n                streamsParsed = 0;\r\n                str_len = this._newBlockBytes.readUnsignedInt();\r\n                str_end = this._newBlockBytes.position + str_len;\r\n                while (streamsParsed < num_Streams) {\r\n                    if (streamtypes[streamsParsed] == 1) {\r\n                        indices = (<Geometry> returnedArray[1]).subGeometries[subMeshParsed].indices;\r\n                        verts = new Array<number>();\r\n                        idx = 0;\r\n                        while (this._newBlockBytes.position < str_end) {\r\n                            x = this.readNumber(this._accuracyGeo)\r\n                            y = this.readNumber(this._accuracyGeo)\r\n                            z = this.readNumber(this._accuracyGeo)\r\n                            verts[idx++] = x;\r\n                            verts[idx++] = y;\r\n                            verts[idx++] = z;\r\n                        }\r\n                        subGeom = new TriangleSubGeometry(true);\r\n                        subGeom.updateIndices(indices);\r\n                        subGeom.updatePositions(verts);\r\n                        subGeom.updateUVs(uvs[subMeshParsed]);\r\n                        subGeom.updateVertexNormals(null);\r\n                        subGeom.updateVertexTangents(null);\r\n                        subGeom.autoDeriveNormals = false;\r\n                        subGeom.autoDeriveTangents = false;\r\n                        subMeshParsed++;\r\n                        geometry.addSubGeometry(subGeom)\r\n                    } else\r\n                        this._newBlockBytes.position = str_end;\r\n                    streamsParsed++;\r\n                }\r\n            }\r\n            clip.addFrame(geometry, frame_dur);\r\n            frames_parsed++;\r\n        }\r\n        this.parseUserAttributes();\r\n        this._pFinalizeAsset(clip, name);\r\n\r\n        this._blocks[blockID].data = clip;\r\n        if (this._debug)\r\n            console.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + (<Geometry> returnedArray[1]).name + \" | Number of Frames = \" + clip.frames.length);\r\n    }\r\n\r\n    //BlockID 113\r\n    private parseVertexAnimationSet(blockID:number /*uint*/):void\r\n    {\r\n        var poseBlockAdress:number /*int*/\r\n        var outputString:string = \"\";\r\n        var name:string = this.parseVarStr();\r\n        var num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n        var props:AWDProperties = this.parseProperties({1:AWDParser.UINT16});\r\n        var frames_parsed:number /*uint*/ = 0;\r\n        var skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\r\n        var vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\r\n        while (frames_parsed < num_frames) {\r\n            poseBlockAdress = this._newBlockBytes.readUnsignedInt();\r\n            var returnedArray:Array<any> = this.getAssetByID(poseBlockAdress, [AssetType.ANIMATION_NODE]);\r\n            if (!returnedArray[0])\r\n                this._blocks[blockID].addError(\"Could not find the AnimationClipNode Nr \" + frames_parsed + \" ( \" + poseBlockAdress + \" ) for this AnimationSet\");\r\n            else {\r\n                if (returnedArray[1] instanceof VertexClipNode)\r\n                    vertexFrames.push(returnedArray[1])\r\n                if (returnedArray[1] instanceof SkeletonClipNode)\r\n                    skeletonFrames.push(returnedArray[1])\r\n            }\r\n            frames_parsed++;\r\n        }\r\n        if ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\r\n            this._blocks[blockID].addError(\"Could not create this AnimationSet, because it contains no animations\");\r\n            return;\r\n        }\r\n        this.parseUserAttributes();\r\n        if (vertexFrames.length > 0) {\r\n            var newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\r\n            for (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\r\n                newVertexAnimationSet.addAnimation(vertexFrames[i]);\r\n            this._pFinalizeAsset(newVertexAnimationSet, name);\r\n            this._blocks[blockID].data = newVertexAnimationSet;\r\n            if (this._debug)\r\n                console.log(\"Parsed a VertexAnimationSet: Name = \" + name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames.toString());\r\n\r\n        } else if (skeletonFrames.length > 0) {\r\n            returnedArray = this.getAssetByID(poseBlockAdress, [AssetType.ANIMATION_NODE]);\r\n            var newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\r\n            for (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\r\n                newSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\r\n            this._pFinalizeAsset(newSkeletonAnimationSet, name);\r\n            this._blocks[blockID].data = newSkeletonAnimationSet;\r\n            if (this._debug)\r\n                console.log(\"Parsed a SkeletonAnimationSet: Name = \" + name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames.toString());\r\n\r\n        }\r\n    }\r\n\r\n    //BlockID 122\r\n    private parseAnimatorSet(blockID:number /*uint*/):void\r\n    {\r\n        var targetMesh:Mesh;\r\n        var animSetBlockAdress:number /*int*/\r\n        var targetAnimationSet:AnimationSetBase;\r\n        var outputString:string = \"\";\r\n        var name:string = this.parseVarStr();\r\n        var type:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\r\n        var props:AWDProperties = this.parseProperties({1:AWDParser.BADDR});\r\n\r\n        animSetBlockAdress = this._newBlockBytes.readUnsignedInt();\r\n        var targetMeshLength:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n        var meshAdresses:Array<number> /*uint*/ = new Array<number>() /*uint*/;\r\n        for (var i:number /*int*/ = 0; i < targetMeshLength; i++)\r\n            meshAdresses.push(this._newBlockBytes.readUnsignedInt());\r\n\r\n        var activeState:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n        var autoplay:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\r\n        this.parseUserAttributes();\r\n        this.parseUserAttributes();\r\n\r\n        var returnedArray:Array<any>;\r\n        var targetMeshes:Array<Mesh> = new Array<Mesh>();\r\n\r\n        for (i = 0; i < meshAdresses.length; i++) {\r\n            returnedArray = this.getAssetByID(meshAdresses[i], [AssetType.MESH]);\r\n            if (returnedArray[0])\r\n                targetMeshes.push(<Mesh> returnedArray[1]);\r\n        }\r\n        returnedArray = this.getAssetByID(animSetBlockAdress, [AssetType.ANIMATION_SET]);\r\n        if (!returnedArray[0]) {\r\n            this._blocks[blockID].addError(\"Could not find the AnimationSet ( \" + animSetBlockAdress + \" ) for this Animator\");;\r\n            return\r\n        }\r\n        targetAnimationSet = <AnimationSetBase> returnedArray[1];\r\n        var thisAnimator:AnimatorBase;\r\n        if (type == 1) {\r\n\r\n            returnedArray = this.getAssetByID(props.get(1, 0), [AssetType.SKELETON]);\r\n            if (!returnedArray[0]) {\r\n                this._blocks[blockID].addError(\"Could not find the Skeleton ( \" + props.get(1, 0) + \" ) for this Animator\");\r\n                return\r\n            }\r\n            thisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, <Skeleton> returnedArray[1]);\r\n\r\n        } else if (type == 2)\r\n            thisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\r\n\r\n        this._pFinalizeAsset(thisAnimator, name);\r\n        this._blocks[blockID].data = thisAnimator;\r\n        for (i = 0; i < targetMeshes.length; i++) {\r\n            if (type == 1)\r\n                targetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\r\n            if (type == 2)\r\n                targetMeshes[i].animator = (<VertexAnimator> thisAnimator);\r\n\r\n        }\r\n        if (this._debug)\r\n            console.log(\"Parsed a Animator: Name = \" + name);\r\n    }\r\n\r\n    // this functions reads and creates a EffectMethod\r\n    private parseSharedMethodList(blockID:number):EffectMethodBase\r\n    {\r\n\r\n        var methodType:number = this._newBlockBytes.readUnsignedShort();\r\n        var effectMethodReturn:EffectMethodBase;\r\n\r\n        var props:AWDProperties = this.parseProperties({1:AWDParser.BADDR, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 104:this._propsNrType, 105:this._propsNrType, 106:this._propsNrType, 107:this._propsNrType, 201:AWDParser.UINT32, 202:AWDParser.UINT32, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 401:AWDParser.UINT8, 402:AWDParser.UINT8, 601:AWDParser.COLOR, 602:AWDParser.COLOR, 701:AWDParser.BOOL, 702:AWDParser.BOOL});\r\n        var targetID:number;\r\n        var returnedArray:Array<any>;\r\n\r\n        switch (methodType) {\r\n            // Effect Methods\r\n            case 401: //ColorMatrix\r\n                effectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\r\n                break;\r\n            case 402: //ColorTransform\r\n                effectMethodReturn = new EffectColorTransformMethod();\r\n                var offCol:number /*uint*/ = props.get(601, 0x00000000);\r\n                (<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\r\n                break;\r\n            case 403: //EnvMap\r\n\r\n                targetID = props.get(1, 0);\r\n                console.log('ENV MAP', targetID);\r\n\r\n\r\n                returnedArray = this.getAssetByID(targetID, [ AssetType.TEXTURE ], \"CubeTexture\");\r\n                if (!returnedArray[0])\r\n                    this._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this EnvMapMethod\");\r\n                effectMethodReturn = new EffectEnvMapMethod(<CubeTextureBase> returnedArray[1], <number> props.get(101, 1));\r\n                targetID = props.get(2, 0);\r\n                if (targetID > 0) {\r\n                    returnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\r\n                    if (!returnedArray[0])\r\n                        this._blocks[blockID].addError(\"Could not find the Mask-texture (ID = \" + targetID + \" ) for this EnvMapMethod\");\r\n\r\n                    // Todo: test mask with EnvMapMethod\r\n                    //(<EnvMapMethod> effectMethodReturn).mask = <Texture2DBase> returnedArray[1];\r\n                }\r\n                break;\r\n            case 404: //LightMapMethod\r\n                targetID = props.get(1, 0);\r\n                returnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\r\n                if (!returnedArray[0])\r\n                    this._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this LightMapMethod\");\r\n                effectMethodReturn = new EffectLightMapMethod(returnedArray[1], this.blendModeDic[props.get(401, 10)]); //usesecondaryUV not set\r\n                break;\r\n            //\t\t\t\tcase 405: //ProjectiveTextureMethod\r\n            //\t\t\t\t\ttargetID = props.get(1, 0);\r\n            //\t\t\t\t\treturnedArray = getAssetByID(targetID, [AssetType.TEXTURE_PROJECTOR]);\r\n            //\t\t\t\t\tif (!returnedArray[0])\r\n            //\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this ProjectiveTextureMethod\");\r\n            //\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\r\n            //\t\t\t\t\tbreak;\r\n            case 406: //RimLightMethod\r\n                effectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\r\n                break;\r\n            case 407: //AlphaMaskMethod\r\n                targetID = props.get(1, 0);\r\n                returnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\r\n                if (!returnedArray[0])\r\n                    this._blocks[blockID].addError(\"Could not find the Alpha-texture (ID = \" + targetID + \" ) for this AlphaMaskMethod\");\r\n                effectMethodReturn = new EffectAlphaMaskMethod(returnedArray[1], props.get(701, false));\r\n                break;\r\n            //\t\t\t\tcase 408: //RefractionEnvMapMethod\r\n            //\t\t\t\t\ttargetID = props.get(1, 0);\r\n            //\t\t\t\t\treturnedArray = getAssetByID(targetID, [AssetType.TEXTURE], \"CubeTexture\");\r\n            //\t\t\t\t\tif (!returnedArray[0])\r\n            //\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this RefractionEnvMapMethod\");\r\n            //\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\r\n            //\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\r\n            //\t\t\t\t\tbreak;\r\n            //\t\t\t\tcase 409: //OutlineMethod\r\n            //\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\r\n            //\t\t\t\t\tbreak;\r\n            case 410: //FresnelEnvMapMethod\r\n                targetID = props.get(1, 0);\r\n                returnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE], \"CubeTexture\");\r\n                if (!returnedArray[0])\r\n                    this._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this FresnelEnvMapMethod\");\r\n                effectMethodReturn = new EffectFresnelEnvMapMethod(returnedArray[1], props.get(101, 1));\r\n                break;\r\n            case 411: //FogMethod\r\n                effectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\r\n                break;\r\n\r\n        }\r\n        this.parseUserAttributes();\r\n        return effectMethodReturn;\r\n\r\n    }\r\n\r\n    private parseUserAttributes():Object\r\n    {\r\n        var attributes:Object;\r\n        var list_len:number;\r\n        var attibuteCnt:number;\r\n\r\n        list_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n        if (list_len > 0) {\r\n\r\n            var list_end:number;\r\n\r\n            attributes = {};\r\n\r\n            list_end = this._newBlockBytes.position + list_len;\r\n\r\n            while (this._newBlockBytes.position < list_end) {\r\n                var ns_id:number;\r\n                var attr_key:string;\r\n                var attr_type:number;\r\n                var attr_len:number;\r\n                var attr_val:any;\r\n\r\n                // TODO: Properly tend to namespaces in attributes\r\n                ns_id = this._newBlockBytes.readUnsignedByte();\r\n                attr_key = this.parseVarStr();\r\n                attr_type = this._newBlockBytes.readUnsignedByte();\r\n                attr_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n                if ((this._newBlockBytes.position + attr_len) > list_end) {\r\n                    console.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\r\n                    this._newBlockBytes.position = list_end;\r\n                    return attributes;\r\n                }\r\n\r\n                switch (attr_type) {\r\n                    case AWDParser.AWDSTRING:\r\n                        attr_val = this._newBlockBytes.readUTFBytes(attr_len);\r\n                        break;\r\n                    case AWDParser.INT8:\r\n                        attr_val = this._newBlockBytes.readByte();\r\n                        break;\r\n                    case AWDParser.INT16:\r\n                        attr_val = this._newBlockBytes.readShort();\r\n                        break;\r\n                    case AWDParser.INT32:\r\n                        attr_val = this._newBlockBytes.readInt();\r\n                        break;\r\n                    case AWDParser.BOOL:\r\n                    case AWDParser.UINT8:\r\n                        attr_val = this._newBlockBytes.readUnsignedByte();\r\n                        break;\r\n                    case AWDParser.UINT16:\r\n                        attr_val = this._newBlockBytes.readUnsignedShort();\r\n                        break;\r\n                    case AWDParser.UINT32:\r\n                    case AWDParser.BADDR:\r\n                        attr_val = this._newBlockBytes.readUnsignedInt();\r\n                        break;\r\n                    case AWDParser.FLOAT32:\r\n                        attr_val = this._newBlockBytes.readFloat();\r\n                        break;\r\n                    case AWDParser.FLOAT64:\r\n                        attr_val = this._newBlockBytes.readDouble();\r\n                        break;\r\n                    default:\r\n                        attr_val = 'unimplemented attribute type ' + attr_type;\r\n                        this._newBlockBytes.position += attr_len;\r\n                        break;\r\n                }\r\n\r\n                if (this._debug) {\r\n                    console.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\r\n                }\r\n\r\n                attributes[attr_key] = attr_val;\r\n                attibuteCnt += 1;\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    private parseProperties(expected:Object):AWDProperties\r\n    {\r\n        var list_end:number;\r\n        var list_len:number;\r\n        var propertyCnt:number = 0;\r\n        var props:AWDProperties = new AWDProperties();\r\n\r\n        list_len = this._newBlockBytes.readUnsignedInt();\r\n        list_end = this._newBlockBytes.position + list_len;\r\n\r\n        if (expected) {\r\n\r\n            while (this._newBlockBytes.position < list_end) {\r\n                var len:number;\r\n                var key:number;\r\n                var type:number;\r\n\r\n                key = this._newBlockBytes.readUnsignedShort();\r\n                len = this._newBlockBytes.readUnsignedInt();\r\n\r\n                if ((this._newBlockBytes.position + len) > list_end) {\r\n                    console.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\r\n                    this._newBlockBytes.position = list_end;\r\n                    return props;\r\n                }\r\n\r\n                if (expected.hasOwnProperty(key.toString())) {\r\n                    type = expected[key];\r\n                    props.set(key, this.parseAttrValue(type, len));\r\n                } else {\r\n                    this._newBlockBytes.position += len;\r\n                }\r\n\r\n                propertyCnt += 1;\r\n\r\n            }\r\n        } else {\r\n            this._newBlockBytes.position = list_end;\r\n        }\r\n\r\n        return props;\r\n\r\n    }\r\n\r\n    private parseAttrValue(type:number, len:number):any\r\n    {\r\n        var elem_len:number;\r\n        var read_func:Function;\r\n\r\n        switch (type) {\r\n\r\n            case AWDParser.BOOL:\r\n            case AWDParser.INT8:\r\n                elem_len = 1;\r\n                read_func = this._newBlockBytes.readByte;\r\n                break;\r\n\r\n            case AWDParser.INT16:\r\n                elem_len = 2;\r\n                read_func = this._newBlockBytes.readShort;\r\n                break;\r\n\r\n            case AWDParser.INT32:\r\n                elem_len = 4;\r\n                read_func = this._newBlockBytes.readInt;\r\n                break;\r\n\r\n            case AWDParser.UINT8:\r\n                elem_len = 1;\r\n                read_func = this._newBlockBytes.readUnsignedByte;\r\n                break;\r\n\r\n            case AWDParser.UINT16:\r\n                elem_len = 2;\r\n                read_func = this._newBlockBytes.readUnsignedShort;\r\n                break;\r\n\r\n            case AWDParser.UINT32:\r\n            case AWDParser.COLOR:\r\n            case AWDParser.BADDR:\r\n                elem_len = 4;\r\n                read_func = this._newBlockBytes.readUnsignedInt;\r\n                break;\r\n\r\n            case AWDParser.FLOAT32:\r\n                elem_len = 4;\r\n                read_func = this._newBlockBytes.readFloat;\r\n                break;\r\n\r\n            case AWDParser.FLOAT64:\r\n                elem_len = 8;\r\n                read_func = this._newBlockBytes.readDouble;\r\n                break;\r\n\r\n            case AWDParser.AWDSTRING:\r\n                return this._newBlockBytes.readUTFBytes(len);\r\n\r\n            case AWDParser.VECTOR2x1:\r\n            case AWDParser.VECTOR3x1:\r\n            case AWDParser.VECTOR4x1:\r\n            case AWDParser.MTX3x2:\r\n            case AWDParser.MTX3x3:\r\n            case AWDParser.MTX4x3:\r\n            case AWDParser.MTX4x4:\r\n                elem_len = 8;\r\n                read_func = this._newBlockBytes.readDouble;\r\n                break;\r\n\r\n        }\r\n\r\n        if (elem_len < len) {\r\n            var list:Array<any> = [];\r\n            var num_read:number = 0;\r\n            var num_elems:number = len/elem_len;\r\n\r\n            while (num_read < num_elems) {\r\n                list.push(read_func.apply(this._newBlockBytes)); // list.push(read_func());\r\n                num_read++;\r\n            }\r\n\r\n            return list;\r\n        } else {\r\n\r\n            var val:any = read_func.apply(this._newBlockBytes);//read_func();\r\n            return val;\r\n        }\r\n    }\r\n\r\n    private parseHeader():void\r\n    {\r\n        var flags:number;\r\n        var body_len:number;\r\n\r\n        this._byteData.position = 3; // Skip magic string and parse version\r\n\r\n        this._version[0] = this._byteData.readUnsignedByte();\r\n        this._version[1] = this._byteData.readUnsignedByte();\r\n\r\n        flags = this._byteData.readUnsignedShort(); // Parse bit flags\r\n\r\n        this._streaming = BitFlags.test(flags, BitFlags.FLAG1);\r\n\r\n        if ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n            this._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG2);\r\n            this._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG3);\r\n            this._accuracyProps = BitFlags.test(flags, BitFlags.FLAG4);\r\n        }\r\n\r\n        // if we set _accuracyOnBlocks, the precision-values are read from each block-header.\r\n\r\n        // set storagePrecision types\r\n        this._geoNrType = AWDParser.FLOAT32;\r\n\r\n        if (this._accuracyGeo) {\r\n            this._geoNrType = AWDParser.FLOAT64;\r\n        }\r\n\r\n        this._matrixNrType = AWDParser.FLOAT32;\r\n\r\n        if (this._accuracyMatrix) {\r\n            this._matrixNrType = AWDParser.FLOAT64;\r\n        }\r\n\r\n        this._propsNrType = AWDParser.FLOAT32;\r\n\r\n        if (this._accuracyProps) {\r\n            this._propsNrType = AWDParser.FLOAT64;\r\n        }\r\n\r\n        this._compression = this._byteData.readUnsignedByte(); // compression\r\n\r\n        if (this._debug) {\r\n            console.log(\"Import AWDFile of version = \" + this._version[0] + \" - \" + this._version[1]);\r\n            console.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\r\n        }\r\n\r\n        // Check file integrity\r\n        body_len = this._byteData.readUnsignedInt();\r\n        if (!this._streaming && body_len != this._byteData.getBytesAvailable()) {\r\n            this._pDieWithError('AWD2 body length does not match header integrity field');\r\n        }\r\n\r\n    }\r\n    // Helper - functions\r\n    private getUVForVertexAnimation(meshID:number /*uint*/):Array<Array<number>>\r\n    {\r\n        if (this._blocks[meshID].data instanceof Mesh)\r\n            meshID = this._blocks[meshID].geoID;\r\n        if (this._blocks[meshID].uvsForVertexAnimation)\r\n            return this._blocks[meshID].uvsForVertexAnimation;\r\n        var geometry:Geometry = (<Geometry> this._blocks[meshID].data);\r\n        var geoCnt:number /*int*/ = 0;\r\n        var ud:Array<number>;\r\n        var uStride:number /*uint*/;\r\n        var uOffs:number /*uint*/;\r\n        var numPoints:number /*uint*/;\r\n        var i:number /*int*/;\r\n        var newUvs:Array<number>;\r\n        var sub_geom:TriangleSubGeometry;\r\n        this._blocks[meshID].uvsForVertexAnimation = new Array<Array<number>>();\r\n        while (geoCnt < geometry.subGeometries.length) {\r\n            newUvs = new Array<number>();\r\n            sub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\r\n            numPoints = sub_geom.numVertices;\r\n            ud = sub_geom.uvs;\r\n            uStride = sub_geom.getStride(TriangleSubGeometry.UV_DATA);\r\n            uOffs = sub_geom.getOffset(TriangleSubGeometry.UV_DATA);\r\n            for (i = 0; i < numPoints; i++) {\r\n                newUvs.push(ud[uOffs + i*uStride + 0]);\r\n                newUvs.push(ud[uOffs + i*uStride + 1]);\r\n            }\r\n            this._blocks[meshID].uvsForVertexAnimation.push(newUvs);\r\n            geoCnt++;\r\n        }\r\n        return this._blocks[meshID].uvsForVertexAnimation;\r\n    }\r\n\r\n    private parseVarStr():string\r\n    {\r\n\r\n        var len:number = this._newBlockBytes.readUnsignedShort();\r\n        return this._newBlockBytes.readUTFBytes(len);\r\n    }\r\n\r\n    private getAssetByID(assetID:number, assetTypesToGet:Array<string>, extraTypeInfo:string = \"SingleTexture\"):Array<any>\r\n    {\r\n        var returnArray:Array<any> = new Array<any>();\r\n        var typeCnt:number = 0;\r\n        if (assetID > 0) {\r\n            if (this._blocks[assetID]) {\r\n                if (this._blocks[assetID].data) {\r\n                    while (typeCnt < assetTypesToGet.length) {\r\n\r\n                        var iasset:IAsset = <IAsset> this._blocks[assetID].data;\r\n\r\n                        if (iasset.assetType == assetTypesToGet[typeCnt]) {\r\n                            //if the right assetType was found\r\n                            if ((assetTypesToGet[typeCnt] == AssetType.TEXTURE) && (extraTypeInfo == \"CubeTexture\")) {\r\n                                if (this._blocks[assetID].data instanceof ImageCubeTexture) {\r\n                                    returnArray.push(true);\r\n                                    returnArray.push(this._blocks[assetID].data);\r\n                                    return returnArray;\r\n                                }\r\n                            }\r\n                            if ((assetTypesToGet[typeCnt] == AssetType.TEXTURE) && (extraTypeInfo == \"SingleTexture\")) {\r\n                                if (this._blocks[assetID].data instanceof ImageTexture) {\r\n                                    returnArray.push(true);\r\n                                    returnArray.push(this._blocks[assetID].data);\r\n                                    return returnArray;\r\n                                }\r\n                            } else {\r\n                                returnArray.push(true);\r\n                                returnArray.push(this._blocks[assetID].data);\r\n                                return returnArray;\r\n\r\n                            }\r\n                        }\r\n                        //if ((assetTypesToGet[typeCnt] == AssetType.GEOMETRY) && (IAsset(_blocks[assetID].data).assetType == AssetType.MESH)) {\r\n                        if ((assetTypesToGet[typeCnt] == AssetType.GEOMETRY) && (iasset.assetType == AssetType.MESH)) {\r\n\r\n                            var mesh:Mesh = <Mesh> this._blocks[assetID].data\r\n\r\n                            returnArray.push(true);\r\n                            returnArray.push(mesh.geometry);\r\n                            return returnArray;\r\n\r\n                        }\r\n\r\n                        typeCnt++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // if the has not returned anything yet, the asset is not found, or the found asset is not the right type.\r\n        returnArray.push(false);\r\n        returnArray.push(this.getDefaultAsset(assetTypesToGet[0], extraTypeInfo));\r\n        return returnArray;\r\n    }\r\n\r\n    private getDefaultAsset(assetType:string, extraTypeInfo:string):IAsset\r\n    {\r\n        switch (true) {\r\n            case (assetType == AssetType.TEXTURE):\r\n                if (extraTypeInfo == \"CubeTexture\")\r\n                    return this.getDefaultCubeTexture();\r\n                if (extraTypeInfo == \"SingleTexture\")\r\n                    return this.getDefaultTexture();\r\n                break;\r\n            case (assetType == AssetType.MATERIAL):\r\n                return this.getDefaultMaterial()\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private getDefaultMaterial():IAsset\r\n    {\r\n        if (!this._defaultBitmapMaterial)\r\n            this._defaultBitmapMaterial = <MethodMaterial> DefaultMaterialManager.getDefaultMaterial();\r\n\r\n        return  <IAsset>  this._defaultBitmapMaterial;\r\n    }\r\n\r\n    private getDefaultTexture():IAsset\r\n    {\r\n        if (!this._defaultTexture)\r\n            this._defaultTexture = DefaultMaterialManager.getDefaultTexture();\r\n\r\n        return <IAsset> this._defaultTexture;\r\n\r\n    }\r\n\r\n    private getDefaultCubeTexture():IAsset\r\n    {\r\n        if (!this._defaultCubeTexture) {\r\n            var defaultBitmap:BitmapData = DefaultMaterialManager.createCheckeredBitmapData();\r\n\r\n            this._defaultCubeTexture = new BitmapCubeTexture(defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap);\r\n            this._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n        }\r\n\r\n        return <IAsset> this._defaultCubeTexture;\r\n    }\r\n\r\n    private readNumber(precision:boolean = false):number\r\n    {\r\n        if (precision)\r\n            return this._newBlockBytes.readDouble();\r\n        return this._newBlockBytes.readFloat();\r\n\r\n    }\r\n\r\n    private parseMatrix3D():Matrix3D\r\n    {\r\n        return new Matrix3D(this.parseMatrix43RawData());\r\n    }\r\n\r\n    private parseMatrix32RawData():Array<number>\r\n    {\r\n        var i:number;\r\n        var mtx_raw:Array<number> = new Array<number>(6);\r\n        for (i = 0; i < 6; i++) {\r\n            mtx_raw[i] = this._newBlockBytes.readFloat();\r\n        }\r\n\r\n        return mtx_raw;\r\n    }\r\n\r\n    private parseMatrix43RawData():Array<number>\r\n    {\r\n        var mtx_raw:Array<number> = new Array<number>(16);\r\n\r\n        mtx_raw[0] = this.readNumber(this._accuracyMatrix);\r\n        mtx_raw[1] = this.readNumber(this._accuracyMatrix);\r\n        mtx_raw[2] = this.readNumber(this._accuracyMatrix);\r\n        mtx_raw[3] = 0.0;\r\n        mtx_raw[4] = this.readNumber(this._accuracyMatrix);\r\n        mtx_raw[5] = this.readNumber(this._accuracyMatrix);\r\n        mtx_raw[6] = this.readNumber(this._accuracyMatrix);\r\n        mtx_raw[7] = 0.0;\r\n        mtx_raw[8] = this.readNumber(this._accuracyMatrix);\r\n        mtx_raw[9] = this.readNumber(this._accuracyMatrix);\r\n        mtx_raw[10] = this.readNumber(this._accuracyMatrix);\r\n        mtx_raw[11] = 0.0;\r\n        mtx_raw[12] = this.readNumber(this._accuracyMatrix);\r\n        mtx_raw[13] = this.readNumber(this._accuracyMatrix);\r\n        mtx_raw[14] = this.readNumber(this._accuracyMatrix);\r\n        mtx_raw[15] = 1.0;\r\n\r\n        //TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\r\n\r\n        if (isNaN(mtx_raw[0])) {\r\n            mtx_raw[0] = 1;\r\n            mtx_raw[1] = 0;\r\n            mtx_raw[2] = 0;\r\n            mtx_raw[4] = 0;\r\n            mtx_raw[5] = 1;\r\n            mtx_raw[6] = 0;\r\n            mtx_raw[8] = 0;\r\n            mtx_raw[9] = 0;\r\n            mtx_raw[10] = 1;\r\n            mtx_raw[12] = 0;\r\n            mtx_raw[13] = 0;\r\n            mtx_raw[14] = 0;\r\n\r\n        }\r\n\r\n        return mtx_raw;\r\n    }\r\n\r\n}\r\n\r\nexport = AWDParser;\r\n\r\nclass AWDBlock\r\n{\r\n    public id:number;\r\n    public name:string;\r\n    public data:any;\r\n    public len:any;\r\n    public geoID:number;\r\n    public extras:Object;\r\n    public bytes:ByteArray;\r\n    public errorMessages:Array<string>;\r\n    public uvsForVertexAnimation:Array<Array<number>>;\r\n\r\n    constructor()\r\n    {\r\n    }\r\n\r\n    public dispose()\r\n    {\r\n\r\n        this.id = null;\r\n        this.bytes = null;\r\n        this.errorMessages = null;\r\n        this.uvsForVertexAnimation = null;\r\n\r\n    }\r\n\r\n    public addError(errorMsg:string):void\r\n    {\r\n        if (!this.errorMessages)\r\n            this.errorMessages = new Array<string>();\r\n\r\n        this.errorMessages.push(errorMsg);\r\n    }\r\n}\r\n\r\nclass AWDProperties\r\n{\r\n    public set(key:number, value:any):void\r\n    {\r\n        this[ key.toString() ] = value;\r\n    }\r\n\r\n    public get(key:number, fallback:any):any\r\n    {\r\n        if (this.hasOwnProperty(key.toString())) {\r\n            return this[key.toString()];\r\n        } else {\r\n            return fallback;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass BitFlags\r\n{\r\n    public static FLAG1:number = 1;\r\n    public static FLAG2:number = 2;\r\n    public static FLAG3:number = 4;\r\n    public static FLAG4:number = 8;\r\n    public static FLAG5:number = 16;\r\n    public static FLAG6:number = 32;\r\n    public static FLAG7:number = 64;\r\n    public static FLAG8:number = 128;\r\n    public static FLAG9:number = 256;\r\n    public static FLAG10:number = 512;\r\n    public static FLAG11:number = 1024;\r\n    public static FLAG12:number = 2048;\r\n    public static FLAG13:number = 4096;\r\n    public static FLAG14:number = 8192;\r\n    public static FLAG15:number = 16384;\r\n    public static FLAG16:number = 32768;\r\n\r\n    public static test(flags:number, testFlag:number):boolean\r\n    {\r\n        return (flags & testFlag) == testFlag;\r\n    }\r\n}\r\n",
    "import BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-renderergl/lib/managers/DefaultMaterialManager\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\n\r\n/**\r\n * MD2Parser provides a parser for the MD2 data type.\r\n */\r\nclass MD2Parser extends ParserBase\r\n{\r\n\tpublic static FPS:number /*int*/ = 6;\r\n\r\n\tprivate _clipNodes:Object = new Object();\r\n\tprivate _byteData:ByteArray;\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _parsedHeader:boolean;\r\n\tprivate _parsedUV:boolean;\r\n\tprivate _parsedFaces:boolean;\r\n\tprivate _parsedFrames:boolean;\r\n\r\n\tprivate _ident:number /*uint*/;\r\n\tprivate _version:number /*uint*/;\r\n\tprivate _skinWidth:number /*uint*/;\r\n\tprivate _skinHeight:number /*uint*/;\r\n\t//private _frameSize : number /*uint*/;\r\n\tprivate _numSkins:number /*uint*/;\r\n\tprivate _numVertices:number /*uint*/;\r\n\tprivate _numST:number /*uint*/;\r\n\tprivate _numTris:number /*uint*/;\r\n\t//private _numGlCmds : number /*uint*/;\r\n\tprivate _numFrames:number /*uint*/;\r\n\tprivate _offsetSkins:number /*uint*/;\r\n\tprivate _offsetST:number /*uint*/;\r\n\tprivate _offsetTris:number /*uint*/;\r\n\tprivate _offsetFrames:number /*uint*/;\r\n\t//private _offsetGlCmds : number /*uint*/;\r\n\tprivate _offsetEnd:number /*uint*/;\r\n\r\n\tprivate _uvIndices:Array<number>;\r\n\tprivate _indices:Array<number> /*uint*/;\r\n\tprivate _vertIndices:Array<number>;\r\n\r\n\t// the current subgeom being built\r\n\tprivate _animationSet:VertexAnimationSet = new VertexAnimationSet();\r\n\tprivate _firstSubGeom:TriangleSubGeometry;\r\n\tprivate _uvs:Array<number>;\r\n\tprivate _finalUV:Array<number>;\r\n\r\n\tprivate _materialNames:Array<string>;\r\n\tprivate _textureType:string;\r\n\tprivate _ignoreTexturePath:boolean;\r\n\tprivate _mesh:Mesh;\r\n\tprivate _geometry:Geometry;\r\n\r\n\tprivate materialFinal:boolean = false;\r\n\tprivate geoCreated:boolean = false;\r\n\r\n\t/**\r\n\t * Creates a new MD2Parser object.\r\n\t * @param textureType The extension of the texture (e.g. jpg/png/...)\r\n\t * @param ignoreTexturePath If true, the path of the texture is ignored\r\n\t */\r\n\tconstructor(textureType:string = \"jpg\", ignoreTexturePath:boolean = true)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\t\tthis._textureType = textureType;\r\n\t\tthis._ignoreTexturePath = ignoreTexturePath;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md2\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn (ParserUtils.toString(data, 4) == 'IDP2');\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.assets.length != 1)\r\n\t\t\treturn;\r\n\r\n\t\tvar asset:Texture2DBase = <Texture2DBase> resourceDependency.assets[0];\r\n\r\n\t\tif (asset) {\r\n\t\t\tvar material:MethodMaterial = new MethodMaterial(asset);\r\n\r\n\t\t\tif (this.materialMode >= 2)\r\n\t\t\t\tmaterial.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\tmaterial.name = this._mesh.material.name;\r\n\t\t\tthis._mesh.material = material;\r\n\t\t\tthis._pFinalizeAsset(material);\r\n\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t}\r\n\t\tthis.materialFinal = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t// apply system default\r\n\t\tif (this.materialMode < 2) {\r\n\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\r\n\t\t} else {\r\n\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t}\r\n\r\n\t\t//add to the content property\r\n\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\tthis.materialFinal = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._byteData = this._pGetByteData();\r\n\t\t\tthis._startedParsing = true;\r\n\r\n\t\t\t// Reset bytearray read position (which may have been\r\n\t\t\t// moved forward by the supportsData() function.)\r\n\t\t\tthis._byteData.position = 0;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\tif (!this._parsedHeader) {\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n\r\n\t\t\t\t// TODO: Create a mesh only when encountered (if it makes sense\r\n\t\t\t\t// for this file format) and return it using this._pFinalizeAsset()\r\n\t\t\t\tthis._geometry = new Geometry();\r\n\t\t\t\tthis._mesh = new Mesh(this._geometry, null);\r\n\t\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\t\t\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//_geometry.animation = new VertexAnimation(2, VertexAnimationMode.ABSOLUTE);\r\n\t\t\t\t//_animator = new VertexAnimator(VertexAnimationState(_mesh.animationState));\r\n\r\n\t\t\t\t// Parse header and decompress body\r\n\t\t\t\tthis.parseHeader();\r\n\t\t\t\tthis.parseMaterialNames();\r\n\t\t\t} else if (!this._parsedUV) {\r\n\t\t\t\tthis.parseUV();\r\n\t\t\t} else if (!this._parsedFaces) {\r\n\t\t\t\tthis.parseFaces();\r\n\t\t\t} else if (!this._parsedFrames) {\r\n\t\t\t\tthis.parseFrames();\r\n\t\t\t} else if ((this.geoCreated) && (this.materialFinal)) {\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t} else if (!this.geoCreated) {\r\n\t\t\t\tthis.geoCreated = true;\r\n\t\t\t\t//create default subgeometry\r\n\t\t\t\tthis._geometry.addSubGeometry(this._firstSubGeom.clone());\r\n\t\t\t\t// Force name to be chosen by this._pFinalizeAsset()\r\n\t\t\t\tthis._mesh.name = \"\";\r\n\t\t\t\tif (this.materialFinal) {\r\n\t\t\t\t\t//add to the content property\r\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\t/**\r\n\t * Reads in all that MD2 Header data that is declared as private variables.\r\n\t * I know its a lot, and it looks ugly, but only way to do it in Flash\r\n\t */\r\n\tprivate parseHeader()\r\n\t{\r\n\t\tthis._ident = this._byteData.readInt();\r\n\t\tthis._version = this._byteData.readInt();\r\n\t\tthis._skinWidth = this._byteData.readInt();\r\n\t\tthis._skinHeight = this._byteData.readInt();\r\n\t\t//skip this._frameSize\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._numSkins = this._byteData.readInt();\r\n\t\tthis._numVertices = this._byteData.readInt();\r\n\t\tthis._numST = this._byteData.readInt();\r\n\t\tthis._numTris = this._byteData.readInt();\r\n\t\t//skip this._numGlCmds\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._numFrames = this._byteData.readInt();\r\n\t\tthis._offsetSkins = this._byteData.readInt();\r\n\t\tthis._offsetST = this._byteData.readInt();\r\n\t\tthis._offsetTris = this._byteData.readInt();\r\n\t\tthis._offsetFrames = this._byteData.readInt();\r\n\t\t//skip this._offsetGlCmds\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._offsetEnd = this._byteData.readInt();\r\n\r\n\t\tthis._parsedHeader = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the file names for the materials.\r\n\t */\r\n\tprivate parseMaterialNames()\r\n\t{\r\n\t\tvar url:string;\r\n\t\tvar name:string;\r\n\t\tvar extIndex:number /*int*/;\r\n\t\tvar slashIndex:number /*int*/;\r\n\t\tthis._materialNames = new Array<string>();\r\n\t\tthis._byteData.position = this._offsetSkins;\r\n\r\n\t\tvar regExp:RegExp = new RegExp(\"[^a-zA-Z0-9\\\\_\\/.]\", \"g\");\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numSkins; ++i) {\r\n\t\t\tname = this._byteData.readUTFBytes(64);\r\n\t\t\tname = name.replace(regExp, \"\");\r\n\t\t\textIndex = name.lastIndexOf(\".\");\r\n\t\t\tif (this._ignoreTexturePath)\r\n\t\t\t\tslashIndex = name.lastIndexOf(\"/\");\r\n\t\t\tif (name.toLowerCase().indexOf(\".jpg\") == -1 && name.toLowerCase().indexOf(\".png\") == -1) {\r\n\t\t\t\tname = name.substring(slashIndex + 1, extIndex);\r\n\t\t\t\turl = name + \".\" + this._textureType;\r\n\t\t\t} else {\r\n\t\t\t\turl = name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._materialNames[i] = name;\r\n\r\n\t\t\t// only support 1 skin TODO: really?\r\n\t\t\tif (this.dependencies.length == 0)\r\n\t\t\t\tthis._pAddDependency(name, new URLRequest(url));\r\n\t\t}\r\n\r\n\t\tif (this._materialNames.length > 0)\r\n\t\t\tthis._mesh.material.name = this._materialNames[0]; else\r\n\t\t\tthis.materialFinal = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the uv data for the mesh.\r\n\t */\r\n\tprivate parseUV()\r\n\t{\r\n\t\tvar j:number /*uint*/ = 0;\r\n\r\n\t\tthis._uvs = new Array<number>(this._numST*2);\r\n\t\tthis._byteData.position = this._offsetST;\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numST; i++) {\r\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinWidth;\r\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinHeight;\r\n\t\t}\r\n\r\n\t\tthis._parsedUV = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses unique indices for the faces.\r\n\t */\r\n\tprivate parseFaces()\r\n\t{\r\n\t\tvar a:number /*uint*/, b:number /*uint*/, c:number /*uint*/, ta:number /*uint*/, tb:number /*uint*/, tc:number /*uint*/;\r\n\t\tvar i:number /*uint*/;\r\n\r\n\t\tthis._vertIndices = new Array<number>();\r\n\t\tthis._uvIndices = new Array<number>();\r\n\t\tthis._indices = new Array<number>() /*uint*/;\r\n\r\n\t\tthis._byteData.position = this._offsetTris;\r\n\r\n\t\tfor (i = 0; i < this._numTris; i++) {\r\n\t\t\t//collect vertex indices\r\n\t\t\ta = this._byteData.readUnsignedShort();\r\n\t\t\tb = this._byteData.readUnsignedShort();\r\n\t\t\tc = this._byteData.readUnsignedShort();\r\n\r\n\t\t\t//collect uv indices\r\n\t\t\tta = this._byteData.readUnsignedShort();\r\n\t\t\ttb = this._byteData.readUnsignedShort();\r\n\t\t\ttc = this._byteData.readUnsignedShort();\r\n\r\n\t\t\tthis.addIndex(a, ta);\r\n\t\t\tthis.addIndex(b, tb);\r\n\t\t\tthis.addIndex(c, tc);\r\n\t\t}\r\n\r\n\t\tvar len:number /*uint*/ = this._uvIndices.length;\r\n\t\tthis._finalUV = new Array<number>(len*2);\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tthis._finalUV[i << 1] = this._uvs[this._uvIndices[i] << 1];\r\n\t\t\tthis._finalUV[(i << 1) + 1] = this._uvs[(this._uvIndices[i] << 1) + 1];\r\n\t\t}\r\n\r\n\t\tthis._parsedFaces = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a face index to the list if it doesn't exist yet, based on vertexIndex and uvIndex, and adds the\r\n\t * corresponding vertex and uv data in the correct location.\r\n\t * @param vertexIndex The original index in the vertex list.\r\n\t * @param uvIndex The original index in the uv list.\r\n\t */\r\n\tprivate addIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/)\r\n\t{\r\n\t\tvar index:number /*int*/ = this.findIndex(vertexIndex, uvIndex);\r\n\r\n\t\tif (index == -1) {\r\n\t\t\tthis._indices.push(this._vertIndices.length);\r\n\t\t\tthis._vertIndices.push(vertexIndex);\r\n\t\t\tthis._uvIndices.push(uvIndex);\r\n\t\t} else\r\n\t\t\tthis._indices.push(index);\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the final index corresponding to the original MD2's vertex and uv indices. Returns -1 if it wasn't added yet.\r\n\t * @param vertexIndex The original index in the vertex list.\r\n\t * @param uvIndex The original index in the uv list.\r\n\t * @return The index of the final mesh corresponding to the original vertex and uv index. -1 if it doesn't exist yet.\r\n\t */\r\n\tprivate findIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/):number /*int*/\r\n\t{\r\n\t\tvar len:number /*uint*/ = this._vertIndices.length;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\r\n\t\t\tif (this._vertIndices[i] == vertexIndex && this._uvIndices[i] == uvIndex)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses all the frame geometries.\r\n\t */\r\n\tprivate parseFrames()\r\n\t{\r\n\t\tvar sx:number, sy:number, sz:number;\r\n\t\tvar tx:number, ty:number, tz:number;\r\n\t\tvar geometry:Geometry;\r\n\t\tvar subGeom:TriangleSubGeometry;\r\n\t\tvar vertLen:number /*uint*/ = this._vertIndices.length;\r\n\t\tvar fvertices:Array<number>;\r\n\t\tvar tvertices:Array<number>;\r\n\t\tvar i:number /*uint*/, j:number /*int*/, k:number /*uint*/;\r\n\t\t//var ch : number /*uint*/;\r\n\t\tvar name:string = \"\";\r\n\t\tvar prevClip:VertexClipNode = null;\r\n\r\n\t\tthis._byteData.position = this._offsetFrames;\r\n\r\n\t\tfor (i = 0; i < this._numFrames; i++) {\r\n\r\n\t\t\ttvertices = new Array<number>();\r\n\t\t\tfvertices = new Array<number>(vertLen*3);\r\n\r\n\t\t\tsx = this._byteData.readFloat();\r\n\t\t\tsy = this._byteData.readFloat();\r\n\t\t\tsz = this._byteData.readFloat();\r\n\r\n\t\t\ttx = this._byteData.readFloat();\r\n\t\t\tty = this._byteData.readFloat();\r\n\t\t\ttz = this._byteData.readFloat();\r\n\r\n\t\t\tname = this.readFrameName();\r\n\r\n\t\t\t// Note, the extra data.position++ in the for loop is there\r\n\t\t\t// to skip over a byte that holds the \"vertex normal index\"\r\n\t\t\tfor (j = 0; j < this._numVertices; j++, this._byteData.position++)\r\n\t\t\t\ttvertices.push(sx*this._byteData.readUnsignedByte() + tx, sy*this._byteData.readUnsignedByte() + ty, sz*this._byteData.readUnsignedByte() + tz);\r\n\r\n\t\t\tk = 0;\r\n\t\t\tfor (j = 0; j < vertLen; j++) {\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3];\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 2];\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 1];\r\n\t\t\t}\r\n\r\n\t\t\tsubGeom = new TriangleSubGeometry(true);\r\n\r\n\t\t\tif (this._firstSubGeom == null)\r\n\t\t\t\tthis._firstSubGeom = subGeom;\r\n\r\n\t\t\tgeometry = new Geometry();\r\n\t\t\tgeometry.addSubGeometry(subGeom);\r\n\r\n\t\t\tsubGeom.updateIndices(this._indices);\r\n\t\t\tsubGeom.updatePositions(fvertices);\r\n\t\t\tsubGeom.updateUVs(this._finalUV);\r\n\t\t\tsubGeom.vertexNormals;\r\n\t\t\tsubGeom.vertexTangents;\r\n\t\t\tsubGeom.autoDeriveNormals = false;\r\n\t\t\tsubGeom.autoDeriveTangents = false;\r\n\r\n\t\t\tvar clip:VertexClipNode = this._clipNodes[name];\r\n\r\n\t\t\tif (!clip) {\r\n\t\t\t\t// If another sequence was parsed before this one, starting\r\n\t\t\t\t// a new state means the previous one is complete and can\r\n\t\t\t\t// hence be finalized.\r\n\t\t\t\tif (prevClip) {\r\n\t\t\t\t\tthis._pFinalizeAsset(prevClip);\r\n\t\t\t\t\tthis._animationSet.addAnimation(prevClip);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tclip = new VertexClipNode();\r\n\t\t\t\tclip.name = name;\r\n\t\t\t\tclip.stitchFinalFrame = true;\r\n\r\n\t\t\t\tthis._clipNodes[name] = clip;\r\n\r\n\t\t\t\tprevClip = clip;\r\n\t\t\t}\r\n\t\t\tclip.addFrame(geometry, 1000/MD2Parser.FPS);\r\n\t\t}\r\n\r\n\t\t// Finalize the last state\r\n\t\tif (prevClip) {\r\n\t\t\tthis._pFinalizeAsset(prevClip);\r\n\t\t\tthis._animationSet.addAnimation(prevClip);\r\n\t\t}\r\n\r\n\t\t// Force this._pFinalizeAsset() to decide name\r\n\t\tthis._pFinalizeAsset(this._animationSet);\r\n\r\n\t\tthis._parsedFrames = true;\r\n\t}\r\n\r\n\tprivate readFrameName():string\r\n\t{\r\n\t\tvar name:string = \"\";\r\n\t\tvar k:number /*uint*/ = 0;\r\n\t\tfor (var j:number /*uint*/ = 0; j < 16; j++) {\r\n\t\t\tvar ch:number /*uint*/ = this._byteData.readUnsignedByte();\r\n\r\n\t\t\tif (Math.floor(ch) > 0x39 && Math.floor(ch) <= 0x7A && k == 0)\r\n\t\t\t\tname += String.fromCharCode(ch);\r\n\r\n\t\t\tif (Math.floor(ch) >= 0x30 && Math.floor(ch) <= 0x39)\r\n\t\t\t\tk++;\r\n\t\t}\r\n\t\treturn name;\r\n\t}\r\n}\r\n\r\nexport = MD2Parser;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\n\r\n/**\r\n * MD5AnimParser provides a parser for the md5anim data type, providing an animation sequence for the md5 format.\r\n *\r\n * todo: optimize\r\n */\r\nclass MD5AnimParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\r\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\r\n\tpublic static NUM_FRAMES_TOKEN:string = \"numFrames\";\r\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\r\n\tpublic static FRAME_RATE_TOKEN:string = \"frameRate\";\r\n\tpublic static NUM_ANIMATED_COMPONENTS_TOKEN:string = \"numAnimatedComponents\";\r\n\r\n\tpublic static HIERARCHY_TOKEN:string = \"hierarchy\";\r\n\tpublic static BOUNDS_TOKEN:string = \"bounds\";\r\n\tpublic static BASE_FRAME_TOKEN:string = \"baseframe\";\r\n\tpublic static FRAME_TOKEN:string = \"frame\";\r\n\r\n\tpublic static COMMENT_TOKEN:string = \"//\";\r\n\r\n\tprivate _parseIndex:number /*int*/ = 0;\r\n\tprivate _reachedEOF:boolean;\r\n\tprivate _line:number /*int*/ = 0;\r\n\tprivate _charLineIndex:number /*int*/ = 0;\r\n\tprivate _version:number /*int*/;\r\n\tprivate _frameRate:number /*int*/;\r\n\tprivate _numFrames:number /*int*/;\r\n\tprivate _numJoints:number /*int*/;\r\n\tprivate _numAnimatedComponents:number /*int*/;\r\n\r\n\tprivate _hierarchy:Array<HierarchyData>;\r\n\tprivate _bounds:Array<BoundsData>;\r\n\tprivate _frameData:Array<FrameData>;\r\n\tprivate _baseFrameData:Array<BaseFrameData>;\r\n\r\n\tprivate _rotationQuat:Quaternion;\r\n\tprivate _clip:SkeletonClipNode;\r\n\r\n\t/**\r\n\t * Creates a new MD5AnimParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._rotationQuat = new Quaternion();\r\n\t\tvar t1:Quaternion = new Quaternion();\r\n\t\tvar t2:Quaternion = new Quaternion();\r\n\r\n\t\tt1.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\r\n\t\tt2.fromAxisAngle(Vector3D.Y_AXIS, -Math.PI*.5);\r\n\r\n\t\tthis._rotationQuat.multiply(t2, t1);\r\n\r\n\t\tif (additionalRotationAxis) {\r\n\t\t\tthis._rotationQuat.multiply(t2, t1);\r\n\t\t\tt1.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\r\n\t\t\tthis._rotationQuat.multiply(t1, this._rotationQuat);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md5anim\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar token:string;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\ttoken = this.getNextToken();\r\n\t\t\tswitch (token) {\r\n\t\t\t\tcase MD5AnimParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"\":\r\n\t\t\t\t\t// can occur at the end of a file\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.VERSION_TOKEN:\r\n\t\t\t\t\tthis._version = this.getNextInt();\r\n\t\t\t\t\tif (this._version != 10)\r\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.COMMAND_LINE_TOKEN:\r\n\t\t\t\t\tthis.parseCMD();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_FRAMES_TOKEN:\r\n\t\t\t\t\tthis._numFrames = this.getNextInt();\r\n\t\t\t\t\tthis._bounds = new Array<BoundsData>();\r\n\t\t\t\t\tthis._frameData = new Array<FrameData>();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_JOINTS_TOKEN:\r\n\t\t\t\t\tthis._numJoints = this.getNextInt();\r\n\t\t\t\t\tthis._hierarchy = new Array<HierarchyData>(this._numJoints);\r\n\t\t\t\t\tthis._baseFrameData = new Array<BaseFrameData>(this._numJoints);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.FRAME_RATE_TOKEN:\r\n\t\t\t\t\tthis._frameRate = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_ANIMATED_COMPONENTS_TOKEN:\r\n\t\t\t\t\tthis._numAnimatedComponents = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.HIERARCHY_TOKEN:\r\n\t\t\t\t\tthis.parseHierarchy();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.BOUNDS_TOKEN:\r\n\t\t\t\t\tthis.parseBounds();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.BASE_FRAME_TOKEN:\r\n\t\t\t\t\tthis.parseBaseFrame();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.FRAME_TOKEN:\r\n\t\t\t\t\tthis.parseFrame();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (!this._reachedEOF)\r\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._reachedEOF) {\r\n\t\t\t\tthis._clip = new SkeletonClipNode();\r\n\t\t\t\tthis.translateClip();\r\n\t\t\t\tthis._pFinalizeAsset(this._clip);\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts all key frame data to an SkinnedAnimationSequence.\r\n\t */\r\n\tprivate translateClip():void\r\n\t{\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numFrames; ++i)\r\n\t\t\tthis._clip.addFrame(this.translatePose(this._frameData[i]), 1000/this._frameRate);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a single key frame data to a SkeletonPose.\r\n\t * @param frameData The actual frame data.\r\n\t * @return A SkeletonPose containing the frame data's pose.\r\n\t */\r\n\tprivate translatePose(frameData:FrameData):SkeletonPose\r\n\t{\r\n\t\tvar hierarchy:HierarchyData;\r\n\t\tvar pose:JointPose;\r\n\t\tvar base:BaseFrameData;\r\n\t\tvar flags:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar translate:Vector3D = new Vector3D();\r\n\t\tvar orientation:Quaternion = new Quaternion();\r\n\t\tvar components:Array<number> = frameData.components;\r\n\t\tvar skelPose:SkeletonPose = new SkeletonPose();\r\n\t\tvar jointPoses:Array<JointPose> = skelPose.jointPoses;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numJoints; ++i) {\r\n\t\t\tj = 0;\r\n\t\t\tpose = new JointPose();\r\n\t\t\thierarchy = this._hierarchy[i];\r\n\t\t\tbase = this._baseFrameData[i];\r\n\t\t\tflags = hierarchy.flags;\r\n\t\t\ttranslate.x = base.position.x;\r\n\t\t\ttranslate.y = base.position.y;\r\n\t\t\ttranslate.z = base.position.z;\r\n\t\t\torientation.x = base.orientation.x;\r\n\t\t\torientation.y = base.orientation.y;\r\n\t\t\torientation.z = base.orientation.z;\r\n\r\n\t\t\tif (flags & 1)\r\n\t\t\t\ttranslate.x = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 2)\r\n\t\t\t\ttranslate.y = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 4)\r\n\t\t\t\ttranslate.z = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 8)\r\n\t\t\t\torientation.x = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 16)\r\n\t\t\t\torientation.y = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 32)\r\n\t\t\t\torientation.z = components[hierarchy.startIndex + (j++)];\r\n\r\n\t\t\tvar w:number = 1 - orientation.x*orientation.x - orientation.y*orientation.y - orientation.z*orientation.z;\r\n\t\t\torientation.w = w < 0? 0 : -Math.sqrt(w);\r\n\r\n\t\t\tif (hierarchy.parentIndex < 0) {\r\n\t\t\t\tpose.orientation.multiply(this._rotationQuat, orientation);\r\n\t\t\t\tpose.translation = this._rotationQuat.rotatePoint(translate);\r\n\t\t\t} else {\r\n\t\t\t\tpose.orientation.copyFrom(orientation);\r\n\t\t\t\tpose.translation.x = translate.x;\r\n\t\t\t\tpose.translation.y = translate.y;\r\n\t\t\t\tpose.translation.z = translate.z;\r\n\t\t\t}\r\n\t\t\tpose.orientation.y = -pose.orientation.y;\r\n\t\t\tpose.orientation.z = -pose.orientation.z;\r\n\t\t\tpose.translation.x = -pose.translation.x;\r\n\r\n\t\t\tjointPoses[i] = pose;\r\n\t\t}\r\n\r\n\t\treturn skelPose;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the skeleton's hierarchy data.\r\n\t */\r\n\tprivate parseHierarchy():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:HierarchyData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new HierarchyData();\r\n\t\t\tdata.name = this.parseLiteralstring();\r\n\t\t\tdata.parentIndex = this.getNextInt();\r\n\t\t\tdata.flags = this.getNextInt();\r\n\t\t\tdata.startIndex = this.getNextInt();\r\n\t\t\tthis._hierarchy[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses frame bounds.\r\n\t */\r\n\tprivate parseBounds():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:BoundsData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new BoundsData();\r\n\t\t\tdata.min = this.parseVector3D();\r\n\t\t\tdata.max = this.parseVector3D();\r\n\t\t\tthis._bounds[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the base frame.\r\n\t */\r\n\tprivate parseBaseFrame():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:BaseFrameData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new BaseFrameData();\r\n\t\t\tdata.position = this.parseVector3D();\r\n\t\t\tdata.orientation = this.parseQuaternion();\r\n\t\t\tthis._baseFrameData[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a single frame.\r\n\t */\r\n\tprivate parseFrame():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:FrameData;\r\n\t\tvar token:string;\r\n\t\tvar frameIndex:number /*int*/;\r\n\r\n\t\tframeIndex = this.getNextInt();\r\n\r\n\t\ttoken = this.getNextToken();\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new FrameData();\r\n\t\t\tdata.components = new Array<number>(this._numAnimatedComponents);\r\n\r\n\t\t\tfor (var i:number /*int*/ = 0; i < this._numAnimatedComponents; ++i)\r\n\t\t\t\tdata.components[i] = this.getNextNumber();\r\n\r\n\t\t\tthis._frameData[frameIndex] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Puts back the last read character into the data stream.\r\n\t */\r\n\tprivate putBack():void\r\n\t{\r\n\t\tthis._parseIndex--;\r\n\t\tthis._charLineIndex--;\r\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the next token in the data stream.\r\n\t */\r\n\tprivate getNextToken():string\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar token:string = \"\";\r\n\r\n\t\twhile (!this._reachedEOF) {\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\r\n\t\t\t\tif (token != MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.skipWhiteSpace();\r\n\t\t\t\tif (token != \"\")\r\n\t\t\t\t\treturn token;\r\n\t\t\t} else\r\n\t\t\t\ttoken += ch;\r\n\r\n\t\t\tif (token == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\treturn token;\r\n\t\t}\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Skips all whitespace in the data stream.\r\n\t */\r\n\tprivate skipWhiteSpace():void\r\n\t{\r\n\t\tvar ch:string;\r\n\r\n\t\tdo\r\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\r\n\r\n\t\tthis.putBack();\r\n\t}\r\n\r\n\t/**\r\n\t * Skips to the next line.\r\n\t */\r\n\tprivate ignoreLine():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\r\n\t\t\tch = this.getNextChar();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next single character in the data stream.\r\n\t */\r\n\tprivate getNextChar():string\r\n\t{\r\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\r\n\r\n\t\tif (ch == \"\\n\") {\r\n\t\t\t++this._line;\r\n\t\t\tthis._charLineIndex = 0;\r\n\t\t} else if (ch != \"\\r\")\r\n\t\t\t++this._charLineIndex;\r\n\r\n\t\tif (this._parseIndex == this._textData.length)\r\n\t\t\tthis._reachedEOF = true;\r\n\r\n\t\treturn ch;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next integer in the data stream.\r\n\t */\r\n\tprivate getNextInt():number /*int*/\r\n\t{\r\n\t\tvar i:number = parseInt(this.getNextToken());\r\n\t\tif (isNaN(i))\r\n\t\t\tthis.sendParseError(\"int type\");\r\n\t\treturn i;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next floating point number in the data stream.\r\n\t */\r\n\tprivate getNextNumber():number\r\n\t{\r\n\t\tvar f:number = parseFloat(this.getNextToken());\r\n\t\tif (isNaN(f))\r\n\t\t\tthis.sendParseError(\"float type\");\r\n\t\treturn f;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next 3d vector in the data stream.\r\n\t */\r\n\tprivate parseVector3D():Vector3D\r\n\t{\r\n\t\tvar vec:Vector3D = new Vector3D();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvec.x = this.getNextNumber();\r\n\t\tvec.y = this.getNextNumber();\r\n\t\tvec.z = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next quaternion in the data stream.\r\n\t */\r\n\tprivate parseQuaternion():Quaternion\r\n\t{\r\n\t\tvar quat:Quaternion = new Quaternion();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tquat.x = this.getNextNumber();\r\n\t\tquat.y = this.getNextNumber();\r\n\t\tquat.z = this.getNextNumber();\r\n\r\n\t\t// quat supposed to be unit length\r\n\t\tvar t:number = 1 - (quat.x*quat.x) - (quat.y*quat.y) - (quat.z*quat.z);\r\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn quat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the command line data.\r\n\t */\r\n\tprivate parseCMD():void\r\n\t{\r\n\t\t// just ignore the command line property\r\n\t\tthis.parseLiteralstring();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\r\n\t * by double quotes.\r\n\t */\r\n\tprivate parseLiteralstring():string\r\n\t{\r\n\t\tthis.skipWhiteSpace();\r\n\r\n\t\tvar ch:string = this.getNextChar();\r\n\t\tvar str:string = \"\";\r\n\r\n\t\tif (ch != \"\\\"\")\r\n\t\t\tthis.sendParseError(\"\\\"\");\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch != \"\\\"\")\r\n\t\t\t\tstr += ch;\r\n\t\t} while (ch != \"\\\"\");\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an end-of-file error when a premature end of file was encountered.\r\n\t */\r\n\tprivate sendEOFError():void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected end of file\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unexpected token was encountered.\r\n\t * @param expected The token type that was actually expected.\r\n\t */\r\n\tprivate sendParseError(expected:string):void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unknown keyword was encountered.\r\n\t */\r\n\tprivate sendUnknownKeywordError():void\r\n\t{\r\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\r\n\t}\r\n}\r\n\r\nexport = MD5AnimParser;\r\n\r\n\r\n/**\r\n *\r\n */\r\nclass BaseFrameData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic position:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientation:Quaternion;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass BoundsData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic min:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic max:Vector3D;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass FrameData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic index:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic components:Array<number>;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass HierarchyData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic name:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic parentIndex:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic flags:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic startIndex:number /*int*/;\r\n}",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\n\r\n// todo: create animation system, parse skeleton\r\n\r\n/**\r\n * MD5MeshParser provides a parser for the md5mesh data type, providing the geometry of the md5 format.\r\n *\r\n * todo: optimize\r\n */\r\nclass MD5MeshParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\r\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\r\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\r\n\tpublic static NUM_MESHES_TOKEN:string = \"numMeshes\";\r\n\tpublic static COMMENT_TOKEN:string = \"//\";\r\n\tpublic static JOINTS_TOKEN:string = \"joints\";\r\n\tpublic static MESH_TOKEN:string = \"mesh\";\r\n\r\n\tpublic static MESH_SHADER_TOKEN:string = \"shader\";\r\n\tpublic static MESH_NUM_VERTS_TOKEN:string = \"numverts\";\r\n\tpublic static MESH_VERT_TOKEN:string = \"vert\";\r\n\tpublic static MESH_NUM_TRIS_TOKEN:string = \"numtris\";\r\n\tpublic static MESH_TRI_TOKEN:string = \"tri\";\r\n\tpublic static MESH_NUM_WEIGHTS_TOKEN:string = \"numweights\";\r\n\tpublic static MESH_WEIGHT_TOKEN:string = \"weight\";\r\n\r\n\tprivate _parseIndex:number /*int*/ = 0;\r\n\tprivate _reachedEOF:boolean;\r\n\tprivate _line:number /*int*/ = 0;\r\n\tprivate _charLineIndex:number /*int*/ = 0;\r\n\tprivate _version:number /*int*/;\r\n\tprivate _numJoints:number /*int*/;\r\n\tprivate _numMeshes:number /*int*/;\r\n\r\n\tprivate _mesh:Mesh;\r\n\tprivate _shaders:Array<string>;\r\n\r\n\tprivate _maxJointCount:number /*int*/;\r\n\tprivate _meshData:Array<MeshData>;\r\n\tprivate _bindPoses:Array<Matrix3D>;\r\n\tprivate _geometry:Geometry;\r\n\r\n\tprivate _skeleton:Skeleton;\r\n\tprivate _animationSet:SkeletonAnimationSet;\r\n\r\n\tprivate _rotationQuat:Quaternion;\r\n\r\n\t/**\r\n\t * Creates a new MD5MeshParser object.\r\n\t */\r\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._rotationQuat = new Quaternion();\r\n\r\n\t\tthis._rotationQuat.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\r\n\r\n\t\tif (additionalRotationAxis) {\r\n\t\t\tvar quat:Quaternion = new Quaternion();\r\n\t\t\tquat.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\r\n\t\t\tthis._rotationQuat.multiply(this._rotationQuat, quat);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md5mesh\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar token:string;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\ttoken = this.getNextToken();\r\n\t\t\tswitch (token) {\r\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.VERSION_TOKEN:\r\n\t\t\t\t\tthis._version = this.getNextInt();\r\n\t\t\t\t\tif (this._version != 10)\r\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.COMMAND_LINE_TOKEN:\r\n\t\t\t\t\tthis.parseCMD();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.NUM_JOINTS_TOKEN:\r\n\t\t\t\t\tthis._numJoints = this.getNextInt();\r\n\t\t\t\t\tthis._bindPoses = new Array<Matrix3D>(this._numJoints);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.NUM_MESHES_TOKEN:\r\n\t\t\t\t\tthis._numMeshes = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.JOINTS_TOKEN:\r\n\t\t\t\t\tthis.parseJoints();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_TOKEN:\r\n\t\t\t\t\tthis.parseMesh();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (!this._reachedEOF)\r\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._reachedEOF) {\r\n\t\t\t\tthis.calculateMaxJointCount();\r\n\t\t\t\tthis._animationSet = new SkeletonAnimationSet(this._maxJointCount);\r\n\r\n\t\t\t\tthis._mesh = new Mesh(new Geometry(), null);\r\n\t\t\t\tthis._geometry = this._mesh.geometry;\r\n\r\n\t\t\t\tfor (var i:number /*int*/ = 0; i < this._meshData.length; ++i)\r\n\t\t\t\t\tthis._geometry.addSubGeometry(this.translateGeom(this._meshData[i].vertexData, this._meshData[i].weightData, this._meshData[i].indices));\r\n\r\n\t\t\t\t//_geometry.animation = _animation;\r\n\t\t\t\t//\t\t\t\t\t_mesh.animationController = _animationController;\r\n\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(this._geometry);\r\n\t\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t\t\tthis._pFinalizeAsset(this._skeleton);\r\n\t\t\t\tthis._pFinalizeAsset(this._animationSet);\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate calculateMaxJointCount():void\r\n\t{\r\n\t\tthis._maxJointCount = 0;\r\n\r\n\t\tvar numMeshData:number /*int*/ = this._meshData.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < numMeshData; ++i) {\r\n\t\t\tvar meshData:MeshData = this._meshData[i];\r\n\t\t\tvar vertexData:Array<VertexData> = meshData.vertexData;\r\n\t\t\tvar numVerts:number /*int*/ = vertexData.length;\r\n\r\n\t\t\tfor (var j:number /*int*/ = 0; j < numVerts; ++j) {\r\n\t\t\t\tvar zeroWeights:number /*int*/ = this.countZeroWeightJoints(vertexData[j], meshData.weightData);\r\n\t\t\t\tvar totalJoints:number /*int*/ = vertexData[j].countWeight - zeroWeights;\r\n\t\t\t\tif (totalJoints > this._maxJointCount)\r\n\t\t\t\t\tthis._maxJointCount = totalJoints;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate countZeroWeightJoints(vertex:VertexData, weights:Array<JointData>):number /*int*/\r\n\t{\r\n\t\tvar start:number /*int*/ = vertex.startWeight;\r\n\t\tvar end:number /*int*/ = vertex.startWeight + vertex.countWeight;\r\n\t\tvar count:number /*int*/ = 0;\r\n\t\tvar weight:number;\r\n\r\n\t\tfor (var i:number /*int*/ = start; i < end; ++i) {\r\n\t\t\tweight = weights[i].bias;\r\n\t\t\tif (weight == 0)\r\n\t\t\t\t++count;\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the skeleton's joints.\r\n\t */\r\n\tprivate parseJoints():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar joint:SkeletonJoint;\r\n\t\tvar pos:Vector3D;\r\n\t\tvar quat:Quaternion;\r\n\t\tvar i:number /*int*/ = 0;\r\n\t\tvar token:string = this.getNextToken();\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tthis._skeleton = new Skeleton();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tjoint = new SkeletonJoint();\r\n\t\t\tjoint.name = this.parseLiteralstring();\r\n\t\t\tjoint.parentIndex = this.getNextInt();\r\n\t\t\tpos = this.parseVector3D();\r\n\t\t\tpos = this._rotationQuat.rotatePoint(pos);\r\n\t\t\tquat = this.parseQuaternion();\r\n\r\n\t\t\t// todo: check if this is correct, or maybe we want to actually store it as quats?\r\n\t\t\tthis._bindPoses[i] = quat.toMatrix3D();\r\n\t\t\tthis._bindPoses[i].appendTranslation(pos.x, pos.y, pos.z);\r\n\t\t\tvar inv:Matrix3D = this._bindPoses[i].clone();\r\n\t\t\tinv.invert();\r\n\t\t\tjoint.inverseBindPose = inv.rawData;\r\n\r\n\t\t\tthis._skeleton.joints[i++] = joint;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Puts back the last read character into the data stream.\r\n\t */\r\n\tprivate putBack():void\r\n\t{\r\n\t\tthis._parseIndex--;\r\n\t\tthis._charLineIndex--;\r\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the mesh geometry.\r\n\t */\r\n\tprivate parseMesh():void\r\n\t{\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar ch:string;\r\n\t\tvar vertexData:Array<VertexData>;\r\n\t\tvar weights:Array<JointData>;\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tif (this._shaders == null)\r\n\t\t\tthis._shaders = new Array<string>();\r\n\r\n\t\twhile (ch != \"}\") {\r\n\t\t\tch = this.getNextToken();\r\n\t\t\tswitch (ch) {\r\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_SHADER_TOKEN:\r\n\t\t\t\t\tthis._shaders.push(this.parseLiteralstring());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_VERTS_TOKEN:\r\n\t\t\t\t\tvertexData = new Array<VertexData>(this.getNextInt());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_TRIS_TOKEN:\r\n\t\t\t\t\tindices = new Array<number>(this.getNextInt()*3) /*uint*/;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_WEIGHTS_TOKEN:\r\n\t\t\t\t\tweights = new Array<JointData>(this.getNextInt());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_VERT_TOKEN:\r\n\t\t\t\t\tthis.parseVertex(vertexData);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_TRI_TOKEN:\r\n\t\t\t\t\tthis.parseTri(indices);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_WEIGHT_TOKEN:\r\n\t\t\t\t\tthis.parseJoint(weights);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._meshData == null)\r\n\t\t\tthis._meshData = new Array<MeshData>();\r\n\r\n\t\tvar i:number /*uint*/ = this._meshData.length;\r\n\t\tthis._meshData[i] = new MeshData();\r\n\t\tthis._meshData[i].vertexData = vertexData;\r\n\t\tthis._meshData[i].weightData = weights;\r\n\t\tthis._meshData[i].indices = indices;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the mesh data to a SkinnedSub instance.\r\n\t * @param vertexData The mesh's vertices.\r\n\t * @param weights The joint weights per vertex.\r\n\t * @param indices The indices for the faces.\r\n\t * @return A SubGeometry instance containing all geometrical data for the current mesh.\r\n\t */\r\n\tprivate translateGeom(vertexData:Array<VertexData>, weights:Array<JointData>, indices:Array<number> /*uint*/):TriangleSubGeometry\r\n\t{\r\n\t\tvar len:number /*int*/ = vertexData.length;\r\n\t\tvar v1:number /*int*/, v2:number /*int*/, v3:number /*int*/;\r\n\t\tvar vertex:VertexData;\r\n\t\tvar weight:JointData;\r\n\t\tvar bindPose:Matrix3D;\r\n\t\tvar pos:Vector3D;\r\n\t\tvar subGeom:TriangleSubGeometry = new TriangleSubGeometry(true);\r\n\t\tvar uvs:Array<number> = new Array<number>(len*2);\r\n\t\tvar vertices:Array<number> = new Array<number>(len*3);\r\n\t\tvar jointIndices:Array<number> = new Array<number>(len*this._maxJointCount);\r\n\t\tvar jointWeights:Array<number> = new Array<number>(len*this._maxJointCount);\r\n\t\tvar l:number /*int*/ = 0;\r\n\t\tvar nonZeroWeights:number /*int*/;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i) {\r\n\t\t\tvertex = vertexData[i];\r\n\t\t\tv1 = vertex.index*3;\r\n\t\t\tv2 = v1 + 1;\r\n\t\t\tv3 = v1 + 2;\r\n\t\t\tvertices[v1] = vertices[v2] = vertices[v3] = 0;\r\n\r\n\t\t\tnonZeroWeights = 0;\r\n\t\t\tfor (var j:number /*int*/ = 0; j < vertex.countWeight; ++j) {\r\n\t\t\t\tweight = weights[vertex.startWeight + j];\r\n\t\t\t\tif (weight.bias > 0) {\r\n\t\t\t\t\tbindPose = this._bindPoses[weight.joint];\r\n\t\t\t\t\tpos = bindPose.transformVector(weight.pos);\r\n\t\t\t\t\tvertices[v1] += pos.x*weight.bias;\r\n\t\t\t\t\tvertices[v2] += pos.y*weight.bias;\r\n\t\t\t\t\tvertices[v3] += pos.z*weight.bias;\r\n\r\n\t\t\t\t\t// indices need to be multiplied by 3 (amount of matrix registers)\r\n\t\t\t\t\tjointIndices[l] = weight.joint*3;\r\n\t\t\t\t\tjointWeights[l++] = weight.bias;\r\n\t\t\t\t\t++nonZeroWeights;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = nonZeroWeights; j < this._maxJointCount; ++j) {\r\n\t\t\t\tjointIndices[l] = 0;\r\n\t\t\t\tjointWeights[l++] = 0;\r\n\t\t\t}\r\n\r\n\t\t\tv1 = vertex.index << 1;\r\n\t\t\tuvs[v1++] = vertex.s;\r\n\t\t\tuvs[v1] = vertex.t;\r\n\t\t}\r\n\r\n\t\tsubGeom.jointsPerVertex = this._maxJointCount;\r\n\t\tsubGeom.updateIndices(indices);\r\n\t\tsubGeom.updatePositions(vertices);\r\n\t\tsubGeom.updateUVs(uvs);\r\n\t\tsubGeom.updateJointIndices(jointIndices);\r\n\t\tsubGeom.updateJointWeights(jointWeights);\r\n\t\t// cause explicit updates\r\n\t\tsubGeom.vertexNormals;\r\n\t\tsubGeom.vertexTangents;\r\n\t\t// turn auto updates off because they may be animated and set explicitly\r\n\t\tsubGeom.autoDeriveTangents = false;\r\n\t\tsubGeom.autoDeriveNormals = false;\r\n\r\n\t\treturn subGeom;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve the next triplet of vertex indices that form a face.\r\n\t * @param indices The index list in which to store the read data.\r\n\t */\r\n\tprivate parseTri(indices:Array<number> /*uint*/):void\r\n\t{\r\n\t\tvar index:number /*int*/ = this.getNextInt()*3;\r\n\t\tindices[index] = this.getNextInt();\r\n\t\tindices[index + 1] = this.getNextInt();\r\n\t\tindices[index + 2] = this.getNextInt();\r\n\t}\r\n\r\n\t/**\r\n\t * Reads a new joint data set for a single joint.\r\n\t * @param weights the target list to contain the weight data.\r\n\t */\r\n\tprivate parseJoint(weights:Array<JointData>):void\r\n\t{\r\n\t\tvar weight:JointData = new JointData();\r\n\t\tweight.index = this.getNextInt();\r\n\t\tweight.joint = this.getNextInt();\r\n\t\tweight.bias = this.getNextNumber();\r\n\t\tweight.pos = this.parseVector3D();\r\n\t\tweights[weight.index] = weight;\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the data for a single vertex.\r\n\t * @param vertexData The list to contain the vertex data.\r\n\t */\r\n\tprivate parseVertex(vertexData:Array<VertexData>):void\r\n\t{\r\n\t\tvar vertex:VertexData = new VertexData();\r\n\t\tvertex.index = this.getNextInt();\r\n\t\tthis.parseUV(vertex);\r\n\t\tvertex.startWeight = this.getNextInt();\r\n\t\tvertex.countWeight = this.getNextInt();\r\n\t\t//\t\t\tif (vertex.countWeight > _maxJointCount) _maxJointCount = vertex.countWeight;\r\n\t\tvertexData[vertex.index] = vertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next uv coordinate.\r\n\t * @param vertexData The vertexData to contain the UV coordinates.\r\n\t */\r\n\tprivate parseUV(vertexData:VertexData):void\r\n\t{\r\n\t\tvar ch:string = this.getNextToken();\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvertexData.s = this.getNextNumber();\r\n\t\tvertexData.t = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the next token in the data stream.\r\n\t */\r\n\tprivate getNextToken():string\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar token:string = \"\";\r\n\r\n\t\twhile (!this._reachedEOF) {\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\r\n\t\t\t\tif (token != MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.skipWhiteSpace();\r\n\t\t\t\tif (token != \"\")\r\n\t\t\t\t\treturn token;\r\n\t\t\t} else\r\n\t\t\t\ttoken += ch;\r\n\r\n\t\t\tif (token == MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\treturn token;\r\n\t\t}\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Skips all whitespace in the data stream.\r\n\t */\r\n\tprivate skipWhiteSpace():void\r\n\t{\r\n\t\tvar ch:string;\r\n\r\n\t\tdo\r\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\r\n\r\n\t\tthis.putBack();\r\n\t}\r\n\r\n\t/**\r\n\t * Skips to the next line.\r\n\t */\r\n\tprivate ignoreLine():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\r\n\t\t\tch = this.getNextChar();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next single character in the data stream.\r\n\t */\r\n\tprivate getNextChar():string\r\n\t{\r\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\r\n\r\n\t\tif (ch == \"\\n\") {\r\n\t\t\t++this._line;\r\n\t\t\tthis._charLineIndex = 0;\r\n\t\t} else if (ch != \"\\r\")\r\n\t\t\t++this._charLineIndex;\r\n\r\n\t\tif (this._parseIndex >= this._textData.length)\r\n\t\t\tthis._reachedEOF = true;\r\n\r\n\t\treturn ch;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next integer in the data stream.\r\n\t */\r\n\tprivate getNextInt():number /*int*/\r\n\t{\r\n\t\tvar i:number = parseInt(this.getNextToken());\r\n\t\tif (isNaN(i))\r\n\t\t\tthis.sendParseError(\"int type\");\r\n\t\treturn i;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next floating point number in the data stream.\r\n\t */\r\n\tprivate getNextNumber():number\r\n\t{\r\n\t\tvar f:number = parseFloat(this.getNextToken());\r\n\t\tif (isNaN(f))\r\n\t\t\tthis.sendParseError(\"float type\");\r\n\t\treturn f;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next 3d vector in the data stream.\r\n\t */\r\n\tprivate parseVector3D():Vector3D\r\n\t{\r\n\t\tvar vec:Vector3D = new Vector3D();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvec.x = -this.getNextNumber();\r\n\t\tvec.y = this.getNextNumber();\r\n\t\tvec.z = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next quaternion in the data stream.\r\n\t */\r\n\tprivate parseQuaternion():Quaternion\r\n\t{\r\n\t\tvar quat:Quaternion = new Quaternion();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tquat.x = this.getNextNumber();\r\n\t\tquat.y = -this.getNextNumber();\r\n\t\tquat.z = -this.getNextNumber();\r\n\r\n\t\t// quat supposed to be unit length\r\n\t\tvar t:number = 1 - quat.x*quat.x - quat.y*quat.y - quat.z*quat.z;\r\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\tvar rotQuat:Quaternion = new Quaternion();\r\n\t\trotQuat.multiply(this._rotationQuat, quat);\r\n\t\treturn rotQuat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the command line data.\r\n\t */\r\n\tprivate parseCMD():void\r\n\t{\r\n\t\t// just ignore the command line property\r\n\t\tthis.parseLiteralstring();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\r\n\t * by double quotes.\r\n\t */\r\n\tprivate parseLiteralstring():string\r\n\t{\r\n\t\tthis.skipWhiteSpace();\r\n\r\n\t\tvar ch:string = this.getNextChar();\r\n\t\tvar str:string = \"\";\r\n\r\n\t\tif (ch != \"\\\"\")\r\n\t\t\tthis.sendParseError(\"\\\"\");\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch != \"\\\"\")\r\n\t\t\t\tstr += ch;\r\n\t\t} while (ch != \"\\\"\");\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an end-of-file error when a premature end of file was encountered.\r\n\t */\r\n\tprivate sendEOFError():void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected end of file\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unexpected token was encountered.\r\n\t * @param expected The token type that was actually expected.\r\n\t */\r\n\tprivate sendParseError(expected:string):void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unknown keyword was encountered.\r\n\t */\r\n\tprivate sendUnknownKeywordError():void\r\n\t{\r\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\r\n\t}\r\n}\r\n\r\nexport = MD5MeshParser;\r\n\r\n\r\nclass VertexData\r\n{\r\n\tpublic index:number /*int*/;\r\n\tpublic s:number;\r\n\tpublic t:number;\r\n\tpublic startWeight:number /*int*/;\r\n\tpublic countWeight:number /*int*/;\r\n}\r\n\r\nclass JointData\r\n{\r\n\tpublic index:number /*int*/;\r\n\tpublic joint:number /*int*/;\r\n\tpublic bias:number;\r\n\tpublic pos:Vector3D;\r\n}\r\n\r\nclass MeshData\r\n{\r\n\tpublic vertexData:Array<VertexData>;\r\n\tpublic weightData:Array<JointData>;\r\n\tpublic indices:Array<number> /*uint*/;\r\n}",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport TextureProxyBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-renderergl/lib/managers/DefaultMaterialManager\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\n\r\n/**\r\n * Max3DSParser provides a parser for the 3ds data type.\r\n */\r\nclass Max3DSParser extends ParserBase\r\n{\r\n\tprivate _byteData:ByteArray;\r\n\r\n\tprivate _textures:Object;\r\n\tprivate _materials:Object;\r\n\tprivate _unfinalized_objects:Object;\r\n\r\n\tprivate _cur_obj_end:number;\r\n\tprivate _cur_obj:ObjectVO;\r\n\r\n\tprivate _cur_mat_end:number;\r\n\tprivate _cur_mat:MaterialVO;\r\n\tprivate _useSmoothingGroups:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>Max3DSParser</code> object.\r\n\t *\r\n\t * @param useSmoothingGroups Determines whether the parser looks for smoothing groups in the 3ds file or assumes uniform smoothing. Defaults to true.\r\n\t */\r\n\tconstructor(useSmoothingGroups:boolean = true)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n\t\tthis._useSmoothingGroups = useSmoothingGroups;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"3ds\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\tvar ba:ByteArray;\r\n\r\n\t\tba = ParserUtils.toByteArray(data);\r\n\t\tif (ba) {\r\n\t\t\tba.position = 0;\r\n\t\t\tif (ba.readShort() == 0x4d4d)\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\tif (resourceDependency.assets.length == 1) {\r\n\t\t\tvar asset:IAsset;\r\n\r\n\t\t\tasset = resourceDependency.assets[0];\r\n\t\t\tif (asset.assetType == AssetType.TEXTURE) {\r\n\t\t\t\tvar tex:TextureVO;\r\n\r\n\t\t\t\ttex = this._textures[resourceDependency.id];\r\n\t\t\t\ttex.texture = <Texture2DBase> asset;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\t// TODO: Implement\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (!this._byteData) {\r\n\t\t\tthis._byteData = this._pGetByteData();\r\n\t\t\tthis._byteData.position = 0;\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\tthis._textures = {};\r\n\t\t\tthis._materials = {};\r\n\t\t\tthis._unfinalized_objects = {};\r\n\t\t}\r\n\r\n\t\t// TODO: With this construct, the loop will run no-op for as long\r\n\t\t// as there is time once file has finished reading. Consider a nice\r\n\t\t// way to stop loop when byte array is empty, without putting it in\r\n\t\t// the while-conditional, which will prevent finalizations from\r\n\t\t// happening after the last chunk.\r\n\t\twhile (this._pHasTime()) {\r\n\r\n\t\t\t// If we are currently working on an object, and the most recent chunk was\r\n\t\t\t// the last one in that object, finalize the current object.\r\n\t\t\tif (this._cur_mat && this._byteData.position >= this._cur_mat_end)\r\n\t\t\t\tthis.finalizeCurrentMaterial();\r\n\t\t\telse if (this._cur_obj && this._byteData.position >= this._cur_obj_end) {\r\n\t\t\t\t// Can't finalize at this point, because we have to wait until the full\r\n\t\t\t\t// animation section has been parsed for any potential pivot definitions\r\n\t\t\t\tthis._unfinalized_objects[this._cur_obj.name] = this._cur_obj;\r\n\t\t\t\tthis._cur_obj_end = Number.MAX_VALUE /*uint*/;\r\n\t\t\t\tthis._cur_obj = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._byteData.getBytesAvailable() > 0) {\r\n\t\t\t\tvar cid:number /*uint*/;\r\n\t\t\t\tvar len:number /*uint*/;\r\n\t\t\t\tvar end:number /*uint*/;\r\n\r\n\t\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\t\tlen = this._byteData.readUnsignedInt();\r\n\t\t\t\tend = this._byteData.position + (len - 6);\r\n\r\n\t\t\t\tswitch (cid) {\r\n\t\t\t\t\tcase 0x4D4D: // MAIN3DS\r\n\t\t\t\t\tcase 0x3D3D: // EDIT3DS\r\n\t\t\t\t\tcase 0xB000: // KEYF3DS\r\n\t\t\t\t\t\t// This types are \"container chunks\" and contain only\r\n\t\t\t\t\t\t// sub-chunks (no data on their own.) This means that\r\n\t\t\t\t\t\t// there is nothing more to parse at this point, and\r\n\t\t\t\t\t\t// instead we should progress to the next chunk, which\r\n\t\t\t\t\t\t// will be the first sub-chunk of this one.\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0xAFFF: // MATERIAL\r\n\t\t\t\t\t\tthis._cur_mat_end = end;\r\n\t\t\t\t\t\tthis._cur_mat = this.parseMaterial();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4000: // EDIT_OBJECT\r\n\t\t\t\t\t\tthis._cur_obj_end = end;\r\n\t\t\t\t\t\tthis._cur_obj = new ObjectVO();\r\n\t\t\t\t\t\tthis._cur_obj.name = this.readNulTermstring();\r\n\t\t\t\t\t\tthis._cur_obj.materials = new Array<string>();\r\n\t\t\t\t\t\tthis._cur_obj.materialFaces = {};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4100: // OBJ_TRIMESH\r\n\t\t\t\t\t\tthis._cur_obj.type = AssetType.MESH;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4110: // TRI_VERTEXL\r\n\t\t\t\t\t\tthis.parseVertexList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4120: // TRI_FACELIST\r\n\t\t\t\t\t\tthis.parseFaceList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4140: // TRI_MAPPINGCOORDS\r\n\t\t\t\t\t\tthis.parseUVList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4130: // Face materials\r\n\t\t\t\t\t\tthis.parseFaceMaterialList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4160: // Transform\r\n\t\t\t\t\t\tthis._cur_obj.transform = this.readTransform();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0xB002: // Object animation (including pivot)\r\n\t\t\t\t\t\tthis.parseObjectAnimation(end);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4150: // Smoothing groups\r\n\t\t\t\t\t\tthis.parseSmoothingGroups();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// Skip this (unknown) chunk\r\n\t\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Pause parsing if there were any dependencies found during this\r\n\t\t\t\t// iteration (i.e. if there are any dependencies that need to be\r\n\t\t\t\t// retrieved at this time.)\r\n\t\t\t\tif (this.dependencies.length) {\r\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// More parsing is required if the entire byte array has not yet\r\n\t\t// been read, or if there is a currently non-finalized object in\r\n\t\t// the pipeline.\r\n\t\tif (this._byteData.getBytesAvailable() || this._cur_obj || this._cur_mat) {\r\n\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t} else {\r\n\t\t\tvar name:string;\r\n\r\n\t\t\t// Finalize any remaining objects before ending.\r\n\t\t\tfor (name in this._unfinalized_objects) {\r\n\t\t\t\tvar obj:DisplayObjectContainer;\r\n\t\t\t\tobj = this.constructObject(this._unfinalized_objects[name]);\r\n\t\t\t\tif (obj) {\r\n\t\t\t\t\t//add to the content property\r\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(obj, name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate parseMaterial():MaterialVO\r\n\t{\r\n\t\tvar mat:MaterialVO;\r\n\r\n\t\tmat = new MaterialVO();\r\n\r\n\t\twhile (this._byteData.position < this._cur_mat_end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\t\t\tvar end:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\t\t\tend = this._byteData.position + (len - 6);\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xA000: // Material name\r\n\t\t\t\t\tmat.name = this.readNulTermstring();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA010: // Ambient color\r\n\t\t\t\t\tmat.ambientColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA020: // Diffuse color\r\n\t\t\t\t\tmat.diffuseColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA030: // Specular color\r\n\t\t\t\t\tmat.specularColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA081: // Two-sided, existence indicates \"true\"\r\n\t\t\t\t\tmat.twoSided = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA200: // Main (color) texture\r\n\t\t\t\t\tmat.colorMap = this.parseTexture(end);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA204: // Specular map\r\n\t\t\t\t\tmat.specularMap = this.parseTexture(end);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._byteData.position = end;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn mat;\r\n\t}\r\n\r\n\tprivate parseTexture(end:number /*uint*/):TextureVO\r\n\t{\r\n\t\tvar tex:TextureVO;\r\n\r\n\t\ttex = new TextureVO();\r\n\r\n\t\twhile (this._byteData.position < end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xA300:\r\n\t\t\t\t\ttex.url = this.readNulTermstring();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// Skip this unknown texture sub-chunk\r\n\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._textures[tex.url] = tex;\r\n\t\tthis._pAddDependency(tex.url, new URLRequest(tex.url));\r\n\r\n\t\treturn tex;\r\n\t}\r\n\r\n\tprivate parseVertexList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.verts = new Array<number>(count*3);\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.verts.length;\r\n\t\twhile (i < len) {\r\n\t\t\tvar x:number, y:number, z:number;\r\n\r\n\t\t\tx = this._byteData.readFloat();\r\n\t\t\ty = this._byteData.readFloat();\r\n\t\t\tz = this._byteData.readFloat();\r\n\r\n\t\t\tthis._cur_obj.verts[i++] = x;\r\n\t\t\tthis._cur_obj.verts[i++] = z;\r\n\t\t\tthis._cur_obj.verts[i++] = y;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseFaceList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.indices = new Array<number>(count*3) /*uint*/;\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.indices.length;\r\n\t\twhile (i < len) {\r\n\t\t\tvar i0:number /*uint*/, i1:number /*uint*/, i2:number /*uint*/;\r\n\r\n\t\t\ti0 = this._byteData.readUnsignedShort();\r\n\t\t\ti1 = this._byteData.readUnsignedShort();\r\n\t\t\ti2 = this._byteData.readUnsignedShort();\r\n\r\n\t\t\tthis._cur_obj.indices[i++] = i0;\r\n\t\t\tthis._cur_obj.indices[i++] = i2;\r\n\t\t\tthis._cur_obj.indices[i++] = i1;\r\n\r\n\t\t\t// Skip \"face info\", irrelevant in Away3D\r\n\t\t\tthis._byteData.position += 2;\r\n\t\t}\r\n\r\n\t\tthis._cur_obj.smoothingGroups = new Array<number>(count) /*uint*/;\r\n\t}\r\n\r\n\tprivate parseSmoothingGroups():void\r\n\t{\r\n\t\tvar len:number /*uint*/ = this._cur_obj.indices.length/3;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\t\twhile (i < len) {\r\n\t\t\tthis._cur_obj.smoothingGroups[i] = this._byteData.readUnsignedInt();\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseUVList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.uvs = new Array<number>(count*2);\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.uvs.length;\r\n\t\twhile (i < len) {\r\n\t\t\tthis._cur_obj.uvs[i++] = this._byteData.readFloat();\r\n\t\t\tthis._cur_obj.uvs[i++] = 1.0 - this._byteData.readFloat();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseFaceMaterialList():void\r\n\t{\r\n\t\tvar mat:string;\r\n\t\tvar count:number /*uint*/;\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar faces:Array<number> /*uint*/;\r\n\r\n\t\tmat = this.readNulTermstring();\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\r\n\t\tfaces = new Array<number>(count) /*uint*/;\r\n\t\ti = 0;\r\n\t\twhile (i < faces.length)\r\n\t\t\tfaces[i++] = this._byteData.readUnsignedShort();\r\n\r\n\t\tthis._cur_obj.materials.push(mat);\r\n\t\tthis._cur_obj.materialFaces[mat] = faces;\r\n\t}\r\n\r\n\tprivate parseObjectAnimation(end:number):void\r\n\t{\r\n\t\tvar vo:ObjectVO;\r\n\t\tvar obj:DisplayObjectContainer;\r\n\t\tvar pivot:Vector3D;\r\n\t\tvar name:string;\r\n\t\tvar hier:number /*uint*/;\r\n\r\n\t\t// Pivot defaults to origin\r\n\t\tpivot = new Vector3D;\r\n\r\n\t\twhile (this._byteData.position < end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xb010: // Name/hierarchy\r\n\t\t\t\t\tname = this.readNulTermstring();\r\n\t\t\t\t\tthis._byteData.position += 4;\r\n\t\t\t\t\thier = this._byteData.readShort();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xb013: // Pivot\r\n\t\t\t\t\tpivot.x = this._byteData.readFloat();\r\n\t\t\t\t\tpivot.z = this._byteData.readFloat();\r\n\t\t\t\t\tpivot.y = this._byteData.readFloat();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If name is \"$$$DUMMY\" this is an empty object (e.g. a container)\r\n\t\t// and will be ignored in this version of the parser\r\n\t\t// TODO: Implement containers in 3DS parser.\r\n\t\tif (name != '$$$DUMMY' && this._unfinalized_objects.hasOwnProperty(name)) {\r\n\t\t\tvo = this._unfinalized_objects[name];\r\n\t\t\tobj = this.constructObject(vo, pivot);\r\n\r\n\t\t\tif (obj) {\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(obj, vo.name);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tdelete this._unfinalized_objects[name];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate constructObject(obj:ObjectVO, pivot:Vector3D = null):DisplayObjectContainer\r\n\t{\r\n\t\tif (obj.type == AssetType.MESH) {\r\n\t\t\tvar i:number /*uint*/;\r\n\t\t\tvar sub:TriangleSubGeometry;\r\n\t\t\tvar geom:Geometry;\r\n\t\t\tvar mat:MaterialBase;\r\n\t\t\tvar mesh:Mesh;\r\n\t\t\tvar mtx:Matrix3D;\r\n\t\t\tvar vertices:Array<VertexVO>;\r\n\t\t\tvar faces:Array<FaceVO>;\r\n\r\n\t\t\tif (obj.materials.length > 1)\r\n\t\t\t\tconsole.log(\"The Away3D 3DS parser does not support multiple materials per mesh at this point.\");\r\n\r\n\t\t\t// Ignore empty objects\r\n\t\t\tif (!obj.indices || obj.indices.length == 0)\r\n\t\t\t\treturn null;\r\n\r\n\t\t\tvertices = new Array<VertexVO>(obj.verts.length/3);\r\n\t\t\tfaces = new Array<FaceVO>(obj.indices.length/3);\r\n\r\n\t\t\tthis.prepareData(vertices, faces, obj);\r\n\r\n\t\t\tif (this._useSmoothingGroups)\r\n\t\t\t\tthis.applySmoothGroups(vertices, faces);\r\n\r\n\t\t\tobj.verts = new Array<number>(vertices.length*3);\r\n\t\t\tfor (i = 0; i < vertices.length; i++) {\r\n\t\t\t\tobj.verts[i*3] = vertices[i].x;\r\n\t\t\t\tobj.verts[i*3 + 1] = vertices[i].y;\r\n\t\t\t\tobj.verts[i*3 + 2] = vertices[i].z;\r\n\t\t\t}\r\n\t\t\tobj.indices = new Array<number>(faces.length*3) /*uint*/;\r\n\r\n\t\t\tfor (i = 0; i < faces.length; i++) {\r\n\t\t\t\tobj.indices[i*3] = faces[i].a;\r\n\t\t\t\tobj.indices[i*3 + 1] = faces[i].b;\r\n\t\t\t\tobj.indices[i*3 + 2] = faces[i].c;\r\n\t\t\t}\r\n\r\n\t\t\tif (obj.uvs) {\r\n\t\t\t\t// If the object had UVs to start with, use UVs generated by\r\n\t\t\t\t// smoothing group splitting algorithm. Otherwise those UVs\r\n\t\t\t\t// will be nonsense and should be skipped.\r\n\t\t\t\tobj.uvs = new Array<number>(vertices.length*2);\r\n\t\t\t\tfor (i = 0; i < vertices.length; i++) {\r\n\t\t\t\t\tobj.uvs[i*2] = vertices[i].u;\r\n\t\t\t\t\tobj.uvs[i*2 + 1] = vertices[i].v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tgeom = new Geometry();\r\n\r\n\t\t\t// Construct sub-geometries (potentially splitting buffers)\r\n\t\t\t// and add them to geometry.\r\n\t\t\tsub = new TriangleSubGeometry(true);\r\n\t\t\tsub.updateIndices(obj.indices);\r\n\t\t\tsub.updatePositions(obj.verts);\r\n\t\t\tsub.updateUVs(obj.uvs);\r\n\r\n\t\t\tgeom.addSubGeometry(sub);\r\n\r\n\t\t\tif (obj.materials.length > 0) {\r\n\t\t\t\tvar mname:string;\r\n\t\t\t\tmname = obj.materials[0];\r\n\t\t\t\tmat = this._materials[mname].material;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply pivot translation to geometry if a pivot was\r\n\t\t\t// found while parsing the keyframe chunk earlier.\r\n\t\t\tif (pivot) {\r\n\t\t\t\tif (obj.transform) {\r\n\t\t\t\t\t// If a transform was found while parsing the\r\n\t\t\t\t\t// object chunk, use it to find the local pivot vector\r\n\t\t\t\t\tvar dat:Array<number> = obj.transform.concat();\r\n\t\t\t\t\tdat[12] = 0;\r\n\t\t\t\t\tdat[13] = 0;\r\n\t\t\t\t\tdat[14] = 0;\r\n\t\t\t\t\tmtx = new Matrix3D(dat);\r\n\t\t\t\t\tpivot = mtx.transformVector(pivot);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpivot.scaleBy(-1);\r\n\r\n\t\t\t\tmtx = new Matrix3D();\r\n\t\t\t\tmtx.appendTranslation(pivot.x, pivot.y, pivot.z);\r\n\t\t\t\tgeom.applyTransformation(mtx);\r\n\t\t\t}\r\n\r\n\t\t\t// Apply transformation to geometry if a transformation\r\n\t\t\t// was found while parsing the object chunk earlier.\r\n\t\t\tif (obj.transform) {\r\n\t\t\t\tmtx = new Matrix3D(obj.transform);\r\n\t\t\t\tmtx.invert();\r\n\t\t\t\tgeom.applyTransformation(mtx);\r\n\t\t\t}\r\n\r\n\t\t\t// Final transform applied to geometry. Finalize the geometry,\r\n\t\t\t// which will no longer be modified after this point.\r\n\t\t\tthis._pFinalizeAsset(geom, obj.name.concat('_geom'));\r\n\r\n\t\t\t// Build mesh and return it\r\n\t\t\tmesh = new Mesh(geom, mat);\r\n\t\t\tmesh.transform.matrix3D = new Matrix3D(obj.transform);\r\n\t\t\treturn mesh;\r\n\t\t}\r\n\r\n\t\t// If reached, unknown\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate prepareData(vertices:Array<VertexVO>, faces:Array<FaceVO>, obj:ObjectVO):void\r\n\t{\r\n\t\t// convert raw ObjectVO's data to structured VertexVO and FaceVO\r\n\t\tvar i:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar k:number /*int*/;\r\n\t\tvar len:number /*int*/ = obj.verts.length;\r\n\t\tfor (i = 0, j = 0, k = 0; i < len;) {\r\n\t\t\tvar v:VertexVO = new VertexVO;\r\n\t\t\tv.x = obj.verts[i++];\r\n\t\t\tv.y = obj.verts[i++];\r\n\t\t\tv.z = obj.verts[i++];\r\n\t\t\tif (obj.uvs) {\r\n\t\t\t\tv.u = obj.uvs[j++];\r\n\t\t\t\tv.v = obj.uvs[j++];\r\n\t\t\t}\r\n\t\t\tvertices[k++] = v;\r\n\t\t}\r\n\t\tlen = obj.indices.length;\r\n\t\tfor (i = 0, k = 0; i < len;) {\r\n\t\t\tvar f:FaceVO = new FaceVO();\r\n\t\t\tf.a = obj.indices[i++];\r\n\t\t\tf.b = obj.indices[i++];\r\n\t\t\tf.c = obj.indices[i++];\r\n\t\t\tf.smoothGroup = obj.smoothingGroups[k] || 0;\r\n\t\t\tfaces[k++] = f;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate applySmoothGroups(vertices:Array<VertexVO>, faces:Array<FaceVO>):void\r\n\t{\r\n\t\t// clone vertices according to following rule:\r\n\t\t// clone if vertex's in faces from groups 1+2 and 3\r\n\t\t// don't clone if vertex's in faces from groups 1+2, 3 and 1+3\r\n\r\n\t\tvar i:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar k:number /*int*/;\r\n\t\tvar l:number /*int*/;\r\n\t\tvar len:number /*int*/;\r\n\t\tvar numVerts:number /*uint*/ = vertices.length;\r\n\t\tvar numFaces:number /*uint*/ = faces.length;\r\n\r\n\t\t// extract groups data for vertices\r\n\t\tvar vGroups:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\r\n\t\tfor (i = 0; i < numVerts; i++)\r\n\t\t\tvGroups[i] = new Array<number>() /*uint*/;\r\n\t\tfor (i = 0; i < numFaces; i++) {\r\n\t\t\tvar face:FaceVO = faces[i];\r\n\t\t\tfor (j = 0; j < 3; j++) {\r\n\t\t\t\tvar groups:Array<number> /*uint*/ = vGroups[(j == 0)? face.a : ((j == 1)? face.b : face.c)];\r\n\t\t\t\tvar group:number /*uint*/ = face.smoothGroup;\r\n\t\t\t\tfor (k = groups.length - 1; k >= 0; k--) {\r\n\t\t\t\t\tif ((group & groups[k]) > 0) {\r\n\t\t\t\t\t\tgroup |= groups[k];\r\n\t\t\t\t\t\tgroups.splice(k, 1);\r\n\t\t\t\t\t\tk = groups.length - 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tgroups.push(group);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// clone vertices\r\n\t\tvar vClones:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\r\n\t\tfor (i = 0; i < numVerts; i++) {\r\n\t\t\tif ((len = vGroups[i].length) < 1)\r\n\t\t\t\tcontinue;\r\n\t\t\tvar clones:Array<number> /*uint*/ = new Array<number>(len) /*uint*/;\r\n\t\t\tvClones[i] = clones;\r\n\t\t\tclones[0] = i;\r\n\t\t\tvar v0:VertexVO = vertices[i];\r\n\t\t\tfor (j = 1; j < len; j++) {\r\n\t\t\t\tvar v1:VertexVO = new VertexVO;\r\n\t\t\t\tv1.x = v0.x;\r\n\t\t\t\tv1.y = v0.y;\r\n\t\t\t\tv1.z = v0.z;\r\n\t\t\t\tv1.u = v0.u;\r\n\t\t\t\tv1.v = v0.v;\r\n\t\t\t\tclones[j] = vertices.length;\r\n\t\t\t\tvertices.push(v1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tnumVerts = vertices.length;\r\n\r\n\t\tfor (i = 0; i < numFaces; i++) {\r\n\t\t\tface = faces[i];\r\n\t\t\tgroup = face.smoothGroup;\r\n\t\t\tfor (j = 0; j < 3; j++) {\r\n\t\t\t\tk = (j == 0)? face.a : ((j == 1)? face.b : face.c);\r\n\t\t\t\tgroups = vGroups[k];\r\n\t\t\t\tlen = groups.length;\r\n\t\t\t\tclones = vClones[k];\r\n\t\t\t\tfor (l = 0; l < len; l++) {\r\n\t\t\t\t\tif (((group == 0) && (groups[l] == 0)) || ((group & groups[l]) > 0)) {\r\n\t\t\t\t\t\tvar index:number /*uint*/ = clones[l];\r\n\t\t\t\t\t\tif (group == 0) {\r\n\t\t\t\t\t\t\t// vertex is unique if no smoothGroup found\r\n\t\t\t\t\t\t\tgroups.splice(l, 1);\r\n\t\t\t\t\t\t\tclones.splice(l, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (j == 0)\r\n\t\t\t\t\t\t\tface.a = index; else if (j == 1)\r\n\t\t\t\t\t\t\tface.b = index; else\r\n\t\t\t\t\t\t\tface.c = index;\r\n\t\t\t\t\t\tl = len;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate finalizeCurrentMaterial():void\r\n\t{\r\n\t\tvar mat:MethodMaterial;\r\n\r\n\t\tif (this._cur_mat.colorMap)\r\n\t\t\tmat = new MethodMaterial(this._cur_mat.colorMap.texture || DefaultMaterialManager.getDefaultTexture());\r\n\t\telse\r\n\t\t\tmat = new MethodMaterial(this._cur_mat.ambientColor);\r\n\r\n\t\tmat.diffuseColor = this._cur_mat.diffuseColor;\r\n\t\tmat.specularColor = this._cur_mat.specularColor;\r\n\r\n\t\tif (this.materialMode >= 2)\r\n\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS\r\n\r\n\t\tmat.bothSides = this._cur_mat.twoSided;\r\n\r\n\t\tthis._pFinalizeAsset(mat, this._cur_mat.name);\r\n\r\n\t\tthis._materials[this._cur_mat.name] = this._cur_mat;\r\n\t\tthis._cur_mat.material = mat;\r\n\r\n\t\tthis._cur_mat = null;\r\n\t}\r\n\r\n\tprivate readNulTermstring():string\r\n\t{\r\n\t\tvar chr:number /*int*/;\r\n\t\tvar str:string = \"\";\r\n\r\n\t\twhile ((chr = this._byteData.readUnsignedByte()) > 0)\r\n\t\t\tstr += String.fromCharCode(chr);\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\tprivate readTransform():Array<number>\r\n\t{\r\n\t\tvar data:Array<number>;\r\n\r\n\t\tdata = new Array<number>(16);\r\n\r\n\t\t// X axis\r\n\t\tdata[0] = this._byteData.readFloat(); // X\r\n\t\tdata[2] = this._byteData.readFloat(); // Z\r\n\t\tdata[1] = this._byteData.readFloat(); // Y\r\n\t\tdata[3] = 0;\r\n\r\n\t\t// Z axis\r\n\t\tdata[8] = this._byteData.readFloat(); // X\r\n\t\tdata[10] = this._byteData.readFloat(); // Z\r\n\t\tdata[9] = this._byteData.readFloat(); // Y\r\n\t\tdata[11] = 0;\r\n\r\n\t\t// Y Axis\r\n\t\tdata[4] = this._byteData.readFloat(); // X\r\n\t\tdata[6] = this._byteData.readFloat(); // Z\r\n\t\tdata[5] = this._byteData.readFloat(); // Y\r\n\t\tdata[7] = 0;\r\n\r\n\t\t// Translation\r\n\t\tdata[12] = this._byteData.readFloat(); // X\r\n\t\tdata[14] = this._byteData.readFloat(); // Z\r\n\t\tdata[13] = this._byteData.readFloat(); // Y\r\n\t\tdata[15] = 1;\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tprivate readColor():number /*int*/\r\n\t{\r\n\t\tvar cid:number /*int*/;\r\n\t\tvar len:number /*int*/;\r\n\t\tvar r:number /*int*/, g:number /*int*/, b:number /*int*/;\r\n\r\n\t\tcid = this._byteData.readUnsignedShort();\r\n\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\tswitch (cid) {\r\n\t\t\tcase 0x0010: // Floats\r\n\t\t\t\tr = this._byteData.readFloat()*255;\r\n\t\t\t\tg = this._byteData.readFloat()*255;\r\n\t\t\t\tb = this._byteData.readFloat()*255;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0x0011: // 24-bit color\r\n\t\t\t\tr = this._byteData.readUnsignedByte();\r\n\t\t\t\tg = this._byteData.readUnsignedByte();\r\n\t\t\t\tb = this._byteData.readUnsignedByte();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn (r << 16) | (g << 8) | b;\r\n\t}\r\n}\r\n\r\nexport = Max3DSParser;\r\n\r\n/**\r\n *\r\n */\r\nclass FaceVO\r\n{\r\n\tpublic a:number /*int*/;\r\n\tpublic b:number /*int*/;\r\n\tpublic c:number /*int*/;\r\n\tpublic smoothGroup:number /*int*/;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass MaterialVO\r\n{\r\n\tpublic name:string;\r\n\tpublic ambientColor:number /*int*/;\r\n\tpublic diffuseColor:number /*int*/;\r\n\tpublic specularColor:number /*int*/;\r\n\tpublic twoSided:boolean;\r\n\tpublic colorMap:TextureVO;\r\n\tpublic specularMap:TextureVO;\r\n\tpublic material:MaterialBase;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass ObjectVO\r\n{\r\n\tpublic name:string;\r\n\tpublic type:string;\r\n\tpublic pivotX:number;\r\n\tpublic pivotY:number;\r\n\tpublic pivotZ:number;\r\n\tpublic transform:Array<number>;\r\n\tpublic verts:Array<number>;\r\n\tpublic indices:Array<number> /*int*/;\r\n\tpublic uvs:Array<number>;\r\n\tpublic materialFaces:Object;\r\n\tpublic materials:Array<string>;\r\n\tpublic smoothingGroups:Array<number> /*int*/;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass TextureVO\r\n{\r\n\tpublic url:string;\r\n\tpublic texture:Texture2DBase;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass VertexVO\r\n{\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n\tpublic z:number;\r\n\tpublic u:number;\r\n\tpublic v:number;\r\n\tpublic normal:Vector3D;\r\n\tpublic tangent:Vector3D;\r\n}",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-renderergl/lib/managers/DefaultMaterialManager\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\r\n\r\n/**\r\n * OBJParser provides a parser for the OBJ data type.\r\n */\r\nclass OBJParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _charIndex:number;\r\n\tprivate _oldIndex:number;\r\n\tprivate _stringLength:number;\r\n\tprivate _currentObject:ObjectGroup;\r\n\tprivate _currentGroup:Group;\r\n\tprivate _currentMaterialGroup:MaterialGroup;\r\n\tprivate _objects:Array<ObjectGroup>;\r\n\tprivate _materialIDs:string[];\r\n\tprivate _materialLoaded:Array<LoadedMaterial>;\r\n\tprivate _materialSpecularData:Array<SpecularData>;\r\n\tprivate _meshes:Array<Mesh>;\r\n\tprivate _lastMtlID:string;\r\n\tprivate _objectIndex:number;\r\n\tprivate _realIndices;\r\n\tprivate _vertexIndex:number;\r\n\tprivate _vertices:Array<Vertex>;\r\n\tprivate _vertexNormals:Array<Vertex>;\r\n\tprivate _uvs:Array<UV>;\r\n\tprivate _scale:number;\r\n\tprivate _mtlLib:boolean;\r\n\tprivate _mtlLibLoaded:boolean = true;\r\n\tprivate _activeMaterialID:string = \"\";\r\n\r\n\t/**\r\n\t * Creates a new OBJParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(scale:number = 1)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._scale = scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Scaling factor applied directly to vertices data\r\n\t * @param value The scaling factor.\r\n\t */\r\n\tpublic set scale(value:number)\r\n\t{\r\n\t\tthis._scale = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"obj\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\tvar content:string = ParserUtils.toString(data);\r\n\t\tvar hasV:boolean = false;\r\n\t\tvar hasF:boolean = false;\r\n\r\n\t\tif (content) {\r\n\t\t\thasV = content.indexOf(\"\\nv \") != -1;\r\n\t\t\thasF = content.indexOf(\"\\nf \") != -1;\r\n\t\t}\r\n\r\n\t\treturn hasV && hasF;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.id == 'mtl') {\r\n\t\t\tvar str:string = ParserUtils.toString(resourceDependency.data);\r\n\t\t\tthis.parseMtl(str);\r\n\r\n\t\t} else {\r\n\t\t\tvar asset:IAsset;\r\n\r\n\t\t\tif (resourceDependency.assets.length != 1) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tasset = resourceDependency.assets[0];\r\n\r\n\t\t\tif (asset.assetType == AssetType.TEXTURE) {\r\n\r\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\t\tlm.materialID = resourceDependency.id;\r\n\t\t\t\tlm.texture = <Texture2DBase> asset;\r\n\r\n\t\t\t\tthis._materialLoaded.push(lm);\r\n\r\n\t\t\t\tif (this._meshes.length > 0) {\r\n\t\t\t\t\tthis.applyMaterial(lm);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.id == \"mtl\") {\r\n\t\t\tthis._mtlLib = false;\r\n\t\t\tthis._mtlLibLoaded = false;\r\n\t\t} else {\r\n\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\tlm.materialID = resourceDependency.id;\r\n\t\t\tthis._materialLoaded.push(lm);\r\n\t\t}\r\n\r\n\t\tif (this._meshes.length > 0)\r\n\t\t\tthis.applyMaterial(lm);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar line:string;\r\n\t\tvar creturn:string = String.fromCharCode(10);\r\n\t\tvar trunk;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\t// Merge linebreaks that are immediately preceeded by\r\n\t\t\t// the \"escape\" backward slash into single lines.\r\n\t\t\tthis._textData = this._textData.replace(/\\\\[\\r\\n]+\\s*/gm, ' ');\r\n\t\t}\r\n\r\n\t\tif (this._textData.indexOf(creturn) == -1)\r\n\t\t\tcreturn = String.fromCharCode(13);\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._startedParsing = true;\r\n\t\t\tthis._vertices = new Array<Vertex>();\r\n\t\t\tthis._vertexNormals = new Array<Vertex>();\r\n\t\t\tthis._materialIDs = new Array<string>();\r\n\t\t\tthis._materialLoaded = new Array<LoadedMaterial>();\r\n\t\t\tthis._meshes = new Array<Mesh>();\r\n\t\t\tthis._uvs = new Array<UV>();\r\n\t\t\tthis._stringLength = this._textData.length;\r\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, 0);\r\n\t\t\tthis._oldIndex = 0;\r\n\t\t\tthis._objects = new Array<ObjectGroup>();\r\n\t\t\tthis._objectIndex = 0;\r\n\t\t}\r\n\r\n\t\twhile (this._charIndex < this._stringLength && this._pHasTime()) {\r\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, this._oldIndex);\r\n\r\n\t\t\tif (this._charIndex == -1)\r\n\t\t\t\tthis._charIndex = this._stringLength;\r\n\r\n\t\t\tline = this._textData.substring(this._oldIndex, this._charIndex);\r\n\t\t\tline = line.split('\\r').join(\"\");\r\n\t\t\tline = line.replace(\"  \", \" \");\r\n\t\t\ttrunk = line.split(\" \");\r\n\t\t\tthis._oldIndex = this._charIndex + 1;\r\n\t\t\tthis.parseLine(trunk);\r\n\r\n\t\t\t// If whatever was parsed on this line resulted in the\r\n\t\t\t// parsing being paused to retrieve dependencies, break\r\n\t\t\t// here and do not continue parsing until un-paused.\r\n\t\t\tif (this.parsingPaused) {\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._charIndex >= this._stringLength) {\r\n\r\n\t\t\tif (this._mtlLib && !this._mtlLibLoaded) {\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\r\n\t\t\tthis.translate();\r\n\t\t\tthis.applyMaterials();\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a single line in the OBJ file.\r\n\t */\r\n\tprivate parseLine(trunk)\r\n\t{\r\n\t\tswitch (trunk[0]) {\r\n\r\n\t\t\tcase \"mtllib\":\r\n\r\n\t\t\t\tthis._mtlLib = true;\r\n\t\t\t\tthis._mtlLibLoaded = false;\r\n\t\t\t\tthis.loadMtl(trunk[1]);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"g\":\r\n\r\n\t\t\t\tthis.createGroup(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"o\":\r\n\r\n\t\t\t\tthis.createObject(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"usemtl\":\r\n\r\n\t\t\t\tif (this._mtlLib) {\r\n\r\n\t\t\t\t\tif (!trunk[1])\r\n\t\t\t\t\t\ttrunk[1] = \"def000\";\r\n\r\n\t\t\t\t\tthis._materialIDs.push(trunk[1]);\r\n\t\t\t\t\tthis._activeMaterialID = trunk[1];\r\n\r\n\t\t\t\t\tif (this._currentGroup)\r\n\t\t\t\t\t\tthis._currentGroup.materialID = this._activeMaterialID;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"v\":\r\n\r\n\t\t\t\tthis.parseVertex(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"vt\":\r\n\r\n\t\t\t\tthis.parseUV(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"vn\":\r\n\r\n\t\t\t\tthis.parseVertexNormal(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"f\":\r\n\r\n\t\t\t\tthis.parseFace(trunk);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the parsed data into an Away3D scenegraph structure\r\n\t */\r\n\tprivate translate()\r\n\t{\r\n\t\tfor (var objIndex:number = 0; objIndex < this._objects.length; ++objIndex) {\r\n\t\t\tvar groups:Array<Group> = this._objects[objIndex].groups;\r\n\t\t\tvar numGroups:number = groups.length;\r\n\t\t\tvar materialGroups:Array<MaterialGroup>;\r\n\t\t\tvar numMaterialGroups:number;\r\n\t\t\tvar geometry:Geometry;\r\n\t\t\tvar mesh:Mesh;\r\n\r\n\t\t\tvar m:number;\r\n\t\t\tvar sm:number;\r\n\t\t\tvar bmMaterial:MethodMaterial;\r\n\r\n\t\t\tfor (var g:number = 0; g < numGroups; ++g) {\r\n\t\t\t\tgeometry = new Geometry();\r\n\t\t\t\tmaterialGroups = groups[g].materialGroups;\r\n\t\t\t\tnumMaterialGroups = materialGroups.length;\r\n\r\n\t\t\t\tfor (m = 0; m < numMaterialGroups; ++m)\r\n\t\t\t\t\tthis.translateMaterialGroup(materialGroups[m], geometry);\r\n\r\n\t\t\t\tif (geometry.subGeometries.length == 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Finalize and force type-based name\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> geometry);//, \"\");\r\n\r\n\t\t\t\tbmMaterial = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\r\n\t\t\t\t//check for multipass\r\n\t\t\t\tif (this.materialMode >= 2)\r\n\t\t\t\t\tbmMaterial.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\tmesh = new Mesh(geometry, bmMaterial);\r\n\r\n\t\t\t\tif (this._objects[objIndex].name) {\r\n\t\t\t\t\t// this is a full independent object ('o' tag in OBJ file)\r\n\t\t\t\t\tmesh.name = this._objects[objIndex].name;\r\n\r\n\t\t\t\t} else if (groups[g].name) {\r\n\r\n\t\t\t\t\t// this is a group so the sub groups contain the actual mesh object names ('g' tag in OBJ file)\r\n\t\t\t\t\tmesh.name = groups[g].name;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// No name stored. Use empty string which will force it\r\n\t\t\t\t\t// to be overridden by finalizeAsset() to type default.\r\n\t\t\t\t\tmesh.name = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._meshes.push(mesh);\r\n\r\n\t\t\t\tif (groups[g].materialID != \"\")\r\n\t\t\t\t\tbmMaterial.name = groups[g].materialID + \"~\" + mesh.name; else\r\n\t\t\t\t\tbmMaterial.name = this._lastMtlID + \"~\" + mesh.name;\r\n\r\n\t\t\t\tif (mesh.subMeshes.length > 1) {\r\n\t\t\t\t\tfor (sm = 1; sm < mesh.subMeshes.length; ++sm)\r\n\t\t\t\t\t\tmesh.subMeshes[sm].material = bmMaterial;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> mesh);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Translates an obj's material group to a subgeometry.\r\n\t * @param materialGroup The material group data to convert.\r\n\t * @param geometry The Geometry to contain the converted SubGeometry.\r\n\t */\r\n\tprivate translateMaterialGroup(materialGroup:MaterialGroup, geometry:Geometry)\r\n\t{\r\n\t\tvar faces:Array<FaceData> = materialGroup.faces;\r\n\t\tvar face:FaceData;\r\n\t\tvar numFaces:number = faces.length;\r\n\t\tvar numVerts:number;\r\n\t\tvar sub:TriangleSubGeometry;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\tvar normals:Array<number> = new Array<number>();\r\n\t\tvar indices:Array<number> /*uint*/ = new Array<number>();\r\n\r\n\t\tthis._realIndices = [];\r\n\t\tthis._vertexIndex = 0;\r\n\r\n\t\tvar j:number;\r\n\t\tfor (var i:number = 0; i < numFaces; ++i) {\r\n\r\n\t\t\tface = faces[i];\r\n\t\t\tnumVerts = face.indexIds.length - 1;\r\n\r\n\t\t\tfor (j = 1; j < numVerts; ++j) {\r\n\r\n\t\t\t\tthis.translateVertexData(face, j, vertices, uvs, indices, normals);\r\n\t\t\t\tthis.translateVertexData(face, 0, vertices, uvs, indices, normals);\r\n\t\t\t\tthis.translateVertexData(face, j + 1, vertices, uvs, indices, normals);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (vertices.length > 0) {\r\n\t\t\tsub = new TriangleSubGeometry(true);\r\n\t\t\tsub.autoDeriveNormals = normals.length? false : true;\r\n\t\t\tsub.updateIndices(indices);\r\n\t\t\tsub.updatePositions(vertices);\r\n\t\t\tsub.updateVertexNormals(normals);\r\n\t\t\tsub.updateUVs(uvs);\r\n\r\n\t\t\tgeometry.addSubGeometry(sub);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate translateVertexData(face:FaceData, vertexIndex:number, vertices:Array<number>, uvs:Array<number>, indices:Array<number> /*uint*/, normals:Array<number>)\r\n\t{\r\n\t\tvar index:number;\r\n\t\tvar vertex:Vertex;\r\n\t\tvar vertexNormal:Vertex;\r\n\t\tvar uv:UV;\r\n\r\n\t\tif (!this._realIndices[face.indexIds[vertexIndex]]) {\r\n\r\n\t\t\tindex = this._vertexIndex;\r\n\t\t\tthis._realIndices[face.indexIds[vertexIndex]] = ++this._vertexIndex;\r\n\t\t\tvertex = this._vertices[face.vertexIndices[vertexIndex] - 1];\r\n\t\t\tvertices.push(vertex.x*this._scale, vertex.y*this._scale, vertex.z*this._scale);\r\n\r\n\t\t\tif (face.normalIndices.length > 0) {\r\n\t\t\t\tvertexNormal = this._vertexNormals[face.normalIndices[vertexIndex] - 1];\r\n\t\t\t\tnormals.push(vertexNormal.x, vertexNormal.y, vertexNormal.z);\r\n\t\t\t}\r\n\r\n\t\t\tif (face.uvIndices.length > 0) {\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tuv = this._uvs[face.uvIndices[vertexIndex] - 1];\r\n\t\t\t\t\tuvs.push(uv.u, uv.v);\r\n\r\n\t\t\t\t} catch (e) {\r\n\r\n\t\t\t\t\tswitch (vertexIndex) {\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\tuvs.push(0, 1);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\tuvs.push(.5, 0);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\tuvs.push(1, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tindex = this._realIndices[face.indexIds[vertexIndex]] - 1;\r\n\t\t}\r\n\r\n\t\tindices.push(index);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new object group.\r\n\t * @param trunk The data block containing the object tag and its parameters\r\n\t */\r\n\tprivate createObject(trunk)\r\n\t{\r\n\t\tthis._currentGroup = null;\r\n\t\tthis._currentMaterialGroup = null;\r\n\t\tthis._objects.push(this._currentObject = new ObjectGroup());\r\n\r\n\t\tif (trunk)\r\n\t\t\tthis._currentObject.name = trunk[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new group.\r\n\t * @param trunk The data block containing the group tag and its parameters\r\n\t */\r\n\tprivate createGroup(trunk)\r\n\t{\r\n\t\tif (!this._currentObject)\r\n\t\t\tthis.createObject(null);\r\n\t\tthis._currentGroup = new Group();\r\n\r\n\t\tthis._currentGroup.materialID = this._activeMaterialID;\r\n\r\n\t\tif (trunk)\r\n\t\t\tthis._currentGroup.name = trunk[1];\r\n\t\tthis._currentObject.groups.push(this._currentGroup);\r\n\r\n\t\tthis.createMaterialGroup(null);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new material group.\r\n\t * @param trunk The data block containing the material tag and its parameters\r\n\t */\r\n\tprivate createMaterialGroup(trunk)\r\n\t{\r\n\t\tthis._currentMaterialGroup = new MaterialGroup();\r\n\t\tif (trunk)\r\n\t\t\tthis._currentMaterialGroup.url = trunk[1];\r\n\t\tthis._currentGroup.materialGroups.push(this._currentMaterialGroup);\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next vertex coordinates.\r\n\t * @param trunk The data block containing the vertex tag and its parameters\r\n\t */\r\n\tprivate parseVertex(trunk)\r\n\t{\r\n\t\t//for the very rare cases of other delimiters/charcodes seen in some obj files\r\n\r\n\t\tvar v1:number, v2:number , v3:number;\r\n\t\tif (trunk.length > 4) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\r\n\t\t\tv1 = <number> nTrunk[0];\r\n\t\t\tv2 = <number> nTrunk[1];\r\n\t\t\tv3 = <number> -nTrunk[2];\r\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\r\n\r\n\t\t} else {\r\n\t\t\tv1 = <number> parseFloat(trunk[1]);\r\n\t\t\tv2 = <number> parseFloat(trunk[2]);\r\n\t\t\tv3 = <number> -parseFloat(trunk[3]);\r\n\r\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next uv coordinates.\r\n\t * @param trunk The data block containing the uv tag and its parameters\r\n\t */\r\n\tprivate parseUV(trunk)\r\n\t{\r\n\t\tif (trunk.length > 3) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\t\t\tthis._uvs.push(new UV(nTrunk[0], 1 - nTrunk[1]));\r\n\r\n\t\t} else {\r\n\t\t\tthis._uvs.push(new UV(parseFloat(trunk[1]), 1 - parseFloat(trunk[2])));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next vertex normal coordinates.\r\n\t * @param trunk The data block containing the vertex normal tag and its parameters\r\n\t */\r\n\tprivate parseVertexNormal(trunk)\r\n\t{\r\n\t\tif (trunk.length > 4) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\t\t\tthis._vertexNormals.push(new Vertex(nTrunk[0], nTrunk[1], -nTrunk[2]));\r\n\r\n\t\t} else {\r\n\t\t\tthis._vertexNormals.push(new Vertex(parseFloat(trunk[1]), parseFloat(trunk[2]), -parseFloat(trunk[3])));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next face's indices.\r\n\t * @param trunk The data block containing the face tag and its parameters\r\n\t */\r\n\tprivate parseFace(trunk)\r\n\t{\r\n\t\tvar len:number = trunk.length;\r\n\t\tvar face:FaceData = new FaceData();\r\n\r\n\t\tif (!this._currentGroup) {\r\n\t\t\tthis.createGroup(null);\r\n\t\t}\r\n\r\n\t\tvar indices;\r\n\t\tfor (var i:number = 1; i < len; ++i) {\r\n\r\n\t\t\tif (trunk[i] == \"\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tindices = trunk[i].split(\"/\");\r\n\t\t\tface.vertexIndices.push(this.parseIndex(parseInt(indices[0]), this._vertices.length));\r\n\r\n\t\t\tif (indices[1] && String(indices[1]).length > 0)\r\n\t\t\t\tface.uvIndices.push(this.parseIndex(parseInt(indices[1]), this._uvs.length));\r\n\r\n\t\t\tif (indices[2] && String(indices[2]).length > 0)\r\n\t\t\t\tface.normalIndices.push(this.parseIndex(parseInt(indices[2]), this._vertexNormals.length));\r\n\r\n\t\t\tface.indexIds.push(trunk[i]);\r\n\t\t}\r\n\r\n\t\tthis._currentMaterialGroup.faces.push(face);\r\n\t}\r\n\r\n\t/**\r\n\t * This is a hack around negative face coords\r\n\t */\r\n\tprivate parseIndex(index:number, length:number):number\r\n\t{\r\n\t\tif (index < 0)\r\n\t\t\treturn index + length + 1; else\r\n\t\t\treturn index;\r\n\t}\r\n\r\n\tprivate parseMtl(data:string)\r\n\t{\r\n\t\tvar materialDefinitions = data.split('newmtl');\r\n\t\tvar lines;\r\n\t\tvar trunk;\r\n\t\tvar j:number;\r\n\r\n\t\tvar basicSpecularMethod:SpecularBasicMethod;\r\n\t\tvar useSpecular:boolean;\r\n\t\tvar useColor:boolean;\r\n\t\tvar diffuseColor:number;\r\n\t\tvar color:number;\r\n\t\tvar specularColor:number;\r\n\t\tvar specular:number;\r\n\t\tvar alpha:number;\r\n\t\tvar mapkd:string;\r\n\r\n\t\tfor (var i:number = 0; i < materialDefinitions.length; ++i) {\r\n\r\n\r\n\t\t\tlines = (materialDefinitions[i].split('\\r')).join(\"\").split('\\n');\r\n\t\t\t//lines = (materialDefinitions[i].split('\\r') as Array).join(\"\").split('\\n');\r\n\r\n\t\t\tif (lines.length == 1)\r\n\t\t\t\tlines = materialDefinitions[i].split(String.fromCharCode(13));\r\n\r\n\t\t\tdiffuseColor = color = specularColor = 0xFFFFFF;\r\n\t\t\tspecular = 0;\r\n\t\t\tuseSpecular = false;\r\n\t\t\tuseColor = false;\r\n\t\t\talpha = 1;\r\n\t\t\tmapkd = \"\";\r\n\r\n\t\t\tfor (j = 0; j < lines.length; ++j) {\r\n\r\n\t\t\t\tlines[j] = lines[j].replace(/\\s+$/, \"\");\r\n\r\n\t\t\t\tif (lines[j].substring(0, 1) != \"#\" && (j == 0 || lines[j] != \"\")) {\r\n\t\t\t\t\ttrunk = lines[j].split(\" \");\r\n\r\n\t\t\t\t\tif (String(trunk[0]).charCodeAt(0) == 9 || String(trunk[0]).charCodeAt(0) == 32)\r\n\t\t\t\t\t\ttrunk[0] = trunk[0].substring(1, trunk[0].length);\r\n\r\n\t\t\t\t\tif (j == 0) {\r\n\t\t\t\t\t\tthis._lastMtlID = trunk.join(\"\");\r\n\t\t\t\t\t\tthis._lastMtlID = (this._lastMtlID == \"\")? \"def000\" : this._lastMtlID;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tswitch (trunk[0]) {\r\n\r\n\t\t\t\t\t\t\tcase \"Ka\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3])))\r\n\t\t\t\t\t\t\t\t\tcolor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Ks\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\r\n\t\t\t\t\t\t\t\t\tspecularColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\t\tuseSpecular = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Ns\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\r\n\t\t\t\t\t\t\t\t\tspecular = Number(trunk[1])*0.001;\r\n\t\t\t\t\t\t\t\tif (specular == 0)\r\n\t\t\t\t\t\t\t\t\tuseSpecular = false;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Kd\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\r\n\t\t\t\t\t\t\t\t\tdiffuseColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\t\tuseColor = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"tr\":\r\n\t\t\t\t\t\t\tcase \"d\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\r\n\t\t\t\t\t\t\t\t\talpha = Number(trunk[1]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"map_Kd\":\r\n\t\t\t\t\t\t\t\tmapkd = this.parseMapKdString(trunk);\r\n\t\t\t\t\t\t\t\tmapkd = mapkd.replace(/\\\\/g, \"/\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (mapkd != \"\") {\r\n\r\n\t\t\t\tif (useSpecular) {\r\n\r\n\t\t\t\t\tbasicSpecularMethod = new SpecularBasicMethod();\r\n\t\t\t\t\tbasicSpecularMethod.specularColor = specularColor;\r\n\t\t\t\t\tbasicSpecularMethod.specular = specular;\r\n\r\n\t\t\t\t\tvar specularData:SpecularData = new SpecularData();\r\n\t\t\t\t\tspecularData.alpha = alpha;\r\n\t\t\t\t\tspecularData.basicSpecularMethod = basicSpecularMethod;\r\n\t\t\t\t\tspecularData.materialID = this._lastMtlID;\r\n\r\n\t\t\t\t\tif (!this._materialSpecularData)\r\n\t\t\t\t\t\tthis._materialSpecularData = new Array<SpecularData>();\r\n\r\n\t\t\t\t\tthis._materialSpecularData.push(specularData);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pAddDependency(this._lastMtlID, new URLRequest(mapkd));\r\n\r\n\t\t\t} else if (useColor && !isNaN(color)) {\r\n\r\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\t\tlm.materialID = this._lastMtlID;\r\n\r\n\t\t\t\tif (alpha == 0)\r\n\t\t\t\t\tconsole.log(\"Warning: an alpha value of 0 was found in mtl color tag (Tr or d) ref:\" + this._lastMtlID + \", mesh(es) using it will be invisible!\");\r\n\r\n\t\t\t\tvar cm:MethodMaterial;\r\n\r\n\t\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\t\tcm = new MethodMaterial(color);\r\n\r\n\t\t\t\t\tvar colorMat:MethodMaterial = <MethodMaterial> cm;\r\n\r\n\t\t\t\t\tcolorMat.alpha = alpha;\r\n\t\t\t\t\tcolorMat.diffuseColor = diffuseColor;\r\n\t\t\t\t\tcolorMat.repeat = true;\r\n\r\n\t\t\t\t\tif (useSpecular) {\r\n\t\t\t\t\t\tcolorMat.specularColor = specularColor;\r\n\t\t\t\t\t\tcolorMat.specular = specular;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcm = new MethodMaterial(color);\r\n\t\t\t\t\tcm.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\tvar colorMultiMat:MethodMaterial = <MethodMaterial> cm;\r\n\r\n\r\n\t\t\t\t\tcolorMultiMat.diffuseColor = diffuseColor;\r\n\t\t\t\t\tcolorMultiMat.repeat = true;\r\n\r\n\t\t\t\t\tif (useSpecular) {\r\n\t\t\t\t\t\tcolorMultiMat.specularColor = specularColor;\r\n\t\t\t\t\t\tcolorMultiMat.specular = specular;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlm.cm = cm;\r\n\r\n\t\t\t\tthis._materialLoaded.push(lm);\r\n\r\n\t\t\t\tif (this._meshes.length > 0)\r\n\t\t\t\t\tthis.applyMaterial(lm);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._mtlLibLoaded = true;\r\n\t}\r\n\r\n\tprivate parseMapKdString(trunk):string\r\n\t{\r\n\t\tvar url:string = \"\";\r\n\t\tvar i:number;\r\n\t\tvar breakflag:boolean;\r\n\r\n\t\tfor (i = 1; i < trunk.length;) {\r\n\t\t\tswitch (trunk[i]) {\r\n\t\t\t\tcase \"-blendu\":\r\n\t\t\t\tcase \"-blendv\":\r\n\t\t\t\tcase \"-cc\":\r\n\t\t\t\tcase \"-clamp\":\r\n\t\t\t\tcase \"-texres\":\r\n\t\t\t\t\ti += 2; //Skip ahead 1 attribute\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"-mm\":\r\n\t\t\t\t\ti += 3; //Skip ahead 2 attributes\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"-o\":\r\n\t\t\t\tcase \"-s\":\r\n\t\t\t\tcase \"-t\":\r\n\t\t\t\t\ti += 4; //Skip ahead 3 attributes\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreakflag = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (breakflag)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t//Reconstruct URL/filename\r\n\t\tfor (i; i < trunk.length; i++) {\r\n\t\t\turl += trunk[i];\r\n\t\t\turl += \" \";\r\n\t\t}\r\n\r\n\t\t//Remove the extraneous space and/or newline from the right side\r\n\t\turl = url.replace(/\\s+$/, \"\");\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\tprivate loadMtl(mtlurl:string)\r\n\t{\r\n\t\t// Add raw-data dependency to queue and load dependencies now,\r\n\t\t// which will pause the parsing in the meantime.\r\n\t\tthis._pAddDependency('mtl', new URLRequest(mtlurl), true);\r\n\t\tthis._pPauseAndRetrieveDependencies();//\r\n\t}\r\n\r\n\tprivate applyMaterial(lm:LoadedMaterial)\r\n\t{\r\n\t\tvar decomposeID;\r\n\t\tvar mesh:Mesh;\r\n\t\tvar tm:MethodMaterial;\r\n\t\tvar j:number;\r\n\t\tvar specularData:SpecularData;\r\n\r\n\t\tfor (var i:number = 0; i < this._meshes.length; ++i) {\r\n\t\t\tmesh = this._meshes[i];\r\n\t\t\tdecomposeID = mesh.material.name.split(\"~\");\r\n\r\n\t\t\tif (decomposeID[0] == lm.materialID) {\r\n\r\n\t\t\t\tif (lm.cm) {\r\n\t\t\t\t\tif (mesh.material)\r\n\t\t\t\t\t\tmesh.material = null;\r\n\t\t\t\t\tmesh.material = lm.cm;\r\n\r\n\t\t\t\t} else if (lm.texture) {\r\n\t\t\t\t\tif (this.materialMode < 2) { // if materialMode is 0 or 1, we create a SinglePass\r\n\t\t\t\t\t\ttm = <MethodMaterial > mesh.material;\r\n\r\n\t\t\t\t\t\ttm.texture = lm.texture;\r\n\t\t\t\t\t\ttm.color = lm.color;\r\n\t\t\t\t\t\ttm.alpha = lm.alpha;\r\n\t\t\t\t\t\ttm.repeat = true;\r\n\r\n\t\t\t\t\t\tif (lm.specularMethod) {\r\n\r\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\r\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\r\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\r\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\r\n\t\t\t\t\t\t\ttm.specularMethod = null;\r\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\r\n\r\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\r\n\r\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\r\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\r\n\r\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\r\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\r\n\t\t\t\t\t\t\t\t\ttm.alpha = specularData.alpha;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else { //if materialMode==2 this is a MultiPassTexture\r\n\t\t\t\t\t\ttm = <MethodMaterial> mesh.material;\r\n\t\t\t\t\t\ttm.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\t\ttm.texture = lm.texture;\r\n\t\t\t\t\t\ttm.color = lm.color;\r\n\t\t\t\t\t\ttm.repeat = true;\r\n\r\n\t\t\t\t\t\tif (lm.specularMethod) {\r\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\r\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\r\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\r\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\r\n\t\t\t\t\t\t\ttm.specularMethod = null;\r\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\r\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\r\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\r\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\r\n\r\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\r\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmesh.material.name = decomposeID[1]? decomposeID[1] : decomposeID[0];\r\n\t\t\t\tthis._meshes.splice(i, 1);\r\n\t\t\t\t--i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lm.cm || tm)\r\n\t\t\tthis._pFinalizeAsset(lm.cm || tm);\r\n\t}\r\n\r\n\tprivate applyMaterials()\r\n\t{\r\n\t\tif (this._materialLoaded.length == 0)\r\n\t\t\treturn;\r\n\r\n\t\tfor (var i:number = 0; i < this._materialLoaded.length; ++i)\r\n\t\t\tthis.applyMaterial(this._materialLoaded[i]);\r\n\t}\r\n}\r\n\r\nexport = OBJParser;\r\n\r\nclass ObjectGroup\r\n{\r\n\tpublic name:string;\r\n\tpublic groups:Group[] = new Array<Group>();\r\n}\r\n\r\nclass Group\r\n{\r\n\tpublic name:string;\r\n\tpublic materialID:string;\r\n\tpublic materialGroups:MaterialGroup[] = new Array<MaterialGroup>();\r\n}\r\n\r\nclass MaterialGroup\r\n{\r\n\tpublic url:string;\r\n\tpublic faces:FaceData[] = new Array<FaceData>();\r\n}\r\n\r\nclass SpecularData\r\n{\r\n\tpublic materialID:string;\r\n\tpublic basicSpecularMethod:SpecularBasicMethod;\r\n\tpublic color:number = 0xFFFFFF;\r\n\tpublic alpha:number = 1;\r\n}\r\n\r\nclass LoadedMaterial\r\n{\r\n\tpublic materialID:string;\r\n\tpublic texture:Texture2DBase;\r\n\tpublic cm:MaterialBase;\r\n\tpublic specularMethod:SpecularBasicMethod;\r\n\tpublic color:number = 0xFFFFFF;\r\n\tpublic alpha:number = 1;\r\n}\r\n\r\nclass FaceData\r\n{\r\n\tpublic vertexIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic uvIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic normalIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic indexIds:string[] = new Array<string>(); // used for real index lookups\r\n}\r\n\r\n/**\r\n* Texture coordinates value object.\r\n*/\r\nclass UV\r\n{\r\n\tprivate _u:number;\r\n\tprivate _v:number;\r\n\r\n\t/**\r\n\t * Creates a new <code>UV</code> object.\r\n\t *\r\n\t * @param    u        [optional]    The horizontal coordinate of the texture value. Defaults to 0.\r\n\t * @param    v        [optional]    The vertical coordinate of the texture value. Defaults to 0.\r\n\t */\r\n\tconstructor(u:number = 0, v:number = 0)\r\n\t{\r\n\t\tthis._u = u;\r\n\t\tthis._v = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the vertical coordinate of the texture value.\r\n\t */\r\n\tpublic get v():number\r\n\t{\r\n\t\treturn this._v;\r\n\t}\r\n\r\n\tpublic set v(value:number)\r\n\t{\r\n\t\tthis._v = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the horizontal coordinate of the texture value.\r\n\t */\r\n\tpublic get u():number\r\n\t{\r\n\t\treturn this._u;\r\n\t}\r\n\r\n\tpublic set u(value:number)\r\n\t{\r\n\t\tthis._u = value;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new UV value Object\r\n\t */\r\n\tpublic clone():UV\r\n\t{\r\n\t\treturn new UV(this._u, this._v);\r\n\t}\r\n\r\n\t/**\r\n\t * returns the value object as a string for trace/debug purpose\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn this._u + \",\" + this._v;\r\n\t}\r\n}\r\n\r\nclass Vertex\r\n{\r\n\tprivate _x:number;\r\n\tprivate _y:number;\r\n\tprivate _z:number;\r\n\tprivate _index:number;\r\n\r\n\t/**\r\n\t * Creates a new <code>Vertex</code> value object.\r\n\t *\r\n\t * @param    x            [optional]    The x value. Defaults to 0.\r\n\t * @param    y            [optional]    The y value. Defaults to 0.\r\n\t * @param    z            [optional]    The z value. Defaults to 0.\r\n\t * @param    index        [optional]    The index value. Defaults is NaN.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, index:number = 0)\r\n\t{\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._index = index;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the index of value object\r\n\t * @param    ind        The index\r\n\t */\r\n\tpublic set index(ind:number)\r\n\t{\r\n\t\tthis._index = ind;\r\n\t}\r\n\r\n\tpublic get index():number\r\n\t{\r\n\t\treturn this._index;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the x value of the value object\r\n\t * @param    value        The x value\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tthis._x = value;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the y value of the value object\r\n\t * @param    value        The y value\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tthis._y = value;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the z value of the value object\r\n\t * @param    value        The z value\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(value:number)\r\n\t{\r\n\t\tthis._z = value;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new Vertex value Object\r\n\t */\r\n\tpublic clone():Vertex\r\n\t{\r\n\t\treturn new Vertex(this._x, this._y, this._z);\r\n\t}\r\n}",
    "import AssetLoader\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\n\r\nimport AWDParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWDParser\");\r\nimport Max3DSParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/Max3DSParser\");\r\nimport MD2Parser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/MD2Parser\");\r\nimport OBJParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/OBJParser\");\r\n\r\n/**\r\n *\r\n */\r\nclass Parsers\r\n{\r\n\t/**\r\n\t * A list of all parsers that come bundled with Away3D. Use this to quickly\r\n\t * enable support for all bundled parsers to the file format auto-detection\r\n\t * feature, using any of the enableParsers() methods on loaders, e.g.:\r\n\t *\r\n\t * <code>AssetLibrary.enableParsers(Parsers.ALL_BUNDLED);</code>\r\n\t *\r\n\t * Beware however that this requires all parser classes to be included in the\r\n\t * SWF file, which will add 50-100 kb to the file. When only a limited set of\r\n\t * file formats are used, SWF file size can be saved by adding the parsers\r\n\t * individually using AssetLibrary.enableParser()\r\n\t *\r\n\t * A third way is to specify a parser for each loaded file, thereby bypassing\r\n\t * the auto-detection mechanisms altogether, while at the same time allowing\r\n\t * any properties that are unique to that parser to be set for that load.\r\n\t *\r\n\t * The bundled parsers are:\r\n\t *\r\n\t * <ul>\r\n\t * <li>AC3D (.ac)</li>\r\n\t * <li>Away Data version 1 ASCII and version 2 binary (.awd). AWD1 BSP unsupported</li>\r\n\t * <li>3DMax (.3ds)</li>\r\n\t * <li>DXF (.dxf)</li>\r\n\t * <li>Quake 2 MD2 models (.md2)</li>\r\n\t * <li>Doom 3 MD5 animation clips (.md5anim)</li>\r\n\t * <li>Doom 3 MD5 meshes (.md5mesh)</li>\r\n\t * <li>Wavefront OBJ (.obj)</li>\r\n\t * <li>Collada (.dae)</li>\r\n\t * <li>Images (.jpg, .png)</li>\r\n\t * </ul>\r\n\t *\r\n\t * @see away.library.AssetLibrary.enableParser\r\n\t */\r\n\tpublic static ALL_BUNDLED:Array<Object> = Array<Object>(AWDParser, Max3DSParser, MD2Parser, OBJParser);\r\n\r\n\t/**\r\n\t * Short-hand function to enable all bundled parsers for auto-detection. In practice,\r\n\t * this is the same as invoking enableParsers(Parsers.ALL_BUNDLED) on any of the\r\n\t * loader classes SingleFileLoader, AssetLoader, AssetLibrary or Loader3D.\r\n\t *\r\n\t * See notes about file size in the documentation for the ALL_BUNDLED constant.\r\n\t *\r\n\t * @see away.parsers.Parsers.ALL_BUNDLED\r\n\t */\r\n\tpublic static enableAllBundled():void\r\n\t{\r\n\t\tAssetLoader.enableParsers(Parsers.ALL_BUNDLED);\r\n\t}\r\n}\r\n\r\nexport = Parsers;"
  ]
}