{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase.ts",
    "awayjs-parsers.js",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBlock.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDProperties.ts",
    "awayjs-parsers/lib/AWD3Parser.ts",
    "awayjs-parsers/lib/AWDParser.ts",
    "awayjs-parsers/lib/MD2Parser.ts",
    "awayjs-parsers/lib/MD5AnimParser.ts",
    "awayjs-parsers/lib/MD5MeshParser.ts",
    "awayjs-parsers/lib/Max3DSParser.ts",
    "awayjs-parsers/lib/OBJParser.ts",
    "awayjs-parsers/lib/Parsers.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase",
    "module",
    "AbstractMethodError",
    "AWDAssetParserBase",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "this",
    "_awd_file_data",
    "set",
    "awd_file_data",
    "enumerable",
    "configurable",
    "parseFromBytes",
    "awayjs-core/lib/errors/AbstractMethodError",
    "undefined",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers",
    "GeometryAWDParser",
    "PrefabAWDParser",
    "DisplayObjectContainerAWDParser",
    "MeshAWDParser",
    "BillboardAWDParser",
    "Single2DTextureAWDParser",
    "CameraAWDParser",
    "SingleCubeTextureAWDParser",
    "LightAWDParser",
    "LightPickerAWDParser",
    "MaterialAWDParser",
    "MovieClipAWDParser",
    "ShadowMethodAWDParser",
    "SharedMethodAWDParser",
    "SkeletonAnimClipAWDParser",
    "SkeletonAWDParser",
    "SkeletonPoseAWDParser",
    "SkyboxAWDParser",
    "TesselatedFontAWDParser",
    "TextfieldAWDParser",
    "TextformatAWDParser",
    "VertexAnimationSetAWDParser",
    "VertexAnimClipAWDParser",
    "CommandAWDParser",
    "MetadataAWDParser",
    "BlockNameSpaceAWDParser",
    "AnimatorAWDParser",
    "AudioAWDParser",
    "AWDBlockParsers",
    "_supported_asset_blocks",
    "_all_block_parsers",
    "Array",
    "add_block_parser",
    "block_parser",
    "block_types",
    "push",
    "init_parser",
    "file_data",
    "parseAsset",
    "type",
    "this_parser",
    "awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser",
    "__extends",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "AWDBlockParserBase",
    "VertexAnimator",
    "SkeletonAnimator",
    "AWD3Utils",
    "_super",
    "animSetBlockAdress",
    "targetAnimationSet",
    "cur_block",
    "name",
    "parseVarStr",
    "newBlockBytes",
    "readUnsignedShort",
    "props",
    "parseProperties",
    1,
    "BADDR",
    "readUnsignedInt",
    "targetMeshLength",
    "meshAdresses",
    "activeState",
    "autoplay",
    "readUnsignedByte",
    "parseUserAttributes",
    "returnedArray",
    "targetMeshes",
    "targetMesh",
    "getAssetByID",
    "thisAnimator",
    "skeleton",
    "animator",
    "data",
    "debug",
    "console",
    "log",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "ByteArray",
    "data_len",
    "url",
    "readUTFBytes",
    "dependencies_urls",
    "readBytes",
    "dependencies_data",
    "state",
    "BLOCKSTATE_LOAD_DEPENDENICES",
    "audioStylesNames",
    "awayjs-core/lib/utils/ByteArray",
    "Billboard",
    "BasicMaterial",
    "data_id",
    "mat",
    "bothSides",
    "billboard",
    "extra",
    "awayjs-display/lib/entities/Billboard",
    "awayjs-display/lib/materials/BasicMaterial",
    "BLOCKSTATE_NO_ASSET",
    "id",
    "nameSpaceString",
    "Camera",
    "PerspectiveProjection",
    "OrthographicProjection",
    "OrthographicOffCenterProjection",
    "Vector3D",
    "CameraAWD3Parser",
    "par_id",
    "mtx",
    "parseMatrix3D",
    "parentName",
    "projection",
    "readShort",
    "projectiontype",
    101,
    "propsNrType",
    102,
    103,
    104,
    "camera",
    "transform",
    "matrix3D",
    "parent",
    "addChild",
    "matrixNrType",
    2,
    3,
    4,
    "UINT8",
    "pivot",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "awayjs-core/lib/projections/OrthographicProjection",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/Camera",
    "hasBlocks",
    "parentObject",
    "targetObject",
    "numCommands",
    "typeCommand",
    "targetID",
    "DisplayObjectContainer",
    "ctr",
    "major_version",
    "minor_version",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "Geometry",
    "CurveSubGeometry",
    "TriangleSubGeometry",
    "geom",
    "num_subs",
    "geoNrType",
    "geoScaleU",
    "geoScaleV",
    "subs_parsed",
    "is_curve_geom",
    "sm_len",
    "sm_end",
    "w_indices",
    "weights",
    "position",
    "subProps",
    "idx",
    "str_ftype",
    "str_type",
    "str_len",
    "str_end",
    "x",
    "y",
    "z",
    "verts",
    "readNumber",
    "accuracyGeo",
    "indices",
    "uvs",
    "normals",
    "idx_pos",
    "idx_curves",
    "idx_uvs",
    "positions",
    "curveData",
    "curve_sub_geom",
    "updateIndices",
    "updatePositions",
    "updateCurves",
    "updateUVs",
    "addSubGeometry",
    "triangle_sub_geom",
    "jointsPerVertex",
    "autoDeriveNormals",
    "autoDeriveUVs",
    "autoDeriveTangents",
    "updateVertexNormals",
    "updateVertexTangents",
    "updateJointWeights",
    "updateJointIndices",
    "scaleU",
    "scaleV",
    "setSubUVs",
    "scaleUV",
    "awayjs-core/lib/data/CurveSubGeometry",
    "awayjs-core/lib/data/Geometry",
    "awayjs-core/lib/data/TriangleSubGeometry",
    "CubeMapShadowMapper",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "PointLight",
    "light",
    "newShadowMapper",
    "lightType",
    "COLOR",
    5,
    6,
    "BOOL",
    7,
    8,
    9,
    10,
    11,
    12,
    "UINT16",
    21,
    22,
    23,
    "shadowMapperType",
    "lightTypes",
    "shadowMapperTypes",
    "radius",
    "fallOff",
    "color",
    "specular",
    "diffuse",
    "ambientColor",
    "ambient",
    "depthMapSize",
    "getDepthSizeFromEnum",
    "shadowMapper",
    "castsShadows",
    "awayjs-display/lib/entities/DirectionalLight",
    "awayjs-display/lib/entities/PointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "StaticLightPicker",
    "numLights",
    "lightsArray",
    "k",
    "lightID",
    "returnedArrayLight",
    "lightsArrayNames",
    "lightPicker",
    "toString",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "MethodMaterialMode",
    "MethodMaterial",
    "CurveMaterial",
    "DefaultMaterialManager",
    "AmbientEnvMapMethod",
    "DiffuseDepthMethod",
    "DiffuseCelMethod",
    "DiffuseGradientMethod",
    "DiffuseLightMapMethod",
    "DiffuseWrapMethod",
    "NormalSimpleWaterMethod",
    "SpecularFresnelMethod",
    "SpecularAnisotropicMethod",
    "SpecularCelMethod",
    "SpecularPhongMethod",
    "attributes",
    "finalize",
    "num_methods",
    "methods_parsed",
    "normalTexture",
    "specTexture",
    "INT32",
    13,
    "method_type",
    "debugString",
    "tex_addr",
    "texture",
    "getDefaultTexture",
    "alphaThreshold",
    "repeat",
    "UINT32",
    15,
    16,
    17,
    18,
    19,
    20,
    "spezialType",
    "mode",
    "MULTI_PASS",
    "alphaBlending",
    "diftexture",
    "alpha",
    "diffuseTex_addr",
    "diffuseTexture",
    "normalTex_addr",
    "specTex_addr",
    "lightPickerAddr",
    "smooth",
    "mipmap",
    "alphaPremultiplied",
    "blendMode",
    "getBlendModeStringFromEnum",
    "normalMap",
    "specularMap",
    "diffuseColor",
    "gloss",
    "specularColor",
    201,
    202,
    301,
    302,
    401,
    402,
    601,
    602,
    701,
    702,
    801,
    "MTX4x4",
    "fx_method",
    "addEffectMethod",
    "shadow_method",
    "shadowMethod",
    "cubeTex",
    "getDefaultCubeTexture",
    "ambientMethod",
    "diffuseMethod",
    "thisTex",
    "smoothness",
    "specularMethod",
    "fresnelPower",
    "normalReflectance",
    "normalMethod",
    "curve_mat",
    "preserveAlpha",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-display/lib/materials/CurveMaterial",
    "awayjs-methodmaterials/lib/MethodMaterial",
    "awayjs-methodmaterials/lib/MethodMaterialMode",
    "awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseCelMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseDepthMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseGradientMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseWrapMethod",
    "awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod",
    "awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod",
    "awayjs-methodmaterials/lib/methods/SpecularCelMethod",
    "awayjs-methodmaterials/lib/methods/SpecularFresnelMethod",
    "awayjs-methodmaterials/lib/methods/SpecularPhongMethod",
    "Mesh",
    "num_materials",
    "materials_parsed",
    "geoID",
    "materials",
    "materialNames",
    "mat_id",
    "m",
    "mesh",
    "subMeshes",
    "material",
    "Math",
    "min",
    "awayjs-display/lib/entities/Mesh",
    "AWDSTRING",
    "AWDBitFlags",
    "ColorTransform",
    "Matrix3D",
    "TimelineKeyFrame",
    "AddChildAtDepthCommand",
    "ApplyAS2DepthsCommand",
    "ExecuteScriptCommand",
    "RemoveChildrenAtDepthCommand",
    "SetInstanceNameCommand",
    "UpdatePropertyCommand",
    "SetMaskCommand",
    "TextField",
    "AS2SceneGraphFactory",
    "factory",
    "j",
    "c",
    "new_mc",
    "createMovieClip",
    "isScene",
    "sceneID",
    "fps",
    "readFloat",
    "ms_per_frame",
    "num_instances",
    "num_all_display_instances",
    "num_potential_childs",
    "resourceID",
    "cmd_asset",
    "registerPotentialChild",
    "num_potential_childs_multi_instanced",
    "num_potential_sounds",
    "numFrames",
    "totalDuration",
    "frameDuration",
    "numLabels",
    "objectID",
    "target_depth",
    "number_of_obj",
    "commandType",
    "frame",
    "label",
    "hasDepthChanges",
    "setFrameTime",
    "remove_depths",
    "addConstructCommand",
    "potChild",
    "getPotentialChild",
    "isAsset",
    "props_flag",
    "test",
    "FLAG1",
    "thisMatrix",
    "FLAG2",
    "rawData",
    "FLAG3",
    "thisColorTransform",
    "FLAG4",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "FLAG5",
    "blendmode_int",
    "blendmode_string",
    "FLAG6",
    "readByte",
    "FLAG7",
    "instanceName",
    "FLAG8",
    "mask_id_nums",
    "mask_ids",
    "mi_cnt",
    "length_code",
    "frame_code",
    "addFrame",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-display/lib/entities/TextField",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags",
    "awayjs-player/lib/factories/AS2SceneGraphFactory",
    "awayjs-player/lib/timeline/TimelineKeyFrame",
    "awayjs-player/lib/timeline/commands/AddChildAtDepthCommand",
    "awayjs-player/lib/timeline/commands/ApplyAS2DepthsCommand",
    "awayjs-player/lib/timeline/commands/ExecuteScriptCommand",
    "awayjs-player/lib/timeline/commands/RemoveChildrenAtDepthCommand",
    "awayjs-player/lib/timeline/commands/SetInstanceNameCommand",
    "awayjs-player/lib/timeline/commands/SetMaskCommand",
    "awayjs-player/lib/timeline/commands/UpdatePropertyCommand",
    "PrefabBase",
    "PrimitiveCapsulePrefab",
    "PrimitiveConePrefab",
    "PrimitiveCubePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitivePlanePrefab",
    "PrimitiveSpherePrefab",
    "PrimitiveTorusPrefab",
    "prefab",
    "primType",
    "bsm",
    110,
    111,
    303,
    703,
    704,
    "primitiveTypes",
    "topClosed",
    "bottomClosed",
    "yUp",
    "awayjs-display/lib/prefabs/PrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "ShadowDitheredMethod",
    "ShadowFilteredMethod",
    "ShadowHardMethod",
    "ShadowNearMethod",
    "ShadowSoftMethod",
    "asset",
    "shadowLightID",
    "parseShadowMethodList",
    "methodType",
    "shadow_meth",
    "epsilon",
    "range",
    "awayjs-methodmaterials/lib/methods/ShadowDitheredMethod",
    "awayjs-methodmaterials/lib/methods/ShadowFilteredMethod",
    "awayjs-methodmaterials/lib/methods/ShadowHardMethod",
    "awayjs-methodmaterials/lib/methods/ShadowNearMethod",
    "awayjs-methodmaterials/lib/methods/ShadowSoftMethod",
    "EffectColorMatrixMethod",
    "EffectColorTransformMethod",
    "EffectFogMethod",
    "EffectRimLightMethod",
    "parseSharedMethodList",
    "effectMethodReturn",
    105,
    106,
    107,
    "offCol",
    "colorTransform",
    "awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod",
    "awayjs-methodmaterials/lib/methods/EffectColorTransformMethod",
    "awayjs-methodmaterials/lib/methods/EffectFogMethod",
    "awayjs-methodmaterials/lib/methods/EffectRimLightMethod",
    "textureStylesNames",
    "Skeleton",
    "SkeletonJoint",
    "num_joints",
    "joints_parsed",
    "joint",
    "ibp",
    "parentIndex",
    "inverseBindPose",
    "joints",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonClipNode",
    "frame_dur",
    "pose_addr",
    "clip",
    "num_frames",
    "frames_parsed",
    "skel_pose",
    "frames",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "SkeletonPose",
    "JointPose",
    "pose",
    "joint_pose",
    "has_transform",
    "mtx_data",
    "parseMatrix43RawData",
    "orientation",
    "fromMatrix",
    "translation",
    "copyFrom",
    "jointPoses",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "Skybox",
    "cubeTexAddr",
    "cube_tex",
    "new_skybox",
    "awayjs-display/lib/entities/Skybox",
    "Font",
    "new_font",
    "font_style_cnt",
    "font_style_name",
    "new_font_style",
    "get_font_table",
    "set_font_em_size",
    "font_style_char_cnt",
    "font_style_char",
    "set_subgeo_for_char",
    "awayjs-display/lib/text/Font",
    "TextFormat",
    "newTextField",
    "createTextField",
    "text_field_type",
    "displayAsPassword",
    "width",
    "height",
    "num_paragraphs",
    "complete_text",
    "text_format",
    "paracnt",
    "num_textruns",
    "textrun_cnt",
    "format_id",
    "textFormat",
    "txt_length",
    "this_txt",
    "text",
    "selectable",
    "border",
    "awayjs-display/lib/text/TextFormat",
    "newTextFormat",
    "font_id",
    "font",
    "font_name",
    "font_table",
    "font_style",
    "num_uv_values",
    "uv_values",
    "uvcnt",
    "uv_value",
    "format_props",
    "size",
    "letterSpacing",
    "kerning",
    "indent",
    "leftMargin",
    "rightMargin",
    "VertexClipNode",
    "poseOnly",
    "num_submeshes",
    "subMeshParsed",
    "geometry",
    "subGeom",
    "num_Streams",
    "streamsParsed",
    "streamtypes",
    "thisGeo",
    "geoAdress",
    "getUVForVertexAnimation",
    "looping",
    "stitchFinalFrame",
    "subGeometries",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexAnimationSet",
    "SkeletonAnimationSet",
    "poseBlockAdress",
    "skeletonFrames",
    "vertexFrames",
    "animNode",
    "newVertexAnimationSet",
    "addAnimation",
    "animations",
    "animationNames",
    "newSkeletonAnimationSet",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData",
    "BitmapImageCube",
    "BlendMode",
    "MaterialBase",
    "SingleCubeTexture",
    "Single2DTexture",
    "AWDProperties",
    "AWDBlock",
    "AWD3FileData",
    "_debug",
    "_accuracyOnBlocks",
    "_blocks",
    "_cur_block",
    "blendModeDic",
    "NORMAL",
    "ADD",
    "ALPHA",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "_depthSizeDic",
    "depthSize",
    "blendmode",
    "dispose",
    "_accuracyMatrix",
    "new_accuracyMatrix",
    "_accuracyProps",
    "new_accuracyProps",
    "_accuracyGeo",
    "new_accuracyGeo",
    "_matrixNrType",
    "newmatrixNrType",
    "_propsNrType",
    "new_props_nr",
    "_geoNrType",
    "new_geoNrType",
    "_newBlockBytes",
    "new_newBlockBytes",
    "create_new_block",
    "new_block",
    "block_cnt",
    "list_len",
    "attibuteCnt",
    "list_end",
    "ns_id",
    "attr_key",
    "attr_type",
    "attr_len",
    "attr_val",
    "INT8",
    "INT16",
    "readInt",
    "FLOAT32",
    "FLOAT64",
    "readDouble",
    "expected",
    "propertyCnt",
    "len",
    "key",
    "parseAttrValue",
    "elem_len",
    "read_func",
    "VECTOR2x1",
    "VECTOR3x1",
    "VECTOR4x1",
    "MTX3x2",
    "MTX3x3",
    "MTX4x3",
    "list",
    "num_read",
    "num_elems",
    "apply",
    "val",
    "meshID",
    "uvsForVertexAnimation",
    "geoCnt",
    "ud",
    "uStride",
    "uOffs",
    "numPoints",
    "newUvs",
    "sub_geom",
    "numVertices",
    "getStride",
    "UV_DATA",
    "getOffset",
    "getBlockByID",
    "assetID",
    "getDefaultAsset",
    "assetType",
    "getDefaultMaterial",
    "_defaultCubeTexture",
    "defaultBitmap",
    "createCheckeredBitmapImage2D",
    "bitmapImageCube",
    "draw",
    "precision",
    "parseMatrix32RawData",
    "mtx_raw",
    "isNaN",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBlock",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDProperties",
    "BLOCKSTATE_FINALIZE",
    "BLOCKSTATE_INVALID",
    "COMPRESSIONMODE_LZMA",
    "UNCOMPRESSED",
    "DEFLATE",
    "LZMA",
    "AWDBYTEARRAY",
    "flags",
    "testFlag",
    "FLAG9",
    "FLAG10",
    "FLAG11",
    "FLAG12",
    "FLAG13",
    "FLAG14",
    "FLAG15",
    "FLAG16",
    "this_id",
    "this_type",
    "loaded_dependencies",
    "loaded_dependencies_cnt",
    "bytes",
    "errorMessages",
    "addError",
    "errorMsg",
    "value",
    "fallback",
    "awayjs-parsers/lib/AWD3Parser",
    "URLLoaderDataFormat",
    "URLRequest",
    "ParserBase",
    "ParserUtils",
    "DisplayObject",
    "AWDAssetParsers",
    "AWD3Parser",
    "ARRAY_BUFFER",
    "_startedParsing",
    "_parsed_header",
    "total_time",
    "geom_time",
    "timeline_time",
    "_block_parser",
    "_awd_data",
    "supportsType",
    "extension",
    "toLowerCase",
    "supportsData",
    "_iResolveDependency",
    "resourceDependency",
    "assets",
    "this_block",
    "parseInt",
    "testure_asset",
    "_pFinalizeAsset",
    "sub_id",
    "cube_image_asset",
    "cube_tex_asset",
    "_iResolveDependencyFailure",
    "_iResolveDependencyName",
    "oldName",
    "block",
    "resetAssetPath",
    "newName",
    "_pProceedParsing",
    "_byteData",
    "_pGetByteData",
    "parseHeader",
    "_compression",
    "_pDieWithError",
    "_body",
    "getBytesAvailable",
    "parsingPaused",
    "parseNextBlock",
    "PARSING_DONE",
    "MORE_TO_PARSE",
    "_pStartParsing",
    "frameLimit",
    "_pContent",
    "block_id",
    "ns",
    "block_type",
    "blockCompression",
    "blockCompressionLZMA",
    "accuracyOnBlocks",
    "accuracyMatrix",
    "accuracyProps",
    "blockEndAll",
    "time_start",
    "performance",
    "now",
    "_pAddDependency",
    "byteArrayToImage",
    "_pPauseAndRetrieveDependencies",
    "time_end",
    "thisTime",
    "body_len",
    "_streaming",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/net/URLRequest",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-display/lib/base/DisplayObject",
    "awayjs-parsers/lib/AWDParser",
    "AnimationNodeBase",
    "LightBase",
    "LightPickerBase",
    "AnimationSetBase",
    "EffectAlphaMaskMethod",
    "EffectEnvMapMethod",
    "EffectFresnelEnvMapMethod",
    "EffectLightMapMethod",
    "EffectMethodBase",
    "ShadowMapMethodBase",
    "AWDParser",
    "_texture_users",
    "_version",
    "isCubeTextureArray",
    "split",
    "ressourceID",
    "_cubeBitmaps",
    "assetData",
    "isParsed",
    "_cur_block_id",
    "BitFlags",
    "blockEndBlock",
    "parseMeshLibraryBlock",
    "parseBillBoardLibraryBlock",
    "parseAudioBlock",
    "parseTimeLine",
    "paresTextField",
    "parseTesselatedFont",
    "parseTextFormat",
    "parsePrimitves",
    "parseSkyboxInstance",
    "parseLight",
    "parseCamera",
    "parseLightPicker",
    "parseMaterial_v1",
    "parseCubeTexture",
    "parseSharedMethodBlock",
    "parseShadowMethodBlock",
    "parseMeshPoseAnimation",
    "parseVertexAnimationSet",
    "parseAnimatorSet",
    "parseCommand",
    "parseTriangleGeometrieBlock",
    "parseContainer",
    "parseMeshInstance",
    "parseMaterial",
    "parseTexture",
    "parseSkeleton",
    "parseSkeletonPose",
    "parseSkeletonAnimation",
    "parseNameSpace",
    "parseMetaData",
    "msgCnt",
    "blockID",
    "returnArrayFont",
    "returnedArrayMaterial",
    "textFormatArray",
    "returnedArrayGeometry",
    "extras",
    "timeLineContainer",
    "obj",
    "returnedArrayParent",
    "objC",
    "returnedArrayCubeTex",
    "lightPick",
    "materialMode",
    "returnedArrayTarget",
    "outputString",
    "assetTypesToGet",
    "returnArray",
    "typeCnt",
    "iasset",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "awayjs-display/lib/base/LightBase",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod",
    "awayjs-methodmaterials/lib/methods/EffectEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectLightMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectMethodBase",
    "awayjs-methodmaterials/lib/methods/ShadowMapMethodBase",
    "awayjs-renderergl/lib/animators/AnimationSetBase",
    "awayjs-parsers/lib/MD2Parser",
    "MD2Parser",
    "textureType",
    "ignoreTexturePath",
    "_clipNodes",
    "_animationSet",
    "materialFinal",
    "geoCreated",
    "_textureType",
    "_ignoreTexturePath",
    "_mesh",
    "_pHasTime",
    "_parsedHeader",
    "_geometry",
    "parseMaterialNames",
    "_parsedUV",
    "parseUV",
    "_parsedFaces",
    "parseFaces",
    "_parsedFrames",
    "parseFrames",
    "_firstSubGeom",
    "clone",
    "_ident",
    "_skinWidth",
    "_skinHeight",
    "_numSkins",
    "_numVertices",
    "_numST",
    "_numTris",
    "_numFrames",
    "_offsetSkins",
    "_offsetST",
    "_offsetTris",
    "_offsetFrames",
    "_offsetEnd",
    "extIndex",
    "slashIndex",
    "_materialNames",
    "regExp",
    "RegExp",
    "replace",
    "lastIndexOf",
    "indexOf",
    "substring",
    "dependencies",
    "_uvs",
    "ta",
    "tb",
    "tc",
    "_vertIndices",
    "_uvIndices",
    "_indices",
    "addIndex",
    "_finalUV",
    "vertexIndex",
    "uvIndex",
    "index",
    "findIndex",
    "sx",
    "sy",
    "sz",
    "tx",
    "ty",
    "tz",
    "vertLen",
    "fvertices",
    "tvertices",
    "prevClip",
    "readFrameName",
    "vertexNormals",
    "vertexTangents",
    "FPS",
    "ch",
    "floor",
    "String",
    "fromCharCode",
    "awayjs-parsers/lib/MD5AnimParser",
    "Quaternion",
    "MD5AnimParser",
    "additionalRotationAxis",
    "additionalRotationRadians",
    "TEXT",
    "_parseIndex",
    "_line",
    "_charLineIndex",
    "_rotationQuat",
    "t1",
    "t2",
    "fromAxisAngle",
    "X_AXIS",
    "PI",
    "Y_AXIS",
    "multiply",
    "token",
    "_textData",
    "_pGetTextData",
    "getNextToken",
    "COMMENT_TOKEN",
    "ignoreLine",
    "VERSION_TOKEN",
    "getNextInt",
    "COMMAND_LINE_TOKEN",
    "parseCMD",
    "NUM_FRAMES_TOKEN",
    "_bounds",
    "_frameData",
    "NUM_JOINTS_TOKEN",
    "_numJoints",
    "_hierarchy",
    "_baseFrameData",
    "FRAME_RATE_TOKEN",
    "_frameRate",
    "NUM_ANIMATED_COMPONENTS_TOKEN",
    "_numAnimatedComponents",
    "HIERARCHY_TOKEN",
    "parseHierarchy",
    "BOUNDS_TOKEN",
    "parseBounds",
    "BASE_FRAME_TOKEN",
    "parseBaseFrame",
    "FRAME_TOKEN",
    "parseFrame",
    "_reachedEOF",
    "sendUnknownKeywordError",
    "_clip",
    "translateClip",
    "translatePose",
    "frameData",
    "hierarchy",
    "base",
    "translate",
    "components",
    "skelPose",
    "startIndex",
    "w",
    "sqrt",
    "rotatePoint",
    "sendEOFError",
    "HierarchyData",
    "parseLiteralstring",
    "getNextChar",
    "putBack",
    "BoundsData",
    "parseVector3D",
    "max",
    "BaseFrameData",
    "parseQuaternion",
    "frameIndex",
    "FrameData",
    "getNextNumber",
    "skipWhiteSpace",
    "charAt",
    "sendParseError",
    "parseFloat",
    "vec",
    "quat",
    "str",
    "awayjs-core/lib/geom/Quaternion",
    "awayjs-parsers/lib/MD5MeshParser",
    "MD5MeshParser",
    "_bindPoses",
    "NUM_MESHES_TOKEN",
    "_numMeshes",
    "JOINTS_TOKEN",
    "parseJoints",
    "MESH_TOKEN",
    "parseMesh",
    "calculateMaxJointCount",
    "_maxJointCount",
    "_meshData",
    "translateGeom",
    "vertexData",
    "weightData",
    "_skeleton",
    "numMeshData",
    "meshData",
    "numVerts",
    "zeroWeights",
    "countZeroWeightJoints",
    "totalJoints",
    "countWeight",
    "vertex",
    "start",
    "startWeight",
    "end",
    "count",
    "weight",
    "bias",
    "pos",
    "toMatrix3D",
    "appendTranslation",
    "inv",
    "invert",
    "_shaders",
    "MESH_SHADER_TOKEN",
    "MESH_NUM_VERTS_TOKEN",
    "MESH_NUM_TRIS_TOKEN",
    "MESH_NUM_WEIGHTS_TOKEN",
    "MESH_VERT_TOKEN",
    "parseVertex",
    "MESH_TRI_TOKEN",
    "parseTri",
    "MESH_WEIGHT_TOKEN",
    "parseJoint",
    "MeshData",
    "v1",
    "v2",
    "v3",
    "bindPose",
    "vertices",
    "jointIndices",
    "jointWeights",
    "nonZeroWeights",
    "transformVector",
    "JointData",
    "VertexData",
    "rotQuat",
    "awayjs-parsers/lib/Max3DSParser",
    "BitmapImage2D",
    "Max3DSParser",
    "useSmoothingGroups",
    "_useSmoothingGroups",
    "ba",
    "toByteArray",
    "tex",
    "_textures",
    "_materials",
    "_unfinalized_objects",
    "_cur_mat",
    "_cur_mat_end",
    "finalizeCurrentMaterial",
    "_cur_obj",
    "_cur_obj_end",
    "Number",
    "MAX_VALUE",
    "cid",
    "ObjectVO",
    "readNulTermstring",
    "materialFaces",
    "parseVertexList",
    "parseFaceList",
    "parseUVList",
    "parseFaceMaterialList",
    "readTransform",
    "parseObjectAnimation",
    "parseSmoothingGroups",
    "constructObject",
    "MaterialVO",
    "readColor",
    "twoSided",
    "colorMap",
    "TextureVO",
    "i0",
    "i1",
    "i2",
    "smoothingGroups",
    "faces",
    "vo",
    "hier",
    "sub",
    "prepareData",
    "applySmoothGroups",
    "v",
    "mname",
    "dat",
    "concat",
    "scaleBy",
    "applyTransformation",
    "VertexVO",
    "FaceVO",
    "smoothGroup",
    "numFaces",
    "vGroups",
    "face",
    "groups",
    "group",
    "splice",
    "vClones",
    "clones",
    "v0",
    "chr",
    "g",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-parsers/lib/OBJParser",
    "SpecularBasicMethod",
    "OBJParser",
    "scale",
    "_mtlLibLoaded",
    "_activeMaterialID",
    "_scale",
    "content",
    "hasV",
    "hasF",
    "parseMtl",
    "lm",
    "LoadedMaterial",
    "materialID",
    "_materialLoaded",
    "_meshes",
    "applyMaterial",
    "_mtlLib",
    "line",
    "creturn",
    "trunk",
    "_vertices",
    "_vertexNormals",
    "_materialIDs",
    "_stringLength",
    "_charIndex",
    "_oldIndex",
    "_objects",
    "_objectIndex",
    "join",
    "parseLine",
    "applyMaterials",
    "loadMtl",
    "createGroup",
    "createObject",
    "_currentGroup",
    "parseVertexNormal",
    "parseFace",
    "objIndex",
    "numGroups",
    "materialGroups",
    "numMaterialGroups",
    "sm",
    "bmMaterial",
    "translateMaterialGroup",
    "_lastMtlID",
    "materialGroup",
    "_realIndices",
    "_vertexIndex",
    "indexIds",
    "translateVertexData",
    "vertexNormal",
    "uv",
    "vertexIndices",
    "normalIndices",
    "uvIndices",
    "_currentMaterialGroup",
    "_currentObject",
    "ObjectGroup",
    "Group",
    "createMaterialGroup",
    "MaterialGroup",
    "nTrunk",
    "Vertex",
    "UV",
    "FaceData",
    "parseIndex",
    "materialDefinitions",
    "lines",
    "basicSpecularMethod",
    "useSpecular",
    "useColor",
    "mapkd",
    "charCodeAt",
    "parseMapKdString",
    "specularData",
    "SpecularData",
    "_materialSpecularData",
    "cm",
    "colorMat",
    "colorMultiMat",
    "breakflag",
    "mtlurl",
    "decomposeID",
    "tm",
    "_u",
    "_v",
    "_x",
    "_y",
    "_z",
    "_index",
    "ind",
    "awayjs-methodmaterials/lib/methods/SpecularBasicMethod",
    "awayjs-parsers/lib/Parsers",
    "AssetLoader",
    "Parsers",
    "enableAllBundled",
    "enableParsers",
    "ALL_BUNDLED",
    "awayjs-core/lib/library/AssetLoader"
  ],
  "mappings": "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",
  "file": "awayjs-parsers.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3FileData\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\n\n\nclass AWDAssetParserBase\n{\n\n\tprivate _awd_file_data:AWD3FileData;\n\tconstructor()\n\t{\n\t}\n\n\n\tpublic get awd_file_data():AWD3FileData\n\t{\n\t\treturn this._awd_file_data;\n\t}\n\tpublic set awd_file_data(awd_file_data:AWD3FileData)\n\t{\n\t\tthis._awd_file_data=awd_file_data;\n\t}\n\tpublic parseFromBytes():void\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\n}\n\nexport = AWDAssetParserBase;\n\n",
    null,
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport AWDAssetParserBase\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWD3FileData \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\n\nimport GeometryAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser\");\nimport PrefabAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser\");\nimport DisplayObjectContainerAWDParser \t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser\");\nimport MeshAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser\");\nimport BillboardAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser\");\nimport Single2DTextureAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser\");\nimport CameraAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser\");\nimport SingleCubeTextureAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser\");\nimport LightAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser\");\nimport LightPickerAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser\");\nimport MaterialAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser\");\nimport MovieClipAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser\");\nimport ShadowMethodAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser\");\nimport SharedMethodAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser\");\nimport SkeletonAnimClipAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser\");\nimport SkeletonAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser\");\nimport SkeletonPoseAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser\");\nimport SkyboxAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser\");\nimport TesselatedFontAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser\");\nimport TextfieldAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser\");\nimport TextformatAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser\");\nimport VertexAnimationSetAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser\");\nimport VertexAnimClipAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser\");\nimport CommandAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser\");\nimport MetadataAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser\");\nimport BlockNameSpaceAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser\");\nimport AnimatorAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser\");\nimport AudioAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser\");\n\n\n\nclass AWDBlockParsers\n{\n\n\tprivate _supported_asset_blocks:Object = {};\n\tprivate _all_block_parsers:Array<AWDAssetParserBase>;\n\tconstructor()\n\t{\n\t\tthis._all_block_parsers=new Array<AWDAssetParserBase>();\n\n\t\tthis.add_block_parser(new GeometryAWDParser(), [1]);\n\t\tthis.add_block_parser(new PrefabAWDParser(), [11]);\n\t\tthis.add_block_parser(new DisplayObjectContainerAWDParser(), [22]);\n\t\tthis.add_block_parser(new MeshAWDParser(), [23, 24]);\n\n\t\tthis.add_block_parser(new BillboardAWDParser(), [25]);\n\t\tthis.add_block_parser(new SkyboxAWDParser(), [31]);\n\t\tthis.add_block_parser(new LightAWDParser(), [41]);\n\t\tthis.add_block_parser(new CameraAWDParser(), [42]);\n\t\t//this.add_block_parser(new TextureprojectorAWDParser(), [43]);\n\t\tthis.add_block_parser(new AudioAWDParser(), [44]);\n\t\tthis.add_block_parser(new LightPickerAWDParser(), [51]);\n\t\tthis.add_block_parser(new MaterialAWDParser(), [81]);\n\t\tthis.add_block_parser(new Single2DTextureAWDParser(), [82]);\n\t\tthis.add_block_parser(new SingleCubeTextureAWDParser(), [83]);\n\t\tthis.add_block_parser(new SharedMethodAWDParser(), [91]);\n\t\tthis.add_block_parser(new ShadowMethodAWDParser(), [92]);\n\t\tthis.add_block_parser(new SkeletonAWDParser(), [101]);\n\t\tthis.add_block_parser(new SkeletonPoseAWDParser(), [102]);\n\t\tthis.add_block_parser(new SkeletonAnimClipAWDParser(), [103]);\n\t\tthis.add_block_parser(new VertexAnimClipAWDParser(), [111, 112]);\n\t\tthis.add_block_parser(new VertexAnimationSetAWDParser(), [113]);\n\t\t//this.add_block_parser(new UVAnimationClipAWDParser(), [121]);\n\t\tthis.add_block_parser(new AnimatorAWDParser(), [122]);\n\t\tthis.add_block_parser(new MovieClipAWDParser(), [133]);\n\t\tthis.add_block_parser(new TextfieldAWDParser(), [134]);\n\t\tthis.add_block_parser(new TesselatedFontAWDParser(), [135]);\n\t\tthis.add_block_parser(new TextformatAWDParser(), [136]);\n\n\n\t\tthis.add_block_parser(new CommandAWDParser(), [253]);\n\t\tthis.add_block_parser(new BlockNameSpaceAWDParser(), [254]);\n\t\tthis.add_block_parser(new MetadataAWDParser(), [255]);\n\n\n\t}\n\n\tpublic add_block_parser(block_parser:AWDAssetParserBase, block_types:Array<number>):void\n\t{\n\t\tfor(var i:number=0; i<block_types.length;i++){\n\t\t\tthis._supported_asset_blocks[block_types[i]]  = block_parser;\n\t\t}\n\t\tthis._all_block_parsers.push(block_parser);\n\n\t}\n\n\tpublic init_parser(file_data:AWD3FileData):void\n\t{\n\t\tfor(var i:number=0; i<this._all_block_parsers.length;i++){\n\t\t\tthis._all_block_parsers[i].awd_file_data=file_data;\n\t\t}\n\n\t}\n\tpublic parseAsset(type:number):boolean\n\t{\n\n\t\tvar this_parser:AWDAssetParserBase=this._supported_asset_blocks[type];\n\t\tif(this_parser!=undefined){\n\t\t\tthis_parser.parseFromBytes();\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n}\n\nexport = AWDBlockParsers;",
    "/**\n * Created by 80prozent on 4/18/2015.\n */\n\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass AnimatorAWDParser extends AWDBlockParserBase\n{\n\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar animSetBlockAdress:number; /*int*/\n\t\tvar targetAnimationSet:AnimationSetBase;\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar type:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR});\n\n\t\tanimSetBlockAdress = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar targetMeshLength:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar meshAdresses:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tfor (var i:number /*int*/ = 0; i < targetMeshLength; i++)\n\t\t\tmeshAdresses.push(this.awd_file_data.newBlockBytes.readUnsignedInt());\n\n\t\tvar activeState:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar autoplay:boolean = ( this.awd_file_data.newBlockBytes.readUnsignedByte() == 1 );\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.parseUserAttributes();\n\n\t\tvar returnedArray:Array<any>;\n\t\tvar targetMeshes:Array<Mesh> = new Array<Mesh>();\n\n\t\tfor (i = 0; i < meshAdresses.length; i++) {\n\t\t\tvar targetMesh:Mesh = <Mesh>this.awd_file_data.getAssetByID(meshAdresses[i]);\n\t\t\tif (targetMesh!=undefined)\n\t\t\t\ttargetMeshes.push(targetMesh);\n\t\t}\n\t\tvar targetAnimationSet:AnimationSetBase = <AnimationSetBase>this.awd_file_data.getAssetByID(animSetBlockAdress);\n\t\tif (targetAnimationSet==undefined) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the AnimationSet ( \" + animSetBlockAdress + \" ) for this.awd_file_data Animator\");\n\t\t\treturn undefined;\n\t\t}\n\t\tvar thisAnimator:AnimatorBase;\n\t\tif (type == 1) {\n\n\t\t\tvar skeleton:Skeleton = <Skeleton>this.awd_file_data.getAssetByID(props.get(1, 0));\n\t\t\tif (skeleton==undefined) {\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the Skeleton ( \" + props.get(1, 0) + \" ) for this.awd_file_data Animator\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, skeleton);\n\n\t\t} else if (type == 2)\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\n\n\t\tfor (i = 0; i < targetMeshes.length; i++) {\n\t\t\tif (type == 1)\n\t\t\t\ttargetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\n\t\t\tif (type == 2)\n\t\t\t\ttargetMeshes[i].animator = (<VertexAnimator> thisAnimator);\n\t\t}\n\t\tthis.awd_file_data.cur_block.data = thisAnimator;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + this.awd_file_data.cur_block.name);\n\t}\n\n\n}\n\nexport = AnimatorAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\nclass AudioAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar data_len:number;\n\n\t\t//this.awd_file_data._texture_users[this.awd_file_data._cur_block_id.toString()] = [];\n\n\t\t// External\n\t\tif (type == 0) {\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar url:string;\n\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\n\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block.id.toString(), new URLRequest(url), false, null, true);\n\n\t\t} else {\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\n\t\t\tvar data:ByteArray;\n\t\t\tdata = new ByteArray();\n\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\n\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\n\n\t\t\t//\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\n\t\t\t//\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\n\t\t\t// This gives the browser time to initialise image width / height.\n\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, data, true);\n\n\t\t}\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\n\t\t// Ignore for now\n\t\tthis.awd_file_data.parseProperties(null);\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\t//this.awd_file_data._pPauseAndRetrieveDependencies();\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tvar audioStylesNames:Array<string> = [\"external\", \"embed\"]\n\t\t\tconsole.log(\"Start parsing a \" + audioStylesNames[type] + \" AudioFile\");\n\t\t}\n\t}\n\n\n}\n\nexport = AudioAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\n\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nclass BillboardAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar mat:MaterialBase= <MaterialBase> this.awd_file_data.getAssetByID(data_id);\n\n\t\tif (mat==undefined) {\n\t\t\tmat = new BasicMaterial();\n\t\t}\n\t\tmat.bothSides=true;\n\t\tvar billboard:Billboard = new Billboard(mat);\n\t\tthis.awd_file_data.cur_block.data = billboard;\n\t\t// todo: optional matrix etc can be put in properties.\n\t\tthis.awd_file_data.parseProperties(null);\n\n\t\tbillboard.extra = this.awd_file_data.parseUserAttributes();\n\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a Library-Billboard: Name = '\" + billboard.name + \"| Material-Name = \" + mat.name);\n\t\t}\n\n\t}\n\n\n}\n\nexport = BillboardAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass BlockNameSpaceAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\n\t\tvar id:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar nameSpaceString:string = this.awd_file_data.parseVarStr();\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\n\t}\n\n\n}\n\nexport = BlockNameSpaceAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Parser\t\t\t\t= require(\"awayjs-parsers/lib/AWD3Parser\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass CameraAWD3Parser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void {\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar projection:ProjectionBase;\n\n\t\tthis.awd_file_data.newBlockBytes.readUnsignedByte(); //set as active camera\n\t\tthis.awd_file_data.newBlockBytes.readShort(); //lengthof lenses - not used yet\n\n\t\tvar projectiontype:number = this.awd_file_data.newBlockBytes.readShort();\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({\n\t\t\t101: this.awd_file_data.propsNrType,\n\t\t\t102: this.awd_file_data.propsNrType,\n\t\t\t103: this.awd_file_data.propsNrType,\n\t\t\t104: this.awd_file_data.propsNrType\n\t\t});\n\n\t\tswitch (projectiontype) {\n\t\t\tcase 5001:\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\n\t\t\t\tbreak;\n\t\t\tcase 5002:\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\n\t\t\t\tbreak;\n\t\t\tcase 5003:\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\n\t\t\t\treturn;\n\t\t}\n\n\t\tvar camera:Camera = new Camera(projection);\n\t\tcamera.transform.matrix3D = mtx;\n\t\tif (par_id > 0) {\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id);\n\t\t\tif (parent != undefined) {\n\t\t\t\tparent.addChild(camera);\n\t\t\t\tparentName = parent.name;\n\t\t\t}\n\t\t}\n\n\t\tcamera.name = name;\n\t\tprops = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\tcamera.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = camera;\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + camera.name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\n\t\t}\n\n\t}\n\n\n}\n\nexport = CameraAWD3Parser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass CommandAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\n\t\tvar hasBlocks:boolean = ( this.awd_file_data.newBlockBytes.readUnsignedByte() == 1 );\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\n\t\tvar name:string = this.awd_file_data.parseVarStr();\n\n\t\tvar parentObject:DisplayObjectContainer;\n\t\tvar targetObject:DisplayObject;\n\n\t\tif(par_id>0)\n\t\t\tparentObject = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id); //for no only light is requested!!!!\n\n\t\tvar numCommands:number = this.awd_file_data.newBlockBytes.readShort();\n\t\tvar typeCommand:number = this.awd_file_data.newBlockBytes.readShort();\n\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR});\n\n\t\tswitch (typeCommand) {\n\t\t\tcase 1:\n\n\t\t\t\tvar targetID:number = props.get(1, 0);\n\t\t\t\t//var returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [LightBase.assetType, TextureProjector.assetType]); //for no only light is requested!!!!\n\t\t\t\ttargetObject = <DisplayObject>this.awd_file_data.getAssetByID(targetID); //for no only light is requested!!!!\n\t\t\t\tif(targetObject==undefined){\n\t\t\t\t\t//this._awd_data._blocks[blockID].addError(\"Could not find the light (ID = \" + targetID + \" ( for this CommandBock!\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (parentObject) {\n\t\t\t\t\tparentObject.addChild(targetObject);\n\t\t\t\t}\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (targetObject) {\n\t\t\tprops = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\n\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t\ttargetObject.extra = this.awd_file_data.parseUserAttributes();\n\n\t\t}\n\t\t//this._awd_data._blocks[blockID].data = targetObject\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\n\t\t}\n\t}\n\n\n}\n\nexport = CommandAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AWDProperties\t\t\t= require(\"../AWD3ParserUtils/AWDProperties\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\nclass DisplayObjectContainerAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\n\t\tvar par_id:number;\n\t\tvar mtx:Matrix3D;\n\t\tvar ctr:DisplayObjectContainer;\n\t\tvar parent:DisplayObjectContainer;\n\n\t\tctr = new DisplayObjectContainer();\n\t\tpar_id = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tmtx = this.awd_file_data.parseMatrix3D();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tctr.transform.matrix3D = mtx;\n\n\n\t\tif (par_id > 0) {\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id);\n\t\t\tif (parent != undefined) {\n\t\t\t\tparent.addChild(ctr);\n\t\t\t\tparentName = parent.name;\n\t\t\t}\n\t\t}\n\n\t\t// in AWD version 2.1 we read the Container properties\n\t\tif ((this.awd_file_data.major_version > 2)||((this.awd_file_data.major_version >= 2) && (this.awd_file_data.minor_version == 1))) {\n\t\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t}\n\t\t// in other versions we do not read the Container properties\n\t\telse {\n\t\t\tthis.awd_file_data.parseProperties(null);\n\t\t}\n\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\n\t\tctr.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data=ctr;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + ctr.name + \"' | Parent-Name = \" + parentName);\n\t\t}\n\t}\n\n\n}\n\nexport = DisplayObjectContainerAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\n\nclass GeometryAWDParser extends AWDBlockParserBase\n{\n\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar geom:Geometry = new Geometry();\n\n\t\t// Read name and sub count\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar num_subs:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\t// Read optional properties\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.geoNrType, 2:this.awd_file_data.geoNrType});\n\t\tvar geoScaleU:number = props.get(1, 1);\n\t\tvar geoScaleV:number = props.get(2, 1);\n\n\t\t// Loop through sub meshes\n\t\tvar subs_parsed:number = 0;\n\t\twhile (subs_parsed < num_subs) {\n\t\t\tvar is_curve_geom:boolean=false;\n\t\t\tvar i:number;\n\t\t\tvar sm_len:number, sm_end:number;\n\t\t\tvar w_indices:Array<number>;\n\t\t\tvar weights:Array<number>;\n\n\t\t\tsm_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tsm_end = this.awd_file_data.newBlockBytes.position + sm_len;\n\n\t\t\tvar subProps:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.geoNrType, 2:this.awd_file_data.geoNrType});\n\t\t\t// Loop through data streams\n\t\t\twhile (this.awd_file_data.newBlockBytes.position < sm_end) {\n\t\t\t\tvar idx:number = 0;\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\n\n\t\t\t\t// Type, field type, length\n\t\t\t\tstr_type = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_ftype = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\n\n\t\t\t\tvar x:number, y:number, z:number;\n\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\tx = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t\ty = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t\tz = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\n\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\tindices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 3) {\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\tuvs[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 4) {\n\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\tnormals[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 6) {\n\t\t\t\t\tw_indices = Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\tw_indices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort()*3;\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 7) {\n\n\t\t\t\t\tweights = new Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\tweights[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\n\t\t\t\t\tis_curve_geom=true;\n\t\t\t\t\tvar idx_pos:number = 0;\n\t\t\t\t\tvar idx_curves:number = 0;\n\t\t\t\t\tvar idx_uvs:number = 0;\n\n\t\t\t\t\tvar positions:Array<number> = new Array<number>();\n\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// x\n\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// y\n\t\t\t\t\t\tpositions[idx_pos++] =  this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// type\n\n\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 2\n\n\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.awd_file_data.parseUserAttributes(); // Ignore sub-mesh attributes for now\n\t\t\tif(is_curve_geom){\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\n\t\t\t\tcurve_sub_geom.updateIndices(indices);\n\t\t\t\tcurve_sub_geom.updatePositions(positions);\n\t\t\t\tcurve_sub_geom.updateCurves(curveData);\n\t\t\t\tcurve_sub_geom.updateUVs(uvs);\n\t\t\t\tgeom.addSubGeometry(curve_sub_geom);\n\t\t\t\tif (this.awd_file_data.debug)\n\t\t\t\t\tconsole.log(\"Parsed a CurveSubGeometry\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar triangle_sub_geom = new TriangleSubGeometry(true);\n\t\t\t\tif (weights)\n\t\t\t\t\ttriangle_sub_geom.jointsPerVertex = weights.length / (verts.length / 3);\n\t\t\t\tif (normals)\n\t\t\t\t\ttriangle_sub_geom.autoDeriveNormals = false;\n\t\t\t\tif (uvs)\n\t\t\t\t\ttriangle_sub_geom.autoDeriveUVs = false;\n\t\t\t\t//triangle_sub_geom.autoDeriveNormals = false;\n\t\t\t\tif (true) {\n\t\t\t\t\ttriangle_sub_geom.autoDeriveTangents = true;\n\t\t\t\t}\n\t\t\t\ttriangle_sub_geom.updateIndices(indices);\n\t\t\t\ttriangle_sub_geom.updatePositions(verts);\n\t\t\t\ttriangle_sub_geom.updateVertexNormals(normals);\n\t\t\t\ttriangle_sub_geom.updateUVs(uvs);\n\t\t\t\ttriangle_sub_geom.updateVertexTangents(null);\n\t\t\t\ttriangle_sub_geom.updateJointWeights(weights);\n\t\t\t\ttriangle_sub_geom.updateJointIndices(w_indices);\n\n\t\t\t\tvar scaleU:number = subProps.get(1, 1);\n\t\t\t\tvar scaleV:number = subProps.get(2, 1);\n\t\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\n\n\t\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\n\t\t\t\t\tsetSubUVs = true;\n\t\t\t\t\tscaleU = geoScaleU / scaleU;\n\t\t\t\t\tscaleV = geoScaleV / scaleV;\n\t\t\t\t}\n\n\t\t\t\tif (setSubUVs)\n\t\t\t\t\ttriangle_sub_geom.scaleUV(scaleU, scaleV);\n\t\t\t\tgeom.addSubGeometry(triangle_sub_geom);\n\t\t\t\tif (this.awd_file_data.debug)\n\t\t\t\t\tconsole.log(\"Parsed a TriangleSubGeometry\");\n\t\t\t}\n\n\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\n\t\t\t// when creating meshes (and their material assignments.)\n\n\t\t\tsubs_parsed++;\n\t\t}\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\n\t\t\tgeom.scaleUV(geoScaleU, geoScaleV);\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data=geom;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a TriangleGeometry: Name = \" + name);\n\t\t}\n\t}\n\n}\n\nexport = GeometryAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass LightAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\t\n\t\tvar light:LightBase;\n\t\tvar newShadowMapper:ShadowMapperBase;\n\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar lightType:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.propsNrType, 2:this.awd_file_data.propsNrType, 3:AWD3Utils.COLOR, 4:this.awd_file_data.propsNrType, 5:this.awd_file_data.propsNrType, 6:AWD3Utils.BOOL, 7:AWD3Utils.COLOR, 8:this.awd_file_data.propsNrType, 9:AWD3Utils.UINT8, 10:AWD3Utils.UINT8, 11:this.awd_file_data.propsNrType, 12:AWD3Utils.UINT16, 21:this.awd_file_data.matrixNrType, 22:this.awd_file_data.matrixNrType, 23:this.awd_file_data.matrixNrType});\n\t\tvar shadowMapperType:number = props.get(9, 0);\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\n\n\t\tif (lightType == 1) {\n\t\t\tlight = new PointLight();\n\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 4) {\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlight.transform.matrix3D = mtx;\n\n\t\t}\n\n\t\tif (lightType == 2) {\n\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 1) {\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\n\t\t\t\t}\n\n\t\t\t\t//if (shadowMapperType == 2)\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\n\t\t\t\t//if (shadowMapperType == 3)\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\n\n\t\t\t}\n\n\t\t}\n\t\tlight.name=name;\n\t\tlight.color = props.get(3, 0xffffff);\n\t\tlight.specular = props.get(4, 1.0);\n\t\tlight.diffuse = props.get(5, 1.0);\n\t\tlight.ambientColor = props.get(7, 0xffffff);\n\t\tlight.ambient = props.get(8, 0.0);\n\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\n\t\tif (newShadowMapper) {\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\n\t\t\t\tif (props.get(10, 1) != 1) {\n\t\t\t\t\tnewShadowMapper.depthMapSize = this.awd_file_data.getDepthSizeFromEnum(props.get(10, 1));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (props.get(10, 2) != 2) {\n\t\t\t\t\tnewShadowMapper.depthMapSize = this.awd_file_data.getDepthSizeFromEnum(props.get(10, 2));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlight.shadowMapper = newShadowMapper;\n\t\t\tlight.castsShadows = true;\n\t\t}\n\n\t\tif (par_id != 0) {\n\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id)\n\n\t\t\tif (parent!=undefined){\n\t\t\t\tparent.addChild(light);\n\t\t\t\tparentName = parent.name;\n\t\t\t} else {\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find a parent for this.awd_file_data Light\");\n\t\t\t}\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t//(<DisplayObjectContainer> this.awd_file_data._pContent).addChild(light);\n\t\t}\n\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = light;\n\n\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + this.awd_file_data.cur_block.name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\n\t}\n\n\n}\n\nexport = LightAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\n\nclass LightPickerAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar numLights:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\n\t\tvar k:number = 0;\n\t\tvar lightID:number = 0;\n\n\t\tvar returnedArrayLight:Array<any>;\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\n\n\t\tfor (k = 0; k < numLights; k++) {\n\t\t\tlightID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar light:LightBase = <LightBase>this.awd_file_data.getAssetByID(lightID)\n\n\t\t\tif (light!=undefined) {\n\t\t\t\tlightsArray.push(<LightBase> light);\n\t\t\t\tlightsArrayNames.push(( <LightBase> light).name);\n\n\t\t\t} else {\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find a Light Nr \" + k + \" (ID = \" + lightID + \" ) for this.awd_file_data LightPicker\");\n\t\t\t}\n\t\t}\n\n\t\tif (lightsArray.length == 0) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not create this.awd_file_data LightPicker, cause no Light was found.\");\n\t\t\tthis.awd_file_data.parseUserAttributes();\n\t\t\treturn undefined; //return without any more parsing for this.awd_file_data block\n\t\t}\n\n\t\tvar lightPicker:LightPickerBase = new StaticLightPicker(lightsArray);\n\t\tthis.awd_file_data.cur_block.data = lightPicker;\n\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + lightsArrayNames.toString());\n\t\t}\n\t}\n\n\n}\n\nexport = LightPickerAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\n\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\")\nimport CurveMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/CurveMaterial\")\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass MaterialAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\t// version 2.0\n\t\t////blockLength = block.len;\n\t\tvar name:string;\n\t\tvar type:number;\n\t\tvar props:AWDProperties;\n\t\tvar mat:MethodMaterial;\n\t\tvar attributes:Object;\n\t\tvar finalize:boolean;\n\t\tvar num_methods:number;\n\t\tvar methods_parsed:number;\n\t\tvar returnedArray:Array<any>;\n\t\tvar mat:MethodMaterial;\n\t\tvar normalTexture:Single2DTexture;\n\t\tvar specTexture:Single2DTexture;\n\t\tvar returnedArray:Array<any>;\n\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\ttype = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tnum_methods = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\n\t\tif((this.awd_file_data.major_version==2)&&(this.awd_file_data.major_version==0)) {\n\n\t\t\t// Read material numerical properties\n\t\t\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\n\t\t\tprops = this.awd_file_data.parseProperties({\n\t\t\t\t1: AWD3Utils.INT32,\n\t\t\t\t2: AWD3Utils.BADDR,\n\t\t\t\t10: this.awd_file_data.propsNrType,\n\t\t\t\t11: AWD3Utils.BOOL,\n\t\t\t\t12: this.awd_file_data.propsNrType,\n\t\t\t\t13: AWD3Utils.BOOL\n\t\t\t});\n\t\t\tmethods_parsed = 0;\n\t\t\twhile (methods_parsed < num_methods) {\n\t\t\t\tvar method_type:number;\n\n\t\t\t\tmethod_type = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\tthis.awd_file_data.parseProperties(null);\n\t\t\t\tthis.awd_file_data.parseUserAttributes();\n\t\t\t\tmethods_parsed += 1;\n\t\t\t}\n\t\t\tvar debugString:string = \"\";\n\t\t\tattributes = this.awd_file_data.parseUserAttributes();\n\t\t\tif (type === 1) { // Color material\n\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\t\tvar color:number;\n\t\t\t\tcolor = props.get(1, 0xffffff);\n\t\t\t\t/*if (this.awd_file_data.materialMode < 2) {\n\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\n\t\t\t\t} else {\n\t\t\t\t\tmat = new MethodMaterial(color);\n\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t}*/\n\t\t\t} else if (type === 2) {\n\t\t\t\tvar tex_addr:number = props.get(2, 0);\n\t\t\t\tvar texture:TextureBase=undefined;\n\t\t\t\tif (tex_addr > 0) {\n\t\t\t\t\tvar texture:TextureBase = <TextureBase> this.awd_file_data.getAssetByID(tex_addr);\n\t\t\t\t}\n\t\t\t\tif (texture==undefined) {\n\t\t\t\t\ttexture= DefaultMaterialManager.getDefaultTexture();\n\t\t\t\t}\n\n\t\t\t\tmat = new MethodMaterial(<Single2DTexture>texture);\n\t\t\t\t/*\n\t\t\t\tif (this.awd_file_data.materialMode < 2) {\n\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\n\t\t\t\t} else {\n\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t}\n\n\t\t\tmat.extra = attributes;\n\t\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\t\tmat.repeat = props.get(13, false);\n\t\t\tmat.name=name;\n\t\t\tif (this.awd_file_data.debug) {\n\t\t\t\tconsole.log(debugString);\n\n\t\t\t}\n\t\t\tthis.awd_file_data.cur_block.data=mat;\n\t\t\treturn;\n\t\t}\n\n\t\t// version 2.1+\n\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT32, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 4:AWD3Utils.UINT8, 5:AWD3Utils.BOOL, 6:AWD3Utils.BOOL, 7:AWD3Utils.BOOL, 8:AWD3Utils.BOOL, 9:AWD3Utils.UINT8, 10:this.awd_file_data.propsNrType, 11:AWD3Utils.BOOL, 12:this.awd_file_data.propsNrType, 13:AWD3Utils.BOOL, 15:this.awd_file_data.propsNrType, 16:AWD3Utils.UINT32, 17:AWD3Utils.BADDR, 18:this.awd_file_data.propsNrType, 19:this.awd_file_data.propsNrType, 20:AWD3Utils.UINT32, 21:AWD3Utils.BADDR, 22:AWD3Utils.BADDR});\n\t\tvar spezialType:number = props.get(4, 0);\n\t\tvar debugString:string = \"Parsed Material \";\n\n\t\tif (spezialType >= 2) {//this.awd_file_data is no supported material\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (type <= 2) {// Color material\n\t\t\t/*\n\t\t\tif (this.awd_file_data.materialMode == 1)\n\t\t\t\tspezialType = 0;\n\t\t\telse if (this.awd_file_data.materialMode == 2)\n\t\t\t\tspezialType = 1;\n\t\t\t\t*/\n\n\t\t\tif (spezialType < 2) {//this.awd_file_data is SinglePass or MultiPass\n\n\t\t\t\tif (type == 1) {// Color material\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\n\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\n\t\t\t\t\t\tmat = new MethodMaterial(color);\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\n\n\t\t\t\t\t} else { //\tSinglePassMaterial\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\t\t\t}\n\n\t\t\t\t} else if (type == 2) {// texture material\n\t\t\t\t\tvar tex_addr:number = props.get(2, 0);//TODO temporarily swapped so that diffuse texture goes to ambient\n\t\t\t\t\tvar diftexture:TextureBase=undefined;\n\t\t\t\t\tif (tex_addr > 0) {\n\t\t\t\t\t\tdiftexture = <TextureBase> this.awd_file_data.getAssetByID(tex_addr);\n\t\t\t\t\t}\n\t\t\t\t\tif (diftexture==undefined) {\n\t\t\t\t\t\tdiftexture= DefaultMaterialManager.getDefaultTexture();\n\t\t\t\t\t}\n\t\t\t\t\tmat = new MethodMaterial(<Single2DTexture>diftexture);\n\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + diftexture.name;\n\t\t\t\t\t} else {//\tSinglePassMaterial\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + diftexture.name;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tvar diffuseTex_addr:number = props.get(17, 0);\n\n\t\t\t\tdiffuseTexture=undefined;\n\t\t\t\tif (diffuseTex_addr > 0) {\n\t\t\t\t\tdiffuseTexture = <Single2DTexture> this.awd_file_data.getAssetByID(diffuseTex_addr);\n\t\t\t\t}\n\t\t\t\tif (diffuseTexture) {\n\t\t\t\t\tmat.diffuseTexture = <Single2DTexture>diffuseTexture;\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\n\t\t\t\t}\n\n\t\t\t\tvar normalTex_addr:number = props.get(3, 0);\n\n\n\t\t\t\tnormalTexture = undefined;\n\t\t\t\tif (normalTex_addr > 0) {\n\t\t\t\t\tnormalTexture = <Single2DTexture> this.awd_file_data.getAssetByID(normalTex_addr);\n\t\t\t\t}\n\n\t\t\t\tvar specTex_addr:number = props.get(21, 0);\n\t\t\t\tspecTexture=undefined;\n\t\t\t\tif (specTex_addr > 0) {\n\t\t\t\t\tspecTexture = <Single2DTexture> this.awd_file_data.getAssetByID(specTex_addr);\n\t\t\t\t}\n\n\t\t\t\tvar lightPickerAddr:number = props.get(22, 0);\n\t\t\t\tif(lightPickerAddr>0) {\n\t\t\t\t\tmat.lightPicker = <LightPickerBase> this.awd_file_data.getAssetByID(lightPickerAddr);\n\t\t\t\t}\n\n\t\t\t\tmat.smooth = props.get(5, true);\n\t\t\t\tmat.mipmap = props.get(6, true);\n\t\t\t\tmat.bothSides = props.get(7, false);\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\n\t\t\t\tmat.blendMode = this.awd_file_data.getBlendModeStringFromEnum(props.get(9, 0));\n\t\t\t\tmat.repeat = props.get(13, false);\n\n\t\t\t\tif (normalTexture)\n\t\t\t\t\tmat.normalMap = normalTexture;\n\n\t\t\t\tif (specTexture)\n\t\t\t\t\tmat.specularMap = specTexture;\n\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\t\t\tmat.ambient = props.get(15, 1.0);\n\t\t\t\tmat.diffuseColor = props.get(16, 0xffffff);\n\t\t\t\tmat.specular = props.get(18, 1.0);\n\t\t\t\tmat.gloss = props.get(19, 50);\n\t\t\t\tmat.specularColor = props.get(20, 0xffffff);\n\n\t\t\t\tvar methods_parsed:number = 0;\n\t\t\t\tvar targetID:number;\n\n\t\t\t\twhile (methods_parsed < num_methods) {\n\t\t\t\t\tvar method_type:number;\n\t\t\t\t\tmethod_type = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\t\t\t\tprops = this.awd_file_data.parseProperties({\n\t\t\t\t\t\t1: AWD3Utils.BADDR,\n\t\t\t\t\t\t2: AWD3Utils.BADDR,\n\t\t\t\t\t\t3: AWD3Utils.BADDR,\n\t\t\t\t\t\t101: this.awd_file_data.propsNrType,\n\t\t\t\t\t\t102: this.awd_file_data.propsNrType,\n\t\t\t\t\t\t103: this.awd_file_data.propsNrType,\n\t\t\t\t\t\t201: AWD3Utils.UINT32,\n\t\t\t\t\t\t202: AWD3Utils.UINT32,\n\t\t\t\t\t\t301: AWD3Utils.UINT16,\n\t\t\t\t\t\t302: AWD3Utils.UINT16,\n\t\t\t\t\t\t401: AWD3Utils.UINT8,\n\t\t\t\t\t\t402: AWD3Utils.UINT8,\n\t\t\t\t\t\t601: AWD3Utils.COLOR,\n\t\t\t\t\t\t602: AWD3Utils.COLOR,\n\t\t\t\t\t\t701: AWD3Utils.BOOL,\n\t\t\t\t\t\t702: AWD3Utils.BOOL,\n\t\t\t\t\t\t801: AWD3Utils.MTX4x4\n\t\t\t\t\t});\n\n\t\t\t\t\tswitch (method_type) {\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffectMethod\n\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tvar fx_method:EffectMethodBase = <EffectMethodBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t\tmat.addEffectMethod(fx_method);\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<EffectMethodBase> fx_method).name;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\n\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tvar shadow_method:ShadowMethodBase = <ShadowMethodBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t\tmat.shadowMethod=shadow_method;\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<ShadowMethodBase> shadow_method).name;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tvar cubeTex:SingleCubeTexture=undefined;\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tcubeTex = <SingleCubeTexture>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(cubeTex==undefined){\n\t\t\t\t\t\t\t\tcubeTex=<SingleCubeTexture>this.awd_file_data.getDefaultCubeTexture();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data EnvMapAmbientMethodMaterial\");\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod();\n\t\t\t\t\t\t\tmat.texture = cubeTex;\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + (<SingleCubeTexture> cubeTex).name;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(thisTex==undefined){\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the GradientDiffuseTexture (ID = \" + targetID + \" ) for this.awd_file_data GradientDiffuseMethod\");\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(<Single2DTexture>thisTex);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + (<Single2DTexture>thisTex).name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(thisTex==undefined){\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this.awd_file_data LightMapDiffuseMethod\");\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(<Single2DTexture>thisTex, this.awd_file_data.getBlendModeStringFromEnum(props.get(401, 10)), false, mat.diffuseMethod);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + (<Single2DTexture> thisTex).name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(thisTex==undefined){\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the SecoundNormalMap (ID = \" + targetID + \" ) for this.awd_file_data SimpleWaterNormalMethod\");\n\t\t\t\t\t\t\t//if (!mat.normalMap)\n\t\t\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find a normal Map on this.awd_file_data Material to use with this.awd_file_data SimpleWaterNormalMethod\");\n\t\t\t\t\t\t\tif(mat.normalMap==undefined)\n\t\t\t\t\t\t\t\tmat.normalMap = <Single2DTexture>thisTex;\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(<Single2DTexture>mat.normalMap, <Single2DTexture>thisTex);\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + (<Single2DTexture> thisTex).name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tthis.awd_file_data.parseUserAttributes();\n\t\t\t\t\tmethods_parsed += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// todo: we should not need this.awd_file_data anymore (if using texture-atlas)\n\t\telse if ((type>=3)&&(type<=7)){\n\t\t\t// if this.awd_file_data is a curve material, we create it, finalize it, assign it to block-cache and return and return.\n\t\t\tvar color:number = props.get(1, 0xcccccc);\n\t\t\tdebugString+=color;\n\n\t\t\tvar diffuseTex_addr:number = props.get(2, 0);\n\n\t\t\tvar diffuseTexture:TextureBase=undefined;\n\t\t\tif (diffuseTex_addr>0) {\n\t\t\t\tdiffuseTexture = <TextureBase>this.awd_file_data.getAssetByID(diffuseTex_addr);\n\t\t\t}\n\t\t\tif(diffuseTex_addr==undefined){\n\t\t\t\tdiffuseTexture=DefaultMaterialManager.getDefaultTexture();\n\t\t\t}\n\n\t\t\tvar curve_mat:CurveMaterial = new CurveMaterial(<Single2DTexture>diffuseTexture);\n\t\t\t//debugString+= \" alpha = \"+props.get(10, 1.0)+\" \";\n\t\t\tdebugString+= \" texture = \"+diffuseTex_addr+\" \";\n\t\t\tcurve_mat.bothSides = true;\n\t\t\tcurve_mat.preserveAlpha = true;\n\t\t\tcurve_mat.alphaBlending = true;\n\t\t\tcurve_mat.extra = this.awd_file_data.parseUserAttributes();\n\t\t\tif (this.awd_file_data.debug)\n\t\t\t\tconsole.log(debugString);\n\t\t\tthis.awd_file_data.cur_block.data=curve_mat;\n\t\t\treturn;\n\n\t\t}\n\t\tmat.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data=mat;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(debugString);\n\t\t}\n\t}\n\n}\n\nexport = MaterialAWDParser;",
    "/**\n * Created by 80prozent on 4/18/2015.\n */\n\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AWD3Utils\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass MeshAWDParser extends AWDBlockParserBase\n{\n\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar num_materials:number;\n\t\tvar materials_parsed:number;\n\t\tif(this.awd_file_data.cur_block.type==23) {\n\t\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\n\t\t}\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar geom:Geometry = <Geometry>this.awd_file_data.getAssetByID(data_id)\n\n\t\tif (geom==undefined) {\n\t\t\tgeom = new Geometry();\n\t\t}\n\n\t\tthis.awd_file_data.cur_block.geoID = data_id;\n\t\tvar materials:Array<MaterialBase> = new Array<MaterialBase>();\n\t\tnum_materials = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\tvar materialNames:Array<string> = new Array<string>();\n\t\tmaterials_parsed = 0;\n\n\n\t\twhile (materials_parsed < num_materials) {\n\t\t\tvar mat_id:number;\n\t\t\tmat_id = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar m:MaterialBase = <MaterialBase> this.awd_file_data.getAssetByID(mat_id);\n\t\t\tif(m!=undefined) {\n\t\t\t\tmaterials.push(m);\n\t\t\t\tmaterialNames.push(m.name);\n\t\t\t}\n\t\t\tmaterials_parsed++;\n\t\t}\n\n\t\tvar mesh:Mesh = new Mesh(geom, null);\n\n\t\tif(this.awd_file_data.cur_block.type==23) {\n\n\t\t\tmesh.transform.matrix3D = mtx;\n\t\t\tif(par_id>0) {\n\t\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id)\n\n\t\t\t\tif (parent != undefined) {\n\t\t\t\t\tparent.addChild(mesh);\n\t\t\t\t\tparentName = parent.name;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\n\t\t\tmesh.material = materials[0];\n\t\t} else if (materials.length > 1) {\n\t\t\tvar i:number;\n\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\n\t\t\t}\n\t\t}\n\t\tif ((this.awd_file_data.major_version > 2)||((this.awd_file_data.major_version >= 2) && (this.awd_file_data.minor_version == 1))) {\n\t\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8, 5:AWD3Utils.BOOL});\n\t\t\tmesh.pivot = new Vector3D(<number>props.get(1, 0), <number>props.get(2, 0), <number> props.get(3, 0));\n\t\t\tmesh.castsShadows = props.get(5, true);\n\t\t} else {\n\t\t\tthis.awd_file_data.parseProperties(null);\n\t\t}\n\n\t\tmesh.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = mesh;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a Mesh: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\n\t\t}\n\t}\n\n\n}\n\nexport = MeshAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass MetadataAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT32, 2:AWD3Utils.AWDSTRING, 3:AWD3Utils.AWDSTRING, 4:AWD3Utils.AWDSTRING, 5:AWD3Utils.AWDSTRING});\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\n\t\t}\n\t}\n\n\n}\n\nexport = MetadataAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDBitFlags\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport MovieClip \t\t\t\t\t= require(\"awayjs-player/lib/display/MovieClip\");\nimport TimelineKeyFrame \t\t\t= require(\"awayjs-player/lib/timeline/TimelineKeyFrame\");\nimport AddChildCommand \t\t\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildCommand\");\nimport AddChildAtDepthCommand\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildAtDepthCommand\");\nimport ApplyAS2DepthsCommand\t\t= require(\"awayjs-player/lib/timeline/commands/ApplyAS2DepthsCommand\");\nimport ExecuteScriptCommand \t\t= require(\"awayjs-player/lib/timeline/commands/ExecuteScriptCommand\");\nimport RemoveChildCommand \t\t\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildCommand\");\nimport RemoveChildrenAtDepthCommand\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildrenAtDepthCommand\");\nimport SetInstanceNameCommand \t\t= require(\"awayjs-player/lib/timeline/commands/SetInstanceNameCommand\");\nimport UpdatePropertyCommand \t\t= require(\"awayjs-player/lib/timeline/commands/UpdatePropertyCommand\");\nimport SetMaskCommand \t\t        = require(\"awayjs-player/lib/timeline/commands/SetMaskCommand\");\n\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\n\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\n\nclass MovieClipAWDParser extends AWDBlockParserBase\n{\n\n\tprivate factory:AS2SceneGraphFactory;\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.factory = new AS2SceneGraphFactory();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar c:number;\n\t\tvar new_mc = this.factory.createMovieClip();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar isScene = !!this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar sceneID = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar fps:number = this.awd_file_data.newBlockBytes.readFloat();\n\t\t//console.log(\"fps = \"+fps);\n\t\t//new_mc.fps=fps;\n\t\tvar ms_per_frame = 1000 / fps;\n\t\tvar num_instances:number=0;\n\t\tvar num_all_display_instances:number=0;\n\n\n\t\t// register list of potential childs\n\t\t// a potential child can be reused on a timeline (added / removed / added)\n\t\t// However, for each potential child, we need to register the max-number of instances that a frame contains\n\t\t// we parse 2 lists of potential-childs:\n\t\t// -\tthe first list contains potential-childs that are only ever instanced once per frame.\n\t\t// -\tthe second list contains potential-childs that are instanced multiple times on some frames.\n\n\t\t// on registering a child, the child gets a incremental-id assigned. This is the id, that the commands are using to access the childs.\n\t\t// hence we need to be careful to register all objects in correct order.\n\n\t\tvar num_potential_childs:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tfor (i = 0; i < num_potential_childs; i++) {\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\n\t\t\tif (cmd_asset != null) {\n\t\t\t\tnew_mc.registerPotentialChild(cmd_asset);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\n\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t}\n\t\t}\n\t\tnum_all_display_instances+=num_potential_childs;\n\t\tvar num_potential_childs_multi_instanced = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tnum_potential_childs+=num_potential_childs_multi_instanced;\n\t\tfor (i = 0; i < num_potential_childs_multi_instanced; i++) {\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tnum_instances = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\tnum_all_display_instances+=num_instances;\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\n\t\t\tif (cmd_asset != null) {\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\n\t\t\t\t\tnew_mc.registerPotentialChild(cmd_asset);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\n\t\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\n\t\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\n\t\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//console.log(\"Parsed \"+num_potential_childs+\" potential childs. They will be used by \"+num_all_display_instances+\" instances.\");\n\n\t\t// register list of potential sounds\n\t\t// a potential child can be reused on a timeline (added / removed / added)\n\t\tvar num_potential_sounds = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tfor (i = 0; i < num_potential_sounds; i++) {\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\n\t\t\tif (cmd_asset != null) {\n\t\t\t\t//todo: register sound objects on movieclip\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//todo: this.awd_file_data is a error that might break complete timeline, because all sound obj-id shift\n\t\t\t}\n\t\t}\n\t\t//console.log(\"Parsed \"+num_potential_sounds+\" potential sounds\");\n\n\t\tvar numFrames = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\t//console.log(\"numFrames \"+numFrames);\n\n\t\tvar totalDuration:number;\n\t\tvar frameDuration:number;\n\t\tvar numLabels:number;\n\t\tvar numCommands:number;\n\t\tvar objectID:number;\n\t\tvar target_depth:number;\n\t\tvar resourceID:number;\n\t\tvar number_of_obj:number;\n\t\tvar commandType:number;\n\t\tvar frame:TimelineKeyFrame;\n\t\tvar label:string;\n\t\tvar hasDepthChanges:boolean;\n\t\ttotalDuration=0;\n\t\tfor (i = 0; i < numFrames; i++) {\n\t\t\tframe = new TimelineKeyFrame();\n\t\t\t// todo: remove the ms_per_frame to set the duration in frames\n\t\t\tframeDuration = this.awd_file_data.newBlockBytes.readUnsignedInt()*ms_per_frame;\n\t\t\tframe.setFrameTime(totalDuration, frameDuration);\n\t\t\ttotalDuration += frameDuration;\n\t\t\t//console.log(\"duration = \" + frameDuration);\n\n\t\t\tnumLabels = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\tfor (j = 0; j < numLabels; j++) {\n\t\t\t\tlabel = this.awd_file_data.parseVarStr();\n\t\t\t\t//console.log(\"label \"+label);\n\t\t\t}\n\n\t\t\tnumCommands = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t//console.log(\"numCommands \"+numCommands);\n\t\t\t//traceString += \"\\n      Commands \" + numCommands;\n\t\t\thasDepthChanges = false;\n\t\t\tfor (j = 0; j < numCommands; j++) {\n\t\t\t\tcommandType = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\n\t\t\t\t// 1 = remove a number of objects by depth\n\t\t\t\t// 2 = add a object by child-id at specific depth\n\t\t\t\t// 3 = update a object by child-id\n\t\t\t\t// 4 = add / update sound - (not finished)\n\n\t\t\t\tswitch (commandType) {\n\n\t\t\t\t\tcase 1:// remove a number of objects at specific depth\n\t\t\t\t\t\tnumber_of_obj = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t//console.log(\"number_of_obj \", number_of_obj);\n\t\t\t\t\t\tvar remove_depths:Array<number>=new Array<number>();\n\t\t\t\t\t\tfor (c = 0; c < number_of_obj; c++) {\n\t\t\t\t\t\t\t// Remove Object Command\n\t\t\t\t\t\t\ttarget_depth = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\tremove_depths.push(target_depth);\n\t\t\t\t\t\t\t//console.log(\"\\n       - Remove object at depth: \" + target_depth);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tframe.addConstructCommand(new RemoveChildrenAtDepthCommand(remove_depths));\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2:// add a of object by child-id at specific depth\n\t\t\t\t\tcase 3:// update a object by child-id\n\t\t\t\t\t\tobjectID = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t//console.log(\"add / update objectID \", objectID);\n\t\t\t\t\t\tif (commandType == 2) {\n\t\t\t\t\t\t\thasDepthChanges=true;\n\t\t\t\t\t\t\ttarget_depth = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\t//console.log(\"target_depth \", target_depth);\n\t\t\t\t\t\t\tvar potChild = new_mc.getPotentialChild(objectID);\n\t\t\t\t\t\t\tif (potChild != undefined) {\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new AddChildAtDepthCommand(objectID, target_depth));\n\t\t\t\t\t\t\t\t// if the object is a tetfield, we set the textfield-name as instancename\n\t\t\t\t\t\t\t\tif(potChild.isAsset(TextField)) {\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetInstanceNameCommand(objectID, potChild.name));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tconsole.log(\"ERROR: could not find the objectID \", objectID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar props_flag = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t/*\tProps_flags\n\t\t\t\t\t\t 1: read display matrix - 6 x float,\n\t\t\t\t\t\t 2: read display matrix - read another UINT8-bitflag that determinates what matrix components to parse\n\t\t\t\t\t\t 3: read color matrix - 4 x float, 4 x uint16\n\t\t\t\t\t\t 4: read color matrix - read another UINT8-bitflag that determinates what matrix components to parse\n\t\t\t\t\t\t 5: blendmode - uint8\n\t\t\t\t\t\t 6: visible - boolean\n\t\t\t\t\t\t 7: AWD3Parser.UINT8\n\t\t\t\t\t\t });*/\n\t\t\t\t\t\t// read display matrix\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG1)) {\n\t\t\t\t\t\t\tvar thisMatrix = new Matrix3D();\n\t\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG2)) {\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthisMatrix.rawData[0] = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.rawData[1] = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.rawData[4] = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.rawData[5] = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.position = new Vector3D(this.awd_file_data.newBlockBytes.readFloat(), this.awd_file_data.newBlockBytes.readFloat(), 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"_iMatrix3D\", thisMatrix));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// read colortransforms\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG3)) {\n\t\t\t\t\t\t\tvar thisColorTransform = new ColorTransform();\n\t\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG4)) {\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthisColorTransform.redMultiplier = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.greenMultiplier = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.blueMultiplier = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.alphaMultiplier = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.redOffset = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\t\tthisColorTransform.greenOffset = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\t\tthisColorTransform.blueOffset = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\t\tthisColorTransform.alphaOffset = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG5)) {\n\t\t\t\t\t\t\tvar blendmode_int = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\t\t\t\t\tvar blendmode_string = this.awd_file_data.getBlendModeStringFromEnum(blendmode_int);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG6)) {\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"visible\", this.awd_file_data.newBlockBytes.readByte()));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG7)) {\n\t\t\t\t\t\t\tvar instanceName = this.awd_file_data.parseVarStr();\n\t\t\t\t\t\t\tif (instanceName.length) {\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetInstanceNameCommand(objectID, instanceName));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG8)) {\n\t\t\t\t\t\t\tvar mask_id_nums = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t\tvar mask_ids = new Array();\n\t\t\t\t\t\t\tfor (var mi_cnt = 0; mi_cnt < mask_id_nums; mi_cnt++) {\n\t\t\t\t\t\t\t\tmask_ids.push(this.awd_file_data.newBlockBytes.readShort());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (mask_ids.length > 0) {\n\t\t\t\t\t\t\t\tif ((mask_ids.length == 1) && (mask_ids[0] == -1)) {\n\t\t\t\t\t\t\t\t\t// TODO: this.awd_file_data object is used as mask\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"_iMaskID\", objectID));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetMaskCommand(objectID, mask_ids));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 4:\n\n\t\t\t\t\t\t// Add Sound Command\n\t\t\t\t\t\t// TODO: create CommandPropsSound and check which asset to use\n\t\t\t\t\t\tobjectID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\t// TODO: implement sound in timeline\n\t\t\t\t\t\t//commandString += \"\\n      - Add new Sound AWD-ID = \" + resourceID.toString() + \" as object_id = \" + objectID.toString();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t//commandString += \"\\n       - Unknown Command Type = \" + commandType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasDepthChanges) {\n\t\t\t\t// only want to do this.awd_file_data once after all children's depth values are updated\n\t\t\t\tframe.addConstructCommand(new ApplyAS2DepthsCommand());\n\t\t\t\thasDepthChanges = false;\n\t\t\t}\n\n\t\t\tvar length_code = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tif (length_code > 0) {\n\t\t\t\t// TODO: Script should probably not be attached to keyframes?\n\t\t\t\tvar frame_code = this.awd_file_data.newBlockBytes.readUTFBytes(length_code);\n\t\t\t\tframe.addConstructCommand(new ExecuteScriptCommand(frame_code));\n\t\t\t\t//traceString += \"\\nframe-code = \" + frame_code;\n\t\t\t}\n\t\t\t//traceString += commandString;\n\t\t\t//trace(\"length_code = \"+length_code+\" frame_code = \"+frame_code);\n\t\t\tthis.awd_file_data.newBlockBytes.readUnsignedInt();// user attributes - skip for now\n\t\t\t//console.log(traceString);\n\t\t\tnew_mc.addFrame(frame);\n\n\t\t}\n\t\tthis.awd_file_data.parseProperties(null);\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = new_mc;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| isScene = \" + isScene + \"| sceneID = \" + sceneID + \"| numFrames = \" + numFrames);\n\t}\n\n\n}\n\nexport = MovieClipAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nclass PrefabAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar name:string;\n\t\tvar prefab:PrefabBase;\n\t\tvar primType:number;\n\t\tvar subs_parsed:number;\n\t\tvar props:AWDProperties;\n\t\tvar bsm:Matrix3D;\n\n\t\t// Read name and sub count\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tprimType = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tprops = this.awd_file_data.parseProperties({101:this.awd_file_data.geoNrType, 102:this.awd_file_data.geoNrType, 103:this.awd_file_data.geoNrType, 110:this.awd_file_data.geoNrType, 111:this.awd_file_data.geoNrType, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 303:AWD3Utils.UINT16, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL, 703:AWD3Utils.BOOL, 704:AWD3Utils.BOOL});\n\n\t\tvar primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"]\n\n\t\tswitch (primType) {\n\t\t\t// to do, not all properties are set on all primitives\n\n\t\t\tcase 1:\n\t\t\t\tprefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tprefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\tprefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 4:\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\n\t\t\t\tif (!props.get(701, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\n\t\t\t\tif (!props.get(702, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\n\t\t\t\tif (!props.get(703, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\t\tprefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 6:\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 7:\n\t\t\t\tprefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tprefab = new PrefabBase();\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\n\t\t\t//geom.subGeometries;\n\t\t\t//geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\n\t\t}\n\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = prefab;\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tif ((primType < 0) || (primType > 7)) {\n\t\t\t\tprimType = 0;\n\t\t\t}\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + this.awd_file_data.cur_block.name + \"| type = \" + primitiveTypes[primType]);\n\t\t}\n\t}\n\n\n}\n\nexport = PrefabAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\n\nclass ShadowMethodAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar type:number;\n\t\tvar data_len:number;\n\t\tvar asset:ShadowMethodBase;\n\t\tvar shadowLightID:number;\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tshadowLightID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar light:LightBase=<LightBase> this.awd_file_data.getAssetByID(shadowLightID);\n\n\t\tif (light==undefined) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the TargetLight (ID = \" + shadowLightID + \" ) for this.awd_file_data ShadowMethod - ShadowMethod not created\");\n\t\t\treturn;\n\t\t}\n\n\t\tasset = this.parseShadowMethodList(light);\n\n\t\tif (!asset)\n\t\t\treturn;\n\t\tthis.awd_file_data.parseUserAttributes(); // Ignore for now\n\t\tthis.awd_file_data.cur_block.data = asset;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", light.name);\n\t\t}\n\t}\n\n\n\t// this.awd_file_data functions reads and creates a ShadowMethodMethod\n\tprivate parseShadowMethodList(light:LightBase):ShadowMethodBase\n\t{\n\n\t\tvar methodType:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar shadowMethod:ShadowMethodBase;\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 101:this.awd_file_data.propsNrType, 102:this.awd_file_data.propsNrType, 103:this.awd_file_data.propsNrType, 201:AWD3Utils.UINT32, 202:AWD3Utils.UINT32, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 401:AWD3Utils.UINT8, 402:AWD3Utils.UINT8, 601:AWD3Utils.COLOR, 602:AWD3Utils.COLOR, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL, 801:AWD3Utils.MTX4x4});\n\n\t\tvar targetID:number;\n\t\tvar returnedArray:Array<any>\n\t\tswitch (methodType) {\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this.awd_file_data CascadeShadowMapMethod - ShadowMethod not created\");\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\n\t\t\t//\t\t\t\t\t}\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 1002: //ShadowNearMethod\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\tvar shadow_meth:ShadowMapMethodBase = <ShadowMapMethodBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\tif (shadow_meth==undefined) {\n\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this.awd_file_data ShadowNearMethod - ShadowMethod not created\");\n\t\t\t\t\treturn shadowMethod;\n\t\t\t\t}\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> shadow_meth);\n\t\t\t\tbreak;\n\t\t\tcase 1101: //ShadowFilteredMethod\n\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t\tcase 1102: //ShadowDitheredMethod\n\n\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1103: //ShadowSoftMethod\n\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1104: //ShadowHardMethod\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\treturn shadowMethod;\n\t}\n}\n\nexport = ShadowMethodAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\n\nclass SharedMethodAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\n\t\tvar asset:EffectMethodBase;\n\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tasset = this.parseSharedMethodList();\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = asset;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\n\t\t}\n\t}\n\n\t// this.awd_file_data functions reads and creates a EffectMethod\n\tprivate parseSharedMethodList():EffectMethodBase\n\t{\n\n\t\tvar methodType:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar effectMethodReturn:EffectMethodBase;\n\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 101:this.awd_file_data.propsNrType, 102:this.awd_file_data.propsNrType, 103:this.awd_file_data.propsNrType, 104:this.awd_file_data.propsNrType, 105:this.awd_file_data.propsNrType, 106:this.awd_file_data.propsNrType, 107:this.awd_file_data.propsNrType, 201:AWD3Utils.UINT32, 202:AWD3Utils.UINT32, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 401:AWD3Utils.UINT8, 402:AWD3Utils.UINT8, 601:AWD3Utils.COLOR, 602:AWD3Utils.COLOR, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL});\n\t\tvar targetID:number;\n\t\tvar returnedArray:Array<any>;\n\n\t\tswitch (methodType) {\n\t\t\t// Effect Methods\n\t\t\tcase 401: //ColorMatrix\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\n\t\t\t\tbreak;\n\t\t\tcase 402: //ColorTransform\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\n\t\t\t\tbreak;\n\t\t\tcase 403: //EnvMap\n\n\t\t\t\t/*\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\tconsole.log('ENV MAP', targetID);\n\n\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [ TextureBase.assetType ], \"CubeTexture\");\n\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data EnvMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(<SingleCubeTexture> returnedArray[1], <number> props.get(101, 1));\n\t\t\t\ttargetID = props.get(2, 0);\n\t\t\t\tif (targetID > 0) {\n\t\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\n\t\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the Mask-texture (ID = \" + targetID + \" ) for this.awd_file_data EnvMapMethod\");\n\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <Texture2DBase> returnedArray[1];\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tbreak;\n\t\t\tcase 404: //LightMapMethod\n\t\t\t\t/*\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\n\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this.awd_file_data LightMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(returnedArray[1], this.awd_file_data.getBlendModeStringFromEnum(props.get(401, 10))); //usesecondaryUV not set\n\t\t\t\t*/\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureProjector.assetType]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this.awd_file_data ProjectiveTextureMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 406: //RimLightMethod\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\n\t\t\t\tbreak;\n\t\t\tcase 407: //AlphaMaskMethod\n\t\t\t\t/*\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\n\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the Alpha-texture (ID = \" + targetID + \" ) for this.awd_file_data AlphaMaskMethod\");\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(returnedArray[1], props.get(701, false));\n\t\t\t\t*/\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data RefractionEnvMapMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 410: //FresnelEnvMapMethod\n\t\t\t\t/*\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\n\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data FresnelEnvMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(returnedArray[1], props.get(101, 1));\n\t\t\t\t*/\n\t\t\t\tbreak;\n\t\t\tcase 411: //FogMethod\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\treturn effectMethodReturn;\n\n\t}\n\n}\n\nexport = SharedMethodAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass Single2DTextureAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\n\t\tvar asset:Single2DTexture;\n\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar data_len:number;\n\n\t\t//this.awd_file_data._texture_users[this.awd_file_data._cur_block_id.toString()] = [];\n\n\t\t// External\n\t\tif (type == 0) {\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar url:string;\n\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\n\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\n\n\t\t} else {\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\n\t\t\tvar data:ByteArray;\n\t\t\tdata = new ByteArray();\n\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\n\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\n\n\t\t\t//\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\n\t\t\t//\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\n\t\t\t// This gives the browser time to initialise image width / height.\n\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, data, true);\n\n\t\t}\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\n\t\t// Ignore for now\n\t\tthis.awd_file_data.parseProperties(null);\n\t\tthis.awd_file_data.parseUserAttributes();\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Bitmap for Texture\");\n\t\t}\n\t}\n\n\n}\n\nexport = Single2DTextureAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\n\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\nclass SingleCubeTextureAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar data_len:number;\n\t\tvar i:number;\n\n\t\t//this.awd_file_data._cubeTextures = new Array<any>();\n\t\t//this.awd_file_data._texture_users[ this.awd_file_data._cur_block_id.toString() ] = [];\n\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\n\t\t//this.awd_file_data._blocks[blockID].name =\n\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tfor (i = 0; i < 6; i++) {\n\t\t\t//this.awd_file_data.texture_users[this.awd_file_data.cur_block_id.toString()] = [];\n\t\t\t//this.awd_file_data.cubeTextures.push(null);\n\n\t\t\t// External\n\t\t\tif (type == 0) {\n\t\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\tvar url:string;\n\t\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\n\n\t\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\n\t\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block_id.toString() + \"#\" + i, new URLRequest(url), false, null, true);\n\t\t\t} else {\n\n\t\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\tvar data:ByteArray;\n\t\t\t\tdata = new ByteArray();\n\n\t\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\n\t\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block_id.toString() + \"#\" + i, null, false, ParserUtils.byteArrayToImage(data), true);\n\t\t\t}\n\t\t}\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\n\t\t// Ignore for now\n\t\tthis.awd_file_data.parseProperties(null);\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\t//this.awd_file_data._pPauseAndRetrieveDependencies();\n\t\t//this.awd_file_data._blocks[blockID].data = asset;\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\n\t\t\tconsole.log(\"Start parsing 6 \" + textureStylesNames[type] + \" Bitmaps for CubeTexture\");\n\t\t}\n\t}\n\n\n}\n\nexport = SingleCubeTextureAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nclass SkeletonAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar skeleton:Skeleton = new Skeleton();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tthis.awd_file_data.parseProperties(null); // Discard properties for now\n\n\t\tvar joints_parsed:number /*uint*/ = 0;\n\t\twhile (joints_parsed < num_joints) {\n\t\t\tvar joint:SkeletonJoint;\n\t\t\tvar ibp:Matrix3D;\n\t\t\t// Ignore joint id\n\t\t\tthis.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\tjoint = new SkeletonJoint();\n\t\t\tjoint.parentIndex = this.awd_file_data.newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\n\t\t\tjoint.name = this.awd_file_data.parseVarStr();\n\n\t\t\tibp = this.awd_file_data.parseMatrix3D();\n\t\t\tjoint.inverseBindPose = ibp.rawData;\n\t\t\t// Ignore joint props/attributes for now\n\t\t\tthis.awd_file_data.parseProperties(null);\n\t\t\tthis.awd_file_data.parseUserAttributes();\n\t\t\tskeleton.joints.push(joint);\n\t\t\tjoints_parsed++;\n\t\t}\n\n\t\t// Discard attributes for now\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = skeleton;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\n}\n\nexport = SkeletonAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\n\nclass SkeletonAnimClipAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar frame_dur:number;\n\t\tvar pose_addr:number /*uint*/;\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar num_frames:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tthis.awd_file_data.parseProperties(null); // Ignore properties for now\n\n\t\tvar frames_parsed:number /*uint*/ = 0;\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tpose_addr = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tframe_dur = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\tvar skel_pose:SkeletonPose = <SkeletonPose>this.awd_file_data.getAssetByID(pose_addr);\n\t\t\tif (skel_pose!=undefined) {\n\t\t\t\tclip.addFrame(skel_pose, frame_dur);\n\t\t\t}\n\t\t\tframes_parsed++;\n\t\t}\n\t\t// Ignore attributes for now\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = clip;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\n\n}\n\nexport = SkeletonAnimClipAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nclass SkeletonPoseAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar pose:SkeletonPose = new SkeletonPose();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tthis.awd_file_data.parseProperties(null); // Ignore properties for now\n\n\n\t\tvar joints_parsed:number /*uint*/ = 0;\n\t\twhile (joints_parsed < num_joints) {\n\t\t\tvar joint_pose:JointPose;\n\t\t\tvar has_transform:number /*uint*/;\n\t\t\tjoint_pose = new JointPose();\n\t\t\thas_transform = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\tif (has_transform == 1) {\n\t\t\t\tvar mtx_data:Array<number> = this.awd_file_data.parseMatrix43RawData();\n\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\n\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\n\t\t\t}\n\t\t\tjoints_parsed++;\n\t\t}\n\t\t// Skip attributes for now\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = pose;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\n}\n\nexport = SkeletonPoseAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass SkyboxAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar cubeTexAddr:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\n\t\tvar cube_tex:SingleCubeTexture = undefined;\n\t\tif(cubeTexAddr>0) {\n\t\t\tcube_tex = <SingleCubeTexture> this.awd_file_data.getAssetByID(cubeTexAddr);\n\t\t}\n\t\tif(cube_tex==undefined){\n\t\t\tcube_tex=<SingleCubeTexture>this.awd_file_data.getDefaultCubeTexture();\n\t\t}\n\t\t//if ((!returnedArrayCubeTex[0]) && (cubeTexAddr != 0))\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the Cubetexture (ID = \" + cubeTexAddr + \" ) for this.awd_file_data Skybox\");\n\t\tvar new_skybox:Skybox = new Skybox(<SingleCubeTexture> cube_tex);\n\n\t\tthis.awd_file_data.parseProperties(null)\n\t\tnew_skybox.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = new_skybox;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + this.awd_file_data.cur_block.name + \"' | CubeTexture-Name = \" + cube_tex.name);\n\t}\n\n\n}\n\nexport = SkyboxAWDParser;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\n\nclass TesselatedFontAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar new_font:Font=new Font();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar font_style_cnt:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t//console.log(\"Font font_style_cnt = \"+font_style_cnt);\n\t\tfor (var i:number = 0; i < font_style_cnt; ++i) {\n\t\t\tvar font_style_name:string = this.awd_file_data.parseVarStr();\n\t\t\t//console.log(\"Font font_style_name = \"+font_style_name);\n\t\t\tvar new_font_style:TesselatedFontTable=new_font.get_font_table(font_style_name);\n\t\t\tnew_font_style.set_font_em_size(this.awd_file_data.newBlockBytes.readUnsignedInt());\n\t\t\t//console.log(\"Font new_font_style.font_em_size = \"+new_font_style.get_font_em_size);\n\t\t\tvar font_style_char_cnt:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t//console.log(\"Font font_style_char_cnt = \"+font_style_char_cnt);\n\t\t\tfor (var i:number = 0; i < font_style_char_cnt; ++i) {\n\n\t\t\t\tvar font_style_char:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"Font font_style_char = \"+font_style_char);\n\t\t\t\t// todo: this.awd_file_data is basically a simplified version of the subgeom-parsing done in parseTriangleGeometry. Make a parseSubGeom() instead (?)\n\t\t\t\tvar sm_len:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\tvar sm_end:number = this.awd_file_data.newBlockBytes.position + sm_len;\n\t\t\t\t//console.log(\"Font sm_len = \"+sm_len);\n\n\t\t\t\t//this.awd_file_data.parseProperties(null); // no properties for font-table subgeos\n\t\t\t\t// Loop through data streams\n\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < sm_end) {\n\t\t\t\t\tvar idx:number = 0;\n\t\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\n\n\t\t\t\t\t// Type, field type, length\n\t\t\t\t\tstr_type = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\t\t\tstr_ftype = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\n\n\t\t\t\t\tif (str_type == 2) {//face indicies positions\n\t\t\t\t\t\tvar indices:Array<number> = new Array<number>();\n\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\t\tindices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\n\t\t\t\t\t\tvar idx_pos:number = 0;\n\t\t\t\t\t\tvar idx_curves:number = 0;\n\t\t\t\t\t\tvar idx_uvs:number = 0;\n\n\t\t\t\t\t\tvar positions:Array<number> = new Array<number>();\n\t\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\n\t\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// x\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// y\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// type\n\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 2\n\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//this.awd_file_data.parseProperties(null);// no attributes for font-table subgeos\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\n\t\t\t\tcurve_sub_geom.updateIndices(indices);\n\t\t\t\tcurve_sub_geom.updatePositions(positions);\n\t\t\t\tcurve_sub_geom.updateCurves(curveData);\n\t\t\t\tcurve_sub_geom.updateUVs(uvs);\n\t\t\t\tnew_font_style.set_subgeo_for_char(font_style_char.toString(), curve_sub_geom);\n\t\t\t}\n\t\t\t//console.log(\"Parsed a font-table\");\n\n\t\t}\n\t\t//console.log(\"Parsed a font\");\n\t\tthis.awd_file_data.parseProperties(null);\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = new_font;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a font: Name = '\" + this.awd_file_data.cur_block.name);\n\t\t}\n\n\t}\n\n}\n\nexport = TesselatedFontAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\n\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\n\nclass TextfieldAWDParser extends AWDBlockParserBase\n{\n\n\tprivate factory:AS2SceneGraphFactory;\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.factory = new AS2SceneGraphFactory();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar newTextField = this.factory.createTextField();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar text_field_type:number=this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tif(text_field_type==0) {\n\t\t\tnewTextField.type = \"static\";\n\t\t}\n\t\telse if(text_field_type==1) {\n\t\t\tnewTextField.type = \"dynamic\";\n\t\t}\n\t\telse if(text_field_type==2) {\n\t\t\tnewTextField.type = \"input\";\n\t\t}\n\t\telse if(text_field_type==3) {\n\t\t\tnewTextField.type =\"input\";\n\t\t\tnewTextField.displayAsPassword=true;\n\t\t}\n\n\t\tnewTextField.width=this.awd_file_data.newBlockBytes.readFloat();\n\t\tnewTextField.height=this.awd_file_data.newBlockBytes.readFloat();\n\t\tvar num_paragraphs:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar complete_text:string = \"\";\n\t\t//console.log(\"num_paragraphs  '\" + num_paragraphs);\n\t\tvar text_format:TextFormat;\n\t\tfor(var paracnt:number=0; paracnt<num_paragraphs; paracnt++){\n\n\t\t\tvar num_textruns:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t//console.log(\"num_textruns  '\" + num_textruns);\n\t\t\tfor(var textrun_cnt:number=0; textrun_cnt<num_textruns; textrun_cnt++) {\n\n\t\t\t\tvar format_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"format_id  '\" + format_id);\n\t\t\t\tvar textFormat:TextFormat = <TextFormat>this.awd_file_data.getAssetByID(format_id);\n\t\t\t\tif (textFormat==undefined) {\n\t\t\t\t\ttext_format = new TextFormat();\n\t\t\t\t}\n\t\t\t\t//console.log(\"text_format  '\" + text_format.name);\n\t\t\t\tvar txt_length = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"txt_length  '\" + txt_length);\n\t\t\t\tif (txt_length > 0) {\n\t\t\t\t\tvar this_txt:string = this.awd_file_data.newBlockBytes.readUTFBytes(txt_length);\n\t\t\t\t\t//newTextField.appendText(this_txt, text_format);\n\t\t\t\t\tcomplete_text+=this_txt;\n\t\t\t\t\t//console.log(\"this_txt  '\" + this_txt);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//newTextField.closeParagraph();\n\t\t}\n\t\tnewTextField.textFormat=text_format;\n\t\tnewTextField.text=complete_text;\n\n\t\t//newTextField.construct_geometry();\n\n\t\t// todo: optional matrix etc can be put in properties.\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BOOL, 3:AWD3Utils.BOOL, 4:AWD3Utils.BOOL, 5:AWD3Utils.BOOL, 7:AWD3Utils.UINT8, 8:AWD3Utils.UINT8, 9:AWD3Utils.UINT8});\n\t\tnewTextField.selectable = props.get(1, false);\n\t\tnewTextField.border =  props.get(3, false);\n\t\t//newTextField.renderHTML =  props.get(4, false);\n\t\t//newTextField.scrollable =  props.get(5, false);\n\t\t//newTextField.text_flow =  props.get(7, 0);\n\t\t//newTextField.orientationMode =  props.get(8, 0);\n\t\t//newTextField.line_mode =  props.get(9, 0);\n\n\t\tnewTextField.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = newTextField;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a TextField: Name = '\" + newTextField.name + \"| text  = \" + complete_text);\n\t\t}\n\n\t}\n\n\n}\n\nexport = TextfieldAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TextformatAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar newTextFormat:TextFormat = new TextFormat();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\t//console.log(\"this.awd_file_data._blocks[blockID].name  '\" + this.awd_file_data._blocks[blockID].name );\n\t\tvar font_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t//console.log(\"font_id  '\" + font_id);\n\t\tvar font_style_name:string = this.awd_file_data.parseVarStr();\n\t\t//console.log(\"font_style_name  '\" + font_style_name);\n\t\tvar font:Font = <Font>this.awd_file_data.getAssetByID(font_id);\n\t\tif (font==undefined) {\n\t\t\tfont = new Font();\n\t\t}\n\t\tnewTextFormat.font_name = font.name;\n\t\tvar font_table:TesselatedFontTable = font.get_font_table(font_style_name);\n\t\tif(font_table!=null){\n\t\t\tnewTextFormat.font_style = font_style_name;\n\t\t\tnewTextFormat.font_table = font_table;\n\t\t}\n\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t//console.log(\"mat  '\" + data_id);\n\t\tvar mat:BasicMaterial = <BasicMaterial> this.awd_file_data.getAssetByID(data_id);\n\n\t\tif (mat==undefined) {\n\t\t\tmat = new BasicMaterial();\n\t\t}\n\t\tmat.bothSides=true;\n\n\t\tvar num_uv_values:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t//console.log(\"num_uv_values  '\" + num_uv_values);\n\t\tvar uv_values:Array<number>=[];\n\t\tfor(var uvcnt:number=0; uvcnt<num_uv_values; uvcnt++){\n\t\t\tvar uv_value:number=this.awd_file_data.newBlockBytes.readFloat();\n\t\t\tuv_values.push(uv_value);\n\t\t\t//console.log(\"uv_value  '\" + uv_value);\n\t\t}\n\t\tnewTextFormat.uv_values=uv_values;\n\t\tvar format_props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT16, 2:AWD3Utils.UINT16, 3:AWD3Utils.UINT8,4:AWD3Utils.UINT8,5:AWD3Utils.UINT8,6:AWD3Utils.UINT8, 7:AWD3Utils.UINT16, 8:AWD3Utils.UINT16, 9:AWD3Utils.UINT16, 10:AWD3Utils.UINT16});\n\n\t\tnewTextFormat.size = format_props.get(1,12);\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\n\t\t//newTextFormat.rotated = format_props.get(3,false);\n\t\tnewTextFormat.kerning = format_props.get(4,true);\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\n\t\t//newTextFormat.align = format_props.get(6,0);\n\t\tnewTextFormat.indent = format_props.get(7,0);\n\t\tnewTextFormat.leftMargin = format_props.get(8,0);\n\t\tnewTextFormat.rightMargin = format_props.get(9,0);\n\t\t//newTextFormat.linespacing = format_props.get(10,0);\n\t\tnewTextFormat.size = format_props.get(1,12);\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\n\t\t//newTextFormat.rotated = format_props.get(3,false);\n\t\tnewTextFormat.kerning = format_props.get(4,true);\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\n\t\tnewTextFormat.material = mat;\n\t\tthis.awd_file_data.parseUserAttributes();// textformat has no extra-properties\n\t\t//newTextFormat.extra =\n\n\t\tthis.awd_file_data.cur_block.data = newTextFormat;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a TextFormat: Name = '\" + name + \" font: \"+font.name);\n\t\t}\n\t}\n\n\n}\n\nexport = TextformatAWDParser;/**\n * Created by 80prozent on 4/18/2015.\n */\n",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\n\nclass VertexAnimClipAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar poseOnly:boolean=false;\n\t\tif(this.awd_file_data.cur_block.type==111){\n\t\t\tposeOnly=true\n\t\t}\n\t\tvar num_frames:number /*uint*/ = 1;\n\t\tvar num_submeshes:number /*uint*/;\n\t\tvar frames_parsed:number /*uint*/;\n\t\tvar subMeshParsed:number /*uint*/;\n\t\tvar frame_dur:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar str_len:number;\n\t\tvar str_end:number;\n\t\tvar geometry:Geometry;\n\t\tvar subGeom:TriangleSubGeometry;\n\t\tvar idx:number /*int*/ = 0;\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar verts:Array<number>;\n\t\tvar num_Streams:number /*int*/ = 0;\n\t\tvar streamsParsed:number /*int*/ = 0;\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\n\t\tvar props:AWDProperties;\n\t\tvar thisGeo:Geometry;\n\t\tvar clip:VertexClipNode = new VertexClipNode();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar geoAdress:number /*int*/ = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar geom:Geometry = <Geometry>this.awd_file_data.getAssetByID(geoAdress);\n\t\tif (geom==undefined) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the target-Geometry-Object \" + geoAdress + \" ) for this.awd_file_data VertexClipNode\");\n\t\t\treturn;\n\t\t}\n\t\tvar uvs:Array<Array<number>> = this.awd_file_data.getUVForVertexAnimation(geoAdress);\n\t\tif (!poseOnly)\n\t\t\tnum_frames = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\tnum_submeshes = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tnum_Streams = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tstreamsParsed = 0;\n\t\twhile (streamsParsed < num_Streams) {\n\t\t\tstreamtypes.push(this.awd_file_data.newBlockBytes.readUnsignedShort());\n\t\t\tstreamsParsed++;\n\t\t}\n\t\tprops = this.awd_file_data.parseProperties({1:AWD3Utils.BOOL, 2:AWD3Utils.BOOL});\n\n\t\tclip.looping = props.get(1, true);\n\t\tclip.stitchFinalFrame = props.get(2, false);\n\n\t\tframes_parsed = 0;\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tframe_dur = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\tgeometry = new Geometry();\n\t\t\tsubMeshParsed = 0;\n\t\t\twhile (subMeshParsed < num_submeshes) {\n\t\t\t\tstreamsParsed = 0;\n\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\n\t\t\t\twhile (streamsParsed < num_Streams) {\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\n\t\t\t\t\t\tindices = geom.subGeometries[subMeshParsed].indices;\n\t\t\t\t\t\tverts = new Array<number>();\n\t\t\t\t\t\tidx = 0;\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\t\tx = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo)\n\t\t\t\t\t\t\ty = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo)\n\t\t\t\t\t\t\tz = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo)\n\t\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsubGeom = new TriangleSubGeometry(true);\n\t\t\t\t\t\tsubGeom.updateIndices(indices);\n\t\t\t\t\t\tsubGeom.updatePositions(verts);\n\t\t\t\t\t\tsubGeom.updateUVs(uvs[subMeshParsed]);\n\t\t\t\t\t\tsubGeom.updateVertexNormals(null);\n\t\t\t\t\t\tsubGeom.updateVertexTangents(null);\n\t\t\t\t\t\tsubGeom.autoDeriveNormals = false;\n\t\t\t\t\t\tsubGeom.autoDeriveTangents = false;\n\t\t\t\t\t\tsubMeshParsed++;\n\t\t\t\t\t\tgeometry.addSubGeometry(subGeom)\n\t\t\t\t\t} else\n\t\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\n\t\t\t\t\tstreamsParsed++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tclip.addFrame(geometry, frame_dur);\n\t\t\tframes_parsed++;\n\t\t}\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data=clip;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + geom.name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\n\n}\n\nexport = VertexAnimClipAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\n\nclass VertexAnimationSetAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar poseBlockAdress:number /*int*/\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar num_frames:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT16});\n\t\tvar frames_parsed:number /*uint*/ = 0;\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tposeBlockAdress = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar animNode:AnimationNodeBase = <AnimationNodeBase>this.awd_file_data.getAssetByID(poseBlockAdress);\n\t\t\tif (animNode==undefined) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the AnimationClipNode Nr \" + frames_parsed + \" ( \" + poseBlockAdress + \" ) for this.awd_file_data AnimationSet\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (animNode instanceof VertexClipNode)\n\t\t\t\t\tvertexFrames.push(<VertexClipNode>animNode)\n\t\t\t\tif (animNode instanceof SkeletonClipNode)\n\t\t\t\t\tskeletonFrames.push(<SkeletonClipNode>animNode)\n\t\t\t}\n\t\t\tframes_parsed++;\n\t\t}\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not create this.awd_file_data AnimationSet, because it contains no animations\");\n\t\t\treturn;\n\t\t}\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tif (vertexFrames.length > 0) {\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\n\t\t\tthis.awd_file_data.cur_block.data = newVertexAnimationSet;\n\t\t\tif (this.awd_file_data.debug)\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + newVertexAnimationSet.name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames.toString());\n\t\t\treturn;\n\t\t} else if (skeletonFrames.length > 0) {\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\n\t\t\tthis.awd_file_data.cur_block.data = newSkeletonAnimationSet;\n\t\t\tif (this.awd_file_data.debug)\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + newSkeletonAnimationSet.name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames.toString());\n\t\t}\n\t}\n\n\n}\n\nexport = VertexAnimationSetAWDParser;",
    "import BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n\nimport AWDBitFlags\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport AWDBlock\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\nimport AWD3Utils\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\n\n/**\n * AWD3FileData stores the data loaded for a AWD-file. It also gives access to some helper functions.\n */\nclass AWD3FileData\n{\n\t//set to \"true\" to have some console.logs in the Console\n\tprivate _debug:boolean = false;\n\n\tprivate _cur_block:AWDBlock;\n\tprivate _blocks:Array<AWDBlock>;\n\tprivate _newBlockBytes:ByteArray;\n\n\tpublic  major_version:number;\n\tpublic  minor_version:number;\n\n\tprivate _accuracyOnBlocks:boolean = false;\n\n\tprivate _accuracyMatrix:boolean;\n\tprivate _accuracyGeo:boolean;\n\tprivate _accuracyProps:boolean;\n\tprivate _matrixNrType:number;\n\tprivate _geoNrType:number;\n\tprivate _propsNrType:number;\n\n\tprivate blendModeDic:Array<string>;\n\tprivate _depthSizeDic:Array<number>;\n\n\tprivate _defaultCubeTexture:SingleCubeTexture;\n\t/**\n\t * Creates a new AWD3FileData object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.major_version=0;\n\t\tthis.minor_version=0;\n\n\t\tthis._blocks = new Array<AWDBlock>();\n\t\tthis._blocks.push(new AWDBlock(255, 0));\n\t\tthis._cur_block=this._blocks[0];\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.ADD);\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\n\t\tthis._depthSizeDic.push(256);\n\t\tthis._depthSizeDic.push(512);\n\t\tthis._depthSizeDic.push(2048);\n\t\tthis._depthSizeDic.push(1024);\n\t}\n\n\tpublic getDepthSizeFromEnum(depthSize:number):number\n\t{\n\t\treturn this._depthSizeDic[depthSize];\n\t}\n\tpublic getBlendModeStringFromEnum(blendmode:number):string\n\t{\n\t\treturn this.blendModeDic[blendmode];\n\t}\n\n\tpublic dispose():void\n\t{\n\n\t\tfor (var c in this._blocks) {\n\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[ c ];\n\t\t\tb.dispose();\n\n\t\t}\n\n\t}\n\tpublic get accuracyOnBlocks():boolean\n\t{\n\t\treturn this._accuracyOnBlocks;\n\t}\n\tpublic get accuracyMatrix():boolean\n\t{\n\t\treturn this._accuracyMatrix;\n\t}\n\tpublic set accuracyMatrix(new_accuracyMatrix:boolean)\n\t{\n\t\tthis._accuracyMatrix = new_accuracyMatrix;\n\t}\n\tpublic get accuracyProps():boolean\n\t{\n\t\treturn this._accuracyProps;\n\t}\n\tpublic set accuracyProps(new_accuracyProps:boolean)\n\t{\n\t\tthis._accuracyProps = new_accuracyProps;\n\t}\n\tpublic set accuracyGeo(new_accuracyGeo:boolean)\n\t{\n\t\tthis._accuracyGeo = new_accuracyGeo;\n\t}\n\tpublic get accuracyGeo():boolean\n\t{\n\t\treturn this._accuracyGeo;\n\t}\n\tpublic get debug():boolean\n\t{\n\t\treturn this._debug;\n\t}\n\n\tpublic get matrixNrType():number\n\t{\n\t\treturn this._matrixNrType;\n\t}\n\tpublic set matrixNrType(newmatrixNrType:number)\n\t{\n\t\tthis._matrixNrType = newmatrixNrType;\n\t}\n\n\tpublic get propsNrType():number\n\t{\n\t\treturn this._propsNrType;\n\t}\n\tpublic set propsNrType(new_props_nr:number)\n\t{\n\t\tthis._propsNrType = new_props_nr;\n\t}\n\n\tpublic get geoNrType():number\n\t{\n\t\treturn this._geoNrType;\n\t}\n\tpublic set geoNrType(new_geoNrType:number)\n\t{\n\t\tthis._geoNrType = new_geoNrType;\n\t}\n\n\n\tpublic set newBlockBytes(new_newBlockBytes:ByteArray)\n\t{\n\t\tthis._newBlockBytes = new_newBlockBytes;\n\t}\n\tpublic get newBlockBytes():ByteArray\n\t{\n\t\treturn this._newBlockBytes;\n\t}\n\tpublic create_new_block(type:number, id:number)\n\t{\n\t\tvar new_block:AWDBlock= new AWDBlock(this._blocks.length, type);\n\t\tthis._cur_block=new_block;\n\t\tthis._blocks[id]=new_block;\n\t}\n\tpublic get cur_block():AWDBlock\n\t{\n\t\treturn this._cur_block;\n\t}\n\tpublic block_cnt():number\n\t{\n\t\treturn this._blocks.length;\n\t}\n\n\t//--Parser UTILS---------------------------------------------------------------------------\n\n\tpublic parseUserAttributes():Object\n\t{\n\t\tvar attributes:Object;\n\t\tvar list_len:number;\n\t\tvar attibuteCnt:number;\n\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\n\n\t\tif (list_len > 0) {\n\n\t\t\tvar list_end:number;\n\n\t\t\tattributes = {};\n\n\t\t\tlist_end = this._newBlockBytes.position + list_len;\n\n\t\t\twhile (this._newBlockBytes.position < list_end) {\n\t\t\t\tvar ns_id:number;\n\t\t\t\tvar attr_key:string;\n\t\t\t\tvar attr_type:number;\n\t\t\t\tvar attr_len:number;\n\t\t\t\tvar attr_val:any;\n\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_key = this.parseVarStr();\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn attributes;\n\t\t\t\t}\n\n\t\t\t\tswitch (attr_type) {\n\t\t\t\t\tcase AWD3Utils.AWDSTRING:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.INT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.INT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.INT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.BOOL:\n\t\t\t\t\tcase AWD3Utils.UINT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.UINT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.UINT32:\n\t\t\t\t\tcase AWD3Utils.BADDR:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.FLOAT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.FLOAT64:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\n\t\t\t\t}\n\n\t\t\t\tattributes[attr_key] = attr_val;\n\t\t\t\tattibuteCnt += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\tpublic parseProperties(expected:Object):AWDProperties\n\t{\n\t\tvar list_end:number;\n\t\tvar list_len:number;\n\t\tvar propertyCnt:number = 0;\n\t\tvar props:AWDProperties = new AWDProperties();\n\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\n\t\tlist_end = this._newBlockBytes.position + list_len;\n\n\t\tif (expected) {\n\n\t\t\twhile (this._newBlockBytes.position < list_end) {\n\t\t\t\tvar len:number;\n\t\t\t\tvar key:number;\n\t\t\t\tvar type:number;\n\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn props;\n\t\t\t\t}\n\n\t\t\t\tif (expected.hasOwnProperty(key.toString())) {\n\t\t\t\t\ttype = expected[key];\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\n\t\t\t\t} else {\n\t\t\t\t\tthis._newBlockBytes.position += len;\n\t\t\t\t}\n\n\t\t\t\tpropertyCnt += 1;\n\n\t\t\t}\n\t\t} else {\n\t\t\tthis._newBlockBytes.position = list_end;\n\t\t}\n\n\t\treturn props;\n\n\t}\n\n\tprivate parseAttrValue(type:number, len:number):any\n\t{\n\t\tvar elem_len:number;\n\t\tvar read_func:Function;\n\n\t\tswitch (type) {\n\n\t\t\tcase AWD3Utils.BOOL:\n\t\t\tcase AWD3Utils.INT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.INT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.INT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.UINT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.UINT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.UINT32:\n\t\t\tcase AWD3Utils.COLOR:\n\t\t\tcase AWD3Utils.BADDR:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.FLOAT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.FLOAT64:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.AWDSTRING:\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\n\n\t\t\tcase AWD3Utils.VECTOR2x1:\n\t\t\tcase AWD3Utils.VECTOR3x1:\n\t\t\tcase AWD3Utils.VECTOR4x1:\n\t\t\tcase AWD3Utils.MTX3x2:\n\t\t\tcase AWD3Utils.MTX3x3:\n\t\t\tcase AWD3Utils.MTX4x3:\n\t\t\tcase AWD3Utils.MTX4x4:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif (elem_len < len) {\n\t\t\tvar list:Array<any> = [];\n\t\t\tvar num_read:number = 0;\n\t\t\tvar num_elems:number = len/elem_len;\n\n\t\t\twhile (num_read < num_elems) {\n\t\t\t\tlist.push(read_func.apply(this._newBlockBytes)); // list.push(read_func());\n\t\t\t\tnum_read++;\n\t\t\t}\n\n\t\t\treturn list;\n\t\t} else {\n\n\t\t\tvar val:any = read_func.apply(this._newBlockBytes);//read_func();\n\t\t\treturn val;\n\t\t}\n\t}\n\n\t// Helper - functions\n\tpublic getUVForVertexAnimation(meshID:number /*uint*/):Array<Array<number>>\n\t{\n\t\tif (this._blocks[meshID].data instanceof Mesh)\n\t\t\tmeshID = this._blocks[meshID].geoID;\n\t\tif (this._blocks[meshID].uvsForVertexAnimation)\n\t\t\treturn this._blocks[meshID].uvsForVertexAnimation;\n\t\tvar geometry:Geometry = (<Geometry> this._blocks[meshID].data);\n\t\tvar geoCnt:number /*int*/ = 0;\n\t\tvar ud:Array<number>;\n\t\tvar uStride:number /*uint*/;\n\t\tvar uOffs:number /*uint*/;\n\t\tvar numPoints:number /*uint*/;\n\t\tvar i:number /*int*/;\n\t\tvar newUvs:Array<number>;\n\t\tvar sub_geom:TriangleSubGeometry;\n\t\tthis._blocks[meshID].uvsForVertexAnimation = new Array<Array<number>>();\n\t\twhile (geoCnt < geometry.subGeometries.length) {\n\t\t\tnewUvs = new Array<number>();\n\t\t\tsub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\n\t\t\tnumPoints = sub_geom.numVertices;\n\t\t\tud = sub_geom.uvs;\n\t\t\tuStride = sub_geom.getStride(TriangleSubGeometry.UV_DATA);\n\t\t\tuOffs = sub_geom.getOffset(TriangleSubGeometry.UV_DATA);\n\t\t\tfor (i = 0; i < numPoints; i++) {\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 0]);\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 1]);\n\t\t\t}\n\t\t\tthis._blocks[meshID].uvsForVertexAnimation.push(newUvs);\n\t\t\tgeoCnt++;\n\t\t}\n\t\treturn this._blocks[meshID].uvsForVertexAnimation;\n\t}\n\n\tpublic parseVarStr():string\n\t{\n\n\t\tvar len:number = this._newBlockBytes.readUnsignedShort();\n\t\treturn this._newBlockBytes.readUTFBytes(len);\n\t}\n\n\tpublic getBlockByID(assetID:number):AWDBlock\n\t{\n\t\treturn this._blocks[assetID];\n\t}\n\tpublic getAssetByID(assetID:number):IAsset\n\t{\n\t\treturn this._blocks[assetID].data;\n\t}\n\tprivate getDefaultAsset(assetType:string):IAsset\n\t{\n\t\tswitch (true) {\n\t\t\tcase (assetType == SingleCubeTexture.assetType):\n\t\t\t\treturn this.getDefaultCubeTexture();\n\t\t\t\tbreak;\n\t\t\tcase (assetType == Single2DTexture.assetType):\n\t\t\t\treturn DefaultMaterialManager.getDefaultTexture();\n\t\t\t\tbreak;\n\t\t\tcase (assetType == MaterialBase.assetType):\n\t\t\t\treturn DefaultMaterialManager.getDefaultMaterial();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getDefaultCubeTexture():IAsset\n\t{\n\t\tif (!this._defaultCubeTexture) {\n\t\t\tvar defaultBitmap:BitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\t\tvar bitmapImageCube = new BitmapImageCube(defaultBitmap.width);\n\n\t\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\t\tbitmapImageCube.draw(i, defaultBitmap);\n\n\n\t\t\tthis._defaultCubeTexture = new SingleCubeTexture(bitmapImageCube);\n\t\t\tthis._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t\t}\n\n\t\treturn <IAsset> this._defaultCubeTexture;\n\t}\n\n\tpublic  readNumber(precision:boolean = false):number\n\t{\n\t\tif (precision)\n\t\t\treturn this._newBlockBytes.readDouble();\n\t\treturn this._newBlockBytes.readFloat();\n\n\t}\n\n\tpublic parseMatrix3D():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\n\t}\n\n\tprivate parseMatrix32RawData():Array<number>\n\t{\n\t\tvar i:number;\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\n\t\tfor (i = 0; i < 6; i++) {\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\n\t\t}\n\n\t\treturn mtx_raw;\n\t}\n\n\tpublic parseMatrix43RawData():Array<number>\n\t{\n\t\tvar mtx_raw:Array<number> = new Array<number>(16);\n\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[3] = 0.0;\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[7] = 0.0;\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[11] = 0.0;\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[15] = 1.0;\n\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\n\n\t\tif (isNaN(mtx_raw[0])) {\n\t\t\tmtx_raw[0] = 1;\n\t\t\tmtx_raw[1] = 0;\n\t\t\tmtx_raw[2] = 0;\n\t\t\tmtx_raw[4] = 0;\n\t\t\tmtx_raw[5] = 1;\n\t\t\tmtx_raw[6] = 0;\n\t\t\tmtx_raw[8] = 0;\n\t\t\tmtx_raw[9] = 0;\n\t\t\tmtx_raw[10] = 1;\n\t\t\tmtx_raw[12] = 0;\n\t\t\tmtx_raw[13] = 0;\n\t\t\tmtx_raw[14] = 0;\n\n\t\t}\n\n\t\treturn mtx_raw;\n\t}\n\n}\n\nexport = AWD3FileData;\n\n\n\n",
    "\nclass AWD3Utils {\n\tpublic static BLOCKSTATE_FINALIZE:number = 0;\n\tpublic static BLOCKSTATE_INVALID:number = 1;\n\tpublic static BLOCKSTATE_LOAD_DEPENDENICES:number = 2;\n\tpublic static BLOCKSTATE_NO_ASSET:number = 3;\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\n\tpublic static UNCOMPRESSED:number = 0;\n\tpublic static DEFLATE:number = 1;\n\tpublic static LZMA:number = 2;\n\tpublic static INT8:number = 1;\n\tpublic static INT16:number = 2;\n\tpublic static INT32:number = 3;\n\tpublic static UINT8:number = 4;\n\tpublic static UINT16:number = 5;\n\tpublic static UINT32:number = 6;\n\tpublic static FLOAT32:number = 7;\n\tpublic static FLOAT64:number = 8;\n\tpublic static BOOL:number = 21;\n\tpublic static COLOR:number = 22;\n\tpublic static BADDR:number = 23;\n\tpublic static AWDSTRING:number = 31;\n\tpublic static AWDBYTEARRAY:number = 32;\n\tpublic static VECTOR2x1:number = 41;\n\tpublic static VECTOR3x1:number = 42;\n\tpublic static VECTOR4x1:number = 43;\n\tpublic static MTX3x2:number = 44;\n\tpublic static MTX3x3:number = 45;\n\tpublic static MTX4x3:number = 46;\n\tpublic static MTX4x4:number = 47;\n}\nexport = AWD3Utils;",
    "\n/**\n *\n */\nclass AWDBitFlags\n{\n\tpublic static FLAG1:number = 1;\n\tpublic static FLAG2:number = 2;\n\tpublic static FLAG3:number = 4;\n\tpublic static FLAG4:number = 8;\n\tpublic static FLAG5:number = 16;\n\tpublic static FLAG6:number = 32;\n\tpublic static FLAG7:number = 64;\n\tpublic static FLAG8:number = 128;\n\tpublic static FLAG9:number = 256;\n\tpublic static FLAG10:number = 512;\n\tpublic static FLAG11:number = 1024;\n\tpublic static FLAG12:number = 2048;\n\tpublic static FLAG13:number = 4096;\n\tpublic static FLAG14:number = 8192;\n\tpublic static FLAG15:number = 16384;\n\tpublic static FLAG16:number = 32768;\n\n\tpublic static test(flags:number, testFlag:number):boolean\n\t{\n\t\treturn (flags & testFlag) == testFlag;\n\t}\n}\nexport = AWDBitFlags;",
    "import ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\nclass AWDBlock\n{\n\tpublic id:number;\n\tpublic name:string;\n\tpublic type:number;\n\tpublic data:any;\n\tpublic dependencies_data:Array<ByteArray>;\n\tpublic dependencies_urls:Array<string>;\n\tpublic loaded_dependencies:Array<any>;\n\tpublic loaded_dependencies_cnt:number;\n\tpublic len:number;\n\tpublic geoID:number;\n\tpublic state:number;\n\tpublic extras:Object;\n\tpublic bytes:ByteArray;\n\tpublic errorMessages:Array<string>;\n\tpublic uvsForVertexAnimation:Array<Array<number>>;\n\n\tconstructor(this_id:number, this_type:number)\n\t{\n\t\tthis.type=this_type;\n\t\tthis.id=this_id;\n\t\tthis.state = AWD3Utils.BLOCKSTATE_FINALIZE;\n\t\tthis.dependencies_data=Array<any>();\n\t\tthis.dependencies_urls=Array<string>();\n\t\tif(this_type==83){\n\t\t\tthis.loaded_dependencies=Array<any>(6);\n\t\t}\n\t\tthis.loaded_dependencies_cnt=0;\n\t}\n\n\tpublic dispose()\n\t{\n\n\t\tthis.id = null;\n\t\tthis.bytes = null;\n\t\tthis.errorMessages = null;\n\t\tthis.uvsForVertexAnimation = null;\n\n\t}\n\n\tpublic addError(errorMsg:string):void\n\t{\n\t\tif (!this.errorMessages)\n\t\t\tthis.errorMessages = new Array<string>();\n\n\t\tthis.errorMessages.push(errorMsg);\n\t}\n}\nexport = AWDBlock;",
    "\nclass AWDProperties\n{\n\tpublic set(key:number, value:any):void\n\t{\n\t\tthis[ key.toString() ] = value;\n\t}\n\n\tpublic get(key:number, fallback:any):any\n\t{\n\t\tif (this.hasOwnProperty(key.toString())) {\n\t\t\treturn this[key.toString()];\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n}\nexport = AWDProperties;",
    "import BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\n\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\n\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\n\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\n\n\n\nimport AWDBitFlags\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport AWDAssetParsers\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers\");\nimport AWDBlock\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\nimport AWD3FileData\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\n\n/**\n * AWD3Utils provides a parser for the AWD data type.\n */\nclass AWD3Parser extends ParserBase\n{\n\t//set to \"true\" to have some console.logs in the Console\n\tprivate _debug:boolean = false;\n\tprivate _byteData:ByteArray;\n\tprivate _startedParsing:boolean = false;\n\tprivate _compression:number;\n\tprivate _streaming:boolean;\n\tprivate _parsed_header:boolean = false;\n\tprivate _body:ByteArray;\n\tprivate _awd_data:AWD3FileData;\n\tprivate _block_parser:AWDAssetParsers;\n\n\t// temp for checking stats\n\tpublic total_time:number = 0;\n\tpublic geom_time:number = 0;\n\tpublic timeline_time:number = 0;\n\n\t/**\n\t * Creates a new AWD3Utils object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(block_parser:AWDAssetParsers = undefined)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\n\t\tthis._block_parser=block_parser;\n\t\tif(this._block_parser==undefined){\n\t\t\tthis._block_parser=new AWDAssetParsers();\n\t\t}\n\t\tthis._awd_data=new AWD3FileData();\n\t\tthis._block_parser.init_parser(this._awd_data);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"awd\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\t// this will be called when Dependency has finished loading.\n\t\t// the ressource dependecniy has a id that point to the awd_block waiting for it.\n\t\tif (resourceDependency.assets.length == 1) {\n\t\t\tvar this_block:AWDBlock = this._awd_data.getBlockByID(parseInt(resourceDependency.id));\n\t\t\tif(this_block.type==82){\n\t\t\t\tvar testure_asset:Single2DTexture = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\n\t\t\t\tthis_block.data = testure_asset; // Store finished asset\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\n\t\t\t\t// previously suppressed while the dependency was loaded.\n\t\t\t\tthis._pFinalizeAsset(<IAsset> testure_asset, this_block.name);\n\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap for texture\");\n\t\t\t\t\tconsole.log(\"Parsed texture: Name = \" + this_block.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(this_block.type==44){\n\t\t\t\t// todo: implement parsing of Audio block data\n\t\t\t\t/*asset = <Single2DTexture> resourceDependency.assets[0];\n\t\t\t\tthis_block.data = asset; // Store finished asset\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\n\t\t\t\t// previously suppressed while the dependency was loaded.\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this_block.name);\n\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap for texture\");\n\t\t\t\t\tconsole.log(\"Parsed texture: Name = \" + this_block.name);\n\t\t\t\t}*/\n\t\t\t}\n\t\t\telse if(this_block.type==83){\n\t\t\t\tthis_block.loaded_dependencies[resourceDependency.sub_id]= resourceDependency.assets[0];\n\t\t\t\tthis_block.loaded_dependencies_cnt++;\n\t\t\t\tif(this_block.loaded_dependencies_cnt==6){\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + resourceDependency.sub_id + \" / 6 for Cubetexture\");\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cube_image_asset = new BitmapImageCube(this_block.loaded_dependencies[0].width);\n\n\t\t\t\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\t\t\t\tcube_image_asset.draw(i, this_block.loaded_dependencies[i]);\n\n\n\t\t\t\t\tvar cube_tex_asset = new SingleCubeTexture(cube_image_asset);\n\t\t\t\t\tthis_block.data = cube_tex_asset; // Store finished asset\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> cube_tex_asset, this_block.name);\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + this_block.name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\t//\tnot used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\n\t\t// \tthis means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\tvar oldName:string = asset.name;\n\n\t\tif (asset) {\n\t\t\tvar block:AWDBlock = this._awd_data.getBlockByID(parseInt(resourceDependency.id));\n\t\t\t// Reset name of texture to the one defined in the AWD file,\n\t\t\t// as opposed to whatever the image parser came up with.\n\t\t\tasset.resetAssetPath(block.name, null, true);\n\t\t}\n\n\t\tvar newName:string = asset.name;\n\n\t\tasset.name = oldName;\n\n\t\treturn newName;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\tif (!this._parsed_header) {\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Parse header and decompress body if needed\n\t\t\tthis.parseHeader();\n\n\t\t\tswitch (this._compression) {\n\n\t\t\t\tcase AWD3Utils.DEFLATE:\n\t\t\t\tcase AWD3Utils.LZMA:\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AWD3Utils.UNCOMPRESSED:\n\t\t\t\t\tthis._body = this._byteData;\n\t\t\t\t\tbreak;\n\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t// Compressed AWD Formats not yet supported\n\t\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t\t/*\n\t\t\t\t case AWD3Parserutils.DEFLATE:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress();\n\n\t\t\t\t break;\n\t\t\t\t case AWD3Parserutils.LZMA:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\n\n\t\t\t\t break;\n\t\t\t\t //*/\n\n\t\t\t}\n\n\t\t\tthis._parsed_header = true;\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t}\n\n\t\tif (this._body) {\n\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\n\t\t\t{\n\t\t\t\tthis.parseNextBlock();\n\n\t\t\t}\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Return complete status\n\t\t\tif (this._body.getBytesAvailable() == 0) {\n\t\t\t\tthis.dispose();\n\t\t\t\treturn  ParserBase.PARSING_DONE;\n\t\t\t} else {\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} else {\n\n\t\t\tswitch (this._compression) {\n\n\t\t\t\tcase AWD3Utils.DEFLATE:\n\t\t\t\tcase AWD3Utils.LZMA:\n\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"(!) AWD3Utils Error: Compressed AWD formats not yet supported (!)\");\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t\t// Error - most likely _body not set because we do not support compression.\n\t\t\treturn  ParserBase.PARSING_DONE;\n\n\t\t}\n\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\tprivate dispose():void\n\t{\n\t\tthis._awd_data.dispose();\n\t}\n\n\tprivate parseNextBlock():void\n\t{\n\t\tvar block_id:number = this._body.readUnsignedInt();\n\n\t\tvar ns:number = this._body.readUnsignedByte();\n\t\tvar block_type:number = this._body.readUnsignedByte();\n\t\tvar flags:number = this._body.readUnsignedByte();\n\t\tvar len:number = this._body.readUnsignedInt();\n\n\t\tvar blockCompression:boolean = AWDBitFlags.test(flags, AWDBitFlags.FLAG4);\n\t\tvar blockCompressionLZMA:boolean = AWDBitFlags.test(flags, AWDBitFlags.FLAG5);\n\n\t\tif (this._awd_data.accuracyOnBlocks) {\n\t\t\tthis._awd_data.accuracyMatrix = AWDBitFlags.test(flags, AWDBitFlags.FLAG1);\n\t\t\tthis._awd_data.accuracyGeo = AWDBitFlags.test(flags, AWDBitFlags.FLAG2);\n\t\t\tthis._awd_data.accuracyProps = AWDBitFlags.test(flags, AWDBitFlags.FLAG3);\n\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT32;\n\n\t\t\tif (this._awd_data.accuracyGeo) {\n\t\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT64;\n\t\t\t}\n\n\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT32;\n\n\t\t\tif (this._awd_data.accuracyMatrix) {\n\t\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT64;\n\t\t\t}\n\n\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT32;\n\n\t\t\tif (this._awd_data.accuracyProps) {\n\t\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT64;\n\t\t\t}\n\t\t}\n\n\t\tvar blockEndAll:number = this._body.position + len;\n\n\t\tif (len > this._body.getBytesAvailable()) {\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\n\t\t\tthis._body.position += this._body.getBytesAvailable();\n\t\t\treturn;\n\t\t}\n\n\t\tvar newBlockBytes:ByteArray = new ByteArray();\n\t\tthis._body.readBytes(newBlockBytes, 0, len);\n\t\tthis._awd_data.newBlockBytes = newBlockBytes;\n\n\t\t//----------------------------------------------------------------------------\n\t\t// Compressed AWD Formats not yet supported\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\n\t\t\t/*\n\t\t\t if (blockCompressionLZMA)\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress(AWD3Parserutils.COMPRESSIONMODE_LZMA);\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress();\n\t\t\t }\n\t\t\t */\n\n\t\t}\n\n\t\t//----------------------------------------------------------------------------\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t//----------------------------------------------------------------------------\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\n\t\t//----------------------------------------------------------------------------\n\n\t\tthis._awd_data.newBlockBytes.position = 0;\n\n\t\t// we create AWDBlock for all exept the metadata. the metadata block has is the first awdblock in the list by default.\n\t\t//if(block_type!=255)\n\t\tthis._awd_data.create_new_block(block_type, block_id);\n\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\n\t\t\t//block.len       = blockEndBlock;\n\t\t}\n\n\t\t//if (this._debug) {\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + block_id + \" | TypeID = \" + block_type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._awd_data.accuracyMatrix + \" | Geometry-Precision = \" + this._awd_data.accuracyGeo + \" | Properties-Precision = \" + this._awd_data.accuracyProps);\n\t\t//}\n\n\t\tvar time_start = performance.now();\n\n\t\t// first check if the block is any of the 3 blocks that does not produce a asset.\n\t\t\t// this block contains a asset.\n\t\tif(this._block_parser.parseAsset(block_type)){\n\t\t\tif(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_FINALIZE){\n\t\t\t\tthis._pFinalizeAsset(<IAsset>this._awd_data.cur_block.data, this._awd_data.cur_block.name);\n\t\t\t\tif(this._awd_data.cur_block.data instanceof DisplayObject){\n\t\t\t\t\tif((<DisplayObjectContainer> this._awd_data.cur_block.data).parent==undefined){\n\t\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild((<DisplayObjectContainer> this._awd_data.cur_block.data));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_INVALID){\n\t\t\t\tconsole.log(\"ERROR while parsing block - type = \", block_type, \" id = \", block_id);\n\t\t\t}\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES){\n\t\t\t\t// trigger No asset created yet, because the block has dependencies. load the dependencies:.\n\t\t\t\tfor(var r:number=0; r<this._awd_data.cur_block.dependencies_urls.length;r++){\n\t\t\t\t\t// load dependencies by url. let the parser system decide how to parse it\n\t\t\t\t\tthis._pAddDependency(this._awd_data.cur_block.id.toString(), new URLRequest(this._awd_data.cur_block.dependencies_urls[r]), false, null, true, r);\n\t\t\t\t}\n\t\t\t\tfor(var r:number=0; r<this._awd_data.cur_block.dependencies_data.length;r++) {\n\t\t\t\t\t// load dependencies from data. need to prepare the data based on block_type (image vs audio).\n\t\t\t\t\tif ((block_type == 82) || (block_type == 83)) {\n\t\t\t\t\t\tthis._pAddDependency(this._awd_data.cur_block.id.toString(), null, false, ParserUtils.byteArrayToImage(this._awd_data.cur_block.dependencies_data[r]), true, r);\n\t\t\t\t\t}\n\t\t\t\t\telse if (block_type == 44) {\n\t\t\t\t\t\t// todo: parse audio data\n\t\t\t\t\t\t// this._pAddDependency(this._awd_data.cur_block.id.toString(), null, false, this._awd_data.cur_block.dependencies_data[r], true, r);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t}\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_NO_ASSET){\n\t\t\t\t// this block does not produce any asset (metadata, namespace, command)\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.log(\"Encountered unknown blocktype - type = \", block_type, \" id = \", block_id);\n\t\t}\n\n\t\tvar time_end = performance.now();\n\t\tvar thisTime:number=time_end-time_start;\n\t\tthis.total_time+=thisTime;\n\t\tif(block_type==1){\n\t\t\tthis.geom_time+=thisTime;\n\t\t}\n\t\telse if(block_type==133){\n\t\t\tthis.timeline_time+=thisTime;\n\t\t}\n\t\tconsole.log(\"'parsed '\"+block_type+\"'  block in \"+thisTime+ \" ms\", \" total: \",this.total_time,\" geom: \",this.geom_time,\"timelines:\",this.timeline_time);\n\n\t\tthis._body.position = blockEndAll;\n\t\tthis._awd_data.newBlockBytes = null;\n\n\t}\n\n\n\n\n\tprivate parseHeader():void\n\t{\n\t\tvar flags:number;\n\t\tvar body_len:number;\n\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\n\n\t\tthis._awd_data.major_version = this._byteData.readUnsignedByte();\n\t\tthis._awd_data.minor_version = this._byteData.readUnsignedByte();\n\n\t\tflags = this._byteData.readUnsignedShort(); // Parse bit flags\n\n\t\tthis._streaming = AWDBitFlags.test(flags, AWDBitFlags.FLAG1);\n\n\t\tif ((this._awd_data.major_version == 2) && (this._awd_data.minor_version == 1)) {\n\t\t\tthis._awd_data.accuracyMatrix = AWDBitFlags.test(flags, AWDBitFlags.FLAG2);\n\t\t\tthis._awd_data.accuracyGeo = AWDBitFlags.test(flags, AWDBitFlags.FLAG3);\n\t\t\tthis._awd_data.accuracyProps = AWDBitFlags.test(flags, AWDBitFlags.FLAG4);\n\t\t}\n\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\n\n\t\t// set storagePrecision types\n\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT32;\n\n\t\tif (this._awd_data.accuracyGeo) {\n\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT64;\n\t\t}\n\n\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT32;\n\n\t\tif (this._awd_data.accuracyMatrix) {\n\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT64;\n\t\t}\n\n\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT32;\n\n\t\tif (this._awd_data.accuracyProps) {\n\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT64;\n\t\t}\n\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._awd_data.major_version + \" - \" + this._awd_data.minor_version );\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._awd_data.accuracyMatrix + \" | Geometry-Precision = \" + this._awd_data.accuracyGeo + \" | Properties-Precision = \" + this._awd_data.accuracyProps);\n\t\t}\n\n\t\t// Check file integrity\n\t\tbody_len = this._byteData.readUnsignedInt();\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable()) {\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\n\t\t}\n\t}\n}\n\nexport = AWD3Parser;\n\n",
    "import BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport TextField\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\n\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\n\nimport CurveMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/CurveMaterial\")\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport TimelineSceneGraphFactory \t= require(\"awayjs-player/lib/factories/TimelineSceneGraphFactory\");\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\nimport MovieClip \t\t\t\t\t= require(\"awayjs-player/lib/display/MovieClip\");\nimport TimelineKeyFrame \t\t\t= require(\"awayjs-player/lib/timeline/TimelineKeyFrame\");\nimport AddChildCommand \t\t\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildCommand\");\nimport AddChildAtDepthCommand\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildAtDepthCommand\");\nimport ApplyAS2DepthsCommand\t\t= require(\"awayjs-player/lib/timeline/commands/ApplyAS2DepthsCommand\");\nimport ExecuteScriptCommand \t\t= require(\"awayjs-player/lib/timeline/commands/ExecuteScriptCommand\");\nimport RemoveChildCommand \t\t\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildCommand\");\nimport RemoveChildrenAtDepthCommand\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildrenAtDepthCommand\");\nimport SetInstanceNameCommand \t\t= require(\"awayjs-player/lib/timeline/commands/SetInstanceNameCommand\");\nimport UpdatePropertyCommand \t\t= require(\"awayjs-player/lib/timeline/commands/UpdatePropertyCommand\");\nimport SetMaskCommand \t\t        = require(\"awayjs-player/lib/timeline/commands/SetMaskCommand\");\n\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport TextFormat\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextFieldType\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\n\n/**\n * AWDParser provides a parser for the AWD data type.\n */\nclass AWDParser extends ParserBase\n{\n\t//set to \"true\" to have some console.logs in the Console\n\tprivate _debug:boolean = false;\n\tprivate _byteData:ByteArray;\n\tprivate _startedParsing:boolean = false;\n\tprivate _cur_block_id:number;\n\tprivate _blocks:Array<AWDBlock>;\n\tprivate _newBlockBytes:ByteArray;\n\tprivate _version:Array<number>;\n\tprivate _compression:number;\n\tprivate _accuracyOnBlocks:boolean;\n\tprivate _accuracyMatrix:boolean;\n\tprivate _accuracyGeo:boolean;\n\tprivate _accuracyProps:boolean;\n\tprivate _matrixNrType:number;\n\tprivate _geoNrType:number;\n\tprivate _propsNrType:number;\n\tprivate _streaming:boolean;\n\tprivate _texture_users:Object = {};\n\tprivate _parsed_header:boolean = false;\n\tprivate _body:ByteArray;\n\tprivate _defaultTexture:Single2DTexture;     // HTML IMAGE TEXTURE >? !\n\tprivate _cubeBitmaps:Array<BitmapImage2D>;\n\tprivate _defaultBitmapMaterial:MethodMaterial;\n\tprivate _defaultCubeTexture:SingleCubeTexture;\n\n\n\t// temp for checking stats\n\tpublic total_time:number = 0;\n\tpublic geom_time:number = 0;\n\tpublic timeline_time:number = 0;\n\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\n\tpublic static UNCOMPRESSED:number = 0;\n\tpublic static DEFLATE:number = 1;\n\tpublic static LZMA:number = 2;\n\tpublic static INT8:number = 1;\n\tpublic static INT16:number = 2;\n\tpublic static INT32:number = 3;\n\tpublic static UINT8:number = 4;\n\tpublic static UINT16:number = 5;\n\tpublic static UINT32:number = 6;\n\tpublic static FLOAT32:number = 7;\n\tpublic static FLOAT64:number = 8;\n\tpublic static BOOL:number = 21;\n\tpublic static COLOR:number = 22;\n\tpublic static BADDR:number = 23;\n\tpublic static AWDSTRING:number = 31;\n\tpublic static AWDBYTEARRAY:number = 32;\n\tpublic static VECTOR2x1:number = 41;\n\tpublic static VECTOR3x1:number = 42;\n\tpublic static VECTOR4x1:number = 43;\n\tpublic static MTX3x2:number = 44;\n\tpublic static MTX3x3:number = 45;\n\tpublic static MTX4x3:number = 46;\n\tpublic static MTX4x4:number = 47;\n\n\tprivate blendModeDic:Array<string>;\n\tprivate _depthSizeDic:Array<number>;\n\tprivate _allFontTables:Array<TesselatedFontTable>;\n\n\t/**\n\t * Creates a new AWD3Parserutils object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\n\t\tthis._blocks = new Array<AWDBlock>();\n\t\tthis._blocks[0] = new AWDBlock();\n\t\tthis._blocks[0].data = null; // Zero address means null in AWD\n\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.ADD);\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\n\t\tthis._depthSizeDic.push(256);\n\t\tthis._depthSizeDic.push(512);\n\t\tthis._depthSizeDic.push(2048);\n\t\tthis._depthSizeDic.push(1024);\n\t\tthis._version = Array<number>(); // will contain 2 int (major-version, minor-version) for awd-version-check\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"awd\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\t// this will be called when Dependency has finished loading.\n\t\t// the Assets waiting for this Bitmap, can be Texture or CubeTexture.\n\t\t// if the Bitmap is awaited by a CubeTexture, we need to check if its the last Bitmap of the CubeTexture,\n\t\t// so we know if we have to finalize the Asset (CubeTexture) or not.\n\t\tif (resourceDependency.assets.length == 1) {\n\t\t\tvar isCubeTextureArray:Array<string> = resourceDependency.id.split(\"#\");\n\t\t\tvar ressourceID:string = isCubeTextureArray[0];\n\t\t\tvar asset:TextureBase;\n\t\t\tvar block:AWDBlock;\n\n\t\t\tif (isCubeTextureArray.length == 1) // Not a cube texture\n\t\t\t{\n\t\t\t\tasset = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\n\t\t\t\tif (asset) {\n\n\t\t\t\t\tblock = this._blocks[ resourceDependency.id ];\n\t\t\t\t\tblock.data = asset; // Store finished asset\n\n\t\t\t\t\t// Reset name of texture to the one defined in the AWD file,\n\t\t\t\t\t// as opposed to whatever the image parser came up with.\n\t\t\t\t\tasset.resetAssetPath(block.name, null, true);\n\t\t\t\t\tblock.name = asset.name;\n\t\t\t\t\t// Finalize texture asset to dispatch texture event, which was\n\t\t\t\t\t// previously suppressed while the dependency was loaded.\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> asset);\n\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap for texture\");\n\t\t\t\t\t\tconsole.log(\"Parsed texture: Name = \" + block.name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isCubeTextureArray.length > 1) // Cube Texture\n\t\t\t{\n\t\t\t\tthis._cubeBitmaps[ isCubeTextureArray[1] ] = <BitmapImage2D> resourceDependency.assets[0];\n\t\t\t\tthis._texture_users[ressourceID].push(1);\n\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + this._texture_users[ressourceID].length + \" / 6 for Cubetexture\");\n\t\t\t\t}\n\t\t\t\tif (this._texture_users[ressourceID].length == this._cubeBitmaps.length) {\n\n\t\t\t\t\tvar cube_image_asset = new BitmapImageCube(this._cubeBitmaps[0].width);\n\n\t\t\t\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\t\t\t\tcube_image_asset.draw(i, this._cubeBitmaps[i]);\n\n\t\t\t\t\tasset = new SingleCubeTexture(cube_image_asset);\n\t\t\t\t\tblock = this._blocks[ressourceID];\n\t\t\t\t\tblock.data = asset; // Store finished asset\n\n\t\t\t\t\t// Reset name of texture to the one defined in the AWD file,\n\t\t\t\t\t// as opposed to whatever the image parser came up with.\n\t\t\t\t\tasset.resetAssetPath(block.name, null, true);\n\t\t\t\t\tblock.name = asset.name;\n\t\t\t\t\t// Finalize texture asset to dispatch texture event, which was\n\t\t\t\t\t// previously suppressed while the dependency was loaded.\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> asset);\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + block.name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\t//not used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\n\t\t// this means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\tvar oldName:string = asset.name;\n\n\t\tif (asset) {\n\t\t\tvar block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\n\t\t\t// Reset name of texture to the one defined in the AWD file,\n\t\t\t// as opposed to whatever the image parser came up with.\n\t\t\tasset.resetAssetPath(block.name, null, true);\n\t\t}\n\n\t\tvar newName:string = asset.name;\n\n\t\tasset.name = oldName;\n\n\t\treturn newName;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\tif (!this._parsed_header) {\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Parse header and decompress body if needed\n\t\t\tthis.parseHeader();\n\n\t\t\tswitch (this._compression) {\n\n\t\t\t\tcase AWDParser.DEFLATE:\n\t\t\t\tcase AWDParser.LZMA:\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AWDParser.UNCOMPRESSED:\n\t\t\t\t\tthis._body = this._byteData;\n\t\t\t\t\tbreak;\n\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t// Compressed AWD Formats not yet supported\n\t\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t\t/*\n\t\t\t\t case AWD3Parserutils.DEFLATE:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress();\n\n\t\t\t\t break;\n\t\t\t\t case AWD3Parserutils.LZMA:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\n\n\t\t\t\t break;\n\t\t\t\t //*/\n\n\t\t\t}\n\n\t\t\tthis._parsed_header = true;\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t}\n\n\t\tif (this._body) {\n\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\n\t\t\t{\n\t\t\t\tthis.parseNextBlock();\n\n\t\t\t}\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Return complete status\n\t\t\tif (this._body.getBytesAvailable() == 0) {\n\t\t\t\tthis.dispose();\n\t\t\t\treturn  ParserBase.PARSING_DONE;\n\t\t\t} else {\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} else {\n\n\t\t\tswitch (this._compression) {\n\n\t\t\t\tcase AWDParser.DEFLATE:\n\t\t\t\tcase AWDParser.LZMA:\n\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"(!) AWDParser Error: Compressed AWD formats not yet supported (!)\");\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t\t// Error - most likely _body not set because we do not support compression.\n\t\t\treturn  ParserBase.PARSING_DONE;\n\n\t\t}\n\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\tprivate dispose():void\n\t{\n\n\t\tfor (var c in this._blocks) {\n\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[ c ];\n\t\t\tb.dispose();\n\n\t\t}\n\n\t}\n\n\tprivate parseNextBlock():void\n\t{\n\t\tvar block:AWDBlock;\n\t\tvar assetData:IAsset;\n\t\tvar isParsed:boolean = false;\n\t\tvar ns:number;\n\t\tvar type:number;\n\t\tvar flags:number;\n\t\tvar len:number;\n\n\t\tthis._cur_block_id = this._body.readUnsignedInt();\n\n\t\tns = this._body.readUnsignedByte();\n\t\ttype = this._body.readUnsignedByte();\n\t\tflags = this._body.readUnsignedByte();\n\t\tlen = this._body.readUnsignedInt();\n\n\t\tvar blockCompression:boolean = BitFlags.test(flags, BitFlags.FLAG4);\n\t\tvar blockCompressionLZMA:boolean = BitFlags.test(flags, BitFlags.FLAG5);\n\n\t\tif (this._accuracyOnBlocks) {\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG1);\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG2);\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG3);\n\t\t\tthis._geoNrType = AWDParser.FLOAT32;\n\n\t\t\tif (this._accuracyGeo) {\n\t\t\t\tthis._geoNrType = AWDParser.FLOAT64;\n\t\t\t}\n\n\t\t\tthis._matrixNrType = AWDParser.FLOAT32;\n\n\t\t\tif (this._accuracyMatrix) {\n\t\t\t\tthis._matrixNrType = AWDParser.FLOAT64;\n\t\t\t}\n\n\t\t\tthis._propsNrType = AWDParser.FLOAT32;\n\n\t\t\tif (this._accuracyProps) {\n\t\t\t\tthis._propsNrType = AWDParser.FLOAT64;\n\t\t\t}\n\t\t}\n\n\t\tvar blockEndAll:number = this._body.position + len;\n\n\t\tif (len > this._body.getBytesAvailable()) {\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\n\t\t\tthis._body.position += this._body.getBytesAvailable();\n\t\t\treturn;\n\t\t}\n\t\tthis._newBlockBytes = new ByteArray();\n\n\n\t\tthis._body.readBytes(this._newBlockBytes, 0, len);\n\n\t\t//----------------------------------------------------------------------------\n\t\t// Compressed AWD Formats not yet supported\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\n\t\t\t/*\n\t\t\t if (blockCompressionLZMA)\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress(AWD3Parserutils.COMPRESSIONMODE_LZMA);\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress();\n\t\t\t }\n\t\t\t */\n\n\t\t}\n\n\t\t//----------------------------------------------------------------------------\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t//----------------------------------------------------------------------------\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\n\t\t//----------------------------------------------------------------------------\n\n\t\tthis._newBlockBytes.position = 0;\n\t\tblock = new AWDBlock();\n\t\tblock.len = this._newBlockBytes.position + len;\n\t\tblock.id = this._cur_block_id;\n\n\t\tvar blockEndBlock:number = this._newBlockBytes.position + len;\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\n\t\t\t//block.len       = blockEndBlock;\n\t\t}\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + this._cur_block_id + \" | TypeID = \" + type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\n\t\t}\n\n\t\tthis._blocks[this._cur_block_id] = block;\n\n\t\t//var time_start = performance.now();\n\t\tif ((this._version[0] == 3) && (this._version[1] == 0)) {\n\t\t\t// probably should contain some info about the type of animation\n\t\t\tvar factory = new AS2SceneGraphFactory();\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 24:\n\t\t\t\t\tthis.parseMeshLibraryBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 25:\n\t\t\t\t\tthis.parseBillBoardLibraryBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 44:\n\t\t\t\t\tthis.parseAudioBlock(this._cur_block_id, factory);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 133:\n\t\t\t\t\tthis.parseTimeLine(this._cur_block_id, factory);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 134:\n\t\t\t\t\tthis.paresTextField(this._cur_block_id, factory);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 135:\n\t\t\t\t\tthis.parseTesselatedFont(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 136:\n\t\t\t\t\tthis.parseTextFormat(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ((this._version[0] > 2)||((this._version[0] >= 2) && (this._version[1] >= 1))) {\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 11:\n\t\t\t\t\tthis.parsePrimitves(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 31:\n\t\t\t\t\tthis.parseSkyboxInstance(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 41:\n\t\t\t\t\tthis.parseLight(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 42:\n\t\t\t\t\tthis.parseCamera(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t//  case 43:\n\t\t\t\t//      parseTextureProjector(_cur_block_id);\n\t\t\t\t//      isParsed = true;\n\t\t\t\t//      break;\n\n\t\t\t\tcase 51:\n\t\t\t\t\tthis.parseLightPicker(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 81:\n\t\t\t\t\tthis.parseMaterial_v1(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 83:\n\t\t\t\t\tthis.parseCubeTexture(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 91:\n\t\t\t\t\tthis.parseSharedMethodBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 92:\n\t\t\t\t\tthis.parseShadowMethodBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 111:\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id, true);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 112:\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 113:\n\t\t\t\t\tthis.parseVertexAnimationSet(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 122:\n\t\t\t\t\tthis.parseAnimatorSet(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 253:\n\t\t\t\t\tthis.parseCommand(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t//*/\n\t\t}\n\t\t//*\n\t\tif (isParsed == false) {\n\t\t\tswitch (type) {\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.parseTriangleGeometrieBlock(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 22:\n\t\t\t\t\tthis.parseContainer(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 23:\n\t\t\t\t\tthis.parseMeshInstance(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 81:\n\t\t\t\t\tthis.parseMaterial(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 82:\n\t\t\t\t\tthis.parseTexture(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 101:\n\t\t\t\t\tthis.parseSkeleton(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 102:\n\t\t\t\t\tthis.parseSkeletonPose(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 103:\n\t\t\t\t\tthis.parseSkeletonAnimation(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 121:\n\t\t\t\t//this.parseUVAnimation(this._cur_block_id);\n\t\t\t\t//break;\n\t\t\t\tcase 254:\n\t\t\t\t\tthis.parseNameSpace(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 255:\n\t\t\t\t\tthis.parseMetaData(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"AWDBlock:   Unknown BlockType  (BlockID = \" + this._cur_block_id + \") - Skip \" + len + \" bytes\");\n\t\t\t\t\t}\n\t\t\t\t\tthis._newBlockBytes.position += len;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t//*/\n\n\t\tvar msgCnt:number = 0;\n\t\tif (this._newBlockBytes.position == blockEndBlock) {\n\t\t\tif (this._debug) {\n\t\t\t\tif (block.errorMessages) {\n\t\t\t\t\twhile (msgCnt < block.errorMessages.length) {\n\t\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\n\t\t\t\t\t\tmsgCnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._debug) {\n\t\t\t\tconsole.log(\"\\n\");\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._debug) {\n\n\t\t\t\tconsole.log(\"  (!)(!)(!) Error while reading AWDBlock ID \" + this._cur_block_id + \" = skip to next block\");\n\n\t\t\t\tif (block.errorMessages) {\n\t\t\t\t\twhile (msgCnt < block.errorMessages.length) {\n\t\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\n\t\t\t\t\t\tmsgCnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n/*\n\t\tvar time_end = performance.now();\n\t\tvar thisTime:number=time_end-time_start;\n\t\tthis.total_time+=thisTime;\n\t\tif(type==1){\n\t\t\tthis.geom_time+=thisTime;\n\t\t}\n\t\telse if(type==133){\n\t\t\tthis.timeline_time+=thisTime;\n\t\t}\n\t\tconsole.log(\"'parsed '\"+type+\"'  block in \"+thisTime+ \" ms\", \" total: \",this.total_time,\" geom: \",this.geom_time,\"timelines:\",this.timeline_time);\n*/\n\t\tthis._body.position = blockEndAll;\n\t\tthis._newBlockBytes = null;\n\n\t}\n\n\n\t//--Parser Blocks---------------------------------------------------------------------------\n\n\n\tprivate parseTesselatedFont(blockID:number):void {\n\t\tvar name:string = this.parseVarStr();\n\t\tthis._blocks[blockID].name = name;\n\t\t//console.log(\"Font name = \"+this._blocks[blockID].name);\n\t\tvar font_style_cnt:number = this._newBlockBytes.readUnsignedInt();\n\t\t//console.log(\"Font font_style_cnt = \"+font_style_cnt);\n\t\tvar new_font:Font=new Font();\n\t\tfor (var i:number = 0; i < font_style_cnt; ++i) {\n\t\t\tvar font_style_name:string = this.parseVarStr();\n\t\t\t//console.log(\"Font font_style_name = \"+font_style_name);\n\t\t\tvar new_font_style:TesselatedFontTable=new_font.get_font_table(font_style_name);\n\t\t\tnew_font_style.set_font_em_size(this._newBlockBytes.readUnsignedInt());\n\t\t\t//console.log(\"Font new_font_style.font_em_size = \"+new_font_style.get_font_em_size);\n\t\t\tvar font_style_char_cnt:number = this._newBlockBytes.readUnsignedInt();\n\t\t\t//console.log(\"Font font_style_char_cnt = \"+font_style_char_cnt);\n\t\t\tfor (var i:number = 0; i < font_style_char_cnt; ++i) {\n\n\t\t\t\tvar font_style_char:number = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"Font font_style_char = \"+font_style_char);\n\t\t\t\t// todo: this is basically a simplified version of the subgeom-parsing done in parseTriangleGeometry. Make a parseSubGeom() instead (?)\n\t\t\t\tvar sm_len:number = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tvar sm_end:number = this._newBlockBytes.position + sm_len;\n\t\t\t\t//console.log(\"Font sm_len = \"+sm_len);\n\n\t\t\t\t//this.parseProperties(null); // no properties for font-table subgeos\n\t\t\t\t// Loop through data streams\n\t\t\t\twhile (this._newBlockBytes.position < sm_end) {\n\t\t\t\t\tvar idx:number = 0;\n\t\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\n\n\t\t\t\t\t// Type, field type, length\n\t\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\n\n\t\t\t\t\tif (str_type == 2) {//face indicies positions\n\t\t\t\t\t\tvar indices:Array<number> = new Array<number>();\n\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\t\tindices[idx++] = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\n\t\t\t\t\t\tvar idx_pos:number = 0;\n\t\t\t\t\t\tvar idx_curves:number = 0;\n\t\t\t\t\t\tvar idx_uvs:number = 0;\n\n\t\t\t\t\t\tvar positions:Array<number> = new Array<number>();\n\t\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\n\t\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// x\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// y\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// type\n\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.readNumber(this._accuracyGeo);// curve value 1\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.readNumber(this._accuracyGeo);// curve value 2\n\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.readNumber(this._accuracyGeo);// curve value 1\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.readNumber(this._accuracyGeo);// curve value 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//this.parseProperties(null);// no attributes for font-table subgeos\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\n\t\t\t\tcurve_sub_geom.updateIndices(indices);\n\t\t\t\tcurve_sub_geom.updatePositions(positions);\n\t\t\t\tcurve_sub_geom.updateCurves(curveData);\n\t\t\t\tcurve_sub_geom.updateUVs(uvs);\n\t\t\t\tnew_font_style.set_subgeo_for_char(font_style_char.toString(), curve_sub_geom);\n\t\t\t}\n\t\t\t//console.log(\"Parsed a font-table\");\n\n\t\t}\n\t\t//console.log(\"Parsed a font\");\n\t\tthis.parseProperties(null);\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset>new_font, name);\n\t\tthis._blocks[blockID].data = new_font;\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a font: Name = '\" + name);\n\t\t}\n\n\t}\n\n\tprivate parseTextFormat(blockID:number):void {\n\t\tvar name:string = this.parseVarStr();\n\t\tthis._blocks[blockID].name = name;\n\t\t//console.log(\"this._blocks[blockID].name  '\" + this._blocks[blockID].name );\n\t\tvar font_id:number = this._newBlockBytes.readUnsignedInt();\n\t\t//console.log(\"font_id  '\" + font_id);\n\t\tvar font_style_name:string = this.parseVarStr();\n\t\t//console.log(\"font_style_name  '\" + font_style_name);\n\t\tvar returnArrayFont:Array<any> = this.getAssetByID(font_id, [Font.assetType]);\n\t\tvar font:Font;\n\t\tif (returnArrayFont[0]) {\n\t\t\tfont = <Font> returnArrayFont[1];\n\t\t} else {\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Font for this TextFormat. A empty Font is created!\");\n\t\t\tfont = new Font();\n\t\t}\n\t\tvar newTextFormat:TextFormat = new TextFormat();\n\t\tnewTextFormat.font_name = font.name;\n\t\tvar font_table:TesselatedFontTable = font.get_font_table(font_style_name);\n\t\tif(font_table!=null){\n\t\t\tnewTextFormat.font_style = font_style_name;\n\t\t\tnewTextFormat.font_table = font_table;\n\t\t}\n\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\n\t\t//console.log(\"mat  '\" + data_id);\n\t\tvar mat:BasicMaterial;\n\t\tvar returnedArrayMaterial:Array<any> = this.getAssetByID(data_id, [MaterialBase.assetType]);\n\n\t\tif (returnedArrayMaterial[0]) {\n\t\t\tmat = <BasicMaterial> returnedArrayMaterial[1];\n\t\t} else {\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Material for this TextFormat. Default Material will be used!\");\n\t\t\tmat = new BasicMaterial();\n\t\t}\n\t\tmat.bothSides=true;\n\n\t\tvar num_uv_values:number = this._newBlockBytes.readUnsignedByte();\n\t\t//console.log(\"num_uv_values  '\" + num_uv_values);\n\t\tvar uv_values:Array<number>=[];\n\t\tfor(var uvcnt:number=0; uvcnt<num_uv_values; uvcnt++){\n\t\t\tvar uv_value:number=this._newBlockBytes.readFloat();\n\t\t\tuv_values.push(uv_value);\n\t\t\t//console.log(\"uv_value  '\" + uv_value);\n\t\t}\n\t\tnewTextFormat.uv_values=uv_values;\n\t\tvar format_props:AWDProperties = this.parseProperties({1:AWDParser.UINT16, 2:AWDParser.UINT16, 3:AWDParser.UINT8,4:AWDParser.UINT8,5:AWDParser.UINT8,6:AWDParser.UINT8, 7:AWDParser.UINT16, 8:AWDParser.UINT16, 9:AWDParser.UINT16, 10:AWDParser.UINT16});\n\n\t\tnewTextFormat.size = format_props.get(1,12);\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\n\t\t//newTextFormat.rotated = format_props.get(3,false);\n\t\tnewTextFormat.kerning = format_props.get(4,true);\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\n\t\t//newTextFormat.align = format_props.get(6,0);\n\t\tnewTextFormat.indent = format_props.get(7,0);\n\t\tnewTextFormat.leftMargin = format_props.get(8,0);\n\t\tnewTextFormat.rightMargin = format_props.get(9,0);\n\t\t//newTextFormat.linespacing = format_props.get(10,0);\n\t\tnewTextFormat.material = mat;\n\t\tthis.parseUserAttributes();// textformat has no extra-properties\n\t\t//newTextFormat.extra =\n\n\t\tthis._pFinalizeAsset(<IAsset> newTextFormat, name);\n\t\tthis._blocks[blockID].data = newTextFormat;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a TextFormat: Name = '\" + name + \" font: \"+font.name);\n\t\t}\n\n\t}\n\n\tprivate paresTextField(blockID:number, factory:TimelineSceneGraphFactory):void {\n\t\tvar name:string = this.parseVarStr();\n\t\tthis._blocks[blockID].name = name;\n\t\t//console.log(\"name  '\" + name);\n        var newTextField = factory.createTextField();\n\t\tvar text_field_type:number=this._newBlockBytes.readUnsignedByte();\n\t\tif(text_field_type==0) {\n\t\t\tnewTextField.type = \"static\";\n\t\t}\n\t\telse if(text_field_type==1) {\n\t\t\tnewTextField.type = \"dynamic\";\n\t\t}\n\t\telse if(text_field_type==2) {\n\t\t\tnewTextField.type = \"input\";\n\t\t}\n\t\telse if(text_field_type==3) {\n\t\t\tnewTextField.type =\"input\";\n\t\t\tnewTextField.displayAsPassword=true;\n\t\t}\n\n\t\tnewTextField.width=this._newBlockBytes.readFloat();\n\t\tnewTextField.height=this._newBlockBytes.readFloat();\n\t\tvar num_paragraphs:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar complete_text:string = \"\";\n\t\t//console.log(\"num_paragraphs  '\" + num_paragraphs);\n\t\tvar text_format:TextFormat;\n\t\tfor(var paracnt:number=0; paracnt<num_paragraphs; paracnt++){\n\n\t\t\tvar num_textruns:number = this._newBlockBytes.readUnsignedInt();\n\t\t\t//console.log(\"num_textruns  '\" + num_textruns);\n\t\t\tfor(var textrun_cnt:number=0; textrun_cnt<num_textruns; textrun_cnt++) {\n\n\t\t\t\tvar format_id:number = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"format_id  '\" + format_id);\n\t\t\t\tvar textFormatArray:Array<any> = this.getAssetByID(format_id, [TextFormat.assetType]);\n\t\t\t\tif (textFormatArray[0]) {\n\t\t\t\t\ttext_format = <TextFormat> textFormatArray[1];\n\t\t\t\t} else {\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find a Material for this Billboard. A empty material is created!\");\n\t\t\t\t\ttext_format = new TextFormat();\n\t\t\t\t}\n\t\t\t\t//console.log(\"text_format  '\" + text_format.name);\n\t\t\t\tvar txt_length = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"txt_length  '\" + txt_length);\n\t\t\t\tif (txt_length > 0) {\n\t\t\t\t\tvar this_txt:string = this._newBlockBytes.readUTFBytes(txt_length);\n\t\t\t\t\t//newTextField.appendText(this_txt, text_format);\n\t\t\t\t\tcomplete_text+=this_txt;\n\t\t\t\t\t//console.log(\"this_txt  '\" + this_txt);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//newTextField.closeParagraph();\n\t\t}\n\t\tnewTextField.textFormat=text_format;\n\t\tnewTextField.text=complete_text;\n\t\t//newTextField.construct_geometry();\n\t\t// todo: optional matrix etc can be put in properties.\n\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BOOL, 3:AWDParser.BOOL, 4:AWDParser.BOOL, 5:AWDParser.BOOL, 7:AWDParser.UINT8, 8:AWDParser.UINT8, 9:AWDParser.UINT8});\n\t\tnewTextField.selectable = props.get(1, false);\n\t\tnewTextField.border =  props.get(3, false);\n\t\t//newTextField.renderHTML =  props.get(4, false);\n\t\t//newTextField.scrollable =  props.get(5, false);\n\t\t//newTextField.text_flow =  props.get(7, 0);\n\t\t//newTextField.orientationMode =  props.get(8, 0);\n\t\t//newTextField.line_mode =  props.get(9, 0);\n\t\tnewTextField.extra = this.parseUserAttributes();\n\n\t\t//console.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\n\t\tthis._pFinalizeAsset(<IAsset> newTextField, name);\n\t\tthis._blocks[blockID].data = newTextField;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\n\t\t}\n\n\t}\n\n\t// Block ID = 25\n\tprivate parseBillBoardLibraryBlock(blockID:number):void {\n\n\t\tvar name:string = this.parseVarStr();\n\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar mat:BasicMaterial;\n\t\tvar returnedArrayMaterial:Array<any> = this.getAssetByID(data_id, [MaterialBase.assetType]);\n\n\t\tif (returnedArrayMaterial[0]) {\n\t\t\tmat = <BasicMaterial> returnedArrayMaterial[1];\n\t\t} else {\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Material for this Billboard. A empty material is created!\");\n\t\t\tmat = new BasicMaterial();\n\t\t}\n\t\tmat.bothSides=true;\n\t\tvar billboard:Billboard = new Billboard(mat);\n\n\t\t// todo: optional matrix etc can be put in properties.\n\t\tthis.parseProperties(null);\n\n\t\tbillboard.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> billboard, name);\n\t\tthis._blocks[blockID].data = billboard;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a Library-Billboard: Name = '\" + name + \"| Material-Name = \" + mat.name);\n\t\t}\n\t}\n\t// Block ID = 24\n\tprivate parseMeshLibraryBlock(blockID:number):void {\n\t\tvar num_materials:number;\n\t\tvar materials_parsed:number;\n\n\t\tvar name:string = this.parseVarStr();\n\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar geom:Geometry;\n\t\tvar returnedArrayGeometry:Array<any> = this.getAssetByID(data_id, [Geometry.assetType])\n\n\t\tif (returnedArrayGeometry[0]) {\n\t\t\tgeom = <Geometry> returnedArrayGeometry[1];\n\t\t} else {\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Geometry for this Mesh. A empty Geometry is created!\");\n\t\t\tgeom = new Geometry();\n\t\t}\n\n\t\tthis._blocks[blockID].geoID = data_id;\n\t\tvar materials:Array<MaterialBase> = new Array<MaterialBase>();\n\t\tnum_materials = this._newBlockBytes.readUnsignedShort();\n\n\t\tvar materialNames:Array<string> = new Array<string>();\n\t\tmaterials_parsed = 0;\n\n\t\tvar returnedArrayMaterial:Array<any>;\n\n\t\twhile (materials_parsed < num_materials) {\n\t\t\tvar mat_id:number;\n\t\t\tmat_id = this._newBlockBytes.readUnsignedInt();\n\t\t\treturnedArrayMaterial = this.getAssetByID(mat_id, [MaterialBase.assetType])\n\t\t\tif ((!returnedArrayMaterial[0]) && (mat_id > 0)) {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find Material Nr \" + materials_parsed + \" (ID = \" + mat_id + \" ) for this Mesh\");\n\t\t\t}\n\n\t\t\tvar m:MaterialBase = <MaterialBase> returnedArrayMaterial[1];\n\n\t\t\tmaterials.push(m);\n\t\t\tmaterialNames.push(m.name);\n\n\t\t\tmaterials_parsed++;\n\t\t}\n\n\t\tvar mesh:Mesh = new Mesh(geom, null);\n\n\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\n\t\t\tmesh.material = materials[0];\n\t\t} else if (materials.length > 1) {\n\t\t\tvar i:number;\n\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\n\t\t\t}\n\t\t}\n\t\tthis.parseProperties(null);\n\t\tmesh.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\n\t\tthis._blocks[blockID].data = mesh;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a Library-Mesh: Name = '\" + name + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\n\t\t}\n\t}\n\tprivate parseAudioBlock(blockID:number, factory:TimelineSceneGraphFactory):void {\n\n\t\t//var asset:Audio;todo create asset for audio\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar data_len:number;\n\n\t\t//this._texture_users[this._cur_block_id.toString()] = [];\n\n\t\t// External\n\t\tif (type == 0) {\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\tvar url:string;\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\n\t\t\t// todo parser needs to be able to handle mp3 and wav files if we trigger the loading of external ressource\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\n\t\t\tconsole.log(\"Audio url = \"+url);\n\n\t\t} else {\n\t\t\t// todo: exporter does not export embed sounds yet\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\n\t\t\tvar data:ByteArray;\n\t\t\tdata = new ByteArray();\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t// todo parse sound from bytes\n\t\t\t// this._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.by(data), true);\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\n\n\t\t}\n\n\t\t// Ignore for now\n\t\tthis.parseProperties(null);\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\n\t\tthis._pPauseAndRetrieveDependencies();\n\t\t//this._blocks[blockID].data = asset;todo\n\n\t\tif (this._debug) {\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Audio file\");\n\t\t}\n\t}\n\n\t//Block ID = 4\n\tprivate parseTimeLine(blockID:number, factory:TimelineSceneGraphFactory):void {\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar c:number;\n\t\tvar timeLineContainer = factory.createMovieClip();\n\t\tvar name = this.parseVarStr();\n\t\tvar isScene = !!this._newBlockBytes.readUnsignedByte();\n\t\tvar sceneID = this._newBlockBytes.readUnsignedByte();\n\t\tvar fps:number = this._newBlockBytes.readFloat();\n\t\t//console.log(\"fps = \"+fps);\n\t\t//timeLineContainer.fps=fps;\n\t\tvar ms_per_frame = 1000 / fps;\n\t\tvar num_instances:number=0;\n\t\tvar num_all_display_instances:number=0;\n\n\n\t\t// register list of potential childs\n\t\t// a potential child can be reused on a timeline (added / removed / added)\n\t\t// However, for each potential child, we need to register the max-number of instances that a frame contains\n\t\t// we parse 2 lists of potential-childs:\n\t\t// -\tthe first list contains potential-childs that are only ever instanced once per frame.\n\t\t// -\tthe second list contains potential-childs that are instanced multiple times on some frames.\n\n\t\t// on registering a child, the child gets a incremental-id assigned. This is the id, that the commands are using to access the childs.\n\t\t// hence we need to be careful to register all objects in correct order.\n\n\t\tvar num_potential_childs:number = this._newBlockBytes.readUnsignedShort();\n\t\tfor (i = 0; i < num_potential_childs; i++) {\n\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this._blocks[resourceID].data;\n\t\t\tif (cmd_asset != null) {\n\t\t\t\ttimeLineContainer.registerPotentialChild(cmd_asset);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\n\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t}\n\t\t}\n\t\tnum_all_display_instances+=num_potential_childs;\n\t\tvar num_potential_childs_multi_instanced = this._newBlockBytes.readUnsignedShort();\n\t\tnum_potential_childs+=num_potential_childs_multi_instanced;\n\t\tfor (i = 0; i < num_potential_childs_multi_instanced; i++) {\n\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\n\t\t\tnum_instances = this._newBlockBytes.readUnsignedShort();\n\t\t\tnum_all_display_instances+=num_instances;\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this._blocks[resourceID].data;\n\t\t\tif (cmd_asset != null) {\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\n\t\t\t\t\ttimeLineContainer.registerPotentialChild(cmd_asset);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\n\t\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\n\t\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\n\t\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//console.log(\"Parsed \"+num_potential_childs+\" potential childs. They will be used by \"+num_all_display_instances+\" instances.\");\n\n\t\t// register list of potential sounds\n\t\t// a potential child can be reused on a timeline (added / removed / added)\n\t\tvar num_potential_sounds = this._newBlockBytes.readUnsignedShort();\n\t\tfor (i = 0; i < num_potential_sounds; i++) {\n\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this._blocks[resourceID].data;\n\t\t\tif (cmd_asset != null) {\n\t\t\t\t//todo: register sound objects on movieclip\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//todo: this is a error that might break complete timeline, because all sound obj-id shift\n\t\t\t}\n\t\t}\n\t\t//console.log(\"Parsed \"+num_potential_sounds+\" potential sounds\");\n\n\t\tvar numFrames = this._newBlockBytes.readUnsignedShort();\n\n\t\t//console.log(\"numFrames \"+numFrames);\n\t\t// var previousTimeLine:TimeLineFrame;\n\t\t// var fill_props:AWDProperties = this.parseProperties({1:AWD3Parserutils.UINT32});// { 1:UINT32, 6:AWDSTRING }  ); //; , 2:UINT32, 3:UINT32, 5:BOOL } );\n\n\n\t\tvar totalDuration:number;\n\t\tvar frameDuration:number;\n\t\tvar numLabels:number;\n\t\tvar numCommands:number;\n\t\tvar objectID:number;\n\t\tvar target_depth:number;\n\t\tvar resourceID:number;\n\t\tvar number_of_obj:number;\n\t\tvar commandType:number;\n\t\tvar frame:TimelineKeyFrame;\n\t\tvar label:string;\n\t\tvar hasDepthChanges:boolean;\n\t\ttotalDuration=0;\n\t\tfor (i = 0; i < numFrames; i++) {\n\t\t\tframe = new TimelineKeyFrame();\n\t\t\t// todo: remove the ms_per_frame to set the duration in frames\n\t\t\tframeDuration = this._newBlockBytes.readUnsignedInt()*ms_per_frame;\n\t\t\tframe.setFrameTime(totalDuration, frameDuration);\n\t\t\ttotalDuration += frameDuration;\n\t\t\t//console.log(\"duration = \" + frameDuration);\n\n\t\t\tnumLabels = this._newBlockBytes.readUnsignedByte();\n\t\t\tfor (j = 0; j < numLabels; j++) {\n\t\t\t\tlabel = this.parseVarStr();\n\t\t\t\t//console.log(\"label \"+label);\n\t\t\t}\n\n\t\t\tnumCommands = this._newBlockBytes.readUnsignedShort();\n\t\t\t//console.log(\"numCommands \"+numCommands);\n\t\t\t//traceString += \"\\n      Commands \" + numCommands;\n\t\t\thasDepthChanges = false;\n\t\t\tfor (j = 0; j < numCommands; j++) {\n\t\t\t\tcommandType = this._newBlockBytes.readUnsignedByte();\n\n\t\t\t\t// 1 = remove a number of objects by depth\n\t\t\t\t// 2 = add a object by child-id at specific depth\n\t\t\t\t// 3 = update a object by child-id\n\t\t\t\t// 4 = add / update sound - (not finished)\n\n\t\t\t\tswitch (commandType) {\n\n\t\t\t\t\tcase 1:// remove a number of objects at specific depth\n\t\t\t\t\t\tnumber_of_obj = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t//console.log(\"number_of_obj \", number_of_obj);\n\t\t\t\t\t\tvar remove_depths:Array<number>=new Array<number>();\n\t\t\t\t\t\tfor (c = 0; c < number_of_obj; c++) {\n\t\t\t\t\t\t\t// Remove Object Command\n\t\t\t\t\t\t\ttarget_depth = this._newBlockBytes.readShort();\n\t\t\t\t\t\t\tremove_depths.push(target_depth);\n\t\t\t\t\t\t\t//console.log(\"\\n       - Remove object at depth: \" + target_depth);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tframe.addConstructCommand(new RemoveChildrenAtDepthCommand(remove_depths));\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2:// add a of object by child-id at specific depth\n\t\t\t\t\tcase 3:// update a object by child-id\n\t\t\t\t\t\tobjectID = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t//console.log(\"add / update objectID \", objectID);\n\t\t\t\t\t\tif (commandType == 2) {\n\t\t\t\t\t\t\thasDepthChanges=true;\n\t\t\t\t\t\t\ttarget_depth = this._newBlockBytes.readShort();\n\t\t\t\t\t\t\t//console.log(\"target_depth \", target_depth);\n                            var potChild = timeLineContainer.getPotentialChild(objectID);\n\t\t\t\t\t\t\tif (potChild != undefined) {\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new AddChildAtDepthCommand(objectID, target_depth));\n\t\t\t\t\t\t\t\t// if the object is a tetfield, we set the textfield-name as instancename\n                                if(potChild.isAsset(TextField)) {\n                                    frame.addConstructCommand(new SetInstanceNameCommand(objectID, potChild.name));\n                                }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tconsole.log(\"ERROR: could not find the objectID \", objectID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar props_flag = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t/*\tProps_flags\n\t\t\t\t\t\t 1: read display matrix - 6 x float,\n\t\t\t\t\t\t 2: read display matrix - read another UINT8-bitflag that determinates what matrix components to parse\n\t\t\t\t\t\t 3: read color matrix - 4 x float, 4 x uint16\n\t\t\t\t\t\t 4: read color matrix - read another UINT8-bitflag that determinates what matrix components to parse\n\t\t\t\t\t\t 5: blendmode - uint8\n\t\t\t\t\t\t 6: visible - boolean\n\t\t\t\t\t\t 7: AWD3Parserutils.UINT8\n\t\t\t\t\t\t });*/\n\t\t\t\t\t\t// read display matrix\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG1)) {\n\t\t\t\t\t\t\tvar thisMatrix = new Matrix3D();\n\t\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG2)) {\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthisMatrix.rawData[0] = this._newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.rawData[1] = this._newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.rawData[4] = this._newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.rawData[5] = this._newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.position = new Vector3D(this._newBlockBytes.readFloat(), this._newBlockBytes.readFloat(), 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"_iMatrix3D\", thisMatrix));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// read colortransforms\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG3)) {\n\t\t\t\t\t\t\tvar thisColorTransform = new ColorTransform();\n\t\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG4)) {\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthisColorTransform.redMultiplier = this._newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.greenMultiplier = this._newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.blueMultiplier = this._newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.alphaMultiplier = this._newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.redOffset = this._newBlockBytes.readShort();\n\t\t\t\t\t\t\t\tthisColorTransform.greenOffset = this._newBlockBytes.readShort();\n\t\t\t\t\t\t\t\tthisColorTransform.blueOffset = this._newBlockBytes.readShort();\n\t\t\t\t\t\t\t\tthisColorTransform.alphaOffset = this._newBlockBytes.readShort();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG5)) {\n\t\t\t\t\t\t\tvar blendmode_int = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\t\t\tvar blendmode_string = this.blendModeDic[blendmode_int];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG6)) {\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"visible\", this._newBlockBytes.readByte()));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG7)) {\n\t\t\t\t\t\t\tvar instanceName = this.parseVarStr();\n\t\t\t\t\t\t\tif (instanceName.length) {\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetInstanceNameCommand(objectID, instanceName));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG8)) {\n\t\t\t\t\t\t\tvar mask_id_nums = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t\tvar mask_ids = new Array();\n\t\t\t\t\t\t\tfor (var mi_cnt = 0; mi_cnt < mask_id_nums; mi_cnt++) {\n\t\t\t\t\t\t\t\tmask_ids.push(this._newBlockBytes.readShort());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (mask_ids.length > 0) {\n\t\t\t\t\t\t\t\tif ((mask_ids.length == 1) && (mask_ids[0] == -1)) {\n\t\t\t\t\t\t\t\t\t// TODO: this object is used as mask\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"_iMaskID\", objectID));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetMaskCommand(objectID, mask_ids));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 4:\n\n\t\t\t\t\t\t// Add Sound Command\n\t\t\t\t\t\t// TODO: create CommandPropsSound and check which asset to use\n\t\t\t\t\t\tobjectID = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\t// TODO: implement sound in timeline\n\t\t\t\t\t\t//commandString += \"\\n      - Add new Sound AWD-ID = \" + resourceID.toString() + \" as object_id = \" + objectID.toString();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t//commandString += \"\\n       - Unknown Command Type = \" + commandType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasDepthChanges) {\n\t\t\t\t// only want to do this once after all children's depth values are updated\n\t\t\t\tframe.addConstructCommand(new ApplyAS2DepthsCommand());\n\t\t\t\thasDepthChanges = false;\n\t\t\t}\n\n\t\t\tvar length_code = this._newBlockBytes.readUnsignedInt();\n\t\t\tif (length_code > 0) {\n\t\t\t\t// TODO: Script should probably not be attached to keyframes?\n\t\t\t\tvar frame_code = this._newBlockBytes.readUTFBytes(length_code);\n\t\t\t\tframe.addConstructCommand(new ExecuteScriptCommand(frame_code));\n\t\t\t\t//traceString += \"\\nframe-code = \" + frame_code;\n\t\t\t}\n\t\t\t//traceString += commandString;\n\t\t\t//trace(\"length_code = \"+length_code+\" frame_code = \"+frame_code);\n\t\t\tthis._newBlockBytes.readUnsignedInt();// user attributes - skip for now\n\t\t\t//console.log(traceString);\n\t\t\ttimeLineContainer.addFrame(frame);\n\n\t\t}\n\n\t\tthis._pFinalizeAsset(<IAsset>timeLineContainer, name);\n\t\tthis._blocks[blockID].data = timeLineContainer;\n\t\tthis.parseProperties(null);\n\t\tthis.parseUserAttributes();\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| isScene = \" + isScene + \"| sceneID = \" + sceneID + \"| numFrames = \" + numFrames);\n\t}\n\t//Block ID = 1\n\tprivate parseTriangleGeometrieBlock(blockID:number):void\n\t{\n\n\t\tvar geom:Geometry = new Geometry();\n\n\t\t// Read name and sub count\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_subs:number = this._newBlockBytes.readUnsignedShort();\n\n\t\t// Read optional properties\n\t\tvar props:AWDProperties = this.parseProperties({1:this._geoNrType, 2:this._geoNrType});\n\t\tvar geoScaleU:number = props.get(1, 1);\n\t\tvar geoScaleV:number = props.get(2, 1);\n\n\t\t// Loop through sub meshes\n\t\tvar subs_parsed:number = 0;\n\t\twhile (subs_parsed < num_subs) {\n\t\t\tvar is_curve_geom:boolean=false;\n\t\t\tvar i:number;\n\t\t\tvar sm_len:number, sm_end:number;\n\t\t\tvar w_indices:Array<number>;\n\t\t\tvar weights:Array<number>;\n\n\t\t\tsm_len = this._newBlockBytes.readUnsignedInt();\n\t\t\tsm_end = this._newBlockBytes.position + sm_len;\n\n\t\t\tvar subProps:AWDProperties = this.parseProperties({1:this._geoNrType, 2:this._geoNrType});\n\t\t\t// Loop through data streams\n\t\t\twhile (this._newBlockBytes.position < sm_end) {\n\t\t\t\tvar idx:number = 0;\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\n\n\t\t\t\t// Type, field type, length\n\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\n\n\t\t\t\tvar x:number, y:number, z:number;\n\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo);\n\n\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\tindices[idx++] = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 3) {\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\tuvs[idx++] = this.readNumber(this._accuracyGeo);\n\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 4) {\n\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\tnormals[idx++] = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 6) {\n\t\t\t\t\tw_indices = Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\tw_indices[idx++] = this._newBlockBytes.readUnsignedShort()*3;\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 7) {\n\n\t\t\t\t\tweights = new Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\tweights[idx++] = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\n\t\t\t\t\tis_curve_geom=true;\n\t\t\t\t\tvar idx_pos:number = 0;\n\t\t\t\t\tvar idx_curves:number = 0;\n\t\t\t\t\tvar idx_uvs:number = 0;\n\n\t\t\t\t\tvar positions:Array<number> = new Array<number>();\n\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// x\n\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// y\n\t\t\t\t\t\tpositions[idx_pos++] =  this.readNumber(this._accuracyGeo);// type\n\n\t\t\t\t\t\tcurveData[idx_curves++] = this.readNumber(this._accuracyGeo);// curve value 1\n\t\t\t\t\t\tcurveData[idx_curves++] = this.readNumber(this._accuracyGeo);// curve value 2\n\n\t\t\t\t\t\tuvs[idx_uvs++] = this.readNumber(this._accuracyGeo);// curve value 1\n\t\t\t\t\t\tuvs[idx_uvs++] = this.readNumber(this._accuracyGeo);// curve value 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.parseUserAttributes(); // Ignore sub-mesh attributes for now\n\t\t\tif(is_curve_geom){\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\n\t\t\t\tcurve_sub_geom.updateIndices(indices);\n\t\t\t\tcurve_sub_geom.updatePositions(positions);\n\t\t\t\tcurve_sub_geom.updateCurves(curveData);\n\t\t\t\tcurve_sub_geom.updateUVs(uvs);\n\t\t\t\tgeom.addSubGeometry(curve_sub_geom);\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Parsed a CurveSubGeometry\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar triangle_sub_geom = new TriangleSubGeometry(true);\n\t\t\t\tif (weights)\n\t\t\t\t\ttriangle_sub_geom.jointsPerVertex = weights.length / (verts.length / 3);\n\t\t\t\tif (normals)\n\t\t\t\t\ttriangle_sub_geom.autoDeriveNormals = false;\n\t\t\t\tif (uvs)\n\t\t\t\t\ttriangle_sub_geom.autoDeriveUVs = false;\n\t\t\t\t//triangle_sub_geom.autoDeriveNormals = false;\n\t\t\t\tif (true) {\n\t\t\t\t\ttriangle_sub_geom.autoDeriveTangents = true;\n\t\t\t\t}\n\t\t\t\ttriangle_sub_geom.updateIndices(indices);\n\t\t\t\ttriangle_sub_geom.updatePositions(verts);\n\t\t\t\ttriangle_sub_geom.updateVertexNormals(normals);\n\t\t\t\ttriangle_sub_geom.updateUVs(uvs);\n\t\t\t\ttriangle_sub_geom.updateVertexTangents(null);\n\t\t\t\ttriangle_sub_geom.updateJointWeights(weights);\n\t\t\t\ttriangle_sub_geom.updateJointIndices(w_indices);\n\n\t\t\t\tvar scaleU:number = subProps.get(1, 1);\n\t\t\t\tvar scaleV:number = subProps.get(2, 1);\n\t\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\n\n\t\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\n\t\t\t\t\tsetSubUVs = true;\n\t\t\t\t\tscaleU = geoScaleU / scaleU;\n\t\t\t\t\tscaleV = geoScaleV / scaleV;\n\t\t\t\t}\n\n\t\t\t\tif (setSubUVs)\n\t\t\t\t\ttriangle_sub_geom.scaleUV(scaleU, scaleV);\n\t\t\t\tgeom.addSubGeometry(triangle_sub_geom);\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Parsed a TriangleSubGeometry\");\n\t\t\t}\n\n\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\n\t\t\t// when creating meshes (and their material assignments.)\n\n\t\t\tsubs_parsed++;\n\t\t}\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\n\t\t\tgeom.scaleUV(geoScaleU, geoScaleV);\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> geom, name);\n\t\tthis._blocks[blockID].data = geom;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a TriangleGeometry: Name = \" + name);\n\t\t}\n\n\t}\n\n\n\t//Block ID = 11\n\tprivate parsePrimitves(blockID:number):void\n\t{\n\t\tvar name:string;\n\t\tvar prefab:PrefabBase;\n\t\tvar primType:number;\n\t\tvar subs_parsed:number;\n\t\tvar props:AWDProperties;\n\t\tvar bsm:Matrix3D;\n\n\t\t// Read name and sub count\n\t\tname = this.parseVarStr();\n\t\tprimType = this._newBlockBytes.readUnsignedByte();\n\t\tprops = this.parseProperties({101:this._geoNrType, 102:this._geoNrType, 103:this._geoNrType, 110:this._geoNrType, 111:this._geoNrType, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 303:AWDParser.UINT16, 701:AWDParser.BOOL, 702:AWDParser.BOOL, 703:AWDParser.BOOL, 704:AWDParser.BOOL});\n\n\t\tvar primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"]\n\n\t\tswitch (primType) {\n\t\t\t// to do, not all properties are set on all primitives\n\n\t\t\tcase 1:\n\t\t\t\tprefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tprefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\tprefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 4:\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\n\t\t\t\tif (!props.get(701, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\n\t\t\t\tif (!props.get(702, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\n\t\t\t\tif (!props.get(703, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\t\tprefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 6:\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 7:\n\t\t\t\tprefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tprefab = new PrefabBase();\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\n\t\t\t//geom.subGeometries;\n\t\t\t//geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\n\t\t}\n\n\t\tthis.parseUserAttributes();\n\t\tprefab.name = name;\n\t\tthis._pFinalizeAsset(prefab, name);\n\t\tthis._blocks[blockID].data = prefab;\n\n\t\tif (this._debug) {\n\t\t\tif ((primType < 0) || (primType > 7)) {\n\t\t\t\tprimType = 0;\n\t\t\t}\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + name + \"| type = \" + primitiveTypes[primType]);\n\t\t}\n\t}\n\n\t// Block ID = 22\n\tprivate parseContainer(blockID:number):void\n\t{\n\t\tvar name:string;\n\t\tvar par_id:number;\n\t\tvar mtx:Matrix3D;\n\t\tvar ctr:DisplayObjectContainer;\n\t\tvar parent:DisplayObjectContainer;\n\n\t\tpar_id = this._newBlockBytes.readUnsignedInt();\n\t\tmtx = this.parseMatrix3D();\n\t\tname = this.parseVarStr();\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tctr = new DisplayObjectContainer();\n\t\tctr.transform.matrix3D = mtx;\n\n\t\tvar returnedArray:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType]);\n\n\t\tif (returnedArray[0]) {\n\t\t\tvar obj:DisplayObject = (<DisplayObjectContainer> returnedArray[1]).addChild(ctr);\n\t\t\tparentName = (<DisplayObjectContainer> returnedArray[1]).name;\n\t\t} else if (par_id > 0) {\n\t\t\tthis._blocks[ blockID ].addError(\"Could not find a parent for this ObjectContainer3D\");\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(ctr);\n\t\t}\n\n\t\t// in AWD version 2.1 we read the Container properties\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tvar props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t}\n\t\t// in other versions we do not read the Container properties\n\t\telse {\n\t\t\tthis.parseProperties(null);\n\t\t}\n\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\n\t\tctr.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> ctr, name);\n\t\tthis._blocks[blockID].data = ctr;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + name + \"' | Parent-Name = \" + parentName);\n\t\t}\n\t}\n\n\t// Block ID = 23\n\tprivate parseMeshInstance(blockID:number):void\n\t{\n\t\tvar num_materials:number;\n\t\tvar materials_parsed:number;\n\t\tvar parent:DisplayObjectContainer;\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar geom:Geometry;\n\t\tvar returnedArrayGeometry:Array<any> = this.getAssetByID(data_id, [Geometry.assetType])\n\n\t\tif (returnedArrayGeometry[0]) {\n\t\t\tgeom = <Geometry> returnedArrayGeometry[1];\n\t\t} else {\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Geometry for this Mesh. A empty Geometry is created!\");\n\t\t\tgeom = new Geometry();\n\t\t}\n\n\t\tthis._blocks[blockID].geoID = data_id;\n\t\tvar materials:Array<MaterialBase> = new Array<MaterialBase>();\n\t\tnum_materials = this._newBlockBytes.readUnsignedShort();\n\n\t\tvar materialNames:Array<string> = new Array<string>();\n\t\tmaterials_parsed = 0;\n\n\t\tvar returnedArrayMaterial:Array<any>;\n\n\t\twhile (materials_parsed < num_materials) {\n\t\t\tvar mat_id:number;\n\t\t\tmat_id = this._newBlockBytes.readUnsignedInt();\n\t\t\treturnedArrayMaterial = this.getAssetByID(mat_id, [MaterialBase.assetType])\n\t\t\tif ((!returnedArrayMaterial[0]) && (mat_id > 0)) {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find Material Nr \" + materials_parsed + \" (ID = \" + mat_id + \" ) for this Mesh\");\n\t\t\t}\n\n\t\t\tvar m:MaterialBase = <MaterialBase> returnedArrayMaterial[1];\n\n\t\t\tmaterials.push(m);\n\t\t\tmaterialNames.push(m.name);\n\n\t\t\tmaterials_parsed++;\n\t\t}\n\n\t\tvar mesh:Mesh = new Mesh(geom, null);\n\t\tmesh.transform.matrix3D = mtx;\n\n\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType])\n\n\t\tif (returnedArrayParent[0]) {\n\t\t\tvar objC:DisplayObjectContainer = <DisplayObjectContainer> returnedArrayParent[1];\n\t\t\tobjC.addChild(mesh);\n\t\t\tparentName = objC.name;\n\t\t} else if (par_id > 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Mesh\");\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\n\t\t}\n\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\n\t\t\tmesh.material = materials[0];\n\t\t} else if (materials.length > 1) {\n\t\t\tvar i:number;\n\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\n\t\t\t}\n\t\t}\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tvar props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8, 5:AWDParser.BOOL});\n\t\t\tmesh.pivot = new Vector3D(<number>props.get(1, 0), <number>props.get(2, 0), <number> props.get(3, 0));\n\t\t\tmesh.castsShadows = props.get(5, true);\n\t\t} else {\n\t\t\tthis.parseProperties(null);\n\t\t}\n\n\t\tmesh.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\n\t\tthis._blocks[blockID].data = mesh;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a Mesh: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\n\t\t}\n\t}\n\n\n\t//Block ID 31\n\tprivate parseSkyboxInstance(blockID:number):void\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar cubeTexAddr:number = this._newBlockBytes.readUnsignedInt();\n\n\t\tvar returnedArrayCubeTex:Array<any> = this.getAssetByID(cubeTexAddr, [SingleCubeTexture.assetType]);\n\t\tif ((!returnedArrayCubeTex[0]) && (cubeTexAddr != 0))\n\t\t\tthis._blocks[blockID].addError(\"Could not find the Cubetexture (ID = \" + cubeTexAddr + \" ) for this Skybox\");\n\t\tvar asset:Skybox = new Skybox(<SingleCubeTexture> returnedArrayCubeTex[1]);\n\n\t\tthis.parseProperties(null)\n\t\tasset.extra = this.parseUserAttributes();\n\t\tthis._pFinalizeAsset(asset, name);\n\t\tthis._blocks[blockID].data = asset;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + name + \"' | CubeTexture-Name = \" + (<SingleCubeTexture> returnedArrayCubeTex[1]).name);\n\n\t}\n\n\t//Block ID = 41\n\tprivate parseLight(blockID:number):void\n\t{\n\t\tvar light:LightBase;\n\t\tvar newShadowMapper:ShadowMapperBase;\n\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\t\tvar lightType:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar props:AWDProperties = this.parseProperties({1:this._propsNrType, 2:this._propsNrType, 3:AWDParser.COLOR, 4:this._propsNrType, 5:this._propsNrType, 6:AWDParser.BOOL, 7:AWDParser.COLOR, 8:this._propsNrType, 9:AWDParser.UINT8, 10:AWDParser.UINT8, 11:this._propsNrType, 12:AWDParser.UINT16, 21:this._matrixNrType, 22:this._matrixNrType, 23:this._matrixNrType});\n\t\tvar shadowMapperType:number = props.get(9, 0);\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\n\n\t\tif (lightType == 1) {\n\t\t\tlight = new PointLight();\n\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 4) {\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlight.transform.matrix3D = mtx;\n\n\t\t}\n\n\t\tif (lightType == 2) {\n\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 1) {\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\n\t\t\t\t}\n\n\t\t\t\t//if (shadowMapperType == 2)\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\n\t\t\t\t//if (shadowMapperType == 3)\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\n\n\t\t\t}\n\n\t\t}\n\t\tlight.color = props.get(3, 0xffffff);\n\t\tlight.specular = props.get(4, 1.0);\n\t\tlight.diffuse = props.get(5, 1.0);\n\t\tlight.ambientColor = props.get(7, 0xffffff);\n\t\tlight.ambient = props.get(8, 0.0);\n\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\n\t\tif (newShadowMapper) {\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\n\t\t\t\tif (props.get(10, 1) != 1) {\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 1)];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (props.get(10, 2) != 2) {\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 2)];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlight.shadowMapper = newShadowMapper;\n\t\t\tlight.castsShadows = true;\n\t\t}\n\n\t\tif (par_id != 0) {\n\n\t\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType])\n\n\t\t\tif (returnedArrayParent[0]) {\n\t\t\t\t(<DisplayObjectContainer> returnedArrayParent[1]).addChild(light);\n\t\t\t\tparentName = (<DisplayObjectContainer> returnedArrayParent[1]).name;\n\t\t\t} else {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Light\");\n\t\t\t}\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(light);\n\t\t}\n\n\t\tthis.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(< IAsset> light, name);\n\n\t\tthis._blocks[blockID].data = light;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\n\n\t}\n\n\t//Block ID = 43\n\tprivate parseCamera(blockID:number):void\n\t{\n\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar projection:ProjectionBase;\n\n\t\tthis._newBlockBytes.readUnsignedByte(); //set as active camera\n\t\tthis._newBlockBytes.readShort(); //lengthof lenses - not used yet\n\n\t\tvar projectiontype:number = this._newBlockBytes.readShort();\n\t\tvar props:AWDProperties = this.parseProperties({101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 104:this._propsNrType});\n\n\t\tswitch (projectiontype) {\n\t\t\tcase 5001:\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\n\t\t\t\tbreak;\n\t\t\tcase 5002:\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\n\t\t\t\tbreak;\n\t\t\tcase 5003:\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\n\t\t\t\treturn;\n\t\t}\n\n\t\tvar camera:Camera = new Camera(projection);\n\t\tcamera.transform.matrix3D = mtx;\n\n\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType])\n\n\t\tif (returnedArrayParent[0]) {\n\n\t\t\tvar objC:DisplayObjectContainer = <DisplayObjectContainer> returnedArrayParent[1];\n\t\t\tobjC.addChild(camera);\n\n\t\t\tparentName = objC.name;\n\n\t\t} else if (par_id > 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Camera\");\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(camera);\n\t\t}\n\n\t\tcamera.name = name;\n\t\tprops = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\tcamera.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(camera, name);\n\n\t\tthis._blocks[blockID].data = camera\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\n\t\t}\n\n\t}\n\n\t//Block ID = 51\n\tprivate parseLightPicker(blockID:number):void\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar numLights:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\n\t\tvar k:number = 0;\n\t\tvar lightID:number = 0;\n\n\t\tvar returnedArrayLight:Array<any>;\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\n\n\t\tfor (k = 0; k < numLights; k++) {\n\t\t\tlightID = this._newBlockBytes.readUnsignedInt();\n\t\t\treturnedArrayLight = this.getAssetByID(lightID, [LightBase.assetType])\n\n\t\t\tif (returnedArrayLight[0]) {\n\t\t\t\tlightsArray.push(<LightBase> returnedArrayLight[1]);\n\t\t\t\tlightsArrayNames.push(( <LightBase> returnedArrayLight[1]).name);\n\n\t\t\t} else {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find a Light Nr \" + k + \" (ID = \" + lightID + \" ) for this LightPicker\");\n\t\t\t}\n\t\t}\n\n\t\tif (lightsArray.length == 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not create this LightPicker, cause no Light was found.\");\n\t\t\tthis.parseUserAttributes();\n\t\t\treturn; //return without any more parsing for this block\n\t\t}\n\n\t\tvar lightPick:LightPickerBase = new StaticLightPicker(lightsArray);\n\t\tlightPick.name = name;\n\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> lightPick, name);\n\n\t\tthis._blocks[blockID].data = lightPick\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + name + \"' | Texture-Name = \" + lightsArrayNames.toString());\n\t\t}\n\t}\n\n\t//Block ID = 81\n\tprivate parseMaterial(blockID:number):void\n\t{\n\t\t// TODO: not used\n\t\t////blockLength = block.len;\n\t\tvar name:string;\n\t\tvar type:number;\n\t\tvar props:AWDProperties;\n\t\tvar mat:MethodMaterial;\n\t\tvar attributes:Object;\n\t\tvar finalize:boolean;\n\t\tvar num_methods:number;\n\t\tvar methods_parsed:number;\n\t\tvar returnedArray:Array<any>;\n\n\t\tname = this.parseVarStr();\n\t\ttype = this._newBlockBytes.readUnsignedByte();\n\t\tnum_methods = this._newBlockBytes.readUnsignedByte();\n\n\t\t// Read material numerical properties\n\t\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\n\t\tprops = this.parseProperties({ 1:AWDParser.INT32, 2:AWDParser.BADDR, 10:this._propsNrType, 11:AWDParser.BOOL, 12:this._propsNrType, 13:AWDParser.BOOL});\n\n\t\tmethods_parsed = 0;\n\t\twhile (methods_parsed < num_methods) {\n\t\t\tvar method_type:number;\n\n\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\n\t\t\tthis.parseProperties(null);\n\t\t\tthis.parseUserAttributes();\n\t\t\tmethods_parsed += 1;\n\t\t}\n\t\tvar debugString:string = \"\";\n\t\tattributes = this.parseUserAttributes();\n\t\tif (type === 1) { // Color material\n\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\tvar color:number;\n\t\t\tcolor = props.get(1, 0xffffff);\n\t\t\tif (this.materialMode < 2) {\n\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\n\t\t\t} else {\n\t\t\t\tmat = new MethodMaterial(color);\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t}\n\t\t} else if (type === 2) {\n\t\t\tvar tex_addr:number = props.get(2, 0);\n\n\t\t\treturnedArray = this.getAssetByID(tex_addr, [Single2DTexture.assetType]);\n\n\t\t\tif ((!returnedArray[0]) && (tex_addr > 0))\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffsueTexture (ID = \" + tex_addr + \" ) for this Material\");\n\n\t\t\tmat = new MethodMaterial(<TextureBase> returnedArray[1]);\n\n\t\t\tif (this.materialMode < 2) {\n\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\n\t\t\t} else {\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\n\t\t\t}\n\t\t}\n\n\t\tmat.extra = attributes;\n\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\tmat.repeat = props.get(13, false);\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\n\t\tthis._blocks[blockID].data = mat;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(debugString);\n\n\t\t}\n\t}\n\n\t// Block ID = 81 AWD2.1\n\tprivate parseMaterial_v1(blockID:number):void\n\t{\n\t\tvar mat:MethodMaterial;\n\t\tvar normalTexture:TextureBase;\n\t\tvar specTexture:TextureBase;\n\t\tvar returnedArray:Array<any>;\n\n\t\tvar name:string = this.parseVarStr();\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar num_methods:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT32, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 4:AWDParser.UINT8, 5:AWDParser.BOOL, 6:AWDParser.BOOL, 7:AWDParser.BOOL, 8:AWDParser.BOOL, 9:AWDParser.UINT8, 10:this._propsNrType, 11:AWDParser.BOOL, 12:this._propsNrType, 13:AWDParser.BOOL, 15:this._propsNrType, 16:AWDParser.UINT32, 17:AWDParser.BADDR, 18:this._propsNrType, 19:this._propsNrType, 20:AWDParser.UINT32, 21:AWDParser.BADDR, 22:AWDParser.BADDR});\n\t\tvar spezialType:number = props.get(4, 0);\n\t\tvar debugString:string = \"Parsed Material \";\n\n\t\tif (spezialType >= 2) {//this is no supported material\n\t\t\tthis._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (type <= 2) {// Color material\n\t\t\tif (this.materialMode == 1)\n\t\t\t\tspezialType = 0;\n\t\t\telse if (this.materialMode == 2)\n\t\t\t\tspezialType = 1;\n\n\t\t\tif (spezialType < 2) {//this is SinglePass or MultiPass\n\n\t\t\t\tif (type == 1) {// Color material\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\n\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\n\t\t\t\t\t\tmat = new MethodMaterial(color);\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\n\n\t\t\t\t\t} else { //\tSinglePassMaterial\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\t\t\t}\n\n\t\t\t\t} else if (type == 2) {// texture material\n\t\t\t\t\tvar tex_addr:number = props.get(2, 0);//TODO temporarily swapped so that diffuse texture goes to ambient\n\t\t\t\t\treturnedArray = this.getAssetByID(tex_addr, [Single2DTexture.assetType]);\n\n\t\t\t\t\tif ((!returnedArray[0]) && (tex_addr > 0))\n\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the AmbientTexture (ID = \" + tex_addr + \" ) for this MethodMaterial\");\n\n\t\t\t\t\tvar texture:Single2DTexture = returnedArray[1];\n\n\t\t\t\t\tmat = new MethodMaterial(texture);\n\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + texture.name;\n\t\t\t\t\t} else {//\tSinglePassMaterial\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + texture.name;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar diffuseTexture:Single2DTexture;\n\t\t\t\tvar diffuseTex_addr:number = props.get(17, 0);\n\n\t\t\t\treturnedArray = this.getAssetByID(diffuseTex_addr, [Single2DTexture.assetType]);\n\n\t\t\t\tif ((!returnedArray[0]) && (diffuseTex_addr != 0)) {\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffuseTexture (ID = \" + diffuseTex_addr + \" ) for this MethodMaterial\");\n\t\t\t\t}\n\n\t\t\t\tif (returnedArray[0])\n\t\t\t\t\tdiffuseTexture = returnedArray[1];\n\n\t\t\t\tif (diffuseTexture) {\n\t\t\t\t\tmat.diffuseTexture = diffuseTexture;\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\n\t\t\t\t}\n\n\t\t\t\tvar normalTex_addr:number = props.get(3, 0);\n\n\t\t\t\treturnedArray = this.getAssetByID(normalTex_addr, [Single2DTexture.assetType]);\n\n\t\t\t\tif ((!returnedArray[0]) && (normalTex_addr != 0)) {\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the NormalTexture (ID = \" + normalTex_addr + \" ) for this MethodMaterial\");\n\t\t\t\t}\n\n\t\t\t\tif (returnedArray[0]) {\n\t\t\t\t\tnormalTexture = returnedArray[1];\n\t\t\t\t\tdebugString += \" | NormalTexture-Name = \" + normalTexture.name;\n\t\t\t\t}\n\n\t\t\t\tvar specTex_addr:number = props.get(21, 0);\n\t\t\t\treturnedArray = this.getAssetByID(specTex_addr, [Single2DTexture.assetType]);\n\n\t\t\t\tif ((!returnedArray[0]) && (specTex_addr != 0)) {\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SpecularTexture (ID = \" + specTex_addr + \" ) for this MethodMaterial\");\n\t\t\t\t}\n\t\t\t\tif (returnedArray[0]) {\n\t\t\t\t\tspecTexture = returnedArray[1];\n\t\t\t\t\tdebugString += \" | SpecularTexture-Name = \" + specTexture.name;\n\t\t\t\t}\n\n\t\t\t\tvar lightPickerAddr:number = props.get(22, 0);\n\t\t\t\treturnedArray = this.getAssetByID(lightPickerAddr, [LightPickerBase.assetType])\n\n\t\t\t\tif ((!returnedArray[0]) && (lightPickerAddr)) {\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightPicker (ID = \" + lightPickerAddr + \" ) for this MethodMaterial\");\n\t\t\t\t} else {\n\t\t\t\t\tmat.lightPicker = <LightPickerBase> returnedArray[1];\n\t\t\t\t\t//debugString+=\" | Lightpicker-Name = \"+LightPickerBase(returnedArray[1]).name;\n\t\t\t\t}\n\n\t\t\t\tmat.smooth = props.get(5, true);\n\t\t\t\tmat.mipmap = props.get(6, true);\n\t\t\t\tmat.bothSides = props.get(7, false);\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\n\t\t\t\tmat.blendMode = this.blendModeDic[props.get(9, 0)];\n\t\t\t\tmat.repeat = props.get(13, false);\n\n\t\t\t\tif (normalTexture)\n\t\t\t\t\tmat.normalMap = normalTexture;\n\n\t\t\t\tif (specTexture)\n\t\t\t\t\tmat.specularMap = specTexture;\n\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\t\t\tmat.ambient = props.get(15, 1.0);\n\t\t\t\tmat.diffuseColor = props.get(16, 0xffffff);\n\t\t\t\tmat.specular = props.get(18, 1.0);\n\t\t\t\tmat.gloss = props.get(19, 50);\n\t\t\t\tmat.specularColor = props.get(20, 0xffffff);\n\n\t\t\t\tvar methods_parsed:number = 0;\n\t\t\t\tvar targetID:number;\n\n\t\t\t\twhile (methods_parsed < num_methods) {\n\t\t\t\t\tvar method_type:number;\n\t\t\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\n\n\t\t\t\t\tprops = this.parseProperties({\n\t\t\t\t\t\t1: AWDParser.BADDR,\n\t\t\t\t\t\t2: AWDParser.BADDR,\n\t\t\t\t\t\t3: AWDParser.BADDR,\n\t\t\t\t\t\t101: this._propsNrType,\n\t\t\t\t\t\t102: this._propsNrType,\n\t\t\t\t\t\t103: this._propsNrType,\n\t\t\t\t\t\t201: AWDParser.UINT32,\n\t\t\t\t\t\t202: AWDParser.UINT32,\n\t\t\t\t\t\t301: AWDParser.UINT16,\n\t\t\t\t\t\t302: AWDParser.UINT16,\n\t\t\t\t\t\t401: AWDParser.UINT8,\n\t\t\t\t\t\t402: AWDParser.UINT8,\n\t\t\t\t\t\t601: AWDParser.COLOR,\n\t\t\t\t\t\t602: AWDParser.COLOR,\n\t\t\t\t\t\t701: AWDParser.BOOL,\n\t\t\t\t\t\t702: AWDParser.BOOL,\n\t\t\t\t\t\t801: AWDParser.MTX4x4\n\t\t\t\t\t});\n\n\t\t\t\t\tswitch (method_type) {\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffektMethod returned\n\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [EffectMethodBase.assetType]);\n\n\t\t\t\t\t\t\tif (!returnedArray[0]) {\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EffectMethod (ID = \" + targetID + \" ) for this Material\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmat.addEffectMethod(returnedArray[1]);\n\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<EffectMethodBase> returnedArray[1]).name;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\n\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\n\n\t\t\t\t\t\t\tif (!returnedArray[0]) {\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the ShadowMethod (ID = \" + targetID + \" ) for this Material\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmat.shadowMethod = returnedArray[1];\n\t\t\t\t\t\t\t\tdebugString += \" | ShadowMethod-Name = \" + (<ShadowMethodBase> returnedArray[1]).name;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [SingleCubeTexture.assetType]);\n\t\t\t\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this EnvMapAmbientMethodMaterial\");\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod();\n\t\t\t\t\t\t\tmat.texture = returnedArray[1];\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + (<SingleCubeTexture> returnedArray[1]).name;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\n\t\t\t\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the GradientDiffuseTexture (ID = \" + targetID + \" ) for this GradientDiffuseMethod\");\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(returnedArray[1]);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + (<TextureBase> returnedArray[1]).name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\n\t\t\t\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this LightMapDiffuseMethod\");\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(returnedArray[1], this.blendModeDic[props.get(401, 10)], false, mat.diffuseMethod);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + (<TextureBase> returnedArray[1]).name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\n\t\t\t\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SecoundNormalMap (ID = \" + targetID + \" ) for this SimpleWaterNormalMethod\");\n\t\t\t\t\t\t\tif (!mat.normalMap)\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find a normal Map on this Material to use with this SimpleWaterNormalMethod\");\n\n\t\t\t\t\t\t\tmat.normalMap = returnedArray[1];\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(mat.normalMap, returnedArray[1]);\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + (<TextureBase> returnedArray[1]).name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tthis.parseUserAttributes();\n\t\t\t\t\tmethods_parsed += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// todo: we should not need this anymore (if using texture-atlas)\n\t\telse if ((type>=3)&&(type<=7)){\n\t\t\t// if this is a curve material, we create it, finalize it, assign it to block-cache and return and return.\n\t\t\tvar color:number = props.get(1, 0xcccccc);\n\t\t\tdebugString+=color;\n\n\t\t\tvar diffuseTexture:Single2DTexture;\n\t\t\tvar diffuseTex_addr:number = props.get(2, 0);\n\n\t\t\treturnedArray = this.getAssetByID(diffuseTex_addr, [Single2DTexture.assetType]);\n\n\t\t\tif ((!returnedArray[0]) && (diffuseTex_addr != 0)) {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffuseTexture (ID = \" + diffuseTex_addr + \" ) for this MethodMaterial\");\n\t\t\t\tdiffuseTexture = DefaultMaterialManager.getDefaultTexture();\n\t\t\t}\n\n\t\t\tif (returnedArray[0])\n\t\t\t\tdiffuseTexture = returnedArray[1];\n\t\t\tvar curve_mat:CurveMaterial = new CurveMaterial(diffuseTexture);\n\t\t\t//debugString+= \" alpha = \"+props.get(10, 1.0)+\" \";\n\t\t\tdebugString+= \" texture = \"+diffuseTex_addr+\" \";\n\t\t\tcurve_mat.bothSides = true;\n\t\t\tcurve_mat.preserveAlpha = true;\n\t\t\tcurve_mat.alphaBlending = true;\n\t\t\tcurve_mat.extra = this.parseUserAttributes();\n\t\t\tthis._pFinalizeAsset(<IAsset> curve_mat, name);\n\t\t\tthis._blocks[blockID].data = curve_mat;\n\t\t\tif (this._debug)\n\t\t\t\tconsole.log(debugString);\n\t\t\treturn;\n\n\t\t}\n\t\tmat.extra = this.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\n\n\t\tthis._blocks[blockID].data = mat;\n\t\tif (this._debug) {\n\t\t\tconsole.log(debugString);\n\t\t}\n\t}\n\n\t//Block ID = 82\n\tprivate parseTexture(blockID:number):void\n\t{\n\n\t\tvar asset:TextureBase;\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar data_len:number;\n\n\t\tthis._texture_users[this._cur_block_id.toString()] = [];\n\n\t\t// External\n\t\tif (type == 0) {\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\tvar url:string;\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\n\n\t\t} else {\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\n\t\t\tvar data:ByteArray;\n\t\t\tdata = new ByteArray();\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t//\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\n\t\t\t//\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\n\t\t\t// This gives the browser time to initialise image width / height.\n\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\n\n\t\t}\n\n\t\t// Ignore for now\n\t\tthis.parseProperties(null);\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\n\t\tthis._pPauseAndRetrieveDependencies();\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug) {\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Bitmap for Texture\");\n\t\t}\n\n\t}\n\n\t//Block ID = 83\n\tprivate parseCubeTexture(blockID:number):void\n\t{\n\t\t//blockLength = block.len;\n\t\tvar data_len:number;\n\t\tvar asset:SingleCubeTexture;\n\t\tvar i:number;\n\n\t\tthis._cubeBitmaps = new Array<BitmapImage2D>();\n\t\tthis._texture_users[ this._cur_block_id.toString() ] = [];\n\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tfor (i = 0; i < 6; i++) {\n\t\t\tthis._texture_users[this._cur_block_id.toString()] = [];\n\t\t\tthis._cubeBitmaps.push(null);\n\n\t\t\t// External\n\t\t\tif (type == 0) {\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tvar url:string;\n\t\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\n\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString() + \"#\" + i, new URLRequest(url), false, null, true);\n\t\t\t} else {\n\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tvar data:ByteArray;\n\t\t\t\tdata = new ByteArray();\n\n\t\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString() + \"#\" + i, null, false, ParserUtils.byteArrayToImage(data), true);\n\t\t\t}\n\t\t}\n\n\t\t// Ignore for now\n\t\tthis.parseProperties(null);\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\n\t\tthis._pPauseAndRetrieveDependencies();\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug) {\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\n\t\t\tconsole.log(\"Start parsing 6 \" + textureStylesNames[type] + \" Bitmaps for CubeTexture\");\n\t\t}\n\t}\n\n\t//Block ID = 91\n\tprivate parseSharedMethodBlock(blockID:number):void\n\t{\n\t\tvar asset:EffectMethodBase;\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\t\tasset = this.parseSharedMethodList(blockID);\n\t\tthis.parseUserAttributes();\n\t\tthis._blocks[blockID].data = asset;\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\n\t\t}\n\t}\n\n\t//Block ID = 92\n\tprivate parseShadowMethodBlock(blockID:number):void\n\t{\n\t\tvar type:number;\n\t\tvar data_len:number;\n\t\tvar asset:ShadowMethodBase;\n\t\tvar shadowLightID:number;\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tshadowLightID = this._newBlockBytes.readUnsignedInt();\n\t\tvar returnedArray:Array<any> = this.getAssetByID(shadowLightID, [LightBase.assetType]);\n\n\t\tif (!returnedArray[0]) {\n\t\t\tthis._blocks[blockID].addError(\"Could not find the TargetLight (ID = \" + shadowLightID + \" ) for this ShadowMethod - ShadowMethod not created\");\n\t\t\treturn;\n\t\t}\n\n\t\tasset = this.parseShadowMethodList(<LightBase> returnedArray[1], blockID);\n\n\t\tif (!asset)\n\t\t\treturn;\n\n\t\tthis.parseUserAttributes(); // Ignore for now\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", ( <LightBase> returnedArray[1] ).name);\n\t\t}\n\t}\n\n\n\t//Block ID = 253\n\tprivate parseCommand(blockID:number):void\n\t{\n\t\tvar hasBlocks:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\n\t\tvar parentObject:DisplayObjectContainer;\n\t\tvar targetObject:DisplayObjectContainer;\n\n\t\tvar returnedArray:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType]);\n\n\t\tif (returnedArray[0]) {\n\t\t\tparentObject = <DisplayObjectContainer> returnedArray[1];\n\t\t}\n\n\t\tvar numCommands:number = this._newBlockBytes.readShort();\n\t\tvar typeCommand:number = this._newBlockBytes.readShort();\n\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR});\n\n\t\tswitch (typeCommand) {\n\t\t\tcase 1:\n\n\t\t\t\tvar targetID:number = props.get(1, 0);\n\t\t\t\t//var returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [LightBase.assetType, TextureProjector.assetType]); //for no only light is requested!!!!\n\t\t\t\tvar returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [LightBase.assetType]); //for no only light is requested!!!!\n\n\t\t\t\tif ((!returnedArrayTarget[0]) && (targetID != 0)) {\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the light (ID = \" + targetID + \" ( for this CommandBock!\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttargetObject = returnedArrayTarget[1];\n\n\t\t\t\tif (parentObject) {\n\t\t\t\t\tparentObject.addChild(targetObject);\n\t\t\t\t}\n\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (targetObject) {\n\t\t\tprops = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\n\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t\ttargetObject.extra = this.parseUserAttributes();\n\n\t\t}\n\t\tthis._blocks[blockID].data = targetObject\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\n\t\t}\n\n\t}\n\n\t//blockID 255\n\tprivate parseMetaData(blockID:number):void\n\t{\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT32, 2:AWDParser.AWDSTRING, 3:AWDParser.AWDSTRING, 4:AWDParser.AWDSTRING, 5:AWDParser.AWDSTRING});\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\n\t\t}\n\t}\n\n\t//blockID 254\n\tprivate parseNameSpace(blockID:number):void\n\t{\n\t\tvar id:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar nameSpaceString:string = this.parseVarStr();\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\n\t}\n\n\t//--Parser UTILS---------------------------------------------------------------------------\n\n\t// this functions reads and creates a ShadowMethodMethod\n\tprivate parseShadowMethodList(light:LightBase, blockID:number):ShadowMethodBase\n\t{\n\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar shadowMethod:ShadowMethodBase;\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 201:AWDParser.UINT32, 202:AWDParser.UINT32, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 401:AWDParser.UINT8, 402:AWDParser.UINT8, 601:AWDParser.COLOR, 602:AWDParser.COLOR, 701:AWDParser.BOOL, 702:AWDParser.BOOL, 801:AWDParser.MTX4x4});\n\n\t\tvar targetID:number;\n\t\tvar returnedArray:Array<any>\n\t\tswitch (methodType) {\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this CascadeShadowMapMethod - ShadowMethod not created\");\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\n\t\t\t//\t\t\t\t\t}\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 1002: //ShadowNearMethod\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\n\t\t\t\tif (!returnedArray[0]) {\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this ShadowNearMethod - ShadowMethod not created\");\n\t\t\t\t\treturn shadowMethod;\n\t\t\t\t}\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> returnedArray[1]);\n\t\t\t\tbreak;\n\t\t\tcase 1101: //ShadowFilteredMethod\n\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t\tcase 1102: //ShadowDitheredMethod\n\n\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1103: //ShadowSoftMethod\n\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1104: //ShadowHardMethod\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\treturn shadowMethod;\n\t}\n\n\t//Block ID 101\n\tprivate parseSkeleton(blockID:number /*uint*/):void\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar skeleton:Skeleton = new Skeleton();\n\t\tthis.parseProperties(null); // Discard properties for now\n\n\t\tvar joints_parsed:number /*uint*/ = 0;\n\t\twhile (joints_parsed < num_joints) {\n\t\t\tvar joint:SkeletonJoint;\n\t\t\tvar ibp:Matrix3D;\n\t\t\t// Ignore joint id\n\t\t\tthis._newBlockBytes.readUnsignedShort();\n\t\t\tjoint = new SkeletonJoint();\n\t\t\tjoint.parentIndex = this._newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\n\t\t\tjoint.name = this.parseVarStr();\n\n\t\t\tibp = this.parseMatrix3D();\n\t\t\tjoint.inverseBindPose = ibp.rawData;\n\t\t\t// Ignore joint props/attributes for now\n\t\t\tthis.parseProperties(null);\n\t\t\tthis.parseUserAttributes();\n\t\t\tskeleton.joints.push(joint);\n\t\t\tjoints_parsed++;\n\t\t}\n\n\t\t// Discard attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(skeleton, name);\n\t\tthis._blocks[blockID].data = skeleton;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + skeleton.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\t//Block ID = 102\n\tprivate parseSkeletonPose(blockID:number /*uint*/):void\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tthis.parseProperties(null); // Ignore properties for now\n\n\t\tvar pose:SkeletonPose = new SkeletonPose();\n\n\t\tvar joints_parsed:number /*uint*/ = 0;\n\t\twhile (joints_parsed < num_joints) {\n\t\t\tvar joint_pose:JointPose;\n\t\t\tvar has_transform:number /*uint*/;\n\t\t\tjoint_pose = new JointPose();\n\t\t\thas_transform = this._newBlockBytes.readUnsignedByte();\n\t\t\tif (has_transform == 1) {\n\t\t\t\tvar mtx_data:Array<number> = this.parseMatrix43RawData();\n\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\n\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\n\t\t\t}\n\t\t\tjoints_parsed++;\n\t\t}\n\t\t// Skip attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(pose, name);\n\t\tthis._blocks[blockID].data = pose;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + pose.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\t//blockID 103\n\tprivate parseSkeletonAnimation(blockID:number /*uint*/):void\n\t{\n\t\tvar frame_dur:number;\n\t\tvar pose_addr:number /*uint*/;\n\t\tvar name:string = this.parseVarStr();\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tthis.parseProperties(null); // Ignore properties for now\n\n\t\tvar frames_parsed:number /*uint*/ = 0;\n\t\tvar returnedArray:Array<any>;\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tpose_addr = this._newBlockBytes.readUnsignedInt();\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\n\t\t\treturnedArray = this.getAssetByID(pose_addr, [SkeletonPose.assetType]);\n\t\t\tif (!returnedArray[0])\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SkeletonPose Frame # \" + frames_parsed + \" (ID = \" + pose_addr + \" ) for this SkeletonClipNode\");\n\t\t\telse\n\t\t\t\tclip.addFrame(<SkeletonPose> this._blocks[pose_addr].data, frame_dur);\n\t\t\tframes_parsed++;\n\t\t}\n\t\tif (clip.frames.length == 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not this SkeletonClipNode, because no Frames where set.\");\n\t\t\treturn;\n\t\t}\n\t\t// Ignore attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(clip, name);\n\t\tthis._blocks[blockID].data = clip;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + clip.name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\n\t//Block ID = 111 /  Block ID = 112\n\tprivate parseMeshPoseAnimation(blockID:number /*uint*/, poseOnly:boolean = false):void\n\t{\n\t\tvar num_frames:number /*uint*/ = 1;\n\t\tvar num_submeshes:number /*uint*/;\n\t\tvar frames_parsed:number /*uint*/;\n\t\tvar subMeshParsed:number /*uint*/;\n\t\tvar frame_dur:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar str_len:number;\n\t\tvar str_end:number;\n\t\tvar geometry:Geometry;\n\t\tvar subGeom:TriangleSubGeometry;\n\t\tvar idx:number /*int*/ = 0;\n\t\tvar clip:VertexClipNode = new VertexClipNode();\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar verts:Array<number>;\n\t\tvar num_Streams:number /*int*/ = 0;\n\t\tvar streamsParsed:number /*int*/ = 0;\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\n\t\tvar props:AWDProperties;\n\t\tvar thisGeo:Geometry;\n\t\tvar name:string = this.parseVarStr();\n\t\tvar geoAdress:number /*int*/ = this._newBlockBytes.readUnsignedInt();\n\t\tvar returnedArray:Array<any> = this.getAssetByID(geoAdress, [Geometry.assetType]);\n\t\tif (!returnedArray[0]) {\n\t\t\tthis._blocks[blockID].addError(\"Could not find the target-Geometry-Object \" + geoAdress + \" ) for this VertexClipNode\");\n\t\t\treturn;\n\t\t}\n\t\tvar uvs:Array<Array<number>> = this.getUVForVertexAnimation(geoAdress);\n\t\tif (!poseOnly)\n\t\t\tnum_frames = this._newBlockBytes.readUnsignedShort();\n\n\t\tnum_submeshes = this._newBlockBytes.readUnsignedShort();\n\t\tnum_Streams = this._newBlockBytes.readUnsignedShort();\n\t\tstreamsParsed = 0;\n\t\twhile (streamsParsed < num_Streams) {\n\t\t\tstreamtypes.push(this._newBlockBytes.readUnsignedShort());\n\t\t\tstreamsParsed++;\n\t\t}\n\t\tprops = this.parseProperties({1:AWDParser.BOOL, 2:AWDParser.BOOL});\n\n\t\tclip.looping = props.get(1, true);\n\t\tclip.stitchFinalFrame = props.get(2, false);\n\n\t\tframes_parsed = 0;\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\n\t\t\tgeometry = new Geometry();\n\t\t\tsubMeshParsed = 0;\n\t\t\twhile (subMeshParsed < num_submeshes) {\n\t\t\t\tstreamsParsed = 0;\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\n\t\t\t\twhile (streamsParsed < num_Streams) {\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\n\t\t\t\t\t\tindices = (<Geometry> returnedArray[1]).subGeometries[subMeshParsed].indices;\n\t\t\t\t\t\tverts = new Array<number>();\n\t\t\t\t\t\tidx = 0;\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo)\n\t\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo)\n\t\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo)\n\t\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsubGeom = new TriangleSubGeometry(true);\n\t\t\t\t\t\tsubGeom.updateIndices(indices);\n\t\t\t\t\t\tsubGeom.updatePositions(verts);\n\t\t\t\t\t\tsubGeom.updateUVs(uvs[subMeshParsed]);\n\t\t\t\t\t\tsubGeom.updateVertexNormals(null);\n\t\t\t\t\t\tsubGeom.updateVertexTangents(null);\n\t\t\t\t\t\tsubGeom.autoDeriveNormals = false;\n\t\t\t\t\t\tsubGeom.autoDeriveTangents = false;\n\t\t\t\t\t\tsubMeshParsed++;\n\t\t\t\t\t\tgeometry.addSubGeometry(subGeom)\n\t\t\t\t\t} else\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t\tstreamsParsed++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tclip.addFrame(geometry, frame_dur);\n\t\t\tframes_parsed++;\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(clip, name);\n\n\t\tthis._blocks[blockID].data = clip;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + (<Geometry> returnedArray[1]).name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\n\t//BlockID 113\n\tprivate parseVertexAnimationSet(blockID:number /*uint*/):void\n\t{\n\t\tvar poseBlockAdress:number /*int*/\n\t\tvar outputString:string = \"\";\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT16});\n\t\tvar frames_parsed:number /*uint*/ = 0;\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tposeBlockAdress = this._newBlockBytes.readUnsignedInt();\n\t\t\tvar returnedArray:Array<any> = this.getAssetByID(poseBlockAdress, [AnimationNodeBase.assetType]);\n\t\t\tif (!returnedArray[0])\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the AnimationClipNode Nr \" + frames_parsed + \" ( \" + poseBlockAdress + \" ) for this AnimationSet\");\n\t\t\telse {\n\t\t\t\tif (returnedArray[1] instanceof VertexClipNode)\n\t\t\t\t\tvertexFrames.push(returnedArray[1])\n\t\t\t\tif (returnedArray[1] instanceof SkeletonClipNode)\n\t\t\t\t\tskeletonFrames.push(returnedArray[1])\n\t\t\t}\n\t\t\tframes_parsed++;\n\t\t}\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\n\t\t\tthis._blocks[blockID].addError(\"Could not create this AnimationSet, because it contains no animations\");\n\t\t\treturn;\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\tif (vertexFrames.length > 0) {\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\n\t\t\tthis._pFinalizeAsset(newVertexAnimationSet, name);\n\t\t\tthis._blocks[blockID].data = newVertexAnimationSet;\n\t\t\tif (this._debug)\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames.toString());\n\n\t\t} else if (skeletonFrames.length > 0) {\n\t\t\treturnedArray = this.getAssetByID(poseBlockAdress, [AnimationNodeBase.assetType]);\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\n\t\t\tthis._pFinalizeAsset(newSkeletonAnimationSet, name);\n\t\t\tthis._blocks[blockID].data = newSkeletonAnimationSet;\n\t\t\tif (this._debug)\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames.toString());\n\n\t\t}\n\t}\n\n\t//BlockID 122\n\tprivate parseAnimatorSet(blockID:number /*uint*/):void\n\t{\n\t\tvar targetMesh:Mesh;\n\t\tvar animSetBlockAdress:number /*int*/\n\t\tvar targetAnimationSet:AnimationSetBase;\n\t\tvar outputString:string = \"\";\n\t\tvar name:string = this.parseVarStr();\n\t\tvar type:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR});\n\n\t\tanimSetBlockAdress = this._newBlockBytes.readUnsignedInt();\n\t\tvar targetMeshLength:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar meshAdresses:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tfor (var i:number /*int*/ = 0; i < targetMeshLength; i++)\n\t\t\tmeshAdresses.push(this._newBlockBytes.readUnsignedInt());\n\n\t\tvar activeState:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar autoplay:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\n\t\tthis.parseUserAttributes();\n\t\tthis.parseUserAttributes();\n\n\t\tvar returnedArray:Array<any>;\n\t\tvar targetMeshes:Array<Mesh> = new Array<Mesh>();\n\n\t\tfor (i = 0; i < meshAdresses.length; i++) {\n\t\t\treturnedArray = this.getAssetByID(meshAdresses[i], [Mesh.assetType]);\n\t\t\tif (returnedArray[0])\n\t\t\t\ttargetMeshes.push(<Mesh> returnedArray[1]);\n\t\t}\n\t\treturnedArray = this.getAssetByID(animSetBlockAdress, [AnimationSetBase.assetType]);\n\t\tif (!returnedArray[0]) {\n\t\t\tthis._blocks[blockID].addError(\"Could not find the AnimationSet ( \" + animSetBlockAdress + \" ) for this Animator\");;\n\t\t\treturn\n\t\t}\n\t\ttargetAnimationSet = <AnimationSetBase> returnedArray[1];\n\t\tvar thisAnimator:AnimatorBase;\n\t\tif (type == 1) {\n\n\t\t\treturnedArray = this.getAssetByID(props.get(1, 0), [Skeleton.assetType]);\n\t\t\tif (!returnedArray[0]) {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Skeleton ( \" + props.get(1, 0) + \" ) for this Animator\");\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, <Skeleton> returnedArray[1]);\n\n\t\t} else if (type == 2)\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\n\n\t\tthis._pFinalizeAsset(thisAnimator, name);\n\t\tthis._blocks[blockID].data = thisAnimator;\n\t\tfor (i = 0; i < targetMeshes.length; i++) {\n\t\t\tif (type == 1)\n\t\t\t\ttargetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\n\t\t\tif (type == 2)\n\t\t\t\ttargetMeshes[i].animator = (<VertexAnimator> thisAnimator);\n\n\t\t}\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + name);\n\t}\n\n\t// this functions reads and creates a EffectMethod\n\tprivate parseSharedMethodList(blockID:number):EffectMethodBase\n\t{\n\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar effectMethodReturn:EffectMethodBase;\n\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 104:this._propsNrType, 105:this._propsNrType, 106:this._propsNrType, 107:this._propsNrType, 201:AWDParser.UINT32, 202:AWDParser.UINT32, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 401:AWDParser.UINT8, 402:AWDParser.UINT8, 601:AWDParser.COLOR, 602:AWDParser.COLOR, 701:AWDParser.BOOL, 702:AWDParser.BOOL});\n\t\tvar targetID:number;\n\t\tvar returnedArray:Array<any>;\n\n\t\tswitch (methodType) {\n\t\t\t// Effect Methods\n\t\t\tcase 401: //ColorMatrix\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\n\t\t\t\tbreak;\n\t\t\tcase 402: //ColorTransform\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\n\t\t\t\tbreak;\n\t\t\tcase 403: //EnvMap\n\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\tconsole.log('ENV MAP', targetID);\n\n\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [ SingleCubeTexture.assetType ]);\n\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this EnvMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(<SingleCubeTexture> returnedArray[1], <number> props.get(101, 1));\n\t\t\t\ttargetID = props.get(2, 0);\n\t\t\t\tif (targetID > 0) {\n\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\n\t\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Mask-texture (ID = \" + targetID + \" ) for this EnvMapMethod\");\n\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <TextureBase> returnedArray[1];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 404: //LightMapMethod\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\n\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this LightMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(returnedArray[1], this.blendModeDic[props.get(401, 10)]); //usesecondaryUV not set\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureProjector.assetType]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this ProjectiveTextureMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 406: //RimLightMethod\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\n\t\t\t\tbreak;\n\t\t\tcase 407: //AlphaMaskMethod\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\n\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Alpha-texture (ID = \" + targetID + \" ) for this AlphaMaskMethod\");\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(returnedArray[1], props.get(701, false));\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this RefractionEnvMapMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 410: //FresnelEnvMapMethod\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [SingleCubeTexture.assetType]);\n\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this FresnelEnvMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(returnedArray[1], props.get(101, 1));\n\t\t\t\tbreak;\n\t\t\tcase 411: //FogMethod\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\treturn effectMethodReturn;\n\n\t}\n\n\tprivate parseUserAttributes():Object\n\t{\n\t\tvar attributes:Object;\n\t\tvar list_len:number;\n\t\tvar attibuteCnt:number;\n\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\n\n\t\tif (list_len > 0) {\n\n\t\t\tvar list_end:number;\n\n\t\t\tattributes = {};\n\n\t\t\tlist_end = this._newBlockBytes.position + list_len;\n\n\t\t\twhile (this._newBlockBytes.position < list_end) {\n\t\t\t\tvar ns_id:number;\n\t\t\t\tvar attr_key:string;\n\t\t\t\tvar attr_type:number;\n\t\t\t\tvar attr_len:number;\n\t\t\t\tvar attr_val:any;\n\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_key = this.parseVarStr();\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn attributes;\n\t\t\t\t}\n\n\t\t\t\tswitch (attr_type) {\n\t\t\t\t\tcase AWDParser.AWDSTRING:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.BOOL:\n\t\t\t\t\tcase AWDParser.UINT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.UINT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.UINT32:\n\t\t\t\t\tcase AWDParser.BADDR:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.FLOAT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.FLOAT64:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\n\t\t\t\t}\n\n\t\t\t\tattributes[attr_key] = attr_val;\n\t\t\t\tattibuteCnt += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\tprivate parseProperties(expected:Object):AWDProperties\n\t{\n\t\tvar list_end:number;\n\t\tvar list_len:number;\n\t\tvar propertyCnt:number = 0;\n\t\tvar props:AWDProperties = new AWDProperties();\n\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\n\t\tlist_end = this._newBlockBytes.position + list_len;\n\n\t\tif (expected) {\n\n\t\t\twhile (this._newBlockBytes.position < list_end) {\n\t\t\t\tvar len:number;\n\t\t\t\tvar key:number;\n\t\t\t\tvar type:number;\n\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn props;\n\t\t\t\t}\n\n\t\t\t\tif (expected.hasOwnProperty(key.toString())) {\n\t\t\t\t\ttype = expected[key];\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\n\t\t\t\t} else {\n\t\t\t\t\tthis._newBlockBytes.position += len;\n\t\t\t\t}\n\n\t\t\t\tpropertyCnt += 1;\n\n\t\t\t}\n\t\t} else {\n\t\t\tthis._newBlockBytes.position = list_end;\n\t\t}\n\n\t\treturn props;\n\n\t}\n\n\tprivate parseAttrValue(type:number, len:number):any\n\t{\n\t\tvar elem_len:number;\n\t\tvar read_func:Function;\n\n\t\tswitch (type) {\n\n\t\t\tcase AWDParser.BOOL:\n\t\t\tcase AWDParser.INT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.INT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.INT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT32:\n\t\t\tcase AWDParser.COLOR:\n\t\t\tcase AWDParser.BADDR:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.FLOAT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.FLOAT64:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.AWDSTRING:\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\n\n\t\t\tcase AWDParser.VECTOR2x1:\n\t\t\tcase AWDParser.VECTOR3x1:\n\t\t\tcase AWDParser.VECTOR4x1:\n\t\t\tcase AWDParser.MTX3x2:\n\t\t\tcase AWDParser.MTX3x3:\n\t\t\tcase AWDParser.MTX4x3:\n\t\t\tcase AWDParser.MTX4x4:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif (elem_len < len) {\n\t\t\tvar list:Array<any> = [];\n\t\t\tvar num_read:number = 0;\n\t\t\tvar num_elems:number = len/elem_len;\n\n\t\t\twhile (num_read < num_elems) {\n\t\t\t\tlist.push(read_func.apply(this._newBlockBytes)); // list.push(read_func());\n\t\t\t\tnum_read++;\n\t\t\t}\n\n\t\t\treturn list;\n\t\t} else {\n\n\t\t\tvar val:any = read_func.apply(this._newBlockBytes);//read_func();\n\t\t\treturn val;\n\t\t}\n\t}\n\n\tprivate parseHeader():void\n\t{\n\t\tvar flags:number;\n\t\tvar body_len:number;\n\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\n\n\t\tthis._version[0] = this._byteData.readUnsignedByte();\n\t\tthis._version[1] = this._byteData.readUnsignedByte();\n\n\t\tflags = this._byteData.readUnsignedShort(); // Parse bit flags\n\n\t\tthis._streaming = BitFlags.test(flags, BitFlags.FLAG1);\n\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG2);\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG3);\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG4);\n\t\t}\n\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\n\n\t\t// set storagePrecision types\n\t\tthis._geoNrType = AWDParser.FLOAT32;\n\n\t\tif (this._accuracyGeo) {\n\t\t\tthis._geoNrType = AWDParser.FLOAT64;\n\t\t}\n\n\t\tthis._matrixNrType = AWDParser.FLOAT32;\n\n\t\tif (this._accuracyMatrix) {\n\t\t\tthis._matrixNrType = AWDParser.FLOAT64;\n\t\t}\n\n\t\tthis._propsNrType = AWDParser.FLOAT32;\n\n\t\tif (this._accuracyProps) {\n\t\t\tthis._propsNrType = AWDParser.FLOAT64;\n\t\t}\n\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._version[0] + \" - \" + this._version[1]);\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\n\t\t}\n\n\t\t// Check file integrity\n\t\tbody_len = this._byteData.readUnsignedInt();\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable()) {\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\n\t\t}\n\n\t}\n\t// Helper - functions\n\tprivate getUVForVertexAnimation(meshID:number /*uint*/):Array<Array<number>>\n\t{\n\t\tif (this._blocks[meshID].data instanceof Mesh)\n\t\t\tmeshID = this._blocks[meshID].geoID;\n\t\tif (this._blocks[meshID].uvsForVertexAnimation)\n\t\t\treturn this._blocks[meshID].uvsForVertexAnimation;\n\t\tvar geometry:Geometry = (<Geometry> this._blocks[meshID].data);\n\t\tvar geoCnt:number /*int*/ = 0;\n\t\tvar ud:Array<number>;\n\t\tvar uStride:number /*uint*/;\n\t\tvar uOffs:number /*uint*/;\n\t\tvar numPoints:number /*uint*/;\n\t\tvar i:number /*int*/;\n\t\tvar newUvs:Array<number>;\n\t\tvar sub_geom:TriangleSubGeometry;\n\t\tthis._blocks[meshID].uvsForVertexAnimation = new Array<Array<number>>();\n\t\twhile (geoCnt < geometry.subGeometries.length) {\n\t\t\tnewUvs = new Array<number>();\n\t\t\tsub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\n\t\t\tnumPoints = sub_geom.numVertices;\n\t\t\tud = sub_geom.uvs;\n\t\t\tuStride = sub_geom.getStride(TriangleSubGeometry.UV_DATA);\n\t\t\tuOffs = sub_geom.getOffset(TriangleSubGeometry.UV_DATA);\n\t\t\tfor (i = 0; i < numPoints; i++) {\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 0]);\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 1]);\n\t\t\t}\n\t\t\tthis._blocks[meshID].uvsForVertexAnimation.push(newUvs);\n\t\t\tgeoCnt++;\n\t\t}\n\t\treturn this._blocks[meshID].uvsForVertexAnimation;\n\t}\n\n\tprivate parseVarStr():string\n\t{\n\n\t\tvar len:number = this._newBlockBytes.readUnsignedShort();\n\t\treturn this._newBlockBytes.readUTFBytes(len);\n\t}\n\n\tprivate getAssetByID(assetID:number, assetTypesToGet:Array<string>):Array<any>\n\t{\n\t\tvar returnArray:Array<any> = new Array<any>();\n\t\tvar typeCnt:number = 0;\n\t\tif (assetID > 0) {\n\t\t\tif (this._blocks[assetID]) {\n\t\t\t\tif (this._blocks[assetID].data) {\n\t\t\t\t\twhile (typeCnt < assetTypesToGet.length) {\n\n\t\t\t\t\t\tvar iasset:IAsset = <IAsset> this._blocks[assetID].data;\n\n\t\t\t\t\t\tif (iasset.assetType == assetTypesToGet[typeCnt]) {\n\t\t\t\t\t\t\t//if the right assetType was found\n\t\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == SingleCubeTexture.assetType)) {\n\t\t\t\t\t\t\t\tif (this._blocks[assetID].data instanceof SingleCubeTexture) {\n\t\t\t\t\t\t\t\t\treturnArray.push(true);\n\t\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\n\t\t\t\t\t\t\t\t\treturn returnArray;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == Single2DTexture.assetType)) {\n\t\t\t\t\t\t\t\tif (this._blocks[assetID].data instanceof Single2DTexture) {\n\t\t\t\t\t\t\t\t\treturnArray.push(true);\n\t\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\n\t\t\t\t\t\t\t\t\treturn returnArray;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturnArray.push(true);\n\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\n\t\t\t\t\t\t\t\treturn returnArray;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//if ((assetTypesToGet[typeCnt] == Geometry.assetType) && (IAsset(_blocks[assetID].data).assetType == Mesh.assetType)) {\n\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == Geometry.assetType) && (iasset.assetType == Mesh.assetType)) {\n\n\t\t\t\t\t\t\tvar mesh:Mesh = <Mesh> this._blocks[assetID].data\n\n\t\t\t\t\t\t\treturnArray.push(true);\n\t\t\t\t\t\t\treturnArray.push(mesh.geometry);\n\t\t\t\t\t\t\treturn returnArray;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttypeCnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// if the has not returned anything yet, the asset is not found, or the found asset is not the right type.\n\t\treturnArray.push(false);\n\t\treturnArray.push(this.getDefaultAsset(assetTypesToGet[0]));\n\t\treturn returnArray;\n\t}\n\tprivate getDefaultAsset(assetType:string):IAsset\n\t{\n\t\tswitch (true) {\n\t\t\tcase (assetType == SingleCubeTexture.assetType):\n\t\t\t\treturn this.getDefaultCubeTexture();\n\t\t\t\tbreak;\n\t\t\tcase (assetType == Single2DTexture.assetType):\n\t\t\t\treturn DefaultMaterialManager.getDefaultTexture();\n\t\t\t\tbreak;\n\t\t\tcase (assetType == MaterialBase.assetType):\n\t\t\t\treturn DefaultMaterialManager.getDefaultMaterial();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getDefaultCubeTexture():IAsset\n\t{\n\t\tif (!this._defaultCubeTexture) {\n\t\t\tvar defaultBitmap:BitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\t\tvar bitmapImageCube = new BitmapImageCube(defaultBitmap.width);\n\n\t\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\t\tbitmapImageCube.draw(i, defaultBitmap);\n\n\n\t\t\tthis._defaultCubeTexture = new SingleCubeTexture(bitmapImageCube);\n\t\t\tthis._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t\t}\n\n\t\treturn <IAsset> this._defaultCubeTexture;\n\t}\n\n\tprivate readNumber(precision:boolean = false):number\n\t{\n\t\tif (precision)\n\t\t\treturn this._newBlockBytes.readDouble();\n\t\treturn this._newBlockBytes.readFloat();\n\n\t}\n\n\tprivate parseMatrix3D():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\n\t}\n\n\tprivate parseMatrix32RawData():Array<number>\n\t{\n\t\tvar i:number;\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\n\t\tfor (i = 0; i < 6; i++) {\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\n\t\t}\n\n\t\treturn mtx_raw;\n\t}\n\n\tprivate parseMatrix43RawData():Array<number>\n\t{\n\t\tvar mtx_raw:Array<number> = new Array<number>(16);\n\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[3] = 0.0;\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[7] = 0.0;\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[11] = 0.0;\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[15] = 1.0;\n\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\n\n\t\tif (isNaN(mtx_raw[0])) {\n\t\t\tmtx_raw[0] = 1;\n\t\t\tmtx_raw[1] = 0;\n\t\t\tmtx_raw[2] = 0;\n\t\t\tmtx_raw[4] = 0;\n\t\t\tmtx_raw[5] = 1;\n\t\t\tmtx_raw[6] = 0;\n\t\t\tmtx_raw[8] = 0;\n\t\t\tmtx_raw[9] = 0;\n\t\t\tmtx_raw[10] = 1;\n\t\t\tmtx_raw[12] = 0;\n\t\t\tmtx_raw[13] = 0;\n\t\t\tmtx_raw[14] = 0;\n\n\t\t}\n\n\t\treturn mtx_raw;\n\t}\n\n}\n\nexport = AWDParser;\n\nclass AWDBlock\n{\n\tpublic id:number;\n\tpublic name:string;\n\tpublic data:any;\n\tpublic len:any;\n\tpublic geoID:number;\n\tpublic extras:Object;\n\tpublic bytes:ByteArray;\n\tpublic errorMessages:Array<string>;\n\tpublic uvsForVertexAnimation:Array<Array<number>>;\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic dispose()\n\t{\n\n\t\tthis.id = null;\n\t\tthis.bytes = null;\n\t\tthis.errorMessages = null;\n\t\tthis.uvsForVertexAnimation = null;\n\n\t}\n\n\tpublic addError(errorMsg:string):void\n\t{\n\t\tif (!this.errorMessages)\n\t\t\tthis.errorMessages = new Array<string>();\n\n\t\tthis.errorMessages.push(errorMsg);\n\t}\n}\n\nclass AWDProperties\n{\n\tpublic set(key:number, value:any):void\n\t{\n\t\tthis[ key.toString() ] = value;\n\t}\n\n\tpublic get(key:number, fallback:any):any\n\t{\n\t\tif (this.hasOwnProperty(key.toString())) {\n\t\t\treturn this[key.toString()];\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n}\n\n/**\n *\n */\nclass BitFlags\n{\n\tpublic static FLAG1:number = 1;\n\tpublic static FLAG2:number = 2;\n\tpublic static FLAG3:number = 4;\n\tpublic static FLAG4:number = 8;\n\tpublic static FLAG5:number = 16;\n\tpublic static FLAG6:number = 32;\n\tpublic static FLAG7:number = 64;\n\tpublic static FLAG8:number = 128;\n\tpublic static FLAG9:number = 256;\n\tpublic static FLAG10:number = 512;\n\tpublic static FLAG11:number = 1024;\n\tpublic static FLAG12:number = 2048;\n\tpublic static FLAG13:number = 4096;\n\tpublic static FLAG14:number = 8192;\n\tpublic static FLAG15:number = 16384;\n\tpublic static FLAG16:number = 32768;\n\n\tpublic static test(flags:number, testFlag:number):boolean\n\t{\n\t\treturn (flags & testFlag) == testFlag;\n\t}\n}\n",
    "import BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\n\n/**\n * MD2Parser provides a parser for the MD2 data type.\n */\nclass MD2Parser extends ParserBase\n{\n\tpublic static FPS:number /*int*/ = 6;\n\n\tprivate _clipNodes:Object = new Object();\n\tprivate _byteData:ByteArray;\n\tprivate _startedParsing:boolean;\n\tprivate _parsedHeader:boolean;\n\tprivate _parsedUV:boolean;\n\tprivate _parsedFaces:boolean;\n\tprivate _parsedFrames:boolean;\n\n\tprivate _ident:number /*uint*/;\n\tprivate _version:number /*uint*/;\n\tprivate _skinWidth:number /*uint*/;\n\tprivate _skinHeight:number /*uint*/;\n\t//private _frameSize : number /*uint*/;\n\tprivate _numSkins:number /*uint*/;\n\tprivate _numVertices:number /*uint*/;\n\tprivate _numST:number /*uint*/;\n\tprivate _numTris:number /*uint*/;\n\t//private _numGlCmds : number /*uint*/;\n\tprivate _numFrames:number /*uint*/;\n\tprivate _offsetSkins:number /*uint*/;\n\tprivate _offsetST:number /*uint*/;\n\tprivate _offsetTris:number /*uint*/;\n\tprivate _offsetFrames:number /*uint*/;\n\t//private _offsetGlCmds : number /*uint*/;\n\tprivate _offsetEnd:number /*uint*/;\n\n\tprivate _uvIndices:Array<number>;\n\tprivate _indices:Array<number> /*uint*/;\n\tprivate _vertIndices:Array<number>;\n\n\t// the current subgeom being built\n\tprivate _animationSet:VertexAnimationSet = new VertexAnimationSet();\n\tprivate _firstSubGeom:TriangleSubGeometry;\n\tprivate _uvs:Array<number>;\n\tprivate _finalUV:Array<number>;\n\n\tprivate _materialNames:Array<string>;\n\tprivate _textureType:string;\n\tprivate _ignoreTexturePath:boolean;\n\tprivate _mesh:Mesh;\n\tprivate _geometry:Geometry;\n\n\tprivate materialFinal:boolean = false;\n\tprivate geoCreated:boolean = false;\n\n\t/**\n\t * Creates a new MD2Parser object.\n\t * @param textureType The extension of the texture (e.g. jpg/png/...)\n\t * @param ignoreTexturePath If true, the path of the texture is ignored\n\t */\n\tconstructor(textureType:string = \"jpg\", ignoreTexturePath:boolean = true)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\t\tthis._textureType = textureType;\n\t\tthis._ignoreTexturePath = ignoreTexturePath;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md2\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn (ParserUtils.toString(data, 4) == 'IDP2');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif (resourceDependency.assets.length != 1)\n\t\t\treturn;\n\n\t\tvar asset:Single2DTexture = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\n\n\t\tif (asset) {\n\t\t\tvar material:MethodMaterial = new MethodMaterial(asset);\n\n\t\t\tif (this.materialMode >= 2)\n\t\t\t\tmaterial.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\t\tmaterial.name = this._mesh.material.name;\n\t\t\tthis._mesh.material = material;\n\t\t\tthis._pFinalizeAsset(material);\n\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\n\t\t\tthis._pFinalizeAsset(this._mesh);\n\t\t}\n\t\tthis.materialFinal = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\t// apply system default\n\t\tif (this.materialMode < 2) {\n\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\n\t\t} else {\n\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\n\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\n\t\t}\n\n\t\t//add to the content property\n\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\tthis._pFinalizeAsset(this._mesh.geometry);\n\t\tthis._pFinalizeAsset(this._mesh);\n\t\tthis.materialFinal = true;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (!this._startedParsing) {\n\t\t\tthis._byteData = this._pGetByteData();\n\t\t\tthis._startedParsing = true;\n\n\t\t\t// Reset bytearray read position (which may have been\n\t\t\t// moved forward by the supportsData() function.)\n\t\t\tthis._byteData.position = 0;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\tif (!this._parsedHeader) {\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\n\n\t\t\t\t// TODO: Create a mesh only when encountered (if it makes sense\n\t\t\t\t// for this file format) and return it using this._pFinalizeAsset()\n\t\t\t\tthis._geometry = new Geometry();\n\t\t\t\tthis._mesh = new Mesh(this._geometry, null);\n\t\t\t\tif (this.materialMode < 2) {\n\t\t\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\n\t\t\t\t} else {\n\t\t\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\n\t\t\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t}\n\n\t\t\t\t//_geometry.animation = new VertexAnimation(2, VertexAnimationMode.ABSOLUTE);\n\t\t\t\t//_animator = new VertexAnimator(VertexAnimationState(_mesh.animationState));\n\n\t\t\t\t// Parse header and decompress body\n\t\t\t\tthis.parseHeader();\n\t\t\t\tthis.parseMaterialNames();\n\t\t\t} else if (!this._parsedUV) {\n\t\t\t\tthis.parseUV();\n\t\t\t} else if (!this._parsedFaces) {\n\t\t\t\tthis.parseFaces();\n\t\t\t} else if (!this._parsedFrames) {\n\t\t\t\tthis.parseFrames();\n\t\t\t} else if ((this.geoCreated) && (this.materialFinal)) {\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t} else if (!this.geoCreated) {\n\t\t\t\tthis.geoCreated = true;\n\t\t\t\t//create default subgeometry\n\t\t\t\tthis._geometry.addSubGeometry(this._firstSubGeom.clone());\n\t\t\t\t// Force name to be chosen by this._pFinalizeAsset()\n\t\t\t\tthis._mesh.name = \"\";\n\t\t\t\tif (this.materialFinal) {\n\t\t\t\t\t//add to the content property\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh);\n\t\t\t\t}\n\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t}\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\t/**\n\t * Reads in all that MD2 Header data that is declared as private variables.\n\t * I know its a lot, and it looks ugly, but only way to do it in Flash\n\t */\n\tprivate parseHeader()\n\t{\n\t\tthis._ident = this._byteData.readInt();\n\t\tthis._version = this._byteData.readInt();\n\t\tthis._skinWidth = this._byteData.readInt();\n\t\tthis._skinHeight = this._byteData.readInt();\n\t\t//skip this._frameSize\n\t\tthis._byteData.readInt();\n\t\tthis._numSkins = this._byteData.readInt();\n\t\tthis._numVertices = this._byteData.readInt();\n\t\tthis._numST = this._byteData.readInt();\n\t\tthis._numTris = this._byteData.readInt();\n\t\t//skip this._numGlCmds\n\t\tthis._byteData.readInt();\n\t\tthis._numFrames = this._byteData.readInt();\n\t\tthis._offsetSkins = this._byteData.readInt();\n\t\tthis._offsetST = this._byteData.readInt();\n\t\tthis._offsetTris = this._byteData.readInt();\n\t\tthis._offsetFrames = this._byteData.readInt();\n\t\t//skip this._offsetGlCmds\n\t\tthis._byteData.readInt();\n\t\tthis._offsetEnd = this._byteData.readInt();\n\n\t\tthis._parsedHeader = true;\n\t}\n\n\t/**\n\t * Parses the file names for the materials.\n\t */\n\tprivate parseMaterialNames()\n\t{\n\t\tvar url:string;\n\t\tvar name:string;\n\t\tvar extIndex:number /*int*/;\n\t\tvar slashIndex:number /*int*/;\n\t\tthis._materialNames = new Array<string>();\n\t\tthis._byteData.position = this._offsetSkins;\n\n\t\tvar regExp:RegExp = new RegExp(\"[^a-zA-Z0-9\\\\_\\/.]\", \"g\");\n\t\tfor (var i:number /*uint*/ = 0; i < this._numSkins; ++i) {\n\t\t\tname = this._byteData.readUTFBytes(64);\n\t\t\tname = name.replace(regExp, \"\");\n\t\t\textIndex = name.lastIndexOf(\".\");\n\t\t\tif (this._ignoreTexturePath)\n\t\t\t\tslashIndex = name.lastIndexOf(\"/\");\n\t\t\tif (name.toLowerCase().indexOf(\".jpg\") == -1 && name.toLowerCase().indexOf(\".png\") == -1) {\n\t\t\t\tname = name.substring(slashIndex + 1, extIndex);\n\t\t\t\turl = name + \".\" + this._textureType;\n\t\t\t} else {\n\t\t\t\turl = name;\n\t\t\t}\n\n\t\t\tthis._materialNames[i] = name;\n\n\t\t\t// only support 1 skin TODO: really?\n\t\t\tif (this.dependencies.length == 0)\n\t\t\t\tthis._pAddDependency(name, new URLRequest(url));\n\t\t}\n\n\t\tif (this._materialNames.length > 0)\n\t\t\tthis._mesh.material.name = this._materialNames[0]; else\n\t\t\tthis.materialFinal = true;\n\t}\n\n\t/**\n\t * Parses the uv data for the mesh.\n\t */\n\tprivate parseUV()\n\t{\n\t\tvar j:number /*uint*/ = 0;\n\n\t\tthis._uvs = new Array<number>(this._numST*2);\n\t\tthis._byteData.position = this._offsetST;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numST; i++) {\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinWidth;\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinHeight;\n\t\t}\n\n\t\tthis._parsedUV = true;\n\t}\n\n\t/**\n\t * Parses unique indices for the faces.\n\t */\n\tprivate parseFaces()\n\t{\n\t\tvar a:number /*uint*/, b:number /*uint*/, c:number /*uint*/, ta:number /*uint*/, tb:number /*uint*/, tc:number /*uint*/;\n\t\tvar i:number /*uint*/;\n\n\t\tthis._vertIndices = new Array<number>();\n\t\tthis._uvIndices = new Array<number>();\n\t\tthis._indices = new Array<number>() /*uint*/;\n\n\t\tthis._byteData.position = this._offsetTris;\n\n\t\tfor (i = 0; i < this._numTris; i++) {\n\t\t\t//collect vertex indices\n\t\t\ta = this._byteData.readUnsignedShort();\n\t\t\tb = this._byteData.readUnsignedShort();\n\t\t\tc = this._byteData.readUnsignedShort();\n\n\t\t\t//collect uv indices\n\t\t\tta = this._byteData.readUnsignedShort();\n\t\t\ttb = this._byteData.readUnsignedShort();\n\t\t\ttc = this._byteData.readUnsignedShort();\n\n\t\t\tthis.addIndex(a, ta);\n\t\t\tthis.addIndex(b, tb);\n\t\t\tthis.addIndex(c, tc);\n\t\t}\n\n\t\tvar len:number /*uint*/ = this._uvIndices.length;\n\t\tthis._finalUV = new Array<number>(len*2);\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._finalUV[i << 1] = this._uvs[this._uvIndices[i] << 1];\n\t\t\tthis._finalUV[(i << 1) + 1] = this._uvs[(this._uvIndices[i] << 1) + 1];\n\t\t}\n\n\t\tthis._parsedFaces = true;\n\t}\n\n\t/**\n\t * Adds a face index to the list if it doesn't exist yet, based on vertexIndex and uvIndex, and adds the\n\t * corresponding vertex and uv data in the correct location.\n\t * @param vertexIndex The original index in the vertex list.\n\t * @param uvIndex The original index in the uv list.\n\t */\n\tprivate addIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/)\n\t{\n\t\tvar index:number /*int*/ = this.findIndex(vertexIndex, uvIndex);\n\n\t\tif (index == -1) {\n\t\t\tthis._indices.push(this._vertIndices.length);\n\t\t\tthis._vertIndices.push(vertexIndex);\n\t\t\tthis._uvIndices.push(uvIndex);\n\t\t} else\n\t\t\tthis._indices.push(index);\n\t}\n\n\t/**\n\t * Finds the final index corresponding to the original MD2's vertex and uv indices. Returns -1 if it wasn't added yet.\n\t * @param vertexIndex The original index in the vertex list.\n\t * @param uvIndex The original index in the uv list.\n\t * @return The index of the final mesh corresponding to the original vertex and uv index. -1 if it doesn't exist yet.\n\t */\n\tprivate findIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/):number /*int*/\n\t{\n\t\tvar len:number /*uint*/ = this._vertIndices.length;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tif (this._vertIndices[i] == vertexIndex && this._uvIndices[i] == uvIndex)\n\t\t\t\treturn i;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Parses all the frame geometries.\n\t */\n\tprivate parseFrames()\n\t{\n\t\tvar sx:number, sy:number, sz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar geometry:Geometry;\n\t\tvar subGeom:TriangleSubGeometry;\n\t\tvar vertLen:number /*uint*/ = this._vertIndices.length;\n\t\tvar fvertices:Array<number>;\n\t\tvar tvertices:Array<number>;\n\t\tvar i:number /*uint*/, j:number /*int*/, k:number /*uint*/;\n\t\t//var ch : number /*uint*/;\n\t\tvar name:string = \"\";\n\t\tvar prevClip:VertexClipNode = null;\n\n\t\tthis._byteData.position = this._offsetFrames;\n\n\t\tfor (i = 0; i < this._numFrames; i++) {\n\n\t\t\ttvertices = new Array<number>();\n\t\t\tfvertices = new Array<number>(vertLen*3);\n\n\t\t\tsx = this._byteData.readFloat();\n\t\t\tsy = this._byteData.readFloat();\n\t\t\tsz = this._byteData.readFloat();\n\n\t\t\ttx = this._byteData.readFloat();\n\t\t\tty = this._byteData.readFloat();\n\t\t\ttz = this._byteData.readFloat();\n\n\t\t\tname = this.readFrameName();\n\n\t\t\t// Note, the extra data.position++ in the for loop is there\n\t\t\t// to skip over a byte that holds the \"vertex normal index\"\n\t\t\tfor (j = 0; j < this._numVertices; j++, this._byteData.position++)\n\t\t\t\ttvertices.push(sx*this._byteData.readUnsignedByte() + tx, sy*this._byteData.readUnsignedByte() + ty, sz*this._byteData.readUnsignedByte() + tz);\n\n\t\t\tk = 0;\n\t\t\tfor (j = 0; j < vertLen; j++) {\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3];\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 2];\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 1];\n\t\t\t}\n\n\t\t\tsubGeom = new TriangleSubGeometry(true);\n\n\t\t\tif (this._firstSubGeom == null)\n\t\t\t\tthis._firstSubGeom = subGeom;\n\n\t\t\tgeometry = new Geometry();\n\t\t\tgeometry.addSubGeometry(subGeom);\n\n\t\t\tsubGeom.updateIndices(this._indices);\n\t\t\tsubGeom.updatePositions(fvertices);\n\t\t\tsubGeom.updateUVs(this._finalUV);\n\t\t\tsubGeom.vertexNormals;\n\t\t\tsubGeom.vertexTangents;\n\t\t\tsubGeom.autoDeriveNormals = false;\n\t\t\tsubGeom.autoDeriveTangents = false;\n\n\t\t\tvar clip:VertexClipNode = this._clipNodes[name];\n\n\t\t\tif (!clip) {\n\t\t\t\t// If another sequence was parsed before this one, starting\n\t\t\t\t// a new state means the previous one is complete and can\n\t\t\t\t// hence be finalized.\n\t\t\t\tif (prevClip) {\n\t\t\t\t\tthis._pFinalizeAsset(prevClip);\n\t\t\t\t\tthis._animationSet.addAnimation(prevClip);\n\t\t\t\t}\n\n\t\t\t\tclip = new VertexClipNode();\n\t\t\t\tclip.name = name;\n\t\t\t\tclip.stitchFinalFrame = true;\n\n\t\t\t\tthis._clipNodes[name] = clip;\n\n\t\t\t\tprevClip = clip;\n\t\t\t}\n\t\t\tclip.addFrame(geometry, 1000/MD2Parser.FPS);\n\t\t}\n\n\t\t// Finalize the last state\n\t\tif (prevClip) {\n\t\t\tthis._pFinalizeAsset(prevClip);\n\t\t\tthis._animationSet.addAnimation(prevClip);\n\t\t}\n\n\t\t// Force this._pFinalizeAsset() to decide name\n\t\tthis._pFinalizeAsset(this._animationSet);\n\n\t\tthis._parsedFrames = true;\n\t}\n\n\tprivate readFrameName():string\n\t{\n\t\tvar name:string = \"\";\n\t\tvar k:number /*uint*/ = 0;\n\t\tfor (var j:number /*uint*/ = 0; j < 16; j++) {\n\t\t\tvar ch:number /*uint*/ = this._byteData.readUnsignedByte();\n\n\t\t\tif (Math.floor(ch) > 0x39 && Math.floor(ch) <= 0x7A && k == 0)\n\t\t\t\tname += String.fromCharCode(ch);\n\n\t\t\tif (Math.floor(ch) >= 0x30 && Math.floor(ch) <= 0x39)\n\t\t\t\tk++;\n\t\t}\n\t\treturn name;\n\t}\n}\n\nexport = MD2Parser;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\n\n/**\n * MD5AnimParser provides a parser for the md5anim data type, providing an animation sequence for the md5 format.\n *\n * todo: optimize\n */\nclass MD5AnimParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\n\tpublic static NUM_FRAMES_TOKEN:string = \"numFrames\";\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\n\tpublic static FRAME_RATE_TOKEN:string = \"frameRate\";\n\tpublic static NUM_ANIMATED_COMPONENTS_TOKEN:string = \"numAnimatedComponents\";\n\n\tpublic static HIERARCHY_TOKEN:string = \"hierarchy\";\n\tpublic static BOUNDS_TOKEN:string = \"bounds\";\n\tpublic static BASE_FRAME_TOKEN:string = \"baseframe\";\n\tpublic static FRAME_TOKEN:string = \"frame\";\n\n\tpublic static COMMENT_TOKEN:string = \"//\";\n\n\tprivate _parseIndex:number /*int*/ = 0;\n\tprivate _reachedEOF:boolean;\n\tprivate _line:number /*int*/ = 0;\n\tprivate _charLineIndex:number /*int*/ = 0;\n\tprivate _version:number /*int*/;\n\tprivate _frameRate:number /*int*/;\n\tprivate _numFrames:number /*int*/;\n\tprivate _numJoints:number /*int*/;\n\tprivate _numAnimatedComponents:number /*int*/;\n\n\tprivate _hierarchy:Array<HierarchyData>;\n\tprivate _bounds:Array<BoundsData>;\n\tprivate _frameData:Array<FrameData>;\n\tprivate _baseFrameData:Array<BaseFrameData>;\n\n\tprivate _rotationQuat:Quaternion;\n\tprivate _clip:SkeletonClipNode;\n\n\t/**\n\t * Creates a new MD5AnimParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._rotationQuat = new Quaternion();\n\t\tvar t1:Quaternion = new Quaternion();\n\t\tvar t2:Quaternion = new Quaternion();\n\n\t\tt1.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\n\t\tt2.fromAxisAngle(Vector3D.Y_AXIS, -Math.PI*.5);\n\n\t\tthis._rotationQuat.multiply(t2, t1);\n\n\t\tif (additionalRotationAxis) {\n\t\t\tthis._rotationQuat.multiply(t2, t1);\n\t\t\tt1.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\n\t\t\tthis._rotationQuat.multiply(t1, this._rotationQuat);\n\t\t}\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md5anim\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar token:string;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\ttoken = this.getNextToken();\n\t\t\tswitch (token) {\n\t\t\t\tcase MD5AnimParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"\":\n\t\t\t\t\t// can occur at the end of a file\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.VERSION_TOKEN:\n\t\t\t\t\tthis._version = this.getNextInt();\n\t\t\t\t\tif (this._version != 10)\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.COMMAND_LINE_TOKEN:\n\t\t\t\t\tthis.parseCMD();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_FRAMES_TOKEN:\n\t\t\t\t\tthis._numFrames = this.getNextInt();\n\t\t\t\t\tthis._bounds = new Array<BoundsData>();\n\t\t\t\t\tthis._frameData = new Array<FrameData>();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_JOINTS_TOKEN:\n\t\t\t\t\tthis._numJoints = this.getNextInt();\n\t\t\t\t\tthis._hierarchy = new Array<HierarchyData>(this._numJoints);\n\t\t\t\t\tthis._baseFrameData = new Array<BaseFrameData>(this._numJoints);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.FRAME_RATE_TOKEN:\n\t\t\t\t\tthis._frameRate = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_ANIMATED_COMPONENTS_TOKEN:\n\t\t\t\t\tthis._numAnimatedComponents = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.HIERARCHY_TOKEN:\n\t\t\t\t\tthis.parseHierarchy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.BOUNDS_TOKEN:\n\t\t\t\t\tthis.parseBounds();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.BASE_FRAME_TOKEN:\n\t\t\t\t\tthis.parseBaseFrame();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.FRAME_TOKEN:\n\t\t\t\t\tthis.parseFrame();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (!this._reachedEOF)\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\n\t\t\t}\n\n\t\t\tif (this._reachedEOF) {\n\t\t\t\tthis._clip = new SkeletonClipNode();\n\t\t\t\tthis.translateClip();\n\t\t\t\tthis._pFinalizeAsset(this._clip);\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t}\n\t\t}\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\t/**\n\t * Converts all key frame data to an SkinnedAnimationSequence.\n\t */\n\tprivate translateClip():void\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < this._numFrames; ++i)\n\t\t\tthis._clip.addFrame(this.translatePose(this._frameData[i]), 1000/this._frameRate);\n\t}\n\n\t/**\n\t * Converts a single key frame data to a SkeletonPose.\n\t * @param frameData The actual frame data.\n\t * @return A SkeletonPose containing the frame data's pose.\n\t */\n\tprivate translatePose(frameData:FrameData):SkeletonPose\n\t{\n\t\tvar hierarchy:HierarchyData;\n\t\tvar pose:JointPose;\n\t\tvar base:BaseFrameData;\n\t\tvar flags:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar translate:Vector3D = new Vector3D();\n\t\tvar orientation:Quaternion = new Quaternion();\n\t\tvar components:Array<number> = frameData.components;\n\t\tvar skelPose:SkeletonPose = new SkeletonPose();\n\t\tvar jointPoses:Array<JointPose> = skelPose.jointPoses;\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numJoints; ++i) {\n\t\t\tj = 0;\n\t\t\tpose = new JointPose();\n\t\t\thierarchy = this._hierarchy[i];\n\t\t\tbase = this._baseFrameData[i];\n\t\t\tflags = hierarchy.flags;\n\t\t\ttranslate.x = base.position.x;\n\t\t\ttranslate.y = base.position.y;\n\t\t\ttranslate.z = base.position.z;\n\t\t\torientation.x = base.orientation.x;\n\t\t\torientation.y = base.orientation.y;\n\t\t\torientation.z = base.orientation.z;\n\n\t\t\tif (flags & 1)\n\t\t\t\ttranslate.x = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 2)\n\t\t\t\ttranslate.y = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 4)\n\t\t\t\ttranslate.z = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 8)\n\t\t\t\torientation.x = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 16)\n\t\t\t\torientation.y = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 32)\n\t\t\t\torientation.z = components[hierarchy.startIndex + (j++)];\n\n\t\t\tvar w:number = 1 - orientation.x*orientation.x - orientation.y*orientation.y - orientation.z*orientation.z;\n\t\t\torientation.w = w < 0? 0 : -Math.sqrt(w);\n\n\t\t\tif (hierarchy.parentIndex < 0) {\n\t\t\t\tpose.orientation.multiply(this._rotationQuat, orientation);\n\t\t\t\tpose.translation = this._rotationQuat.rotatePoint(translate);\n\t\t\t} else {\n\t\t\t\tpose.orientation.copyFrom(orientation);\n\t\t\t\tpose.translation.x = translate.x;\n\t\t\t\tpose.translation.y = translate.y;\n\t\t\t\tpose.translation.z = translate.z;\n\t\t\t}\n\t\t\tpose.orientation.y = -pose.orientation.y;\n\t\t\tpose.orientation.z = -pose.orientation.z;\n\t\t\tpose.translation.x = -pose.translation.x;\n\n\t\t\tjointPoses[i] = pose;\n\t\t}\n\n\t\treturn skelPose;\n\t}\n\n\t/**\n\t * Parses the skeleton's hierarchy data.\n\t */\n\tprivate parseHierarchy():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:HierarchyData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new HierarchyData();\n\t\t\tdata.name = this.parseLiteralstring();\n\t\t\tdata.parentIndex = this.getNextInt();\n\t\t\tdata.flags = this.getNextInt();\n\t\t\tdata.startIndex = this.getNextInt();\n\t\t\tthis._hierarchy[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses frame bounds.\n\t */\n\tprivate parseBounds():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:BoundsData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new BoundsData();\n\t\t\tdata.min = this.parseVector3D();\n\t\t\tdata.max = this.parseVector3D();\n\t\t\tthis._bounds[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses the base frame.\n\t */\n\tprivate parseBaseFrame():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:BaseFrameData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new BaseFrameData();\n\t\t\tdata.position = this.parseVector3D();\n\t\t\tdata.orientation = this.parseQuaternion();\n\t\t\tthis._baseFrameData[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses a single frame.\n\t */\n\tprivate parseFrame():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:FrameData;\n\t\tvar token:string;\n\t\tvar frameIndex:number /*int*/;\n\n\t\tframeIndex = this.getNextInt();\n\n\t\ttoken = this.getNextToken();\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new FrameData();\n\t\t\tdata.components = new Array<number>(this._numAnimatedComponents);\n\n\t\t\tfor (var i:number /*int*/ = 0; i < this._numAnimatedComponents; ++i)\n\t\t\t\tdata.components[i] = this.getNextNumber();\n\n\t\t\tthis._frameData[frameIndex] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Puts back the last read character into the data stream.\n\t */\n\tprivate putBack():void\n\t{\n\t\tthis._parseIndex--;\n\t\tthis._charLineIndex--;\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\n\t}\n\n\t/**\n\t * Gets the next token in the data stream.\n\t */\n\tprivate getNextToken():string\n\t{\n\t\tvar ch:string;\n\t\tvar token:string = \"\";\n\n\t\twhile (!this._reachedEOF) {\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\n\t\t\t\tif (token != MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.skipWhiteSpace();\n\t\t\t\tif (token != \"\")\n\t\t\t\t\treturn token;\n\t\t\t} else\n\t\t\t\ttoken += ch;\n\n\t\t\tif (token == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\treturn token;\n\t\t}\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Skips all whitespace in the data stream.\n\t */\n\tprivate skipWhiteSpace():void\n\t{\n\t\tvar ch:string;\n\n\t\tdo\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\n\n\t\tthis.putBack();\n\t}\n\n\t/**\n\t * Skips to the next line.\n\t */\n\tprivate ignoreLine():void\n\t{\n\t\tvar ch:string;\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\n\t\t\tch = this.getNextChar();\n\t}\n\n\t/**\n\t * Retrieves the next single character in the data stream.\n\t */\n\tprivate getNextChar():string\n\t{\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\n\n\t\tif (ch == \"\\n\") {\n\t\t\t++this._line;\n\t\t\tthis._charLineIndex = 0;\n\t\t} else if (ch != \"\\r\")\n\t\t\t++this._charLineIndex;\n\n\t\tif (this._parseIndex == this._textData.length)\n\t\t\tthis._reachedEOF = true;\n\n\t\treturn ch;\n\t}\n\n\t/**\n\t * Retrieves the next integer in the data stream.\n\t */\n\tprivate getNextInt():number /*int*/\n\t{\n\t\tvar i:number = parseInt(this.getNextToken());\n\t\tif (isNaN(i))\n\t\t\tthis.sendParseError(\"int type\");\n\t\treturn i;\n\t}\n\n\t/**\n\t * Retrieves the next floating point number in the data stream.\n\t */\n\tprivate getNextNumber():number\n\t{\n\t\tvar f:number = parseFloat(this.getNextToken());\n\t\tif (isNaN(f))\n\t\t\tthis.sendParseError(\"float type\");\n\t\treturn f;\n\t}\n\n\t/**\n\t * Retrieves the next 3d vector in the data stream.\n\t */\n\tprivate parseVector3D():Vector3D\n\t{\n\t\tvar vec:Vector3D = new Vector3D();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tvec.x = this.getNextNumber();\n\t\tvec.y = this.getNextNumber();\n\t\tvec.z = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn vec;\n\t}\n\n\t/**\n\t * Retrieves the next quaternion in the data stream.\n\t */\n\tprivate parseQuaternion():Quaternion\n\t{\n\t\tvar quat:Quaternion = new Quaternion();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tquat.x = this.getNextNumber();\n\t\tquat.y = this.getNextNumber();\n\t\tquat.z = this.getNextNumber();\n\n\t\t// quat supposed to be unit length\n\t\tvar t:number = 1 - (quat.x*quat.x) - (quat.y*quat.y) - (quat.z*quat.z);\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn quat;\n\t}\n\n\t/**\n\t * Parses the command line data.\n\t */\n\tprivate parseCMD():void\n\t{\n\t\t// just ignore the command line property\n\t\tthis.parseLiteralstring();\n\t}\n\n\t/**\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\n\t * by double quotes.\n\t */\n\tprivate parseLiteralstring():string\n\t{\n\t\tthis.skipWhiteSpace();\n\n\t\tvar ch:string = this.getNextChar();\n\t\tvar str:string = \"\";\n\n\t\tif (ch != \"\\\"\")\n\t\t\tthis.sendParseError(\"\\\"\");\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch != \"\\\"\")\n\t\t\t\tstr += ch;\n\t\t} while (ch != \"\\\"\");\n\n\t\treturn str;\n\t}\n\n\t/**\n\t * Throws an end-of-file error when a premature end of file was encountered.\n\t */\n\tprivate sendEOFError():void\n\t{\n\t\tthrow new Error(\"Unexpected end of file\");\n\t}\n\n\t/**\n\t * Throws an error when an unexpected token was encountered.\n\t * @param expected The token type that was actually expected.\n\t */\n\tprivate sendParseError(expected:string):void\n\t{\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\n\t}\n\n\t/**\n\t * Throws an error when an unknown keyword was encountered.\n\t */\n\tprivate sendUnknownKeywordError():void\n\t{\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\n\t}\n}\n\nexport = MD5AnimParser;\n\n\n/**\n *\n */\nclass BaseFrameData\n{\n\t/**\n\t *\n\t */\n\tpublic position:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic orientation:Quaternion;\n}\n\n/**\n *\n */\nclass BoundsData\n{\n\t/**\n\t *\n\t */\n\tpublic min:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic max:Vector3D;\n}\n\n/**\n *\n */\nclass FrameData\n{\n\t/**\n\t *\n\t */\n\tpublic index:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic components:Array<number>;\n}\n\n/**\n *\n */\nclass HierarchyData\n{\n\t/**\n\t *\n\t */\n\tpublic name:string;\n\n\t/**\n\t *\n\t */\n\tpublic parentIndex:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic flags:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic startIndex:number /*int*/;\n}",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\n\n// todo: create animation system, parse skeleton\n\n/**\n * MD5MeshParser provides a parser for the md5mesh data type, providing the geometry of the md5 format.\n *\n * todo: optimize\n */\nclass MD5MeshParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\n\tpublic static NUM_MESHES_TOKEN:string = \"numMeshes\";\n\tpublic static COMMENT_TOKEN:string = \"//\";\n\tpublic static JOINTS_TOKEN:string = \"joints\";\n\tpublic static MESH_TOKEN:string = \"mesh\";\n\n\tpublic static MESH_SHADER_TOKEN:string = \"shader\";\n\tpublic static MESH_NUM_VERTS_TOKEN:string = \"numverts\";\n\tpublic static MESH_VERT_TOKEN:string = \"vert\";\n\tpublic static MESH_NUM_TRIS_TOKEN:string = \"numtris\";\n\tpublic static MESH_TRI_TOKEN:string = \"tri\";\n\tpublic static MESH_NUM_WEIGHTS_TOKEN:string = \"numweights\";\n\tpublic static MESH_WEIGHT_TOKEN:string = \"weight\";\n\n\tprivate _parseIndex:number /*int*/ = 0;\n\tprivate _reachedEOF:boolean;\n\tprivate _line:number /*int*/ = 0;\n\tprivate _charLineIndex:number /*int*/ = 0;\n\tprivate _version:number /*int*/;\n\tprivate _numJoints:number /*int*/;\n\tprivate _numMeshes:number /*int*/;\n\n\tprivate _mesh:Mesh;\n\tprivate _shaders:Array<string>;\n\n\tprivate _maxJointCount:number /*int*/;\n\tprivate _meshData:Array<MeshData>;\n\tprivate _bindPoses:Array<Matrix3D>;\n\tprivate _geometry:Geometry;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _animationSet:SkeletonAnimationSet;\n\n\tprivate _rotationQuat:Quaternion;\n\n\t/**\n\t * Creates a new MD5MeshParser object.\n\t */\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._rotationQuat = new Quaternion();\n\n\t\tthis._rotationQuat.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\n\n\t\tif (additionalRotationAxis) {\n\t\t\tvar quat:Quaternion = new Quaternion();\n\t\t\tquat.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\n\t\t\tthis._rotationQuat.multiply(this._rotationQuat, quat);\n\t\t}\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md5mesh\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar token:string;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\ttoken = this.getNextToken();\n\t\t\tswitch (token) {\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.VERSION_TOKEN:\n\t\t\t\t\tthis._version = this.getNextInt();\n\t\t\t\t\tif (this._version != 10)\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.COMMAND_LINE_TOKEN:\n\t\t\t\t\tthis.parseCMD();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.NUM_JOINTS_TOKEN:\n\t\t\t\t\tthis._numJoints = this.getNextInt();\n\t\t\t\t\tthis._bindPoses = new Array<Matrix3D>(this._numJoints);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.NUM_MESHES_TOKEN:\n\t\t\t\t\tthis._numMeshes = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.JOINTS_TOKEN:\n\t\t\t\t\tthis.parseJoints();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_TOKEN:\n\t\t\t\t\tthis.parseMesh();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (!this._reachedEOF)\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\n\t\t\t}\n\n\t\t\tif (this._reachedEOF) {\n\t\t\t\tthis.calculateMaxJointCount();\n\t\t\t\tthis._animationSet = new SkeletonAnimationSet(this._maxJointCount);\n\n\t\t\t\tthis._mesh = new Mesh(new Geometry(), null);\n\t\t\t\tthis._geometry = this._mesh.geometry;\n\n\t\t\t\tfor (var i:number /*int*/ = 0; i < this._meshData.length; ++i)\n\t\t\t\t\tthis._geometry.addSubGeometry(this.translateGeom(this._meshData[i].vertexData, this._meshData[i].weightData, this._meshData[i].indices));\n\n\t\t\t\t//_geometry.animation = _animation;\n\t\t\t\t//\t\t\t\t\t_mesh.animationController = _animationController;\n\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\t\t\tthis._pFinalizeAsset(this._geometry);\n\t\t\t\tthis._pFinalizeAsset(this._mesh);\n\t\t\t\tthis._pFinalizeAsset(this._skeleton);\n\t\t\t\tthis._pFinalizeAsset(this._animationSet);\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t}\n\t\t}\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\tprivate calculateMaxJointCount():void\n\t{\n\t\tthis._maxJointCount = 0;\n\n\t\tvar numMeshData:number /*int*/ = this._meshData.length;\n\t\tfor (var i:number /*int*/ = 0; i < numMeshData; ++i) {\n\t\t\tvar meshData:MeshData = this._meshData[i];\n\t\t\tvar vertexData:Array<VertexData> = meshData.vertexData;\n\t\t\tvar numVerts:number /*int*/ = vertexData.length;\n\n\t\t\tfor (var j:number /*int*/ = 0; j < numVerts; ++j) {\n\t\t\t\tvar zeroWeights:number /*int*/ = this.countZeroWeightJoints(vertexData[j], meshData.weightData);\n\t\t\t\tvar totalJoints:number /*int*/ = vertexData[j].countWeight - zeroWeights;\n\t\t\t\tif (totalJoints > this._maxJointCount)\n\t\t\t\t\tthis._maxJointCount = totalJoints;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate countZeroWeightJoints(vertex:VertexData, weights:Array<JointData>):number /*int*/\n\t{\n\t\tvar start:number /*int*/ = vertex.startWeight;\n\t\tvar end:number /*int*/ = vertex.startWeight + vertex.countWeight;\n\t\tvar count:number /*int*/ = 0;\n\t\tvar weight:number;\n\n\t\tfor (var i:number /*int*/ = start; i < end; ++i) {\n\t\t\tweight = weights[i].bias;\n\t\t\tif (weight == 0)\n\t\t\t\t++count;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Parses the skeleton's joints.\n\t */\n\tprivate parseJoints():void\n\t{\n\t\tvar ch:string;\n\t\tvar joint:SkeletonJoint;\n\t\tvar pos:Vector3D;\n\t\tvar quat:Quaternion;\n\t\tvar i:number /*int*/ = 0;\n\t\tvar token:string = this.getNextToken();\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tthis._skeleton = new Skeleton();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tjoint = new SkeletonJoint();\n\t\t\tjoint.name = this.parseLiteralstring();\n\t\t\tjoint.parentIndex = this.getNextInt();\n\t\t\tpos = this.parseVector3D();\n\t\t\tpos = this._rotationQuat.rotatePoint(pos);\n\t\t\tquat = this.parseQuaternion();\n\n\t\t\t// todo: check if this is correct, or maybe we want to actually store it as quats?\n\t\t\tthis._bindPoses[i] = quat.toMatrix3D();\n\t\t\tthis._bindPoses[i].appendTranslation(pos.x, pos.y, pos.z);\n\t\t\tvar inv:Matrix3D = this._bindPoses[i].clone();\n\t\t\tinv.invert();\n\t\t\tjoint.inverseBindPose = inv.rawData;\n\n\t\t\tthis._skeleton.joints[i++] = joint;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Puts back the last read character into the data stream.\n\t */\n\tprivate putBack():void\n\t{\n\t\tthis._parseIndex--;\n\t\tthis._charLineIndex--;\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\n\t}\n\n\t/**\n\t * Parses the mesh geometry.\n\t */\n\tprivate parseMesh():void\n\t{\n\t\tvar token:string = this.getNextToken();\n\t\tvar ch:string;\n\t\tvar vertexData:Array<VertexData>;\n\t\tvar weights:Array<JointData>;\n\t\tvar indices:Array<number> /*uint*/;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tif (this._shaders == null)\n\t\t\tthis._shaders = new Array<string>();\n\n\t\twhile (ch != \"}\") {\n\t\t\tch = this.getNextToken();\n\t\t\tswitch (ch) {\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_SHADER_TOKEN:\n\t\t\t\t\tthis._shaders.push(this.parseLiteralstring());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_VERTS_TOKEN:\n\t\t\t\t\tvertexData = new Array<VertexData>(this.getNextInt());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_TRIS_TOKEN:\n\t\t\t\t\tindices = new Array<number>(this.getNextInt()*3) /*uint*/;\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_WEIGHTS_TOKEN:\n\t\t\t\t\tweights = new Array<JointData>(this.getNextInt());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_VERT_TOKEN:\n\t\t\t\t\tthis.parseVertex(vertexData);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_TRI_TOKEN:\n\t\t\t\t\tthis.parseTri(indices);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_WEIGHT_TOKEN:\n\t\t\t\t\tthis.parseJoint(weights);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this._meshData == null)\n\t\t\tthis._meshData = new Array<MeshData>();\n\n\t\tvar i:number /*uint*/ = this._meshData.length;\n\t\tthis._meshData[i] = new MeshData();\n\t\tthis._meshData[i].vertexData = vertexData;\n\t\tthis._meshData[i].weightData = weights;\n\t\tthis._meshData[i].indices = indices;\n\t}\n\n\t/**\n\t * Converts the mesh data to a SkinnedSub instance.\n\t * @param vertexData The mesh's vertices.\n\t * @param weights The joint weights per vertex.\n\t * @param indices The indices for the faces.\n\t * @return A SubGeometry instance containing all geometrical data for the current mesh.\n\t */\n\tprivate translateGeom(vertexData:Array<VertexData>, weights:Array<JointData>, indices:Array<number> /*uint*/):TriangleSubGeometry\n\t{\n\t\tvar len:number /*int*/ = vertexData.length;\n\t\tvar v1:number /*int*/, v2:number /*int*/, v3:number /*int*/;\n\t\tvar vertex:VertexData;\n\t\tvar weight:JointData;\n\t\tvar bindPose:Matrix3D;\n\t\tvar pos:Vector3D;\n\t\tvar subGeom:TriangleSubGeometry = new TriangleSubGeometry(true);\n\t\tvar uvs:Array<number> = new Array<number>(len*2);\n\t\tvar vertices:Array<number> = new Array<number>(len*3);\n\t\tvar jointIndices:Array<number> = new Array<number>(len*this._maxJointCount);\n\t\tvar jointWeights:Array<number> = new Array<number>(len*this._maxJointCount);\n\t\tvar l:number /*int*/ = 0;\n\t\tvar nonZeroWeights:number /*int*/;\n\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i) {\n\t\t\tvertex = vertexData[i];\n\t\t\tv1 = vertex.index*3;\n\t\t\tv2 = v1 + 1;\n\t\t\tv3 = v1 + 2;\n\t\t\tvertices[v1] = vertices[v2] = vertices[v3] = 0;\n\n\t\t\tnonZeroWeights = 0;\n\t\t\tfor (var j:number /*int*/ = 0; j < vertex.countWeight; ++j) {\n\t\t\t\tweight = weights[vertex.startWeight + j];\n\t\t\t\tif (weight.bias > 0) {\n\t\t\t\t\tbindPose = this._bindPoses[weight.joint];\n\t\t\t\t\tpos = bindPose.transformVector(weight.pos);\n\t\t\t\t\tvertices[v1] += pos.x*weight.bias;\n\t\t\t\t\tvertices[v2] += pos.y*weight.bias;\n\t\t\t\t\tvertices[v3] += pos.z*weight.bias;\n\n\t\t\t\t\t// indices need to be multiplied by 3 (amount of matrix registers)\n\t\t\t\t\tjointIndices[l] = weight.joint*3;\n\t\t\t\t\tjointWeights[l++] = weight.bias;\n\t\t\t\t\t++nonZeroWeights;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = nonZeroWeights; j < this._maxJointCount; ++j) {\n\t\t\t\tjointIndices[l] = 0;\n\t\t\t\tjointWeights[l++] = 0;\n\t\t\t}\n\n\t\t\tv1 = vertex.index << 1;\n\t\t\tuvs[v1++] = vertex.s;\n\t\t\tuvs[v1] = vertex.t;\n\t\t}\n\n\t\tsubGeom.jointsPerVertex = this._maxJointCount;\n\t\tsubGeom.updateIndices(indices);\n\t\tsubGeom.updatePositions(vertices);\n\t\tsubGeom.updateUVs(uvs);\n\t\tsubGeom.updateJointIndices(jointIndices);\n\t\tsubGeom.updateJointWeights(jointWeights);\n\t\t// cause explicit updates\n\t\tsubGeom.vertexNormals;\n\t\tsubGeom.vertexTangents;\n\t\t// turn auto updates off because they may be animated and set explicitly\n\t\tsubGeom.autoDeriveTangents = false;\n\t\tsubGeom.autoDeriveNormals = false;\n\n\t\treturn subGeom;\n\t}\n\n\t/**\n\t * Retrieve the next triplet of vertex indices that form a face.\n\t * @param indices The index list in which to store the read data.\n\t */\n\tprivate parseTri(indices:Array<number> /*uint*/):void\n\t{\n\t\tvar index:number /*int*/ = this.getNextInt()*3;\n\t\tindices[index] = this.getNextInt();\n\t\tindices[index + 1] = this.getNextInt();\n\t\tindices[index + 2] = this.getNextInt();\n\t}\n\n\t/**\n\t * Reads a new joint data set for a single joint.\n\t * @param weights the target list to contain the weight data.\n\t */\n\tprivate parseJoint(weights:Array<JointData>):void\n\t{\n\t\tvar weight:JointData = new JointData();\n\t\tweight.index = this.getNextInt();\n\t\tweight.joint = this.getNextInt();\n\t\tweight.bias = this.getNextNumber();\n\t\tweight.pos = this.parseVector3D();\n\t\tweights[weight.index] = weight;\n\t}\n\n\t/**\n\t * Reads the data for a single vertex.\n\t * @param vertexData The list to contain the vertex data.\n\t */\n\tprivate parseVertex(vertexData:Array<VertexData>):void\n\t{\n\t\tvar vertex:VertexData = new VertexData();\n\t\tvertex.index = this.getNextInt();\n\t\tthis.parseUV(vertex);\n\t\tvertex.startWeight = this.getNextInt();\n\t\tvertex.countWeight = this.getNextInt();\n\t\t//\t\t\tif (vertex.countWeight > _maxJointCount) _maxJointCount = vertex.countWeight;\n\t\tvertexData[vertex.index] = vertex;\n\t}\n\n\t/**\n\t * Reads the next uv coordinate.\n\t * @param vertexData The vertexData to contain the UV coordinates.\n\t */\n\tprivate parseUV(vertexData:VertexData):void\n\t{\n\t\tvar ch:string = this.getNextToken();\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tvertexData.s = this.getNextNumber();\n\t\tvertexData.t = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\t}\n\n\t/**\n\t * Gets the next token in the data stream.\n\t */\n\tprivate getNextToken():string\n\t{\n\t\tvar ch:string;\n\t\tvar token:string = \"\";\n\n\t\twhile (!this._reachedEOF) {\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\n\t\t\t\tif (token != MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.skipWhiteSpace();\n\t\t\t\tif (token != \"\")\n\t\t\t\t\treturn token;\n\t\t\t} else\n\t\t\t\ttoken += ch;\n\n\t\t\tif (token == MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\treturn token;\n\t\t}\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Skips all whitespace in the data stream.\n\t */\n\tprivate skipWhiteSpace():void\n\t{\n\t\tvar ch:string;\n\n\t\tdo\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\n\n\t\tthis.putBack();\n\t}\n\n\t/**\n\t * Skips to the next line.\n\t */\n\tprivate ignoreLine():void\n\t{\n\t\tvar ch:string;\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\n\t\t\tch = this.getNextChar();\n\t}\n\n\t/**\n\t * Retrieves the next single character in the data stream.\n\t */\n\tprivate getNextChar():string\n\t{\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\n\n\t\tif (ch == \"\\n\") {\n\t\t\t++this._line;\n\t\t\tthis._charLineIndex = 0;\n\t\t} else if (ch != \"\\r\")\n\t\t\t++this._charLineIndex;\n\n\t\tif (this._parseIndex >= this._textData.length)\n\t\t\tthis._reachedEOF = true;\n\n\t\treturn ch;\n\t}\n\n\t/**\n\t * Retrieves the next integer in the data stream.\n\t */\n\tprivate getNextInt():number /*int*/\n\t{\n\t\tvar i:number = parseInt(this.getNextToken());\n\t\tif (isNaN(i))\n\t\t\tthis.sendParseError(\"int type\");\n\t\treturn i;\n\t}\n\n\t/**\n\t * Retrieves the next floating point number in the data stream.\n\t */\n\tprivate getNextNumber():number\n\t{\n\t\tvar f:number = parseFloat(this.getNextToken());\n\t\tif (isNaN(f))\n\t\t\tthis.sendParseError(\"float type\");\n\t\treturn f;\n\t}\n\n\t/**\n\t * Retrieves the next 3d vector in the data stream.\n\t */\n\tprivate parseVector3D():Vector3D\n\t{\n\t\tvar vec:Vector3D = new Vector3D();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tvec.x = -this.getNextNumber();\n\t\tvec.y = this.getNextNumber();\n\t\tvec.z = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn vec;\n\t}\n\n\t/**\n\t * Retrieves the next quaternion in the data stream.\n\t */\n\tprivate parseQuaternion():Quaternion\n\t{\n\t\tvar quat:Quaternion = new Quaternion();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tquat.x = this.getNextNumber();\n\t\tquat.y = -this.getNextNumber();\n\t\tquat.z = -this.getNextNumber();\n\n\t\t// quat supposed to be unit length\n\t\tvar t:number = 1 - quat.x*quat.x - quat.y*quat.y - quat.z*quat.z;\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\tvar rotQuat:Quaternion = new Quaternion();\n\t\trotQuat.multiply(this._rotationQuat, quat);\n\t\treturn rotQuat;\n\t}\n\n\t/**\n\t * Parses the command line data.\n\t */\n\tprivate parseCMD():void\n\t{\n\t\t// just ignore the command line property\n\t\tthis.parseLiteralstring();\n\t}\n\n\t/**\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\n\t * by double quotes.\n\t */\n\tprivate parseLiteralstring():string\n\t{\n\t\tthis.skipWhiteSpace();\n\n\t\tvar ch:string = this.getNextChar();\n\t\tvar str:string = \"\";\n\n\t\tif (ch != \"\\\"\")\n\t\t\tthis.sendParseError(\"\\\"\");\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch != \"\\\"\")\n\t\t\t\tstr += ch;\n\t\t} while (ch != \"\\\"\");\n\n\t\treturn str;\n\t}\n\n\t/**\n\t * Throws an end-of-file error when a premature end of file was encountered.\n\t */\n\tprivate sendEOFError():void\n\t{\n\t\tthrow new Error(\"Unexpected end of file\");\n\t}\n\n\t/**\n\t * Throws an error when an unexpected token was encountered.\n\t * @param expected The token type that was actually expected.\n\t */\n\tprivate sendParseError(expected:string):void\n\t{\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\n\t}\n\n\t/**\n\t * Throws an error when an unknown keyword was encountered.\n\t */\n\tprivate sendUnknownKeywordError():void\n\t{\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\n\t}\n}\n\nexport = MD5MeshParser;\n\n\nclass VertexData\n{\n\tpublic index:number /*int*/;\n\tpublic s:number;\n\tpublic t:number;\n\tpublic startWeight:number /*int*/;\n\tpublic countWeight:number /*int*/;\n}\n\nclass JointData\n{\n\tpublic index:number /*int*/;\n\tpublic joint:number /*int*/;\n\tpublic bias:number;\n\tpublic pos:Vector3D;\n}\n\nclass MeshData\n{\n\tpublic vertexData:Array<VertexData>;\n\tpublic weightData:Array<JointData>;\n\tpublic indices:Array<number> /*uint*/;\n}",
    "import BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\n\n/**\n * Max3DSParser provides a parser for the 3ds data type.\n */\nclass Max3DSParser extends ParserBase\n{\n\tprivate _byteData:ByteArray;\n\n\tprivate _textures:Object;\n\tprivate _materials:Object;\n\tprivate _unfinalized_objects:Object;\n\n\tprivate _cur_obj_end:number;\n\tprivate _cur_obj:ObjectVO;\n\n\tprivate _cur_mat_end:number;\n\tprivate _cur_mat:MaterialVO;\n\tprivate _useSmoothingGroups:boolean;\n\n\t/**\n\t * Creates a new <code>Max3DSParser</code> object.\n\t *\n\t * @param useSmoothingGroups Determines whether the parser looks for smoothing groups in the 3ds file or assumes uniform smoothing. Defaults to true.\n\t */\n\tconstructor(useSmoothingGroups:boolean = true)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\n\t\tthis._useSmoothingGroups = useSmoothingGroups;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"3ds\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tvar ba:ByteArray;\n\n\t\tba = ParserUtils.toByteArray(data);\n\t\tif (ba) {\n\t\t\tba.position = 0;\n\t\t\tif (ba.readShort() == 0x4d4d)\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\n\t{\n\t\tif (resourceDependency.assets.length == 1) {\n\t\t\tvar asset:IAsset;\n\n\t\t\tasset = resourceDependency.assets[0];\n\t\t\tif (asset.isAsset(BitmapImage2D)) {\n\t\t\t\tvar tex:TextureVO;\n\n\t\t\t\ttex = this._textures[resourceDependency.id];\n\t\t\t\ttex.texture = new Single2DTexture(<BitmapImage2D> asset);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\n\t{\n\t\t// TODO: Implement\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (!this._byteData) {\n\t\t\tthis._byteData = this._pGetByteData();\n\t\t\tthis._byteData.position = 0;\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;// Should be default\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t\tthis._textures = {};\n\t\t\tthis._materials = {};\n\t\t\tthis._unfinalized_objects = {};\n\t\t}\n\n\t\t// TODO: With this construct, the loop will run no-op for as long\n\t\t// as there is time once file has finished reading. Consider a nice\n\t\t// way to stop loop when byte array is empty, without putting it in\n\t\t// the while-conditional, which will prevent finalizations from\n\t\t// happening after the last chunk.\n\t\twhile (this._pHasTime()) {\n\n\t\t\t// If we are currently working on an object, and the most recent chunk was\n\t\t\t// the last one in that object, finalize the current object.\n\t\t\tif (this._cur_mat && this._byteData.position >= this._cur_mat_end)\n\t\t\t\tthis.finalizeCurrentMaterial();\n\t\t\telse if (this._cur_obj && this._byteData.position >= this._cur_obj_end) {\n\t\t\t\t// Can't finalize at this point, because we have to wait until the full\n\t\t\t\t// animation section has been parsed for any potential pivot definitions\n\t\t\t\tthis._unfinalized_objects[this._cur_obj.name] = this._cur_obj;\n\t\t\t\tthis._cur_obj_end = Number.MAX_VALUE /*uint*/;\n\t\t\t\tthis._cur_obj = null;\n\t\t\t}\n\n\t\t\tif (this._byteData.getBytesAvailable() > 0) {\n\t\t\t\tvar cid:number /*uint*/;\n\t\t\t\tvar len:number /*uint*/;\n\t\t\t\tvar end:number /*uint*/;\n\n\t\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\t\tlen = this._byteData.readUnsignedInt();\n\t\t\t\tend = this._byteData.position + (len - 6);\n\n\t\t\t\tswitch (cid) {\n\t\t\t\t\tcase 0x4D4D: // MAIN3DS\n\t\t\t\t\tcase 0x3D3D: // EDIT3DS\n\t\t\t\t\tcase 0xB000: // KEYF3DS\n\t\t\t\t\t\t// This types are \"container chunks\" and contain only\n\t\t\t\t\t\t// sub-chunks (no data on their own.) This means that\n\t\t\t\t\t\t// there is nothing more to parse at this point, and\n\t\t\t\t\t\t// instead we should progress to the next chunk, which\n\t\t\t\t\t\t// will be the first sub-chunk of this one.\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0xAFFF: // MATERIAL\n\t\t\t\t\t\tthis._cur_mat_end = end;\n\t\t\t\t\t\tthis._cur_mat = this.parseMaterial();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4000: // EDIT_OBJECT\n\t\t\t\t\t\tthis._cur_obj_end = end;\n\t\t\t\t\t\tthis._cur_obj = new ObjectVO();\n\t\t\t\t\t\tthis._cur_obj.name = this.readNulTermstring();\n\t\t\t\t\t\tthis._cur_obj.materials = new Array<string>();\n\t\t\t\t\t\tthis._cur_obj.materialFaces = {};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4100: // OBJ_TRIMESH\n\t\t\t\t\t\tthis._cur_obj.type = Mesh.assetType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4110: // TRI_VERTEXL\n\t\t\t\t\t\tthis.parseVertexList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4120: // TRI_FACELIST\n\t\t\t\t\t\tthis.parseFaceList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4140: // TRI_MAPPINGCOORDS\n\t\t\t\t\t\tthis.parseUVList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4130: // Face materials\n\t\t\t\t\t\tthis.parseFaceMaterialList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4160: // Transform\n\t\t\t\t\t\tthis._cur_obj.transform = this.readTransform();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0xB002: // Object animation (including pivot)\n\t\t\t\t\t\tthis.parseObjectAnimation(end);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4150: // Smoothing groups\n\t\t\t\t\t\tthis.parseSmoothingGroups();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Skip this (unknown) chunk\n\t\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Pause parsing if there were any dependencies found during this\n\t\t\t\t// iteration (i.e. if there are any dependencies that need to be\n\t\t\t\t// retrieved at this time.)\n\t\t\t\tif (this.dependencies.length) {\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// More parsing is required if the entire byte array has not yet\n\t\t// been read, or if there is a currently non-finalized object in\n\t\t// the pipeline.\n\t\tif (this._byteData.getBytesAvailable() || this._cur_obj || this._cur_mat) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t} else {\n\t\t\tvar name:string;\n\n\t\t\t// Finalize any remaining objects before ending.\n\t\t\tfor (name in this._unfinalized_objects) {\n\t\t\t\tvar obj:DisplayObjectContainer;\n\t\t\t\tobj = this.constructObject(this._unfinalized_objects[name]);\n\t\t\t\tif (obj) {\n\t\t\t\t\t//add to the content property\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\n\n\t\t\t\t\tthis._pFinalizeAsset(obj, name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\tprivate parseMaterial():MaterialVO\n\t{\n\t\tvar mat:MaterialVO;\n\n\t\tmat = new MaterialVO();\n\n\t\twhile (this._byteData.position < this._cur_mat_end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\t\t\tvar end:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\t\t\tend = this._byteData.position + (len - 6);\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xA000: // Material name\n\t\t\t\t\tmat.name = this.readNulTermstring();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA010: // Ambient color\n\t\t\t\t\tmat.ambientColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA020: // Diffuse color\n\t\t\t\t\tmat.diffuseColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA030: // Specular color\n\t\t\t\t\tmat.specularColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA081: // Two-sided, existence indicates \"true\"\n\t\t\t\t\tmat.twoSided = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA200: // Main (color) texture\n\t\t\t\t\tmat.colorMap = this.parseTexture(end);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA204: // Specular map\n\t\t\t\t\tmat.specularMap = this.parseTexture(end);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._byteData.position = end;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn mat;\n\t}\n\n\tprivate parseTexture(end:number /*uint*/):TextureVO\n\t{\n\t\tvar tex:TextureVO;\n\n\t\ttex = new TextureVO();\n\n\t\twhile (this._byteData.position < end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xA300:\n\t\t\t\t\ttex.url = this.readNulTermstring();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t// Skip this unknown texture sub-chunk\n\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._textures[tex.url] = tex;\n\t\tthis._pAddDependency(tex.url, new URLRequest(tex.url));\n\n\t\treturn tex;\n\t}\n\n\tprivate parseVertexList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.verts = new Array<number>(count*3);\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.verts.length;\n\t\twhile (i < len) {\n\t\t\tvar x:number, y:number, z:number;\n\n\t\t\tx = this._byteData.readFloat();\n\t\t\ty = this._byteData.readFloat();\n\t\t\tz = this._byteData.readFloat();\n\n\t\t\tthis._cur_obj.verts[i++] = x;\n\t\t\tthis._cur_obj.verts[i++] = z;\n\t\t\tthis._cur_obj.verts[i++] = y;\n\t\t}\n\t}\n\n\tprivate parseFaceList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.indices = new Array<number>(count*3) /*uint*/;\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.indices.length;\n\t\twhile (i < len) {\n\t\t\tvar i0:number /*uint*/, i1:number /*uint*/, i2:number /*uint*/;\n\n\t\t\ti0 = this._byteData.readUnsignedShort();\n\t\t\ti1 = this._byteData.readUnsignedShort();\n\t\t\ti2 = this._byteData.readUnsignedShort();\n\n\t\t\tthis._cur_obj.indices[i++] = i0;\n\t\t\tthis._cur_obj.indices[i++] = i2;\n\t\t\tthis._cur_obj.indices[i++] = i1;\n\n\t\t\t// Skip \"face info\", irrelevant in Away3D\n\t\t\tthis._byteData.position += 2;\n\t\t}\n\n\t\tthis._cur_obj.smoothingGroups = new Array<number>(count) /*uint*/;\n\t}\n\n\tprivate parseSmoothingGroups():void\n\t{\n\t\tvar len:number /*uint*/ = this._cur_obj.indices.length/3;\n\t\tvar i:number /*uint*/ = 0;\n\t\twhile (i < len) {\n\t\t\tthis._cur_obj.smoothingGroups[i] = this._byteData.readUnsignedInt();\n\t\t\ti++;\n\t\t}\n\t}\n\n\tprivate parseUVList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.uvs = new Array<number>(count*2);\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.uvs.length;\n\t\twhile (i < len) {\n\t\t\tthis._cur_obj.uvs[i++] = this._byteData.readFloat();\n\t\t\tthis._cur_obj.uvs[i++] = 1.0 - this._byteData.readFloat();\n\t\t}\n\t}\n\n\tprivate parseFaceMaterialList():void\n\t{\n\t\tvar mat:string;\n\t\tvar count:number /*uint*/;\n\t\tvar i:number /*uint*/;\n\t\tvar faces:Array<number> /*uint*/;\n\n\t\tmat = this.readNulTermstring();\n\t\tcount = this._byteData.readUnsignedShort();\n\n\t\tfaces = new Array<number>(count) /*uint*/;\n\t\ti = 0;\n\t\twhile (i < faces.length)\n\t\t\tfaces[i++] = this._byteData.readUnsignedShort();\n\n\t\tthis._cur_obj.materials.push(mat);\n\t\tthis._cur_obj.materialFaces[mat] = faces;\n\t}\n\n\tprivate parseObjectAnimation(end:number):void\n\t{\n\t\tvar vo:ObjectVO;\n\t\tvar obj:DisplayObjectContainer;\n\t\tvar pivot:Vector3D;\n\t\tvar name:string;\n\t\tvar hier:number /*uint*/;\n\n\t\t// Pivot defaults to origin\n\t\tpivot = new Vector3D;\n\n\t\twhile (this._byteData.position < end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xb010: // Name/hierarchy\n\t\t\t\t\tname = this.readNulTermstring();\n\t\t\t\t\tthis._byteData.position += 4;\n\t\t\t\t\thier = this._byteData.readShort();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xb013: // Pivot\n\t\t\t\t\tpivot.x = this._byteData.readFloat();\n\t\t\t\t\tpivot.z = this._byteData.readFloat();\n\t\t\t\t\tpivot.y = this._byteData.readFloat();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If name is \"$$$DUMMY\" this is an empty object (e.g. a container)\n\t\t// and will be ignored in this version of the parser\n\t\t// TODO: Implement containers in 3DS parser.\n\t\tif (name != '$$$DUMMY' && this._unfinalized_objects.hasOwnProperty(name)) {\n\t\t\tvo = this._unfinalized_objects[name];\n\t\t\tobj = this.constructObject(vo, pivot);\n\n\t\t\tif (obj) {\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\n\n\t\t\t\tthis._pFinalizeAsset(obj, vo.name);\n\t\t\t}\n\n\n\t\t\tdelete this._unfinalized_objects[name];\n\t\t}\n\t}\n\n\tprivate constructObject(obj:ObjectVO, pivot:Vector3D = null):DisplayObjectContainer\n\t{\n\t\tif (obj.type == Mesh.assetType) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar sub:TriangleSubGeometry;\n\t\t\tvar geom:Geometry;\n\t\t\tvar mat:MaterialBase;\n\t\t\tvar mesh:Mesh;\n\t\t\tvar mtx:Matrix3D;\n\t\t\tvar vertices:Array<VertexVO>;\n\t\t\tvar faces:Array<FaceVO>;\n\n\t\t\tif (obj.materials.length > 1)\n\t\t\t\tconsole.log(\"The Away3D 3DS parser does not support multiple materials per mesh at this point.\");\n\n\t\t\t// Ignore empty objects\n\t\t\tif (!obj.indices || obj.indices.length == 0)\n\t\t\t\treturn null;\n\n\t\t\tvertices = new Array<VertexVO>(obj.verts.length/3);\n\t\t\tfaces = new Array<FaceVO>(obj.indices.length/3);\n\n\t\t\tthis.prepareData(vertices, faces, obj);\n\n\t\t\tif (this._useSmoothingGroups)\n\t\t\t\tthis.applySmoothGroups(vertices, faces);\n\n\t\t\tobj.verts = new Array<number>(vertices.length*3);\n\t\t\tfor (i = 0; i < vertices.length; i++) {\n\t\t\t\tobj.verts[i*3] = vertices[i].x;\n\t\t\t\tobj.verts[i*3 + 1] = vertices[i].y;\n\t\t\t\tobj.verts[i*3 + 2] = vertices[i].z;\n\t\t\t}\n\t\t\tobj.indices = new Array<number>(faces.length*3) /*uint*/;\n\n\t\t\tfor (i = 0; i < faces.length; i++) {\n\t\t\t\tobj.indices[i*3] = faces[i].a;\n\t\t\t\tobj.indices[i*3 + 1] = faces[i].b;\n\t\t\t\tobj.indices[i*3 + 2] = faces[i].c;\n\t\t\t}\n\n\t\t\tif (obj.uvs) {\n\t\t\t\t// If the object had UVs to start with, use UVs generated by\n\t\t\t\t// smoothing group splitting algorithm. Otherwise those UVs\n\t\t\t\t// will be nonsense and should be skipped.\n\t\t\t\tobj.uvs = new Array<number>(vertices.length*2);\n\t\t\t\tfor (i = 0; i < vertices.length; i++) {\n\t\t\t\t\tobj.uvs[i*2] = vertices[i].u;\n\t\t\t\t\tobj.uvs[i*2 + 1] = vertices[i].v;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeom = new Geometry();\n\n\t\t\t// Construct sub-geometries (potentially splitting buffers)\n\t\t\t// and add them to geometry.\n\t\t\tsub = new TriangleSubGeometry(true);\n\t\t\tsub.updateIndices(obj.indices);\n\t\t\tsub.updatePositions(obj.verts);\n\t\t\tsub.updateUVs(obj.uvs);\n\n\t\t\tgeom.addSubGeometry(sub);\n\n\t\t\tif (obj.materials.length > 0) {\n\t\t\t\tvar mname:string;\n\t\t\t\tmname = obj.materials[0];\n\t\t\t\tmat = this._materials[mname].material;\n\t\t\t}\n\n\t\t\t// Apply pivot translation to geometry if a pivot was\n\t\t\t// found while parsing the keyframe chunk earlier.\n\t\t\tif (pivot) {\n\t\t\t\tif (obj.transform) {\n\t\t\t\t\t// If a transform was found while parsing the\n\t\t\t\t\t// object chunk, use it to find the local pivot vector\n\t\t\t\t\tvar dat:Array<number> = obj.transform.concat();\n\t\t\t\t\tdat[12] = 0;\n\t\t\t\t\tdat[13] = 0;\n\t\t\t\t\tdat[14] = 0;\n\t\t\t\t\tmtx = new Matrix3D(dat);\n\t\t\t\t\tpivot = mtx.transformVector(pivot);\n\t\t\t\t}\n\n\t\t\t\tpivot.scaleBy(-1);\n\n\t\t\t\tmtx = new Matrix3D();\n\t\t\t\tmtx.appendTranslation(pivot.x, pivot.y, pivot.z);\n\t\t\t\tgeom.applyTransformation(mtx);\n\t\t\t}\n\n\t\t\t// Apply transformation to geometry if a transformation\n\t\t\t// was found while parsing the object chunk earlier.\n\t\t\tif (obj.transform) {\n\t\t\t\tmtx = new Matrix3D(obj.transform);\n\t\t\t\tmtx.invert();\n\t\t\t\tgeom.applyTransformation(mtx);\n\t\t\t}\n\n\t\t\t// Final transform applied to geometry. Finalize the geometry,\n\t\t\t// which will no longer be modified after this point.\n\t\t\tthis._pFinalizeAsset(geom, obj.name.concat('_geom'));\n\n\t\t\t// Build mesh and return it\n\t\t\tmesh = new Mesh(geom, mat);\n\t\t\tmesh.transform.matrix3D = new Matrix3D(obj.transform);\n\t\t\treturn mesh;\n\t\t}\n\n\t\t// If reached, unknown\n\t\treturn null;\n\t}\n\n\tprivate prepareData(vertices:Array<VertexVO>, faces:Array<FaceVO>, obj:ObjectVO):void\n\t{\n\t\t// convert raw ObjectVO's data to structured VertexVO and FaceVO\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar k:number /*int*/;\n\t\tvar len:number /*int*/ = obj.verts.length;\n\t\tfor (i = 0, j = 0, k = 0; i < len;) {\n\t\t\tvar v:VertexVO = new VertexVO;\n\t\t\tv.x = obj.verts[i++];\n\t\t\tv.y = obj.verts[i++];\n\t\t\tv.z = obj.verts[i++];\n\t\t\tif (obj.uvs) {\n\t\t\t\tv.u = obj.uvs[j++];\n\t\t\t\tv.v = obj.uvs[j++];\n\t\t\t}\n\t\t\tvertices[k++] = v;\n\t\t}\n\t\tlen = obj.indices.length;\n\t\tfor (i = 0, k = 0; i < len;) {\n\t\t\tvar f:FaceVO = new FaceVO();\n\t\t\tf.a = obj.indices[i++];\n\t\t\tf.b = obj.indices[i++];\n\t\t\tf.c = obj.indices[i++];\n\t\t\tf.smoothGroup = obj.smoothingGroups[k] || 0;\n\t\t\tfaces[k++] = f;\n\t\t}\n\t}\n\n\tprivate applySmoothGroups(vertices:Array<VertexVO>, faces:Array<FaceVO>):void\n\t{\n\t\t// clone vertices according to following rule:\n\t\t// clone if vertex's in faces from groups 1+2 and 3\n\t\t// don't clone if vertex's in faces from groups 1+2, 3 and 1+3\n\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar k:number /*int*/;\n\t\tvar l:number /*int*/;\n\t\tvar len:number /*int*/;\n\t\tvar numVerts:number /*uint*/ = vertices.length;\n\t\tvar numFaces:number /*uint*/ = faces.length;\n\n\t\t// extract groups data for vertices\n\t\tvar vGroups:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\n\t\tfor (i = 0; i < numVerts; i++)\n\t\t\tvGroups[i] = new Array<number>() /*uint*/;\n\t\tfor (i = 0; i < numFaces; i++) {\n\t\t\tvar face:FaceVO = faces[i];\n\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\tvar groups:Array<number> /*uint*/ = vGroups[(j == 0)? face.a : ((j == 1)? face.b : face.c)];\n\t\t\t\tvar group:number /*uint*/ = face.smoothGroup;\n\t\t\t\tfor (k = groups.length - 1; k >= 0; k--) {\n\t\t\t\t\tif ((group & groups[k]) > 0) {\n\t\t\t\t\t\tgroup |= groups[k];\n\t\t\t\t\t\tgroups.splice(k, 1);\n\t\t\t\t\t\tk = groups.length - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tgroups.push(group);\n\t\t\t}\n\t\t}\n\t\t// clone vertices\n\t\tvar vClones:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\n\t\tfor (i = 0; i < numVerts; i++) {\n\t\t\tif ((len = vGroups[i].length) < 1)\n\t\t\t\tcontinue;\n\t\t\tvar clones:Array<number> /*uint*/ = new Array<number>(len) /*uint*/;\n\t\t\tvClones[i] = clones;\n\t\t\tclones[0] = i;\n\t\t\tvar v0:VertexVO = vertices[i];\n\t\t\tfor (j = 1; j < len; j++) {\n\t\t\t\tvar v1:VertexVO = new VertexVO;\n\t\t\t\tv1.x = v0.x;\n\t\t\t\tv1.y = v0.y;\n\t\t\t\tv1.z = v0.z;\n\t\t\t\tv1.u = v0.u;\n\t\t\t\tv1.v = v0.v;\n\t\t\t\tclones[j] = vertices.length;\n\t\t\t\tvertices.push(v1);\n\t\t\t}\n\t\t}\n\t\tnumVerts = vertices.length;\n\n\t\tfor (i = 0; i < numFaces; i++) {\n\t\t\tface = faces[i];\n\t\t\tgroup = face.smoothGroup;\n\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\tk = (j == 0)? face.a : ((j == 1)? face.b : face.c);\n\t\t\t\tgroups = vGroups[k];\n\t\t\t\tlen = groups.length;\n\t\t\t\tclones = vClones[k];\n\t\t\t\tfor (l = 0; l < len; l++) {\n\t\t\t\t\tif (((group == 0) && (groups[l] == 0)) || ((group & groups[l]) > 0)) {\n\t\t\t\t\t\tvar index:number /*uint*/ = clones[l];\n\t\t\t\t\t\tif (group == 0) {\n\t\t\t\t\t\t\t// vertex is unique if no smoothGroup found\n\t\t\t\t\t\t\tgroups.splice(l, 1);\n\t\t\t\t\t\t\tclones.splice(l, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j == 0)\n\t\t\t\t\t\t\tface.a = index; else if (j == 1)\n\t\t\t\t\t\t\tface.b = index; else\n\t\t\t\t\t\t\tface.c = index;\n\t\t\t\t\t\tl = len;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate finalizeCurrentMaterial():void\n\t{\n\t\tvar mat:MethodMaterial;\n\n\t\tif (this._cur_mat.colorMap)\n\t\t\tmat = new MethodMaterial(this._cur_mat.colorMap.texture || DefaultMaterialManager.getDefaultTexture());\n\t\telse\n\t\t\tmat = new MethodMaterial(this._cur_mat.ambientColor);\n\n\t\tmat.diffuseColor = this._cur_mat.diffuseColor;\n\t\tmat.specularColor = this._cur_mat.specularColor;\n\n\t\tif (this.materialMode >= 2)\n\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS\n\n\t\tmat.bothSides = this._cur_mat.twoSided;\n\n\t\tthis._pFinalizeAsset(mat, this._cur_mat.name);\n\n\t\tthis._materials[this._cur_mat.name] = this._cur_mat;\n\t\tthis._cur_mat.material = mat;\n\n\t\tthis._cur_mat = null;\n\t}\n\n\tprivate readNulTermstring():string\n\t{\n\t\tvar chr:number /*int*/;\n\t\tvar str:string = \"\";\n\n\t\twhile ((chr = this._byteData.readUnsignedByte()) > 0)\n\t\t\tstr += String.fromCharCode(chr);\n\n\t\treturn str;\n\t}\n\n\tprivate readTransform():Array<number>\n\t{\n\t\tvar data:Array<number>;\n\n\t\tdata = new Array<number>(16);\n\n\t\t// X axis\n\t\tdata[0] = this._byteData.readFloat(); // X\n\t\tdata[2] = this._byteData.readFloat(); // Z\n\t\tdata[1] = this._byteData.readFloat(); // Y\n\t\tdata[3] = 0;\n\n\t\t// Z axis\n\t\tdata[8] = this._byteData.readFloat(); // X\n\t\tdata[10] = this._byteData.readFloat(); // Z\n\t\tdata[9] = this._byteData.readFloat(); // Y\n\t\tdata[11] = 0;\n\n\t\t// Y Axis\n\t\tdata[4] = this._byteData.readFloat(); // X\n\t\tdata[6] = this._byteData.readFloat(); // Z\n\t\tdata[5] = this._byteData.readFloat(); // Y\n\t\tdata[7] = 0;\n\n\t\t// Translation\n\t\tdata[12] = this._byteData.readFloat(); // X\n\t\tdata[14] = this._byteData.readFloat(); // Z\n\t\tdata[13] = this._byteData.readFloat(); // Y\n\t\tdata[15] = 1;\n\n\t\treturn data;\n\t}\n\n\tprivate readColor():number /*int*/\n\t{\n\t\tvar cid:number /*int*/;\n\t\tvar len:number /*int*/;\n\t\tvar r:number /*int*/, g:number /*int*/, b:number /*int*/;\n\n\t\tcid = this._byteData.readUnsignedShort();\n\t\tlen = this._byteData.readUnsignedInt();\n\n\t\tswitch (cid) {\n\t\t\tcase 0x0010: // Floats\n\t\t\t\tr = this._byteData.readFloat()*255;\n\t\t\t\tg = this._byteData.readFloat()*255;\n\t\t\t\tb = this._byteData.readFloat()*255;\n\t\t\t\tbreak;\n\t\t\tcase 0x0011: // 24-bit color\n\t\t\t\tr = this._byteData.readUnsignedByte();\n\t\t\t\tg = this._byteData.readUnsignedByte();\n\t\t\t\tb = this._byteData.readUnsignedByte();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n}\n\nexport = Max3DSParser;\n\n/**\n *\n */\nclass FaceVO\n{\n\tpublic a:number /*int*/;\n\tpublic b:number /*int*/;\n\tpublic c:number /*int*/;\n\tpublic smoothGroup:number /*int*/;\n}\n\n/**\n *\n */\nclass MaterialVO\n{\n\tpublic name:string;\n\tpublic ambientColor:number /*int*/;\n\tpublic diffuseColor:number /*int*/;\n\tpublic specularColor:number /*int*/;\n\tpublic twoSided:boolean;\n\tpublic colorMap:TextureVO;\n\tpublic specularMap:TextureVO;\n\tpublic material:MaterialBase;\n}\n\n/**\n *\n */\nclass ObjectVO\n{\n\tpublic name:string;\n\tpublic type:string;\n\tpublic pivotX:number;\n\tpublic pivotY:number;\n\tpublic pivotZ:number;\n\tpublic transform:Array<number>;\n\tpublic verts:Array<number>;\n\tpublic indices:Array<number> /*int*/;\n\tpublic uvs:Array<number>;\n\tpublic materialFaces:Object;\n\tpublic materials:Array<string>;\n\tpublic smoothingGroups:Array<number> /*int*/;\n}\n\n/**\n *\n */\nclass TextureVO\n{\n\tpublic url:string;\n\tpublic texture:Single2DTexture;\n}\n\n/**\n *\n */\nclass VertexVO\n{\n\tpublic x:number;\n\tpublic y:number;\n\tpublic z:number;\n\tpublic u:number;\n\tpublic v:number;\n\tpublic normal:Vector3D;\n\tpublic tangent:Vector3D;\n}",
    "import BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\n\n/**\n * OBJParser provides a parser for the OBJ data type.\n */\nclass OBJParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tprivate _charIndex:number;\n\tprivate _oldIndex:number;\n\tprivate _stringLength:number;\n\tprivate _currentObject:ObjectGroup;\n\tprivate _currentGroup:Group;\n\tprivate _currentMaterialGroup:MaterialGroup;\n\tprivate _objects:Array<ObjectGroup>;\n\tprivate _materialIDs:string[];\n\tprivate _materialLoaded:Array<LoadedMaterial>;\n\tprivate _materialSpecularData:Array<SpecularData>;\n\tprivate _meshes:Array<Mesh>;\n\tprivate _lastMtlID:string;\n\tprivate _objectIndex:number;\n\tprivate _realIndices;\n\tprivate _vertexIndex:number;\n\tprivate _vertices:Array<Vertex>;\n\tprivate _vertexNormals:Array<Vertex>;\n\tprivate _uvs:Array<UV>;\n\tprivate _scale:number;\n\tprivate _mtlLib:boolean;\n\tprivate _mtlLibLoaded:boolean = true;\n\tprivate _activeMaterialID:string = \"\";\n\n\t/**\n\t * Creates a new OBJParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(scale:number = 1)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._scale = scale;\n\t}\n\n\t/**\n\t * Scaling factor applied directly to vertices data\n\t * @param value The scaling factor.\n\t */\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"obj\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tvar content:string = ParserUtils.toString(data);\n\t\tvar hasV:boolean = false;\n\t\tvar hasF:boolean = false;\n\n\t\tif (content) {\n\t\t\thasV = content.indexOf(\"\\nv \") != -1;\n\t\t\thasF = content.indexOf(\"\\nf \") != -1;\n\t\t}\n\n\t\treturn hasV && hasF;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif (resourceDependency.id == 'mtl') {\n\t\t\tvar str:string = ParserUtils.toString(resourceDependency.data);\n\t\t\tthis.parseMtl(str);\n\n\t\t} else {\n\t\t\tvar asset:IAsset;\n\n\t\t\tif (resourceDependency.assets.length != 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tasset = resourceDependency.assets[0];\n\n\t\t\tif (asset.isAsset(BitmapImage2D)) {\n\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\t\tlm.materialID = resourceDependency.id;\n\t\t\t\tlm.texture = new Single2DTexture(<BitmapImage2D> asset);\n\n\t\t\t\tthis._materialLoaded.push(lm);\n\n\t\t\t\tif (this._meshes.length > 0) {\n\t\t\t\t\tthis.applyMaterial(lm);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tif (resourceDependency.id == \"mtl\") {\n\t\t\tthis._mtlLib = false;\n\t\t\tthis._mtlLibLoaded = false;\n\t\t} else {\n\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\tlm.materialID = resourceDependency.id;\n\t\t\tthis._materialLoaded.push(lm);\n\t\t}\n\n\t\tif (this._meshes.length > 0)\n\t\t\tthis.applyMaterial(lm);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar line:string;\n\t\tvar creturn:string = String.fromCharCode(10);\n\t\tvar trunk;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\t// Merge linebreaks that are immediately preceeded by\n\t\t\t// the \"escape\" backward slash into single lines.\n\t\t\tthis._textData = this._textData.replace(/\\\\[\\r\\n]+\\s*/gm, ' ');\n\t\t}\n\n\t\tif (this._textData.indexOf(creturn) == -1)\n\t\t\tcreturn = String.fromCharCode(13);\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._startedParsing = true;\n\t\t\tthis._vertices = new Array<Vertex>();\n\t\t\tthis._vertexNormals = new Array<Vertex>();\n\t\t\tthis._materialIDs = new Array<string>();\n\t\t\tthis._materialLoaded = new Array<LoadedMaterial>();\n\t\t\tthis._meshes = new Array<Mesh>();\n\t\t\tthis._uvs = new Array<UV>();\n\t\t\tthis._stringLength = this._textData.length;\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, 0);\n\t\t\tthis._oldIndex = 0;\n\t\t\tthis._objects = new Array<ObjectGroup>();\n\t\t\tthis._objectIndex = 0;\n\t\t}\n\n\t\twhile (this._charIndex < this._stringLength && this._pHasTime()) {\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, this._oldIndex);\n\n\t\t\tif (this._charIndex == -1)\n\t\t\t\tthis._charIndex = this._stringLength;\n\n\t\t\tline = this._textData.substring(this._oldIndex, this._charIndex);\n\t\t\tline = line.split('\\r').join(\"\");\n\t\t\tline = line.replace(\"  \", \" \");\n\t\t\ttrunk = line.split(\" \");\n\t\t\tthis._oldIndex = this._charIndex + 1;\n\t\t\tthis.parseLine(trunk);\n\n\t\t\t// If whatever was parsed on this line resulted in the\n\t\t\t// parsing being paused to retrieve dependencies, break\n\t\t\t// here and do not continue parsing until un-paused.\n\t\t\tif (this.parsingPaused) {\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._charIndex >= this._stringLength) {\n\n\t\t\tif (this._mtlLib && !this._mtlLibLoaded) {\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\n\t\t\tthis.translate();\n\t\t\tthis.applyMaterials();\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\t/**\n\t * Parses a single line in the OBJ file.\n\t */\n\tprivate parseLine(trunk)\n\t{\n\t\tswitch (trunk[0]) {\n\n\t\t\tcase \"mtllib\":\n\n\t\t\t\tthis._mtlLib = true;\n\t\t\t\tthis._mtlLibLoaded = false;\n\t\t\t\tthis.loadMtl(trunk[1]);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"g\":\n\n\t\t\t\tthis.createGroup(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"o\":\n\n\t\t\t\tthis.createObject(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"usemtl\":\n\n\t\t\t\tif (this._mtlLib) {\n\n\t\t\t\t\tif (!trunk[1])\n\t\t\t\t\t\ttrunk[1] = \"def000\";\n\n\t\t\t\t\tthis._materialIDs.push(trunk[1]);\n\t\t\t\t\tthis._activeMaterialID = trunk[1];\n\n\t\t\t\t\tif (this._currentGroup)\n\t\t\t\t\t\tthis._currentGroup.materialID = this._activeMaterialID;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"v\":\n\n\t\t\t\tthis.parseVertex(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"vt\":\n\n\t\t\t\tthis.parseUV(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"vn\":\n\n\t\t\t\tthis.parseVertexNormal(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"f\":\n\n\t\t\t\tthis.parseFace(trunk);\n\n\t\t}\n\t}\n\n\t/**\n\t * Converts the parsed data into an Away3D scenegraph structure\n\t */\n\tprivate translate()\n\t{\n\t\tfor (var objIndex:number = 0; objIndex < this._objects.length; ++objIndex) {\n\t\t\tvar groups:Array<Group> = this._objects[objIndex].groups;\n\t\t\tvar numGroups:number = groups.length;\n\t\t\tvar materialGroups:Array<MaterialGroup>;\n\t\t\tvar numMaterialGroups:number;\n\t\t\tvar geometry:Geometry;\n\t\t\tvar mesh:Mesh;\n\n\t\t\tvar m:number;\n\t\t\tvar sm:number;\n\t\t\tvar bmMaterial:MethodMaterial;\n\n\t\t\tfor (var g:number = 0; g < numGroups; ++g) {\n\t\t\t\tgeometry = new Geometry();\n\t\t\t\tmaterialGroups = groups[g].materialGroups;\n\t\t\t\tnumMaterialGroups = materialGroups.length;\n\n\t\t\t\tfor (m = 0; m < numMaterialGroups; ++m)\n\t\t\t\t\tthis.translateMaterialGroup(materialGroups[m], geometry);\n\n\t\t\t\tif (geometry.subGeometries.length == 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Finalize and force type-based name\n\t\t\t\tthis._pFinalizeAsset(<IAsset> geometry);//, \"\");\n\n\t\t\t\tbmMaterial = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\n\n\t\t\t\t//check for multipass\n\t\t\t\tif (this.materialMode >= 2)\n\t\t\t\t\tbmMaterial.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\tmesh = new Mesh(geometry, bmMaterial);\n\n\t\t\t\tif (this._objects[objIndex].name) {\n\t\t\t\t\t// this is a full independent object ('o' tag in OBJ file)\n\t\t\t\t\tmesh.name = this._objects[objIndex].name;\n\n\t\t\t\t} else if (groups[g].name) {\n\n\t\t\t\t\t// this is a group so the sub groups contain the actual mesh object names ('g' tag in OBJ file)\n\t\t\t\t\tmesh.name = groups[g].name;\n\n\t\t\t\t} else {\n\t\t\t\t\t// No name stored. Use empty string which will force it\n\t\t\t\t\t// to be overridden by finalizeAsset() to type default.\n\t\t\t\t\tmesh.name = \"\";\n\t\t\t\t}\n\n\t\t\t\tthis._meshes.push(mesh);\n\n\t\t\t\tif (groups[g].materialID != \"\")\n\t\t\t\t\tbmMaterial.name = groups[g].materialID + \"~\" + mesh.name; else\n\t\t\t\t\tbmMaterial.name = this._lastMtlID + \"~\" + mesh.name;\n\n\t\t\t\tif (mesh.subMeshes.length > 1) {\n\t\t\t\t\tfor (sm = 1; sm < mesh.subMeshes.length; ++sm)\n\t\t\t\t\t\tmesh.subMeshes[sm].material = bmMaterial;\n\t\t\t\t}\n\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\n\n\t\t\t\tthis._pFinalizeAsset(<IAsset> mesh);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Translates an obj's material group to a subgeometry.\n\t * @param materialGroup The material group data to convert.\n\t * @param geometry The Geometry to contain the converted SubGeometry.\n\t */\n\tprivate translateMaterialGroup(materialGroup:MaterialGroup, geometry:Geometry)\n\t{\n\t\tvar faces:Array<FaceData> = materialGroup.faces;\n\t\tvar face:FaceData;\n\t\tvar numFaces:number = faces.length;\n\t\tvar numVerts:number;\n\t\tvar sub:TriangleSubGeometry;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\t\tvar uvs:Array<number> = new Array<number>();\n\t\tvar normals:Array<number> = new Array<number>();\n\t\tvar indices:Array<number> /*uint*/ = new Array<number>();\n\n\t\tthis._realIndices = [];\n\t\tthis._vertexIndex = 0;\n\n\t\tvar j:number;\n\t\tfor (var i:number = 0; i < numFaces; ++i) {\n\n\t\t\tface = faces[i];\n\t\t\tnumVerts = face.indexIds.length - 1;\n\n\t\t\tfor (j = 1; j < numVerts; ++j) {\n\n\t\t\t\tthis.translateVertexData(face, j, vertices, uvs, indices, normals);\n\t\t\t\tthis.translateVertexData(face, 0, vertices, uvs, indices, normals);\n\t\t\t\tthis.translateVertexData(face, j + 1, vertices, uvs, indices, normals);\n\t\t\t}\n\t\t}\n\t\tif (vertices.length > 0) {\n\t\t\tsub = new TriangleSubGeometry(true);\n\t\t\tsub.autoDeriveNormals = normals.length? false : true;\n\t\t\tsub.updateIndices(indices);\n\t\t\tsub.updatePositions(vertices);\n\t\t\tsub.updateVertexNormals(normals);\n\t\t\tsub.updateUVs(uvs);\n\n\t\t\tgeometry.addSubGeometry(sub);\n\t\t}\n\t}\n\n\tprivate translateVertexData(face:FaceData, vertexIndex:number, vertices:Array<number>, uvs:Array<number>, indices:Array<number> /*uint*/, normals:Array<number>)\n\t{\n\t\tvar index:number;\n\t\tvar vertex:Vertex;\n\t\tvar vertexNormal:Vertex;\n\t\tvar uv:UV;\n\n\t\tif (!this._realIndices[face.indexIds[vertexIndex]]) {\n\n\t\t\tindex = this._vertexIndex;\n\t\t\tthis._realIndices[face.indexIds[vertexIndex]] = ++this._vertexIndex;\n\t\t\tvertex = this._vertices[face.vertexIndices[vertexIndex] - 1];\n\t\t\tvertices.push(vertex.x*this._scale, vertex.y*this._scale, vertex.z*this._scale);\n\n\t\t\tif (face.normalIndices.length > 0) {\n\t\t\t\tvertexNormal = this._vertexNormals[face.normalIndices[vertexIndex] - 1];\n\t\t\t\tnormals.push(vertexNormal.x, vertexNormal.y, vertexNormal.z);\n\t\t\t}\n\n\t\t\tif (face.uvIndices.length > 0) {\n\n\t\t\t\ttry {\n\t\t\t\t\tuv = this._uvs[face.uvIndices[vertexIndex] - 1];\n\t\t\t\t\tuvs.push(uv.u, uv.v);\n\n\t\t\t\t} catch (e) {\n\n\t\t\t\t\tswitch (vertexIndex) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tuvs.push(0, 1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tuvs.push(.5, 0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tuvs.push(1, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tindex = this._realIndices[face.indexIds[vertexIndex]] - 1;\n\t\t}\n\n\t\tindices.push(index);\n\t}\n\n\t/**\n\t * Creates a new object group.\n\t * @param trunk The data block containing the object tag and its parameters\n\t */\n\tprivate createObject(trunk)\n\t{\n\t\tthis._currentGroup = null;\n\t\tthis._currentMaterialGroup = null;\n\t\tthis._objects.push(this._currentObject = new ObjectGroup());\n\n\t\tif (trunk)\n\t\t\tthis._currentObject.name = trunk[1];\n\t}\n\n\t/**\n\t * Creates a new group.\n\t * @param trunk The data block containing the group tag and its parameters\n\t */\n\tprivate createGroup(trunk)\n\t{\n\t\tif (!this._currentObject)\n\t\t\tthis.createObject(null);\n\t\tthis._currentGroup = new Group();\n\n\t\tthis._currentGroup.materialID = this._activeMaterialID;\n\n\t\tif (trunk)\n\t\t\tthis._currentGroup.name = trunk[1];\n\t\tthis._currentObject.groups.push(this._currentGroup);\n\n\t\tthis.createMaterialGroup(null);\n\t}\n\n\t/**\n\t * Creates a new material group.\n\t * @param trunk The data block containing the material tag and its parameters\n\t */\n\tprivate createMaterialGroup(trunk)\n\t{\n\t\tthis._currentMaterialGroup = new MaterialGroup();\n\t\tif (trunk)\n\t\t\tthis._currentMaterialGroup.url = trunk[1];\n\t\tthis._currentGroup.materialGroups.push(this._currentMaterialGroup);\n\t}\n\n\t/**\n\t * Reads the next vertex coordinates.\n\t * @param trunk The data block containing the vertex tag and its parameters\n\t */\n\tprivate parseVertex(trunk)\n\t{\n\t\t//for the very rare cases of other delimiters/charcodes seen in some obj files\n\n\t\tvar v1:number, v2:number , v3:number;\n\t\tif (trunk.length > 4) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\n\t\t\tv1 = <number> nTrunk[0];\n\t\t\tv2 = <number> nTrunk[1];\n\t\t\tv3 = <number> -nTrunk[2];\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\n\n\t\t} else {\n\t\t\tv1 = <number> parseFloat(trunk[1]);\n\t\t\tv2 = <number> parseFloat(trunk[2]);\n\t\t\tv3 = <number> -parseFloat(trunk[3]);\n\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the next uv coordinates.\n\t * @param trunk The data block containing the uv tag and its parameters\n\t */\n\tprivate parseUV(trunk)\n\t{\n\t\tif (trunk.length > 3) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\t\t\tthis._uvs.push(new UV(nTrunk[0], 1 - nTrunk[1]));\n\n\t\t} else {\n\t\t\tthis._uvs.push(new UV(parseFloat(trunk[1]), 1 - parseFloat(trunk[2])));\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the next vertex normal coordinates.\n\t * @param trunk The data block containing the vertex normal tag and its parameters\n\t */\n\tprivate parseVertexNormal(trunk)\n\t{\n\t\tif (trunk.length > 4) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\t\t\tthis._vertexNormals.push(new Vertex(nTrunk[0], nTrunk[1], -nTrunk[2]));\n\n\t\t} else {\n\t\t\tthis._vertexNormals.push(new Vertex(parseFloat(trunk[1]), parseFloat(trunk[2]), -parseFloat(trunk[3])));\n\t\t}\n\t}\n\n\t/**\n\t * Reads the next face's indices.\n\t * @param trunk The data block containing the face tag and its parameters\n\t */\n\tprivate parseFace(trunk)\n\t{\n\t\tvar len:number = trunk.length;\n\t\tvar face:FaceData = new FaceData();\n\n\t\tif (!this._currentGroup) {\n\t\t\tthis.createGroup(null);\n\t\t}\n\n\t\tvar indices;\n\t\tfor (var i:number = 1; i < len; ++i) {\n\n\t\t\tif (trunk[i] == \"\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices = trunk[i].split(\"/\");\n\t\t\tface.vertexIndices.push(this.parseIndex(parseInt(indices[0]), this._vertices.length));\n\n\t\t\tif (indices[1] && String(indices[1]).length > 0)\n\t\t\t\tface.uvIndices.push(this.parseIndex(parseInt(indices[1]), this._uvs.length));\n\n\t\t\tif (indices[2] && String(indices[2]).length > 0)\n\t\t\t\tface.normalIndices.push(this.parseIndex(parseInt(indices[2]), this._vertexNormals.length));\n\n\t\t\tface.indexIds.push(trunk[i]);\n\t\t}\n\n\t\tthis._currentMaterialGroup.faces.push(face);\n\t}\n\n\t/**\n\t * This is a hack around negative face coords\n\t */\n\tprivate parseIndex(index:number, length:number):number\n\t{\n\t\tif (index < 0)\n\t\t\treturn index + length + 1; else\n\t\t\treturn index;\n\t}\n\n\tprivate parseMtl(data:string)\n\t{\n\t\tvar materialDefinitions = data.split('newmtl');\n\t\tvar lines;\n\t\tvar trunk;\n\t\tvar j:number;\n\n\t\tvar basicSpecularMethod:SpecularBasicMethod;\n\t\tvar useSpecular:boolean;\n\t\tvar useColor:boolean;\n\t\tvar diffuseColor:number;\n\t\tvar color:number;\n\t\tvar specularColor:number;\n\t\tvar specular:number;\n\t\tvar alpha:number;\n\t\tvar mapkd:string;\n\n\t\tfor (var i:number = 0; i < materialDefinitions.length; ++i) {\n\n\n\t\t\tlines = (materialDefinitions[i].split('\\r')).join(\"\").split('\\n');\n\t\t\t//lines = (materialDefinitions[i].split('\\r') as Array).join(\"\").split('\\n');\n\n\t\t\tif (lines.length == 1)\n\t\t\t\tlines = materialDefinitions[i].split(String.fromCharCode(13));\n\n\t\t\tdiffuseColor = color = specularColor = 0xFFFFFF;\n\t\t\tspecular = 0;\n\t\t\tuseSpecular = false;\n\t\t\tuseColor = false;\n\t\t\talpha = 1;\n\t\t\tmapkd = \"\";\n\n\t\t\tfor (j = 0; j < lines.length; ++j) {\n\n\t\t\t\tlines[j] = lines[j].replace(/\\s+$/, \"\");\n\n\t\t\t\tif (lines[j].substring(0, 1) != \"#\" && (j == 0 || lines[j] != \"\")) {\n\t\t\t\t\ttrunk = lines[j].split(\" \");\n\n\t\t\t\t\tif (String(trunk[0]).charCodeAt(0) == 9 || String(trunk[0]).charCodeAt(0) == 32)\n\t\t\t\t\t\ttrunk[0] = trunk[0].substring(1, trunk[0].length);\n\n\t\t\t\t\tif (j == 0) {\n\t\t\t\t\t\tthis._lastMtlID = trunk.join(\"\");\n\t\t\t\t\t\tthis._lastMtlID = (this._lastMtlID == \"\")? \"def000\" : this._lastMtlID;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tswitch (trunk[0]) {\n\n\t\t\t\t\t\t\tcase \"Ka\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3])))\n\t\t\t\t\t\t\t\t\tcolor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Ks\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\n\t\t\t\t\t\t\t\t\tspecularColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\t\tuseSpecular = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Ns\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\n\t\t\t\t\t\t\t\t\tspecular = Number(trunk[1])*0.001;\n\t\t\t\t\t\t\t\tif (specular == 0)\n\t\t\t\t\t\t\t\t\tuseSpecular = false;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Kd\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\n\t\t\t\t\t\t\t\t\tdiffuseColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\t\tuseColor = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"tr\":\n\t\t\t\t\t\t\tcase \"d\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\n\t\t\t\t\t\t\t\t\talpha = Number(trunk[1]);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"map_Kd\":\n\t\t\t\t\t\t\t\tmapkd = this.parseMapKdString(trunk);\n\t\t\t\t\t\t\t\tmapkd = mapkd.replace(/\\\\/g, \"/\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mapkd != \"\") {\n\n\t\t\t\tif (useSpecular) {\n\n\t\t\t\t\tbasicSpecularMethod = new SpecularBasicMethod();\n\t\t\t\t\tbasicSpecularMethod.specularColor = specularColor;\n\t\t\t\t\tbasicSpecularMethod.specular = specular;\n\n\t\t\t\t\tvar specularData:SpecularData = new SpecularData();\n\t\t\t\t\tspecularData.alpha = alpha;\n\t\t\t\t\tspecularData.basicSpecularMethod = basicSpecularMethod;\n\t\t\t\t\tspecularData.materialID = this._lastMtlID;\n\n\t\t\t\t\tif (!this._materialSpecularData)\n\t\t\t\t\t\tthis._materialSpecularData = new Array<SpecularData>();\n\n\t\t\t\t\tthis._materialSpecularData.push(specularData);\n\n\t\t\t\t}\n\n\t\t\t\tthis._pAddDependency(this._lastMtlID, new URLRequest(mapkd));\n\n\t\t\t} else if (useColor && !isNaN(color)) {\n\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\t\tlm.materialID = this._lastMtlID;\n\n\t\t\t\tif (alpha == 0)\n\t\t\t\t\tconsole.log(\"Warning: an alpha value of 0 was found in mtl color tag (Tr or d) ref:\" + this._lastMtlID + \", mesh(es) using it will be invisible!\");\n\n\t\t\t\tvar cm:MethodMaterial;\n\n\t\t\t\tif (this.materialMode < 2) {\n\t\t\t\t\tcm = new MethodMaterial(color);\n\n\t\t\t\t\tvar colorMat:MethodMaterial = <MethodMaterial> cm;\n\n\t\t\t\t\tcolorMat.alpha = alpha;\n\t\t\t\t\tcolorMat.diffuseColor = diffuseColor;\n\t\t\t\t\tcolorMat.repeat = true;\n\n\t\t\t\t\tif (useSpecular) {\n\t\t\t\t\t\tcolorMat.specularColor = specularColor;\n\t\t\t\t\t\tcolorMat.specular = specular;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tcm = new MethodMaterial(color);\n\t\t\t\t\tcm.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\t\tvar colorMultiMat:MethodMaterial = <MethodMaterial> cm;\n\n\n\t\t\t\t\tcolorMultiMat.diffuseColor = diffuseColor;\n\t\t\t\t\tcolorMultiMat.repeat = true;\n\n\t\t\t\t\tif (useSpecular) {\n\t\t\t\t\t\tcolorMultiMat.specularColor = specularColor;\n\t\t\t\t\t\tcolorMultiMat.specular = specular;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlm.cm = cm;\n\n\t\t\t\tthis._materialLoaded.push(lm);\n\n\t\t\t\tif (this._meshes.length > 0)\n\t\t\t\t\tthis.applyMaterial(lm);\n\n\t\t\t}\n\t\t}\n\n\t\tthis._mtlLibLoaded = true;\n\t}\n\n\tprivate parseMapKdString(trunk):string\n\t{\n\t\tvar url:string = \"\";\n\t\tvar i:number;\n\t\tvar breakflag:boolean;\n\n\t\tfor (i = 1; i < trunk.length;) {\n\t\t\tswitch (trunk[i]) {\n\t\t\t\tcase \"-blendu\":\n\t\t\t\tcase \"-blendv\":\n\t\t\t\tcase \"-cc\":\n\t\t\t\tcase \"-clamp\":\n\t\t\t\tcase \"-texres\":\n\t\t\t\t\ti += 2; //Skip ahead 1 attribute\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"-mm\":\n\t\t\t\t\ti += 3; //Skip ahead 2 attributes\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"-o\":\n\t\t\t\tcase \"-s\":\n\t\t\t\tcase \"-t\":\n\t\t\t\t\ti += 4; //Skip ahead 3 attributes\n\t\t\t\t\tcontinue;\n\t\t\t\tdefault:\n\t\t\t\t\tbreakflag = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (breakflag)\n\t\t\t\tbreak;\n\t\t}\n\n\t\t//Reconstruct URL/filename\n\t\tfor (i; i < trunk.length; i++) {\n\t\t\turl += trunk[i];\n\t\t\turl += \" \";\n\t\t}\n\n\t\t//Remove the extraneous space and/or newline from the right side\n\t\turl = url.replace(/\\s+$/, \"\");\n\n\t\treturn url;\n\t}\n\n\tprivate loadMtl(mtlurl:string)\n\t{\n\t\t// Add raw-data dependency to queue and load dependencies now,\n\t\t// which will pause the parsing in the meantime.\n\t\tthis._pAddDependency('mtl', new URLRequest(mtlurl), true);\n\t\tthis._pPauseAndRetrieveDependencies();//\n\t}\n\n\tprivate applyMaterial(lm:LoadedMaterial)\n\t{\n\t\tvar decomposeID;\n\t\tvar mesh:Mesh;\n\t\tvar tm:MethodMaterial;\n\t\tvar j:number;\n\t\tvar specularData:SpecularData;\n\n\t\tfor (var i:number = 0; i < this._meshes.length; ++i) {\n\t\t\tmesh = this._meshes[i];\n\t\t\tdecomposeID = mesh.material.name.split(\"~\");\n\n\t\t\tif (decomposeID[0] == lm.materialID) {\n\n\t\t\t\tif (lm.cm) {\n\t\t\t\t\tif (mesh.material)\n\t\t\t\t\t\tmesh.material = null;\n\t\t\t\t\tmesh.material = lm.cm;\n\n\t\t\t\t} else if (lm.texture) {\n\t\t\t\t\tif (this.materialMode < 2) { // if materialMode is 0 or 1, we create a SinglePass\n\t\t\t\t\t\ttm = <MethodMaterial > mesh.material;\n\n\t\t\t\t\t\ttm.texture = lm.texture;\n\t\t\t\t\t\ttm.color = lm.color;\n\t\t\t\t\t\ttm.alpha = lm.alpha;\n\t\t\t\t\t\ttm.repeat = true;\n\n\t\t\t\t\t\tif (lm.specularMethod) {\n\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\n\t\t\t\t\t\t\ttm.specularMethod = null;\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\n\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\n\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\n\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\n\t\t\t\t\t\t\t\t\ttm.alpha = specularData.alpha;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { //if materialMode==2 this is a MultiPassTexture\n\t\t\t\t\t\ttm = <MethodMaterial> mesh.material;\n\t\t\t\t\t\ttm.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\t\t\ttm.texture = lm.texture;\n\t\t\t\t\t\ttm.color = lm.color;\n\t\t\t\t\t\ttm.repeat = true;\n\n\t\t\t\t\t\tif (lm.specularMethod) {\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\n\t\t\t\t\t\t\ttm.specularMethod = null;\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\n\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmesh.material.name = decomposeID[1]? decomposeID[1] : decomposeID[0];\n\t\t\t\tthis._meshes.splice(i, 1);\n\t\t\t\t--i;\n\t\t\t}\n\t\t}\n\n\t\tif (lm.cm || tm)\n\t\t\tthis._pFinalizeAsset(lm.cm || tm);\n\t}\n\n\tprivate applyMaterials()\n\t{\n\t\tif (this._materialLoaded.length == 0)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._materialLoaded.length; ++i)\n\t\t\tthis.applyMaterial(this._materialLoaded[i]);\n\t}\n}\n\nexport = OBJParser;\n\nclass ObjectGroup\n{\n\tpublic name:string;\n\tpublic groups:Group[] = new Array<Group>();\n}\n\nclass Group\n{\n\tpublic name:string;\n\tpublic materialID:string;\n\tpublic materialGroups:MaterialGroup[] = new Array<MaterialGroup>();\n}\n\nclass MaterialGroup\n{\n\tpublic url:string;\n\tpublic faces:FaceData[] = new Array<FaceData>();\n}\n\nclass SpecularData\n{\n\tpublic materialID:string;\n\tpublic basicSpecularMethod:SpecularBasicMethod;\n\tpublic color:number = 0xFFFFFF;\n\tpublic alpha:number = 1;\n}\n\nclass LoadedMaterial\n{\n\tpublic materialID:string;\n\tpublic texture:Single2DTexture;\n\tpublic cm:MaterialBase;\n\tpublic specularMethod:SpecularBasicMethod;\n\tpublic color:number = 0xFFFFFF;\n\tpublic alpha:number = 1;\n}\n\nclass FaceData\n{\n\tpublic vertexIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic uvIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic normalIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic indexIds:string[] = new Array<string>(); // used for real index lookups\n}\n\n/**\n* Texture coordinates value object.\n*/\nclass UV\n{\n\tprivate _u:number;\n\tprivate _v:number;\n\n\t/**\n\t * Creates a new <code>UV</code> object.\n\t *\n\t * @param    u        [optional]    The horizontal coordinate of the texture value. Defaults to 0.\n\t * @param    v        [optional]    The vertical coordinate of the texture value. Defaults to 0.\n\t */\n\tconstructor(u:number = 0, v:number = 0)\n\t{\n\t\tthis._u = u;\n\t\tthis._v = v;\n\t}\n\n\t/**\n\t * Defines the vertical coordinate of the texture value.\n\t */\n\tpublic get v():number\n\t{\n\t\treturn this._v;\n\t}\n\n\tpublic set v(value:number)\n\t{\n\t\tthis._v = value;\n\t}\n\n\t/**\n\t * Defines the horizontal coordinate of the texture value.\n\t */\n\tpublic get u():number\n\t{\n\t\treturn this._u;\n\t}\n\n\tpublic set u(value:number)\n\t{\n\t\tthis._u = value;\n\t}\n\n\t/**\n\t * returns a new UV value Object\n\t */\n\tpublic clone():UV\n\t{\n\t\treturn new UV(this._u, this._v);\n\t}\n\n\t/**\n\t * returns the value object as a string for trace/debug purpose\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._u + \",\" + this._v;\n\t}\n}\n\nclass Vertex\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _z:number;\n\tprivate _index:number;\n\n\t/**\n\t * Creates a new <code>Vertex</code> value object.\n\t *\n\t * @param    x            [optional]    The x value. Defaults to 0.\n\t * @param    y            [optional]    The y value. Defaults to 0.\n\t * @param    z            [optional]    The z value. Defaults to 0.\n\t * @param    index        [optional]    The index value. Defaults is NaN.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, index:number = 0)\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._index = index;\n\t}\n\n\t/**\n\t * To define/store the index of value object\n\t * @param    ind        The index\n\t */\n\tpublic set index(ind:number)\n\t{\n\t\tthis._index = ind;\n\t}\n\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n\n\t/**\n\t * To define/store the x value of the value object\n\t * @param    value        The x value\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tthis._x = value;\n\t}\n\n\t/**\n\t * To define/store the y value of the value object\n\t * @param    value        The y value\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tthis._y = value;\n\t}\n\n\t/**\n\t * To define/store the z value of the value object\n\t * @param    value        The z value\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(value:number)\n\t{\n\t\tthis._z = value;\n\t}\n\n\t/**\n\t * returns a new Vertex value Object\n\t */\n\tpublic clone():Vertex\n\t{\n\t\treturn new Vertex(this._x, this._y, this._z);\n\t}\n}",
    "import AssetLoader\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\n\nimport AWDParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWDParser\");\nimport Max3DSParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/Max3DSParser\");\nimport MD2Parser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/MD2Parser\");\nimport OBJParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/OBJParser\");\n\n/**\n *\n */\nclass Parsers\n{\n\t/**\n\t * A list of all parsers that come bundled with Away3D. Use this to quickly\n\t * enable support for all bundled parsers to the file format auto-detection\n\t * feature, using any of the enableParsers() methods on loaders, e.g.:\n\t *\n\t * <code>AssetLibrary.enableParsers(Parsers.ALL_BUNDLED);</code>\n\t *\n\t * Beware however that this requires all parser classes to be included in the\n\t * SWF file, which will add 50-100 kb to the file. When only a limited set of\n\t * file formats are used, SWF file size can be saved by adding the parsers\n\t * individually using AssetLibrary.enableParser()\n\t *\n\t * A third way is to specify a parser for each loaded file, thereby bypassing\n\t * the auto-detection mechanisms altogether, while at the same time allowing\n\t * any properties that are unique to that parser to be set for that load.\n\t *\n\t * The bundled parsers are:\n\t *\n\t * <ul>\n\t * <li>AC3D (.ac)</li>\n\t * <li>Away Data version 1 ASCII and version 2 binary (.awd). AWD1 BSP unsupported</li>\n\t * <li>3DMax (.3ds)</li>\n\t * <li>DXF (.dxf)</li>\n\t * <li>Quake 2 MD2 models (.md2)</li>\n\t * <li>Doom 3 MD5 animation clips (.md5anim)</li>\n\t * <li>Doom 3 MD5 meshes (.md5mesh)</li>\n\t * <li>Wavefront OBJ (.obj)</li>\n\t * <li>Collada (.dae)</li>\n\t * <li>Images (.jpg, .png)</li>\n\t * </ul>\n\t *\n\t * @see away.library.AssetLibrary.enableParser\n\t */\n\tpublic static ALL_BUNDLED:Array<Object> = Array<Object>(AWDParser, Max3DSParser, MD2Parser, OBJParser);\n\n\t/**\n\t * Short-hand function to enable all bundled parsers for auto-detection. In practice,\n\t * this is the same as invoking enableParsers(Parsers.ALL_BUNDLED) on any of the\n\t * loader classes SingleFileLoader, AssetLoader, AssetLibrary or Loader3D.\n\t *\n\t * See notes about file size in the documentation for the ALL_BUNDLED constant.\n\t *\n\t * @see away.parsers.Parsers.ALL_BUNDLED\n\t */\n\tpublic static enableAllBundled():void\n\t{\n\t\tAssetLoader.enableParsers(Parsers.ALL_BUNDLED);\n\t}\n}\n\nexport = Parsers;"
  ],
  "sourceRoot": ""
}