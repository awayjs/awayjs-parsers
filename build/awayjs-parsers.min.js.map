{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase.ts",
    "awayjs-parsers.js",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBlock.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDProperties.ts",
    "awayjs-parsers/lib/AWD3Parser.ts",
    "awayjs-parsers/lib/AWDParser.ts",
    "awayjs-parsers/lib/MD2Parser.ts",
    "awayjs-parsers/lib/MD5AnimParser.ts",
    "awayjs-parsers/lib/MD5MeshParser.ts",
    "awayjs-parsers/lib/Max3DSParser.ts",
    "awayjs-parsers/lib/OBJParser.ts",
    "awayjs-parsers/lib/Parsers.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase",
    "module",
    "AbstractMethodError",
    "AWDAssetParserBase",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "this",
    "_awd_file_data",
    "set",
    "awd_file_data",
    "enumerable",
    "configurable",
    "parseFromBytes",
    "awayjs-core/lib/errors/AbstractMethodError",
    "undefined",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers",
    "GeometryAWDParser",
    "PrefabAWDParser",
    "DisplayObjectContainerAWDParser",
    "MeshAWDParser",
    "BillboardAWDParser",
    "Single2DTextureAWDParser",
    "CameraAWDParser",
    "SingleCubeTextureAWDParser",
    "LightAWDParser",
    "LightPickerAWDParser",
    "MaterialAWDParser",
    "MovieClipAWDParser",
    "ShadowMethodAWDParser",
    "SharedMethodAWDParser",
    "SkeletonAnimClipAWDParser",
    "SkeletonAWDParser",
    "SkeletonPoseAWDParser",
    "SkyboxAWDParser",
    "TesselatedFontAWDParser",
    "TextfieldAWDParser",
    "TextformatAWDParser",
    "VertexAnimationSetAWDParser",
    "VertexAnimClipAWDParser",
    "CommandAWDParser",
    "MetadataAWDParser",
    "BlockNameSpaceAWDParser",
    "AnimatorAWDParser",
    "AudioAWDParser",
    "AWDBlockParsers",
    "_supported_asset_blocks",
    "_all_block_parsers",
    "Array",
    "add_block_parser",
    "block_parser",
    "block_types",
    "push",
    "init_parser",
    "file_data",
    "parseAsset",
    "type",
    "this_parser",
    "awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser",
    "__extends",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "AWDBlockParserBase",
    "VertexAnimator",
    "SkeletonAnimator",
    "AWD3Utils",
    "_super",
    "animSetBlockAdress",
    "targetAnimationSet",
    "cur_block",
    "name",
    "parseVarStr",
    "newBlockBytes",
    "readUnsignedShort",
    "props",
    "parseProperties",
    1,
    "BADDR",
    "readUnsignedInt",
    "targetMeshLength",
    "meshAdresses",
    "activeState",
    "autoplay",
    "readUnsignedByte",
    "parseUserAttributes",
    "returnedArray",
    "targetMeshes",
    "targetMesh",
    "getAssetByID",
    "thisAnimator",
    "skeleton",
    "animator",
    "data",
    "debug",
    "console",
    "log",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "ByteArray",
    "data_len",
    "url",
    "readUTFBytes",
    "dependencies_urls",
    "readBytes",
    "dependencies_data",
    "state",
    "BLOCKSTATE_LOAD_DEPENDENICES",
    "audioStylesNames",
    "awayjs-core/lib/utils/ByteArray",
    "Billboard",
    "BasicMaterial",
    "data_id",
    "mat",
    "bothSides",
    "billboard",
    "extra",
    "awayjs-display/lib/entities/Billboard",
    "awayjs-display/lib/materials/BasicMaterial",
    "BLOCKSTATE_NO_ASSET",
    "id",
    "nameSpaceString",
    "Camera",
    "PerspectiveProjection",
    "OrthographicProjection",
    "OrthographicOffCenterProjection",
    "Vector3D",
    "CameraAWD3Parser",
    "par_id",
    "mtx",
    "parseMatrix3D",
    "parentName",
    "projection",
    "readShort",
    "projectiontype",
    101,
    "propsNrType",
    102,
    103,
    104,
    "camera",
    "transform",
    "matrix3D",
    "parent",
    "addChild",
    "matrixNrType",
    2,
    3,
    4,
    "UINT8",
    "pivot",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "awayjs-core/lib/projections/OrthographicProjection",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/Camera",
    "hasBlocks",
    "parentObject",
    "targetObject",
    "numCommands",
    "typeCommand",
    "targetID",
    "DisplayObjectContainer",
    "ctr",
    "major_version",
    "minor_version",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "AttributesBuffer",
    "Geometry",
    "CurveSubGeometry",
    "TriangleSubGeometry",
    "geom",
    "num_subs",
    "geoNrType",
    "geoScaleU",
    "geoScaleV",
    "subs_parsed",
    "is_curve_geom",
    "sm_len",
    "sm_end",
    "w_indices",
    "weights",
    "position",
    "subProps",
    "idx",
    "str_ftype",
    "str_type",
    "str_len",
    "str_end",
    "x",
    "y",
    "z",
    "verts",
    "readNumber",
    "accuracyGeo",
    "indices",
    "uvs",
    "normals",
    "idx_pos",
    "idx_curves",
    "idx_uvs",
    "positions",
    "curveData",
    "curve_sub_geom",
    "setIndices",
    "setPositions",
    "setCurves",
    "setUVs",
    "addSubGeometry",
    "triangle_sub_geom",
    "jointsPerVertex",
    "autoDeriveNormals",
    "autoDeriveUVs",
    "autoDeriveTangents",
    "setNormals",
    "setTangents",
    "setJointWeights",
    "setJointIndices",
    "scaleU",
    "scaleV",
    "setSubUVs",
    "scaleUV",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/base/CurveSubGeometry",
    "awayjs-display/lib/base/Geometry",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "CubeMapShadowMapper",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "PointLight",
    "light",
    "newShadowMapper",
    "lightType",
    "COLOR",
    5,
    6,
    "BOOL",
    7,
    8,
    9,
    10,
    11,
    12,
    "UINT16",
    21,
    22,
    23,
    "shadowMapperType",
    "lightTypes",
    "shadowMapperTypes",
    "radius",
    "fallOff",
    "color",
    "specular",
    "diffuse",
    "ambientColor",
    "ambient",
    "depthMapSize",
    "getDepthSizeFromEnum",
    "shadowMapper",
    "castsShadows",
    "awayjs-display/lib/entities/DirectionalLight",
    "awayjs-display/lib/entities/PointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "StaticLightPicker",
    "numLights",
    "lightsArray",
    "k",
    "lightID",
    "returnedArrayLight",
    "lightsArrayNames",
    "lightPicker",
    "toString",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "MethodMaterialMode",
    "MethodMaterial",
    "DefaultMaterialManager",
    "AmbientEnvMapMethod",
    "DiffuseDepthMethod",
    "DiffuseCelMethod",
    "DiffuseGradientMethod",
    "DiffuseLightMapMethod",
    "DiffuseWrapMethod",
    "NormalSimpleWaterMethod",
    "SpecularFresnelMethod",
    "SpecularAnisotropicMethod",
    "SpecularCelMethod",
    "SpecularPhongMethod",
    "attributes",
    "finalize",
    "num_methods",
    "methods_parsed",
    "normalTexture",
    "specTexture",
    "INT32",
    13,
    "method_type",
    "debugString",
    "tex_addr",
    "texture",
    "getDefaultTexture",
    "alphaThreshold",
    "repeat",
    "UINT32",
    15,
    16,
    17,
    18,
    19,
    20,
    "spezialType",
    "mode",
    "MULTI_PASS",
    "alphaBlending",
    "diftexture",
    "alpha",
    "diffuseTex_addr",
    "diffuseTexture",
    "normalTex_addr",
    "specTex_addr",
    "lightPickerAddr",
    "smooth",
    "mipmap",
    "alphaPremultiplied",
    "blendMode",
    "getBlendModeStringFromEnum",
    "normalMap",
    "specularMap",
    "diffuseColor",
    "gloss",
    "specularColor",
    201,
    202,
    301,
    302,
    401,
    402,
    601,
    602,
    701,
    702,
    801,
    "MTX4x4",
    "fx_method",
    "addEffectMethod",
    "shadow_method",
    "shadowMethod",
    "cubeTex",
    "getDefaultCubeTexture",
    "ambientMethod",
    "diffuseMethod",
    "thisTex",
    "smoothness",
    "specularMethod",
    "fresnelPower",
    "normalReflectance",
    "normalMethod",
    "basic_mat",
    "preserveAlpha",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-methodmaterials/lib/MethodMaterial",
    "awayjs-methodmaterials/lib/MethodMaterialMode",
    "awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseCelMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseDepthMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseGradientMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseWrapMethod",
    "awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod",
    "awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod",
    "awayjs-methodmaterials/lib/methods/SpecularCelMethod",
    "awayjs-methodmaterials/lib/methods/SpecularFresnelMethod",
    "awayjs-methodmaterials/lib/methods/SpecularPhongMethod",
    "Mesh",
    "num_materials",
    "materials_parsed",
    "geoID",
    "materials",
    "materialNames",
    "mat_id",
    "m",
    "mesh",
    "subMeshes",
    "material",
    "Math",
    "min",
    "awayjs-display/lib/entities/Mesh",
    "AWDSTRING",
    "AWDBitFlags",
    "ColorTransform",
    "Matrix3D",
    "Timeline",
    "TextField",
    "AS2SceneGraphFactory",
    "view",
    "factory",
    "j",
    "c",
    "new_mc",
    "createMovieClip",
    "new_timeline",
    "isScene",
    "sceneID",
    "fps",
    "readFloat",
    "ms_per_frame",
    "num_instances",
    "num_all_display_instances",
    "num_potential_childs",
    "resourceID",
    "cmd_asset",
    "registerPotentialChild",
    "num_potential_childs_multi_instanced",
    "num_potential_sounds",
    "numFrames",
    "totalDuration",
    "frameDuration",
    "numLabels",
    "objectID",
    "target_depth",
    "number_of_obj",
    "commandType",
    "hasDepthChanges",
    "sessionCount",
    "remove_depths",
    "potChild",
    "getPotentialChildPrototype",
    "isAsset",
    "props_flag",
    "test",
    "FLAG1",
    "thisMatrix",
    "FLAG2",
    "rawData",
    "FLAG3",
    "thisColorTransform",
    "FLAG4",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "FLAG5",
    "blendmode_int",
    "blendmode_string",
    "FLAG6",
    "FLAG7",
    "instanceName",
    "FLAG8",
    "mask_id_nums",
    "mask_ids",
    "mi_cnt",
    "length_code",
    "timeline",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-display/lib/entities/TextField",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags",
    "awayjs-player/lib/factories/AS2SceneGraphFactory",
    "awayjs-player/lib/timeline/Timeline",
    "PrefabBase",
    "PrimitiveCapsulePrefab",
    "PrimitiveConePrefab",
    "PrimitiveCubePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitivePlanePrefab",
    "PrimitiveSpherePrefab",
    "PrimitiveTorusPrefab",
    "prefab",
    "primType",
    "bsm",
    110,
    111,
    303,
    703,
    704,
    "primitiveTypes",
    "topClosed",
    "bottomClosed",
    "yUp",
    "awayjs-display/lib/prefabs/PrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "ShadowDitheredMethod",
    "ShadowFilteredMethod",
    "ShadowHardMethod",
    "ShadowNearMethod",
    "ShadowSoftMethod",
    "asset",
    "shadowLightID",
    "parseShadowMethodList",
    "methodType",
    "shadow_meth",
    "epsilon",
    "range",
    "awayjs-methodmaterials/lib/methods/ShadowDitheredMethod",
    "awayjs-methodmaterials/lib/methods/ShadowFilteredMethod",
    "awayjs-methodmaterials/lib/methods/ShadowHardMethod",
    "awayjs-methodmaterials/lib/methods/ShadowNearMethod",
    "awayjs-methodmaterials/lib/methods/ShadowSoftMethod",
    "EffectColorMatrixMethod",
    "EffectColorTransformMethod",
    "EffectFogMethod",
    "EffectRimLightMethod",
    "parseSharedMethodList",
    "effectMethodReturn",
    105,
    106,
    107,
    "offCol",
    "colorTransform",
    "awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod",
    "awayjs-methodmaterials/lib/methods/EffectColorTransformMethod",
    "awayjs-methodmaterials/lib/methods/EffectFogMethod",
    "awayjs-methodmaterials/lib/methods/EffectRimLightMethod",
    "textureStylesNames",
    "Skeleton",
    "SkeletonJoint",
    "num_joints",
    "joints_parsed",
    "joint",
    "ibp",
    "parentIndex",
    "inverseBindPose",
    "joints",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonClipNode",
    "frame_dur",
    "pose_addr",
    "clip",
    "num_frames",
    "frames_parsed",
    "skel_pose",
    "addFrame",
    "frames",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "SkeletonPose",
    "JointPose",
    "pose",
    "joint_pose",
    "has_transform",
    "mtx_data",
    "parseMatrix43RawData",
    "orientation",
    "fromMatrix",
    "translation",
    "copyFrom",
    "jointPoses",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "Skybox",
    "cubeTexAddr",
    "cube_tex",
    "new_skybox",
    "awayjs-display/lib/entities/Skybox",
    "Font",
    "new_font",
    "font_style_cnt",
    "font_style_name",
    "new_font_style",
    "get_font_table",
    "set_font_em_size",
    "font_style_char_cnt",
    "font_style_char",
    "set_subgeo_for_char",
    "awayjs-display/lib/text/Font",
    "TextFormat",
    "newTextField",
    "createTextField",
    "text_field_type",
    "displayAsPassword",
    "width",
    "height",
    "num_paragraphs",
    "complete_text",
    "text_format",
    "paracnt",
    "num_textruns",
    "textrun_cnt",
    "format_id",
    "textFormat",
    "txt_length",
    "this_txt",
    "text",
    "selectable",
    "border",
    "awayjs-display/lib/text/TextFormat",
    "newTextFormat",
    "font_id",
    "font",
    "font_name",
    "font_table",
    "font_style",
    "num_uv_values",
    "uv_values",
    "uvcnt",
    "uv_value",
    "format_props",
    "size",
    "letterSpacing",
    "kerning",
    "indent",
    "leftMargin",
    "rightMargin",
    "VertexClipNode",
    "poseOnly",
    "num_submeshes",
    "subMeshParsed",
    "geometry",
    "subGeom",
    "num_Streams",
    "streamsParsed",
    "streamtypes",
    "thisGeo",
    "geoAdress",
    "getUVForVertexAnimation",
    "looping",
    "stitchFinalFrame",
    "subGeometries",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexAnimationSet",
    "SkeletonAnimationSet",
    "poseBlockAdress",
    "skeletonFrames",
    "vertexFrames",
    "animNode",
    "newVertexAnimationSet",
    "addAnimation",
    "animations",
    "animationNames",
    "newSkeletonAnimationSet",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData",
    "BlendMode",
    "SingleCubeTexture",
    "Single2DTexture",
    "AWDProperties",
    "AWDBlock",
    "AWD3FileData",
    "_debug",
    "_accuracyOnBlocks",
    "_blocks",
    "_cur_block",
    "blendModeDic",
    "NORMAL",
    "ADD",
    "ALPHA",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "_depthSizeDic",
    "depthSize",
    "blendmode",
    "dispose",
    "_accuracyMatrix",
    "new_accuracyMatrix",
    "_accuracyProps",
    "new_accuracyProps",
    "_accuracyGeo",
    "new_accuracyGeo",
    "_matrixNrType",
    "newmatrixNrType",
    "_propsNrType",
    "new_props_nr",
    "_geoNrType",
    "new_geoNrType",
    "_newBlockBytes",
    "new_newBlockBytes",
    "create_new_block",
    "new_block",
    "block_cnt",
    "list_len",
    "attibuteCnt",
    "list_end",
    "ns_id",
    "attr_key",
    "attr_type",
    "attr_len",
    "attr_val",
    "INT8",
    "readByte",
    "INT16",
    "readInt",
    "FLOAT32",
    "FLOAT64",
    "readDouble",
    "expected",
    "propertyCnt",
    "len",
    "key",
    "parseAttrValue",
    "elem_len",
    "read_func",
    "VECTOR2x1",
    "VECTOR3x1",
    "VECTOR4x1",
    "MTX3x2",
    "MTX3x3",
    "MTX4x3",
    "list",
    "num_read",
    "num_elems",
    "apply",
    "val",
    "meshID",
    "uvsForVertexAnimation",
    "geoCnt",
    "sub_geom",
    "numVertices",
    "getBlockByID",
    "assetID",
    "getDefaultAsset",
    "assetType",
    "getDefaultMaterial",
    "_defaultCubeTexture",
    "precision",
    "parseMatrix32RawData",
    "mtx_raw",
    "isNaN",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBlock",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDProperties",
    "BLOCKSTATE_FINALIZE",
    "BLOCKSTATE_INVALID",
    "COMPRESSIONMODE_LZMA",
    "UNCOMPRESSED",
    "DEFLATE",
    "LZMA",
    "AWDBYTEARRAY",
    "flags",
    "testFlag",
    "FLAG9",
    "FLAG10",
    "FLAG11",
    "FLAG12",
    "FLAG13",
    "FLAG14",
    "FLAG15",
    "FLAG16",
    "this_id",
    "this_type",
    "loaded_dependencies",
    "loaded_dependencies_cnt",
    "bytes",
    "errorMessages",
    "addError",
    "errorMsg",
    "value",
    "fallback",
    "awayjs-parsers/lib/AWD3Parser",
    "BitmapImageCube",
    "URLLoaderDataFormat",
    "URLRequest",
    "ParserBase",
    "ParserUtils",
    "DisplayObject",
    "AWDAssetParsers",
    "AWD3Parser",
    "ARRAY_BUFFER",
    "_startedParsing",
    "_parsed_header",
    "total_time",
    "geom_time",
    "timeline_time",
    "_block_parser",
    "_awd_data",
    "supportsType",
    "extension",
    "toLowerCase",
    "supportsData",
    "_iResolveDependency",
    "resourceDependency",
    "assets",
    "this_block",
    "parseInt",
    "testure_asset",
    "_pFinalizeAsset",
    "sub_id",
    "cube_image_asset",
    "draw",
    "cube_tex_asset",
    "_iResolveDependencyFailure",
    "_iResolveDependencyName",
    "oldName",
    "block",
    "resetAssetPath",
    "newName",
    "_pProceedParsing",
    "_byteData",
    "_pGetByteData",
    "parseHeader",
    "_compression",
    "_pDieWithError",
    "_body",
    "getBytesAvailable",
    "parsingPaused",
    "parseNextBlock",
    "PARSING_DONE",
    "MORE_TO_PARSE",
    "_pStartParsing",
    "frameLimit",
    "_pContent",
    "block_id",
    "ns",
    "block_type",
    "blockCompression",
    "blockCompressionLZMA",
    "accuracyOnBlocks",
    "accuracyMatrix",
    "accuracyProps",
    "blockEndAll",
    "time_start",
    "performance",
    "now",
    "_pAddDependency",
    "byteArrayToImage",
    "_pPauseAndRetrieveDependencies",
    "time_end",
    "thisTime",
    "body_len",
    "_streaming",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/net/URLRequest",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-display/lib/base/DisplayObject",
    "awayjs-parsers/lib/AWDParser",
    "Float2Attributes",
    "EffectAlphaMaskMethod",
    "EffectEnvMapMethod",
    "EffectFresnelEnvMapMethod",
    "EffectLightMapMethod",
    "AWDParser",
    "_debugTimers",
    "_texture_users",
    "_time_all",
    "_time_geom",
    "_time_timeline",
    "_time_fonts",
    "_time_textfields",
    "_time_sounds",
    "_time_textures",
    "_time_materials",
    "_time_meshes",
    "_num_geom",
    "_num_timeline",
    "_num_fonts",
    "_num_textfields",
    "_num_sounds",
    "_num_textures",
    "_num_materials",
    "_num_meshes",
    "shadowMethodListProperties",
    "PROPERTY_NUMBER",
    "meshPoseAnimationProperties",
    "sharedMethodListProperties",
    "_view",
    "_version",
    "texture_asset",
    "audio_asset",
    "_isParsing",
    "updateTimers",
    "isParsed",
    "start_timeing",
    "_cur_block_id",
    "BitFlags",
    "blockEndBlock",
    "parseMeshLibraryBlock",
    "parseBillBoardLibraryBlock",
    "parseAudioBlock",
    "parseTimeLine",
    "paresTextField",
    "parseTesselatedFont",
    "parseTextFormat",
    "parsePrimitves",
    "parseSkyboxInstance",
    "parseLight",
    "parseCamera",
    "parseLightPicker",
    "parseMaterial_v1",
    "parseCubeTexture",
    "parseSharedMethodBlock",
    "parseShadowMethodBlock",
    "parseMeshPoseAnimation",
    "parseVertexAnimationSet",
    "parseAnimatorSet",
    "parseCommand",
    "parseGeometry",
    "parseContainer",
    "parseMeshInstance",
    "parseMaterial",
    "parseTexture",
    "parseSkeleton",
    "parseSkeletonPose",
    "parseSkeletonAnimation",
    "parseNameSpace",
    "parseMetaData",
    "msgCnt",
    "end_timing",
    "time_delta",
    "blockID",
    "set_whitespace_width",
    "vertexBuffer",
    "bufferView",
    "Uint8Array",
    "arraybytes",
    "textFormatProperties",
    "tf_align_int",
    "align",
    "textFieldTypes",
    "textWidth",
    "abs",
    "textHeight",
    "textFieldProperties",
    "useColorTransform",
    "extras",
    "timeLineContainer",
    "str_cnt",
    "str_data_type",
    "str_counter",
    "keyframes_start_indices_data",
    "new_buffer",
    "Uint16Array",
    "Uint32Array",
    "keyframe_durations",
    "numKeyFrames",
    "frame_command_indices",
    "frame_recipe",
    "command_length_stream",
    "command_index_stream",
    "add_child_stream",
    "remove_child_stream",
    "update_child_stream",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "properties_stream_int",
    "lc",
    "float_array_data",
    "properties_stream_f32_mtx_scale_rot",
    "Float32Array",
    "properties_stream_f32_mtx_pos",
    "properties_stream_f32_mtx_all",
    "properties_stream_f32_ct",
    "_labels",
    "string_props_array",
    "properties_stream_strings",
    "frame_index",
    "one_str_len",
    "add_framescript",
    "init",
    "geometryProperties",
    "subGeometryProperties",
    "primitiveProperties",
    "containerProperties",
    "isPrefab",
    "getNewObject",
    "meshInstanceProperties",
    "tex",
    "cubeMap",
    "lightProperties",
    "cameraProperties",
    "cameraPivotProperties",
    "lightPick",
    "materialProperties",
    "materialMode",
    "material_v1Properties",
    "method_v1Properties",
    "effectMethod",
    "shadowMapMethod",
    "cubeTexture",
    "commandProperties",
    "targetProperties",
    "metaDataProperties",
    "pose_id",
    "geo_id",
    "vertexAnimationSetProperties",
    "clipNode",
    "animatorSetProperties",
    "accuracy",
    "GEO_NUMBER",
    "MATRIX_NUMBER",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod",
    "awayjs-methodmaterials/lib/methods/EffectEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectLightMapMethod",
    "awayjs-parsers/lib/MD2Parser",
    "MD2Parser",
    "textureType",
    "ignoreTexturePath",
    "_clipNodes",
    "_animationSet",
    "materialFinal",
    "geoCreated",
    "_textureType",
    "_ignoreTexturePath",
    "_mesh",
    "_pHasTime",
    "_parsedHeader",
    "_geometry",
    "parseMaterialNames",
    "_parsedUV",
    "parseUV",
    "_parsedFaces",
    "parseFaces",
    "_parsedFrames",
    "parseFrames",
    "_firstSubGeom",
    "clone",
    "_ident",
    "_skinWidth",
    "_skinHeight",
    "_numSkins",
    "_numVertices",
    "_numST",
    "_numTris",
    "_numFrames",
    "_offsetSkins",
    "_offsetST",
    "_offsetTris",
    "_offsetFrames",
    "_offsetEnd",
    "extIndex",
    "slashIndex",
    "_materialNames",
    "regExp",
    "RegExp",
    "replace",
    "lastIndexOf",
    "indexOf",
    "substring",
    "dependencies",
    "_uvs",
    "ta",
    "tb",
    "tc",
    "_vertIndices",
    "_uvIndices",
    "_indices",
    "addIndex",
    "_finalUV",
    "vertexIndex",
    "uvIndex",
    "index",
    "findIndex",
    "sx",
    "sy",
    "sz",
    "tx",
    "ty",
    "tz",
    "vertLen",
    "fvertices",
    "tvertices",
    "prevClip",
    "readFrameName",
    "FPS",
    "ch",
    "floor",
    "String",
    "fromCharCode",
    "awayjs-parsers/lib/MD5AnimParser",
    "Quaternion",
    "MD5AnimParser",
    "additionalRotationAxis",
    "additionalRotationRadians",
    "TEXT",
    "_parseIndex",
    "_line",
    "_charLineIndex",
    "_rotationQuat",
    "t1",
    "t2",
    "fromAxisAngle",
    "X_AXIS",
    "PI",
    "Y_AXIS",
    "multiply",
    "token",
    "_textData",
    "_pGetTextData",
    "getNextToken",
    "COMMENT_TOKEN",
    "ignoreLine",
    "VERSION_TOKEN",
    "getNextInt",
    "COMMAND_LINE_TOKEN",
    "parseCMD",
    "NUM_FRAMES_TOKEN",
    "_bounds",
    "_frameData",
    "NUM_JOINTS_TOKEN",
    "_numJoints",
    "_hierarchy",
    "_baseFrameData",
    "FRAME_RATE_TOKEN",
    "_frameRate",
    "NUM_ANIMATED_COMPONENTS_TOKEN",
    "_numAnimatedComponents",
    "HIERARCHY_TOKEN",
    "parseHierarchy",
    "BOUNDS_TOKEN",
    "parseBounds",
    "BASE_FRAME_TOKEN",
    "parseBaseFrame",
    "FRAME_TOKEN",
    "parseFrame",
    "_reachedEOF",
    "sendUnknownKeywordError",
    "_clip",
    "translateClip",
    "translatePose",
    "frameData",
    "hierarchy",
    "base",
    "translate",
    "components",
    "skelPose",
    "startIndex",
    "w",
    "sqrt",
    "rotatePoint",
    "sendEOFError",
    "HierarchyData",
    "parseLiteralstring",
    "getNextChar",
    "putBack",
    "BoundsData",
    "parseVector3D",
    "max",
    "BaseFrameData",
    "parseQuaternion",
    "frameIndex",
    "FrameData",
    "getNextNumber",
    "skipWhiteSpace",
    "charAt",
    "sendParseError",
    "parseFloat",
    "vec",
    "quat",
    "str",
    "awayjs-core/lib/geom/Quaternion",
    "awayjs-parsers/lib/MD5MeshParser",
    "MD5MeshParser",
    "_bindPoses",
    "NUM_MESHES_TOKEN",
    "_numMeshes",
    "JOINTS_TOKEN",
    "parseJoints",
    "MESH_TOKEN",
    "parseMesh",
    "calculateMaxJointCount",
    "_maxJointCount",
    "_meshData",
    "translateGeom",
    "vertexData",
    "weightData",
    "_skeleton",
    "numMeshData",
    "meshData",
    "numVerts",
    "zeroWeights",
    "countZeroWeightJoints",
    "totalJoints",
    "countWeight",
    "vertex",
    "start",
    "startWeight",
    "end",
    "count",
    "weight",
    "bias",
    "pos",
    "toMatrix3D",
    "appendTranslation",
    "inv",
    "invert",
    "_shaders",
    "MESH_SHADER_TOKEN",
    "MESH_NUM_VERTS_TOKEN",
    "MESH_NUM_TRIS_TOKEN",
    "MESH_NUM_WEIGHTS_TOKEN",
    "MESH_VERT_TOKEN",
    "parseVertex",
    "MESH_TRI_TOKEN",
    "parseTri",
    "MESH_WEIGHT_TOKEN",
    "parseJoint",
    "MeshData",
    "v1",
    "v2",
    "v3",
    "bindPose",
    "vertices",
    "jointIndices",
    "jointWeights",
    "nonZeroWeights",
    "transformVector",
    "JointData",
    "VertexData",
    "rotQuat",
    "awayjs-parsers/lib/Max3DSParser",
    "BitmapImage2D",
    "Max3DSParser",
    "useSmoothingGroups",
    "_useSmoothingGroups",
    "ba",
    "toByteArray",
    "_textures",
    "_materials",
    "_unfinalized_objects",
    "_cur_mat",
    "_cur_mat_end",
    "finalizeCurrentMaterial",
    "_cur_obj",
    "_cur_obj_end",
    "Number",
    "MAX_VALUE",
    "cid",
    "ObjectVO",
    "readNulTermstring",
    "materialFaces",
    "parseVertexList",
    "parseFaceList",
    "parseUVList",
    "parseFaceMaterialList",
    "readTransform",
    "parseObjectAnimation",
    "parseSmoothingGroups",
    "obj",
    "constructObject",
    "MaterialVO",
    "readColor",
    "twoSided",
    "colorMap",
    "TextureVO",
    "i0",
    "i1",
    "i2",
    "smoothingGroups",
    "faces",
    "vo",
    "hier",
    "sub",
    "prepareData",
    "applySmoothGroups",
    "v",
    "mname",
    "dat",
    "concat",
    "scaleBy",
    "applyTransformation",
    "VertexVO",
    "FaceVO",
    "smoothGroup",
    "numFaces",
    "vGroups",
    "face",
    "groups",
    "group",
    "splice",
    "vClones",
    "clones",
    "v0",
    "chr",
    "g",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-parsers/lib/OBJParser",
    "SpecularBasicMethod",
    "OBJParser",
    "scale",
    "_mtlLibLoaded",
    "_activeMaterialID",
    "_scale",
    "content",
    "hasV",
    "hasF",
    "parseMtl",
    "lm",
    "LoadedMaterial",
    "materialID",
    "_materialLoaded",
    "_meshes",
    "applyMaterial",
    "_mtlLib",
    "line",
    "creturn",
    "trunk",
    "_vertices",
    "_vertexNormals",
    "_materialIDs",
    "_stringLength",
    "_charIndex",
    "_oldIndex",
    "_objects",
    "_objectIndex",
    "split",
    "join",
    "parseLine",
    "applyMaterials",
    "loadMtl",
    "createGroup",
    "createObject",
    "_currentGroup",
    "parseVertexNormal",
    "parseFace",
    "objIndex",
    "numGroups",
    "materialGroups",
    "numMaterialGroups",
    "sm",
    "bmMaterial",
    "translateMaterialGroup",
    "_lastMtlID",
    "materialGroup",
    "_realIndices",
    "_vertexIndex",
    "indexIds",
    "translateVertexData",
    "vertexNormal",
    "uv",
    "vertexIndices",
    "normalIndices",
    "uvIndices",
    "_currentMaterialGroup",
    "_currentObject",
    "ObjectGroup",
    "Group",
    "createMaterialGroup",
    "MaterialGroup",
    "nTrunk",
    "Vertex",
    "UV",
    "FaceData",
    "parseIndex",
    "materialDefinitions",
    "lines",
    "basicSpecularMethod",
    "useSpecular",
    "useColor",
    "mapkd",
    "charCodeAt",
    "parseMapKdString",
    "specularData",
    "SpecularData",
    "_materialSpecularData",
    "cm",
    "colorMat",
    "colorMultiMat",
    "breakflag",
    "mtlurl",
    "decomposeID",
    "tm",
    "_u",
    "_v",
    "_x",
    "_y",
    "_z",
    "_index",
    "ind",
    "awayjs-methodmaterials/lib/methods/SpecularBasicMethod",
    "awayjs-parsers/lib/Parsers",
    "LoaderSession",
    "Parsers",
    "enableAllBundled",
    "enableParsers",
    "ALL_BUNDLED",
    "awayjs-core/lib/library/LoaderSession"
  ],
  "mappings": "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",
  "file": "awayjs-parsers.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3FileData\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\r\n\r\n\r\nclass AWDAssetParserBase\r\n{\r\n\r\n\tprivate _awd_file_data:AWD3FileData;\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\r\n\tpublic get awd_file_data():AWD3FileData\r\n\t{\r\n\t\treturn this._awd_file_data;\r\n\t}\r\n\tpublic set awd_file_data(awd_file_data:AWD3FileData)\r\n\t{\r\n\t\tthis._awd_file_data=awd_file_data;\r\n\t}\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = AWDAssetParserBase;\r\n\r\n",
    null,
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport AWDAssetParserBase\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWD3FileData \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\r\n\r\nimport GeometryAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser\");\r\nimport PrefabAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser\");\r\nimport DisplayObjectContainerAWDParser \t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser\");\r\nimport MeshAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser\");\r\nimport BillboardAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser\");\r\nimport Single2DTextureAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser\");\r\nimport CameraAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser\");\r\nimport SingleCubeTextureAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser\");\r\nimport LightAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser\");\r\nimport LightPickerAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser\");\r\nimport MaterialAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser\");\r\nimport MovieClipAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser\");\r\nimport ShadowMethodAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser\");\r\nimport SharedMethodAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser\");\r\nimport SkeletonAnimClipAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser\");\r\nimport SkeletonAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser\");\r\nimport SkeletonPoseAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser\");\r\nimport SkyboxAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser\");\r\nimport TesselatedFontAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser\");\r\nimport TextfieldAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser\");\r\nimport TextformatAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser\");\r\nimport VertexAnimationSetAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser\");\r\nimport VertexAnimClipAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser\");\r\nimport CommandAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser\");\r\nimport MetadataAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser\");\r\nimport BlockNameSpaceAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser\");\r\nimport AnimatorAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser\");\r\nimport AudioAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser\");\r\n\r\n\r\n\r\nclass AWDBlockParsers\r\n{\r\n\r\n\tprivate _supported_asset_blocks:Object = {};\r\n\tprivate _all_block_parsers:Array<AWDAssetParserBase>;\r\n\tconstructor()\r\n\t{\r\n\t\tthis._all_block_parsers=new Array<AWDAssetParserBase>();\r\n\r\n\t\tthis.add_block_parser(new GeometryAWDParser(), [1]);\r\n\t\tthis.add_block_parser(new PrefabAWDParser(), [11]);\r\n\t\tthis.add_block_parser(new DisplayObjectContainerAWDParser(), [22]);\r\n\t\tthis.add_block_parser(new MeshAWDParser(), [23, 24]);\r\n\r\n\t\tthis.add_block_parser(new BillboardAWDParser(), [25]);\r\n\t\tthis.add_block_parser(new SkyboxAWDParser(), [31]);\r\n\t\tthis.add_block_parser(new LightAWDParser(), [41]);\r\n\t\tthis.add_block_parser(new CameraAWDParser(), [42]);\r\n\t\t//this.add_block_parser(new TextureprojectorAWDParser(), [43]);\r\n\t\tthis.add_block_parser(new AudioAWDParser(), [44]);\r\n\t\tthis.add_block_parser(new LightPickerAWDParser(), [51]);\r\n\t\tthis.add_block_parser(new MaterialAWDParser(), [81]);\r\n\t\tthis.add_block_parser(new Single2DTextureAWDParser(), [82]);\r\n\t\tthis.add_block_parser(new SingleCubeTextureAWDParser(), [83]);\r\n\t\tthis.add_block_parser(new SharedMethodAWDParser(), [91]);\r\n\t\tthis.add_block_parser(new ShadowMethodAWDParser(), [92]);\r\n\t\tthis.add_block_parser(new SkeletonAWDParser(), [101]);\r\n\t\tthis.add_block_parser(new SkeletonPoseAWDParser(), [102]);\r\n\t\tthis.add_block_parser(new SkeletonAnimClipAWDParser(), [103]);\r\n\t\tthis.add_block_parser(new VertexAnimClipAWDParser(), [111, 112]);\r\n\t\tthis.add_block_parser(new VertexAnimationSetAWDParser(), [113]);\r\n\t\t//this.add_block_parser(new UVAnimationClipAWDParser(), [121]);\r\n\t\tthis.add_block_parser(new AnimatorAWDParser(), [122]);\r\n\t\tthis.add_block_parser(new MovieClipAWDParser(), [133]);\r\n\t\tthis.add_block_parser(new TextfieldAWDParser(), [134]);\r\n\t\tthis.add_block_parser(new TesselatedFontAWDParser(), [135]);\r\n\t\tthis.add_block_parser(new TextformatAWDParser(), [136]);\r\n\r\n\r\n\t\tthis.add_block_parser(new CommandAWDParser(), [253]);\r\n\t\tthis.add_block_parser(new BlockNameSpaceAWDParser(), [254]);\r\n\t\tthis.add_block_parser(new MetadataAWDParser(), [255]);\r\n\r\n\r\n\t}\r\n\r\n\tpublic add_block_parser(block_parser:AWDAssetParserBase, block_types:Array<number>):void\r\n\t{\r\n\t\tfor(var i:number=0; i<block_types.length;i++){\r\n\t\t\tthis._supported_asset_blocks[block_types[i]]  = block_parser;\r\n\t\t}\r\n\t\tthis._all_block_parsers.push(block_parser);\r\n\r\n\t}\r\n\r\n\tpublic init_parser(file_data:AWD3FileData):void\r\n\t{\r\n\t\tfor(var i:number=0; i<this._all_block_parsers.length;i++){\r\n\t\t\tthis._all_block_parsers[i].awd_file_data=file_data;\r\n\t\t}\r\n\r\n\t}\r\n\tpublic parseAsset(type:number):boolean\r\n\t{\r\n\r\n\t\tvar this_parser:AWDAssetParserBase=this._supported_asset_blocks[type];\r\n\t\tif(this_parser!=undefined){\r\n\t\t\tthis_parser.parseFromBytes();\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\nexport = AWDBlockParsers;",
    "/**\r\n * Created by 80prozent on 4/18/2015.\r\n */\r\n\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass AnimatorAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar animSetBlockAdress:number; /*int*/\r\n\t\tvar targetAnimationSet:AnimationSetBase;\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar type:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR});\r\n\r\n\t\tanimSetBlockAdress = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar targetMeshLength:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar meshAdresses:Array<number> /*uint*/ = new Array<number>() /*uint*/;\r\n\t\tfor (var i:number /*int*/ = 0; i < targetMeshLength; i++)\r\n\t\t\tmeshAdresses.push(this.awd_file_data.newBlockBytes.readUnsignedInt());\r\n\r\n\t\tvar activeState:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar autoplay:boolean = ( this.awd_file_data.newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\r\n\t\tvar returnedArray:Array<any>;\r\n\t\tvar targetMeshes:Array<Mesh> = new Array<Mesh>();\r\n\r\n\t\tfor (i = 0; i < meshAdresses.length; i++) {\r\n\t\t\tvar targetMesh:Mesh = <Mesh>this.awd_file_data.getAssetByID(meshAdresses[i]);\r\n\t\t\tif (targetMesh!=undefined)\r\n\t\t\t\ttargetMeshes.push(targetMesh);\r\n\t\t}\r\n\t\tvar targetAnimationSet:AnimationSetBase = <AnimationSetBase>this.awd_file_data.getAssetByID(animSetBlockAdress);\r\n\t\tif (targetAnimationSet==undefined) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the AnimationSet ( \" + animSetBlockAdress + \" ) for this.awd_file_data Animator\");\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tvar thisAnimator:AnimatorBase;\r\n\t\tif (type == 1) {\r\n\r\n\t\t\tvar skeleton:Skeleton = <Skeleton>this.awd_file_data.getAssetByID(props.get(1, 0));\r\n\t\t\tif (skeleton==undefined) {\r\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the Skeleton ( \" + props.get(1, 0) + \" ) for this.awd_file_data Animator\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, skeleton);\r\n\r\n\t\t} else if (type == 2)\r\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\r\n\r\n\t\tfor (i = 0; i < targetMeshes.length; i++) {\r\n\t\t\tif (type == 1)\r\n\t\t\t\ttargetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\r\n\t\t\tif (type == 2)\r\n\t\t\t\ttargetMeshes[i].animator = (<VertexAnimator> thisAnimator);\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.data = thisAnimator;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + this.awd_file_data.cur_block.name);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = AnimatorAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nclass AudioAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\t//this.awd_file_data._texture_users[this.awd_file_data._cur_block_id.toString()] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\r\n\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\r\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block.id.toString(), new URLRequest(url), false, null, true);\r\n\r\n\t\t} else {\r\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray;\r\n\t\t\tdata = new ByteArray();\r\n\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\r\n\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\r\n\r\n\t\t\t//\r\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\r\n\t\t\t//\r\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\r\n\t\t\t// This gives the browser time to initialise image width / height.\r\n\r\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\r\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\r\n\t\t// Ignore for now\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t//this.awd_file_data._pPauseAndRetrieveDependencies();\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tvar audioStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing a \" + audioStylesNames[type] + \" AudioFile\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = AudioAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\n\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nclass BillboardAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar mat:MaterialBase= <MaterialBase> this.awd_file_data.getAssetByID(data_id);\r\n\r\n\t\tif (mat==undefined) {\r\n\t\t\tmat = new BasicMaterial();\r\n\t\t}\r\n\t\tmat.bothSides=true;\r\n\t\tvar billboard:Billboard = new Billboard(mat);\r\n\t\tthis.awd_file_data.cur_block.data = billboard;\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\r\n\t\tbillboard.extra = this.awd_file_data.parseUserAttributes();\r\n\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a Library-Billboard: Name = '\" + billboard.name + \"| Material-Name = \" + mat.name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = BillboardAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass BlockNameSpaceAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\r\n\t\tvar id:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar nameSpaceString:string = this.awd_file_data.parseVarStr();\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = BlockNameSpaceAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Parser\t\t\t\t= require(\"awayjs-parsers/lib/AWD3Parser\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\r\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass CameraAWD3Parser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void {\r\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar projection:ProjectionBase;\r\n\r\n\t\tthis.awd_file_data.newBlockBytes.readUnsignedByte(); //set as active camera\r\n\t\tthis.awd_file_data.newBlockBytes.readShort(); //lengthof lenses - not used yet\r\n\r\n\t\tvar projectiontype:number = this.awd_file_data.newBlockBytes.readShort();\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({\r\n\t\t\t101: this.awd_file_data.propsNrType,\r\n\t\t\t102: this.awd_file_data.propsNrType,\r\n\t\t\t103: this.awd_file_data.propsNrType,\r\n\t\t\t104: this.awd_file_data.propsNrType\r\n\t\t});\r\n\r\n\t\tswitch (projectiontype) {\r\n\t\t\tcase 5001:\r\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5002:\r\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5003:\r\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar camera:Camera = new Camera(projection);\r\n\t\tcamera.transform.matrix3D = mtx;\r\n\t\tif (par_id > 0) {\r\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id);\r\n\t\t\tif (parent != undefined) {\r\n\t\t\t\tparent.addChild(camera);\r\n\t\t\t\tparentName = parent.name;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcamera.name = name;\r\n\t\tprops = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\r\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\tcamera.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = camera;\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + camera.name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = CameraAWD3Parser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass CommandAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\r\n\t\tvar hasBlocks:boolean = ( this.awd_file_data.newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\r\n\t\tvar name:string = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar parentObject:DisplayObjectContainer;\r\n\t\tvar targetObject:DisplayObject;\r\n\r\n\t\tif(par_id>0)\r\n\t\t\tparentObject = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id); //for no only light is requested!!!!\r\n\r\n\t\tvar numCommands:number = this.awd_file_data.newBlockBytes.readShort();\r\n\t\tvar typeCommand:number = this.awd_file_data.newBlockBytes.readShort();\r\n\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR});\r\n\r\n\t\tswitch (typeCommand) {\r\n\t\t\tcase 1:\r\n\r\n\t\t\t\tvar targetID:number = props.get(1, 0);\r\n\t\t\t\t//var returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [LightBase.assetType, TextureProjector.assetType]); //for no only light is requested!!!!\r\n\t\t\t\ttargetObject = <DisplayObject>this.awd_file_data.getAssetByID(targetID); //for no only light is requested!!!!\r\n\t\t\t\tif(targetObject==undefined){\r\n\t\t\t\t\t//this._awd_data._blocks[blockID].addError(\"Could not find the light (ID = \" + targetID + \" ( for this CommandBock!\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (parentObject) {\r\n\t\t\t\t\tparentObject.addChild(targetObject);\r\n\t\t\t\t}\r\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (targetObject) {\r\n\t\t\tprops = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\r\n\r\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t\ttargetObject.extra = this.awd_file_data.parseUserAttributes();\r\n\r\n\t\t}\r\n\t\t//this._awd_data._blocks[blockID].data = targetObject\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = CommandAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AWDProperties\t\t\t= require(\"../AWD3ParserUtils/AWDProperties\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nclass DisplayObjectContainerAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tvar par_id:number;\r\n\t\tvar mtx:Matrix3D;\r\n\t\tvar ctr:DisplayObjectContainer;\r\n\t\tvar parent:DisplayObjectContainer;\r\n\r\n\t\tctr = new DisplayObjectContainer();\r\n\t\tpar_id = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tmtx = this.awd_file_data.parseMatrix3D();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tctr.transform.matrix3D = mtx;\r\n\r\n\r\n\t\tif (par_id > 0) {\r\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id);\r\n\t\t\tif (parent != undefined) {\r\n\t\t\t\tparent.addChild(ctr);\r\n\t\t\t\tparentName = parent.name;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// in AWD version 2.1 we read the Container properties\r\n\t\tif ((this.awd_file_data.major_version > 2)||((this.awd_file_data.major_version >= 2) && (this.awd_file_data.minor_version == 1))) {\r\n\t\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\r\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t}\r\n\t\t// in other versions we do not read the Container properties\r\n\t\telse {\r\n\t\t\tthis.awd_file_data.parseProperties(null);\r\n\t\t}\r\n\r\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\r\n\t\tctr.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data=ctr;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + ctr.name + \"' | Parent-Name = \" + parentName);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = DisplayObjectContainerAWDParser;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\n\r\nclass GeometryAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar geom:Geometry = new Geometry();\r\n\r\n\t\t// Read name and sub count\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_subs:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\t// Read optional properties\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.geoNrType, 2:this.awd_file_data.geoNrType});\r\n\t\tvar geoScaleU:number = props.get(1, 1);\r\n\t\tvar geoScaleV:number = props.get(2, 1);\r\n\r\n\t\t// Loop through sub meshes\r\n\t\tvar subs_parsed:number = 0;\r\n\t\twhile (subs_parsed < num_subs) {\r\n\t\t\tvar is_curve_geom:boolean=false;\r\n\t\t\tvar i:number;\r\n\t\t\tvar sm_len:number, sm_end:number;\r\n\t\t\tvar w_indices:Array<number>;\r\n\t\t\tvar weights:Array<number>;\r\n\r\n\t\t\tsm_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tsm_end = this.awd_file_data.newBlockBytes.position + sm_len;\r\n\r\n\t\t\tvar subProps:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.geoNrType, 2:this.awd_file_data.geoNrType});\r\n\t\t\t// Loop through data streams\r\n\t\t\twhile (this.awd_file_data.newBlockBytes.position < sm_end) {\r\n\t\t\t\tvar idx:number = 0;\r\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n\t\t\t\t// Type, field type, length\r\n\t\t\t\tstr_type = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_ftype = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\r\n\r\n\t\t\t\tvar x:number, y:number, z:number;\r\n\r\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\r\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\tx = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t\ty = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t\tz = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\r\n\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\r\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tindices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 3) {\r\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tuvs[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 4) {\r\n\r\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tnormals[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 6) {\r\n\t\t\t\t\tw_indices = Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tw_indices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort()*3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 7) {\r\n\r\n\t\t\t\t\tweights = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tweights[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\r\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\r\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\r\n\t\t\t\t\tis_curve_geom=true;\r\n\t\t\t\t\tvar idx_pos:number = 0;\r\n\t\t\t\t\tvar idx_curves:number = 0;\r\n\t\t\t\t\tvar idx_uvs:number = 0;\r\n\r\n\t\t\t\t\tvar positions:Array<number> = new Array<number>();\r\n\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\r\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// x\r\n\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// y\r\n\t\t\t\t\t\tpositions[idx_pos++] =  this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// type\r\n\r\n\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 2\r\n\r\n\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.awd_file_data.parseUserAttributes(); // Ignore sub-mesh attributes for now\r\n\t\t\tif(is_curve_geom){\r\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(new AttributesBuffer());\r\n\t\t\t\tcurve_sub_geom.setIndices(indices);\r\n\t\t\t\tcurve_sub_geom.setPositions(positions);\r\n\t\t\t\tcurve_sub_geom.setCurves(curveData);\r\n\t\t\t\tcurve_sub_geom.setUVs(uvs);\r\n\t\t\t\tgeom.addSubGeometry(curve_sub_geom);\r\n\t\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a CurveSubGeometry\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar triangle_sub_geom = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\t\tif (weights)\r\n\t\t\t\t\ttriangle_sub_geom.jointsPerVertex = weights.length / (verts.length / 3);\r\n\t\t\t\tif (normals)\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveNormals = false;\r\n\t\t\t\tif (uvs)\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveUVs = false;\r\n\t\t\t\t//triangle_sub_geom.autoDeriveNormals = false;\r\n\t\t\t\tif (true) {\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveTangents = true;\r\n\t\t\t\t}\r\n\t\t\t\ttriangle_sub_geom.setIndices(indices);\r\n\t\t\t\ttriangle_sub_geom.setPositions(verts);\r\n\t\t\t\ttriangle_sub_geom.setNormals(normals);\r\n\t\t\t\ttriangle_sub_geom.setUVs(uvs);\r\n\t\t\t\ttriangle_sub_geom.setTangents(null);\r\n\t\t\t\ttriangle_sub_geom.setJointWeights(weights);\r\n\t\t\t\ttriangle_sub_geom.setJointIndices(w_indices);\r\n\r\n\t\t\t\tvar scaleU:number = subProps.get(1, 1);\r\n\t\t\t\tvar scaleV:number = subProps.get(2, 1);\r\n\t\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\r\n\r\n\t\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\r\n\t\t\t\t\tsetSubUVs = true;\r\n\t\t\t\t\tscaleU = geoScaleU / scaleU;\r\n\t\t\t\t\tscaleV = geoScaleV / scaleV;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (setSubUVs)\r\n\t\t\t\t\ttriangle_sub_geom.scaleUV(scaleU, scaleV);\r\n\t\t\t\tgeom.addSubGeometry(triangle_sub_geom);\r\n\t\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a TriangleSubGeometry\");\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\r\n\t\t\t// when creating meshes (and their material assignments.)\r\n\r\n\t\t\tsubs_parsed++;\r\n\t\t}\r\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\r\n\t\t\tgeom.scaleUV(geoScaleU, geoScaleV);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data=geom;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a TriangleGeometry: Name = \" + name);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = GeometryAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass LightAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\t\r\n\t\tvar light:LightBase;\r\n\t\tvar newShadowMapper:ShadowMapperBase;\r\n\r\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar lightType:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.propsNrType, 2:this.awd_file_data.propsNrType, 3:AWD3Utils.COLOR, 4:this.awd_file_data.propsNrType, 5:this.awd_file_data.propsNrType, 6:AWD3Utils.BOOL, 7:AWD3Utils.COLOR, 8:this.awd_file_data.propsNrType, 9:AWD3Utils.UINT8, 10:AWD3Utils.UINT8, 11:this.awd_file_data.propsNrType, 12:AWD3Utils.UINT16, 21:this.awd_file_data.matrixNrType, 22:this.awd_file_data.matrixNrType, 23:this.awd_file_data.matrixNrType});\r\n\t\tvar shadowMapperType:number = props.get(9, 0);\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\r\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\r\n\r\n\t\tif (lightType == 1) {\r\n\t\t\tlight = new PointLight();\r\n\r\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\r\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 4) {\r\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.transform.matrix3D = mtx;\r\n\r\n\t\t}\r\n\r\n\t\tif (lightType == 2) {\r\n\r\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 1) {\r\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//if (shadowMapperType == 2)\r\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\r\n\t\t\t\t//if (shadowMapperType == 3)\r\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tlight.name=name;\r\n\t\tlight.color = props.get(3, 0xffffff);\r\n\t\tlight.specular = props.get(4, 1.0);\r\n\t\tlight.diffuse = props.get(5, 1.0);\r\n\t\tlight.ambientColor = props.get(7, 0xffffff);\r\n\t\tlight.ambient = props.get(8, 0.0);\r\n\r\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\r\n\t\tif (newShadowMapper) {\r\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\r\n\t\t\t\tif (props.get(10, 1) != 1) {\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this.awd_file_data.getDepthSizeFromEnum(props.get(10, 1));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (props.get(10, 2) != 2) {\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this.awd_file_data.getDepthSizeFromEnum(props.get(10, 2));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.shadowMapper = newShadowMapper;\r\n\t\t\tlight.castsShadows = true;\r\n\t\t}\r\n\r\n\t\tif (par_id != 0) {\r\n\r\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id)\r\n\r\n\t\t\tif (parent!=undefined){\r\n\t\t\t\tparent.addChild(light);\r\n\t\t\t\tparentName = parent.name;\r\n\t\t\t} else {\r\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find a parent for this.awd_file_data Light\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t//(<DisplayObjectContainer> this.awd_file_data._pContent).addChild(light);\r\n\t\t}\r\n\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = light;\r\n\r\n\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + this.awd_file_data.cur_block.name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = LightAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\n\r\nclass LightPickerAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar numLights:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\r\n\t\tvar k:number = 0;\r\n\t\tvar lightID:number = 0;\r\n\r\n\t\tvar returnedArrayLight:Array<any>;\r\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\r\n\r\n\t\tfor (k = 0; k < numLights; k++) {\r\n\t\t\tlightID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar light:LightBase = <LightBase>this.awd_file_data.getAssetByID(lightID)\r\n\r\n\t\t\tif (light!=undefined) {\r\n\t\t\t\tlightsArray.push(<LightBase> light);\r\n\t\t\t\tlightsArrayNames.push(( <LightBase> light).name);\r\n\r\n\t\t\t} else {\r\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find a Light Nr \" + k + \" (ID = \" + lightID + \" ) for this.awd_file_data LightPicker\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lightsArray.length == 0) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not create this.awd_file_data LightPicker, cause no Light was found.\");\r\n\t\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t\treturn undefined; //return without any more parsing for this.awd_file_data block\r\n\t\t}\r\n\r\n\t\tvar lightPicker:LightPickerBase = new StaticLightPicker(lightsArray);\r\n\t\tthis.awd_file_data.cur_block.data = lightPicker;\r\n\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + lightsArrayNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = LightPickerAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\n\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\")\r\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\r\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\r\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\r\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\r\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\r\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\r\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\r\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\r\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\r\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\r\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\r\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass MaterialAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\t// version 2.0\r\n\t\t////blockLength = block.len;\r\n\t\tvar name:string;\r\n\t\tvar type:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar attributes:Object;\r\n\t\tvar finalize:boolean;\r\n\t\tvar num_methods:number;\r\n\t\tvar methods_parsed:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar normalTexture:Single2DTexture;\r\n\t\tvar specTexture:Single2DTexture;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\ttype = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tnum_methods = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\r\n\t\tif((this.awd_file_data.major_version==2)&&(this.awd_file_data.major_version==0)) {\r\n\r\n\t\t\t// Read material numerical properties\r\n\t\t\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\r\n\t\t\tprops = this.awd_file_data.parseProperties({\r\n\t\t\t\t1: AWD3Utils.INT32,\r\n\t\t\t\t2: AWD3Utils.BADDR,\r\n\t\t\t\t10: this.awd_file_data.propsNrType,\r\n\t\t\t\t11: AWD3Utils.BOOL,\r\n\t\t\t\t12: this.awd_file_data.propsNrType,\r\n\t\t\t\t13: AWD3Utils.BOOL\r\n\t\t\t});\r\n\t\t\tmethods_parsed = 0;\r\n\t\t\twhile (methods_parsed < num_methods) {\r\n\t\t\t\tvar method_type:number;\r\n\r\n\t\t\t\tmethod_type = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\tthis.awd_file_data.parseProperties(null);\r\n\t\t\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t\t\tmethods_parsed += 1;\r\n\t\t\t}\r\n\t\t\tvar debugString:string = \"\";\r\n\t\t\tattributes = this.awd_file_data.parseUserAttributes();\r\n\t\t\tif (type === 1) { // Color material\r\n\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\t\tvar color:number;\r\n\t\t\t\tcolor = props.get(1, 0xffffff);\r\n\t\t\t\t/*if (this.awd_file_data.materialMode < 2) {\r\n\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t}*/\r\n\t\t\t} else if (type === 2) {\r\n\t\t\t\tvar tex_addr:number = props.get(2, 0);\r\n\t\t\t\tvar texture:TextureBase=undefined;\r\n\t\t\t\tif (tex_addr > 0) {\r\n\t\t\t\t\tvar texture:TextureBase = <TextureBase> this.awd_file_data.getAssetByID(tex_addr);\r\n\t\t\t\t}\r\n\t\t\t\tif (texture==undefined) {\r\n\t\t\t\t\ttexture= DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmat = new MethodMaterial(<Single2DTexture>texture);\r\n\t\t\t\t/*\r\n\t\t\t\tif (this.awd_file_data.materialMode < 2) {\r\n\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t}\r\n\r\n\t\t\tmat.extra = attributes;\r\n\t\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\t\tmat.repeat = props.get(13, false);\r\n\t\t\tmat.name=name;\r\n\t\t\tif (this.awd_file_data.debug) {\r\n\t\t\t\tconsole.log(debugString);\r\n\r\n\t\t\t}\r\n\t\t\tthis.awd_file_data.cur_block.data=mat;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// version 2.1+\r\n\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT32, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 4:AWD3Utils.UINT8, 5:AWD3Utils.BOOL, 6:AWD3Utils.BOOL, 7:AWD3Utils.BOOL, 8:AWD3Utils.BOOL, 9:AWD3Utils.UINT8, 10:this.awd_file_data.propsNrType, 11:AWD3Utils.BOOL, 12:this.awd_file_data.propsNrType, 13:AWD3Utils.BOOL, 15:this.awd_file_data.propsNrType, 16:AWD3Utils.UINT32, 17:AWD3Utils.BADDR, 18:this.awd_file_data.propsNrType, 19:this.awd_file_data.propsNrType, 20:AWD3Utils.UINT32, 21:AWD3Utils.BADDR, 22:AWD3Utils.BADDR});\r\n\t\tvar spezialType:number = props.get(4, 0);\r\n\t\tvar debugString:string = \"Parsed Material \";\r\n\r\n\t\tif (spezialType >= 2) {//this.awd_file_data is no supported material\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (type <= 2) {// Color material\r\n\t\t\t/*\r\n\t\t\tif (this.awd_file_data.materialMode == 1)\r\n\t\t\t\tspezialType = 0;\r\n\t\t\telse if (this.awd_file_data.materialMode == 2)\r\n\t\t\t\tspezialType = 1;\r\n\t\t\t\t*/\r\n\r\n\t\t\tif (spezialType < 2) {//this.awd_file_data is SinglePass or MultiPass\r\n\r\n\t\t\t\tif (type == 1) {// Color material\r\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\r\n\r\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\r\n\r\n\t\t\t\t\t} else { //\tSinglePassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (type == 2) {// texture material\r\n\t\t\t\t\tvar tex_addr:number = props.get(2, 0);//TODO temporarily swapped so that diffuse texture goes to ambient\r\n\t\t\t\t\tvar diftexture:TextureBase=undefined;\r\n\t\t\t\t\tif (tex_addr > 0) {\r\n\t\t\t\t\t\tdiftexture = <TextureBase> this.awd_file_data.getAssetByID(tex_addr);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (diftexture==undefined) {\r\n\t\t\t\t\t\tdiftexture= DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmat = new MethodMaterial(<Single2DTexture>diftexture);\r\n\r\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + diftexture.name;\r\n\t\t\t\t\t} else {//\tSinglePassMaterial\r\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + diftexture.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tvar diffuseTex_addr:number = props.get(17, 0);\r\n\r\n\t\t\t\tvar diffuseTexture:TextureBase = undefined;\r\n\t\t\t\tif (diffuseTex_addr > 0) {\r\n\t\t\t\t\tdiffuseTexture = <Single2DTexture> this.awd_file_data.getAssetByID(diffuseTex_addr);\r\n\t\t\t\t}\r\n\t\t\t\tif (diffuseTexture) {\r\n\t\t\t\t\tmat.diffuseTexture = <Single2DTexture>diffuseTexture;\r\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normalTex_addr:number = props.get(3, 0);\r\n\r\n\r\n\t\t\t\tnormalTexture = undefined;\r\n\t\t\t\tif (normalTex_addr > 0) {\r\n\t\t\t\t\tnormalTexture = <Single2DTexture> this.awd_file_data.getAssetByID(normalTex_addr);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar specTex_addr:number = props.get(21, 0);\r\n\t\t\t\tspecTexture=undefined;\r\n\t\t\t\tif (specTex_addr > 0) {\r\n\t\t\t\t\tspecTexture = <Single2DTexture> this.awd_file_data.getAssetByID(specTex_addr);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar lightPickerAddr:number = props.get(22, 0);\r\n\t\t\t\tif(lightPickerAddr>0) {\r\n\t\t\t\t\tmat.lightPicker = <LightPickerBase> this.awd_file_data.getAssetByID(lightPickerAddr);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmat.smooth = props.get(5, true);\r\n\t\t\t\tmat.mipmap = props.get(6, true);\r\n\t\t\t\tmat.bothSides = props.get(7, false);\r\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\r\n\t\t\t\tmat.blendMode = this.awd_file_data.getBlendModeStringFromEnum(props.get(9, 0));\r\n\t\t\t\tmat.repeat = props.get(13, false);\r\n\r\n\t\t\t\tif (normalTexture)\r\n\t\t\t\t\tmat.normalMap = normalTexture;\r\n\r\n\t\t\t\tif (specTexture)\r\n\t\t\t\t\tmat.specularMap = specTexture;\r\n\r\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\t\t\tmat.ambient = props.get(15, 1.0);\r\n\t\t\t\tmat.diffuseColor = props.get(16, 0xffffff);\r\n\t\t\t\tmat.specular = props.get(18, 1.0);\r\n\t\t\t\tmat.gloss = props.get(19, 50);\r\n\t\t\t\tmat.specularColor = props.get(20, 0xffffff);\r\n\r\n\t\t\t\tvar methods_parsed:number = 0;\r\n\t\t\t\tvar targetID:number;\r\n\r\n\t\t\t\twhile (methods_parsed < num_methods) {\r\n\t\t\t\t\tvar method_type:number;\r\n\t\t\t\t\tmethod_type = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\t\t\t\tprops = this.awd_file_data.parseProperties({\r\n\t\t\t\t\t\t1: AWD3Utils.BADDR,\r\n\t\t\t\t\t\t2: AWD3Utils.BADDR,\r\n\t\t\t\t\t\t3: AWD3Utils.BADDR,\r\n\t\t\t\t\t\t101: this.awd_file_data.propsNrType,\r\n\t\t\t\t\t\t102: this.awd_file_data.propsNrType,\r\n\t\t\t\t\t\t103: this.awd_file_data.propsNrType,\r\n\t\t\t\t\t\t201: AWD3Utils.UINT32,\r\n\t\t\t\t\t\t202: AWD3Utils.UINT32,\r\n\t\t\t\t\t\t301: AWD3Utils.UINT16,\r\n\t\t\t\t\t\t302: AWD3Utils.UINT16,\r\n\t\t\t\t\t\t401: AWD3Utils.UINT8,\r\n\t\t\t\t\t\t402: AWD3Utils.UINT8,\r\n\t\t\t\t\t\t601: AWD3Utils.COLOR,\r\n\t\t\t\t\t\t602: AWD3Utils.COLOR,\r\n\t\t\t\t\t\t701: AWD3Utils.BOOL,\r\n\t\t\t\t\t\t702: AWD3Utils.BOOL,\r\n\t\t\t\t\t\t801: AWD3Utils.MTX4x4\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tswitch (method_type) {\r\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffectMethod\r\n\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tvar fx_method:EffectMethodBase = <EffectMethodBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t\tmat.addEffectMethod(fx_method);\r\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<EffectMethodBase> fx_method).name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\r\n\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tvar shadow_method:ShadowMethodBase = <ShadowMethodBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t\tmat.shadowMethod=shadow_method;\r\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<ShadowMethodBase> shadow_method).name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tvar cubeTex:SingleCubeTexture=undefined;\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tcubeTex = <SingleCubeTexture>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(cubeTex==undefined){\r\n\t\t\t\t\t\t\t\tcubeTex=<SingleCubeTexture>this.awd_file_data.getDefaultCubeTexture();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data EnvMapAmbientMethodMaterial\");\r\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod();\r\n\t\t\t\t\t\t\tmat.texture = cubeTex;\r\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + (<SingleCubeTexture> cubeTex).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(thisTex==undefined){\r\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the GradientDiffuseTexture (ID = \" + targetID + \" ) for this.awd_file_data GradientDiffuseMethod\");\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(<Single2DTexture>thisTex);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + (<Single2DTexture>thisTex).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(thisTex==undefined){\r\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this.awd_file_data LightMapDiffuseMethod\");\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(<Single2DTexture>thisTex, this.awd_file_data.getBlendModeStringFromEnum(props.get(401, 10)), false, mat.diffuseMethod);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + (<Single2DTexture> thisTex).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\r\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(thisTex==undefined){\r\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the SecoundNormalMap (ID = \" + targetID + \" ) for this.awd_file_data SimpleWaterNormalMethod\");\r\n\t\t\t\t\t\t\t//if (!mat.normalMap)\r\n\t\t\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find a normal Map on this.awd_file_data Material to use with this.awd_file_data SimpleWaterNormalMethod\");\r\n\t\t\t\t\t\t\tif(mat.normalMap==undefined)\r\n\t\t\t\t\t\t\t\tmat.normalMap = <Single2DTexture>thisTex;\r\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(<Single2DTexture>mat.normalMap, <Single2DTexture>thisTex);\r\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + (<Single2DTexture> thisTex).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t\t\t\tmethods_parsed += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// todo: we should not need this.awd_file_data anymore (if using texture-atlas)\r\n\t\telse if ((type>=3)&&(type<=7)){\r\n\t\t\t// if this.awd_file_data is a curve material, we create it, finalize it, assign it to block-cache and return and return.\r\n\t\t\tvar color:number = props.get(1, 0xcccccc);\r\n\t\t\tdebugString+=color;\r\n\t\t\r\n\t\t\tvar diffuseTex_addr:number = props.get(2, 0);\r\n\t\t\r\n\t\t\tvar diffuseTexture:TextureBase=undefined;\r\n\t\t\tif (diffuseTex_addr>0) {\r\n\t\t\t\tdiffuseTexture = <TextureBase>this.awd_file_data.getAssetByID(diffuseTex_addr);\r\n\t\t\t}\r\n\t\t\tif(diffuseTex_addr==undefined){\r\n\t\t\t\tdiffuseTexture=DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t}\r\n\t\t\r\n\t\t\tvar basic_mat:BasicMaterial = new BasicMaterial(<Single2DTexture>diffuseTexture);\r\n\t\t\t//debugString+= \" alpha = \"+props.get(10, 1.0)+\" \";\r\n\t\t\tdebugString+= \" texture = \"+diffuseTex_addr+\" \";\r\n\t\t\tbasic_mat.bothSides = true;\r\n\t\t\tbasic_mat.preserveAlpha = true;\r\n\t\t\tbasic_mat.alphaBlending = true;\r\n\t\t\tbasic_mat.extra = this.awd_file_data.parseUserAttributes();\r\n\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\tconsole.log(debugString);\r\n\t\t\tthis.awd_file_data.cur_block.data=basic_mat;\r\n\t\t\treturn;\r\n\t\t\r\n\t\t}\r\n\t\tmat.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data=mat;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(debugString);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = MaterialAWDParser;",
    "/**\r\n * Created by 80prozent on 4/18/2015.\r\n */\r\n\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AWD3Utils\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass MeshAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar num_materials:number;\r\n\t\tvar materials_parsed:number;\r\n\t\tif(this.awd_file_data.cur_block.type==23) {\r\n\t\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar geom:Geometry = <Geometry>this.awd_file_data.getAssetByID(data_id)\r\n\r\n\t\tif (geom==undefined) {\r\n\t\t\tgeom = new Geometry();\r\n\t\t}\r\n\r\n\t\tthis.awd_file_data.cur_block.geoID = data_id;\r\n\t\tvar materials:Array<MaterialBase> = new Array<MaterialBase>();\r\n\t\tnum_materials = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar materialNames:Array<string> = new Array<string>();\r\n\t\tmaterials_parsed = 0;\r\n\r\n\r\n\t\twhile (materials_parsed < num_materials) {\r\n\t\t\tvar mat_id:number;\r\n\t\t\tmat_id = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar m:MaterialBase = <MaterialBase> this.awd_file_data.getAssetByID(mat_id);\r\n\t\t\tif(m!=undefined) {\r\n\t\t\t\tmaterials.push(m);\r\n\t\t\t\tmaterialNames.push(m.name);\r\n\t\t\t}\r\n\t\t\tmaterials_parsed++;\r\n\t\t}\r\n\r\n\t\tvar mesh:Mesh = new Mesh(geom, null);\r\n\r\n\t\tif(this.awd_file_data.cur_block.type==23) {\r\n\r\n\t\t\tmesh.transform.matrix3D = mtx;\r\n\t\t\tif(par_id>0) {\r\n\t\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id)\r\n\r\n\t\t\t\tif (parent != undefined) {\r\n\t\t\t\t\tparent.addChild(mesh);\r\n\t\t\t\t\tparentName = parent.name;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\r\n\t\t\tmesh.material = materials[0];\r\n\t\t} else if (materials.length > 1) {\r\n\t\t\tvar i:number;\r\n\r\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\r\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\r\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\r\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ((this.awd_file_data.major_version > 2)||((this.awd_file_data.major_version >= 2) && (this.awd_file_data.minor_version == 1))) {\r\n\t\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8, 5:AWD3Utils.BOOL});\r\n\t\t\tmesh.pivot = new Vector3D(<number>props.get(1, 0), <number>props.get(2, 0), <number> props.get(3, 0));\r\n\t\t\tmesh.castsShadows = props.get(5, true);\r\n\t\t} else {\r\n\t\t\tthis.awd_file_data.parseProperties(null);\r\n\t\t}\r\n\r\n\t\tmesh.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = mesh;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a Mesh: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = MeshAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass MetadataAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT32, 2:AWD3Utils.AWDSTRING, 3:AWD3Utils.AWDSTRING, 4:AWD3Utils.AWDSTRING, 5:AWD3Utils.AWDSTRING});\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\r\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\r\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = MetadataAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDBitFlags\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport MovieClip \t\t\t\t\t= require(\"awayjs-player/lib/display/MovieClip\");\r\nimport Timeline\t\t\t \t\t\t= require(\"awayjs-player/lib/timeline/Timeline\");\r\n\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\r\nimport View\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\n\r\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\r\n\r\nclass MovieClipAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tprivate factory:AS2SceneGraphFactory;\r\n\tconstructor(view:View = null)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.factory = new AS2SceneGraphFactory(view);\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar c:number;\r\n\t\tvar new_mc = this.factory.createMovieClip()\r\n\t\tvar new_timeline:Timeline = new Timeline();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar isScene = !!this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar sceneID = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar fps:number = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t//console.log(\"fps = \"+fps);\r\n\t\t//new_mc.fps=fps;\r\n\t\tvar ms_per_frame = 1000 / fps;\r\n\t\tvar num_instances:number=0;\r\n\t\tvar num_all_display_instances:number=0;\r\n\r\n\r\n\t\t// register list of potential childs\r\n\t\t// a potential child can be reused on a timeline (added / removed / added)\r\n\t\t// However, for each potential child, we need to register the max-number of instances that a frame contains\r\n\t\t// we parse 2 lists of potential-childs:\r\n\t\t// -\tthe first list contains potential-childs that are only ever instanced once per frame.\r\n\t\t// -\tthe second list contains potential-childs that are instanced multiple times on some frames.\r\n\r\n\t\t// on registering a child, the child gets a incremental-id assigned. This is the id, that the commands are using to access the childs.\r\n\t\t// hence we need to be careful to register all objects in correct order.\r\n\r\n\t\tvar num_potential_childs:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_childs; i++) {\r\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\tnew_timeline.registerPotentialChild(cmd_asset);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tnum_all_display_instances+=num_potential_childs;\r\n\t\tvar num_potential_childs_multi_instanced = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tnum_potential_childs+=num_potential_childs_multi_instanced;\r\n\t\tfor (i = 0; i < num_potential_childs_multi_instanced; i++) {\r\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tnum_instances = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\tnum_all_display_instances+=num_instances;\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\r\n\t\t\t\t\tnew_timeline.registerPotentialChild(cmd_asset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\r\n\t\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(\"Parsed \"+num_potential_childs+\" potential childs. They will be used by \"+num_all_display_instances+\" instances.\");\r\n\r\n\t\t// register list of potential sounds\r\n\t\t// a potential child can be reused on a timeline (added / removed / added)\r\n\t\tvar num_potential_sounds = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_sounds; i++) {\r\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\t//todo: register sound objects on movieclip\r\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//todo: this.awd_file_data is a error that might break complete timeline, because all sound obj-id shift\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(\"Parsed \"+num_potential_sounds+\" potential sounds\");\r\n\r\n\t\tvar numFrames = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\t//console.log(\"numFrames \"+numFrames);\r\n\r\n\t\tvar totalDuration:number = 0;\r\n\t\tvar frameDuration:number;\r\n\t\tvar numLabels:number;\r\n\t\tvar numCommands:number;\r\n\t\tvar objectID:number;\r\n\t\tvar target_depth:number;\r\n\t\tvar resourceID:number;\r\n\t\tvar number_of_obj:number;\r\n\t\tvar commandType:number;\r\n\t\t//var frame:TimelineKeyFrame;\r\n\t\tvar hasDepthChanges:boolean;\r\n\t\tvar sessionCount:number=0;\r\n\t\tfor (i = 0; i < numFrames; i++) {\r\n\t\t\t// todo: remove the ms_per_frame to set the duration in frames\r\n\t\t\tframeDuration = this.awd_file_data.newBlockBytes.readUnsignedInt()*ms_per_frame;\r\n\t\t\t//frame = new TimelineKeyFrame(totalDuration, frameDuration);\r\n\t\t\ttotalDuration += frameDuration;\r\n\r\n\t\t\tnumLabels = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t//for (j = 0; j < numLabels; j++)\r\n\t\t\t//\tnew_timeline._labels[this.awd_file_data.parseVarStr()]=new_timeline.numKeyFrames();\r\n\r\n\t\t\tnumCommands = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t//console.log(\"numCommands \"+numCommands);\r\n\t\t\t//traceString += \"\\n      Commands \" + numCommands;\r\n\t\t\thasDepthChanges = false;\r\n\t\t\tfor (j = 0; j < numCommands; j++) {\r\n\t\t\t\tcommandType = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\r\n\t\t\t\t// 1 = remove a number of objects by depth\r\n\t\t\t\t// 2 = add a object by child-id at specific depth\r\n\t\t\t\t// 3 = update a object by child-id\r\n\t\t\t\t// 4 = add / update sound - (not finished)\r\n\r\n\t\t\t\tswitch (commandType) {\r\n\r\n\t\t\t\t\tcase 1:// remove a number of objects at specific depth\r\n\t\t\t\t\t\tnumber_of_obj = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t//console.log(\"number_of_obj \", number_of_obj);\r\n\t\t\t\t\t\tvar remove_depths:Array<number>=new Array<number>();\r\n\t\t\t\t\t\tfor (c = 0; c < number_of_obj; c++) {\r\n\t\t\t\t\t\t\t// Remove Object Command\r\n\t\t\t\t\t\t\ttarget_depth = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\tremove_depths.push(target_depth);\r\n\t\t\t\t\t\t\t//console.log(\"\\n       - Remove object at depth: \" + target_depth);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//frame.frameConstructCommands.push(new RemoveChildrenAtDepthCommand(remove_depths));\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2:// add a of object by child-id at specific depth\r\n\t\t\t\t\tcase 3:// update a object by child-id\r\n\t\t\t\t\t\tobjectID = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t//console.log(\"add / update objectID \", objectID);\r\n\t\t\t\t\t\tif (commandType == 2) {\r\n\t\t\t\t\t\t\thasDepthChanges=true;\r\n\t\t\t\t\t\t\ttarget_depth = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t//console.log(\"target_depth \", target_depth);\r\n\t\t\t\t\t\t\tvar potChild = new_timeline.getPotentialChildPrototype(objectID);\r\n\t\t\t\t\t\t\tif (potChild != undefined) {\r\n\t\t\t\t\t\t\t\t//frame.frameConstructCommands.push(new AddChildAtDepthCommand(objectID, target_depth, sessionCount));\r\n\t\t\t\t\t\t\t\tsessionCount++;\r\n\t\t\t\t\t\t\t\t// if the object is a tetfield, we set the textfield-name as instancename\r\n\t\t\t\t\t\t\t\tif(potChild.isAsset(TextField)) {\r\n\t\t\t\t\t\t\t\t\t//frame.frameConstructCommands.push(new SetInstanceNameCommand(objectID, potChild.name));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tconsole.log(\"ERROR: could not find the objectID \", objectID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar props_flag = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t/*\tProps_flags\r\n\t\t\t\t\t\t 1: read display matrix - 6 x float,\r\n\t\t\t\t\t\t 2: read display matrix - read another UINT8-bitflag that determinates what matrix components to parse\r\n\t\t\t\t\t\t 3: read color matrix - 4 x float, 4 x uint16\r\n\t\t\t\t\t\t 4: read color matrix - read another UINT8-bitflag that determinates what matrix components to parse\r\n\t\t\t\t\t\t 5: blendmode - uint8\r\n\t\t\t\t\t\t 6: visible - boolean\r\n\t\t\t\t\t\t 7: AWD3Parser.UINT8\r\n\t\t\t\t\t\t });*/\r\n\t\t\t\t\t\t// read display matrix\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG1)) {\r\n\t\t\t\t\t\t\tvar thisMatrix = new Matrix3D();\r\n\t\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG2)) {\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[0] = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[1] = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[4] = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[5] = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.position = new Vector3D(this.awd_file_data.newBlockBytes.readFloat(), this.awd_file_data.newBlockBytes.readFloat(), 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//frame.frameConstructCommands.push(new UpdatePropertyCommand(objectID, \"_iMatrix3D\", thisMatrix));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// read colortransforms\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG3)) {\r\n\t\t\t\t\t\t\tvar thisColorTransform = new ColorTransform();\r\n\t\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG4)) {\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthisColorTransform.redMultiplier = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.greenMultiplier = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.blueMultiplier = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.alphaMultiplier = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.redOffset = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.greenOffset = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.blueOffset = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.alphaOffset = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG5)) {\r\n\t\t\t\t\t\t\tvar blendmode_int = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\t\t\tvar blendmode_string = this.awd_file_data.getBlendModeStringFromEnum(blendmode_int);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG6)) {\r\n\t\t\t\t\t\t\t//frame.frameConstructCommands.push(new UpdatePropertyCommand(objectID, \"visible\", this.awd_file_data.newBlockBytes.readByte()));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG7)) {\r\n\t\t\t\t\t\t\tvar instanceName = this.awd_file_data.parseVarStr();\r\n\t\t\t\t\t\t\tif (instanceName.length) {\r\n\t\t\t\t\t\t\t\t//frame.frameConstructCommands.push(new SetInstanceNameCommand(objectID, instanceName));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG8)) {\r\n\t\t\t\t\t\t\tvar mask_id_nums = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t\tvar mask_ids = new Array();\r\n\t\t\t\t\t\t\tfor (var mi_cnt = 0; mi_cnt < mask_id_nums; mi_cnt++) {\r\n\t\t\t\t\t\t\t\tmask_ids.push(this.awd_file_data.newBlockBytes.readShort());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (mask_ids.length > 0) {\r\n\t\t\t\t\t\t\t\tif ((mask_ids.length == 1) && (mask_ids[0] == -1)) {\r\n\t\t\t\t\t\t\t\t\t// TODO: this.awd_file_data object is used as mask\r\n\t\t\t\t\t\t\t\t\t//frame.frameConstructCommands.push(new UpdatePropertyCommand(objectID, \"_iMaskID\", objectID));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t//else\r\n\t\t\t\t\t\t\t\t//\tframe.frameConstructCommands.push(new SetMaskCommand(objectID, mask_ids));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 4:\r\n\r\n\t\t\t\t\t\t// Add Sound Command\r\n\t\t\t\t\t\t// TODO: create CommandPropsSound and check which asset to use\r\n\t\t\t\t\t\tobjectID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\t// TODO: implement sound in timeline\r\n\t\t\t\t\t\t//commandString += \"\\n      - Add new Sound AWD-ID = \" + resourceID.toString() + \" as object_id = \" + objectID.toString();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t//commandString += \"\\n       - Unknown Command Type = \" + commandType;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (hasDepthChanges) {\r\n\t\t\t\t// only want to do this.awd_file_data once after all children's depth values are updated\r\n\t\t\t\t//frame.frameConstructCommands.push(new ApplyAS2DepthsCommand());\r\n\t\t\t\thasDepthChanges = false;\r\n\t\t\t}\r\n\r\n\t\t\tvar length_code = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tif (length_code > 0) {\r\n\t\t\t\t// TODO: Script should probably not be attached to keyframes?\r\n\t\t\t\t//var frame_code = this.awd_file_data.newBlockBytes.readUTFBytes(length_code);\r\n\t\t\t\t//frame.framePostConstructCommands.push(new ExecuteScriptCommand(frame_code));\r\n\t\t\t\t//traceString += \"\\nframe-code = \" + frame_code;\r\n\t\t\t}\r\n\t\t\t//traceString += commandString;\r\n\t\t\t//trace(\"length_code = \"+length_code+\" frame_code = \"+frame_code);\r\n\t\t\tthis.awd_file_data.newBlockBytes.readUnsignedInt();// user attributes - skip for now\r\n\t\t\t//console.log(traceString);\r\n\t\t\t//new_timeline.addFrame(frame);\r\n\r\n\t\t}\r\n\t\tnew_mc.timeline = new_timeline;\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = new_mc;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| isScene = \" + isScene + \"| sceneID = \" + sceneID + \"| numFrames = \" + numFrames);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = MovieClipAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\r\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\r\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\r\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nclass PrefabAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar name:string;\r\n\t\tvar prefab:PrefabBase;\r\n\t\tvar primType:number;\r\n\t\tvar subs_parsed:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar bsm:Matrix3D;\r\n\r\n\t\t// Read name and sub count\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tprimType = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tprops = this.awd_file_data.parseProperties({101:this.awd_file_data.geoNrType, 102:this.awd_file_data.geoNrType, 103:this.awd_file_data.geoNrType, 110:this.awd_file_data.geoNrType, 111:this.awd_file_data.geoNrType, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 303:AWD3Utils.UINT16, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL, 703:AWD3Utils.BOOL, 704:AWD3Utils.BOOL});\r\n\r\n\t\tvar primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"]\r\n\r\n\t\tswitch (primType) {\r\n\t\t\t// to do, not all properties are set on all primitives\r\n\r\n\t\t\tcase 1:\r\n\t\t\t\tprefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tprefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\tprefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\r\n\t\t\t\tif (!props.get(701, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\r\n\t\t\t\tif (!props.get(702, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\r\n\t\t\t\tif (!props.get(703, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 5:\r\n\t\t\t\tprefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 7:\r\n\t\t\t\tprefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tprefab = new PrefabBase();\r\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\r\n\t\t\t//geom.subGeometries;\r\n\t\t\t//geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\r\n\t\t}\r\n\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = prefab;\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tif ((primType < 0) || (primType > 7)) {\r\n\t\t\t\tprimType = 0;\r\n\t\t\t}\r\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + this.awd_file_data.cur_block.name + \"| type = \" + primitiveTypes[primType]);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = PrefabAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\r\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\r\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\r\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\r\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\r\n\r\nclass ShadowMethodAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar type:number;\r\n\t\tvar data_len:number;\r\n\t\tvar asset:ShadowMethodBase;\r\n\t\tvar shadowLightID:number;\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tshadowLightID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar light:LightBase=<LightBase> this.awd_file_data.getAssetByID(shadowLightID);\r\n\r\n\t\tif (light==undefined) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the TargetLight (ID = \" + shadowLightID + \" ) for this.awd_file_data ShadowMethod - ShadowMethod not created\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tasset = this.parseShadowMethodList(light);\r\n\r\n\t\tif (!asset)\r\n\t\t\treturn;\r\n\t\tthis.awd_file_data.parseUserAttributes(); // Ignore for now\r\n\t\tthis.awd_file_data.cur_block.data = asset;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", light.name);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// this.awd_file_data functions reads and creates a ShadowMethodMethod\r\n\tprivate parseShadowMethodList(light:LightBase):ShadowMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar shadowMethod:ShadowMethodBase;\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 101:this.awd_file_data.propsNrType, 102:this.awd_file_data.propsNrType, 103:this.awd_file_data.propsNrType, 201:AWD3Utils.UINT32, 202:AWD3Utils.UINT32, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 401:AWD3Utils.UINT8, 402:AWD3Utils.UINT8, 601:AWD3Utils.COLOR, 602:AWD3Utils.COLOR, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL, 801:AWD3Utils.MTX4x4});\r\n\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>\r\n\t\tswitch (methodType) {\r\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this.awd_file_data CascadeShadowMapMethod - ShadowMethod not created\");\r\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\r\n\t\t\t//\t\t\t\t\t}\r\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 1002: //ShadowNearMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\tvar shadow_meth:ShadowMapMethodBase = <ShadowMapMethodBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\tif (shadow_meth==undefined) {\r\n\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this.awd_file_data ShadowNearMethod - ShadowMethod not created\");\r\n\t\t\t\t\treturn shadowMethod;\r\n\t\t\t\t}\r\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> shadow_meth);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1101: //ShadowFilteredMethod\r\n\r\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 1102: //ShadowDitheredMethod\r\n\r\n\r\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1103: //ShadowSoftMethod\r\n\r\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1104: //ShadowHardMethod\r\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\treturn shadowMethod;\r\n\t}\r\n}\r\n\r\nexport = ShadowMethodAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\r\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\r\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\r\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\r\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\r\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\r\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\r\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\r\n\r\nclass SharedMethodAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tvar asset:EffectMethodBase;\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tasset = this.parseSharedMethodList();\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = asset;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\r\n\t\t}\r\n\t}\r\n\r\n\t// this.awd_file_data functions reads and creates a EffectMethod\r\n\tprivate parseSharedMethodList():EffectMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar effectMethodReturn:EffectMethodBase;\r\n\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 101:this.awd_file_data.propsNrType, 102:this.awd_file_data.propsNrType, 103:this.awd_file_data.propsNrType, 104:this.awd_file_data.propsNrType, 105:this.awd_file_data.propsNrType, 106:this.awd_file_data.propsNrType, 107:this.awd_file_data.propsNrType, 201:AWD3Utils.UINT32, 202:AWD3Utils.UINT32, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 401:AWD3Utils.UINT8, 402:AWD3Utils.UINT8, 601:AWD3Utils.COLOR, 602:AWD3Utils.COLOR, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL});\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tswitch (methodType) {\r\n\t\t\t// Effect Methods\r\n\t\t\tcase 401: //ColorMatrix\r\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 402: //ColorTransform\r\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\r\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\r\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 403: //EnvMap\r\n\r\n\t\t\t\t/*\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\tconsole.log('ENV MAP', targetID);\r\n\r\n\r\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [ TextureBase.assetType ], \"CubeTexture\");\r\n\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data EnvMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(<SingleCubeTexture> returnedArray[1], <number> props.get(101, 1));\r\n\t\t\t\ttargetID = props.get(2, 0);\r\n\t\t\t\tif (targetID > 0) {\r\n\t\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the Mask-texture (ID = \" + targetID + \" ) for this.awd_file_data EnvMapMethod\");\r\n\r\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\r\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <Texture2DBase> returnedArray[1];\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t\tcase 404: //LightMapMethod\r\n\t\t\t\t/*\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this.awd_file_data LightMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(returnedArray[1], this.awd_file_data.getBlendModeStringFromEnum(props.get(401, 10))); //usesecondaryUV not set\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureProjector.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this.awd_file_data ProjectiveTextureMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 406: //RimLightMethod\r\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\r\n\t\t\t\tbreak;\r\n\t\t\tcase 407: //AlphaMaskMethod\r\n\t\t\t\t/*\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the Alpha-texture (ID = \" + targetID + \" ) for this.awd_file_data AlphaMaskMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(returnedArray[1], props.get(701, false));\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data RefractionEnvMapMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\r\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 410: //FresnelEnvMapMethod\r\n\t\t\t\t/*\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\r\n\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data FresnelEnvMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(returnedArray[1], props.get(101, 1));\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t\tcase 411: //FogMethod\r\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\treturn effectMethodReturn;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport = SharedMethodAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass Single2DTextureAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tvar asset:Single2DTexture;\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\t//this.awd_file_data._texture_users[this.awd_file_data._cur_block_id.toString()] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\r\n\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\r\n\r\n\t\t} else {\r\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray;\r\n\t\t\tdata = new ByteArray();\r\n\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\r\n\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\r\n\r\n\t\t\t//\r\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\r\n\t\t\t//\r\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\r\n\t\t\t// This gives the browser time to initialise image width / height.\r\n\r\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\r\n\t\t// Ignore for now\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Bitmap for Texture\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = Single2DTextureAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\n\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nclass SingleCubeTextureAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar data_len:number;\r\n\t\tvar i:number;\r\n\r\n\t\t//this.awd_file_data._cubeTextures = new Array<any>();\r\n\t\t//this.awd_file_data._texture_users[ this.awd_file_data._cur_block_id.toString() ] = [];\r\n\r\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\r\n\t\t//this.awd_file_data._blocks[blockID].name =\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\t//this.awd_file_data.texture_users[this.awd_file_data.cur_block_id.toString()] = [];\r\n\t\t\t//this.awd_file_data.cubeTextures.push(null);\r\n\r\n\t\t\t// External\r\n\t\t\tif (type == 0) {\r\n\t\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar url:string;\r\n\t\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\r\n\r\n\t\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\r\n\t\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block_id.toString() + \"#\" + i, new URLRequest(url), false, null, true);\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar data:ByteArray;\r\n\t\t\t\tdata = new ByteArray();\r\n\r\n\t\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\r\n\t\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block_id.toString() + \"#\" + i, null, false, ParserUtils.byteArrayToImage(data), true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\r\n\t\t// Ignore for now\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t//this.awd_file_data._pPauseAndRetrieveDependencies();\r\n\t\t//this.awd_file_data._blocks[blockID].data = asset;\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing 6 \" + textureStylesNames[type] + \" Bitmaps for CubeTexture\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SingleCubeTextureAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nclass SkeletonAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar skeleton:Skeleton = new Skeleton();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tthis.awd_file_data.parseProperties(null); // Discard properties for now\r\n\r\n\t\tvar joints_parsed:number /*uint*/ = 0;\r\n\t\twhile (joints_parsed < num_joints) {\r\n\t\t\tvar joint:SkeletonJoint;\r\n\t\t\tvar ibp:Matrix3D;\r\n\t\t\t// Ignore joint id\r\n\t\t\tthis.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\tjoint = new SkeletonJoint();\r\n\t\t\tjoint.parentIndex = this.awd_file_data.newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\r\n\t\t\tjoint.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\t\tibp = this.awd_file_data.parseMatrix3D();\r\n\t\t\tjoint.inverseBindPose = ibp.rawData;\r\n\t\t\t// Ignore joint props/attributes for now\r\n\t\t\tthis.awd_file_data.parseProperties(null);\r\n\t\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t\tskeleton.joints.push(joint);\r\n\t\t\tjoints_parsed++;\r\n\t\t}\r\n\r\n\t\t// Discard attributes for now\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = skeleton;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SkeletonAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\n\r\nclass SkeletonAnimClipAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar frame_dur:number;\r\n\t\tvar pose_addr:number /*uint*/;\r\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_frames:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tthis.awd_file_data.parseProperties(null); // Ignore properties for now\r\n\r\n\t\tvar frames_parsed:number /*uint*/ = 0;\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tpose_addr = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tframe_dur = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\tvar skel_pose:SkeletonPose = <SkeletonPose>this.awd_file_data.getAssetByID(pose_addr);\r\n\t\t\tif (skel_pose!=undefined) {\r\n\t\t\t\tclip.addFrame(skel_pose, frame_dur);\r\n\t\t\t}\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\t// Ignore attributes for now\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = clip;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SkeletonAnimClipAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nclass SkeletonPoseAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar pose:SkeletonPose = new SkeletonPose();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tthis.awd_file_data.parseProperties(null); // Ignore properties for now\r\n\r\n\r\n\t\tvar joints_parsed:number /*uint*/ = 0;\r\n\t\twhile (joints_parsed < num_joints) {\r\n\t\t\tvar joint_pose:JointPose;\r\n\t\t\tvar has_transform:number /*uint*/;\r\n\t\t\tjoint_pose = new JointPose();\r\n\t\t\thas_transform = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\tif (has_transform == 1) {\r\n\t\t\t\tvar mtx_data:Array<number> = this.awd_file_data.parseMatrix43RawData();\r\n\r\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\r\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\r\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\r\n\r\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\r\n\t\t\t}\r\n\t\t\tjoints_parsed++;\r\n\t\t}\r\n\t\t// Skip attributes for now\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = pose;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SkeletonPoseAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass SkyboxAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar cubeTexAddr:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\r\n\t\tvar cube_tex:SingleCubeTexture = undefined;\r\n\t\tif(cubeTexAddr>0) {\r\n\t\t\tcube_tex = <SingleCubeTexture> this.awd_file_data.getAssetByID(cubeTexAddr);\r\n\t\t}\r\n\t\tif(cube_tex==undefined){\r\n\t\t\tcube_tex=<SingleCubeTexture>this.awd_file_data.getDefaultCubeTexture();\r\n\t\t}\r\n\t\t//if ((!returnedArrayCubeTex[0]) && (cubeTexAddr != 0))\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the Cubetexture (ID = \" + cubeTexAddr + \" ) for this.awd_file_data Skybox\");\r\n\t\tvar new_skybox:Skybox = new Skybox(<SingleCubeTexture> cube_tex);\r\n\r\n\t\tthis.awd_file_data.parseProperties(null)\r\n\t\tnew_skybox.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = new_skybox;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + this.awd_file_data.cur_block.name + \"' | CubeTexture-Name = \" + cube_tex.name);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SkyboxAWDParser;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport Font\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\r\nimport TesselatedFontTable\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nclass TesselatedFontAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar new_font:Font=new Font();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar font_style_cnt:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"Font font_style_cnt = \"+font_style_cnt);\r\n\t\tfor (var i:number = 0; i < font_style_cnt; ++i) {\r\n\t\t\tvar font_style_name:string = this.awd_file_data.parseVarStr();\r\n\t\t\t//console.log(\"Font font_style_name = \"+font_style_name);\r\n\t\t\tvar new_font_style:TesselatedFontTable=new_font.get_font_table(font_style_name);\r\n\t\t\tnew_font_style.set_font_em_size(this.awd_file_data.newBlockBytes.readUnsignedInt());\r\n\t\t\t//console.log(\"Font new_font_style.font_em_size = \"+new_font_style.get_font_em_size);\r\n\t\t\tvar font_style_char_cnt:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t//console.log(\"Font font_style_char_cnt = \"+font_style_char_cnt);\r\n\t\t\tfor (var i:number = 0; i < font_style_char_cnt; ++i) {\r\n\r\n\t\t\t\tvar font_style_char:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"Font font_style_char = \"+font_style_char);\r\n\t\t\t\t// todo: this.awd_file_data is basically a simplified version of the subgeom-parsing done in parseTriangleGeometry. Make a parseSubGeom() instead (?)\r\n\t\t\t\tvar sm_len:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar sm_end:number = this.awd_file_data.newBlockBytes.position + sm_len;\r\n\t\t\t\t//console.log(\"Font sm_len = \"+sm_len);\r\n\r\n\t\t\t\t//this.awd_file_data.parseProperties(null); // no properties for font-table subgeos\r\n\t\t\t\t// Loop through data streams\r\n\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < sm_end) {\r\n\t\t\t\t\tvar idx:number = 0;\r\n\t\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n\t\t\t\t\t// Type, field type, length\r\n\t\t\t\t\tstr_type = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_ftype = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\r\n\r\n\t\t\t\t\tif (str_type == 2) {//face indicies positions\r\n\t\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\t\tindices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\r\n\t\t\t\t\t\tvar idx_pos:number = 0;\r\n\t\t\t\t\t\tvar idx_curves:number = 0;\r\n\t\t\t\t\t\tvar idx_uvs:number = 0;\r\n\r\n\t\t\t\t\t\tvar positions:Array<number> = new Array<number>();\r\n\t\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\r\n\t\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// x\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// y\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// type\r\n\r\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 2\r\n\r\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.awd_file_data.parseProperties(null);// no attributes for font-table subgeos\r\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(new AttributesBuffer());\r\n\t\t\t\tcurve_sub_geom.setIndices(indices);\r\n\t\t\t\tcurve_sub_geom.setPositions(positions);\r\n\t\t\t\tcurve_sub_geom.setCurves(curveData);\r\n\t\t\t\tcurve_sub_geom.setUVs(uvs);\r\n\t\t\t\tnew_font_style.set_subgeo_for_char(font_style_char.toString(), curve_sub_geom);\r\n\t\t\t}\r\n\t\t\t//console.log(\"Parsed a font-table\");\r\n\r\n\t\t}\r\n\t\t//console.log(\"Parsed a font\");\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = new_font;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a font: Name = '\" + this.awd_file_data.cur_block.name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport View\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\n\r\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\r\n\r\nclass TextfieldAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tprivate factory:AS2SceneGraphFactory;\r\n\tconstructor(view:View = null)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.factory = new AS2SceneGraphFactory(view);\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar newTextField = this.factory.createTextField();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar text_field_type:number=this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tif(text_field_type==0) {\r\n\t\t\tnewTextField.type = \"static\";\r\n\t\t}\r\n\t\telse if(text_field_type==1) {\r\n\t\t\tnewTextField.type = \"dynamic\";\r\n\t\t}\r\n\t\telse if(text_field_type==2) {\r\n\t\t\tnewTextField.type = \"input\";\r\n\t\t}\r\n\t\telse if(text_field_type==3) {\r\n\t\t\tnewTextField.type =\"input\";\r\n\t\t\tnewTextField.displayAsPassword=true;\r\n\t\t}\r\n\r\n\t\tnewTextField.width=this.awd_file_data.newBlockBytes.readFloat();\r\n\t\tnewTextField.height=this.awd_file_data.newBlockBytes.readFloat();\r\n\t\tvar num_paragraphs:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar complete_text:string = \"\";\r\n\t\t//console.log(\"num_paragraphs  '\" + num_paragraphs);\r\n\t\tvar text_format:TextFormat;\r\n\t\tfor(var paracnt:number=0; paracnt<num_paragraphs; paracnt++){\r\n\r\n\t\t\tvar num_textruns:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t//console.log(\"num_textruns  '\" + num_textruns);\r\n\t\t\tfor(var textrun_cnt:number=0; textrun_cnt<num_textruns; textrun_cnt++) {\r\n\r\n\t\t\t\tvar format_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"format_id  '\" + format_id);\r\n\t\t\t\tvar textFormat:TextFormat = <TextFormat>this.awd_file_data.getAssetByID(format_id);\r\n\t\t\t\tif (textFormat==undefined) {\r\n\t\t\t\t\ttext_format = new TextFormat();\r\n\t\t\t\t}\r\n\t\t\t\t//console.log(\"text_format  '\" + text_format.name);\r\n\t\t\t\tvar txt_length = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"txt_length  '\" + txt_length);\r\n\t\t\t\tif (txt_length > 0) {\r\n\t\t\t\t\tvar this_txt:string = this.awd_file_data.newBlockBytes.readUTFBytes(txt_length);\r\n\t\t\t\t\t//newTextField.appendText(this_txt, text_format);\r\n\t\t\t\t\tcomplete_text+=this_txt;\r\n\t\t\t\t\t//console.log(\"this_txt  '\" + this_txt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//newTextField.closeParagraph();\r\n\t\t}\r\n\t\tnewTextField.textFormat=text_format;\r\n\t\tnewTextField.text=complete_text;\r\n\r\n\t\t//newTextField.construct_geometry();\r\n\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BOOL, 3:AWD3Utils.BOOL, 4:AWD3Utils.BOOL, 5:AWD3Utils.BOOL, 7:AWD3Utils.UINT8, 8:AWD3Utils.UINT8, 9:AWD3Utils.UINT8});\r\n\t\tnewTextField.selectable = props.get(1, false);\r\n\t\tnewTextField.border =  props.get(3, false);\r\n\t\t//newTextField.renderHTML =  props.get(4, false);\r\n\t\t//newTextField.scrollable =  props.get(5, false);\r\n\t\t//newTextField.text_flow =  props.get(7, 0);\r\n\t\t//newTextField.orientationMode =  props.get(8, 0);\r\n\t\t//newTextField.line_mode =  props.get(9, 0);\r\n\r\n\t\tnewTextField.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = newTextField;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a TextField: Name = '\" + newTextField.name + \"| text  = \" + complete_text);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = TextfieldAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\r\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TextformatAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar newTextFormat:TextFormat = new TextFormat();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\t//console.log(\"this.awd_file_data._blocks[blockID].name  '\" + this.awd_file_data._blocks[blockID].name );\r\n\t\tvar font_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"font_id  '\" + font_id);\r\n\t\tvar font_style_name:string = this.awd_file_data.parseVarStr();\r\n\t\t//console.log(\"font_style_name  '\" + font_style_name);\r\n\t\tvar font:Font = <Font>this.awd_file_data.getAssetByID(font_id);\r\n\t\tif (font==undefined) {\r\n\t\t\tfont = new Font();\r\n\t\t}\r\n\t\tnewTextFormat.font_name = font.name;\r\n\t\tvar font_table:TesselatedFontTable = font.get_font_table(font_style_name);\r\n\t\tif(font_table!=null){\r\n\t\t\tnewTextFormat.font_style = font_style_name;\r\n\t\t\tnewTextFormat.font_table = font_table;\r\n\t\t}\r\n\r\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"mat  '\" + data_id);\r\n\t\tvar mat:BasicMaterial = <BasicMaterial> this.awd_file_data.getAssetByID(data_id);\r\n\r\n\t\tif (mat==undefined) {\r\n\t\t\tmat = new BasicMaterial();\r\n\t\t}\r\n\t\tmat.bothSides=true;\r\n\r\n\t\tvar num_uv_values:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t//console.log(\"num_uv_values  '\" + num_uv_values);\r\n\t\tvar uv_values:Array<number>=[];\r\n\t\tfor(var uvcnt:number=0; uvcnt<num_uv_values; uvcnt++){\r\n\t\t\tvar uv_value:number=this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\tuv_values.push(uv_value);\r\n\t\t\t//console.log(\"uv_value  '\" + uv_value);\r\n\t\t}\r\n\t\tnewTextFormat.uv_values=uv_values;\r\n\t\tvar format_props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT16, 2:AWD3Utils.UINT16, 3:AWD3Utils.UINT8,4:AWD3Utils.UINT8,5:AWD3Utils.UINT8,6:AWD3Utils.UINT8, 7:AWD3Utils.UINT16, 8:AWD3Utils.UINT16, 9:AWD3Utils.UINT16, 10:AWD3Utils.UINT16});\r\n\r\n\t\tnewTextFormat.size = format_props.get(1,12);\r\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\r\n\t\t//newTextFormat.rotated = format_props.get(3,false);\r\n\t\tnewTextFormat.kerning = format_props.get(4,true);\r\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\r\n\t\t//newTextFormat.align = format_props.get(6,0);\r\n\t\tnewTextFormat.indent = format_props.get(7,0);\r\n\t\tnewTextFormat.leftMargin = format_props.get(8,0);\r\n\t\tnewTextFormat.rightMargin = format_props.get(9,0);\r\n\t\t//newTextFormat.linespacing = format_props.get(10,0);\r\n\t\tnewTextFormat.size = format_props.get(1,12);\r\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\r\n\t\t//newTextFormat.rotated = format_props.get(3,false);\r\n\t\tnewTextFormat.kerning = format_props.get(4,true);\r\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\r\n\t\tnewTextFormat.material = mat;\r\n\t\tthis.awd_file_data.parseUserAttributes();// textformat has no extra-properties\r\n\t\t//newTextFormat.extra =\r\n\r\n\t\tthis.awd_file_data.cur_block.data = newTextFormat;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a TextFormat: Name = '\" + name + \" font: \"+font.name);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = TextformatAWDParser;/**\r\n * Created by 80prozent on 4/18/2015.\r\n */\r\n",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Short3Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\n\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\n\r\nclass VertexAnimClipAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar poseOnly:boolean=false;\r\n\t\tif(this.awd_file_data.cur_block.type==111){\r\n\t\t\tposeOnly=true\r\n\t\t}\r\n\t\tvar num_frames:number /*uint*/ = 1;\r\n\t\tvar num_submeshes:number /*uint*/;\r\n\t\tvar frames_parsed:number /*uint*/;\r\n\t\tvar subMeshParsed:number /*uint*/;\r\n\t\tvar frame_dur:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar str_len:number;\r\n\t\tvar str_end:number;\r\n\t\tvar geometry:Geometry;\r\n\t\tvar subGeom:TriangleSubGeometry;\r\n\t\tvar idx:number /*int*/ = 0;\r\n\t\tvar indices:Short3Attributes;\r\n\t\tvar verts:Array<number>;\r\n\t\tvar num_Streams:number /*int*/ = 0;\r\n\t\tvar streamsParsed:number /*int*/ = 0;\r\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar thisGeo:Geometry;\r\n\t\tvar clip:VertexClipNode = new VertexClipNode();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar geoAdress:number /*int*/ = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar geom:Geometry = <Geometry>this.awd_file_data.getAssetByID(geoAdress);\r\n\t\tif (geom==undefined) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the target-Geometry-Object \" + geoAdress + \" ) for this.awd_file_data VertexClipNode\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar uvs:Array<Float32Array> = this.awd_file_data.getUVForVertexAnimation(geoAdress);\r\n\t\tif (!poseOnly)\r\n\t\t\tnum_frames = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\tnum_submeshes = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tnum_Streams = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tstreamsParsed = 0;\r\n\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\tstreamtypes.push(this.awd_file_data.newBlockBytes.readUnsignedShort());\r\n\t\t\tstreamsParsed++;\r\n\t\t}\r\n\t\tprops = this.awd_file_data.parseProperties({1:AWD3Utils.BOOL, 2:AWD3Utils.BOOL});\r\n\r\n\t\tclip.looping = props.get(1, true);\r\n\t\tclip.stitchFinalFrame = props.get(2, false);\r\n\r\n\t\tframes_parsed = 0;\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tframe_dur = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\tgeometry = new Geometry();\r\n\t\t\tsubMeshParsed = 0;\r\n\t\t\twhile (subMeshParsed < num_submeshes) {\r\n\t\t\t\tstreamsParsed = 0;\r\n\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\r\n\t\t\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\r\n\t\t\t\t\t\tindices = geom.subGeometries[subMeshParsed].indices;\r\n\t\t\t\t\t\tverts = new Array<number>();\r\n\t\t\t\t\t\tidx = 0;\r\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\t\tx = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t\t\ty = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t\t\tz = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsubGeom = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\t\t\t\tsubGeom.setIndices(indices);\r\n\t\t\t\t\t\tsubGeom.setPositions(verts);\r\n\t\t\t\t\t\tsubGeom.setUVs(uvs[subMeshParsed]);\r\n\t\t\t\t\t\tsubGeom.setNormals(null);\r\n\t\t\t\t\t\tsubGeom.setTangents(null);\r\n\t\t\t\t\t\tsubGeom.autoDeriveNormals = false;\r\n\t\t\t\t\t\tsubGeom.autoDeriveTangents = false;\r\n\t\t\t\t\t\tsubMeshParsed++;\r\n\t\t\t\t\t\tgeometry.addSubGeometry(subGeom)\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t\tstreamsParsed++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tclip.addFrame(geometry, frame_dur);\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data=clip;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + geom.name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = VertexAnimClipAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\n\r\nclass VertexAnimationSetAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar poseBlockAdress:number /*int*/\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_frames:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT16});\r\n\t\tvar frames_parsed:number /*uint*/ = 0;\r\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\r\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tposeBlockAdress = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar animNode:AnimationNodeBase = <AnimationNodeBase>this.awd_file_data.getAssetByID(poseBlockAdress);\r\n\t\t\tif (animNode==undefined) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the AnimationClipNode Nr \" + frames_parsed + \" ( \" + poseBlockAdress + \" ) for this.awd_file_data AnimationSet\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (animNode instanceof VertexClipNode)\r\n\t\t\t\t\tvertexFrames.push(<VertexClipNode>animNode)\r\n\t\t\t\tif (animNode instanceof SkeletonClipNode)\r\n\t\t\t\t\tskeletonFrames.push(<SkeletonClipNode>animNode)\r\n\t\t\t}\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not create this.awd_file_data AnimationSet, because it contains no animations\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tif (vertexFrames.length > 0) {\r\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\r\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\r\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\r\n\t\t\tthis.awd_file_data.cur_block.data = newVertexAnimationSet;\r\n\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + newVertexAnimationSet.name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames.toString());\r\n\t\t\treturn;\r\n\t\t} else if (skeletonFrames.length > 0) {\r\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\r\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\r\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\r\n\t\t\tthis.awd_file_data.cur_block.data = newSkeletonAnimationSet;\r\n\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + newSkeletonAnimationSet.name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = VertexAnimationSetAWDParser;",
    "import BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\n\r\nimport AWDBitFlags\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWDBlock\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\n\r\n/**\r\n * AWD3FileData stores the data loaded for a AWD-file. It also gives access to some helper functions.\r\n */\r\nclass AWD3FileData\r\n{\r\n\t//set to \"true\" to have some console.logs in the Console\r\n\tprivate _debug:boolean = false;\r\n\r\n\tprivate _cur_block:AWDBlock;\r\n\tprivate _blocks:Array<AWDBlock>;\r\n\tprivate _newBlockBytes:ByteArray;\r\n\r\n\tpublic  major_version:number;\r\n\tpublic  minor_version:number;\r\n\r\n\tprivate _accuracyOnBlocks:boolean = false;\r\n\r\n\tprivate _accuracyMatrix:boolean;\r\n\tprivate _accuracyGeo:boolean;\r\n\tprivate _accuracyProps:boolean;\r\n\tprivate _matrixNrType:number;\r\n\tprivate _geoNrType:number;\r\n\tprivate _propsNrType:number;\r\n\r\n\tprivate blendModeDic:Array<string>;\r\n\tprivate _depthSizeDic:Array<number>;\r\n\r\n\tprivate _defaultCubeTexture:SingleCubeTexture;\r\n\t/**\r\n\t * Creates a new AWD3FileData object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.major_version=0;\r\n\t\tthis.minor_version=0;\r\n\r\n\t\tthis._blocks = new Array<AWDBlock>();\r\n\t\tthis._blocks.push(new AWDBlock(255, 0));\r\n\t\tthis._cur_block=this._blocks[0];\r\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.ADD);\r\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\r\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\r\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\r\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\r\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\r\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\r\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\r\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\r\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\r\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\r\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\r\n\t\tthis._depthSizeDic.push(256);\r\n\t\tthis._depthSizeDic.push(512);\r\n\t\tthis._depthSizeDic.push(2048);\r\n\t\tthis._depthSizeDic.push(1024);\r\n\t}\r\n\r\n\tpublic getDepthSizeFromEnum(depthSize:number):number\r\n\t{\r\n\t\treturn this._depthSizeDic[depthSize];\r\n\t}\r\n\tpublic getBlendModeStringFromEnum(blendmode:number):string\r\n\t{\r\n\t\treturn this.blendModeDic[blendmode];\r\n\t}\r\n\r\n\tpublic dispose():void\r\n\t{\r\n\r\n\t\tfor (var c in this._blocks) {\r\n\r\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[ c ];\r\n\t\t\tb.dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tpublic get accuracyOnBlocks():boolean\r\n\t{\r\n\t\treturn this._accuracyOnBlocks;\r\n\t}\r\n\tpublic get accuracyMatrix():boolean\r\n\t{\r\n\t\treturn this._accuracyMatrix;\r\n\t}\r\n\tpublic set accuracyMatrix(new_accuracyMatrix:boolean)\r\n\t{\r\n\t\tthis._accuracyMatrix = new_accuracyMatrix;\r\n\t}\r\n\tpublic get accuracyProps():boolean\r\n\t{\r\n\t\treturn this._accuracyProps;\r\n\t}\r\n\tpublic set accuracyProps(new_accuracyProps:boolean)\r\n\t{\r\n\t\tthis._accuracyProps = new_accuracyProps;\r\n\t}\r\n\tpublic set accuracyGeo(new_accuracyGeo:boolean)\r\n\t{\r\n\t\tthis._accuracyGeo = new_accuracyGeo;\r\n\t}\r\n\tpublic get accuracyGeo():boolean\r\n\t{\r\n\t\treturn this._accuracyGeo;\r\n\t}\r\n\tpublic get debug():boolean\r\n\t{\r\n\t\treturn this._debug;\r\n\t}\r\n\r\n\tpublic get matrixNrType():number\r\n\t{\r\n\t\treturn this._matrixNrType;\r\n\t}\r\n\tpublic set matrixNrType(newmatrixNrType:number)\r\n\t{\r\n\t\tthis._matrixNrType = newmatrixNrType;\r\n\t}\r\n\r\n\tpublic get propsNrType():number\r\n\t{\r\n\t\treturn this._propsNrType;\r\n\t}\r\n\tpublic set propsNrType(new_props_nr:number)\r\n\t{\r\n\t\tthis._propsNrType = new_props_nr;\r\n\t}\r\n\r\n\tpublic get geoNrType():number\r\n\t{\r\n\t\treturn this._geoNrType;\r\n\t}\r\n\tpublic set geoNrType(new_geoNrType:number)\r\n\t{\r\n\t\tthis._geoNrType = new_geoNrType;\r\n\t}\r\n\r\n\r\n\tpublic set newBlockBytes(new_newBlockBytes:ByteArray)\r\n\t{\r\n\t\tthis._newBlockBytes = new_newBlockBytes;\r\n\t}\r\n\tpublic get newBlockBytes():ByteArray\r\n\t{\r\n\t\treturn this._newBlockBytes;\r\n\t}\r\n\tpublic create_new_block(type:number, id:number)\r\n\t{\r\n\t\tvar new_block:AWDBlock= new AWDBlock(this._blocks.length, type);\r\n\t\tthis._cur_block=new_block;\r\n\t\tthis._blocks[id]=new_block;\r\n\t}\r\n\tpublic get cur_block():AWDBlock\r\n\t{\r\n\t\treturn this._cur_block;\r\n\t}\r\n\tpublic block_cnt():number\r\n\t{\r\n\t\treturn this._blocks.length;\r\n\t}\r\n\r\n\t//--Parser UTILS---------------------------------------------------------------------------\r\n\r\n\tpublic parseUserAttributes():Object\r\n\t{\r\n\t\tvar attributes:Object;\r\n\t\tvar list_len:number;\r\n\t\tvar attibuteCnt:number;\r\n\r\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\tif (list_len > 0) {\r\n\r\n\t\t\tvar list_end:number;\r\n\r\n\t\t\tattributes = {};\r\n\r\n\t\t\tlist_end = this._newBlockBytes.position + list_len;\r\n\r\n\t\t\twhile (this._newBlockBytes.position < list_end) {\r\n\t\t\t\tvar ns_id:number;\r\n\t\t\t\tvar attr_key:string;\r\n\t\t\t\tvar attr_type:number;\r\n\t\t\t\tvar attr_len:number;\r\n\t\t\t\tvar attr_val:any;\r\n\r\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\r\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_key = this.parseVarStr();\r\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn attributes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (attr_type) {\r\n\t\t\t\t\tcase AWD3Utils.AWDSTRING:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.INT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.INT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.INT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.BOOL:\r\n\t\t\t\t\tcase AWD3Utils.UINT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.UINT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.UINT32:\r\n\t\t\t\t\tcase AWD3Utils.BADDR:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.FLOAT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.FLOAT64:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\r\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattributes[attr_key] = attr_val;\r\n\t\t\t\tattibuteCnt += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\t}\r\n\r\n\tpublic parseProperties(expected:Object):AWDProperties\r\n\t{\r\n\t\tvar list_end:number;\r\n\t\tvar list_len:number;\r\n\t\tvar propertyCnt:number = 0;\r\n\t\tvar props:AWDProperties = new AWDProperties();\r\n\r\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\r\n\t\tlist_end = this._newBlockBytes.position + list_len;\r\n\r\n\t\tif (expected) {\r\n\r\n\t\t\twhile (this._newBlockBytes.position < list_end) {\r\n\t\t\t\tvar len:number;\r\n\t\t\t\tvar key:number;\r\n\t\t\t\tvar type:number;\r\n\r\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn props;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (expected.hasOwnProperty(key.toString())) {\r\n\t\t\t\t\ttype = expected[key];\r\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newBlockBytes.position += len;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpropertyCnt += 1;\r\n\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t}\r\n\r\n\t\treturn props;\r\n\r\n\t}\r\n\r\n\tprivate parseAttrValue(type:number, len:number):any\r\n\t{\r\n\t\tvar elem_len:number;\r\n\t\tvar read_func:Function;\r\n\r\n\t\tswitch (type) {\r\n\r\n\t\t\tcase AWD3Utils.BOOL:\r\n\t\t\tcase AWD3Utils.INT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.INT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.INT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.UINT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.UINT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.UINT32:\r\n\t\t\tcase AWD3Utils.COLOR:\r\n\t\t\tcase AWD3Utils.BADDR:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.FLOAT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.FLOAT64:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.AWDSTRING:\r\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\r\n\t\t\tcase AWD3Utils.VECTOR2x1:\r\n\t\t\tcase AWD3Utils.VECTOR3x1:\r\n\t\t\tcase AWD3Utils.VECTOR4x1:\r\n\t\t\tcase AWD3Utils.MTX3x2:\r\n\t\t\tcase AWD3Utils.MTX3x3:\r\n\t\t\tcase AWD3Utils.MTX4x3:\r\n\t\t\tcase AWD3Utils.MTX4x4:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif (elem_len < len) {\r\n\t\t\tvar list:Array<any> = [];\r\n\t\t\tvar num_read:number = 0;\r\n\t\t\tvar num_elems:number = len/elem_len;\r\n\r\n\t\t\twhile (num_read < num_elems) {\r\n\t\t\t\tlist.push(read_func.apply(this._newBlockBytes)); // list.push(read_func());\r\n\t\t\t\tnum_read++;\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\t\t} else {\r\n\r\n\t\t\tvar val:any = read_func.apply(this._newBlockBytes);//read_func();\r\n\t\t\treturn val;\r\n\t\t}\r\n\t}\r\n\r\n\t// Helper - functions\r\n\tpublic getUVForVertexAnimation(meshID:number /*uint*/):Array<Float32Array>\r\n\t{\r\n\t\tif (this._blocks[meshID].data instanceof Mesh)\r\n\t\t\tmeshID = this._blocks[meshID].geoID;\r\n\t\tif (this._blocks[meshID].uvsForVertexAnimation)\r\n\t\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\t\tvar geometry:Geometry = (<Geometry> this._blocks[meshID].data);\r\n\t\tvar geoCnt:number /*int*/ = 0;\r\n\t\tvar sub_geom:TriangleSubGeometry;\r\n\t\tthis._blocks[meshID].uvsForVertexAnimation = new Array<Float32Array>();\r\n\t\twhile (geoCnt < geometry.subGeometries.length) {\r\n\t\t\tsub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\r\n\t\t\tthis._blocks[meshID].uvsForVertexAnimation.push(sub_geom.uvs.get(sub_geom.numVertices));\r\n\t\t\tgeoCnt++;\r\n\t\t}\r\n\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\t}\r\n\r\n\tpublic parseVarStr():string\r\n\t{\r\n\r\n\t\tvar len:number = this._newBlockBytes.readUnsignedShort();\r\n\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\t}\r\n\r\n\tpublic getBlockByID(assetID:number):AWDBlock\r\n\t{\r\n\t\treturn this._blocks[assetID];\r\n\t}\r\n\tpublic getAssetByID(assetID:number):IAsset\r\n\t{\r\n\t\treturn this._blocks[assetID].data;\r\n\t}\r\n\tprivate getDefaultAsset(assetType:string):IAsset\r\n\t{\r\n\t\tswitch (true) {\r\n\t\t\tcase (assetType == SingleCubeTexture.assetType):\r\n\t\t\t\treturn this.getDefaultCubeTexture();\r\n\t\t\t\tbreak;\r\n\t\t\tcase (assetType == Single2DTexture.assetType):\r\n\t\t\t\treturn DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\tbreak;\r\n\t\t\tcase (assetType == MethodMaterial.assetType):\r\n\t\t\t\treturn DefaultMaterialManager.getDefaultMaterial();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic getDefaultCubeTexture():IAsset\r\n\t{\r\n\t\t/*\r\n\t\tif (!this._defaultCubeTexture) {\r\n\t\t\tvar defaultBitmap:BitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\t\tvar bitmapImageCube = new BitmapImageCube(defaultBitmap.width);\r\n\r\n\t\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\t\tbitmapImageCube.draw(i, defaultBitmap);\r\n\r\n\r\n\t\t\tthis._defaultCubeTexture = new SingleCubeTexture(bitmapImageCube);\r\n\t\t\tthis._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t\t}\r\n\t\t*/\r\n\t\treturn <IAsset> this._defaultCubeTexture;\r\n\t}\r\n\r\n\tpublic  readNumber(precision:boolean = false):number\r\n\t{\r\n\t\tif (precision)\r\n\t\t\treturn this._newBlockBytes.readDouble();\r\n\t\treturn this._newBlockBytes.readFloat();\r\n\r\n\t}\r\n\r\n\tpublic parseMatrix3D():Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\r\n\t}\r\n\r\n\tprivate parseMatrix32RawData():Array<number>\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n\tpublic parseMatrix43RawData():Array<number>\r\n\t{\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(16);\r\n\r\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[3] = 0.0;\r\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[7] = 0.0;\r\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[11] = 0.0;\r\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[15] = 1.0;\r\n\r\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\r\n\r\n\t\tif (isNaN(mtx_raw[0])) {\r\n\t\t\tmtx_raw[0] = 1;\r\n\t\t\tmtx_raw[1] = 0;\r\n\t\t\tmtx_raw[2] = 0;\r\n\t\t\tmtx_raw[4] = 0;\r\n\t\t\tmtx_raw[5] = 1;\r\n\t\t\tmtx_raw[6] = 0;\r\n\t\t\tmtx_raw[8] = 0;\r\n\t\t\tmtx_raw[9] = 0;\r\n\t\t\tmtx_raw[10] = 1;\r\n\t\t\tmtx_raw[12] = 0;\r\n\t\t\tmtx_raw[13] = 0;\r\n\t\t\tmtx_raw[14] = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n}\r\n\r\nexport = AWD3FileData;\r\n\r\n\r\n\r\n",
    "\r\nclass AWD3Utils {\r\n\tpublic static BLOCKSTATE_FINALIZE:number = 0;\r\n\tpublic static BLOCKSTATE_INVALID:number = 1;\r\n\tpublic static BLOCKSTATE_LOAD_DEPENDENICES:number = 2;\r\n\tpublic static BLOCKSTATE_NO_ASSET:number = 3;\r\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\r\n\tpublic static UNCOMPRESSED:number = 0;\r\n\tpublic static DEFLATE:number = 1;\r\n\tpublic static LZMA:number = 2;\r\n\tpublic static INT8:number = 1;\r\n\tpublic static INT16:number = 2;\r\n\tpublic static INT32:number = 3;\r\n\tpublic static UINT8:number = 4;\r\n\tpublic static UINT16:number = 5;\r\n\tpublic static UINT32:number = 6;\r\n\tpublic static FLOAT32:number = 7;\r\n\tpublic static FLOAT64:number = 8;\r\n\tpublic static BOOL:number = 21;\r\n\tpublic static COLOR:number = 22;\r\n\tpublic static BADDR:number = 23;\r\n\tpublic static AWDSTRING:number = 31;\r\n\tpublic static AWDBYTEARRAY:number = 32;\r\n\tpublic static VECTOR2x1:number = 41;\r\n\tpublic static VECTOR3x1:number = 42;\r\n\tpublic static VECTOR4x1:number = 43;\r\n\tpublic static MTX3x2:number = 44;\r\n\tpublic static MTX3x3:number = 45;\r\n\tpublic static MTX4x3:number = 46;\r\n\tpublic static MTX4x4:number = 47;\r\n}\r\nexport = AWD3Utils;",
    "\r\n/**\r\n *\r\n */\r\nclass AWDBitFlags\r\n{\r\n\tpublic static FLAG1:number = 1;\r\n\tpublic static FLAG2:number = 2;\r\n\tpublic static FLAG3:number = 4;\r\n\tpublic static FLAG4:number = 8;\r\n\tpublic static FLAG5:number = 16;\r\n\tpublic static FLAG6:number = 32;\r\n\tpublic static FLAG7:number = 64;\r\n\tpublic static FLAG8:number = 128;\r\n\tpublic static FLAG9:number = 256;\r\n\tpublic static FLAG10:number = 512;\r\n\tpublic static FLAG11:number = 1024;\r\n\tpublic static FLAG12:number = 2048;\r\n\tpublic static FLAG13:number = 4096;\r\n\tpublic static FLAG14:number = 8192;\r\n\tpublic static FLAG15:number = 16384;\r\n\tpublic static FLAG16:number = 32768;\r\n\r\n\tpublic static test(flags:number, testFlag:number):boolean\r\n\t{\r\n\t\treturn (flags & testFlag) == testFlag;\r\n\t}\r\n}\r\nexport = AWDBitFlags;",
    "import ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nclass AWDBlock\r\n{\r\n\tpublic id:number;\r\n\tpublic name:string;\r\n\tpublic type:number;\r\n\tpublic data:any;\r\n\tpublic dependencies_data:Array<ByteArray>;\r\n\tpublic dependencies_urls:Array<string>;\r\n\tpublic loaded_dependencies:Array<any>;\r\n\tpublic loaded_dependencies_cnt:number;\r\n\tpublic len:number;\r\n\tpublic geoID:number;\r\n\tpublic state:number;\r\n\tpublic extras:Object;\r\n\tpublic bytes:ByteArray;\r\n\tpublic errorMessages:Array<string>;\r\n\tpublic uvsForVertexAnimation:Array<Float32Array>;\r\n\r\n\tconstructor(this_id:number, this_type:number)\r\n\t{\r\n\t\tthis.type=this_type;\r\n\t\tthis.id=this_id;\r\n\t\tthis.state = AWD3Utils.BLOCKSTATE_FINALIZE;\r\n\t\tthis.dependencies_data=Array<any>();\r\n\t\tthis.dependencies_urls=Array<string>();\r\n\t\tif(this_type==83){\r\n\t\t\tthis.loaded_dependencies=Array<any>(6);\r\n\t\t}\r\n\t\tthis.loaded_dependencies_cnt=0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t\tthis.id = null;\r\n\t\tthis.bytes = null;\r\n\t\tthis.errorMessages = null;\r\n\t\tthis.uvsForVertexAnimation = null;\r\n\r\n\t}\r\n\r\n\tpublic addError(errorMsg:string):void\r\n\t{\r\n\t\tif (!this.errorMessages)\r\n\t\t\tthis.errorMessages = new Array<string>();\r\n\r\n\t\tthis.errorMessages.push(errorMsg);\r\n\t}\r\n}\r\nexport = AWDBlock;",
    "\r\nclass AWDProperties\r\n{\r\n\tpublic set(key:number, value:any):void\r\n\t{\r\n\t\tthis[ key.toString() ] = value;\r\n\t}\r\n\r\n\tpublic get(key:number, fallback:any):any\r\n\t{\r\n\t\tif (this.hasOwnProperty(key.toString())) {\r\n\t\t\treturn this[key.toString()];\r\n\t\t} else {\r\n\t\t\treturn fallback;\r\n\t\t}\r\n\t}\r\n}\r\nexport = AWDProperties;",
    "import BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\n\r\n\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\n\r\n\r\n\r\nimport AWDBitFlags\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport AWDAssetParsers\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers\");\r\nimport AWDBlock\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\r\nimport AWD3FileData\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\n\r\n/**\r\n * AWD3Utils provides a parser for the AWD data type.\r\n */\r\nclass AWD3Parser extends ParserBase\r\n{\r\n\t//set to \"true\" to have some console.logs in the Console\r\n\tprivate _debug:boolean = false;\r\n\tprivate _byteData:ByteArray;\r\n\tprivate _startedParsing:boolean = false;\r\n\tprivate _compression:number;\r\n\tprivate _streaming:boolean;\r\n\tprivate _parsed_header:boolean = false;\r\n\tprivate _body:ByteArray;\r\n\tprivate _awd_data:AWD3FileData;\r\n\tprivate _block_parser:AWDAssetParsers;\r\n\r\n\t// temp for checking stats\r\n\tpublic total_time:number = 0;\r\n\tpublic geom_time:number = 0;\r\n\tpublic timeline_time:number = 0;\r\n\r\n\t/**\r\n\t * Creates a new AWD3Utils object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(block_parser:AWDAssetParsers = undefined)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n\t\tthis._block_parser=block_parser;\r\n\t\tif(this._block_parser==undefined){\r\n\t\t\tthis._block_parser=new AWDAssetParsers();\r\n\t\t}\r\n\t\tthis._awd_data=new AWD3FileData();\r\n\t\tthis._block_parser.init_parser(this._awd_data);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"awd\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t// this will be called when Dependency has finished loading.\r\n\t\t// the ressource dependecniy has a id that point to the awd_block waiting for it.\r\n\t\tif (resourceDependency.assets.length == 1) {\r\n\t\t\tvar this_block:AWDBlock = this._awd_data.getBlockByID(parseInt(resourceDependency.id));\r\n\t\t\tif(this_block.type==82){\r\n\t\t\t\tvar testure_asset:Single2DTexture = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\r\n\t\t\t\tthis_block.data = testure_asset; // Store finished asset\r\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> testure_asset, this_block.name);\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap for texture\");\r\n\t\t\t\t\tconsole.log(\"Parsed texture: Name = \" + this_block.name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(this_block.type==44){\r\n\t\t\t\t// todo: implement parsing of Audio block data\r\n\t\t\t\t/*\r\n\t\t\t\t var audio_asset:AudioAsset = <AudioAsset> resourceDependency.assets[0];\r\n\t\t\t\t this_block.data = audio_asset; // Store finished asset\r\n\t\t\t\t // Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t // previously suppressed while the dependency was loaded.\r\n\t\t\t\t this._pFinalizeAsset(<IAsset> audio_asset, this_block.name);\r\n\t\t\t\t */\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"Successfully loaded Sound into AudioAsset\");\r\n\t\t\t\t\tconsole.log(\"Loaded Sound: Name = \" + this_block.name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(this_block.type==83){\r\n\t\t\t\tthis_block.loaded_dependencies[resourceDependency.sub_id]= resourceDependency.assets[0];\r\n\t\t\t\tthis_block.loaded_dependencies_cnt++;\r\n\t\t\t\tif(this_block.loaded_dependencies_cnt==6){\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + resourceDependency.sub_id + \" / 6 for Cubetexture\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar cube_image_asset = new BitmapImageCube(this_block.loaded_dependencies[0].width);\r\n\r\n\t\t\t\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\t\t\t\tcube_image_asset.draw(i, this_block.loaded_dependencies[i]);\r\n\r\n\r\n\t\t\t\t\tvar cube_tex_asset = new SingleCubeTexture(cube_image_asset);\r\n\t\t\t\t\tthis_block.data = cube_tex_asset; // Store finished asset\r\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> cube_tex_asset, this_block.name);\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + this_block.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t//\tnot used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\r\n\t\t// \tthis means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency name\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\r\n\t{\r\n\t\tvar oldName:string = asset.name;\r\n\r\n\t\tif (asset) {\r\n\t\t\tvar block:AWDBlock = this._awd_data.getBlockByID(parseInt(resourceDependency.id));\r\n\t\t\t// Reset name of texture to the one defined in the AWD file,\r\n\t\t\t// as opposed to whatever the image parser came up with.\r\n\t\t\tasset.resetAssetPath(block.name, null, true);\r\n\t\t}\r\n\r\n\t\tvar newName:string = asset.name;\r\n\r\n\t\tasset.name = oldName;\r\n\r\n\t\treturn newName;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\tif (!this._parsed_header) {\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Parse header and decompress body if needed\r\n\t\t\tthis.parseHeader();\r\n\r\n\t\t\tswitch (this._compression) {\r\n\r\n\t\t\t\tcase AWD3Utils.DEFLATE:\r\n\t\t\t\tcase AWD3Utils.LZMA:\r\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase AWD3Utils.UNCOMPRESSED:\r\n\t\t\t\t\tthis._body = this._byteData;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t// Compressed AWD Formats not yet supported\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t case AWD3Parserutils.DEFLATE:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress();\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t case AWD3Parserutils.LZMA:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t //*/\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._parsed_header = true;\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t}\r\n\r\n\t\tif (this._body) {\r\n\r\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\r\n\t\t\t{\r\n\t\t\t\tthis.parseNextBlock();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Return complete status\r\n\t\t\tif (this._body.getBytesAvailable() == 0) {\r\n\t\t\t\tthis.dispose();\r\n\t\t\t\treturn  ParserBase.PARSING_DONE;\r\n\t\t\t} else {\r\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\tswitch (this._compression) {\r\n\r\n\t\t\t\tcase AWD3Utils.DEFLATE:\r\n\t\t\t\tcase AWD3Utils.LZMA:\r\n\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"(!) AWD3Utils Error: Compressed AWD formats not yet supported (!)\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\t\t\t// Error - most likely _body not set because we do not support compression.\r\n\t\t\treturn  ParserBase.PARSING_DONE;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate dispose():void\r\n\t{\r\n\t\tthis._awd_data.dispose();\r\n\t}\r\n\r\n\tprivate parseNextBlock():void\r\n\t{\r\n\t\tvar block_id:number = this._body.readUnsignedInt();\r\n\r\n\t\tvar ns:number = this._body.readUnsignedByte();\r\n\t\tvar block_type:number = this._body.readUnsignedByte();\r\n\t\tvar flags:number = this._body.readUnsignedByte();\r\n\t\tvar len:number = this._body.readUnsignedInt();\r\n\r\n\t\tvar blockCompression:boolean = AWDBitFlags.test(flags, AWDBitFlags.FLAG4);\r\n\t\tvar blockCompressionLZMA:boolean = AWDBitFlags.test(flags, AWDBitFlags.FLAG5);\r\n\r\n\t\tif (this._awd_data.accuracyOnBlocks) {\r\n\t\t\tthis._awd_data.accuracyMatrix = AWDBitFlags.test(flags, AWDBitFlags.FLAG1);\r\n\t\t\tthis._awd_data.accuracyGeo = AWDBitFlags.test(flags, AWDBitFlags.FLAG2);\r\n\t\t\tthis._awd_data.accuracyProps = AWDBitFlags.test(flags, AWDBitFlags.FLAG3);\r\n\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\t\tif (this._awd_data.accuracyGeo) {\r\n\t\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT64;\r\n\t\t\t}\r\n\r\n\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\t\tif (this._awd_data.accuracyMatrix) {\r\n\t\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT64;\r\n\t\t\t}\r\n\r\n\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\t\tif (this._awd_data.accuracyProps) {\r\n\t\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT64;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar blockEndAll:number = this._body.position + len;\r\n\r\n\t\tif (len > this._body.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\r\n\t\t\tthis._body.position += this._body.getBytesAvailable();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar newBlockBytes:ByteArray = new ByteArray();\r\n\t\tthis._body.readBytes(newBlockBytes, 0, len);\r\n\t\tthis._awd_data.newBlockBytes = newBlockBytes;\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// Compressed AWD Formats not yet supported\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\r\n\t\t\t/*\r\n\t\t\t if (blockCompressionLZMA)\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress(AWD3Parserutils.COMPRESSIONMODE_LZMA);\r\n\t\t\t }\r\n\t\t\t else\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress();\r\n\t\t\t }\r\n\t\t\t */\r\n\r\n\t\t}\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\r\n\t\t//----------------------------------------------------------------------------\r\n\r\n\t\tthis._awd_data.newBlockBytes.position = 0;\r\n\r\n\t\t// we create AWDBlock for all exept the metadata. the metadata block has is the first awdblock in the list by default.\r\n\t\t//if(block_type!=255)\r\n\t\tthis._awd_data.create_new_block(block_type, block_id);\r\n\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\r\n\t\t\t//block.len       = blockEndBlock;\r\n\t\t}\r\n\r\n\t\t//if (this._debug) {\r\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + block_id + \" | TypeID = \" + block_type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._awd_data.accuracyMatrix + \" | Geometry-Precision = \" + this._awd_data.accuracyGeo + \" | Properties-Precision = \" + this._awd_data.accuracyProps);\r\n\t\t//}\r\n\r\n\t\tvar time_start = performance.now();\r\n\r\n\t\t// first check if the block is any of the 3 blocks that does not produce a asset.\r\n\t\t\t// this block contains a asset.\r\n\t\tif(this._block_parser.parseAsset(block_type)){\r\n\t\t\tif(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_FINALIZE){\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset>this._awd_data.cur_block.data, this._awd_data.cur_block.name);\r\n\t\t\t\tif(this._awd_data.cur_block.data instanceof DisplayObject){\r\n\t\t\t\t\tif((<DisplayObjectContainer> this._awd_data.cur_block.data).parent==undefined){\r\n\t\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild((<DisplayObjectContainer> this._awd_data.cur_block.data));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_INVALID){\r\n\t\t\t\tconsole.log(\"ERROR while parsing block - type = \", block_type, \" id = \", block_id);\r\n\t\t\t}\r\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES){\r\n\t\t\t\t// trigger No asset created yet, because the block has dependencies. load the dependencies:.\r\n\t\t\t\tfor(var r:number=0; r<this._awd_data.cur_block.dependencies_urls.length;r++){\r\n\t\t\t\t\t// load dependencies by url. let the parser system decide how to parse it\r\n\t\t\t\t\tthis._pAddDependency(this._awd_data.cur_block.id.toString(), new URLRequest(this._awd_data.cur_block.dependencies_urls[r]), false, null, true, r);\r\n\t\t\t\t}\r\n\t\t\t\tfor(var r:number=0; r<this._awd_data.cur_block.dependencies_data.length;r++) {\r\n\t\t\t\t\t// load dependencies from data. need to prepare the data based on block_type (image vs audio).\r\n\t\t\t\t\tif ((block_type == 82) || (block_type == 83)) {\r\n\t\t\t\t\t\tthis._pAddDependency(this._awd_data.cur_block.id.toString(), null, false, ParserUtils.byteArrayToImage(this._awd_data.cur_block.dependencies_data[r]), true, r);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (block_type == 44) {\r\n\t\t\t\t\t\t// todo: parse audio data\r\n\t\t\t\t\t\t// this._pAddDependency(this._awd_data.cur_block.id.toString(), null, false, this._awd_data.cur_block.dependencies_data[r], true, r);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t}\r\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_NO_ASSET){\r\n\t\t\t\t// this block does not produce any asset (metadata, namespace, command)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Encountered unknown blocktype - type = \", block_type, \" id = \", block_id);\r\n\t\t}\r\n\r\n\t\tvar time_end = performance.now();\r\n\t\tvar thisTime:number=time_end-time_start;\r\n\t\tthis.total_time+=thisTime;\r\n\t\tif(block_type==1){\r\n\t\t\tthis.geom_time+=thisTime;\r\n\t\t}\r\n\t\telse if(block_type==133){\r\n\t\t\tthis.timeline_time+=thisTime;\r\n\t\t}\r\n\t\tconsole.log(\"'parsed '\"+block_type+\"'  block in \"+thisTime+ \" ms\", \" total: \",this.total_time,\" geom: \",this.geom_time,\"timelines:\",this.timeline_time);\r\n\r\n\t\tthis._body.position = blockEndAll;\r\n\t\tthis._awd_data.newBlockBytes = null;\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\tprivate parseHeader():void\r\n\t{\r\n\t\tvar flags:number;\r\n\t\tvar body_len:number;\r\n\r\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\r\n\r\n\t\tthis._awd_data.major_version = this._byteData.readUnsignedByte();\r\n\t\tthis._awd_data.minor_version = this._byteData.readUnsignedByte();\r\n\r\n\t\tflags = this._byteData.readUnsignedShort(); // Parse bit flags\r\n\r\n\t\tthis._streaming = AWDBitFlags.test(flags, AWDBitFlags.FLAG1);\r\n\r\n\t\tif ((this._awd_data.major_version == 2) && (this._awd_data.minor_version == 1)) {\r\n\t\t\tthis._awd_data.accuracyMatrix = AWDBitFlags.test(flags, AWDBitFlags.FLAG2);\r\n\t\t\tthis._awd_data.accuracyGeo = AWDBitFlags.test(flags, AWDBitFlags.FLAG3);\r\n\t\t\tthis._awd_data.accuracyProps = AWDBitFlags.test(flags, AWDBitFlags.FLAG4);\r\n\t\t}\r\n\r\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\r\n\r\n\t\t// set storagePrecision types\r\n\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\tif (this._awd_data.accuracyGeo) {\r\n\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\tif (this._awd_data.accuracyMatrix) {\r\n\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\tif (this._awd_data.accuracyProps) {\r\n\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._awd_data.major_version + \" - \" + this._awd_data.minor_version );\r\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._awd_data.accuracyMatrix + \" | Geometry-Precision = \" + this._awd_data.accuracyGeo + \" | Properties-Precision = \" + this._awd_data.accuracyProps);\r\n\t\t}\r\n\r\n\t\t// Check file integrity\r\n\t\tbody_len = this._byteData.readUnsignedInt();\r\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = AWD3Parser;\r\n\r\n",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Short3Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float3Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport WaveAudio\t\t\t\t\t\t= require(\"awayjs-core/lib/data/WaveAudio\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\r\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport View\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport TextField\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\r\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\nimport PrimitivePrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\r\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\r\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\r\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\r\n\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\r\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\r\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\r\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\r\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\r\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\r\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\r\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\r\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\r\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\r\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\r\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\r\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\r\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\r\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\r\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\r\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\r\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\r\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\r\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\r\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\r\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\r\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\r\n\r\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nimport TimelineSceneGraphFactory \t= require(\"awayjs-player/lib/factories/TimelineSceneGraphFactory\");\r\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\r\nimport MovieClip \t\t\t\t\t= require(\"awayjs-player/lib/display/MovieClip\");\r\nimport Timeline\t\t\t \t\t\t= require(\"awayjs-player/lib/timeline/Timeline\");\r\n\r\n\r\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport TextFormat\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextFieldType\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\n\r\nimport AWDBlock\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\r\n/**\r\n * AWDParser provides a parser for the AWD data type.\r\n */\r\nclass AWDParser extends ParserBase\r\n{\r\n\tprivate _view:View;\r\n\r\n\t//set to \"true\" to have some console.logs in the Console\r\n\tprivate _debug:boolean = false;\r\n\tprivate _debugTimers:boolean = true;\r\n\tprivate _byteData:ByteArray;\r\n\tprivate _startedParsing:boolean = false;\r\n\tprivate _cur_block_id:number;\r\n\tprivate _blocks:Array<AWDBlock>;\r\n\tprivate _newBlockBytes:ByteArray;\r\n\tprivate _version:Array<number>;\r\n\tprivate _compression:number;\r\n\tprivate _accuracyOnBlocks:boolean;\r\n\tprivate _accuracyMatrix:boolean;\r\n\tprivate _accuracyGeo:boolean;\r\n\tprivate _accuracyProps:boolean;\r\n\tprivate _streaming:boolean;\r\n\tprivate _texture_users:Object = {};\r\n\tprivate _parsed_header:boolean = false;\r\n\tprivate _body:ByteArray;\r\n\r\n\r\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\r\n\tpublic static UNCOMPRESSED:number = 0;\r\n\tpublic static DEFLATE:number = 1;\r\n\tpublic static LZMA:number = 2;\r\n\tpublic static INT8:number = 1;\r\n\tpublic static INT16:number = 2;\r\n\tpublic static INT32:number = 3;\r\n\tpublic static UINT8:number = 4;\r\n\tpublic static UINT16:number = 5;\r\n\tpublic static UINT32:number = 6;\r\n\tpublic static FLOAT32:number = 7;\r\n\tpublic static FLOAT64:number = 8;\r\n\tpublic static BOOL:number = 21;\r\n\tpublic static COLOR:number = 22;\r\n\tpublic static BADDR:number = 23;\r\n\tpublic static AWDSTRING:number = 31;\r\n\tpublic static AWDBYTEARRAY:number = 32;\r\n\tpublic static VECTOR2x1:number = 41;\r\n\tpublic static VECTOR3x1:number = 42;\r\n\tpublic static VECTOR4x1:number = 43;\r\n\tpublic static MTX3x2:number = 44;\r\n\tpublic static MTX3x3:number = 45;\r\n\tpublic static MTX4x3:number = 46;\r\n\tpublic static MTX4x4:number = 47;\r\n\tpublic static GEO_NUMBER:number = 48;\r\n\tpublic static MATRIX_NUMBER:number = 49;\r\n\tpublic static PROPERTY_NUMBER:number = 50;\r\n\t\r\n\r\n\tprivate blendModeDic:Array<string>;\r\n\tprivate _depthSizeDic:Array<number>;\r\n\r\n\tprivate start_timeing:number;\r\n\tprivate _time_all:number=0;\r\n\tprivate _time_geom:number=0;\r\n\tprivate _time_timeline:number=0;\r\n\tprivate _time_fonts:number=0;\r\n\tprivate _time_textfields:number=0;\r\n\tprivate _time_sounds:number=0;\r\n\tprivate _time_textures:number=0;\r\n\tprivate _time_materials:number=0;\r\n\tprivate _time_meshes:number=0;\r\n\tprivate _num_geom:number=0;\r\n\tprivate _num_timeline:number=0;\r\n\tprivate _num_fonts:number=0;\r\n\tprivate _num_textfields:number=0;\r\n\tprivate _num_sounds:number=0;\r\n\tprivate _num_textures:number=0;\r\n\tprivate _num_materials:number=0;\r\n\tprivate _num_meshes:number=0;\r\n\r\n\r\n\t/**\r\n\t * Creates a new AWD3Parserutils object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(view:View = null)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n\t\tthis._view = view;\r\n\t\tthis._blocks = new Array<AWDBlock>();\r\n\t\tthis._blocks[0] = new AWDBlock(0,255);\r\n\t\tthis._blocks[0].data = null; // Zero address means null in AWD\r\n\r\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.ADD);\r\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\r\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\r\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\r\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\r\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\r\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\r\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\r\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\r\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\r\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\r\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\r\n\t\tthis._depthSizeDic.push(256);\r\n\t\tthis._depthSizeDic.push(512);\r\n\t\tthis._depthSizeDic.push(2048);\r\n\t\tthis._depthSizeDic.push(1024);\r\n\t\tthis._version = Array<number>(); // will contain 2 int (major-version, minor-version) for awd-version-check\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"awd\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t// this will be called when Dependency has finished loading.\r\n\t\t// the ressource dependecniy has a id that point to the awd_block waiting for it.\r\n\t\t//console.log(\"AWDParser resolve dependencies\");\r\n\t\tif (resourceDependency.assets.length == 1) {\r\n\t\t\tvar this_block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\r\n\t\t\tif(this_block.type==82){\r\n\t\t\t\tvar texture_asset:Single2DTexture = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\r\n\t\t\t\tthis_block.data = texture_asset; // Store finished asset\r\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> texture_asset, this_block.name);\r\n\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"Parsed Texture: Name = \" + this_block.name);\r\n\t\t\t}\r\n\t\t\telse if(this_block.type==44){\r\n\t\t\t\tvar audio_asset:WaveAudio = <WaveAudio> resourceDependency.assets[0];\r\n\t\t\t\tthis_block.data = audio_asset; // Store finished asset\r\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\t//console.log(\"Parsing audio \" + this_block.name);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> audio_asset, this_block.name);\r\n\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"Parsed WaveAudio: Name = \" + this_block.name);\r\n\t\t\t}\r\n\t\t\telse if(this_block.type==83){\r\n\t\t\t\tthis_block.loaded_dependencies[resourceDependency.sub_id]= resourceDependency.assets[0];\r\n\t\t\t\tthis_block.loaded_dependencies_cnt++;\r\n\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + resourceDependency.sub_id + \" / 6 for Cubetexture\");\r\n\r\n\t\t\t\tif(this_block.loaded_dependencies_cnt==6){\r\n\t\t\t\t\tvar cube_image_asset = new BitmapImageCube(this_block.loaded_dependencies[0].width);\r\n\r\n\t\t\t\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\t\t\t\tcube_image_asset.draw(i, this_block.loaded_dependencies[i]);\r\n\r\n\t\t\t\t\tvar cube_tex_asset = new SingleCubeTexture(cube_image_asset);\r\n\t\t\t\t\tthis_block.data = cube_tex_asset; // Store finished asset\r\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> cube_tex_asset, this_block.name);\r\n\r\n\t\t\t\t\tif (this._debug)\r\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + this_block.name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._debugTimers && !this._isParsing)\r\n\t\t\t\tthis.updateTimers(this_block.type);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t//not used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\r\n\t\t// this means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency name\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\r\n\t{\r\n\t\tvar oldName:string = asset.name;\r\n\r\n\t\tif (asset) {\r\n\t\t\tvar block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\r\n\t\t\t// Reset name of texture to the one defined in the AWD file,\r\n\t\t\t// as opposed to whatever the image parser came up with.\r\n\t\t\tasset.resetAssetPath(block.name, null, true);\r\n\t\t}\r\n\r\n\t\tvar newName:string = asset.name;\r\n\r\n\t\tasset.name = oldName;\r\n\r\n\t\treturn newName;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\tif (!this._parsed_header) {\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Parse header and decompress body if needed\r\n\t\t\tthis.parseHeader();\r\n\r\n\t\t\tswitch (this._compression) {\r\n\t\t\t\tcase AWDParser.DEFLATE:\r\n\t\t\t\tcase AWDParser.LZMA:\r\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase AWDParser.UNCOMPRESSED:\r\n\t\t\t\t\tthis._body = this._byteData;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t// Compressed AWD Formats not yet supported\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t case AWD3Parserutils.DEFLATE:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress();\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t case AWD3Parserutils.LZMA:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t //*/\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._parsed_header = true;\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t}\r\n\r\n\t\tif (this._body) {\r\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\r\n\t\t\t\tthis.parseNextBlock();\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Return complete status\r\n\t\t\tif (this._body.getBytesAvailable() == 0) {\r\n\t\t\t\tthis.dispose();\r\n\r\n\t\t\t\tif (this._debugTimers)\r\n\t\t\t\t\tconsole.log(\"Parsing total: \"+(this._time_all | 0)+\"ms\",\r\n\t\t\t\t\t\t\" | geoms: \"+this._num_geom+\", \"+(this._time_geom | 0)+\"ms\",\r\n\t\t\t\t\t\t\" | timelines: \"+this._num_timeline+\", \"+(this._time_timeline | 0)+\"ms\",\r\n\t\t\t\t\t\t\" | fonts: \"+this._num_fonts+\", \"+(this._time_fonts | 0)+\"ms\",\r\n\t\t\t\t\t\t\" | sounds: \"+this._num_sounds+\", \"+(this._time_sounds | 0)+\"ms\",\r\n\t\t\t\t\t\t\" | mats: \"+this._num_materials+\", \"+(this._time_materials | 0)+\"ms\",\r\n\t\t\t\t\t\t\" | textures: \"+this._num_textures+\", \"+(this._time_textures | 0)+\"ms\",\r\n\t\t\t\t\t\t\" | meshes: \"+this._num_meshes+\", \"+(this._time_meshes | 0)+\"ms\");\r\n\r\n\t\t\t\treturn  ParserBase.PARSING_DONE;\r\n\t\t\t} else {\r\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\tswitch (this._compression) {\r\n\t\t\t\tcase AWDParser.DEFLATE:\r\n\t\t\t\tcase AWDParser.LZMA:\r\n\t\t\t\t\tif (this._debug)\r\n\t\t\t\t\t\tconsole.log(\"(!) AWDParser Error: Compressed AWD formats not yet supported (!)\");\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t// Error - most likely _body not set because we do not support compression.\r\n\t\t\treturn  ParserBase.PARSING_DONE;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\t}\r\n\r\n\tprivate dispose()\r\n\t{\r\n\t\tfor (var c in this._blocks) {\r\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[c];\r\n\t\t\tb.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseNextBlock()\r\n\t{\r\n\t\tvar block:AWDBlock;\r\n\t\tvar isParsed:boolean = false;\r\n\t\tvar ns:number;\r\n\t\tvar type:number;\r\n\t\tvar flags:number;\r\n\t\tvar len:number;\r\n//*\r\n\t\tif (this._debugTimers)\r\n\t\t\tthis.start_timeing = performance.now();\r\n//*/\r\n\t\tthis._cur_block_id = this._body.readUnsignedInt();\r\n\r\n\t\tns = this._body.readUnsignedByte();\r\n\t\ttype = this._body.readUnsignedByte();\r\n\t\tflags = this._body.readUnsignedByte();\r\n\t\tlen = this._body.readUnsignedInt();\r\n\r\n\t\tvar blockCompression:boolean = BitFlags.test(flags, BitFlags.FLAG4);\r\n\t\tvar blockCompressionLZMA:boolean = BitFlags.test(flags, BitFlags.FLAG5);\r\n\r\n\t\tif (this._accuracyOnBlocks) {\r\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG1);\r\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG2);\r\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG3);\r\n\t\t}\r\n\r\n\t\tvar blockEndAll:number = this._body.position + len;\r\n\r\n\t\tif (len > this._body.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\r\n\t\t\tthis._body.position += this._body.getBytesAvailable();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// Compressed AWD Formats not yet supported\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\tthis._newBlockBytes = new ByteArray();\r\n\t\t\tthis._body.readBytes(this._newBlockBytes, 0, len);\r\n\t\t\tthis._newBlockBytes.position = 0;\r\n\t\t\t/*\r\n\t\t\t if (blockCompressionLZMA)\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress(AWD3Parserutils.COMPRESSIONMODE_LZMA);\r\n\t\t\t }\r\n\t\t\t else\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress();\r\n\t\t\t }\r\n\t\t\t */\r\n\r\n\t\t} else {\r\n\t\t\tthis._newBlockBytes = this._body;\r\n\t\t}\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\r\n\t\t//----------------------------------------------------------------------------\r\n\r\n\t\tblock = new AWDBlock(this._cur_block_id, type);\r\n\t\tblock.len = len;\r\n\t\tvar blockEndBlock:number = this._newBlockBytes.position + len;\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\r\n\t\t\t//block.len       = blockEndBlock;\r\n\t\t}\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + this._cur_block_id + \" | TypeID = \" + type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\r\n\r\n\t\tthis._blocks[this._cur_block_id] = block;\r\n\r\n\t\tif ((this._version[0] == 3) && (this._version[1] == 0)) {\r\n\t\t\t// probably should contain some info about the type of animation\r\n\t\t\tvar factory = new AS2SceneGraphFactory(this._view);\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 24:\r\n\t\t\t\t\tthis.parseMeshLibraryBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 25:\r\n\t\t\t\t\tthis.parseBillBoardLibraryBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 44:\r\n\t\t\t\t\tthis.parseAudioBlock(this._cur_block_id, factory);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 133:\r\n\t\t\t\t\tthis.parseTimeLine(this._cur_block_id, factory);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 134:\r\n\t\t\t\t\tthis.paresTextField(this._cur_block_id, factory);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 135:\r\n\t\t\t\t\tthis.parseTesselatedFont(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 136:\r\n\t\t\t\t\tthis.parseTextFormat(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ((this._version[0] > 2)||((this._version[0] >= 2) && (this._version[1] >= 1))) {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 11:\r\n\t\t\t\t\tthis.parsePrimitves(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 31:\r\n\t\t\t\t\tthis.parseSkyboxInstance(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 41:\r\n\t\t\t\t\tthis.parseLight(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 42:\r\n\t\t\t\t\tthis.parseCamera(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//  case 43:\r\n\t\t\t\t//      parseTextureProjector(_cur_block_id);\r\n\t\t\t\t//      isParsed = true;\r\n\t\t\t\t//      break;\r\n\r\n\t\t\t\tcase 51:\r\n\t\t\t\t\tthis.parseLightPicker(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 81:\r\n\t\t\t\t\tthis.parseMaterial_v1(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 83:\r\n\t\t\t\t\tthis.parseCubeTexture(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 91:\r\n\t\t\t\t\tthis.parseSharedMethodBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 92:\r\n\t\t\t\t\tthis.parseShadowMethodBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 111:\r\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id, true);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 112:\r\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 113:\r\n\t\t\t\t\tthis.parseVertexAnimationSet(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 122:\r\n\t\t\t\t\tthis.parseAnimatorSet(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 253:\r\n\t\t\t\t\tthis.parseCommand(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isParsed == false) {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.parseGeometry(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 22:\r\n\t\t\t\t\tthis.parseContainer(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 23:\r\n\t\t\t\t\tthis.parseMeshInstance(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 81:\r\n\t\t\t\t\tthis.parseMaterial(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 82:\r\n\t\t\t\t\tthis.parseTexture(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 101:\r\n\t\t\t\t\tthis.parseSkeleton(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 102:\r\n\t\t\t\t\tthis.parseSkeletonPose(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 103:\r\n\t\t\t\t\tthis.parseSkeletonAnimation(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 121:\r\n\t\t\t\t//this.parseUVAnimation(this._cur_block_id);\r\n\t\t\t\t//break;\r\n\t\t\t\tcase 254:\r\n\t\t\t\t\tthis.parseNameSpace(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 255:\r\n\t\t\t\t\tthis.parseMetaData(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (this._debug)\r\n\t\t\t\t\t\tconsole.log(\"AWDBlock:   Unknown BlockType  (BlockID = \" + this._cur_block_id + \") - Skip \" + len + \" bytes\");\r\n\r\n\t\t\t\t\tthis._newBlockBytes.position += len;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tif (this._newBlockBytes.position != blockEndBlock)\r\n\t\t\t\tconsole.log(\"  (!)(!)(!) Error while reading AWDBlock ID \" + this._cur_block_id + \" = skip to next block\");\r\n\r\n\t\t\tif (block.errorMessages) {\r\n\t\t\t\tvar len:number = block.errorMessages.length;\r\n\t\t\t\tfor (var msgCnt:number = 0; msgCnt < len; msgCnt++)\r\n\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\"\\n\");\r\n\t\t}\r\n\r\n\t\tif (this._debugTimers && !this.parsingPaused)\r\n\t\t\tthis.updateTimers(type);\r\n\r\n\t\tthis._body.position = blockEndAll;\r\n\t\tthis._newBlockBytes = null;\r\n\t}\r\n\r\n\tprivate updateTimers(type:number)\r\n\t{\r\n\t\tvar end_timing = performance.now();\r\n\t\tvar time_delta = end_timing - this.start_timeing;\r\n\t\tthis._time_all += time_delta;\r\n\r\n\t\tif (type == 1) {\r\n\t\t\tthis._time_geom += time_delta;\r\n\t\t\tthis._num_geom++;\r\n\t\t} else if (type == 133) {\r\n\t\t\tthis._time_timeline += time_delta;\r\n\t\t\tthis._num_timeline++;\r\n\t\t} else if (type == 135) {\r\n\t\t\tthis._time_fonts += time_delta;\r\n\t\t\tthis._num_fonts++;\r\n\t\t} else if (type == 134) {\r\n\t\t\tthis._time_textfields += time_delta;\r\n\t\t\tthis._num_textfields++;\r\n\t\t} else if (type == 44) {\r\n\t\t\tthis._time_sounds += time_delta;\r\n\t\t\tthis._num_sounds++;\r\n\t\t} else if (type == 82) {\r\n\t\t\tthis._time_textures += time_delta;\r\n\t\t\tthis._num_textures++;\r\n\t\t} else if (type == 81) {\r\n\t\t\tthis._time_materials += time_delta;\r\n\t\t\tthis._num_materials++;\r\n\t\t} else if(type==24) {\r\n\t\t\tthis._time_meshes += time_delta;\r\n\t\t\tthis._num_meshes++;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//--Parser Blocks---------------------------------------------------------------------------\r\n\r\n\r\n\tprivate parseTesselatedFont(blockID:number)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tthis._blocks[blockID].name = name;\r\n\t\tvar font_style_cnt:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar font_style_char_cnt:number;\r\n\t\tvar font_style_name:string;\r\n\t\tvar new_font_style:TesselatedFontTable;\r\n\t\tvar new_font:Font=new Font();\r\n\t\tvar font_style_char:number;\r\n\t\tvar sm_len:number;\r\n\t\tvar sm_end:number;\r\n\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\t\tfor (var i:number = 0; i < font_style_cnt; ++i) {\r\n\t\t\tfont_style_name = this.parseVarStr();\r\n\t\t\tnew_font_style = new_font.get_font_table(font_style_name);\r\n\t\t\tnew_font_style.set_font_em_size(this._newBlockBytes.readUnsignedInt());\r\n\t\t\tnew_font_style.set_whitespace_width(this._newBlockBytes.readUnsignedInt());\r\n\t\t\t//console.log(new_font_style.get_whitespace_width());\r\n\t\t\tfont_style_char_cnt = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tfor (var j:number = 0; j < font_style_char_cnt; ++j) {\r\n\t\t\t\t// todo: this is basically a simplified version of the subgeom-parsing done in parseGeometry. Make a parseSubGeom() instead (?)\r\n\t\t\t\tfont_style_char = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tsm_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tsm_end = this._newBlockBytes.position + sm_len;\r\n\r\n\t\t\t\t// Loop through data streams\r\n\t\t\t\twhile (this._newBlockBytes.position < sm_end) {\r\n\t\t\t\t\t// Type, field type, length\r\n\t\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\r\n\r\n\t\t\t\t\tif (str_type == 2) {//face indices positions\r\n\t\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\t\t\t\t\t\tfor(var idx:number = 0; this._newBlockBytes.position < str_end; idx++)\r\n\t\t\t\t\t\t\tindices[idx] = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 7 x float32\r\n\t\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\r\n\t\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(curveData) {\r\n\t\t\t\t\tvar vertexBuffer:AttributesBuffer = new AttributesBuffer(20, str_len / 20);\r\n\t\t\t\t\tvertexBuffer.bufferView = new Uint8Array(<ArrayBuffer> curveData.arraybytes);\r\n\r\n\t\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(vertexBuffer);\r\n\t\t\t\t\t//curve_sub_geom.setUVs(new Float2Attributes(vertexBuffer));\r\n\t\t\t\t\tcurve_sub_geom.autoDeriveUVs=false;\r\n\t\t\t\t\tnew_font_style.set_subgeo_for_char(font_style_char.toString(), curve_sub_geom);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.parseProperties(null);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset>new_font, name);\r\n\r\n\t\tthis._blocks[blockID].data = new_font;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a font: Name = '\" + name);\r\n\t}\r\n\r\n\tprivate static textFormatProperties:Object = {\r\n\t\t1:AWDParser.UINT16,\r\n\t\t2:AWDParser.UINT16,\r\n\t\t3:AWDParser.UINT8,\r\n\t\t4:AWDParser.UINT8,\r\n\t\t5:AWDParser.UINT8,\r\n\t\t6:AWDParser.UINT8,\r\n\t\t7:AWDParser.UINT16,\r\n\t\t8:AWDParser.UINT16,\r\n\t\t9:AWDParser.UINT16,\r\n\t\t10:AWDParser.UINT16};\r\n\r\n\tprivate parseTextFormat(blockID:number)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tthis._blocks[blockID].name = name;\r\n\r\n\t\tvar font:Font = <Font> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\tvar font_style_name:string = this.parseVarStr();\r\n\r\n\t\tvar newTextFormat:TextFormat = new TextFormat();\r\n\t\tnewTextFormat.font_name = font.name;\r\n\r\n\t\tvar font_table:TesselatedFontTable = font.get_font_table(font_style_name);\r\n\t\tif (font_table!=null) {\r\n\t\t\tnewTextFormat.font_style = font_style_name;\r\n\t\t\tnewTextFormat.font_table = font_table;\r\n\t\t}\r\n\r\n\t\tvar mat:BasicMaterial = <BasicMaterial> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\tmat.bothSides = true;\r\n\r\n\t\tvar num_uv_values:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar uv_values:Array<number> = [];\r\n\t\tfor(var uvcnt:number = 0; uvcnt < num_uv_values; uvcnt++)\r\n\t\t\tuv_values[uvcnt] = this._newBlockBytes.readFloat();\r\n\r\n\t\tnewTextFormat.uv_values = uv_values;\r\n\t\tvar format_props:AWDProperties = this.parseProperties(AWDParser.textFormatProperties);\r\n\r\n\t\tnewTextFormat.size = format_props.get(1,12);\r\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\r\n\t\t//newTextFormat.rotated = format_props.get(3,false);\r\n\t\tnewTextFormat.kerning = format_props.get(4,true);\r\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\r\n\t\tvar tf_align_int:number = format_props.get(6,0);\r\n\t\tif(tf_align_int==1){\r\n\t\t\tnewTextFormat.align=\"right\";\r\n\t\t}\r\n\t\telse if(tf_align_int==2){\r\n\t\t\tnewTextFormat.align=\"center\";\r\n\t\t}\r\n\t\tnewTextFormat.indent = format_props.get(7,0);\r\n\t\tnewTextFormat.leftMargin = format_props.get(8,0);\r\n\t\tnewTextFormat.rightMargin = format_props.get(9,0);\r\n\t\t//newTextFormat.linespacing = format_props.get(10,0);\r\n\t\tnewTextFormat.material = mat;\r\n\t\tthis.parseUserAttributes();// textformat has no extra-properties\r\n\t\t//newTextFormat.extra =\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> newTextFormat, name);\r\n\t\tthis._blocks[blockID].data = newTextFormat;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a TextFormat: Name = '\" + name + \" font: \"+font.name);\r\n\t}\r\n\r\n\tprivate static textFieldProperties:Object = {\r\n\t\t1:AWDParser.BOOL,\r\n\t\t3:AWDParser.BOOL,\r\n\t\t4:AWDParser.BOOL,\r\n\t\t5:AWDParser.BOOL,\r\n\t\t7:AWDParser.UINT8,\r\n\t\t8:AWDParser.UINT8,\r\n\t\t9:AWDParser.UINT8};\r\n\r\n\tprivate static textFieldTypes:Array<string> = [\"static\", \"dynamic\", \"input\", \"input\"];\r\n\r\n\r\n\tprivate paresTextField(blockID:number, factory:TimelineSceneGraphFactory)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tthis._blocks[blockID].name = name;\r\n        var newTextField = factory.createTextField();\r\n\t\tvar text_field_type:number=this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\tnewTextField.type = AWDParser.textFieldTypes[text_field_type];\r\n\r\n\t\tif(text_field_type == 3)\r\n\t\t\tnewTextField.displayAsPassword = true;\r\n\r\n\t\t//\r\n\t\tnewTextField.textWidth = Math.abs(this._newBlockBytes.readFloat());\r\n\t\tnewTextField.textHeight = Math.abs(this._newBlockBytes.readFloat());\r\n\t\tvar num_paragraphs:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar complete_text:string = \"\";\r\n\t\t//console.log(\"num_paragraphs  '\" + num_paragraphs);\r\n\t\tfor(var paracnt:number=0; paracnt<num_paragraphs; paracnt++){\r\n\r\n\t\t\tvar num_textruns:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t//console.log(\"num_textruns  '\" + num_textruns);\r\n\t\t\tfor(var textrun_cnt:number=0; textrun_cnt<num_textruns; textrun_cnt++) {\r\n\t\t\t\tvar text_format:TextFormat = <TextFormat> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\t\t\tvar txt_length = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"txt_length  '\" + txt_length);\r\n\t\t\t\tif (txt_length > 0) {\r\n\t\t\t\t\tvar this_txt:string = this._newBlockBytes.readUTFBytes(txt_length);\r\n\t\t\t\t\t//newTextField.appendText(this_txt, text_format);\r\n\t\t\t\t\tcomplete_text += this_txt;\r\n\t\t\t\t\t//console.log(\"this_txt  '\" + this_txt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//newTextField.closeParagraph();\r\n\t\t}\r\n\t\tnewTextField.textFormat=text_format;\r\n\t\tnewTextField.text=complete_text;\r\n\t\t//newTextField.construct_geometry();\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.textFieldProperties);\r\n\t\tnewTextField.selectable = props.get(1, false);\r\n\t\tnewTextField.border =  props.get(3, false);\r\n\t\t//newTextField.renderHTML =  props.get(4, false);\r\n\t\t//newTextField.scrollable =  props.get(5, false);\r\n\t\t//newTextField.text_flow =  props.get(7, 0);\r\n\t\t//newTextField.orientationMode =  props.get(8, 0);\r\n\t\t//newTextField.line_mode =  props.get(9, 0);\r\n\t\tnewTextField.extra = this.parseUserAttributes();\r\n\r\n\t\t//console.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\r\n\t\tthis._pFinalizeAsset(<IAsset> newTextField, name);\r\n\t\tthis._blocks[blockID].data = newTextField;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\r\n\t}\r\n\r\n\t// Block ID = 25\r\n\tprivate parseBillBoardLibraryBlock(blockID:number)\r\n\t{\r\n\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar mat:BasicMaterial = <BasicMaterial> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\tmat.bothSides=true;\r\n\t\tvar billboard:Billboard = new Billboard(mat);\r\n\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\t\tthis.parseProperties(null);\r\n\r\n\t\tbillboard.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> billboard, name);\r\n\r\n\t\tthis._blocks[blockID].data = billboard;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Library-Billboard: Name = '\" + name + \"| Material-Name = \" + mat.name);\r\n\t}\r\n\t// Block ID = 24\r\n\tprivate parseMeshLibraryBlock(blockID:number)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar geom:Geometry = <Geometry> this._blocks[data_id].data;\r\n\t\tthis._blocks[blockID].geoID = data_id;\r\n\r\n\t\tvar num_materials:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar materials:Array<MethodMaterial> = new Array<MethodMaterial>();\r\n\t\tvar materialNames:Array<string> = new Array<string>();\r\n\t\tvar mat:MethodMaterial;\r\n\t\tfor (var materials_parsed:number = 0; materials_parsed < num_materials; materials_parsed++) {\r\n\t\t\tmat = <MethodMaterial> (this._blocks[this._newBlockBytes.readUnsignedInt()].data || DefaultMaterialManager.getDefaultMaterial());\r\n\t\t\t//mat.preserveAlpha = true;\r\n\t\t\tmat.alphaBlending = true;\r\n\t\t\tmat.useColorTransform = true;\r\n\t\t\tmaterials[materials_parsed] = mat;\r\n\t\t\tmaterialNames[materials_parsed] = mat.name;\r\n\t\t}\r\n\r\n\t\tvar mesh:Mesh = new Mesh(geom, null);\r\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\r\n\t\t\tmesh.material = materials[0];\r\n\t\t} else if (materials.length > 1) {\r\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\r\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\r\n\t\t\tfor (var i:number = 0; i < mesh.subMeshes.length; i++)\r\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\r\n\t\t}\r\n\r\n\t\tthis.parseProperties(null);\r\n\t\tmesh.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\r\n\r\n\t\tthis._blocks[blockID].data = mesh;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Library-Mesh: Name = '\" + name + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames);\r\n\t}\r\n\r\n\tprivate parseAudioBlock(blockID:number, factory:TimelineSceneGraphFactory)\r\n\t{\r\n\t\t//var asset:Audio;todo create asset for audio\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\r\n\t\t\t// todo parser needs to be able to handle mp3 and wav files if we trigger the loading of external ressource\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\r\n\t\t} else {\r\n\t\t\t// todo: exporter does not export embed sounds yet\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray = new ByteArray(data_len);\r\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t// todo parse sound from bytes\r\n\t\t\t// this._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.by(data), true);\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t//this._blocks[blockID].data = asset;todo\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Start parsing a \" + [\"external\", \"embed\"][type] + \" Audio file\");\r\n\t}\r\n\r\n\t//Block ID = 4\r\n\tprivate parseTimeLine(blockID:number, factory:TimelineSceneGraphFactory)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar cmd_asset:DisplayObject;\r\n\t\tvar timeLineContainer = factory.createMovieClip();\r\n\t\tvar new_timeline:Timeline = new Timeline();\r\n\t\tvar name = this.parseVarStr();\r\n\t\tvar isScene = !!this._newBlockBytes.readUnsignedByte();\r\n\t\tvar sceneID = this._newBlockBytes.readUnsignedByte();\r\n\t\ttimeLineContainer.fps = this._newBlockBytes.readFloat();\r\n\r\n\t\t// register list of potential childs\r\n\t\t// a potential child can be reused on a timeline (added / removed / added)\r\n\t\t// However, for each potential child, we need to register the max-number of instances that a frame contains\r\n\t\t// we parse 2 lists of potential-childs:\r\n\t\t// -\tthe first list contains potential-childs that are only ever instanced once per frame.\r\n\t\t// -\tthe second list contains potential-childs that are instanced multiple times on some frames.\r\n\r\n\t\t// on registering a child, the child gets a incremental-id assigned. This is the id, that the commands are using to access the childs.\r\n\t\t// hence we need to be careful to register all objects in correct order.\r\n\r\n\t\tvar num_potential_childs:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_childs; i++) {\r\n\t\t\tcmd_asset = <DisplayObject> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\tnew_timeline.registerPotentialChild(cmd_asset);\r\n\t\t\t} else {\r\n\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\r\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar num_all_display_instances:number = num_potential_childs;\r\n\r\n\t\tvar num_potential_childs_multi_instanced = this._newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_childs_multi_instanced; i++) {\r\n\t\t\tcmd_asset = <DisplayObject> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\t\tvar num_instances:number = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tnum_all_display_instances += num_instances;\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\tfor (j = 0; j < num_instances; j++)\r\n\t\t\t\t\tnew_timeline.registerPotentialChild(cmd_asset);\r\n\t\t\t} else {\r\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\r\n\t\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\r\n\t\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed \" + (num_potential_childs + num_potential_childs_multi_instanced) + \" potential childs. They will be used by \" + num_all_display_instances + \" instances.\");\r\n\r\n\t\t// register list of potential sounds - for now we always have 0 sounds\r\n\t\tvar num_potential_sounds = this._newBlockBytes.readUnsignedShort();\r\n\r\n\r\n\t\tvar str_cnt = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar str_len = 0;\r\n\t\tvar str_data_type = 0;\r\n\t\tvar str_type=0;\r\n\t\tvar str_counter=0;\r\n\t\tfor(i=0; i<str_cnt;i++){\r\n\t\t\t// the first 6 lists are not optional and always in same order\r\n\t\t\t// hence we can get type by incremental counter instead of stored uint8\r\n\t\t\tif(str_counter<6)\r\n\t\t\t\tstr_type=str_counter;\r\n\t\t\telse\r\n\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t// get the data type for this stream (1:UINT8 - 2:UINT16 - 3:UINT32)\r\n\t\t\tstr_data_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t// size of this stream in byte\r\n\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tif(str_len>0) {\r\n\t\t\t\tvar keyframes_start_indices_data:ByteArray = new ByteArray(str_len);\r\n\t\t\t\tthis._newBlockBytes.readBytes(keyframes_start_indices_data, 0, str_len);\r\n\t\t\t\tvar new_buffer:ArrayBufferView;\r\n\t\t\t\t//console.log(\"str_data_type = \"+str_type);\r\n\t\t\t\tswitch (str_data_type) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tnew_buffer = new Uint8Array(<ArrayBuffer> keyframes_start_indices_data.arraybytes);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tnew_buffer = new Uint16Array(<ArrayBuffer> keyframes_start_indices_data.arraybytes);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\tnew_buffer = new Uint32Array(<ArrayBuffer> keyframes_start_indices_data.arraybytes);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tswitch (str_type) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tnew_timeline.keyframe_durations = new_buffer;\r\n\t\t\t\t\t\tnew_timeline.numKeyFrames=str_len / str_data_type;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tnew_timeline.frame_command_indices = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tnew_timeline.frame_recipe = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tnew_timeline.command_length_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\tnew_timeline.command_index_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\tnew_timeline.add_child_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\tnew_timeline.remove_child_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\tnew_timeline.update_child_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 8:\r\n\t\t\t\t\t\tnew_timeline.update_child_props_indices_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 9:\r\n\t\t\t\t\t\tnew_timeline.update_child_props_length_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 10:\r\n\t\t\t\t\t\tnew_timeline.property_type_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 11:\r\n\t\t\t\t\t\tnew_timeline.property_index_stream = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 12:\r\n\t\t\t\t\t\tnew_timeline.properties_stream_int = new_buffer;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tstr_counter++;\r\n\t\t}\r\n\t\tvar lc:number=0;\r\n\t\tvar float_array_data:ByteArray;\r\n\t\tstr_cnt = this._newBlockBytes.readUnsignedByte();\r\n\t\tfor(i=0; i<str_cnt;i++){\r\n\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\tswitch(str_type) {\r\n\t\t\t\tcase 0://mtx_scale\r\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\tfloat_array_data = new ByteArray(str_len);\r\n\t\t\t\t\tthis._newBlockBytes.readBytes(float_array_data, 0, str_len);\r\n\t\t\t\t\tnew_timeline.properties_stream_f32_mtx_scale_rot=new Float32Array(<ArrayBuffer> float_array_data.arraybytes);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 1://mtx_pos\r\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\tfloat_array_data = new ByteArray(str_len);\r\n\t\t\t\t\tthis._newBlockBytes.readBytes(float_array_data, 0, str_len);\r\n\t\t\t\t\tnew_timeline.properties_stream_f32_mtx_pos=new Float32Array(<ArrayBuffer> float_array_data.arraybytes);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2://mtx_all\r\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\tfloat_array_data = new ByteArray(str_len);\r\n\t\t\t\t\tthis._newBlockBytes.readBytes(float_array_data, 0, str_len);\r\n\t\t\t\t\tnew_timeline.properties_stream_f32_mtx_all=new Float32Array(<ArrayBuffer> float_array_data.arraybytes);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3://ct\r\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\tfloat_array_data = new ByteArray(str_len);\r\n\t\t\t\t\tthis._newBlockBytes.readBytes(float_array_data, 0, str_len);\r\n\t\t\t\t\tnew_timeline.properties_stream_f32_ct=new Float32Array(<ArrayBuffer> float_array_data.arraybytes);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4://labels\r\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t//console.log(\"start reading labels \"+str_len);\r\n\t\t\t\t\tfor (lc = 0; lc < str_len; lc++) {\r\n\t\t\t\t\t\tnew_timeline._labels[this.parseVarStr()] = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 5://name_stream\r\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\tvar string_props_array:Array<string>=[];\r\n\t\t\t\t\tfor (lc = 0; lc < str_len; lc++) {\r\n\t\t\t\t\t\tstring_props_array.push(this._newBlockBytes.readUTFBytes(this._newBlockBytes.readUnsignedShort()));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnew_timeline.properties_stream_strings = string_props_array;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 6://script_stream\r\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\tfor (lc = 0; lc < str_len; lc++) {\r\n\t\t\t\t\t\tvar frame_index=this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\tvar one_str_len=this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\t//this._newBlockBytes.readUTFBytes(one_str_len);\r\n\t\t\t\t\t\tnew_timeline.add_framescript(this._newBlockBytes.readUTFBytes(one_str_len), frame_index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tnew_timeline.init();\r\n\t\ttimeLineContainer.timeline=new_timeline;\r\n\t\tthis.parseProperties(null);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset>timeLineContainer, name);\r\n\r\n\t\tthis._blocks[blockID].data = timeLineContainer;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| isScene = \" + isScene + \"| sceneID = \" + sceneID + \"| numFrames = \");\r\n\t}\r\n\r\n\tprivate static geometryProperties:Object = {\r\n\t\t1:AWDParser.GEO_NUMBER,\r\n\t\t2:AWDParser.GEO_NUMBER};\r\n\r\n\tprivate static subGeometryProperties:Object = {\r\n\t\t1:AWDParser.GEO_NUMBER,\r\n\t\t2:AWDParser.GEO_NUMBER};\r\n\r\n\t//Block ID = 1\r\n\tprivate parseGeometry(blockID:number)\r\n\t{\r\n\t\tvar geom:Geometry = new Geometry();\r\n\r\n\t\t// Read name and sub count\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_subs:number = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t// Read optional properties\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.geometryProperties);\r\n\t\tvar geoScaleU:number = props.get(1, 1);\r\n\t\tvar geoScaleV:number = props.get(2, 1);\r\n\r\n\t\t// Loop through sub meshes\r\n\t\tfor (var subs_parsed:number = 0;  subs_parsed < num_subs; subs_parsed++) {\r\n\t\t\tvar is_curve_geom:boolean=false;\r\n\t\t\tvar sm_len:number, sm_end:number;\r\n\t\t\tvar w_indices:Array<number>;\r\n\t\t\tvar weights:Array<number>;\r\n\r\n\t\t\tsm_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tsm_end = this._newBlockBytes.position + sm_len;\r\n\r\n\t\t\tvar subProps:AWDProperties = this.parseProperties(AWDParser.subGeometryProperties);\r\n\t\t\t// Loop through data streams\r\n\t\t\twhile (this._newBlockBytes.position < sm_end) {\r\n\t\t\t\tvar idx:number = 0;\r\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n\t\t\t\t// Type, field type, length\r\n\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\r\n\r\n\t\t\t\tvar x:number, y:number, z:number;\r\n\r\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\r\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo);\r\n\r\n\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\r\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\r\n\t\t\t\t\t\tindices[idx++] = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t\t\t} else if (str_type == 3) {\r\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\r\n\t\t\t\t\t\tuvs[idx++] = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t} else if (str_type == 4) {\r\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\r\n\t\t\t\t\t\tnormals[idx++] = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t} else if (str_type == 6) {\r\n\t\t\t\t\tw_indices = Array<number>();\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\r\n\t\t\t\t\t\tw_indices[idx++] = this._newBlockBytes.readUnsignedShort()*3;\r\n\t\t\t\t} else if (str_type == 7) {\r\n\t\t\t\t\tweights = new Array<number>();\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\r\n\t\t\t\t\t\tweights[idx++] = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\r\n\t\t\t\t\tis_curve_geom = true;\r\n\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\r\n\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.parseUserAttributes(); // Ignore sub-mesh attributes for now\r\n\r\n\t\t\tif(is_curve_geom){\r\n\t\t\t\tvar vertexBuffer:AttributesBuffer = new AttributesBuffer(28, str_len/28);\r\n\t\t\t\tvertexBuffer.bufferView = new Uint8Array(<ArrayBuffer> curveData.arraybytes);\r\n\r\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(vertexBuffer);\r\n\t\t\t\tcurve_sub_geom.setUVs(new Float2Attributes(vertexBuffer));\r\n\t\t\t\tgeom.addSubGeometry(curve_sub_geom);\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a CurveSubGeometry\");\r\n\t\t\t} else {\r\n\t\t\t\tvar triangle_sub_geom = new TriangleSubGeometry(new AttributesBuffer());\r\n\r\n\t\t\t\tif (weights)\r\n\t\t\t\t\ttriangle_sub_geom.jointsPerVertex = weights.length / (verts.length / 3);\r\n\r\n\t\t\t\tif (normals)\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveNormals = false;\r\n\r\n\t\t\t\tif (uvs)\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveUVs = false;\r\n\r\n\t\t\t\ttriangle_sub_geom.autoDeriveTangents = true;\r\n\r\n\t\t\t\ttriangle_sub_geom.setIndices(indices);\r\n\t\t\t\ttriangle_sub_geom.setPositions(verts);\r\n\t\t\t\ttriangle_sub_geom.setNormals(normals);\r\n\t\t\t\ttriangle_sub_geom.setUVs(uvs);\r\n\t\t\t\ttriangle_sub_geom.setTangents(null);\r\n\t\t\t\ttriangle_sub_geom.setJointWeights(weights);\r\n\t\t\t\ttriangle_sub_geom.setJointIndices(w_indices);\r\n\r\n\t\t\t\tvar scaleU:number = subProps.get(1, 1);\r\n\t\t\t\tvar scaleV:number = subProps.get(2, 1);\r\n\t\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\r\n\r\n\t\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\r\n\t\t\t\t\tsetSubUVs = true;\r\n\t\t\t\t\tscaleU = geoScaleU / scaleU;\r\n\t\t\t\t\tscaleV = geoScaleV / scaleV;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (setSubUVs)\r\n\t\t\t\t\ttriangle_sub_geom.scaleUV(scaleU, scaleV);\r\n\r\n\t\t\t\tgeom.addSubGeometry(triangle_sub_geom);\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a TriangleSubGeometry\");\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\r\n\t\t\t// when creating meshes (and their material assignments.)\r\n\t\t}\r\n\r\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\r\n\t\t\tgeom.scaleUV(geoScaleU, geoScaleV);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> geom, name);\r\n\t\tthis._blocks[blockID].data = geom;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a TriangleGeometry: Name = \" + name);\r\n\t}\r\n\r\n\tprivate static primitiveProperties:Object = {\r\n\t\t101:AWDParser.GEO_NUMBER,\r\n\t\t102:AWDParser.GEO_NUMBER,\r\n\t\t103:AWDParser.GEO_NUMBER,\r\n\t\t110:AWDParser.GEO_NUMBER,\r\n\t\t111:AWDParser.GEO_NUMBER,\r\n\t\t301:AWDParser.UINT16,\r\n\t\t302:AWDParser.UINT16,\r\n\t\t303:AWDParser.UINT16,\r\n\t\t701:AWDParser.BOOL,\r\n\t\t702:AWDParser.BOOL,\r\n\t\t703:AWDParser.BOOL,\r\n\t\t704:AWDParser.BOOL};\r\n\r\n\tprivate static primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"];\r\n\r\n\t//Block ID = 11\r\n\tprivate parsePrimitves(blockID:number)\r\n\t{\r\n\t\tvar name:string;\r\n\t\tvar prefab:PrefabBase;\r\n\t\tvar primType:number;\r\n\t\tvar subs_parsed:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar bsm:Matrix3D;\r\n\r\n\t\t// Read name and sub count\r\n\t\tname = this.parseVarStr();\r\n\t\tprimType = this._newBlockBytes.readUnsignedByte();\r\n\t\tprops = this.parseProperties(AWDParser.primitiveProperties);\r\n\r\n\t\t// to do, not all properties are set on all primitives\r\n\t\tswitch (primType) {\r\n\t\t\tcase 1:\r\n\t\t\t\tprefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tprefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\tprefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\r\n\t\t\t\tif (!props.get(701, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\r\n\t\t\t\tif (!props.get(702, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\r\n\t\t\t\tif (!props.get(703, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 5:\r\n\t\t\t\tprefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 7:\r\n\t\t\t\tprefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tprefab = new PrefabBase();\r\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\r\n\t\t\t//geom.subGeometries;\r\n\t\t\t//geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\r\n\t\t}\r\n\r\n\t\tthis.parseUserAttributes();\r\n\t\tprefab.name = name;\r\n\t\tthis._pFinalizeAsset(prefab, name);\r\n\t\tthis._blocks[blockID].data = prefab;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tif ((primType < 0) || (primType > 7))\r\n\t\t\t\tprimType = 0;\r\n\r\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + name + \"| type = \" + AWDParser.primitiveTypes[primType]);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static containerProperties:Object = {\r\n\t\t1:AWDParser.MATRIX_NUMBER,\r\n\t\t2:AWDParser.MATRIX_NUMBER,\r\n\t\t3:AWDParser.MATRIX_NUMBER,\r\n\t\t4:AWDParser.UINT8};\r\n\r\n\t// Block ID = 22\r\n\tprivate parseContainer(blockID:number)\r\n\t{\r\n\t\tvar name:string;\r\n\t\tvar mtx:Matrix3D;\r\n\t\tvar ctr:DisplayObjectContainer;\r\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\r\n\t\tmtx = this.parseMatrix3D();\r\n\t\tname = this.parseVarStr();\r\n\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tctr = new DisplayObjectContainer();\r\n\t\tctr.transform.matrix3D = mtx;\r\n\r\n\t\tif (parent) {\r\n\t\t\tparent.addChild(ctr);\r\n\t\t\tparentName = parent.name;\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(ctr);\r\n\t\t}\r\n\r\n\t\t// in AWD version 2.1 we read the Container properties\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tvar props:AWDProperties = this.parseProperties(AWDParser.containerProperties);\r\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t} else {// in other versions we do not read the Container properties\r\n\t\t\tthis.parseProperties(null);\r\n\t\t}\r\n\r\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\r\n\t\tctr.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> ctr, name);\r\n\t\tthis._blocks[blockID].data = ctr;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + name + \"' | Parent-Name = \" + parentName);\r\n\t}\r\n\r\n\tprivate static meshInstanceProperties:Object = {\r\n\t\t1:AWDParser.MATRIX_NUMBER,\r\n\t\t2:AWDParser.MATRIX_NUMBER,\r\n\t\t3:AWDParser.MATRIX_NUMBER,\r\n\t\t4:AWDParser.UINT8,\r\n\t\t5:AWDParser.BOOL};\r\n\r\n\t// Block ID = 23\r\n\tprivate parseMeshInstance(blockID:number)\r\n\t{\r\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\r\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar asset:IAsset = <IAsset> this._blocks[data_id].data;\r\n\t\tvar geom:Geometry;\r\n\t\tvar prefab:PrefabBase;\r\n\t\tvar isPrefab:boolean=false;\r\n\t\tif (asset.isAsset(Geometry)) {\r\n\t\t\tgeom = <Geometry> asset;\r\n\t\t} else {\r\n\t\t\tisPrefab = true;\r\n\t\t\tprefab = <PrefabBase> asset;\r\n\t\t}\r\n\r\n\t\tthis._blocks[blockID].geoID = data_id;\r\n\t\tvar num_materials:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar materials:Array<MethodMaterial> = new Array<MethodMaterial>();\r\n\t\tvar materialNames:Array<string> = new Array<string>();\r\n\t\tvar mat:MethodMaterial;\r\n\t\tfor (var materials_parsed:number = 0; materials_parsed < num_materials; materials_parsed++) {\r\n\t\t\tmat = <MethodMaterial> (this._blocks[this._newBlockBytes.readUnsignedInt()].data || DefaultMaterialManager.getDefaultMaterial());\r\n\t\t\tmaterials[materials_parsed] = mat;\r\n\t\t\tmaterialNames[materials_parsed] = mat.name;\r\n\t\t}\r\n\r\n\t\tvar mesh:Mesh = isPrefab? <Mesh> prefab.getNewObject() : new Mesh(geom, null);\r\n\t\tmesh.transform.matrix3D = mtx;\r\n\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tif (parent) {\r\n\t\t\tparent.addChild(mesh);\r\n\t\t\tparentName = parent.name;\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\r\n\t\t}\r\n\r\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\r\n\t\t\tmesh.material = materials[0];\r\n\t\t} else if (materials.length > 1) {\r\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\r\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\r\n\t\t\tfor (var i:number = 0; i < mesh.subMeshes.length; i++)\r\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\r\n\t\t}\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tvar props:AWDProperties = this.parseProperties(AWDParser.meshInstanceProperties);\r\n\t\t\tmesh.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t\tmesh.castsShadows = props.get(5, true);\r\n\t\t} else {\r\n\t\t\tthis.parseProperties(null);\r\n\t\t}\r\n\r\n\t\tmesh.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\r\n\t\tthis._blocks[blockID].data = mesh;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tif (isPrefab)\r\n\t\t\t\tconsole.log(\"Parsed a Mesh for Prefab: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Prefab-Name = \" + prefab.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames);\r\n\t\t\telse\r\n\t\t\t\tconsole.log(\"Parsed a Mesh for Geometry: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//Block ID 31\r\n\tprivate parseSkyboxInstance(blockID:number)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar asset:Skybox = new Skybox();\r\n\t\tvar tex:SingleCubeTexture = <SingleCubeTexture> (this._blocks[this._newBlockBytes.readUnsignedInt()].data || DefaultMaterialManager.getDefaultTexture(asset));\r\n\t\tasset.cubeMap = tex;\r\n\r\n\t\tthis.parseProperties(null);\r\n\t\tasset.extra = this.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(asset, name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + name + \"' | CubeTexture-Name = \" + tex.name);\r\n\t}\r\n\r\n\tprivate static lightProperties:Object = {\r\n\t\t1:AWDParser.PROPERTY_NUMBER,\r\n\t\t2:AWDParser.PROPERTY_NUMBER,\r\n\t\t3:AWDParser.COLOR,\r\n\t\t4:AWDParser.PROPERTY_NUMBER,\r\n\t\t5:AWDParser.PROPERTY_NUMBER,\r\n\t\t6:AWDParser.BOOL,\r\n\t\t7:AWDParser.COLOR,\r\n\t\t8:AWDParser.PROPERTY_NUMBER,\r\n\t\t9:AWDParser.UINT8,\r\n\t\t10:AWDParser.UINT8,\r\n\t\t11:AWDParser.PROPERTY_NUMBER,\r\n\t\t12:AWDParser.UINT16,\r\n\t\t21:AWDParser.MATRIX_NUMBER,\r\n\t\t22:AWDParser.MATRIX_NUMBER,\r\n\t\t23:AWDParser.MATRIX_NUMBER};\r\n\r\n\t//Block ID = 41\r\n\tprivate parseLight(blockID:number)\r\n\t{\r\n\t\tvar light:LightBase;\r\n\t\tvar newShadowMapper:ShadowMapperBase;\r\n\r\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar lightType:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.lightProperties);\r\n\t\tvar shadowMapperType:number = props.get(9, 0);\r\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\r\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\r\n\r\n\t\tif (lightType == 1) {\r\n\t\t\tlight = new PointLight();\r\n\r\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\r\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 4) {\r\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.transform.matrix3D = mtx;\r\n\t\t}\r\n\r\n\t\tif (lightType == 2) {\r\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 1) {\r\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//if (shadowMapperType == 2)\r\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\r\n\t\t\t\t//if (shadowMapperType == 3)\r\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlight.color = props.get(3, 0xffffff);\r\n\t\tlight.specular = props.get(4, 1.0);\r\n\t\tlight.diffuse = props.get(5, 1.0);\r\n\t\tlight.ambientColor = props.get(7, 0xffffff);\r\n\t\tlight.ambient = props.get(8, 0.0);\r\n\r\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\r\n\t\tif (newShadowMapper) {\r\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\r\n\t\t\t\tif (props.get(10, 1) != 1)\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 1)];\r\n\t\t\t} else {\r\n\t\t\t\tif (props.get(10, 2) != 2)\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 2)];\r\n\t\t\t}\r\n\r\n\t\t\tlight.shadowMapper = newShadowMapper;\r\n\t\t\tlight.castsShadows = true;\r\n\t\t}\r\n\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tif (parent) {\r\n\t\t\tparent.addChild(light);\r\n\t\t\tparentName = parent.name;\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(light);\r\n\t\t}\r\n\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(< IAsset> light, name);\r\n\r\n\t\tthis._blocks[blockID].data = light;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\r\n\t}\r\n\r\n\tprivate static cameraProperties:Object = {\r\n\t\t101:AWDParser.PROPERTY_NUMBER,\r\n\t\t102:AWDParser.PROPERTY_NUMBER,\r\n\t\t103:AWDParser.PROPERTY_NUMBER,\r\n\t\t104:AWDParser.PROPERTY_NUMBER};\r\n\r\n\tprivate static cameraPivotProperties:Object = {\r\n\t\t1:AWDParser.MATRIX_NUMBER,\r\n\t\t2:AWDParser.MATRIX_NUMBER,\r\n\t\t3:AWDParser.MATRIX_NUMBER,\r\n\t\t4:AWDParser.UINT8};\r\n\r\n\t//Block ID = 43\r\n\tprivate parseCamera(blockID:number)\r\n\t{\r\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar projection:ProjectionBase;\r\n\r\n\t\tthis._newBlockBytes.readUnsignedByte(); //set as active camera\r\n\t\tthis._newBlockBytes.readShort(); //lengthof lenses - not used yet\r\n\r\n\t\tvar projectiontype:number = this._newBlockBytes.readShort();\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.cameraProperties);\r\n\r\n\t\tswitch (projectiontype) {\r\n\t\t\tcase 5001:\r\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5002:\r\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5003:\r\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar camera:Camera = new Camera(projection);\r\n\t\tcamera.transform.matrix3D = mtx;\r\n\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tif (parent) {\r\n\t\t\tparent.addChild(camera);\r\n\t\t\tparentName = parent.name;\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(camera);\r\n\t\t}\r\n\r\n\t\tcamera.name = name;\r\n\t\tprops = this.parseProperties(AWDParser.cameraPivotProperties);\r\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\tcamera.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(camera, name);\r\n\r\n\t\tthis._blocks[blockID].data = camera;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\r\n\t}\r\n\r\n\t//Block ID = 51\r\n\tprivate parseLightPicker(blockID:number)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar numLights:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\r\n\r\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\r\n\r\n\t\tfor (var k:number = 0; k < numLights; k++) {\r\n\t\t\tvar light:LightBase = <LightBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\t\tlightsArray.push(light);\r\n\t\t\tlightsArrayNames.push(light.name);\r\n\t\t}\r\n\r\n\t\tif (lightsArray.length == 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not create this LightPicker, cause no Light was found.\");\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\treturn; //return without any more parsing for this block\r\n\t\t}\r\n\r\n\t\tvar lightPick:LightPickerBase = new StaticLightPicker(lightsArray);\r\n\t\tlightPick.name = name;\r\n\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> lightPick, name);\r\n\r\n\t\tthis._blocks[blockID].data = lightPick;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + name + \"' | Texture-Name = \" + lightsArrayNames);\r\n\t}\r\n\r\n\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\r\n\tprivate static materialProperties:Object = {\r\n\t\t1:AWDParser.INT32,\r\n\t\t2:AWDParser.BADDR,\r\n\t\t10:AWDParser.PROPERTY_NUMBER,\r\n\t\t11:AWDParser.BOOL,\r\n\t\t12:AWDParser.PROPERTY_NUMBER,\r\n\t\t13:AWDParser.BOOL};\r\n\r\n\t//Block ID = 81\r\n\tprivate parseMaterial(blockID:number)\r\n\t{\r\n\t\t// TODO: not used\r\n\t\t////blockLength = block.len;\r\n\t\tvar name:string;\r\n\t\tvar type:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar finalize:boolean;\r\n\t\tvar num_methods:number;\r\n\t\tvar methods_parsed:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tname = this.parseVarStr();\r\n\t\ttype = this._newBlockBytes.readUnsignedByte();\r\n\t\tnum_methods = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\t// Read material numerical properties\r\n\t\tprops = this.parseProperties(AWDParser.materialProperties);\r\n\r\n\t\tmethods_parsed = 0;\r\n\t\twhile (methods_parsed < num_methods) {\r\n\t\t\tvar method_type:number;\r\n\r\n\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tthis.parseProperties(null);\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\tmethods_parsed += 1;\r\n\t\t}\r\n\r\n\t\tvar debugString:string = \"\";\r\n\t\tif (type === 1) { // Color material\r\n\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\tvar color:number = props.get(1, 0xffffff);\r\n\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t} else {\r\n\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t}\r\n\t\t} else if (type === 2) {\r\n\t\t\tvar texture:Single2DTexture = <Single2DTexture> this._blocks[props.get(2, 0)].data;\r\n\r\n\t\t\tmat = new MethodMaterial(texture);\r\n\r\n\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\r\n\t\t\t} else {\r\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmat.extra = this.parseUserAttributes();\r\n\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\tmat.repeat = props.get(13, false);\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\r\n\r\n\t\tthis._blocks[blockID].data = mat;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(debugString);\r\n\t}\r\n\t\r\n\tprivate static material_v1Properties:Object = {1:AWDParser.UINT32,\r\n\t\t2:AWDParser.BADDR,\r\n\t\t3:AWDParser.BADDR,\r\n\t\t4:AWDParser.UINT8,\r\n\t\t5:AWDParser.BOOL,\r\n\t\t6:AWDParser.BOOL,\r\n\t\t7:AWDParser.BOOL,\r\n\t\t8:AWDParser.BOOL,\r\n\t\t9:AWDParser.UINT8,\r\n\t\t10:AWDParser.PROPERTY_NUMBER,\r\n\t\t11:AWDParser.BOOL,\r\n\t\t12:AWDParser.PROPERTY_NUMBER,\r\n\t\t13:AWDParser.BOOL,\r\n\t\t15:AWDParser.PROPERTY_NUMBER,\r\n\t\t16:AWDParser.UINT32,\r\n\t\t17:AWDParser.BADDR,\r\n\t\t18:AWDParser.PROPERTY_NUMBER,\r\n\t\t19:AWDParser.PROPERTY_NUMBER,\r\n\t\t20:AWDParser.UINT32,\r\n\t\t21:AWDParser.BADDR,\r\n\t\t22:AWDParser.BADDR};\r\n\r\n\tprivate static method_v1Properties:Object = {\r\n\t\t1:AWDParser.BADDR,\r\n\t\t2:AWDParser.BADDR,\r\n\t\t3:AWDParser.BADDR,\r\n\t\t101:AWDParser.PROPERTY_NUMBER,\r\n\t\t102:AWDParser.PROPERTY_NUMBER,\r\n\t\t103:AWDParser.PROPERTY_NUMBER,\r\n\t\t201:AWDParser.UINT32,\r\n\t\t202:AWDParser.UINT32,\r\n\t\t301:AWDParser.UINT16,\r\n\t\t302:AWDParser.UINT16,\r\n\t\t401:AWDParser.UINT8,\r\n\t\t402:AWDParser.UINT8,\r\n\t\t601:AWDParser.COLOR,\r\n\t\t602:AWDParser.COLOR,\r\n\t\t701:AWDParser.BOOL,\r\n\t\t702:AWDParser.BOOL,\r\n\t\t801:AWDParser.MTX4x4};\r\n\r\n\t// Block ID = 81 AWD2.1\r\n\tprivate parseMaterial_v1(blockID:number)\r\n\t{\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar diffuseTexture:Single2DTexture;\r\n\t\tvar normalTexture:TextureBase;\r\n\t\tvar specTexture:TextureBase;\r\n\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar num_methods:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.material_v1Properties);\r\n\t\tvar spezialType:number = props.get(4, 0);\r\n\t\tvar debugString:string = \"Parsed Material \";\r\n\r\n\t\tif (spezialType >= 2) {//this is no supported material\r\n\t\t\tthis._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (type <= 2) {// Color material\r\n\t\t\tif (this.materialMode == 1)\r\n\t\t\t\tspezialType = 0;\r\n\t\t\telse if (this.materialMode == 2)\r\n\t\t\t\tspezialType = 1;\r\n\r\n\t\t\tif (spezialType < 2) {//this is SinglePass or MultiPass\r\n\r\n\t\t\t\tif (type == 1) {// Color material\r\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\r\n\r\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\r\n\r\n\t\t\t\t\t} else { //\tSinglePassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (type == 2) {// texture material\r\n\t\t\t\t\tvar texture:Single2DTexture = <Single2DTexture> this._blocks[props.get(2, 0)].data;\r\n\r\n\t\t\t\t\tmat = new MethodMaterial(texture);\r\n\r\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\r\n\t\t\t\t\t} else {//\tSinglePassMaterial\r\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiffuseTexture = <Single2DTexture> this._blocks[props.get(17, 0)].data;\r\n\t\t\t\tnormalTexture = <TextureBase> this._blocks[props.get(3, 0)].data;\r\n\t\t\t\tspecTexture = <TextureBase> this._blocks[props.get(21, 0)].data;\r\n\t\t\t\tmat.lightPicker = <LightPickerBase> this._blocks[props.get(22, 0)].data;\r\n\t\t\t\tmat.smooth = props.get(5, true);\r\n\t\t\t\tmat.mipmap = props.get(6, true);\r\n\t\t\t\tmat.bothSides = props.get(7, false);\r\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\r\n\t\t\t\tmat.blendMode = this.blendModeDic[props.get(9, 0)];\r\n\t\t\t\tmat.repeat = props.get(13, false);\r\n\r\n\t\t\t\tif (diffuseTexture) {\r\n\t\t\t\t\tmat.diffuseTexture = diffuseTexture;\r\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (normalTexture) {\r\n\t\t\t\t\tmat.normalMap = normalTexture;\r\n\t\t\t\t\tdebugString += \" | NormalTexture-Name = \" + normalTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (specTexture) {\r\n\t\t\t\t\tmat.specularMap = specTexture;\r\n\t\t\t\t\tdebugString += \" | SpecularTexture-Name = \" + specTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\t\t\tmat.ambient = props.get(15, 1.0);\r\n\t\t\t\tmat.diffuseColor = props.get(16, 0xffffff);\r\n\t\t\t\tmat.specular = props.get(18, 1.0);\r\n\t\t\t\tmat.gloss = props.get(19, 50);\r\n\t\t\t\tmat.specularColor = props.get(20, 0xffffff);\r\n\r\n\t\t\t\tfor (var methods_parsed:number = 0; methods_parsed < num_methods; methods_parsed++) {\r\n\t\t\t\t\tvar method_type:number;\r\n\t\t\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t\t\t\tprops = this.parseProperties(AWDParser.method_v1Properties);\r\n\r\n\t\t\t\t\tswitch (method_type) {\r\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffektMethod returned\r\n\t\t\t\t\t\t\tvar effectMethod:EffectMethodBase = <EffectMethodBase> this._blocks[props.get(1, 0)].data;\r\n\t\t\t\t\t\t\tmat.addEffectMethod(effectMethod);\r\n\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + effectMethod.name;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\r\n\t\t\t\t\t\t\tvar shadowMapMethod:ShadowMapMethodBase = <ShadowMapMethodBase> this._blocks[props.get(1, 0)].data;\r\n\t\t\t\t\t\t\tmat.shadowMethod = shadowMapMethod;\r\n\t\t\t\t\t\t\tdebugString += \" | ShadowMethod-Name = \" + shadowMapMethod.name;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\r\n\t\t\t\t\t\t\tvar cubeTexture:SingleCubeTexture = <SingleCubeTexture> this._blocks[props.get(1, 0)].data;\r\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod();\r\n\t\t\t\t\t\t\tmat.texture = cubeTexture;\r\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + cubeTexture.name;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\r\n\t\t\t\t\t\t\tvar texture:Single2DTexture = <Single2DTexture> this._blocks[props.get(1, 0)].data;\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(texture);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + texture.name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\r\n\t\t\t\t\t\t\tvar texture:Single2DTexture = <Single2DTexture> this._blocks[props.get(1, 0)].data;\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(texture, this.blendModeDic[props.get(401, 10)], false, mat.diffuseMethod);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + texture.name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\r\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\r\n\t\t\t\t\t\t\tvar texture:Single2DTexture = <Single2DTexture> this._blocks[props.get(1, 0)].data;\r\n\t\t\t\t\t\t\tmat.normalMap = texture;\r\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(mat.normalMap, texture);\r\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + texture.name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.parseUserAttributes();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// todo: we should not need this anymore (if using texture-atlas)\r\n\t\telse if ((type>=3)&&(type<=7)){\r\n\t\t\t// if this is a basic material, we create it, finalize it, assign it to block-cache and return and return.\r\n\t\t\tvar color:number = props.get(1, 0xcccccc);\r\n\t\t\tdebugString+=color;\r\n\t\t\r\n\t\t\tvar diffuseTexture:Single2DTexture = <Single2DTexture> this._blocks[props.get(2, 0)].data;\r\n\t\t\tvar basic_mat:BasicMaterial = new BasicMaterial(diffuseTexture);\r\n\t\t\tbasic_mat.bothSides = true;\r\n\t\t\tbasic_mat.preserveAlpha = true;\r\n\t\t\tbasic_mat.alphaBlending = true;\r\n\t\t\tbasic_mat.extra = this.parseUserAttributes();\r\n\t\t\tthis._pFinalizeAsset(<IAsset> basic_mat, name);\r\n\t\t\tthis._blocks[blockID].data = basic_mat;\r\n\t\t\tif (this._debug)\r\n\t\t\t\tconsole.log(debugString);\r\n\t\t\treturn;\r\n\t\t\r\n\t\t}\r\n\t\tmat.extra = this.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\r\n\r\n\t\tthis._blocks[blockID].data = mat;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(debugString);\r\n\t}\r\n\r\n\t//Block ID = 82\r\n\tprivate parseTexture(blockID:number)\r\n\t{\r\n\r\n\t\tvar asset:TextureBase;\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\tthis._texture_users[this._cur_block_id] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tvar url:string = this._newBlockBytes.readUTFBytes(this._newBlockBytes.readUnsignedInt());\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\r\n\r\n\t\t} else {\r\n\t\t\tvar data_len:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar data:ByteArray = new ByteArray(data_len);\r\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t//\r\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\r\n\t\t\t//\r\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\r\n\t\t\t// This gives the browser time to initialise image width / height.\r\n\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\r\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Start parsing a \" + [\"external\", \"embed\"][type] + \" Bitmap for Texture\");\r\n\t}\r\n\r\n\t//Block ID = 83\r\n\tprivate parseCubeTexture(blockID:number)\r\n\t{\r\n\t\t//blockLength = block.len;\r\n\t\tvar data_len:number;\r\n\t\tvar asset:SingleCubeTexture;\r\n\t\tvar i:number;\r\n\r\n\t\tthis._texture_users[ this._cur_block_id ] = [];\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\tthis._texture_users[this._cur_block_id] = [];\r\n\r\n\t\t\t// External\r\n\t\t\tif (type == 0) {\r\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar url:string;\r\n\t\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\r\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true, i);\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar data:ByteArray = new ByteArray(data_len);\r\n\t\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true, i);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Start parsing 6 \" + [\"external\", \"embed\"][type] + \" Bitmaps for CubeTexture\");\r\n\t}\r\n\r\n\t//Block ID = 91\r\n\tprivate parseSharedMethodBlock(blockID:number)\r\n\t{\r\n\t\tvar asset:EffectMethodBase;\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\t\tasset = this.parseSharedMethodList(blockID);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._blocks[blockID].data = asset;\r\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\r\n\t}\r\n\r\n\t//Block ID = 92\r\n\tprivate parseShadowMethodBlock(blockID:number)\r\n\t{\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\t\tvar light:LightBase = <LightBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\tvar asset:ShadowMethodBase = this.parseShadowMethodList(light, blockID);\r\n\r\n\t\tif (!asset)\r\n\t\t\treturn;\r\n\r\n\t\tthis.parseUserAttributes(); // Ignore for now\r\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", light.name);\r\n\t}\r\n\r\n\tprivate static commandProperties:Object = {\r\n\t\t1:AWDParser.BADDR};\r\n\r\n\tprivate static targetProperties:Object = {\r\n\t\t1:AWDParser.MATRIX_NUMBER,\r\n\t\t2:AWDParser.MATRIX_NUMBER,\r\n\t\t3:AWDParser.MATRIX_NUMBER,\r\n\t\t4:AWDParser.UINT8};\r\n\t\r\n\t//Block ID = 253\r\n\tprivate parseCommand(blockID:number)\r\n\t{\r\n\t\tvar hasBlocks:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tvar parentObject:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\tvar targetObject:DisplayObjectContainer;\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\r\n\t\tvar numCommands:number = this._newBlockBytes.readShort();\r\n\t\tvar typeCommand:number = this._newBlockBytes.readShort();\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.commandProperties);\r\n\r\n\t\tswitch (typeCommand) {\r\n\t\t\tcase 1:\r\n\t\t\t\ttargetObject = this._blocks[props.get(1, 0)].data;\r\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\r\n\r\n\t\t\t\tif (parentObject)\r\n\t\t\t\t\tparentObject.addChild(targetObject);\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (targetObject) {\r\n\t\t\tprops = this.parseProperties(AWDParser.targetProperties);\r\n\r\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t\ttargetObject.extra = this.parseUserAttributes();\r\n\t\t}\r\n\r\n\t\tthis._blocks[blockID].data = targetObject;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\r\n\t}\r\n\t\r\n\tprivate static metaDataProperties:Object = {\r\n\t\t1:AWDParser.UINT32,\r\n\t\t2:AWDParser.AWDSTRING,\r\n\t\t3:AWDParser.AWDSTRING,\r\n\t\t4:AWDParser.AWDSTRING,\r\n\t\t5:AWDParser.AWDSTRING};\r\n\r\n\t//blockID 255\r\n\tprivate parseMetaData(blockID:number)\r\n\t{\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.metaDataProperties);\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\r\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\r\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\r\n\t\t}\r\n\t}\r\n\r\n\t//blockID 254\r\n\tprivate parseNameSpace(blockID:number)\r\n\t{\r\n\t\tvar id:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar nameSpaceString:string = this.parseVarStr();\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\r\n\t}\r\n\r\n\t//--Parser UTILS---------------------------------------------------------------------------\r\n\r\n\tprivate shadowMethodListProperties:Object = {\r\n\t\t1:AWDParser.BADDR,\r\n\t\t2:AWDParser.BADDR,\r\n\t\t3:AWDParser.BADDR,\r\n\t\t101:AWDParser.PROPERTY_NUMBER,\r\n\t\t102:AWDParser.PROPERTY_NUMBER,\r\n\t\t103:AWDParser.PROPERTY_NUMBER,\r\n\t\t201:AWDParser.UINT32,\r\n\t\t202:AWDParser.UINT32,\r\n\t\t301:AWDParser.UINT16,\r\n\t\t302:AWDParser.UINT16,\r\n\t\t401:AWDParser.UINT8,\r\n\t\t402:AWDParser.UINT8,\r\n\t\t601:AWDParser.COLOR,\r\n\t\t602:AWDParser.COLOR,\r\n\t\t701:AWDParser.BOOL,\r\n\t\t702:AWDParser.BOOL,\r\n\t\t801:AWDParser.MTX4x4}\r\n\t\r\n\t// this functions reads and creates a ShadowMethodMethod\r\n\tprivate parseShadowMethodList(light:LightBase, blockID:number):ShadowMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar shadowMethod:ShadowMethodBase;\r\n\t\tvar props:AWDProperties = this.parseProperties(this.shadowMethodListProperties);\r\n\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>\r\n\t\tswitch (methodType) {\r\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this CascadeShadowMapMethod - ShadowMethod not created\");\r\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\r\n\t\t\t//\t\t\t\t\t}\r\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 1002: //ShadowNearMethod\r\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> this._blocks[props.get(1, 0)].data);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1101: //ShadowFilteredMethod\r\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 1102: //ShadowDitheredMethod\r\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1103: //ShadowSoftMethod\r\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1104: //ShadowHardMethod\r\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\treturn shadowMethod;\r\n\t}\r\n\r\n\t//Block ID 101\r\n\tprivate parseSkeleton(blockID:number /*uint*/)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar skeleton:Skeleton = new Skeleton();\r\n\t\tthis.parseProperties(null); // Discard properties for now\r\n\r\n\t\tfor (var joints_parsed:number = 0; joints_parsed < num_joints; joints_parsed++) {\r\n\t\t\tvar joint:SkeletonJoint;\r\n\t\t\tvar ibp:Matrix3D;\r\n\t\t\t// Ignore joint id\r\n\t\t\tthis._newBlockBytes.readUnsignedShort();\r\n\t\t\tjoint = new SkeletonJoint();\r\n\t\t\tjoint.parentIndex = this._newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\r\n\t\t\tjoint.name = this.parseVarStr();\r\n\r\n\t\t\tibp = this.parseMatrix3D();\r\n\t\t\tjoint.inverseBindPose = ibp.rawData;\r\n\t\t\t// Ignore joint props/attributes for now\r\n\t\t\tthis.parseProperties(null);\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\tskeleton.joints.push(joint);\r\n\t\t}\r\n\r\n\t\t// Discard attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(skeleton, name);\r\n\r\n\t\tthis._blocks[blockID].data = skeleton;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + skeleton.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\t//Block ID = 102\r\n\tprivate parseSkeletonPose(blockID:number /*uint*/)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tthis.parseProperties(null); // Ignore properties for now\r\n\r\n\t\tvar pose:SkeletonPose = new SkeletonPose();\r\n\r\n\t\tfor (var joints_parsed:number = 0; joints_parsed < num_joints; joints_parsed++) {\r\n\t\t\tvar joint_pose:JointPose;\r\n\t\t\tvar has_transform:number /*uint*/;\r\n\t\t\tjoint_pose = new JointPose();\r\n\t\t\thas_transform = this._newBlockBytes.readUnsignedByte();\r\n\t\t\tif (has_transform == 1) {\r\n\t\t\t\tvar mtx_data:Array<number> = this.parseMatrix43RawData();\r\n\r\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\r\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\r\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\r\n\r\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Skip attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(pose, name);\r\n\r\n\t\tthis._blocks[blockID].data = pose;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + pose.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\t//blockID 103\r\n\tprivate parseSkeletonAnimation(blockID:number /*uint*/)\r\n\t{\r\n\t\tvar frame_dur:number;\r\n\t\tvar pose_id:number;\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\r\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tthis.parseProperties(null); // Ignore properties for now\r\n\r\n\t\tfor (var frames_parsed:number = 0; frames_parsed < num_frames; frames_parsed++) {\r\n\t\t\tpose_id = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tclip.addFrame(<SkeletonPose> this._blocks[pose_id].data, frame_dur);\r\n\t\t}\r\n\t\tif (clip.frames.length == 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not this SkeletonClipNode, because no Frames where set.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Ignore attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(clip, name);\r\n\t\tthis._blocks[blockID].data = clip;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + clip.name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\t\r\n\tprivate meshPoseAnimationProperties:Object = {\r\n\t\t1:AWDParser.BOOL,\r\n\t\t2:AWDParser.BOOL};\r\n\r\n\t//Block ID = 111 /  Block ID = 112\r\n\tprivate parseMeshPoseAnimation(blockID:number /*uint*/, poseOnly:boolean = false)\r\n\t{\r\n\t\tvar subMeshParsed:number /*uint*/;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar str_len:number;\r\n\t\tvar str_end:number;\r\n\t\tvar subGeom:TriangleSubGeometry;\r\n\t\tvar idx:number /*int*/ = 0;\r\n\t\tvar clip:VertexClipNode = new VertexClipNode();\r\n\t\tvar indices:Short3Attributes;\r\n\t\tvar verts:Array<number>;\r\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar geo_id:number /*int*/ = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar geometry:Geometry = <Geometry> this._blocks[geo_id].data;\r\n\r\n\t\tvar uvs:Array<Float32Array> = this.getUVForVertexAnimation(geo_id);\r\n\r\n\t\tvar num_frames:number = (!poseOnly)? this._newBlockBytes.readUnsignedShort() : 1;\r\n\r\n\t\tvar num_submeshes:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar num_Streams:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tfor (var streamsParsed:number = 0; streamsParsed < num_Streams; streamsParsed++)\r\n\t\t\tstreamtypes.push(this._newBlockBytes.readUnsignedShort());\r\n\r\n\t\tprops = this.parseProperties(this.meshPoseAnimationProperties);\r\n\r\n\t\tclip.looping = props.get(1, true);\r\n\t\tclip.stitchFinalFrame = props.get(2, false);\r\n\r\n\t\tvar frame_dur:number;\r\n\t\tfor (var frames_parsed:number = 0; frames_parsed < num_frames; frames_parsed++) {\r\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tgeometry = new Geometry();\r\n\t\t\tsubMeshParsed = 0;\r\n\t\t\twhile (subMeshParsed < num_submeshes) {\r\n\t\t\t\tstreamsParsed = 0;\r\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\r\n\t\t\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\r\n\t\t\t\t\t\tindices = geometry.subGeometries[subMeshParsed].indices;\r\n\t\t\t\t\t\tverts = new Array<number>();\r\n\t\t\t\t\t\tidx = 0;\r\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsubGeom = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\t\t\t\tsubGeom.setIndices(indices);\r\n\t\t\t\t\t\tsubGeom.setPositions(verts);\r\n\t\t\t\t\t\tsubGeom.setUVs(uvs[subMeshParsed]);\r\n\t\t\t\t\t\tsubGeom.setNormals(null);\r\n\t\t\t\t\t\tsubGeom.setTangents(null);\r\n\t\t\t\t\t\tsubGeom.autoDeriveNormals = false;\r\n\t\t\t\t\t\tsubGeom.autoDeriveTangents = false;\r\n\t\t\t\t\t\tsubMeshParsed++;\r\n\t\t\t\t\t\tgeometry.addSubGeometry(subGeom)\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t\tstreamsParsed++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tclip.addFrame(geometry, frame_dur);\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(clip, name);\r\n\r\n\t\tthis._blocks[blockID].data = clip;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + geometry.name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\tprivate static vertexAnimationSetProperties:Object = {\r\n\t\t1:AWDParser.UINT16};\r\n\t\r\n\t//BlockID 113\r\n\tprivate parseVertexAnimationSet(blockID:number /*uint*/)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.vertexAnimationSetProperties);\r\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\r\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\r\n\t\tvar clipNode:AnimationClipNodeBase;\r\n\t\tfor (var frames_parsed:number = 0; frames_parsed < num_frames; frames_parsed++) {\r\n\t\t\tclipNode = <AnimationClipNodeBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\t\t\tif (clipNode instanceof VertexClipNode)\r\n\t\t\t\tvertexFrames.push(<VertexClipNode> clipNode);\r\n\t\t\telse if (clipNode instanceof SkeletonClipNode)\r\n\t\t\t\tskeletonFrames.push(<SkeletonClipNode> clipNode);\r\n\t\t}\r\n\r\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not create this AnimationSet, because it contains no animations\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.parseUserAttributes();\r\n\r\n\t\tif (vertexFrames.length > 0) {\r\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\r\n\r\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\r\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\r\n\r\n\t\t\tthis._pFinalizeAsset(newVertexAnimationSet, name);\r\n\r\n\t\t\tthis._blocks[blockID].data = newVertexAnimationSet;\r\n\r\n\t\t\tif (this._debug)\r\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames);\r\n\r\n\t\t} else if (skeletonFrames.length > 0) {\r\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\r\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\r\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\r\n\t\t\tthis._pFinalizeAsset(newSkeletonAnimationSet, name);\r\n\r\n\t\t\tthis._blocks[blockID].data = newSkeletonAnimationSet;\r\n\r\n\t\t\tif (this._debug)\r\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static animatorSetProperties:Object = {1:AWDParser.BADDR};\r\n\t\r\n\t//BlockID 122\r\n\tprivate parseAnimatorSet(blockID:number /*uint*/)\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.animatorSetProperties);\r\n\t\tvar targetAnimationSet:AnimationSetBase = <AnimationSetBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\r\n\r\n\t\tvar targetMeshes:Array<Mesh> = new Array<Mesh>();\r\n\t\tvar targetMeshLength:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tfor (var i:number /*int*/ = 0; i < targetMeshLength; i++)\r\n\t\t\ttargetMeshes.push(<Mesh> this._blocks[this._newBlockBytes.readUnsignedInt()].data);\r\n\r\n\t\tvar activeState:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar autoplay:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis.parseUserAttributes();\r\n\r\n\t\tvar thisAnimator:AnimatorBase;\r\n\t\tif (type == 1)\r\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, <Skeleton> this._blocks[props.get(1, 0)].data);\r\n\t\telse if (type == 2)\r\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\r\n\r\n\t\tthis._pFinalizeAsset(thisAnimator, name);\r\n\t\tthis._blocks[blockID].data = thisAnimator;\r\n\r\n\t\tfor (i = 0; i < targetMeshes.length; i++) {\r\n\t\t\tif (type == 1)\r\n\t\t\t\ttargetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\r\n\t\t\telse if (type == 2)\r\n\t\t\t\ttargetMeshes[i].animator = (<VertexAnimator> thisAnimator);\r\n\t\t}\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + name);\r\n\t}\r\n\r\n\tprivate sharedMethodListProperties:Object = {\r\n\t\t1:AWDParser.BADDR,\r\n\t\t2:AWDParser.BADDR,\r\n\t\t3:AWDParser.BADDR,\r\n\t\t101:AWDParser.PROPERTY_NUMBER,\r\n\t\t102:AWDParser.PROPERTY_NUMBER,\r\n\t\t103:AWDParser.PROPERTY_NUMBER,\r\n\t\t104:AWDParser.PROPERTY_NUMBER,\r\n\t\t105:AWDParser.PROPERTY_NUMBER,\r\n\t\t106:AWDParser.PROPERTY_NUMBER,\r\n\t\t107:AWDParser.PROPERTY_NUMBER,\r\n\t\t201:AWDParser.UINT32,\r\n\t\t202:AWDParser.UINT32,\r\n\t\t301:AWDParser.UINT16,\r\n\t\t302:AWDParser.UINT16,\r\n\t\t401:AWDParser.UINT8,\r\n\t\t402:AWDParser.UINT8,\r\n\t\t601:AWDParser.COLOR,\r\n\t\t602:AWDParser.COLOR,\r\n\t\t701:AWDParser.BOOL,\r\n\t\t702:AWDParser.BOOL};\r\n\r\n\t// this functions reads and creates a EffectMethod\r\n\tprivate parseSharedMethodList(blockID:number):EffectMethodBase\r\n\t{\r\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar effectMethodReturn:EffectMethodBase;\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties(this.sharedMethodListProperties);\r\n\r\n\t\tswitch (methodType) {\r\n\t\t\t// Effect Methods\r\n\t\t\tcase 401: //ColorMatrix\r\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 402: //ColorTransform\r\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\r\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\r\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 403: //EnvMap\r\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(<SingleCubeTexture> this._blocks[props.get(1, 0)].data, <number> props.get(101, 1));\r\n\t\t\t\tvar targetID:number = props.get(2, 0);\r\n\t\t\t\tif (targetID > 0) {\r\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\r\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <TextureBase> this._blocks[targetID].data;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 404: //LightMapMethod\r\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(this._blocks[props.get(1, 0)].data, this.blendModeDic[props.get(401, 10)]); //usesecondaryUV not set\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureProjector.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this ProjectiveTextureMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 406: //RimLightMethod\r\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\r\n\t\t\t\tbreak;\r\n\t\t\tcase 407: //AlphaMaskMethod\r\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(this._blocks[props.get(1, 0)].data, props.get(701, false));\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this RefractionEnvMapMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\r\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 410: //FresnelEnvMapMethod\r\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(this._blocks[props.get(1, 0)].data, props.get(101, 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 411: //FogMethod\r\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\treturn effectMethodReturn;\r\n\r\n\t}\r\n\r\n\tprivate parseUserAttributes():Object\r\n\t{\r\n\t\tvar list_len:number = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\tif (list_len > 0) {\r\n\t\t\tvar list_end:number = this._newBlockBytes.position + list_len;\r\n\t\t\tvar attributes:Object = {};\r\n\r\n\t\t\tfor (var attibuteCnt:number = 0; this._newBlockBytes.position < list_end; attibuteCnt++) {\r\n\t\t\t\tvar ns_id:number;\r\n\t\t\t\tvar attr_key:string;\r\n\t\t\t\tvar attr_type:number;\r\n\t\t\t\tvar attr_len:number;\r\n\t\t\t\tvar attr_val:any;\r\n\r\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\r\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_key = this.parseVarStr();\r\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn attributes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (attr_type) {\r\n\t\t\t\t\tcase AWDParser.AWDSTRING:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.BOOL:\r\n\t\t\t\t\tcase AWDParser.UINT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.UINT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.UINT32:\r\n\t\t\t\t\tcase AWDParser.BADDR:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.FLOAT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.FLOAT64:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\r\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattributes[attr_key] = attr_val;\r\n\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\t}\r\n\r\n\tprivate parseProperties(expected:Object):AWDProperties\r\n\t{\r\n\t\tvar list_len:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar props:AWDProperties = new AWDProperties();\r\n\t\tvar list_end:number = this._newBlockBytes.position + list_len;\r\n\r\n\t\tif (expected) {\r\n\t\t\tvar len:number;\r\n\t\t\tvar key:number;\r\n\t\t\tvar type:number;\r\n\r\n\t\t\tfor (var propertyCnt:number = 0; this._newBlockBytes.position < list_end; propertyCnt++) {\r\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn props;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (expected[key]) {\r\n\t\t\t\t\ttype = expected[key];\r\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newBlockBytes.position += len;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t}\r\n\r\n\t\treturn props;\r\n\t}\r\n\r\n\tprivate parseAttrValue(type:number, len:number):any\r\n\t{\r\n\t\tvar elem_len:number;\r\n\t\tvar read_func:Function;\r\n\t\tvar accuracy:boolean;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase AWDParser.BOOL:\r\n\t\t\tcase AWDParser.INT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.INT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.INT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT32:\r\n\t\t\tcase AWDParser.COLOR:\r\n\t\t\tcase AWDParser.BADDR:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.FLOAT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.FLOAT64:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.AWDSTRING:\r\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\r\n\t\t\tcase AWDParser.VECTOR2x1:\r\n\t\t\tcase AWDParser.VECTOR3x1:\r\n\t\t\tcase AWDParser.VECTOR4x1:\r\n\t\t\tcase AWDParser.MTX3x2:\r\n\t\t\tcase AWDParser.MTX3x3:\r\n\t\t\tcase AWDParser.MTX4x3:\r\n\t\t\tcase AWDParser.MTX4x4:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\t\t\tcase AWDParser.GEO_NUMBER:\r\n\t\t\t\taccuracy = this._accuracyGeo;\r\n\t\t\tcase AWDParser.MATRIX_NUMBER:\r\n\t\t\t\taccuracy = this._accuracyMatrix;\r\n\t\t\tcase AWDParser.PROPERTY_NUMBER:\r\n\t\t\t\taccuracy = this._accuracyProps;\r\n\t\t\tdefault:\r\n\t\t\t\tif (accuracy) {\r\n\t\t\t\t\telem_len = 8;\r\n\t\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\t} else {\r\n\t\t\t\t\telem_len = 4;\r\n\t\t\t\t\tread_func = this._newBlockBytes.readFloat;\r\n\t\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (elem_len < len) {\r\n\t\t\tvar list:Array<any> = [];\r\n\t\t\tvar num_elems:number = len/elem_len;\r\n\r\n\t\t\tfor (var num_read:number = 0; num_read < num_elems; num_read++)\r\n\t\t\t\tlist[num_read] = read_func.call(this._newBlockBytes);\r\n\r\n\t\t\treturn list;\r\n\t\t} else {\r\n\t\t\treturn read_func.call(this._newBlockBytes);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseHeader()\r\n\t{\r\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\r\n\r\n\t\tthis._version[0] = this._byteData.readUnsignedByte();\r\n\t\tthis._version[1] = this._byteData.readUnsignedByte();\r\n\r\n\t\tvar flags:number = this._byteData.readUnsignedShort(); // Parse bit flags\r\n\r\n\t\tthis._streaming = BitFlags.test(flags, BitFlags.FLAG1);\r\n\r\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG2);\r\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG3);\r\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG4);\r\n\t\t}\r\n\r\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._version[0] + \" - \" + this._version[1]);\r\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\r\n\t\t}\r\n\r\n\t\t// Check file integrity\r\n\t\tvar body_len:number = this._byteData.readUnsignedInt();\r\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable())\r\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\r\n\r\n\t}\r\n\t// Helper - functions\r\n\tprivate getUVForVertexAnimation(meshID:number /*uint*/):Array<Float32Array>\r\n\t{\r\n\t\tif (this._blocks[meshID].data instanceof Mesh)\r\n\t\t\tmeshID = this._blocks[meshID].geoID;\r\n\r\n\t\tif (this._blocks[meshID].uvsForVertexAnimation)\r\n\t\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\r\n\t\tvar geometry:Geometry = (<Geometry> this._blocks[meshID].data);\r\n\t\tvar sub_geom:TriangleSubGeometry;\r\n\t\tvar uvsForVertexAnimation:Array<Float32Array> = this._blocks[meshID].uvsForVertexAnimation = new Array<Float32Array>();\r\n\r\n\t\tvar len:number = geometry.subGeometries.length;\r\n\t\tfor (var geoCnt:number= 0; geoCnt < len; geoCnt++) {\r\n\t\t\tsub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\r\n\t\t\tuvsForVertexAnimation[geoCnt] = sub_geom.uvs.get(sub_geom.numVertices);\r\n\t\t}\r\n\r\n\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\t}\r\n\r\n\tprivate parseVarStr():string\r\n\t{\r\n\t\treturn this._newBlockBytes.readUTFBytes(this._newBlockBytes.readUnsignedShort());\r\n\t}\r\n\r\n\tprivate readNumber(precision:boolean = false):number\r\n\t{\r\n\t\tif (precision)\r\n\t\t\treturn this._newBlockBytes.readDouble();\r\n\r\n\t\treturn this._newBlockBytes.readFloat();\r\n\t}\r\n\r\n\tprivate parseMatrix3D():Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\r\n\t}\r\n\r\n\tprivate parseMatrix32RawData():Array<number>\r\n\t{\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n\tprivate parseMatrix43RawData():Array<number>\r\n\t{\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(16);\r\n\r\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[3] = 0.0;\r\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[7] = 0.0;\r\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[11] = 0.0;\r\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[15] = 1.0;\r\n\r\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\r\n\r\n\t\tif (isNaN(mtx_raw[0])) {\r\n\t\t\tmtx_raw[0] = 1;\r\n\t\t\tmtx_raw[1] = 0;\r\n\t\t\tmtx_raw[2] = 0;\r\n\t\t\tmtx_raw[4] = 0;\r\n\t\t\tmtx_raw[5] = 1;\r\n\t\t\tmtx_raw[6] = 0;\r\n\t\t\tmtx_raw[8] = 0;\r\n\t\t\tmtx_raw[9] = 0;\r\n\t\t\tmtx_raw[10] = 1;\r\n\t\t\tmtx_raw[12] = 0;\r\n\t\t\tmtx_raw[13] = 0;\r\n\t\t\tmtx_raw[14] = 0;\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n}\r\n\r\nexport = AWDParser;\r\n\r\n\r\nclass AWDProperties\r\n{\r\n\tpublic set(key:number, value:any)\r\n\t{\r\n\t\tthis[key] = value;\r\n\t}\r\n\r\n\tpublic get(key:number, fallback:any):any\r\n\t{\r\n\t\treturn (this[key] || fallback);\r\n\t}\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass BitFlags\r\n{\r\n\tpublic static FLAG1:number = 1;\r\n\tpublic static FLAG2:number = 2;\r\n\tpublic static FLAG3:number = 4;\r\n\tpublic static FLAG4:number = 8;\r\n\tpublic static FLAG5:number = 16;\r\n\tpublic static FLAG6:number = 32;\r\n\tpublic static FLAG7:number = 64;\r\n\tpublic static FLAG8:number = 128;\r\n\tpublic static FLAG9:number = 256;\r\n\tpublic static FLAG10:number = 512;\r\n\tpublic static FLAG11:number = 1024;\r\n\tpublic static FLAG12:number = 2048;\r\n\tpublic static FLAG13:number = 4096;\r\n\tpublic static FLAG14:number = 8192;\r\n\tpublic static FLAG15:number = 16384;\r\n\tpublic static FLAG16:number = 32768;\r\n\r\n\tpublic static test(flags:number, testFlag:number):boolean\r\n\t{\r\n\t\treturn (flags & testFlag) == testFlag;\r\n\t}\r\n}\r\n",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\n\r\n/**\r\n * MD2Parser provides a parser for the MD2 data type.\r\n */\r\nclass MD2Parser extends ParserBase\r\n{\r\n\tpublic static FPS:number /*int*/ = 6;\r\n\r\n\tprivate _clipNodes:Object = new Object();\r\n\tprivate _byteData:ByteArray;\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _parsedHeader:boolean;\r\n\tprivate _parsedUV:boolean;\r\n\tprivate _parsedFaces:boolean;\r\n\tprivate _parsedFrames:boolean;\r\n\r\n\tprivate _ident:number /*uint*/;\r\n\tprivate _version:number /*uint*/;\r\n\tprivate _skinWidth:number /*uint*/;\r\n\tprivate _skinHeight:number /*uint*/;\r\n\t//private _frameSize : number /*uint*/;\r\n\tprivate _numSkins:number /*uint*/;\r\n\tprivate _numVertices:number /*uint*/;\r\n\tprivate _numST:number /*uint*/;\r\n\tprivate _numTris:number /*uint*/;\r\n\t//private _numGlCmds : number /*uint*/;\r\n\tprivate _numFrames:number /*uint*/;\r\n\tprivate _offsetSkins:number /*uint*/;\r\n\tprivate _offsetST:number /*uint*/;\r\n\tprivate _offsetTris:number /*uint*/;\r\n\tprivate _offsetFrames:number /*uint*/;\r\n\t//private _offsetGlCmds : number /*uint*/;\r\n\tprivate _offsetEnd:number /*uint*/;\r\n\r\n\tprivate _uvIndices:Array<number>;\r\n\tprivate _indices:Array<number> /*uint*/;\r\n\tprivate _vertIndices:Array<number>;\r\n\r\n\t// the current subgeom being built\r\n\tprivate _animationSet:VertexAnimationSet = new VertexAnimationSet();\r\n\tprivate _firstSubGeom:TriangleSubGeometry;\r\n\tprivate _uvs:Array<number>;\r\n\tprivate _finalUV:Array<number>;\r\n\r\n\tprivate _materialNames:Array<string>;\r\n\tprivate _textureType:string;\r\n\tprivate _ignoreTexturePath:boolean;\r\n\tprivate _mesh:Mesh;\r\n\tprivate _geometry:Geometry;\r\n\r\n\tprivate materialFinal:boolean = false;\r\n\tprivate geoCreated:boolean = false;\r\n\r\n\t/**\r\n\t * Creates a new MD2Parser object.\r\n\t * @param textureType The extension of the texture (e.g. jpg/png/...)\r\n\t * @param ignoreTexturePath If true, the path of the texture is ignored\r\n\t */\r\n\tconstructor(textureType:string = \"jpg\", ignoreTexturePath:boolean = true)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\t\tthis._textureType = textureType;\r\n\t\tthis._ignoreTexturePath = ignoreTexturePath;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md2\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn (ParserUtils.toString(data, 4) == 'IDP2');\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.assets.length != 1)\r\n\t\t\treturn;\r\n\r\n\t\tvar asset:Single2DTexture = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\r\n\r\n\t\tif (asset) {\r\n\t\t\tvar material:MethodMaterial = new MethodMaterial(asset);\r\n\r\n\t\t\tif (this.materialMode >= 2)\r\n\t\t\t\tmaterial.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\tmaterial.name = this._mesh.material.name;\r\n\t\t\tthis._mesh.material = material;\r\n\t\t\tthis._pFinalizeAsset(material);\r\n\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t}\r\n\t\tthis.materialFinal = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t// apply system default\r\n\t\tif (this.materialMode < 2) {\r\n\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\r\n\t\t} else {\r\n\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t}\r\n\r\n\t\t//add to the content property\r\n\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\tthis.materialFinal = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._byteData = this._pGetByteData();\r\n\t\t\tthis._startedParsing = true;\r\n\r\n\t\t\t// Reset bytearray read position (which may have been\r\n\t\t\t// moved forward by the supportsData() function.)\r\n\t\t\tthis._byteData.position = 0;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\tif (!this._parsedHeader) {\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n\r\n\t\t\t\t// TODO: Create a mesh only when encountered (if it makes sense\r\n\t\t\t\t// for this file format) and return it using this._pFinalizeAsset()\r\n\t\t\t\tthis._geometry = new Geometry();\r\n\t\t\t\tthis._mesh = new Mesh(this._geometry, null);\r\n\t\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\t\t\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//_geometry.animation = new VertexAnimation(2, VertexAnimationMode.ABSOLUTE);\r\n\t\t\t\t//_animator = new VertexAnimator(VertexAnimationState(_mesh.animationState));\r\n\r\n\t\t\t\t// Parse header and decompress body\r\n\t\t\t\tthis.parseHeader();\r\n\t\t\t\tthis.parseMaterialNames();\r\n\t\t\t} else if (!this._parsedUV) {\r\n\t\t\t\tthis.parseUV();\r\n\t\t\t} else if (!this._parsedFaces) {\r\n\t\t\t\tthis.parseFaces();\r\n\t\t\t} else if (!this._parsedFrames) {\r\n\t\t\t\tthis.parseFrames();\r\n\t\t\t} else if ((this.geoCreated) && (this.materialFinal)) {\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t} else if (!this.geoCreated) {\r\n\t\t\t\tthis.geoCreated = true;\r\n\t\t\t\t//create default subgeometry\r\n\t\t\t\tthis._geometry.addSubGeometry(this._firstSubGeom.clone());\r\n\t\t\t\t// Force name to be chosen by this._pFinalizeAsset()\r\n\t\t\t\tthis._mesh.name = \"\";\r\n\t\t\t\tif (this.materialFinal) {\r\n\t\t\t\t\t//add to the content property\r\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\t}\r\n\r\n\t/**\r\n\t * Reads in all that MD2 Header data that is declared as private variables.\r\n\t * I know its a lot, and it looks ugly, but only way to do it in Flash\r\n\t */\r\n\tprivate parseHeader()\r\n\t{\r\n\t\tthis._ident = this._byteData.readInt();\r\n\t\tthis._version = this._byteData.readInt();\r\n\t\tthis._skinWidth = this._byteData.readInt();\r\n\t\tthis._skinHeight = this._byteData.readInt();\r\n\t\t//skip this._frameSize\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._numSkins = this._byteData.readInt();\r\n\t\tthis._numVertices = this._byteData.readInt();\r\n\t\tthis._numST = this._byteData.readInt();\r\n\t\tthis._numTris = this._byteData.readInt();\r\n\t\t//skip this._numGlCmds\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._numFrames = this._byteData.readInt();\r\n\t\tthis._offsetSkins = this._byteData.readInt();\r\n\t\tthis._offsetST = this._byteData.readInt();\r\n\t\tthis._offsetTris = this._byteData.readInt();\r\n\t\tthis._offsetFrames = this._byteData.readInt();\r\n\t\t//skip this._offsetGlCmds\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._offsetEnd = this._byteData.readInt();\r\n\r\n\t\tthis._parsedHeader = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the file names for the materials.\r\n\t */\r\n\tprivate parseMaterialNames()\r\n\t{\r\n\t\tvar url:string;\r\n\t\tvar name:string;\r\n\t\tvar extIndex:number /*int*/;\r\n\t\tvar slashIndex:number /*int*/;\r\n\t\tthis._materialNames = new Array<string>();\r\n\t\tthis._byteData.position = this._offsetSkins;\r\n\r\n\t\tvar regExp:RegExp = new RegExp(\"[^a-zA-Z0-9\\\\_\\/.]\", \"g\");\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numSkins; ++i) {\r\n\t\t\tname = this._byteData.readUTFBytes(64);\r\n\t\t\tname = name.replace(regExp, \"\");\r\n\t\t\textIndex = name.lastIndexOf(\".\");\r\n\t\t\tif (this._ignoreTexturePath)\r\n\t\t\t\tslashIndex = name.lastIndexOf(\"/\");\r\n\t\t\tif (name.toLowerCase().indexOf(\".jpg\") == -1 && name.toLowerCase().indexOf(\".png\") == -1) {\r\n\t\t\t\tname = name.substring(slashIndex + 1, extIndex);\r\n\t\t\t\turl = name + \".\" + this._textureType;\r\n\t\t\t} else {\r\n\t\t\t\turl = name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._materialNames[i] = name;\r\n\r\n\t\t\t// only support 1 skin TODO: really?\r\n\t\t\tif (this.dependencies.length == 0)\r\n\t\t\t\tthis._pAddDependency(name, new URLRequest(url));\r\n\t\t}\r\n\r\n\t\tif (this._materialNames.length > 0)\r\n\t\t\tthis._mesh.material.name = this._materialNames[0]; else\r\n\t\t\tthis.materialFinal = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the uv data for the mesh.\r\n\t */\r\n\tprivate parseUV()\r\n\t{\r\n\t\tvar j:number /*uint*/ = 0;\r\n\r\n\t\tthis._uvs = new Array<number>(this._numST*2);\r\n\t\tthis._byteData.position = this._offsetST;\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numST; i++) {\r\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinWidth;\r\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinHeight;\r\n\t\t}\r\n\r\n\t\tthis._parsedUV = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses unique indices for the faces.\r\n\t */\r\n\tprivate parseFaces()\r\n\t{\r\n\t\tvar a:number /*uint*/, b:number /*uint*/, c:number /*uint*/, ta:number /*uint*/, tb:number /*uint*/, tc:number /*uint*/;\r\n\t\tvar i:number /*uint*/;\r\n\r\n\t\tthis._vertIndices = new Array<number>();\r\n\t\tthis._uvIndices = new Array<number>();\r\n\t\tthis._indices = new Array<number>() /*uint*/;\r\n\r\n\t\tthis._byteData.position = this._offsetTris;\r\n\r\n\t\tfor (i = 0; i < this._numTris; i++) {\r\n\t\t\t//collect vertex indices\r\n\t\t\ta = this._byteData.readUnsignedShort();\r\n\t\t\tb = this._byteData.readUnsignedShort();\r\n\t\t\tc = this._byteData.readUnsignedShort();\r\n\r\n\t\t\t//collect uv indices\r\n\t\t\tta = this._byteData.readUnsignedShort();\r\n\t\t\ttb = this._byteData.readUnsignedShort();\r\n\t\t\ttc = this._byteData.readUnsignedShort();\r\n\r\n\t\t\tthis.addIndex(a, ta);\r\n\t\t\tthis.addIndex(b, tb);\r\n\t\t\tthis.addIndex(c, tc);\r\n\t\t}\r\n\r\n\t\tvar len:number /*uint*/ = this._uvIndices.length;\r\n\t\tthis._finalUV = new Array<number>(len*2);\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tthis._finalUV[i << 1] = this._uvs[this._uvIndices[i] << 1];\r\n\t\t\tthis._finalUV[(i << 1) + 1] = this._uvs[(this._uvIndices[i] << 1) + 1];\r\n\t\t}\r\n\r\n\t\tthis._parsedFaces = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a face index to the list if it doesn't exist yet, based on vertexIndex and uvIndex, and adds the\r\n\t * corresponding vertex and uv data in the correct location.\r\n\t * @param vertexIndex The original index in the vertex list.\r\n\t * @param uvIndex The original index in the uv list.\r\n\t */\r\n\tprivate addIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/)\r\n\t{\r\n\t\tvar index:number /*int*/ = this.findIndex(vertexIndex, uvIndex);\r\n\r\n\t\tif (index == -1) {\r\n\t\t\tthis._indices.push(this._vertIndices.length);\r\n\t\t\tthis._vertIndices.push(vertexIndex);\r\n\t\t\tthis._uvIndices.push(uvIndex);\r\n\t\t} else\r\n\t\t\tthis._indices.push(index);\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the final index corresponding to the original MD2's vertex and uv indices. Returns -1 if it wasn't added yet.\r\n\t * @param vertexIndex The original index in the vertex list.\r\n\t * @param uvIndex The original index in the uv list.\r\n\t * @return The index of the final mesh corresponding to the original vertex and uv index. -1 if it doesn't exist yet.\r\n\t */\r\n\tprivate findIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/):number /*int*/\r\n\t{\r\n\t\tvar len:number /*uint*/ = this._vertIndices.length;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\r\n\t\t\tif (this._vertIndices[i] == vertexIndex && this._uvIndices[i] == uvIndex)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses all the frame geometries.\r\n\t */\r\n\tprivate parseFrames()\r\n\t{\r\n\t\tvar sx:number, sy:number, sz:number;\r\n\t\tvar tx:number, ty:number, tz:number;\r\n\t\tvar geometry:Geometry;\r\n\t\tvar subGeom:TriangleSubGeometry;\r\n\t\tvar vertLen:number /*uint*/ = this._vertIndices.length;\r\n\t\tvar fvertices:Array<number>;\r\n\t\tvar tvertices:Array<number>;\r\n\t\tvar i:number /*uint*/, j:number /*int*/, k:number /*uint*/;\r\n\t\t//var ch : number /*uint*/;\r\n\t\tvar name:string = \"\";\r\n\t\tvar prevClip:VertexClipNode = null;\r\n\r\n\t\tthis._byteData.position = this._offsetFrames;\r\n\r\n\t\tfor (i = 0; i < this._numFrames; i++) {\r\n\r\n\t\t\ttvertices = new Array<number>();\r\n\t\t\tfvertices = new Array<number>(vertLen*3);\r\n\r\n\t\t\tsx = this._byteData.readFloat();\r\n\t\t\tsy = this._byteData.readFloat();\r\n\t\t\tsz = this._byteData.readFloat();\r\n\r\n\t\t\ttx = this._byteData.readFloat();\r\n\t\t\tty = this._byteData.readFloat();\r\n\t\t\ttz = this._byteData.readFloat();\r\n\r\n\t\t\tname = this.readFrameName();\r\n\r\n\t\t\t// Note, the extra data.position++ in the for loop is there\r\n\t\t\t// to skip over a byte that holds the \"vertex normal index\"\r\n\t\t\tfor (j = 0; j < this._numVertices; j++, this._byteData.position++)\r\n\t\t\t\ttvertices.push(sx*this._byteData.readUnsignedByte() + tx, sy*this._byteData.readUnsignedByte() + ty, sz*this._byteData.readUnsignedByte() + tz);\r\n\r\n\t\t\tk = 0;\r\n\t\t\tfor (j = 0; j < vertLen; j++) {\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3];\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 2];\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 1];\r\n\t\t\t}\r\n\r\n\t\t\tsubGeom = new TriangleSubGeometry(new AttributesBuffer());\r\n\r\n\t\t\tif (this._firstSubGeom == null)\r\n\t\t\t\tthis._firstSubGeom = subGeom;\r\n\r\n\t\t\tgeometry = new Geometry();\r\n\t\t\tgeometry.addSubGeometry(subGeom);\r\n\r\n\t\t\tsubGeom.setIndices(this._indices);\r\n\t\t\tsubGeom.setPositions(fvertices);\r\n\t\t\tsubGeom.setUVs(this._finalUV);\r\n\t\t\t// cause explicit updates\r\n\t\t\tsubGeom.setNormals(null);\r\n\t\t\tsubGeom.setTangents(null);\r\n\t\t\t// turn auto updates off because they may be animated and set explicitly\r\n\t\t\tsubGeom.autoDeriveNormals = false;\r\n\t\t\tsubGeom.autoDeriveTangents = false;\r\n\r\n\t\t\tvar clip:VertexClipNode = this._clipNodes[name];\r\n\r\n\t\t\tif (!clip) {\r\n\t\t\t\t// If another sequence was parsed before this one, starting\r\n\t\t\t\t// a new state means the previous one is complete and can\r\n\t\t\t\t// hence be finalized.\r\n\t\t\t\tif (prevClip) {\r\n\t\t\t\t\tthis._pFinalizeAsset(prevClip);\r\n\t\t\t\t\tthis._animationSet.addAnimation(prevClip);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tclip = new VertexClipNode();\r\n\t\t\t\tclip.name = name;\r\n\t\t\t\tclip.stitchFinalFrame = true;\r\n\r\n\t\t\t\tthis._clipNodes[name] = clip;\r\n\r\n\t\t\t\tprevClip = clip;\r\n\t\t\t}\r\n\t\t\tclip.addFrame(geometry, 1000/MD2Parser.FPS);\r\n\t\t}\r\n\r\n\t\t// Finalize the last state\r\n\t\tif (prevClip) {\r\n\t\t\tthis._pFinalizeAsset(prevClip);\r\n\t\t\tthis._animationSet.addAnimation(prevClip);\r\n\t\t}\r\n\r\n\t\t// Force this._pFinalizeAsset() to decide name\r\n\t\tthis._pFinalizeAsset(this._animationSet);\r\n\r\n\t\tthis._parsedFrames = true;\r\n\t}\r\n\r\n\tprivate readFrameName():string\r\n\t{\r\n\t\tvar name:string = \"\";\r\n\t\tvar k:number /*uint*/ = 0;\r\n\t\tfor (var j:number /*uint*/ = 0; j < 16; j++) {\r\n\t\t\tvar ch:number /*uint*/ = this._byteData.readUnsignedByte();\r\n\r\n\t\t\tif (Math.floor(ch) > 0x39 && Math.floor(ch) <= 0x7A && k == 0)\r\n\t\t\t\tname += String.fromCharCode(ch);\r\n\r\n\t\t\tif (Math.floor(ch) >= 0x30 && Math.floor(ch) <= 0x39)\r\n\t\t\t\tk++;\r\n\t\t}\r\n\t\treturn name;\r\n\t}\r\n}\r\n\r\nexport = MD2Parser;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\n\r\n/**\r\n * MD5AnimParser provides a parser for the md5anim data type, providing an animation sequence for the md5 format.\r\n *\r\n * todo: optimize\r\n */\r\nclass MD5AnimParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\r\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\r\n\tpublic static NUM_FRAMES_TOKEN:string = \"numFrames\";\r\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\r\n\tpublic static FRAME_RATE_TOKEN:string = \"frameRate\";\r\n\tpublic static NUM_ANIMATED_COMPONENTS_TOKEN:string = \"numAnimatedComponents\";\r\n\r\n\tpublic static HIERARCHY_TOKEN:string = \"hierarchy\";\r\n\tpublic static BOUNDS_TOKEN:string = \"bounds\";\r\n\tpublic static BASE_FRAME_TOKEN:string = \"baseframe\";\r\n\tpublic static FRAME_TOKEN:string = \"frame\";\r\n\r\n\tpublic static COMMENT_TOKEN:string = \"//\";\r\n\r\n\tprivate _parseIndex:number /*int*/ = 0;\r\n\tprivate _reachedEOF:boolean;\r\n\tprivate _line:number /*int*/ = 0;\r\n\tprivate _charLineIndex:number /*int*/ = 0;\r\n\tprivate _version:number /*int*/;\r\n\tprivate _frameRate:number /*int*/;\r\n\tprivate _numFrames:number /*int*/;\r\n\tprivate _numJoints:number /*int*/;\r\n\tprivate _numAnimatedComponents:number /*int*/;\r\n\r\n\tprivate _hierarchy:Array<HierarchyData>;\r\n\tprivate _bounds:Array<BoundsData>;\r\n\tprivate _frameData:Array<FrameData>;\r\n\tprivate _baseFrameData:Array<BaseFrameData>;\r\n\r\n\tprivate _rotationQuat:Quaternion;\r\n\tprivate _clip:SkeletonClipNode;\r\n\r\n\t/**\r\n\t * Creates a new MD5AnimParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._rotationQuat = new Quaternion();\r\n\t\tvar t1:Quaternion = new Quaternion();\r\n\t\tvar t2:Quaternion = new Quaternion();\r\n\r\n\t\tt1.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\r\n\t\tt2.fromAxisAngle(Vector3D.Y_AXIS, -Math.PI*.5);\r\n\r\n\t\tthis._rotationQuat.multiply(t2, t1);\r\n\r\n\t\tif (additionalRotationAxis) {\r\n\t\t\tthis._rotationQuat.multiply(t2, t1);\r\n\t\t\tt1.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\r\n\t\t\tthis._rotationQuat.multiply(t1, this._rotationQuat);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md5anim\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar token:string;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\ttoken = this.getNextToken();\r\n\t\t\tswitch (token) {\r\n\t\t\t\tcase MD5AnimParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"\":\r\n\t\t\t\t\t// can occur at the end of a file\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.VERSION_TOKEN:\r\n\t\t\t\t\tthis._version = this.getNextInt();\r\n\t\t\t\t\tif (this._version != 10)\r\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.COMMAND_LINE_TOKEN:\r\n\t\t\t\t\tthis.parseCMD();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_FRAMES_TOKEN:\r\n\t\t\t\t\tthis._numFrames = this.getNextInt();\r\n\t\t\t\t\tthis._bounds = new Array<BoundsData>();\r\n\t\t\t\t\tthis._frameData = new Array<FrameData>();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_JOINTS_TOKEN:\r\n\t\t\t\t\tthis._numJoints = this.getNextInt();\r\n\t\t\t\t\tthis._hierarchy = new Array<HierarchyData>(this._numJoints);\r\n\t\t\t\t\tthis._baseFrameData = new Array<BaseFrameData>(this._numJoints);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.FRAME_RATE_TOKEN:\r\n\t\t\t\t\tthis._frameRate = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_ANIMATED_COMPONENTS_TOKEN:\r\n\t\t\t\t\tthis._numAnimatedComponents = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.HIERARCHY_TOKEN:\r\n\t\t\t\t\tthis.parseHierarchy();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.BOUNDS_TOKEN:\r\n\t\t\t\t\tthis.parseBounds();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.BASE_FRAME_TOKEN:\r\n\t\t\t\t\tthis.parseBaseFrame();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.FRAME_TOKEN:\r\n\t\t\t\t\tthis.parseFrame();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (!this._reachedEOF)\r\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._reachedEOF) {\r\n\t\t\t\tthis._clip = new SkeletonClipNode();\r\n\t\t\t\tthis.translateClip();\r\n\t\t\t\tthis._pFinalizeAsset(this._clip);\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts all key frame data to an SkinnedAnimationSequence.\r\n\t */\r\n\tprivate translateClip():void\r\n\t{\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numFrames; ++i)\r\n\t\t\tthis._clip.addFrame(this.translatePose(this._frameData[i]), 1000/this._frameRate);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a single key frame data to a SkeletonPose.\r\n\t * @param frameData The actual frame data.\r\n\t * @return A SkeletonPose containing the frame data's pose.\r\n\t */\r\n\tprivate translatePose(frameData:FrameData):SkeletonPose\r\n\t{\r\n\t\tvar hierarchy:HierarchyData;\r\n\t\tvar pose:JointPose;\r\n\t\tvar base:BaseFrameData;\r\n\t\tvar flags:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar translate:Vector3D = new Vector3D();\r\n\t\tvar orientation:Quaternion = new Quaternion();\r\n\t\tvar components:Array<number> = frameData.components;\r\n\t\tvar skelPose:SkeletonPose = new SkeletonPose();\r\n\t\tvar jointPoses:Array<JointPose> = skelPose.jointPoses;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numJoints; ++i) {\r\n\t\t\tj = 0;\r\n\t\t\tpose = new JointPose();\r\n\t\t\thierarchy = this._hierarchy[i];\r\n\t\t\tbase = this._baseFrameData[i];\r\n\t\t\tflags = hierarchy.flags;\r\n\t\t\ttranslate.x = base.position.x;\r\n\t\t\ttranslate.y = base.position.y;\r\n\t\t\ttranslate.z = base.position.z;\r\n\t\t\torientation.x = base.orientation.x;\r\n\t\t\torientation.y = base.orientation.y;\r\n\t\t\torientation.z = base.orientation.z;\r\n\r\n\t\t\tif (flags & 1)\r\n\t\t\t\ttranslate.x = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 2)\r\n\t\t\t\ttranslate.y = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 4)\r\n\t\t\t\ttranslate.z = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 8)\r\n\t\t\t\torientation.x = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 16)\r\n\t\t\t\torientation.y = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 32)\r\n\t\t\t\torientation.z = components[hierarchy.startIndex + (j++)];\r\n\r\n\t\t\tvar w:number = 1 - orientation.x*orientation.x - orientation.y*orientation.y - orientation.z*orientation.z;\r\n\t\t\torientation.w = w < 0? 0 : -Math.sqrt(w);\r\n\r\n\t\t\tif (hierarchy.parentIndex < 0) {\r\n\t\t\t\tpose.orientation.multiply(this._rotationQuat, orientation);\r\n\t\t\t\tpose.translation = this._rotationQuat.rotatePoint(translate);\r\n\t\t\t} else {\r\n\t\t\t\tpose.orientation.copyFrom(orientation);\r\n\t\t\t\tpose.translation.x = translate.x;\r\n\t\t\t\tpose.translation.y = translate.y;\r\n\t\t\t\tpose.translation.z = translate.z;\r\n\t\t\t}\r\n\t\t\tpose.orientation.y = -pose.orientation.y;\r\n\t\t\tpose.orientation.z = -pose.orientation.z;\r\n\t\t\tpose.translation.x = -pose.translation.x;\r\n\r\n\t\t\tjointPoses[i] = pose;\r\n\t\t}\r\n\r\n\t\treturn skelPose;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the skeleton's hierarchy data.\r\n\t */\r\n\tprivate parseHierarchy():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:HierarchyData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new HierarchyData();\r\n\t\t\tdata.name = this.parseLiteralstring();\r\n\t\t\tdata.parentIndex = this.getNextInt();\r\n\t\t\tdata.flags = this.getNextInt();\r\n\t\t\tdata.startIndex = this.getNextInt();\r\n\t\t\tthis._hierarchy[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses frame bounds.\r\n\t */\r\n\tprivate parseBounds():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:BoundsData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new BoundsData();\r\n\t\t\tdata.min = this.parseVector3D();\r\n\t\t\tdata.max = this.parseVector3D();\r\n\t\t\tthis._bounds[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the base frame.\r\n\t */\r\n\tprivate parseBaseFrame():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:BaseFrameData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new BaseFrameData();\r\n\t\t\tdata.position = this.parseVector3D();\r\n\t\t\tdata.orientation = this.parseQuaternion();\r\n\t\t\tthis._baseFrameData[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a single frame.\r\n\t */\r\n\tprivate parseFrame():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:FrameData;\r\n\t\tvar token:string;\r\n\t\tvar frameIndex:number /*int*/;\r\n\r\n\t\tframeIndex = this.getNextInt();\r\n\r\n\t\ttoken = this.getNextToken();\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new FrameData();\r\n\t\t\tdata.components = new Array<number>(this._numAnimatedComponents);\r\n\r\n\t\t\tfor (var i:number /*int*/ = 0; i < this._numAnimatedComponents; ++i)\r\n\t\t\t\tdata.components[i] = this.getNextNumber();\r\n\r\n\t\t\tthis._frameData[frameIndex] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Puts back the last read character into the data stream.\r\n\t */\r\n\tprivate putBack():void\r\n\t{\r\n\t\tthis._parseIndex--;\r\n\t\tthis._charLineIndex--;\r\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the next token in the data stream.\r\n\t */\r\n\tprivate getNextToken():string\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar token:string = \"\";\r\n\r\n\t\twhile (!this._reachedEOF) {\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\r\n\t\t\t\tif (token != MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.skipWhiteSpace();\r\n\t\t\t\tif (token != \"\")\r\n\t\t\t\t\treturn token;\r\n\t\t\t} else\r\n\t\t\t\ttoken += ch;\r\n\r\n\t\t\tif (token == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\treturn token;\r\n\t\t}\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Skips all whitespace in the data stream.\r\n\t */\r\n\tprivate skipWhiteSpace():void\r\n\t{\r\n\t\tvar ch:string;\r\n\r\n\t\tdo\r\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\r\n\r\n\t\tthis.putBack();\r\n\t}\r\n\r\n\t/**\r\n\t * Skips to the next line.\r\n\t */\r\n\tprivate ignoreLine():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\r\n\t\t\tch = this.getNextChar();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next single character in the data stream.\r\n\t */\r\n\tprivate getNextChar():string\r\n\t{\r\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\r\n\r\n\t\tif (ch == \"\\n\") {\r\n\t\t\t++this._line;\r\n\t\t\tthis._charLineIndex = 0;\r\n\t\t} else if (ch != \"\\r\")\r\n\t\t\t++this._charLineIndex;\r\n\r\n\t\tif (this._parseIndex == this._textData.length)\r\n\t\t\tthis._reachedEOF = true;\r\n\r\n\t\treturn ch;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next integer in the data stream.\r\n\t */\r\n\tprivate getNextInt():number /*int*/\r\n\t{\r\n\t\tvar i:number = parseInt(this.getNextToken());\r\n\t\tif (isNaN(i))\r\n\t\t\tthis.sendParseError(\"int type\");\r\n\t\treturn i;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next floating point number in the data stream.\r\n\t */\r\n\tprivate getNextNumber():number\r\n\t{\r\n\t\tvar f:number = parseFloat(this.getNextToken());\r\n\t\tif (isNaN(f))\r\n\t\t\tthis.sendParseError(\"float type\");\r\n\t\treturn f;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next 3d vector in the data stream.\r\n\t */\r\n\tprivate parseVector3D():Vector3D\r\n\t{\r\n\t\tvar vec:Vector3D = new Vector3D();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvec.x = this.getNextNumber();\r\n\t\tvec.y = this.getNextNumber();\r\n\t\tvec.z = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next quaternion in the data stream.\r\n\t */\r\n\tprivate parseQuaternion():Quaternion\r\n\t{\r\n\t\tvar quat:Quaternion = new Quaternion();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tquat.x = this.getNextNumber();\r\n\t\tquat.y = this.getNextNumber();\r\n\t\tquat.z = this.getNextNumber();\r\n\r\n\t\t// quat supposed to be unit length\r\n\t\tvar t:number = 1 - (quat.x*quat.x) - (quat.y*quat.y) - (quat.z*quat.z);\r\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn quat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the command line data.\r\n\t */\r\n\tprivate parseCMD():void\r\n\t{\r\n\t\t// just ignore the command line property\r\n\t\tthis.parseLiteralstring();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\r\n\t * by double quotes.\r\n\t */\r\n\tprivate parseLiteralstring():string\r\n\t{\r\n\t\tthis.skipWhiteSpace();\r\n\r\n\t\tvar ch:string = this.getNextChar();\r\n\t\tvar str:string = \"\";\r\n\r\n\t\tif (ch != \"\\\"\")\r\n\t\t\tthis.sendParseError(\"\\\"\");\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch != \"\\\"\")\r\n\t\t\t\tstr += ch;\r\n\t\t} while (ch != \"\\\"\");\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an end-of-file error when a premature end of file was encountered.\r\n\t */\r\n\tprivate sendEOFError():void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected end of file\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unexpected token was encountered.\r\n\t * @param expected The token type that was actually expected.\r\n\t */\r\n\tprivate sendParseError(expected:string):void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unknown keyword was encountered.\r\n\t */\r\n\tprivate sendUnknownKeywordError():void\r\n\t{\r\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\r\n\t}\r\n}\r\n\r\nexport = MD5AnimParser;\r\n\r\n\r\n/**\r\n *\r\n */\r\nclass BaseFrameData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic position:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientation:Quaternion;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass BoundsData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic min:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic max:Vector3D;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass FrameData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic index:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic components:Array<number>;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass HierarchyData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic name:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic parentIndex:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic flags:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic startIndex:number /*int*/;\r\n}",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\n\r\n// todo: create animation system, parse skeleton\r\n\r\n/**\r\n * MD5MeshParser provides a parser for the md5mesh data type, providing the geometry of the md5 format.\r\n *\r\n * todo: optimize\r\n */\r\nclass MD5MeshParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\r\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\r\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\r\n\tpublic static NUM_MESHES_TOKEN:string = \"numMeshes\";\r\n\tpublic static COMMENT_TOKEN:string = \"//\";\r\n\tpublic static JOINTS_TOKEN:string = \"joints\";\r\n\tpublic static MESH_TOKEN:string = \"mesh\";\r\n\r\n\tpublic static MESH_SHADER_TOKEN:string = \"shader\";\r\n\tpublic static MESH_NUM_VERTS_TOKEN:string = \"numverts\";\r\n\tpublic static MESH_VERT_TOKEN:string = \"vert\";\r\n\tpublic static MESH_NUM_TRIS_TOKEN:string = \"numtris\";\r\n\tpublic static MESH_TRI_TOKEN:string = \"tri\";\r\n\tpublic static MESH_NUM_WEIGHTS_TOKEN:string = \"numweights\";\r\n\tpublic static MESH_WEIGHT_TOKEN:string = \"weight\";\r\n\r\n\tprivate _parseIndex:number /*int*/ = 0;\r\n\tprivate _reachedEOF:boolean;\r\n\tprivate _line:number /*int*/ = 0;\r\n\tprivate _charLineIndex:number /*int*/ = 0;\r\n\tprivate _version:number /*int*/;\r\n\tprivate _numJoints:number /*int*/;\r\n\tprivate _numMeshes:number /*int*/;\r\n\r\n\tprivate _mesh:Mesh;\r\n\tprivate _shaders:Array<string>;\r\n\r\n\tprivate _maxJointCount:number /*int*/;\r\n\tprivate _meshData:Array<MeshData>;\r\n\tprivate _bindPoses:Array<Matrix3D>;\r\n\tprivate _geometry:Geometry;\r\n\r\n\tprivate _skeleton:Skeleton;\r\n\tprivate _animationSet:SkeletonAnimationSet;\r\n\r\n\tprivate _rotationQuat:Quaternion;\r\n\r\n\t/**\r\n\t * Creates a new MD5MeshParser object.\r\n\t */\r\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._rotationQuat = new Quaternion();\r\n\r\n\t\tthis._rotationQuat.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\r\n\r\n\t\tif (additionalRotationAxis) {\r\n\t\t\tvar quat:Quaternion = new Quaternion();\r\n\t\t\tquat.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\r\n\t\t\tthis._rotationQuat.multiply(this._rotationQuat, quat);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md5mesh\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar token:string;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\ttoken = this.getNextToken();\r\n\t\t\tswitch (token) {\r\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.VERSION_TOKEN:\r\n\t\t\t\t\tthis._version = this.getNextInt();\r\n\t\t\t\t\tif (this._version != 10)\r\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.COMMAND_LINE_TOKEN:\r\n\t\t\t\t\tthis.parseCMD();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.NUM_JOINTS_TOKEN:\r\n\t\t\t\t\tthis._numJoints = this.getNextInt();\r\n\t\t\t\t\tthis._bindPoses = new Array<Matrix3D>(this._numJoints);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.NUM_MESHES_TOKEN:\r\n\t\t\t\t\tthis._numMeshes = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.JOINTS_TOKEN:\r\n\t\t\t\t\tthis.parseJoints();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_TOKEN:\r\n\t\t\t\t\tthis.parseMesh();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (!this._reachedEOF)\r\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._reachedEOF) {\r\n\t\t\t\tthis.calculateMaxJointCount();\r\n\t\t\t\tthis._animationSet = new SkeletonAnimationSet(this._maxJointCount);\r\n\r\n\t\t\t\tthis._mesh = new Mesh(new Geometry(), null);\r\n\t\t\t\tthis._geometry = this._mesh.geometry;\r\n\r\n\t\t\t\tfor (var i:number /*int*/ = 0; i < this._meshData.length; ++i)\r\n\t\t\t\t\tthis._geometry.addSubGeometry(this.translateGeom(this._meshData[i].vertexData, this._meshData[i].weightData, this._meshData[i].indices));\r\n\r\n\t\t\t\t//_geometry.animation = _animation;\r\n\t\t\t\t//\t\t\t\t\t_mesh.animationController = _animationController;\r\n\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(this._geometry);\r\n\t\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t\t\tthis._pFinalizeAsset(this._skeleton);\r\n\t\t\t\tthis._pFinalizeAsset(this._animationSet);\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\t}\r\n\r\n\tprivate calculateMaxJointCount():void\r\n\t{\r\n\t\tthis._maxJointCount = 0;\r\n\r\n\t\tvar numMeshData:number /*int*/ = this._meshData.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < numMeshData; ++i) {\r\n\t\t\tvar meshData:MeshData = this._meshData[i];\r\n\t\t\tvar vertexData:Array<VertexData> = meshData.vertexData;\r\n\t\t\tvar numVerts:number /*int*/ = vertexData.length;\r\n\r\n\t\t\tfor (var j:number /*int*/ = 0; j < numVerts; ++j) {\r\n\t\t\t\tvar zeroWeights:number /*int*/ = this.countZeroWeightJoints(vertexData[j], meshData.weightData);\r\n\t\t\t\tvar totalJoints:number /*int*/ = vertexData[j].countWeight - zeroWeights;\r\n\t\t\t\tif (totalJoints > this._maxJointCount)\r\n\t\t\t\t\tthis._maxJointCount = totalJoints;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate countZeroWeightJoints(vertex:VertexData, weights:Array<JointData>):number /*int*/\r\n\t{\r\n\t\tvar start:number /*int*/ = vertex.startWeight;\r\n\t\tvar end:number /*int*/ = vertex.startWeight + vertex.countWeight;\r\n\t\tvar count:number /*int*/ = 0;\r\n\t\tvar weight:number;\r\n\r\n\t\tfor (var i:number /*int*/ = start; i < end; ++i) {\r\n\t\t\tweight = weights[i].bias;\r\n\t\t\tif (weight == 0)\r\n\t\t\t\t++count;\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the skeleton's joints.\r\n\t */\r\n\tprivate parseJoints():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar joint:SkeletonJoint;\r\n\t\tvar pos:Vector3D;\r\n\t\tvar quat:Quaternion;\r\n\t\tvar i:number /*int*/ = 0;\r\n\t\tvar token:string = this.getNextToken();\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tthis._skeleton = new Skeleton();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tjoint = new SkeletonJoint();\r\n\t\t\tjoint.name = this.parseLiteralstring();\r\n\t\t\tjoint.parentIndex = this.getNextInt();\r\n\t\t\tpos = this.parseVector3D();\r\n\t\t\tpos = this._rotationQuat.rotatePoint(pos);\r\n\t\t\tquat = this.parseQuaternion();\r\n\r\n\t\t\t// todo: check if this is correct, or maybe we want to actually store it as quats?\r\n\t\t\tthis._bindPoses[i] = quat.toMatrix3D();\r\n\t\t\tthis._bindPoses[i].appendTranslation(pos.x, pos.y, pos.z);\r\n\t\t\tvar inv:Matrix3D = this._bindPoses[i].clone();\r\n\t\t\tinv.invert();\r\n\t\t\tjoint.inverseBindPose = inv.rawData;\r\n\r\n\t\t\tthis._skeleton.joints[i++] = joint;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Puts back the last read character into the data stream.\r\n\t */\r\n\tprivate putBack():void\r\n\t{\r\n\t\tthis._parseIndex--;\r\n\t\tthis._charLineIndex--;\r\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the mesh geometry.\r\n\t */\r\n\tprivate parseMesh():void\r\n\t{\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar ch:string;\r\n\t\tvar vertexData:Array<VertexData>;\r\n\t\tvar weights:Array<JointData>;\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tif (this._shaders == null)\r\n\t\t\tthis._shaders = new Array<string>();\r\n\r\n\t\twhile (ch != \"}\") {\r\n\t\t\tch = this.getNextToken();\r\n\t\t\tswitch (ch) {\r\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_SHADER_TOKEN:\r\n\t\t\t\t\tthis._shaders.push(this.parseLiteralstring());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_VERTS_TOKEN:\r\n\t\t\t\t\tvertexData = new Array<VertexData>(this.getNextInt());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_TRIS_TOKEN:\r\n\t\t\t\t\tindices = new Array<number>(this.getNextInt()*3) /*uint*/;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_WEIGHTS_TOKEN:\r\n\t\t\t\t\tweights = new Array<JointData>(this.getNextInt());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_VERT_TOKEN:\r\n\t\t\t\t\tthis.parseVertex(vertexData);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_TRI_TOKEN:\r\n\t\t\t\t\tthis.parseTri(indices);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_WEIGHT_TOKEN:\r\n\t\t\t\t\tthis.parseJoint(weights);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._meshData == null)\r\n\t\t\tthis._meshData = new Array<MeshData>();\r\n\r\n\t\tvar i:number /*uint*/ = this._meshData.length;\r\n\t\tthis._meshData[i] = new MeshData();\r\n\t\tthis._meshData[i].vertexData = vertexData;\r\n\t\tthis._meshData[i].weightData = weights;\r\n\t\tthis._meshData[i].indices = indices;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the mesh data to a SkinnedSub instance.\r\n\t * @param vertexData The mesh's vertices.\r\n\t * @param weights The joint weights per vertex.\r\n\t * @param indices The indices for the faces.\r\n\t * @return A SubGeometry instance containing all geometrical data for the current mesh.\r\n\t */\r\n\tprivate translateGeom(vertexData:Array<VertexData>, weights:Array<JointData>, indices:Array<number> /*uint*/):TriangleSubGeometry\r\n\t{\r\n\t\tvar len:number /*int*/ = vertexData.length;\r\n\t\tvar v1:number /*int*/, v2:number /*int*/, v3:number /*int*/;\r\n\t\tvar vertex:VertexData;\r\n\t\tvar weight:JointData;\r\n\t\tvar bindPose:Matrix3D;\r\n\t\tvar pos:Vector3D;\r\n\t\tvar subGeom:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\tvar uvs:Array<number> = new Array<number>(len*2);\r\n\t\tvar vertices:Array<number> = new Array<number>(len*3);\r\n\t\tvar jointIndices:Array<number> = new Array<number>(len*this._maxJointCount);\r\n\t\tvar jointWeights:Array<number> = new Array<number>(len*this._maxJointCount);\r\n\t\tvar l:number /*int*/ = 0;\r\n\t\tvar nonZeroWeights:number /*int*/;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i) {\r\n\t\t\tvertex = vertexData[i];\r\n\t\t\tv1 = vertex.index*3;\r\n\t\t\tv2 = v1 + 1;\r\n\t\t\tv3 = v1 + 2;\r\n\t\t\tvertices[v1] = vertices[v2] = vertices[v3] = 0;\r\n\r\n\t\t\tnonZeroWeights = 0;\r\n\t\t\tfor (var j:number /*int*/ = 0; j < vertex.countWeight; ++j) {\r\n\t\t\t\tweight = weights[vertex.startWeight + j];\r\n\t\t\t\tif (weight.bias > 0) {\r\n\t\t\t\t\tbindPose = this._bindPoses[weight.joint];\r\n\t\t\t\t\tpos = bindPose.transformVector(weight.pos);\r\n\t\t\t\t\tvertices[v1] += pos.x*weight.bias;\r\n\t\t\t\t\tvertices[v2] += pos.y*weight.bias;\r\n\t\t\t\t\tvertices[v3] += pos.z*weight.bias;\r\n\r\n\t\t\t\t\t// indices need to be multiplied by 3 (amount of matrix registers)\r\n\t\t\t\t\tjointIndices[l] = weight.joint*3;\r\n\t\t\t\t\tjointWeights[l++] = weight.bias;\r\n\t\t\t\t\t++nonZeroWeights;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = nonZeroWeights; j < this._maxJointCount; ++j) {\r\n\t\t\t\tjointIndices[l] = 0;\r\n\t\t\t\tjointWeights[l++] = 0;\r\n\t\t\t}\r\n\r\n\t\t\tv1 = vertex.index << 1;\r\n\t\t\tuvs[v1++] = vertex.s;\r\n\t\t\tuvs[v1] = vertex.t;\r\n\t\t}\r\n\r\n\t\tsubGeom.jointsPerVertex = this._maxJointCount;\r\n\t\tsubGeom.setIndices(indices);\r\n\t\tsubGeom.setPositions(vertices);\r\n\t\tsubGeom.setUVs(uvs);\r\n\t\tsubGeom.setJointIndices(jointIndices);\r\n\t\tsubGeom.setJointWeights(jointWeights);\r\n\t\t// cause explicit updates\r\n\t\tsubGeom.setNormals(null);\r\n\t\tsubGeom.setTangents(null);\r\n\t\t// turn auto updates off because they may be animated and set explicitly\r\n\t\tsubGeom.autoDeriveTangents = false;\r\n\t\tsubGeom.autoDeriveNormals = false;\r\n\r\n\t\treturn subGeom;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve the next triplet of vertex indices that form a face.\r\n\t * @param indices The index list in which to store the read data.\r\n\t */\r\n\tprivate parseTri(indices:Array<number> /*uint*/):void\r\n\t{\r\n\t\tvar index:number /*int*/ = this.getNextInt()*3;\r\n\t\tindices[index] = this.getNextInt();\r\n\t\tindices[index + 1] = this.getNextInt();\r\n\t\tindices[index + 2] = this.getNextInt();\r\n\t}\r\n\r\n\t/**\r\n\t * Reads a new joint data set for a single joint.\r\n\t * @param weights the target list to contain the weight data.\r\n\t */\r\n\tprivate parseJoint(weights:Array<JointData>):void\r\n\t{\r\n\t\tvar weight:JointData = new JointData();\r\n\t\tweight.index = this.getNextInt();\r\n\t\tweight.joint = this.getNextInt();\r\n\t\tweight.bias = this.getNextNumber();\r\n\t\tweight.pos = this.parseVector3D();\r\n\t\tweights[weight.index] = weight;\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the data for a single vertex.\r\n\t * @param vertexData The list to contain the vertex data.\r\n\t */\r\n\tprivate parseVertex(vertexData:Array<VertexData>):void\r\n\t{\r\n\t\tvar vertex:VertexData = new VertexData();\r\n\t\tvertex.index = this.getNextInt();\r\n\t\tthis.parseUV(vertex);\r\n\t\tvertex.startWeight = this.getNextInt();\r\n\t\tvertex.countWeight = this.getNextInt();\r\n\t\t//\t\t\tif (vertex.countWeight > _maxJointCount) _maxJointCount = vertex.countWeight;\r\n\t\tvertexData[vertex.index] = vertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next uv coordinate.\r\n\t * @param vertexData The vertexData to contain the UV coordinates.\r\n\t */\r\n\tprivate parseUV(vertexData:VertexData):void\r\n\t{\r\n\t\tvar ch:string = this.getNextToken();\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvertexData.s = this.getNextNumber();\r\n\t\tvertexData.t = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the next token in the data stream.\r\n\t */\r\n\tprivate getNextToken():string\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar token:string = \"\";\r\n\r\n\t\twhile (!this._reachedEOF) {\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\r\n\t\t\t\tif (token != MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.skipWhiteSpace();\r\n\t\t\t\tif (token != \"\")\r\n\t\t\t\t\treturn token;\r\n\t\t\t} else\r\n\t\t\t\ttoken += ch;\r\n\r\n\t\t\tif (token == MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\treturn token;\r\n\t\t}\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Skips all whitespace in the data stream.\r\n\t */\r\n\tprivate skipWhiteSpace():void\r\n\t{\r\n\t\tvar ch:string;\r\n\r\n\t\tdo\r\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\r\n\r\n\t\tthis.putBack();\r\n\t}\r\n\r\n\t/**\r\n\t * Skips to the next line.\r\n\t */\r\n\tprivate ignoreLine():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\r\n\t\t\tch = this.getNextChar();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next single character in the data stream.\r\n\t */\r\n\tprivate getNextChar():string\r\n\t{\r\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\r\n\r\n\t\tif (ch == \"\\n\") {\r\n\t\t\t++this._line;\r\n\t\t\tthis._charLineIndex = 0;\r\n\t\t} else if (ch != \"\\r\")\r\n\t\t\t++this._charLineIndex;\r\n\r\n\t\tif (this._parseIndex >= this._textData.length)\r\n\t\t\tthis._reachedEOF = true;\r\n\r\n\t\treturn ch;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next integer in the data stream.\r\n\t */\r\n\tprivate getNextInt():number /*int*/\r\n\t{\r\n\t\tvar i:number = parseInt(this.getNextToken());\r\n\t\tif (isNaN(i))\r\n\t\t\tthis.sendParseError(\"int type\");\r\n\t\treturn i;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next floating point number in the data stream.\r\n\t */\r\n\tprivate getNextNumber():number\r\n\t{\r\n\t\tvar f:number = parseFloat(this.getNextToken());\r\n\t\tif (isNaN(f))\r\n\t\t\tthis.sendParseError(\"float type\");\r\n\t\treturn f;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next 3d vector in the data stream.\r\n\t */\r\n\tprivate parseVector3D():Vector3D\r\n\t{\r\n\t\tvar vec:Vector3D = new Vector3D();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvec.x = -this.getNextNumber();\r\n\t\tvec.y = this.getNextNumber();\r\n\t\tvec.z = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next quaternion in the data stream.\r\n\t */\r\n\tprivate parseQuaternion():Quaternion\r\n\t{\r\n\t\tvar quat:Quaternion = new Quaternion();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tquat.x = this.getNextNumber();\r\n\t\tquat.y = -this.getNextNumber();\r\n\t\tquat.z = -this.getNextNumber();\r\n\r\n\t\t// quat supposed to be unit length\r\n\t\tvar t:number = 1 - quat.x*quat.x - quat.y*quat.y - quat.z*quat.z;\r\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\tvar rotQuat:Quaternion = new Quaternion();\r\n\t\trotQuat.multiply(this._rotationQuat, quat);\r\n\t\treturn rotQuat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the command line data.\r\n\t */\r\n\tprivate parseCMD():void\r\n\t{\r\n\t\t// just ignore the command line property\r\n\t\tthis.parseLiteralstring();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\r\n\t * by double quotes.\r\n\t */\r\n\tprivate parseLiteralstring():string\r\n\t{\r\n\t\tthis.skipWhiteSpace();\r\n\r\n\t\tvar ch:string = this.getNextChar();\r\n\t\tvar str:string = \"\";\r\n\r\n\t\tif (ch != \"\\\"\")\r\n\t\t\tthis.sendParseError(\"\\\"\");\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch != \"\\\"\")\r\n\t\t\t\tstr += ch;\r\n\t\t} while (ch != \"\\\"\");\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an end-of-file error when a premature end of file was encountered.\r\n\t */\r\n\tprivate sendEOFError():void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected end of file\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unexpected token was encountered.\r\n\t * @param expected The token type that was actually expected.\r\n\t */\r\n\tprivate sendParseError(expected:string):void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unknown keyword was encountered.\r\n\t */\r\n\tprivate sendUnknownKeywordError():void\r\n\t{\r\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\r\n\t}\r\n}\r\n\r\nexport = MD5MeshParser;\r\n\r\n\r\nclass VertexData\r\n{\r\n\tpublic index:number /*int*/;\r\n\tpublic s:number;\r\n\tpublic t:number;\r\n\tpublic startWeight:number /*int*/;\r\n\tpublic countWeight:number /*int*/;\r\n}\r\n\r\nclass JointData\r\n{\r\n\tpublic index:number /*int*/;\r\n\tpublic joint:number /*int*/;\r\n\tpublic bias:number;\r\n\tpublic pos:Vector3D;\r\n}\r\n\r\nclass MeshData\r\n{\r\n\tpublic vertexData:Array<VertexData>;\r\n\tpublic weightData:Array<JointData>;\r\n\tpublic indices:Array<number> /*uint*/;\r\n}",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\n\r\n/**\r\n * Max3DSParser provides a parser for the 3ds data type.\r\n */\r\nclass Max3DSParser extends ParserBase\r\n{\r\n\tprivate _byteData:ByteArray;\r\n\r\n\tprivate _textures:Object;\r\n\tprivate _materials:Object;\r\n\tprivate _unfinalized_objects:Object;\r\n\r\n\tprivate _cur_obj_end:number;\r\n\tprivate _cur_obj:ObjectVO;\r\n\r\n\tprivate _cur_mat_end:number;\r\n\tprivate _cur_mat:MaterialVO;\r\n\tprivate _useSmoothingGroups:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>Max3DSParser</code> object.\r\n\t *\r\n\t * @param useSmoothingGroups Determines whether the parser looks for smoothing groups in the 3ds file or assumes uniform smoothing. Defaults to true.\r\n\t */\r\n\tconstructor(useSmoothingGroups:boolean = true)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n\t\tthis._useSmoothingGroups = useSmoothingGroups;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"3ds\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\tvar ba:ByteArray;\r\n\r\n\t\tba = ParserUtils.toByteArray(data);\r\n\t\tif (ba) {\r\n\t\t\tba.position = 0;\r\n\t\t\tif (ba.readShort() == 0x4d4d)\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\tif (resourceDependency.assets.length == 1) {\r\n\t\t\tvar asset:IAsset;\r\n\r\n\t\t\tasset = resourceDependency.assets[0];\r\n\t\t\tif (asset.isAsset(BitmapImage2D)) {\r\n\t\t\t\tvar tex:TextureVO;\r\n\r\n\t\t\t\ttex = this._textures[resourceDependency.id];\r\n\t\t\t\ttex.texture = new Single2DTexture(<BitmapImage2D> asset);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\t// TODO: Implement\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (!this._byteData) {\r\n\t\t\tthis._byteData = this._pGetByteData();\r\n\t\t\tthis._byteData.position = 0;\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\tthis._textures = {};\r\n\t\t\tthis._materials = {};\r\n\t\t\tthis._unfinalized_objects = {};\r\n\t\t}\r\n\r\n\t\t// TODO: With this construct, the loop will run no-op for as long\r\n\t\t// as there is time once file has finished reading. Consider a nice\r\n\t\t// way to stop loop when byte array is empty, without putting it in\r\n\t\t// the while-conditional, which will prevent finalizations from\r\n\t\t// happening after the last chunk.\r\n\t\twhile (this._pHasTime()) {\r\n\r\n\t\t\t// If we are currently working on an object, and the most recent chunk was\r\n\t\t\t// the last one in that object, finalize the current object.\r\n\t\t\tif (this._cur_mat && this._byteData.position >= this._cur_mat_end)\r\n\t\t\t\tthis.finalizeCurrentMaterial();\r\n\t\t\telse if (this._cur_obj && this._byteData.position >= this._cur_obj_end) {\r\n\t\t\t\t// Can't finalize at this point, because we have to wait until the full\r\n\t\t\t\t// animation section has been parsed for any potential pivot definitions\r\n\t\t\t\tthis._unfinalized_objects[this._cur_obj.name] = this._cur_obj;\r\n\t\t\t\tthis._cur_obj_end = Number.MAX_VALUE /*uint*/;\r\n\t\t\t\tthis._cur_obj = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._byteData.getBytesAvailable() > 0) {\r\n\t\t\t\tvar cid:number /*uint*/;\r\n\t\t\t\tvar len:number /*uint*/;\r\n\t\t\t\tvar end:number /*uint*/;\r\n\r\n\t\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\t\tlen = this._byteData.readUnsignedInt();\r\n\t\t\t\tend = this._byteData.position + (len - 6);\r\n\r\n\t\t\t\tswitch (cid) {\r\n\t\t\t\t\tcase 0x4D4D: // MAIN3DS\r\n\t\t\t\t\tcase 0x3D3D: // EDIT3DS\r\n\t\t\t\t\tcase 0xB000: // KEYF3DS\r\n\t\t\t\t\t\t// This types are \"container chunks\" and contain only\r\n\t\t\t\t\t\t// sub-chunks (no data on their own.) This means that\r\n\t\t\t\t\t\t// there is nothing more to parse at this point, and\r\n\t\t\t\t\t\t// instead we should progress to the next chunk, which\r\n\t\t\t\t\t\t// will be the first sub-chunk of this one.\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0xAFFF: // MATERIAL\r\n\t\t\t\t\t\tthis._cur_mat_end = end;\r\n\t\t\t\t\t\tthis._cur_mat = this.parseMaterial();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4000: // EDIT_OBJECT\r\n\t\t\t\t\t\tthis._cur_obj_end = end;\r\n\t\t\t\t\t\tthis._cur_obj = new ObjectVO();\r\n\t\t\t\t\t\tthis._cur_obj.name = this.readNulTermstring();\r\n\t\t\t\t\t\tthis._cur_obj.materials = new Array<string>();\r\n\t\t\t\t\t\tthis._cur_obj.materialFaces = {};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4100: // OBJ_TRIMESH\r\n\t\t\t\t\t\tthis._cur_obj.type = Mesh.assetType;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4110: // TRI_VERTEXL\r\n\t\t\t\t\t\tthis.parseVertexList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4120: // TRI_FACELIST\r\n\t\t\t\t\t\tthis.parseFaceList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4140: // TRI_MAPPINGCOORDS\r\n\t\t\t\t\t\tthis.parseUVList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4130: // Face materials\r\n\t\t\t\t\t\tthis.parseFaceMaterialList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4160: // Transform\r\n\t\t\t\t\t\tthis._cur_obj.transform = this.readTransform();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0xB002: // Object animation (including pivot)\r\n\t\t\t\t\t\tthis.parseObjectAnimation(end);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4150: // Smoothing groups\r\n\t\t\t\t\t\tthis.parseSmoothingGroups();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// Skip this (unknown) chunk\r\n\t\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Pause parsing if there were any dependencies found during this\r\n\t\t\t\t// iteration (i.e. if there are any dependencies that need to be\r\n\t\t\t\t// retrieved at this time.)\r\n\t\t\t\tif (this.dependencies.length) {\r\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// More parsing is required if the entire byte array has not yet\r\n\t\t// been read, or if there is a currently non-finalized object in\r\n\t\t// the pipeline.\r\n\t\tif (this._byteData.getBytesAvailable() || this._cur_obj || this._cur_mat) {\r\n\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t} else {\r\n\t\t\tvar name:string;\r\n\r\n\t\t\t// Finalize any remaining objects before ending.\r\n\t\t\tfor (name in this._unfinalized_objects) {\r\n\t\t\t\tvar obj:DisplayObjectContainer;\r\n\t\t\t\tobj = this.constructObject(this._unfinalized_objects[name]);\r\n\t\t\t\tif (obj) {\r\n\t\t\t\t\t//add to the content property\r\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(obj, name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\t}\r\n\r\n\tprivate parseMaterial():MaterialVO\r\n\t{\r\n\t\tvar mat:MaterialVO;\r\n\r\n\t\tmat = new MaterialVO();\r\n\r\n\t\twhile (this._byteData.position < this._cur_mat_end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\t\t\tvar end:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\t\t\tend = this._byteData.position + (len - 6);\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xA000: // Material name\r\n\t\t\t\t\tmat.name = this.readNulTermstring();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA010: // Ambient color\r\n\t\t\t\t\tmat.ambientColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA020: // Diffuse color\r\n\t\t\t\t\tmat.diffuseColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA030: // Specular color\r\n\t\t\t\t\tmat.specularColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA081: // Two-sided, existence indicates \"true\"\r\n\t\t\t\t\tmat.twoSided = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA200: // Main (color) texture\r\n\t\t\t\t\tmat.colorMap = this.parseTexture(end);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA204: // Specular map\r\n\t\t\t\t\tmat.specularMap = this.parseTexture(end);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._byteData.position = end;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn mat;\r\n\t}\r\n\r\n\tprivate parseTexture(end:number /*uint*/):TextureVO\r\n\t{\r\n\t\tvar tex:TextureVO;\r\n\r\n\t\ttex = new TextureVO();\r\n\r\n\t\twhile (this._byteData.position < end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xA300:\r\n\t\t\t\t\ttex.url = this.readNulTermstring();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// Skip this unknown texture sub-chunk\r\n\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._textures[tex.url] = tex;\r\n\t\tthis._pAddDependency(tex.url, new URLRequest(tex.url));\r\n\r\n\t\treturn tex;\r\n\t}\r\n\r\n\tprivate parseVertexList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.verts = new Array<number>(count*3);\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.verts.length;\r\n\t\twhile (i < len) {\r\n\t\t\tvar x:number, y:number, z:number;\r\n\r\n\t\t\tx = this._byteData.readFloat();\r\n\t\t\ty = this._byteData.readFloat();\r\n\t\t\tz = this._byteData.readFloat();\r\n\r\n\t\t\tthis._cur_obj.verts[i++] = x;\r\n\t\t\tthis._cur_obj.verts[i++] = z;\r\n\t\t\tthis._cur_obj.verts[i++] = y;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseFaceList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.indices = new Array<number>(count*3) /*uint*/;\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.indices.length;\r\n\t\twhile (i < len) {\r\n\t\t\tvar i0:number /*uint*/, i1:number /*uint*/, i2:number /*uint*/;\r\n\r\n\t\t\ti0 = this._byteData.readUnsignedShort();\r\n\t\t\ti1 = this._byteData.readUnsignedShort();\r\n\t\t\ti2 = this._byteData.readUnsignedShort();\r\n\r\n\t\t\tthis._cur_obj.indices[i++] = i0;\r\n\t\t\tthis._cur_obj.indices[i++] = i2;\r\n\t\t\tthis._cur_obj.indices[i++] = i1;\r\n\r\n\t\t\t// Skip \"face info\", irrelevant in Away3D\r\n\t\t\tthis._byteData.position += 2;\r\n\t\t}\r\n\r\n\t\tthis._cur_obj.smoothingGroups = new Array<number>(count) /*uint*/;\r\n\t}\r\n\r\n\tprivate parseSmoothingGroups():void\r\n\t{\r\n\t\tvar len:number /*uint*/ = this._cur_obj.indices.length/3;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\t\twhile (i < len) {\r\n\t\t\tthis._cur_obj.smoothingGroups[i] = this._byteData.readUnsignedInt();\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseUVList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.uvs = new Array<number>(count*2);\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.uvs.length;\r\n\t\twhile (i < len) {\r\n\t\t\tthis._cur_obj.uvs[i++] = this._byteData.readFloat();\r\n\t\t\tthis._cur_obj.uvs[i++] = 1.0 - this._byteData.readFloat();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseFaceMaterialList():void\r\n\t{\r\n\t\tvar mat:string;\r\n\t\tvar count:number /*uint*/;\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar faces:Array<number> /*uint*/;\r\n\r\n\t\tmat = this.readNulTermstring();\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\r\n\t\tfaces = new Array<number>(count) /*uint*/;\r\n\t\ti = 0;\r\n\t\twhile (i < faces.length)\r\n\t\t\tfaces[i++] = this._byteData.readUnsignedShort();\r\n\r\n\t\tthis._cur_obj.materials.push(mat);\r\n\t\tthis._cur_obj.materialFaces[mat] = faces;\r\n\t}\r\n\r\n\tprivate parseObjectAnimation(end:number):void\r\n\t{\r\n\t\tvar vo:ObjectVO;\r\n\t\tvar obj:DisplayObjectContainer;\r\n\t\tvar pivot:Vector3D;\r\n\t\tvar name:string;\r\n\t\tvar hier:number /*uint*/;\r\n\r\n\t\t// Pivot defaults to origin\r\n\t\tpivot = new Vector3D;\r\n\r\n\t\twhile (this._byteData.position < end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xb010: // Name/hierarchy\r\n\t\t\t\t\tname = this.readNulTermstring();\r\n\t\t\t\t\tthis._byteData.position += 4;\r\n\t\t\t\t\thier = this._byteData.readShort();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xb013: // Pivot\r\n\t\t\t\t\tpivot.x = this._byteData.readFloat();\r\n\t\t\t\t\tpivot.z = this._byteData.readFloat();\r\n\t\t\t\t\tpivot.y = this._byteData.readFloat();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If name is \"$$$DUMMY\" this is an empty object (e.g. a container)\r\n\t\t// and will be ignored in this version of the parser\r\n\t\t// TODO: Implement containers in 3DS parser.\r\n\t\tif (name != '$$$DUMMY' && this._unfinalized_objects.hasOwnProperty(name)) {\r\n\t\t\tvo = this._unfinalized_objects[name];\r\n\t\t\tobj = this.constructObject(vo, pivot);\r\n\r\n\t\t\tif (obj) {\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(obj, vo.name);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tdelete this._unfinalized_objects[name];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate constructObject(obj:ObjectVO, pivot:Vector3D = null):DisplayObjectContainer\r\n\t{\r\n\t\tif (obj.type == Mesh.assetType) {\r\n\t\t\tvar i:number /*uint*/;\r\n\t\t\tvar sub:TriangleSubGeometry;\r\n\t\t\tvar geom:Geometry;\r\n\t\t\tvar mat:MaterialBase;\r\n\t\t\tvar mesh:Mesh;\r\n\t\t\tvar mtx:Matrix3D;\r\n\t\t\tvar vertices:Array<VertexVO>;\r\n\t\t\tvar faces:Array<FaceVO>;\r\n\r\n\t\t\tif (obj.materials.length > 1)\r\n\t\t\t\tconsole.log(\"The Away3D 3DS parser does not support multiple materials per mesh at this point.\");\r\n\r\n\t\t\t// Ignore empty objects\r\n\t\t\tif (!obj.indices || obj.indices.length == 0)\r\n\t\t\t\treturn null;\r\n\r\n\t\t\tvertices = new Array<VertexVO>(obj.verts.length/3);\r\n\t\t\tfaces = new Array<FaceVO>(obj.indices.length/3);\r\n\r\n\t\t\tthis.prepareData(vertices, faces, obj);\r\n\r\n\t\t\tif (this._useSmoothingGroups)\r\n\t\t\t\tthis.applySmoothGroups(vertices, faces);\r\n\r\n\t\t\tobj.verts = new Array<number>(vertices.length*3);\r\n\t\t\tfor (i = 0; i < vertices.length; i++) {\r\n\t\t\t\tobj.verts[i*3] = vertices[i].x;\r\n\t\t\t\tobj.verts[i*3 + 1] = vertices[i].y;\r\n\t\t\t\tobj.verts[i*3 + 2] = vertices[i].z;\r\n\t\t\t}\r\n\t\t\tobj.indices = new Array<number>(faces.length*3) /*uint*/;\r\n\r\n\t\t\tfor (i = 0; i < faces.length; i++) {\r\n\t\t\t\tobj.indices[i*3] = faces[i].a;\r\n\t\t\t\tobj.indices[i*3 + 1] = faces[i].b;\r\n\t\t\t\tobj.indices[i*3 + 2] = faces[i].c;\r\n\t\t\t}\r\n\r\n\t\t\tif (obj.uvs) {\r\n\t\t\t\t// If the object had UVs to start with, use UVs generated by\r\n\t\t\t\t// smoothing group splitting algorithm. Otherwise those UVs\r\n\t\t\t\t// will be nonsense and should be skipped.\r\n\t\t\t\tobj.uvs = new Array<number>(vertices.length*2);\r\n\t\t\t\tfor (i = 0; i < vertices.length; i++) {\r\n\t\t\t\t\tobj.uvs[i*2] = vertices[i].u;\r\n\t\t\t\t\tobj.uvs[i*2 + 1] = vertices[i].v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tgeom = new Geometry();\r\n\r\n\t\t\t// Construct sub-geometries (potentially splitting buffers)\r\n\t\t\t// and add them to geometry.\r\n\t\t\tsub = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\tsub.setIndices(obj.indices);\r\n\t\t\tsub.setPositions(obj.verts);\r\n\t\t\tsub.setUVs(obj.uvs);\r\n\r\n\t\t\tgeom.addSubGeometry(sub);\r\n\r\n\t\t\tif (obj.materials.length > 0) {\r\n\t\t\t\tvar mname:string;\r\n\t\t\t\tmname = obj.materials[0];\r\n\t\t\t\tmat = this._materials[mname].material;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply pivot translation to geometry if a pivot was\r\n\t\t\t// found while parsing the keyframe chunk earlier.\r\n\t\t\tif (pivot) {\r\n\t\t\t\tif (obj.transform) {\r\n\t\t\t\t\t// If a transform was found while parsing the\r\n\t\t\t\t\t// object chunk, use it to find the local pivot vector\r\n\t\t\t\t\tvar dat:Array<number> = obj.transform.concat();\r\n\t\t\t\t\tdat[12] = 0;\r\n\t\t\t\t\tdat[13] = 0;\r\n\t\t\t\t\tdat[14] = 0;\r\n\t\t\t\t\tmtx = new Matrix3D(dat);\r\n\t\t\t\t\tpivot = mtx.transformVector(pivot);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpivot.scaleBy(-1);\r\n\r\n\t\t\t\tmtx = new Matrix3D();\r\n\t\t\t\tmtx.appendTranslation(pivot.x, pivot.y, pivot.z);\r\n\t\t\t\tgeom.applyTransformation(mtx);\r\n\t\t\t}\r\n\r\n\t\t\t// Apply transformation to geometry if a transformation\r\n\t\t\t// was found while parsing the object chunk earlier.\r\n\t\t\tif (obj.transform) {\r\n\t\t\t\tmtx = new Matrix3D(obj.transform);\r\n\t\t\t\tmtx.invert();\r\n\t\t\t\tgeom.applyTransformation(mtx);\r\n\t\t\t}\r\n\r\n\t\t\t// Final transform applied to geometry. Finalize the geometry,\r\n\t\t\t// which will no longer be modified after this point.\r\n\t\t\tthis._pFinalizeAsset(geom, obj.name.concat('_geom'));\r\n\r\n\t\t\t// Build mesh and return it\r\n\t\t\tmesh = new Mesh(geom, mat);\r\n\t\t\tmesh.transform.matrix3D = new Matrix3D(obj.transform);\r\n\t\t\treturn mesh;\r\n\t\t}\r\n\r\n\t\t// If reached, unknown\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate prepareData(vertices:Array<VertexVO>, faces:Array<FaceVO>, obj:ObjectVO):void\r\n\t{\r\n\t\t// convert raw ObjectVO's data to structured VertexVO and FaceVO\r\n\t\tvar i:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar k:number /*int*/;\r\n\t\tvar len:number /*int*/ = obj.verts.length;\r\n\t\tfor (i = 0, j = 0, k = 0; i < len;) {\r\n\t\t\tvar v:VertexVO = new VertexVO;\r\n\t\t\tv.x = obj.verts[i++];\r\n\t\t\tv.y = obj.verts[i++];\r\n\t\t\tv.z = obj.verts[i++];\r\n\t\t\tif (obj.uvs) {\r\n\t\t\t\tv.u = obj.uvs[j++];\r\n\t\t\t\tv.v = obj.uvs[j++];\r\n\t\t\t}\r\n\t\t\tvertices[k++] = v;\r\n\t\t}\r\n\t\tlen = obj.indices.length;\r\n\t\tfor (i = 0, k = 0; i < len;) {\r\n\t\t\tvar f:FaceVO = new FaceVO();\r\n\t\t\tf.a = obj.indices[i++];\r\n\t\t\tf.b = obj.indices[i++];\r\n\t\t\tf.c = obj.indices[i++];\r\n\t\t\tf.smoothGroup = obj.smoothingGroups[k] || 0;\r\n\t\t\tfaces[k++] = f;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate applySmoothGroups(vertices:Array<VertexVO>, faces:Array<FaceVO>):void\r\n\t{\r\n\t\t// clone vertices according to following rule:\r\n\t\t// clone if vertex's in faces from groups 1+2 and 3\r\n\t\t// don't clone if vertex's in faces from groups 1+2, 3 and 1+3\r\n\r\n\t\tvar i:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar k:number /*int*/;\r\n\t\tvar l:number /*int*/;\r\n\t\tvar len:number /*int*/;\r\n\t\tvar numVerts:number /*uint*/ = vertices.length;\r\n\t\tvar numFaces:number /*uint*/ = faces.length;\r\n\r\n\t\t// extract groups data for vertices\r\n\t\tvar vGroups:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\r\n\t\tfor (i = 0; i < numVerts; i++)\r\n\t\t\tvGroups[i] = new Array<number>() /*uint*/;\r\n\t\tfor (i = 0; i < numFaces; i++) {\r\n\t\t\tvar face:FaceVO = faces[i];\r\n\t\t\tfor (j = 0; j < 3; j++) {\r\n\t\t\t\tvar groups:Array<number> /*uint*/ = vGroups[(j == 0)? face.a : ((j == 1)? face.b : face.c)];\r\n\t\t\t\tvar group:number /*uint*/ = face.smoothGroup;\r\n\t\t\t\tfor (k = groups.length - 1; k >= 0; k--) {\r\n\t\t\t\t\tif ((group & groups[k]) > 0) {\r\n\t\t\t\t\t\tgroup |= groups[k];\r\n\t\t\t\t\t\tgroups.splice(k, 1);\r\n\t\t\t\t\t\tk = groups.length - 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tgroups.push(group);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// clone vertices\r\n\t\tvar vClones:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\r\n\t\tfor (i = 0; i < numVerts; i++) {\r\n\t\t\tif ((len = vGroups[i].length) < 1)\r\n\t\t\t\tcontinue;\r\n\t\t\tvar clones:Array<number> /*uint*/ = new Array<number>(len) /*uint*/;\r\n\t\t\tvClones[i] = clones;\r\n\t\t\tclones[0] = i;\r\n\t\t\tvar v0:VertexVO = vertices[i];\r\n\t\t\tfor (j = 1; j < len; j++) {\r\n\t\t\t\tvar v1:VertexVO = new VertexVO;\r\n\t\t\t\tv1.x = v0.x;\r\n\t\t\t\tv1.y = v0.y;\r\n\t\t\t\tv1.z = v0.z;\r\n\t\t\t\tv1.u = v0.u;\r\n\t\t\t\tv1.v = v0.v;\r\n\t\t\t\tclones[j] = vertices.length;\r\n\t\t\t\tvertices.push(v1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tnumVerts = vertices.length;\r\n\r\n\t\tfor (i = 0; i < numFaces; i++) {\r\n\t\t\tface = faces[i];\r\n\t\t\tgroup = face.smoothGroup;\r\n\t\t\tfor (j = 0; j < 3; j++) {\r\n\t\t\t\tk = (j == 0)? face.a : ((j == 1)? face.b : face.c);\r\n\t\t\t\tgroups = vGroups[k];\r\n\t\t\t\tlen = groups.length;\r\n\t\t\t\tclones = vClones[k];\r\n\t\t\t\tfor (l = 0; l < len; l++) {\r\n\t\t\t\t\tif (((group == 0) && (groups[l] == 0)) || ((group & groups[l]) > 0)) {\r\n\t\t\t\t\t\tvar index:number /*uint*/ = clones[l];\r\n\t\t\t\t\t\tif (group == 0) {\r\n\t\t\t\t\t\t\t// vertex is unique if no smoothGroup found\r\n\t\t\t\t\t\t\tgroups.splice(l, 1);\r\n\t\t\t\t\t\t\tclones.splice(l, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (j == 0)\r\n\t\t\t\t\t\t\tface.a = index; else if (j == 1)\r\n\t\t\t\t\t\t\tface.b = index; else\r\n\t\t\t\t\t\t\tface.c = index;\r\n\t\t\t\t\t\tl = len;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate finalizeCurrentMaterial():void\r\n\t{\r\n\t\tvar mat:MethodMaterial;\r\n\r\n\t\tif (this._cur_mat.colorMap)\r\n\t\t\tmat = new MethodMaterial(this._cur_mat.colorMap.texture || DefaultMaterialManager.getDefaultTexture());\r\n\t\telse\r\n\t\t\tmat = new MethodMaterial(this._cur_mat.ambientColor);\r\n\r\n\t\tmat.diffuseColor = this._cur_mat.diffuseColor;\r\n\t\tmat.specularColor = this._cur_mat.specularColor;\r\n\r\n\t\tif (this.materialMode >= 2)\r\n\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS\r\n\r\n\t\tmat.bothSides = this._cur_mat.twoSided;\r\n\r\n\t\tthis._pFinalizeAsset(mat, this._cur_mat.name);\r\n\r\n\t\tthis._materials[this._cur_mat.name] = this._cur_mat;\r\n\t\tthis._cur_mat.material = mat;\r\n\r\n\t\tthis._cur_mat = null;\r\n\t}\r\n\r\n\tprivate readNulTermstring():string\r\n\t{\r\n\t\tvar chr:number /*int*/;\r\n\t\tvar str:string = \"\";\r\n\r\n\t\twhile ((chr = this._byteData.readUnsignedByte()) > 0)\r\n\t\t\tstr += String.fromCharCode(chr);\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\tprivate readTransform():Array<number>\r\n\t{\r\n\t\tvar data:Array<number>;\r\n\r\n\t\tdata = new Array<number>(16);\r\n\r\n\t\t// X axis\r\n\t\tdata[0] = this._byteData.readFloat(); // X\r\n\t\tdata[2] = this._byteData.readFloat(); // Z\r\n\t\tdata[1] = this._byteData.readFloat(); // Y\r\n\t\tdata[3] = 0;\r\n\r\n\t\t// Z axis\r\n\t\tdata[8] = this._byteData.readFloat(); // X\r\n\t\tdata[10] = this._byteData.readFloat(); // Z\r\n\t\tdata[9] = this._byteData.readFloat(); // Y\r\n\t\tdata[11] = 0;\r\n\r\n\t\t// Y Axis\r\n\t\tdata[4] = this._byteData.readFloat(); // X\r\n\t\tdata[6] = this._byteData.readFloat(); // Z\r\n\t\tdata[5] = this._byteData.readFloat(); // Y\r\n\t\tdata[7] = 0;\r\n\r\n\t\t// Translation\r\n\t\tdata[12] = this._byteData.readFloat(); // X\r\n\t\tdata[14] = this._byteData.readFloat(); // Z\r\n\t\tdata[13] = this._byteData.readFloat(); // Y\r\n\t\tdata[15] = 1;\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tprivate readColor():number /*int*/\r\n\t{\r\n\t\tvar cid:number /*int*/;\r\n\t\tvar len:number /*int*/;\r\n\t\tvar r:number /*int*/, g:number /*int*/, b:number /*int*/;\r\n\r\n\t\tcid = this._byteData.readUnsignedShort();\r\n\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\tswitch (cid) {\r\n\t\t\tcase 0x0010: // Floats\r\n\t\t\t\tr = this._byteData.readFloat()*255;\r\n\t\t\t\tg = this._byteData.readFloat()*255;\r\n\t\t\t\tb = this._byteData.readFloat()*255;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0x0011: // 24-bit color\r\n\t\t\t\tr = this._byteData.readUnsignedByte();\r\n\t\t\t\tg = this._byteData.readUnsignedByte();\r\n\t\t\t\tb = this._byteData.readUnsignedByte();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn (r << 16) | (g << 8) | b;\r\n\t}\r\n}\r\n\r\nexport = Max3DSParser;\r\n\r\n/**\r\n *\r\n */\r\nclass FaceVO\r\n{\r\n\tpublic a:number /*int*/;\r\n\tpublic b:number /*int*/;\r\n\tpublic c:number /*int*/;\r\n\tpublic smoothGroup:number /*int*/;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass MaterialVO\r\n{\r\n\tpublic name:string;\r\n\tpublic ambientColor:number /*int*/;\r\n\tpublic diffuseColor:number /*int*/;\r\n\tpublic specularColor:number /*int*/;\r\n\tpublic twoSided:boolean;\r\n\tpublic colorMap:TextureVO;\r\n\tpublic specularMap:TextureVO;\r\n\tpublic material:MaterialBase;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass ObjectVO\r\n{\r\n\tpublic name:string;\r\n\tpublic type:string;\r\n\tpublic pivotX:number;\r\n\tpublic pivotY:number;\r\n\tpublic pivotZ:number;\r\n\tpublic transform:Array<number>;\r\n\tpublic verts:Array<number>;\r\n\tpublic indices:Array<number> /*int*/;\r\n\tpublic uvs:Array<number>;\r\n\tpublic materialFaces:Object;\r\n\tpublic materials:Array<string>;\r\n\tpublic smoothingGroups:Array<number> /*int*/;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass TextureVO\r\n{\r\n\tpublic url:string;\r\n\tpublic texture:Single2DTexture;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass VertexVO\r\n{\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n\tpublic z:number;\r\n\tpublic u:number;\r\n\tpublic v:number;\r\n\tpublic normal:Vector3D;\r\n\tpublic tangent:Vector3D;\r\n}",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\n\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\r\n\r\n/**\r\n * OBJParser provides a parser for the OBJ data type.\r\n */\r\nclass OBJParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _charIndex:number;\r\n\tprivate _oldIndex:number;\r\n\tprivate _stringLength:number;\r\n\tprivate _currentObject:ObjectGroup;\r\n\tprivate _currentGroup:Group;\r\n\tprivate _currentMaterialGroup:MaterialGroup;\r\n\tprivate _objects:Array<ObjectGroup>;\r\n\tprivate _materialIDs:string[];\r\n\tprivate _materialLoaded:Array<LoadedMaterial>;\r\n\tprivate _materialSpecularData:Array<SpecularData>;\r\n\tprivate _meshes:Array<Mesh>;\r\n\tprivate _lastMtlID:string;\r\n\tprivate _objectIndex:number;\r\n\tprivate _realIndices;\r\n\tprivate _vertexIndex:number;\r\n\tprivate _vertices:Array<Vertex>;\r\n\tprivate _vertexNormals:Array<Vertex>;\r\n\tprivate _uvs:Array<UV>;\r\n\tprivate _scale:number;\r\n\tprivate _mtlLib:boolean;\r\n\tprivate _mtlLibLoaded:boolean = true;\r\n\tprivate _activeMaterialID:string = \"\";\r\n\r\n\t/**\r\n\t * Creates a new OBJParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(scale:number = 1)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._scale = scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Scaling factor applied directly to vertices data\r\n\t * @param value The scaling factor.\r\n\t */\r\n\tpublic set scale(value:number)\r\n\t{\r\n\t\tthis._scale = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"obj\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\tvar content:string = ParserUtils.toString(data);\r\n\t\tvar hasV:boolean = false;\r\n\t\tvar hasF:boolean = false;\r\n\r\n\t\tif (content) {\r\n\t\t\thasV = content.indexOf(\"\\nv \") != -1;\r\n\t\t\thasF = content.indexOf(\"\\nf \") != -1;\r\n\t\t}\r\n\r\n\t\treturn hasV && hasF;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.id == 'mtl') {\r\n\t\t\tvar str:string = ParserUtils.toString(resourceDependency.data);\r\n\t\t\tthis.parseMtl(str);\r\n\r\n\t\t} else {\r\n\t\t\tvar asset:IAsset;\r\n\r\n\t\t\tif (resourceDependency.assets.length != 1) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tasset = resourceDependency.assets[0];\r\n\r\n\t\t\tif (asset.isAsset(BitmapImage2D)) {\r\n\r\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\t\tlm.materialID = resourceDependency.id;\r\n\t\t\t\tlm.texture = new Single2DTexture(<BitmapImage2D> asset);\r\n\r\n\t\t\t\tthis._materialLoaded.push(lm);\r\n\r\n\t\t\t\tif (this._meshes.length > 0) {\r\n\t\t\t\t\tthis.applyMaterial(lm);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.id == \"mtl\") {\r\n\t\t\tthis._mtlLib = false;\r\n\t\t\tthis._mtlLibLoaded = false;\r\n\t\t} else {\r\n\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\tlm.materialID = resourceDependency.id;\r\n\t\t\tthis._materialLoaded.push(lm);\r\n\t\t}\r\n\r\n\t\tif (this._meshes.length > 0)\r\n\t\t\tthis.applyMaterial(lm);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar line:string;\r\n\t\tvar creturn:string = String.fromCharCode(10);\r\n\t\tvar trunk;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\t// Merge linebreaks that are immediately preceeded by\r\n\t\t\t// the \"escape\" backward slash into single lines.\r\n\t\t\tthis._textData = this._textData.replace(/\\\\[\\r\\n]+\\s*/gm, ' ');\r\n\t\t}\r\n\r\n\t\tif (this._textData.indexOf(creturn) == -1)\r\n\t\t\tcreturn = String.fromCharCode(13);\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._startedParsing = true;\r\n\t\t\tthis._vertices = new Array<Vertex>();\r\n\t\t\tthis._vertexNormals = new Array<Vertex>();\r\n\t\t\tthis._materialIDs = new Array<string>();\r\n\t\t\tthis._materialLoaded = new Array<LoadedMaterial>();\r\n\t\t\tthis._meshes = new Array<Mesh>();\r\n\t\t\tthis._uvs = new Array<UV>();\r\n\t\t\tthis._stringLength = this._textData.length;\r\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, 0);\r\n\t\t\tthis._oldIndex = 0;\r\n\t\t\tthis._objects = new Array<ObjectGroup>();\r\n\t\t\tthis._objectIndex = 0;\r\n\t\t}\r\n\r\n\t\twhile (this._charIndex < this._stringLength && this._pHasTime()) {\r\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, this._oldIndex);\r\n\r\n\t\t\tif (this._charIndex == -1)\r\n\t\t\t\tthis._charIndex = this._stringLength;\r\n\r\n\t\t\tline = this._textData.substring(this._oldIndex, this._charIndex);\r\n\t\t\tline = line.split('\\r').join(\"\");\r\n\t\t\tline = line.replace(\"  \", \" \");\r\n\t\t\ttrunk = line.split(\" \");\r\n\t\t\tthis._oldIndex = this._charIndex + 1;\r\n\t\t\tthis.parseLine(trunk);\r\n\r\n\t\t\t// If whatever was parsed on this line resulted in the\r\n\t\t\t// parsing being paused to retrieve dependencies, break\r\n\t\t\t// here and do not continue parsing until un-paused.\r\n\t\t\tif (this.parsingPaused) {\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._charIndex >= this._stringLength) {\r\n\r\n\t\t\tif (this._mtlLib && !this._mtlLibLoaded) {\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\r\n\t\t\tthis.translate();\r\n\t\t\tthis.applyMaterials();\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a single line in the OBJ file.\r\n\t */\r\n\tprivate parseLine(trunk)\r\n\t{\r\n\t\tswitch (trunk[0]) {\r\n\r\n\t\t\tcase \"mtllib\":\r\n\r\n\t\t\t\tthis._mtlLib = true;\r\n\t\t\t\tthis._mtlLibLoaded = false;\r\n\t\t\t\tthis.loadMtl(trunk[1]);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"g\":\r\n\r\n\t\t\t\tthis.createGroup(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"o\":\r\n\r\n\t\t\t\tthis.createObject(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"usemtl\":\r\n\r\n\t\t\t\tif (this._mtlLib) {\r\n\r\n\t\t\t\t\tif (!trunk[1])\r\n\t\t\t\t\t\ttrunk[1] = \"def000\";\r\n\r\n\t\t\t\t\tthis._materialIDs.push(trunk[1]);\r\n\t\t\t\t\tthis._activeMaterialID = trunk[1];\r\n\r\n\t\t\t\t\tif (this._currentGroup)\r\n\t\t\t\t\t\tthis._currentGroup.materialID = this._activeMaterialID;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"v\":\r\n\r\n\t\t\t\tthis.parseVertex(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"vt\":\r\n\r\n\t\t\t\tthis.parseUV(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"vn\":\r\n\r\n\t\t\t\tthis.parseVertexNormal(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"f\":\r\n\r\n\t\t\t\tthis.parseFace(trunk);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the parsed data into an Away3D scenegraph structure\r\n\t */\r\n\tprivate translate()\r\n\t{\r\n\t\tfor (var objIndex:number = 0; objIndex < this._objects.length; ++objIndex) {\r\n\t\t\tvar groups:Array<Group> = this._objects[objIndex].groups;\r\n\t\t\tvar numGroups:number = groups.length;\r\n\t\t\tvar materialGroups:Array<MaterialGroup>;\r\n\t\t\tvar numMaterialGroups:number;\r\n\t\t\tvar geometry:Geometry;\r\n\t\t\tvar mesh:Mesh;\r\n\r\n\t\t\tvar m:number;\r\n\t\t\tvar sm:number;\r\n\t\t\tvar bmMaterial:MethodMaterial;\r\n\r\n\t\t\tfor (var g:number = 0; g < numGroups; ++g) {\r\n\t\t\t\tgeometry = new Geometry();\r\n\t\t\t\tmaterialGroups = groups[g].materialGroups;\r\n\t\t\t\tnumMaterialGroups = materialGroups.length;\r\n\r\n\t\t\t\tfor (m = 0; m < numMaterialGroups; ++m)\r\n\t\t\t\t\tthis.translateMaterialGroup(materialGroups[m], geometry);\r\n\r\n\t\t\t\tif (geometry.subGeometries.length == 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Finalize and force type-based name\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> geometry);//, \"\");\r\n\r\n\t\t\t\tbmMaterial = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\r\n\t\t\t\t//check for multipass\r\n\t\t\t\tif (this.materialMode >= 2)\r\n\t\t\t\t\tbmMaterial.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\tmesh = new Mesh(geometry, bmMaterial);\r\n\r\n\t\t\t\tif (this._objects[objIndex].name) {\r\n\t\t\t\t\t// this is a full independent object ('o' tag in OBJ file)\r\n\t\t\t\t\tmesh.name = this._objects[objIndex].name;\r\n\r\n\t\t\t\t} else if (groups[g].name) {\r\n\r\n\t\t\t\t\t// this is a group so the sub groups contain the actual mesh object names ('g' tag in OBJ file)\r\n\t\t\t\t\tmesh.name = groups[g].name;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// No name stored. Use empty string which will force it\r\n\t\t\t\t\t// to be overridden by finalizeAsset() to type default.\r\n\t\t\t\t\tmesh.name = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._meshes.push(mesh);\r\n\r\n\t\t\t\tif (groups[g].materialID != \"\")\r\n\t\t\t\t\tbmMaterial.name = groups[g].materialID + \"~\" + mesh.name; else\r\n\t\t\t\t\tbmMaterial.name = this._lastMtlID + \"~\" + mesh.name;\r\n\r\n\t\t\t\tif (mesh.subMeshes.length > 1) {\r\n\t\t\t\t\tfor (sm = 1; sm < mesh.subMeshes.length; ++sm)\r\n\t\t\t\t\t\tmesh.subMeshes[sm].material = bmMaterial;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> mesh);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Translates an obj's material group to a subgeometry.\r\n\t * @param materialGroup The material group data to convert.\r\n\t * @param geometry The Geometry to contain the converted SubGeometry.\r\n\t */\r\n\tprivate translateMaterialGroup(materialGroup:MaterialGroup, geometry:Geometry)\r\n\t{\r\n\t\tvar faces:Array<FaceData> = materialGroup.faces;\r\n\t\tvar face:FaceData;\r\n\t\tvar numFaces:number = faces.length;\r\n\t\tvar numVerts:number;\r\n\t\tvar sub:TriangleSubGeometry;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\tvar normals:Array<number> = new Array<number>();\r\n\t\tvar indices:Array<number> /*uint*/ = new Array<number>();\r\n\r\n\t\tthis._realIndices = [];\r\n\t\tthis._vertexIndex = 0;\r\n\r\n\t\tvar j:number;\r\n\t\tfor (var i:number = 0; i < numFaces; ++i) {\r\n\r\n\t\t\tface = faces[i];\r\n\t\t\tnumVerts = face.indexIds.length - 1;\r\n\r\n\t\t\tfor (j = 1; j < numVerts; ++j) {\r\n\r\n\t\t\t\tthis.translateVertexData(face, j, vertices, uvs, indices, normals);\r\n\t\t\t\tthis.translateVertexData(face, 0, vertices, uvs, indices, normals);\r\n\t\t\t\tthis.translateVertexData(face, j + 1, vertices, uvs, indices, normals);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (vertices.length > 0) {\r\n\t\t\tsub = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\tsub.autoDeriveNormals = normals.length? false : true;\r\n\t\t\tsub.setIndices(indices);\r\n\t\t\tsub.setPositions(vertices);\r\n\t\t\tsub.setNormals(normals);\r\n\t\t\tsub.setUVs(uvs);\r\n\r\n\t\t\tgeometry.addSubGeometry(sub);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate translateVertexData(face:FaceData, vertexIndex:number, vertices:Array<number>, uvs:Array<number>, indices:Array<number> /*uint*/, normals:Array<number>)\r\n\t{\r\n\t\tvar index:number;\r\n\t\tvar vertex:Vertex;\r\n\t\tvar vertexNormal:Vertex;\r\n\t\tvar uv:UV;\r\n\r\n\t\tif (!this._realIndices[face.indexIds[vertexIndex]]) {\r\n\r\n\t\t\tindex = this._vertexIndex;\r\n\t\t\tthis._realIndices[face.indexIds[vertexIndex]] = ++this._vertexIndex;\r\n\t\t\tvertex = this._vertices[face.vertexIndices[vertexIndex] - 1];\r\n\t\t\tvertices.push(vertex.x*this._scale, vertex.y*this._scale, vertex.z*this._scale);\r\n\r\n\t\t\tif (face.normalIndices.length > 0) {\r\n\t\t\t\tvertexNormal = this._vertexNormals[face.normalIndices[vertexIndex] - 1];\r\n\t\t\t\tnormals.push(vertexNormal.x, vertexNormal.y, vertexNormal.z);\r\n\t\t\t}\r\n\r\n\t\t\tif (face.uvIndices.length > 0) {\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tuv = this._uvs[face.uvIndices[vertexIndex] - 1];\r\n\t\t\t\t\tuvs.push(uv.u, uv.v);\r\n\r\n\t\t\t\t} catch (e) {\r\n\r\n\t\t\t\t\tswitch (vertexIndex) {\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\tuvs.push(0, 1);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\tuvs.push(.5, 0);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\tuvs.push(1, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tindex = this._realIndices[face.indexIds[vertexIndex]] - 1;\r\n\t\t}\r\n\r\n\t\tindices.push(index);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new object group.\r\n\t * @param trunk The data block containing the object tag and its parameters\r\n\t */\r\n\tprivate createObject(trunk)\r\n\t{\r\n\t\tthis._currentGroup = null;\r\n\t\tthis._currentMaterialGroup = null;\r\n\t\tthis._objects.push(this._currentObject = new ObjectGroup());\r\n\r\n\t\tif (trunk)\r\n\t\t\tthis._currentObject.name = trunk[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new group.\r\n\t * @param trunk The data block containing the group tag and its parameters\r\n\t */\r\n\tprivate createGroup(trunk)\r\n\t{\r\n\t\tif (!this._currentObject)\r\n\t\t\tthis.createObject(null);\r\n\t\tthis._currentGroup = new Group();\r\n\r\n\t\tthis._currentGroup.materialID = this._activeMaterialID;\r\n\r\n\t\tif (trunk)\r\n\t\t\tthis._currentGroup.name = trunk[1];\r\n\t\tthis._currentObject.groups.push(this._currentGroup);\r\n\r\n\t\tthis.createMaterialGroup(null);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new material group.\r\n\t * @param trunk The data block containing the material tag and its parameters\r\n\t */\r\n\tprivate createMaterialGroup(trunk)\r\n\t{\r\n\t\tthis._currentMaterialGroup = new MaterialGroup();\r\n\t\tif (trunk)\r\n\t\t\tthis._currentMaterialGroup.url = trunk[1];\r\n\t\tthis._currentGroup.materialGroups.push(this._currentMaterialGroup);\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next vertex coordinates.\r\n\t * @param trunk The data block containing the vertex tag and its parameters\r\n\t */\r\n\tprivate parseVertex(trunk)\r\n\t{\r\n\t\t//for the very rare cases of other delimiters/charcodes seen in some obj files\r\n\r\n\t\tvar v1:number, v2:number , v3:number;\r\n\t\tif (trunk.length > 4) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\r\n\t\t\tv1 = <number> nTrunk[0];\r\n\t\t\tv2 = <number> nTrunk[1];\r\n\t\t\tv3 = <number> -nTrunk[2];\r\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\r\n\r\n\t\t} else {\r\n\t\t\tv1 = <number> parseFloat(trunk[1]);\r\n\t\t\tv2 = <number> parseFloat(trunk[2]);\r\n\t\t\tv3 = <number> -parseFloat(trunk[3]);\r\n\r\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next uv coordinates.\r\n\t * @param trunk The data block containing the uv tag and its parameters\r\n\t */\r\n\tprivate parseUV(trunk)\r\n\t{\r\n\t\tif (trunk.length > 3) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\t\t\tthis._uvs.push(new UV(nTrunk[0], 1 - nTrunk[1]));\r\n\r\n\t\t} else {\r\n\t\t\tthis._uvs.push(new UV(parseFloat(trunk[1]), 1 - parseFloat(trunk[2])));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next vertex normal coordinates.\r\n\t * @param trunk The data block containing the vertex normal tag and its parameters\r\n\t */\r\n\tprivate parseVertexNormal(trunk)\r\n\t{\r\n\t\tif (trunk.length > 4) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\t\t\tthis._vertexNormals.push(new Vertex(nTrunk[0], nTrunk[1], -nTrunk[2]));\r\n\r\n\t\t} else {\r\n\t\t\tthis._vertexNormals.push(new Vertex(parseFloat(trunk[1]), parseFloat(trunk[2]), -parseFloat(trunk[3])));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next face's indices.\r\n\t * @param trunk The data block containing the face tag and its parameters\r\n\t */\r\n\tprivate parseFace(trunk)\r\n\t{\r\n\t\tvar len:number = trunk.length;\r\n\t\tvar face:FaceData = new FaceData();\r\n\r\n\t\tif (!this._currentGroup) {\r\n\t\t\tthis.createGroup(null);\r\n\t\t}\r\n\r\n\t\tvar indices;\r\n\t\tfor (var i:number = 1; i < len; ++i) {\r\n\r\n\t\t\tif (trunk[i] == \"\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tindices = trunk[i].split(\"/\");\r\n\t\t\tface.vertexIndices.push(this.parseIndex(parseInt(indices[0]), this._vertices.length));\r\n\r\n\t\t\tif (indices[1] && String(indices[1]).length > 0)\r\n\t\t\t\tface.uvIndices.push(this.parseIndex(parseInt(indices[1]), this._uvs.length));\r\n\r\n\t\t\tif (indices[2] && String(indices[2]).length > 0)\r\n\t\t\t\tface.normalIndices.push(this.parseIndex(parseInt(indices[2]), this._vertexNormals.length));\r\n\r\n\t\t\tface.indexIds.push(trunk[i]);\r\n\t\t}\r\n\r\n\t\tthis._currentMaterialGroup.faces.push(face);\r\n\t}\r\n\r\n\t/**\r\n\t * This is a hack around negative face coords\r\n\t */\r\n\tprivate parseIndex(index:number, length:number):number\r\n\t{\r\n\t\tif (index < 0)\r\n\t\t\treturn index + length + 1; else\r\n\t\t\treturn index;\r\n\t}\r\n\r\n\tprivate parseMtl(data:string)\r\n\t{\r\n\t\tvar materialDefinitions = data.split('newmtl');\r\n\t\tvar lines;\r\n\t\tvar trunk;\r\n\t\tvar j:number;\r\n\r\n\t\tvar basicSpecularMethod:SpecularBasicMethod;\r\n\t\tvar useSpecular:boolean;\r\n\t\tvar useColor:boolean;\r\n\t\tvar diffuseColor:number;\r\n\t\tvar color:number;\r\n\t\tvar specularColor:number;\r\n\t\tvar specular:number;\r\n\t\tvar alpha:number;\r\n\t\tvar mapkd:string;\r\n\r\n\t\tfor (var i:number = 0; i < materialDefinitions.length; ++i) {\r\n\r\n\r\n\t\t\tlines = (materialDefinitions[i].split('\\r')).join(\"\").split('\\n');\r\n\t\t\t//lines = (materialDefinitions[i].split('\\r') as Array).join(\"\").split('\\n');\r\n\r\n\t\t\tif (lines.length == 1)\r\n\t\t\t\tlines = materialDefinitions[i].split(String.fromCharCode(13));\r\n\r\n\t\t\tdiffuseColor = color = specularColor = 0xFFFFFF;\r\n\t\t\tspecular = 0;\r\n\t\t\tuseSpecular = false;\r\n\t\t\tuseColor = false;\r\n\t\t\talpha = 1;\r\n\t\t\tmapkd = \"\";\r\n\r\n\t\t\tfor (j = 0; j < lines.length; ++j) {\r\n\r\n\t\t\t\tlines[j] = lines[j].replace(/\\s+$/, \"\");\r\n\r\n\t\t\t\tif (lines[j].substring(0, 1) != \"#\" && (j == 0 || lines[j] != \"\")) {\r\n\t\t\t\t\ttrunk = lines[j].split(\" \");\r\n\r\n\t\t\t\t\tif (String(trunk[0]).charCodeAt(0) == 9 || String(trunk[0]).charCodeAt(0) == 32)\r\n\t\t\t\t\t\ttrunk[0] = trunk[0].substring(1, trunk[0].length);\r\n\r\n\t\t\t\t\tif (j == 0) {\r\n\t\t\t\t\t\tthis._lastMtlID = trunk.join(\"\");\r\n\t\t\t\t\t\tthis._lastMtlID = (this._lastMtlID == \"\")? \"def000\" : this._lastMtlID;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tswitch (trunk[0]) {\r\n\r\n\t\t\t\t\t\t\tcase \"Ka\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3])))\r\n\t\t\t\t\t\t\t\t\tcolor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Ks\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\r\n\t\t\t\t\t\t\t\t\tspecularColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\t\tuseSpecular = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Ns\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\r\n\t\t\t\t\t\t\t\t\tspecular = Number(trunk[1])*0.001;\r\n\t\t\t\t\t\t\t\tif (specular == 0)\r\n\t\t\t\t\t\t\t\t\tuseSpecular = false;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Kd\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\r\n\t\t\t\t\t\t\t\t\tdiffuseColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\t\tuseColor = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"tr\":\r\n\t\t\t\t\t\t\tcase \"d\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\r\n\t\t\t\t\t\t\t\t\talpha = Number(trunk[1]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"map_Kd\":\r\n\t\t\t\t\t\t\t\tmapkd = this.parseMapKdString(trunk);\r\n\t\t\t\t\t\t\t\tmapkd = mapkd.replace(/\\\\/g, \"/\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (mapkd != \"\") {\r\n\r\n\t\t\t\tif (useSpecular) {\r\n\r\n\t\t\t\t\tbasicSpecularMethod = new SpecularBasicMethod();\r\n\t\t\t\t\tbasicSpecularMethod.specularColor = specularColor;\r\n\t\t\t\t\tbasicSpecularMethod.specular = specular;\r\n\r\n\t\t\t\t\tvar specularData:SpecularData = new SpecularData();\r\n\t\t\t\t\tspecularData.alpha = alpha;\r\n\t\t\t\t\tspecularData.basicSpecularMethod = basicSpecularMethod;\r\n\t\t\t\t\tspecularData.materialID = this._lastMtlID;\r\n\r\n\t\t\t\t\tif (!this._materialSpecularData)\r\n\t\t\t\t\t\tthis._materialSpecularData = new Array<SpecularData>();\r\n\r\n\t\t\t\t\tthis._materialSpecularData.push(specularData);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pAddDependency(this._lastMtlID, new URLRequest(mapkd));\r\n\r\n\t\t\t} else if (useColor && !isNaN(color)) {\r\n\r\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\t\tlm.materialID = this._lastMtlID;\r\n\r\n\t\t\t\tif (alpha == 0)\r\n\t\t\t\t\tconsole.log(\"Warning: an alpha value of 0 was found in mtl color tag (Tr or d) ref:\" + this._lastMtlID + \", mesh(es) using it will be invisible!\");\r\n\r\n\t\t\t\tvar cm:MethodMaterial;\r\n\r\n\t\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\t\tcm = new MethodMaterial(color);\r\n\r\n\t\t\t\t\tvar colorMat:MethodMaterial = <MethodMaterial> cm;\r\n\r\n\t\t\t\t\tcolorMat.alpha = alpha;\r\n\t\t\t\t\tcolorMat.diffuseColor = diffuseColor;\r\n\t\t\t\t\tcolorMat.repeat = true;\r\n\r\n\t\t\t\t\tif (useSpecular) {\r\n\t\t\t\t\t\tcolorMat.specularColor = specularColor;\r\n\t\t\t\t\t\tcolorMat.specular = specular;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcm = new MethodMaterial(color);\r\n\t\t\t\t\tcm.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\tvar colorMultiMat:MethodMaterial = <MethodMaterial> cm;\r\n\r\n\r\n\t\t\t\t\tcolorMultiMat.diffuseColor = diffuseColor;\r\n\t\t\t\t\tcolorMultiMat.repeat = true;\r\n\r\n\t\t\t\t\tif (useSpecular) {\r\n\t\t\t\t\t\tcolorMultiMat.specularColor = specularColor;\r\n\t\t\t\t\t\tcolorMultiMat.specular = specular;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlm.cm = cm;\r\n\r\n\t\t\t\tthis._materialLoaded.push(lm);\r\n\r\n\t\t\t\tif (this._meshes.length > 0)\r\n\t\t\t\t\tthis.applyMaterial(lm);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._mtlLibLoaded = true;\r\n\t}\r\n\r\n\tprivate parseMapKdString(trunk):string\r\n\t{\r\n\t\tvar url:string = \"\";\r\n\t\tvar i:number;\r\n\t\tvar breakflag:boolean;\r\n\r\n\t\tfor (i = 1; i < trunk.length;) {\r\n\t\t\tswitch (trunk[i]) {\r\n\t\t\t\tcase \"-blendu\":\r\n\t\t\t\tcase \"-blendv\":\r\n\t\t\t\tcase \"-cc\":\r\n\t\t\t\tcase \"-clamp\":\r\n\t\t\t\tcase \"-texres\":\r\n\t\t\t\t\ti += 2; //Skip ahead 1 attribute\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"-mm\":\r\n\t\t\t\t\ti += 3; //Skip ahead 2 attributes\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"-o\":\r\n\t\t\t\tcase \"-s\":\r\n\t\t\t\tcase \"-t\":\r\n\t\t\t\t\ti += 4; //Skip ahead 3 attributes\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreakflag = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (breakflag)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t//Reconstruct URL/filename\r\n\t\tfor (i; i < trunk.length; i++) {\r\n\t\t\turl += trunk[i];\r\n\t\t\turl += \" \";\r\n\t\t}\r\n\r\n\t\t//Remove the extraneous space and/or newline from the right side\r\n\t\turl = url.replace(/\\s+$/, \"\");\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\tprivate loadMtl(mtlurl:string)\r\n\t{\r\n\t\t// Add raw-data dependency to queue and load dependencies now,\r\n\t\t// which will pause the parsing in the meantime.\r\n\t\tthis._pAddDependency('mtl', new URLRequest(mtlurl), true);\r\n\t\tthis._pPauseAndRetrieveDependencies();//\r\n\t}\r\n\r\n\tprivate applyMaterial(lm:LoadedMaterial)\r\n\t{\r\n\t\tvar decomposeID;\r\n\t\tvar mesh:Mesh;\r\n\t\tvar tm:MethodMaterial;\r\n\t\tvar j:number;\r\n\t\tvar specularData:SpecularData;\r\n\r\n\t\tfor (var i:number = 0; i < this._meshes.length; ++i) {\r\n\t\t\tmesh = this._meshes[i];\r\n\t\t\tdecomposeID = mesh.material.name.split(\"~\");\r\n\r\n\t\t\tif (decomposeID[0] == lm.materialID) {\r\n\r\n\t\t\t\tif (lm.cm) {\r\n\t\t\t\t\tif (mesh.material)\r\n\t\t\t\t\t\tmesh.material = null;\r\n\t\t\t\t\tmesh.material = lm.cm;\r\n\r\n\t\t\t\t} else if (lm.texture) {\r\n\t\t\t\t\tif (this.materialMode < 2) { // if materialMode is 0 or 1, we create a SinglePass\r\n\t\t\t\t\t\ttm = <MethodMaterial > mesh.material;\r\n\r\n\t\t\t\t\t\ttm.texture = lm.texture;\r\n\t\t\t\t\t\ttm.color = lm.color;\r\n\t\t\t\t\t\ttm.alpha = lm.alpha;\r\n\t\t\t\t\t\ttm.repeat = true;\r\n\r\n\t\t\t\t\t\tif (lm.specularMethod) {\r\n\r\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\r\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\r\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\r\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\r\n\t\t\t\t\t\t\ttm.specularMethod = null;\r\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\r\n\r\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\r\n\r\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\r\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\r\n\r\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\r\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\r\n\t\t\t\t\t\t\t\t\ttm.alpha = specularData.alpha;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else { //if materialMode==2 this is a MultiPassTexture\r\n\t\t\t\t\t\ttm = <MethodMaterial> mesh.material;\r\n\t\t\t\t\t\ttm.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\t\ttm.texture = lm.texture;\r\n\t\t\t\t\t\ttm.color = lm.color;\r\n\t\t\t\t\t\ttm.repeat = true;\r\n\r\n\t\t\t\t\t\tif (lm.specularMethod) {\r\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\r\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\r\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\r\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\r\n\t\t\t\t\t\t\ttm.specularMethod = null;\r\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\r\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\r\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\r\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\r\n\r\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\r\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmesh.material.name = decomposeID[1]? decomposeID[1] : decomposeID[0];\r\n\t\t\t\tthis._meshes.splice(i, 1);\r\n\t\t\t\t--i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lm.cm || tm)\r\n\t\t\tthis._pFinalizeAsset(lm.cm || tm);\r\n\t}\r\n\r\n\tprivate applyMaterials()\r\n\t{\r\n\t\tif (this._materialLoaded.length == 0)\r\n\t\t\treturn;\r\n\r\n\t\tfor (var i:number = 0; i < this._materialLoaded.length; ++i)\r\n\t\t\tthis.applyMaterial(this._materialLoaded[i]);\r\n\t}\r\n}\r\n\r\nexport = OBJParser;\r\n\r\nclass ObjectGroup\r\n{\r\n\tpublic name:string;\r\n\tpublic groups:Group[] = new Array<Group>();\r\n}\r\n\r\nclass Group\r\n{\r\n\tpublic name:string;\r\n\tpublic materialID:string;\r\n\tpublic materialGroups:MaterialGroup[] = new Array<MaterialGroup>();\r\n}\r\n\r\nclass MaterialGroup\r\n{\r\n\tpublic url:string;\r\n\tpublic faces:FaceData[] = new Array<FaceData>();\r\n}\r\n\r\nclass SpecularData\r\n{\r\n\tpublic materialID:string;\r\n\tpublic basicSpecularMethod:SpecularBasicMethod;\r\n\tpublic color:number = 0xFFFFFF;\r\n\tpublic alpha:number = 1;\r\n}\r\n\r\nclass LoadedMaterial\r\n{\r\n\tpublic materialID:string;\r\n\tpublic texture:Single2DTexture;\r\n\tpublic cm:MaterialBase;\r\n\tpublic specularMethod:SpecularBasicMethod;\r\n\tpublic color:number = 0xFFFFFF;\r\n\tpublic alpha:number = 1;\r\n}\r\n\r\nclass FaceData\r\n{\r\n\tpublic vertexIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic uvIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic normalIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic indexIds:string[] = new Array<string>(); // used for real index lookups\r\n}\r\n\r\n/**\r\n* Texture coordinates value object.\r\n*/\r\nclass UV\r\n{\r\n\tprivate _u:number;\r\n\tprivate _v:number;\r\n\r\n\t/**\r\n\t * Creates a new <code>UV</code> object.\r\n\t *\r\n\t * @param    u        [optional]    The horizontal coordinate of the texture value. Defaults to 0.\r\n\t * @param    v        [optional]    The vertical coordinate of the texture value. Defaults to 0.\r\n\t */\r\n\tconstructor(u:number = 0, v:number = 0)\r\n\t{\r\n\t\tthis._u = u;\r\n\t\tthis._v = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the vertical coordinate of the texture value.\r\n\t */\r\n\tpublic get v():number\r\n\t{\r\n\t\treturn this._v;\r\n\t}\r\n\r\n\tpublic set v(value:number)\r\n\t{\r\n\t\tthis._v = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the horizontal coordinate of the texture value.\r\n\t */\r\n\tpublic get u():number\r\n\t{\r\n\t\treturn this._u;\r\n\t}\r\n\r\n\tpublic set u(value:number)\r\n\t{\r\n\t\tthis._u = value;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new UV value Object\r\n\t */\r\n\tpublic clone():UV\r\n\t{\r\n\t\treturn new UV(this._u, this._v);\r\n\t}\r\n\r\n\t/**\r\n\t * returns the value object as a string for trace/debug purpose\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn this._u + \",\" + this._v;\r\n\t}\r\n}\r\n\r\nclass Vertex\r\n{\r\n\tprivate _x:number;\r\n\tprivate _y:number;\r\n\tprivate _z:number;\r\n\tprivate _index:number;\r\n\r\n\t/**\r\n\t * Creates a new <code>Vertex</code> value object.\r\n\t *\r\n\t * @param    x            [optional]    The x value. Defaults to 0.\r\n\t * @param    y            [optional]    The y value. Defaults to 0.\r\n\t * @param    z            [optional]    The z value. Defaults to 0.\r\n\t * @param    index        [optional]    The index value. Defaults is NaN.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, index:number = 0)\r\n\t{\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._index = index;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the index of value object\r\n\t * @param    ind        The index\r\n\t */\r\n\tpublic set index(ind:number)\r\n\t{\r\n\t\tthis._index = ind;\r\n\t}\r\n\r\n\tpublic get index():number\r\n\t{\r\n\t\treturn this._index;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the x value of the value object\r\n\t * @param    value        The x value\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tthis._x = value;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the y value of the value object\r\n\t * @param    value        The y value\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tthis._y = value;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the z value of the value object\r\n\t * @param    value        The z value\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(value:number)\r\n\t{\r\n\t\tthis._z = value;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new Vertex value Object\r\n\t */\r\n\tpublic clone():Vertex\r\n\t{\r\n\t\treturn new Vertex(this._x, this._y, this._z);\r\n\t}\r\n}",
    "import LoaderSession\t\t\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\r\n\r\nimport AWDParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWDParser\");\r\nimport Max3DSParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/Max3DSParser\");\r\nimport MD2Parser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/MD2Parser\");\r\nimport OBJParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/OBJParser\");\r\n\r\n/**\r\n *\r\n */\r\nclass Parsers\r\n{\r\n\t/**\r\n\t * A list of all parsers that come bundled with Away3D. Use this to quickly\r\n\t * enable support for all bundled parsers to the file format auto-detection\r\n\t * feature, using any of the enableParsers() methods on loaders, e.g.:\r\n\t *\r\n\t * <code>AssetLibrary.enableParsers(Parsers.ALL_BUNDLED);</code>\r\n\t *\r\n\t * Beware however that this requires all parser classes to be included in the\r\n\t * SWF file, which will add 50-100 kb to the file. When only a limited set of\r\n\t * file formats are used, SWF file size can be saved by adding the parsers\r\n\t * individually using AssetLibrary.enableParser()\r\n\t *\r\n\t * A third way is to specify a parser for each loaded file, thereby bypassing\r\n\t * the auto-detection mechanisms altogether, while at the same time allowing\r\n\t * any properties that are unique to that parser to be set for that load.\r\n\t *\r\n\t * The bundled parsers are:\r\n\t *\r\n\t * <ul>\r\n\t * <li>AC3D (.ac)</li>\r\n\t * <li>Away Data version 1 ASCII and version 2 binary (.awd). AWD1 BSP unsupported</li>\r\n\t * <li>3DMax (.3ds)</li>\r\n\t * <li>DXF (.dxf)</li>\r\n\t * <li>Quake 2 MD2 models (.md2)</li>\r\n\t * <li>Doom 3 MD5 animation clips (.md5anim)</li>\r\n\t * <li>Doom 3 MD5 meshes (.md5mesh)</li>\r\n\t * <li>Wavefront OBJ (.obj)</li>\r\n\t * <li>Collada (.dae)</li>\r\n\t * <li>Images (.jpg, .png)</li>\r\n\t * </ul>\r\n\t *\r\n\t * @see away.library.AssetLibrary.enableParser\r\n\t */\r\n\tpublic static ALL_BUNDLED:Array<Object> = Array<Object>(AWDParser, Max3DSParser, MD2Parser, OBJParser);\r\n\r\n\t/**\r\n\t * Short-hand function to enable all bundled parsers for auto-detection. In practice,\r\n\t * this is the same as invoking enableParsers(Parsers.ALL_BUNDLED) on any of the\r\n\t * loader classes SingleFileLoader, LoaderSession, AssetLibrary or Loader3D.\r\n\t *\r\n\t * See notes about file size in the documentation for the ALL_BUNDLED constant.\r\n\t *\r\n\t * @see away.parsers.Parsers.ALL_BUNDLED\r\n\t */\r\n\tpublic static enableAllBundled():void\r\n\t{\r\n\t\tLoaderSession.enableParsers(Parsers.ALL_BUNDLED);\r\n\t}\r\n}\r\n\r\nexport = Parsers;"
  ],
  "sourceRoot": ""
}