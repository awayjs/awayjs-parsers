{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase.ts",
    "awayjs-parsers.js",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBlock.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDProperties.ts",
    "awayjs-parsers/lib/AWD3Parser.ts",
    "awayjs-parsers/lib/AWDParser.ts",
    "awayjs-parsers/lib/MD2Parser.ts",
    "awayjs-parsers/lib/MD5AnimParser.ts",
    "awayjs-parsers/lib/MD5MeshParser.ts",
    "awayjs-parsers/lib/Max3DSParser.ts",
    "awayjs-parsers/lib/OBJParser.ts",
    "awayjs-parsers/lib/Parsers.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase",
    "module",
    "AbstractMethodError",
    "AWDAssetParserBase",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "this",
    "_awd_file_data",
    "set",
    "awd_file_data",
    "enumerable",
    "configurable",
    "parseFromBytes",
    "awayjs-core/lib/errors/AbstractMethodError",
    "undefined",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers",
    "GeometryAWDParser",
    "PrefabAWDParser",
    "DisplayObjectContainerAWDParser",
    "MeshAWDParser",
    "BillboardAWDParser",
    "Single2DTextureAWDParser",
    "CameraAWDParser",
    "SingleCubeTextureAWDParser",
    "LightAWDParser",
    "LightPickerAWDParser",
    "MaterialAWDParser",
    "MovieClipAWDParser",
    "ShadowMethodAWDParser",
    "SharedMethodAWDParser",
    "SkeletonAnimClipAWDParser",
    "SkeletonAWDParser",
    "SkeletonPoseAWDParser",
    "SkyboxAWDParser",
    "TesselatedFontAWDParser",
    "TextfieldAWDParser",
    "TextformatAWDParser",
    "VertexAnimationSetAWDParser",
    "VertexAnimClipAWDParser",
    "CommandAWDParser",
    "MetadataAWDParser",
    "BlockNameSpaceAWDParser",
    "AnimatorAWDParser",
    "AudioAWDParser",
    "AWDBlockParsers",
    "_supported_asset_blocks",
    "_all_block_parsers",
    "Array",
    "add_block_parser",
    "block_parser",
    "block_types",
    "push",
    "init_parser",
    "file_data",
    "parseAsset",
    "type",
    "this_parser",
    "awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser",
    "__extends",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "AWDBlockParserBase",
    "VertexAnimator",
    "SkeletonAnimator",
    "AWD3Utils",
    "_super",
    "animSetBlockAdress",
    "targetAnimationSet",
    "cur_block",
    "name",
    "parseVarStr",
    "newBlockBytes",
    "readUnsignedShort",
    "props",
    "parseProperties",
    1,
    "BADDR",
    "readUnsignedInt",
    "targetMeshLength",
    "meshAdresses",
    "activeState",
    "autoplay",
    "readUnsignedByte",
    "parseUserAttributes",
    "returnedArray",
    "targetMeshes",
    "targetMesh",
    "getAssetByID",
    "thisAnimator",
    "skeleton",
    "animator",
    "data",
    "debug",
    "console",
    "log",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "ByteArray",
    "data_len",
    "url",
    "readUTFBytes",
    "dependencies_urls",
    "readBytes",
    "dependencies_data",
    "state",
    "BLOCKSTATE_LOAD_DEPENDENICES",
    "audioStylesNames",
    "awayjs-core/lib/utils/ByteArray",
    "Billboard",
    "BasicMaterial",
    "data_id",
    "mat",
    "bothSides",
    "billboard",
    "extra",
    "awayjs-display/lib/entities/Billboard",
    "awayjs-display/lib/materials/BasicMaterial",
    "BLOCKSTATE_NO_ASSET",
    "id",
    "nameSpaceString",
    "Camera",
    "PerspectiveProjection",
    "OrthographicProjection",
    "OrthographicOffCenterProjection",
    "Vector3D",
    "CameraAWD3Parser",
    "par_id",
    "mtx",
    "parseMatrix3D",
    "parentName",
    "projection",
    "readShort",
    "projectiontype",
    101,
    "propsNrType",
    102,
    103,
    104,
    "camera",
    "transform",
    "matrix3D",
    "parent",
    "addChild",
    "matrixNrType",
    2,
    3,
    4,
    "UINT8",
    "pivot",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "awayjs-core/lib/projections/OrthographicProjection",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/Camera",
    "hasBlocks",
    "parentObject",
    "targetObject",
    "numCommands",
    "typeCommand",
    "targetID",
    "DisplayObjectContainer",
    "ctr",
    "major_version",
    "minor_version",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "AttributesBuffer",
    "Geometry",
    "CurveSubGeometry",
    "TriangleSubGeometry",
    "geom",
    "num_subs",
    "geoNrType",
    "geoScaleU",
    "geoScaleV",
    "subs_parsed",
    "is_curve_geom",
    "sm_len",
    "sm_end",
    "w_indices",
    "weights",
    "position",
    "subProps",
    "idx",
    "str_ftype",
    "str_type",
    "str_len",
    "str_end",
    "x",
    "y",
    "z",
    "verts",
    "readNumber",
    "accuracyGeo",
    "indices",
    "uvs",
    "normals",
    "idx_pos",
    "idx_curves",
    "idx_uvs",
    "positions",
    "curveData",
    "curve_sub_geom",
    "setIndices",
    "setPositions",
    "setCurves",
    "setUVs",
    "addSubGeometry",
    "triangle_sub_geom",
    "jointsPerVertex",
    "autoDeriveNormals",
    "autoDeriveUVs",
    "autoDeriveTangents",
    "setNormals",
    "setTangents",
    "setJointWeights",
    "setJointIndices",
    "scaleU",
    "scaleV",
    "setSubUVs",
    "scaleUV",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/base/CurveSubGeometry",
    "awayjs-display/lib/base/Geometry",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "CubeMapShadowMapper",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "PointLight",
    "light",
    "newShadowMapper",
    "lightType",
    "COLOR",
    5,
    6,
    "BOOL",
    7,
    8,
    9,
    10,
    11,
    12,
    "UINT16",
    21,
    22,
    23,
    "shadowMapperType",
    "lightTypes",
    "shadowMapperTypes",
    "radius",
    "fallOff",
    "color",
    "specular",
    "diffuse",
    "ambientColor",
    "ambient",
    "depthMapSize",
    "getDepthSizeFromEnum",
    "shadowMapper",
    "castsShadows",
    "awayjs-display/lib/entities/DirectionalLight",
    "awayjs-display/lib/entities/PointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "StaticLightPicker",
    "numLights",
    "lightsArray",
    "k",
    "lightID",
    "returnedArrayLight",
    "lightsArrayNames",
    "lightPicker",
    "toString",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "MethodMaterialMode",
    "MethodMaterial",
    "DefaultMaterialManager",
    "AmbientEnvMapMethod",
    "DiffuseDepthMethod",
    "DiffuseCelMethod",
    "DiffuseGradientMethod",
    "DiffuseLightMapMethod",
    "DiffuseWrapMethod",
    "NormalSimpleWaterMethod",
    "SpecularFresnelMethod",
    "SpecularAnisotropicMethod",
    "SpecularCelMethod",
    "SpecularPhongMethod",
    "attributes",
    "finalize",
    "num_methods",
    "methods_parsed",
    "normalTexture",
    "specTexture",
    "INT32",
    13,
    "method_type",
    "debugString",
    "tex_addr",
    "texture",
    "getDefaultTexture",
    "alphaThreshold",
    "repeat",
    "UINT32",
    15,
    16,
    17,
    18,
    19,
    20,
    "spezialType",
    "mode",
    "MULTI_PASS",
    "alphaBlending",
    "diftexture",
    "alpha",
    "diffuseTex_addr",
    "diffuseTexture",
    "normalTex_addr",
    "specTex_addr",
    "lightPickerAddr",
    "smooth",
    "mipmap",
    "alphaPremultiplied",
    "blendMode",
    "getBlendModeStringFromEnum",
    "normalMap",
    "specularMap",
    "diffuseColor",
    "gloss",
    "specularColor",
    201,
    202,
    301,
    302,
    401,
    402,
    601,
    602,
    701,
    702,
    801,
    "MTX4x4",
    "fx_method",
    "addEffectMethod",
    "shadow_method",
    "shadowMethod",
    "cubeTex",
    "getDefaultCubeTexture",
    "ambientMethod",
    "diffuseMethod",
    "thisTex",
    "smoothness",
    "specularMethod",
    "fresnelPower",
    "normalReflectance",
    "normalMethod",
    "basic_mat",
    "preserveAlpha",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-methodmaterials/lib/MethodMaterial",
    "awayjs-methodmaterials/lib/MethodMaterialMode",
    "awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseCelMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseDepthMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseGradientMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseWrapMethod",
    "awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod",
    "awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod",
    "awayjs-methodmaterials/lib/methods/SpecularCelMethod",
    "awayjs-methodmaterials/lib/methods/SpecularFresnelMethod",
    "awayjs-methodmaterials/lib/methods/SpecularPhongMethod",
    "Mesh",
    "num_materials",
    "materials_parsed",
    "geoID",
    "materials",
    "materialNames",
    "mat_id",
    "m",
    "mesh",
    "subMeshes",
    "material",
    "Math",
    "min",
    "awayjs-display/lib/entities/Mesh",
    "AWDSTRING",
    "AWDBitFlags",
    "ColorTransform",
    "Matrix3D",
    "Timeline",
    "TextField",
    "AS2SceneGraphFactory",
    "view",
    "factory",
    "j",
    "c",
    "new_timeline",
    "new_mc",
    "createMovieClip",
    "isScene",
    "sceneID",
    "fps",
    "readFloat",
    "ms_per_frame",
    "num_instances",
    "num_all_display_instances",
    "num_potential_childs",
    "resourceID",
    "cmd_asset",
    "registerPotentialChild",
    "num_potential_childs_multi_instanced",
    "num_potential_sounds",
    "numFrames",
    "totalDuration",
    "frameDuration",
    "numLabels",
    "objectID",
    "target_depth",
    "number_of_obj",
    "commandType",
    "hasDepthChanges",
    "sessionCount",
    "remove_depths",
    "potChild",
    "getPotentialChildPrototype",
    "isAsset",
    "props_flag",
    "test",
    "FLAG1",
    "thisMatrix",
    "FLAG2",
    "rawData",
    "FLAG3",
    "thisColorTransform",
    "FLAG4",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "FLAG5",
    "blendmode_int",
    "blendmode_string",
    "FLAG6",
    "FLAG7",
    "instanceName",
    "FLAG8",
    "mask_id_nums",
    "mask_ids",
    "mi_cnt",
    "length_code",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-display/lib/base/Timeline",
    "awayjs-display/lib/entities/TextField",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags",
    "awayjs-player/lib/factories/AS2SceneGraphFactory",
    "PrefabBase",
    "PrimitiveCapsulePrefab",
    "PrimitiveConePrefab",
    "PrimitiveCubePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitivePlanePrefab",
    "PrimitiveSpherePrefab",
    "PrimitiveTorusPrefab",
    "prefab",
    "primType",
    "bsm",
    110,
    111,
    303,
    703,
    704,
    "primitiveTypes",
    "topClosed",
    "bottomClosed",
    "yUp",
    "awayjs-display/lib/prefabs/PrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "ShadowDitheredMethod",
    "ShadowFilteredMethod",
    "ShadowHardMethod",
    "ShadowNearMethod",
    "ShadowSoftMethod",
    "asset",
    "shadowLightID",
    "parseShadowMethodList",
    "methodType",
    "shadow_meth",
    "epsilon",
    "range",
    "awayjs-methodmaterials/lib/methods/ShadowDitheredMethod",
    "awayjs-methodmaterials/lib/methods/ShadowFilteredMethod",
    "awayjs-methodmaterials/lib/methods/ShadowHardMethod",
    "awayjs-methodmaterials/lib/methods/ShadowNearMethod",
    "awayjs-methodmaterials/lib/methods/ShadowSoftMethod",
    "EffectColorMatrixMethod",
    "EffectColorTransformMethod",
    "EffectFogMethod",
    "EffectRimLightMethod",
    "parseSharedMethodList",
    "effectMethodReturn",
    105,
    106,
    107,
    "offCol",
    "colorTransform",
    "awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod",
    "awayjs-methodmaterials/lib/methods/EffectColorTransformMethod",
    "awayjs-methodmaterials/lib/methods/EffectFogMethod",
    "awayjs-methodmaterials/lib/methods/EffectRimLightMethod",
    "textureStylesNames",
    "Skeleton",
    "SkeletonJoint",
    "num_joints",
    "joints_parsed",
    "joint",
    "ibp",
    "parentIndex",
    "inverseBindPose",
    "joints",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonClipNode",
    "frame_dur",
    "pose_addr",
    "clip",
    "num_frames",
    "frames_parsed",
    "skel_pose",
    "addFrame",
    "frames",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "SkeletonPose",
    "JointPose",
    "pose",
    "joint_pose",
    "has_transform",
    "mtx_data",
    "parseMatrix43RawData",
    "orientation",
    "fromMatrix",
    "translation",
    "copyFrom",
    "jointPoses",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "Skybox",
    "cubeTexAddr",
    "cube_tex",
    "new_skybox",
    "awayjs-display/lib/entities/Skybox",
    "Font",
    "new_font",
    "font_style_cnt",
    "font_style_name",
    "new_font_style",
    "get_font_table",
    "set_font_em_size",
    "font_style_char_cnt",
    "font_style_char",
    "set_subgeo_for_char",
    "awayjs-display/lib/text/Font",
    "TextFormat",
    "newTextField",
    "createTextField",
    "text_field_type",
    "displayAsPassword",
    "width",
    "height",
    "num_paragraphs",
    "complete_text",
    "text_format",
    "paracnt",
    "num_textruns",
    "textrun_cnt",
    "format_id",
    "textFormat",
    "txt_length",
    "this_txt",
    "text",
    "selectable",
    "border",
    "awayjs-display/lib/text/TextFormat",
    "newTextFormat",
    "font_id",
    "font",
    "font_name",
    "font_table",
    "font_style",
    "num_uv_values",
    "uv_values",
    "uvcnt",
    "uv_value",
    "format_props",
    "size",
    "letterSpacing",
    "kerning",
    "indent",
    "leftMargin",
    "rightMargin",
    "VertexClipNode",
    "poseOnly",
    "num_submeshes",
    "subMeshParsed",
    "geometry",
    "subGeom",
    "num_Streams",
    "streamsParsed",
    "streamtypes",
    "thisGeo",
    "geoAdress",
    "getUVForVertexAnimation",
    "looping",
    "stitchFinalFrame",
    "subGeometries",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexAnimationSet",
    "SkeletonAnimationSet",
    "poseBlockAdress",
    "skeletonFrames",
    "vertexFrames",
    "animNode",
    "newVertexAnimationSet",
    "addAnimation",
    "animations",
    "animationNames",
    "newSkeletonAnimationSet",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData",
    "BlendMode",
    "SingleCubeTexture",
    "Single2DTexture",
    "AWDProperties",
    "AWDBlock",
    "AWD3FileData",
    "_debug",
    "_accuracyOnBlocks",
    "_blocks",
    "_cur_block",
    "blendModeDic",
    "NORMAL",
    "ADD",
    "ALPHA",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "_depthSizeDic",
    "depthSize",
    "blendmode",
    "dispose",
    "_accuracyMatrix",
    "new_accuracyMatrix",
    "_accuracyProps",
    "new_accuracyProps",
    "_accuracyGeo",
    "new_accuracyGeo",
    "_matrixNrType",
    "newmatrixNrType",
    "_propsNrType",
    "new_props_nr",
    "_geoNrType",
    "new_geoNrType",
    "_newBlockBytes",
    "new_newBlockBytes",
    "create_new_block",
    "new_block",
    "block_cnt",
    "list_len",
    "attibuteCnt",
    "list_end",
    "ns_id",
    "attr_key",
    "attr_type",
    "attr_len",
    "attr_val",
    "INT8",
    "readByte",
    "INT16",
    "readInt",
    "FLOAT32",
    "FLOAT64",
    "readDouble",
    "expected",
    "propertyCnt",
    "len",
    "key",
    "parseAttrValue",
    "elem_len",
    "read_func",
    "VECTOR2x1",
    "VECTOR3x1",
    "VECTOR4x1",
    "MTX3x2",
    "MTX3x3",
    "MTX4x3",
    "list",
    "num_read",
    "num_elems",
    "apply",
    "val",
    "meshID",
    "uvsForVertexAnimation",
    "geoCnt",
    "sub_geom",
    "numVertices",
    "getBlockByID",
    "assetID",
    "getDefaultAsset",
    "assetType",
    "getDefaultMaterial",
    "_defaultCubeTexture",
    "precision",
    "parseMatrix32RawData",
    "mtx_raw",
    "isNaN",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBlock",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDProperties",
    "BLOCKSTATE_FINALIZE",
    "BLOCKSTATE_INVALID",
    "COMPRESSIONMODE_LZMA",
    "UNCOMPRESSED",
    "DEFLATE",
    "LZMA",
    "AWDBYTEARRAY",
    "flags",
    "testFlag",
    "FLAG9",
    "FLAG10",
    "FLAG11",
    "FLAG12",
    "FLAG13",
    "FLAG14",
    "FLAG15",
    "FLAG16",
    "this_id",
    "this_type",
    "loaded_dependencies",
    "loaded_dependencies_cnt",
    "bytes",
    "errorMessages",
    "addError",
    "errorMsg",
    "value",
    "fallback",
    "awayjs-parsers/lib/AWD3Parser",
    "BitmapImageCube",
    "URLLoaderDataFormat",
    "URLRequest",
    "ParserBase",
    "ParserUtils",
    "DisplayObject",
    "AWDAssetParsers",
    "AWD3Parser",
    "ARRAY_BUFFER",
    "_startedParsing",
    "_parsed_header",
    "total_time",
    "geom_time",
    "timeline_time",
    "_block_parser",
    "_awd_data",
    "supportsType",
    "extension",
    "toLowerCase",
    "supportsData",
    "_iResolveDependency",
    "resourceDependency",
    "assets",
    "this_block",
    "parseInt",
    "testure_asset",
    "_pFinalizeAsset",
    "sub_id",
    "cube_image_asset",
    "draw",
    "cube_tex_asset",
    "_iResolveDependencyFailure",
    "_iResolveDependencyName",
    "oldName",
    "block",
    "resetAssetPath",
    "newName",
    "_pProceedParsing",
    "_byteData",
    "_pGetByteData",
    "parseHeader",
    "_compression",
    "_pDieWithError",
    "_body",
    "getBytesAvailable",
    "parsingPaused",
    "parseNextBlock",
    "PARSING_DONE",
    "MORE_TO_PARSE",
    "_pStartParsing",
    "frameLimit",
    "_pContent",
    "block_id",
    "ns",
    "block_type",
    "blockCompression",
    "blockCompressionLZMA",
    "accuracyOnBlocks",
    "accuracyMatrix",
    "accuracyProps",
    "blockEndAll",
    "time_start",
    "performance",
    "now",
    "_pAddDependency",
    "byteArrayToImage",
    "_pPauseAndRetrieveDependencies",
    "time_end",
    "thisTime",
    "body_len",
    "_streaming",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/net/URLRequest",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-display/lib/base/DisplayObject",
    "awayjs-parsers/lib/AWDParser",
    "Float2Attributes",
    "EffectAlphaMaskMethod",
    "EffectEnvMapMethod",
    "EffectFresnelEnvMapMethod",
    "EffectLightMapMethod",
    "AWDParser",
    "_debugTimers",
    "_texture_users",
    "_time_all",
    "_time_geom",
    "_time_timeline",
    "_time_fonts",
    "_time_textfields",
    "_time_sounds",
    "_time_textures",
    "_time_materials",
    "_time_meshes",
    "_num_geom",
    "_num_timeline",
    "_num_fonts",
    "_num_textfields",
    "_num_sounds",
    "_num_textures",
    "_num_materials",
    "_num_meshes",
    "shadowMethodListProperties",
    "PROPERTY_NUMBER",
    "meshPoseAnimationProperties",
    "sharedMethodListProperties",
    "_view",
    "_version",
    "texture_asset",
    "audio_asset",
    "_isParsing",
    "updateTimers",
    "isParsed",
    "start_timeing",
    "_cur_block_id",
    "BitFlags",
    "blockEndBlock",
    "parseMeshLibraryBlock",
    "parseBillBoardLibraryBlock",
    "parseAudioBlock",
    "parseTimeLine",
    "paresTextField",
    "parseTesselatedFont",
    "parseTextFormat",
    "parsePrimitves",
    "parseSkyboxInstance",
    "parseLight",
    "parseCamera",
    "parseLightPicker",
    "parseMaterial_v1",
    "parseCubeTexture",
    "parseSharedMethodBlock",
    "parseShadowMethodBlock",
    "parseMeshPoseAnimation",
    "parseVertexAnimationSet",
    "parseAnimatorSet",
    "parseCommand",
    "parseGeometry",
    "parseContainer",
    "parseMeshInstance",
    "parseMaterial",
    "parseTexture",
    "parseSkeleton",
    "parseSkeletonPose",
    "parseSkeletonAnimation",
    "parseNameSpace",
    "parseMetaData",
    "msgCnt",
    "end_timing",
    "time_delta",
    "blockID",
    "set_whitespace_width",
    "vertexBuffer",
    "bufferView",
    "Uint8Array",
    "arraybytes",
    "textFormatProperties",
    "tf_align_int",
    "align",
    "textFieldTypes",
    "textWidth",
    "abs",
    "textHeight",
    "textFieldProperties",
    "useColorTransform",
    "extras",
    "timeLineContainer",
    "str_cnt",
    "str_data_type",
    "str_counter",
    "keyframes_start_indices_data",
    "new_buffer",
    "Uint16Array",
    "Uint32Array",
    "keyframe_durations",
    "numKeyFrames",
    "frame_command_indices",
    "frame_recipe",
    "command_length_stream",
    "command_index_stream",
    "add_child_stream",
    "remove_child_stream",
    "update_child_stream",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "properties_stream_int",
    "lc",
    "float_array_data",
    "properties_stream_f32_mtx_scale_rot",
    "Float32Array",
    "properties_stream_f32_mtx_pos",
    "properties_stream_f32_mtx_all",
    "properties_stream_f32_ct",
    "_labels",
    "string_props_array",
    "properties_stream_strings",
    "frame_index",
    "one_str_len",
    "add_framescript",
    "init",
    "geometryProperties",
    "subGeometryProperties",
    "primitiveProperties",
    "containerProperties",
    "isPrefab",
    "getNewObject",
    "meshInstanceProperties",
    "tex",
    "cubeMap",
    "lightProperties",
    "cameraProperties",
    "cameraPivotProperties",
    "lightPick",
    "materialProperties",
    "materialMode",
    "material_v1Properties",
    "method_v1Properties",
    "effectMethod",
    "shadowMapMethod",
    "cubeTexture",
    "commandProperties",
    "targetProperties",
    "metaDataProperties",
    "pose_id",
    "geo_id",
    "vertexAnimationSetProperties",
    "clipNode",
    "animatorSetProperties",
    "accuracy",
    "GEO_NUMBER",
    "MATRIX_NUMBER",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod",
    "awayjs-methodmaterials/lib/methods/EffectEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectLightMapMethod",
    "awayjs-parsers/lib/MD2Parser",
    "MD2Parser",
    "textureType",
    "ignoreTexturePath",
    "_clipNodes",
    "_animationSet",
    "materialFinal",
    "geoCreated",
    "_textureType",
    "_ignoreTexturePath",
    "_mesh",
    "_pHasTime",
    "_parsedHeader",
    "_geometry",
    "parseMaterialNames",
    "_parsedUV",
    "parseUV",
    "_parsedFaces",
    "parseFaces",
    "_parsedFrames",
    "parseFrames",
    "_firstSubGeom",
    "clone",
    "_ident",
    "_skinWidth",
    "_skinHeight",
    "_numSkins",
    "_numVertices",
    "_numST",
    "_numTris",
    "_numFrames",
    "_offsetSkins",
    "_offsetST",
    "_offsetTris",
    "_offsetFrames",
    "_offsetEnd",
    "extIndex",
    "slashIndex",
    "_materialNames",
    "regExp",
    "RegExp",
    "replace",
    "lastIndexOf",
    "indexOf",
    "substring",
    "dependencies",
    "_uvs",
    "ta",
    "tb",
    "tc",
    "_vertIndices",
    "_uvIndices",
    "_indices",
    "addIndex",
    "_finalUV",
    "vertexIndex",
    "uvIndex",
    "index",
    "findIndex",
    "sx",
    "sy",
    "sz",
    "tx",
    "ty",
    "tz",
    "vertLen",
    "fvertices",
    "tvertices",
    "prevClip",
    "readFrameName",
    "FPS",
    "ch",
    "floor",
    "String",
    "fromCharCode",
    "awayjs-parsers/lib/MD5AnimParser",
    "Quaternion",
    "MD5AnimParser",
    "additionalRotationAxis",
    "additionalRotationRadians",
    "TEXT",
    "_parseIndex",
    "_line",
    "_charLineIndex",
    "_rotationQuat",
    "t1",
    "t2",
    "fromAxisAngle",
    "X_AXIS",
    "PI",
    "Y_AXIS",
    "multiply",
    "token",
    "_textData",
    "_pGetTextData",
    "getNextToken",
    "COMMENT_TOKEN",
    "ignoreLine",
    "VERSION_TOKEN",
    "getNextInt",
    "COMMAND_LINE_TOKEN",
    "parseCMD",
    "NUM_FRAMES_TOKEN",
    "_bounds",
    "_frameData",
    "NUM_JOINTS_TOKEN",
    "_numJoints",
    "_hierarchy",
    "_baseFrameData",
    "FRAME_RATE_TOKEN",
    "_frameRate",
    "NUM_ANIMATED_COMPONENTS_TOKEN",
    "_numAnimatedComponents",
    "HIERARCHY_TOKEN",
    "parseHierarchy",
    "BOUNDS_TOKEN",
    "parseBounds",
    "BASE_FRAME_TOKEN",
    "parseBaseFrame",
    "FRAME_TOKEN",
    "parseFrame",
    "_reachedEOF",
    "sendUnknownKeywordError",
    "_clip",
    "translateClip",
    "translatePose",
    "frameData",
    "hierarchy",
    "base",
    "translate",
    "components",
    "skelPose",
    "startIndex",
    "w",
    "sqrt",
    "rotatePoint",
    "sendEOFError",
    "HierarchyData",
    "parseLiteralstring",
    "getNextChar",
    "putBack",
    "BoundsData",
    "parseVector3D",
    "max",
    "BaseFrameData",
    "parseQuaternion",
    "frameIndex",
    "FrameData",
    "getNextNumber",
    "skipWhiteSpace",
    "charAt",
    "sendParseError",
    "parseFloat",
    "vec",
    "quat",
    "str",
    "awayjs-core/lib/geom/Quaternion",
    "awayjs-parsers/lib/MD5MeshParser",
    "MD5MeshParser",
    "_bindPoses",
    "NUM_MESHES_TOKEN",
    "_numMeshes",
    "JOINTS_TOKEN",
    "parseJoints",
    "MESH_TOKEN",
    "parseMesh",
    "calculateMaxJointCount",
    "_maxJointCount",
    "_meshData",
    "translateGeom",
    "vertexData",
    "weightData",
    "_skeleton",
    "numMeshData",
    "meshData",
    "numVerts",
    "zeroWeights",
    "countZeroWeightJoints",
    "totalJoints",
    "countWeight",
    "vertex",
    "start",
    "startWeight",
    "end",
    "count",
    "weight",
    "bias",
    "pos",
    "toMatrix3D",
    "appendTranslation",
    "inv",
    "invert",
    "_shaders",
    "MESH_SHADER_TOKEN",
    "MESH_NUM_VERTS_TOKEN",
    "MESH_NUM_TRIS_TOKEN",
    "MESH_NUM_WEIGHTS_TOKEN",
    "MESH_VERT_TOKEN",
    "parseVertex",
    "MESH_TRI_TOKEN",
    "parseTri",
    "MESH_WEIGHT_TOKEN",
    "parseJoint",
    "MeshData",
    "v1",
    "v2",
    "v3",
    "bindPose",
    "vertices",
    "jointIndices",
    "jointWeights",
    "nonZeroWeights",
    "transformVector",
    "JointData",
    "VertexData",
    "rotQuat",
    "awayjs-parsers/lib/Max3DSParser",
    "BitmapImage2D",
    "Max3DSParser",
    "useSmoothingGroups",
    "_useSmoothingGroups",
    "ba",
    "toByteArray",
    "_textures",
    "_materials",
    "_unfinalized_objects",
    "_cur_mat",
    "_cur_mat_end",
    "finalizeCurrentMaterial",
    "_cur_obj",
    "_cur_obj_end",
    "Number",
    "MAX_VALUE",
    "cid",
    "ObjectVO",
    "readNulTermstring",
    "materialFaces",
    "parseVertexList",
    "parseFaceList",
    "parseUVList",
    "parseFaceMaterialList",
    "readTransform",
    "parseObjectAnimation",
    "parseSmoothingGroups",
    "obj",
    "constructObject",
    "MaterialVO",
    "readColor",
    "twoSided",
    "colorMap",
    "TextureVO",
    "i0",
    "i1",
    "i2",
    "smoothingGroups",
    "faces",
    "vo",
    "hier",
    "sub",
    "prepareData",
    "applySmoothGroups",
    "v",
    "mname",
    "dat",
    "concat",
    "scaleBy",
    "applyTransformation",
    "VertexVO",
    "FaceVO",
    "smoothGroup",
    "numFaces",
    "vGroups",
    "face",
    "groups",
    "group",
    "splice",
    "vClones",
    "clones",
    "v0",
    "chr",
    "g",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-parsers/lib/OBJParser",
    "SpecularBasicMethod",
    "OBJParser",
    "scale",
    "_mtlLibLoaded",
    "_activeMaterialID",
    "_scale",
    "content",
    "hasV",
    "hasF",
    "parseMtl",
    "lm",
    "LoadedMaterial",
    "materialID",
    "_materialLoaded",
    "_meshes",
    "applyMaterial",
    "_mtlLib",
    "line",
    "creturn",
    "trunk",
    "_vertices",
    "_vertexNormals",
    "_materialIDs",
    "_stringLength",
    "_charIndex",
    "_oldIndex",
    "_objects",
    "_objectIndex",
    "split",
    "join",
    "parseLine",
    "applyMaterials",
    "loadMtl",
    "createGroup",
    "createObject",
    "_currentGroup",
    "parseVertexNormal",
    "parseFace",
    "objIndex",
    "numGroups",
    "materialGroups",
    "numMaterialGroups",
    "sm",
    "bmMaterial",
    "translateMaterialGroup",
    "_lastMtlID",
    "materialGroup",
    "_realIndices",
    "_vertexIndex",
    "indexIds",
    "translateVertexData",
    "vertexNormal",
    "uv",
    "vertexIndices",
    "normalIndices",
    "uvIndices",
    "_currentMaterialGroup",
    "_currentObject",
    "ObjectGroup",
    "Group",
    "createMaterialGroup",
    "MaterialGroup",
    "nTrunk",
    "Vertex",
    "UV",
    "FaceData",
    "parseIndex",
    "materialDefinitions",
    "lines",
    "basicSpecularMethod",
    "useSpecular",
    "useColor",
    "mapkd",
    "charCodeAt",
    "parseMapKdString",
    "specularData",
    "SpecularData",
    "_materialSpecularData",
    "cm",
    "colorMat",
    "colorMultiMat",
    "breakflag",
    "mtlurl",
    "decomposeID",
    "tm",
    "_u",
    "_v",
    "_x",
    "_y",
    "_z",
    "_index",
    "ind",
    "awayjs-methodmaterials/lib/methods/SpecularBasicMethod",
    "awayjs-parsers/lib/Parsers",
    "LoaderSession",
    "Parsers",
    "enableAllBundled",
    "enableParsers",
    "ALL_BUNDLED",
    "awayjs-core/lib/library/LoaderSession"
  ],
  "mappings": "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",
  "file": "awayjs-parsers.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3FileData\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\n\n\nclass AWDAssetParserBase\n{\n\n\tprivate _awd_file_data:AWD3FileData;\n\tconstructor()\n\t{\n\t}\n\n\n\tpublic get awd_file_data():AWD3FileData\n\t{\n\t\treturn this._awd_file_data;\n\t}\n\tpublic set awd_file_data(awd_file_data:AWD3FileData)\n\t{\n\t\tthis._awd_file_data=awd_file_data;\n\t}\n\tpublic parseFromBytes():void\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\n}\n\nexport = AWDAssetParserBase;\n\n",
    null,
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport AWDAssetParserBase\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWD3FileData \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\n\nimport GeometryAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser\");\nimport PrefabAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser\");\nimport DisplayObjectContainerAWDParser \t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser\");\nimport MeshAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser\");\nimport BillboardAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser\");\nimport Single2DTextureAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser\");\nimport CameraAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser\");\nimport SingleCubeTextureAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser\");\nimport LightAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser\");\nimport LightPickerAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser\");\nimport MaterialAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser\");\nimport MovieClipAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser\");\nimport ShadowMethodAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser\");\nimport SharedMethodAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser\");\nimport SkeletonAnimClipAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser\");\nimport SkeletonAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser\");\nimport SkeletonPoseAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser\");\nimport SkyboxAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser\");\nimport TesselatedFontAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser\");\nimport TextfieldAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser\");\nimport TextformatAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser\");\nimport VertexAnimationSetAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser\");\nimport VertexAnimClipAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser\");\nimport CommandAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser\");\nimport MetadataAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser\");\nimport BlockNameSpaceAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser\");\nimport AnimatorAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser\");\nimport AudioAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser\");\n\n\n\nclass AWDBlockParsers\n{\n\n\tprivate _supported_asset_blocks:Object = {};\n\tprivate _all_block_parsers:Array<AWDAssetParserBase>;\n\tconstructor()\n\t{\n\t\tthis._all_block_parsers=new Array<AWDAssetParserBase>();\n\n\t\tthis.add_block_parser(new GeometryAWDParser(), [1]);\n\t\tthis.add_block_parser(new PrefabAWDParser(), [11]);\n\t\tthis.add_block_parser(new DisplayObjectContainerAWDParser(), [22]);\n\t\tthis.add_block_parser(new MeshAWDParser(), [23, 24]);\n\n\t\tthis.add_block_parser(new BillboardAWDParser(), [25]);\n\t\tthis.add_block_parser(new SkyboxAWDParser(), [31]);\n\t\tthis.add_block_parser(new LightAWDParser(), [41]);\n\t\tthis.add_block_parser(new CameraAWDParser(), [42]);\n\t\t//this.add_block_parser(new TextureprojectorAWDParser(), [43]);\n\t\tthis.add_block_parser(new AudioAWDParser(), [44]);\n\t\tthis.add_block_parser(new LightPickerAWDParser(), [51]);\n\t\tthis.add_block_parser(new MaterialAWDParser(), [81]);\n\t\tthis.add_block_parser(new Single2DTextureAWDParser(), [82]);\n\t\tthis.add_block_parser(new SingleCubeTextureAWDParser(), [83]);\n\t\tthis.add_block_parser(new SharedMethodAWDParser(), [91]);\n\t\tthis.add_block_parser(new ShadowMethodAWDParser(), [92]);\n\t\tthis.add_block_parser(new SkeletonAWDParser(), [101]);\n\t\tthis.add_block_parser(new SkeletonPoseAWDParser(), [102]);\n\t\tthis.add_block_parser(new SkeletonAnimClipAWDParser(), [103]);\n\t\tthis.add_block_parser(new VertexAnimClipAWDParser(), [111, 112]);\n\t\tthis.add_block_parser(new VertexAnimationSetAWDParser(), [113]);\n\t\t//this.add_block_parser(new UVAnimationClipAWDParser(), [121]);\n\t\tthis.add_block_parser(new AnimatorAWDParser(), [122]);\n\t\tthis.add_block_parser(new MovieClipAWDParser(), [133]);\n\t\tthis.add_block_parser(new TextfieldAWDParser(), [134]);\n\t\tthis.add_block_parser(new TesselatedFontAWDParser(), [135]);\n\t\tthis.add_block_parser(new TextformatAWDParser(), [136]);\n\n\n\t\tthis.add_block_parser(new CommandAWDParser(), [253]);\n\t\tthis.add_block_parser(new BlockNameSpaceAWDParser(), [254]);\n\t\tthis.add_block_parser(new MetadataAWDParser(), [255]);\n\n\n\t}\n\n\tpublic add_block_parser(block_parser:AWDAssetParserBase, block_types:Array<number>):void\n\t{\n\t\tfor(var i:number=0; i<block_types.length;i++){\n\t\t\tthis._supported_asset_blocks[block_types[i]]  = block_parser;\n\t\t}\n\t\tthis._all_block_parsers.push(block_parser);\n\n\t}\n\n\tpublic init_parser(file_data:AWD3FileData):void\n\t{\n\t\tfor(var i:number=0; i<this._all_block_parsers.length;i++){\n\t\t\tthis._all_block_parsers[i].awd_file_data=file_data;\n\t\t}\n\n\t}\n\tpublic parseAsset(type:number):boolean\n\t{\n\n\t\tvar this_parser:AWDAssetParserBase=this._supported_asset_blocks[type];\n\t\tif(this_parser!=undefined){\n\t\t\tthis_parser.parseFromBytes();\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n}\n\nexport = AWDBlockParsers;",
    "/**\n * Created by 80prozent on 4/18/2015.\n */\n\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass AnimatorAWDParser extends AWDBlockParserBase\n{\n\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar animSetBlockAdress:number; /*int*/\n\t\tvar targetAnimationSet:AnimationSetBase;\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar type:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR});\n\n\t\tanimSetBlockAdress = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar targetMeshLength:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar meshAdresses:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tfor (var i:number /*int*/ = 0; i < targetMeshLength; i++)\n\t\t\tmeshAdresses.push(this.awd_file_data.newBlockBytes.readUnsignedInt());\n\n\t\tvar activeState:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar autoplay:boolean = ( this.awd_file_data.newBlockBytes.readUnsignedByte() == 1 );\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.parseUserAttributes();\n\n\t\tvar returnedArray:Array<any>;\n\t\tvar targetMeshes:Array<Mesh> = new Array<Mesh>();\n\n\t\tfor (i = 0; i < meshAdresses.length; i++) {\n\t\t\tvar targetMesh:Mesh = <Mesh>this.awd_file_data.getAssetByID(meshAdresses[i]);\n\t\t\tif (targetMesh!=undefined)\n\t\t\t\ttargetMeshes.push(targetMesh);\n\t\t}\n\t\tvar targetAnimationSet:AnimationSetBase = <AnimationSetBase>this.awd_file_data.getAssetByID(animSetBlockAdress);\n\t\tif (targetAnimationSet==undefined) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the AnimationSet ( \" + animSetBlockAdress + \" ) for this.awd_file_data Animator\");\n\t\t\treturn undefined;\n\t\t}\n\t\tvar thisAnimator:AnimatorBase;\n\t\tif (type == 1) {\n\n\t\t\tvar skeleton:Skeleton = <Skeleton>this.awd_file_data.getAssetByID(props.get(1, 0));\n\t\t\tif (skeleton==undefined) {\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the Skeleton ( \" + props.get(1, 0) + \" ) for this.awd_file_data Animator\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, skeleton);\n\n\t\t} else if (type == 2)\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\n\n\t\tfor (i = 0; i < targetMeshes.length; i++) {\n\t\t\tif (type == 1)\n\t\t\t\ttargetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\n\t\t\tif (type == 2)\n\t\t\t\ttargetMeshes[i].animator = (<VertexAnimator> thisAnimator);\n\t\t}\n\t\tthis.awd_file_data.cur_block.data = thisAnimator;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + this.awd_file_data.cur_block.name);\n\t}\n\n\n}\n\nexport = AnimatorAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\nclass AudioAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar data_len:number;\n\n\t\t//this.awd_file_data._texture_users[this.awd_file_data._cur_block_id.toString()] = [];\n\n\t\t// External\n\t\tif (type == 0) {\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar url:string;\n\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\n\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block.id.toString(), new URLRequest(url), false, null, true);\n\n\t\t} else {\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\n\t\t\tvar data:ByteArray;\n\t\t\tdata = new ByteArray();\n\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\n\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\n\n\t\t\t//\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\n\t\t\t//\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\n\t\t\t// This gives the browser time to initialise image width / height.\n\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, data, true);\n\n\t\t}\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\n\t\t// Ignore for now\n\t\tthis.awd_file_data.parseProperties(null);\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\t//this.awd_file_data._pPauseAndRetrieveDependencies();\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tvar audioStylesNames:Array<string> = [\"external\", \"embed\"]\n\t\t\tconsole.log(\"Start parsing a \" + audioStylesNames[type] + \" AudioFile\");\n\t\t}\n\t}\n\n\n}\n\nexport = AudioAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\n\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nclass BillboardAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar mat:MaterialBase= <MaterialBase> this.awd_file_data.getAssetByID(data_id);\n\n\t\tif (mat==undefined) {\n\t\t\tmat = new BasicMaterial();\n\t\t}\n\t\tmat.bothSides=true;\n\t\tvar billboard:Billboard = new Billboard(mat);\n\t\tthis.awd_file_data.cur_block.data = billboard;\n\t\t// todo: optional matrix etc can be put in properties.\n\t\tthis.awd_file_data.parseProperties(null);\n\n\t\tbillboard.extra = this.awd_file_data.parseUserAttributes();\n\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a Library-Billboard: Name = '\" + billboard.name + \"| Material-Name = \" + mat.name);\n\t\t}\n\n\t}\n\n\n}\n\nexport = BillboardAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass BlockNameSpaceAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\n\t\tvar id:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar nameSpaceString:string = this.awd_file_data.parseVarStr();\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\n\t}\n\n\n}\n\nexport = BlockNameSpaceAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Parser\t\t\t\t= require(\"awayjs-parsers/lib/AWD3Parser\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass CameraAWD3Parser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void {\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar projection:ProjectionBase;\n\n\t\tthis.awd_file_data.newBlockBytes.readUnsignedByte(); //set as active camera\n\t\tthis.awd_file_data.newBlockBytes.readShort(); //lengthof lenses - not used yet\n\n\t\tvar projectiontype:number = this.awd_file_data.newBlockBytes.readShort();\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({\n\t\t\t101: this.awd_file_data.propsNrType,\n\t\t\t102: this.awd_file_data.propsNrType,\n\t\t\t103: this.awd_file_data.propsNrType,\n\t\t\t104: this.awd_file_data.propsNrType\n\t\t});\n\n\t\tswitch (projectiontype) {\n\t\t\tcase 5001:\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\n\t\t\t\tbreak;\n\t\t\tcase 5002:\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\n\t\t\t\tbreak;\n\t\t\tcase 5003:\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\n\t\t\t\treturn;\n\t\t}\n\n\t\tvar camera:Camera = new Camera(projection);\n\t\tcamera.transform.matrix3D = mtx;\n\t\tif (par_id > 0) {\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id);\n\t\t\tif (parent != undefined) {\n\t\t\t\tparent.addChild(camera);\n\t\t\t\tparentName = parent.name;\n\t\t\t}\n\t\t}\n\n\t\tcamera.name = name;\n\t\tprops = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\tcamera.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = camera;\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + camera.name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\n\t\t}\n\n\t}\n\n\n}\n\nexport = CameraAWD3Parser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass CommandAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\n\t\tvar hasBlocks:boolean = ( this.awd_file_data.newBlockBytes.readUnsignedByte() == 1 );\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\n\t\tvar name:string = this.awd_file_data.parseVarStr();\n\n\t\tvar parentObject:DisplayObjectContainer;\n\t\tvar targetObject:DisplayObject;\n\n\t\tif(par_id>0)\n\t\t\tparentObject = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id); //for no only light is requested!!!!\n\n\t\tvar numCommands:number = this.awd_file_data.newBlockBytes.readShort();\n\t\tvar typeCommand:number = this.awd_file_data.newBlockBytes.readShort();\n\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR});\n\n\t\tswitch (typeCommand) {\n\t\t\tcase 1:\n\n\t\t\t\tvar targetID:number = props.get(1, 0);\n\t\t\t\t//var returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [LightBase.assetType, TextureProjector.assetType]); //for no only light is requested!!!!\n\t\t\t\ttargetObject = <DisplayObject>this.awd_file_data.getAssetByID(targetID); //for no only light is requested!!!!\n\t\t\t\tif(targetObject==undefined){\n\t\t\t\t\t//this._awd_data._blocks[blockID].addError(\"Could not find the light (ID = \" + targetID + \" ( for this CommandBock!\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (parentObject) {\n\t\t\t\t\tparentObject.addChild(targetObject);\n\t\t\t\t}\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (targetObject) {\n\t\t\tprops = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\n\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t\ttargetObject.extra = this.awd_file_data.parseUserAttributes();\n\n\t\t}\n\t\t//this._awd_data._blocks[blockID].data = targetObject\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\n\t\t}\n\t}\n\n\n}\n\nexport = CommandAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AWDProperties\t\t\t= require(\"../AWD3ParserUtils/AWDProperties\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\nclass DisplayObjectContainerAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\n\t\tvar par_id:number;\n\t\tvar mtx:Matrix3D;\n\t\tvar ctr:DisplayObjectContainer;\n\t\tvar parent:DisplayObjectContainer;\n\n\t\tctr = new DisplayObjectContainer();\n\t\tpar_id = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tmtx = this.awd_file_data.parseMatrix3D();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tctr.transform.matrix3D = mtx;\n\n\n\t\tif (par_id > 0) {\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id);\n\t\t\tif (parent != undefined) {\n\t\t\t\tparent.addChild(ctr);\n\t\t\t\tparentName = parent.name;\n\t\t\t}\n\t\t}\n\n\t\t// in AWD version 2.1 we read the Container properties\n\t\tif ((this.awd_file_data.major_version > 2)||((this.awd_file_data.major_version >= 2) && (this.awd_file_data.minor_version == 1))) {\n\t\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t}\n\t\t// in other versions we do not read the Container properties\n\t\telse {\n\t\t\tthis.awd_file_data.parseProperties(null);\n\t\t}\n\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\n\t\tctr.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data=ctr;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + ctr.name + \"' | Parent-Name = \" + parentName);\n\t\t}\n\t}\n\n\n}\n\nexport = DisplayObjectContainerAWDParser;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\n\nclass GeometryAWDParser extends AWDBlockParserBase\n{\n\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar geom:Geometry = new Geometry();\n\n\t\t// Read name and sub count\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar num_subs:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\t// Read optional properties\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.geoNrType, 2:this.awd_file_data.geoNrType});\n\t\tvar geoScaleU:number = props.get(1, 1);\n\t\tvar geoScaleV:number = props.get(2, 1);\n\n\t\t// Loop through sub meshes\n\t\tvar subs_parsed:number = 0;\n\t\twhile (subs_parsed < num_subs) {\n\t\t\tvar is_curve_geom:boolean=false;\n\t\t\tvar i:number;\n\t\t\tvar sm_len:number, sm_end:number;\n\t\t\tvar w_indices:Array<number>;\n\t\t\tvar weights:Array<number>;\n\n\t\t\tsm_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tsm_end = this.awd_file_data.newBlockBytes.position + sm_len;\n\n\t\t\tvar subProps:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.geoNrType, 2:this.awd_file_data.geoNrType});\n\t\t\t// Loop through data streams\n\t\t\twhile (this.awd_file_data.newBlockBytes.position < sm_end) {\n\t\t\t\tvar idx:number = 0;\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\n\n\t\t\t\t// Type, field type, length\n\t\t\t\tstr_type = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_ftype = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\n\n\t\t\t\tvar x:number, y:number, z:number;\n\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\tx = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t\ty = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t\tz = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\n\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\tindices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 3) {\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\tuvs[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 4) {\n\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\tnormals[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 6) {\n\t\t\t\t\tw_indices = Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\tw_indices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort()*3;\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 7) {\n\n\t\t\t\t\tweights = new Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\tweights[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\n\t\t\t\t\tis_curve_geom=true;\n\t\t\t\t\tvar idx_pos:number = 0;\n\t\t\t\t\tvar idx_curves:number = 0;\n\t\t\t\t\tvar idx_uvs:number = 0;\n\n\t\t\t\t\tvar positions:Array<number> = new Array<number>();\n\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// x\n\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// y\n\t\t\t\t\t\tpositions[idx_pos++] =  this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// type\n\n\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 2\n\n\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.awd_file_data.parseUserAttributes(); // Ignore sub-mesh attributes for now\n\t\t\tif(is_curve_geom){\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(new AttributesBuffer());\n\t\t\t\tcurve_sub_geom.setIndices(indices);\n\t\t\t\tcurve_sub_geom.setPositions(positions);\n\t\t\t\tcurve_sub_geom.setCurves(curveData);\n\t\t\t\tcurve_sub_geom.setUVs(uvs);\n\t\t\t\tgeom.addSubGeometry(curve_sub_geom);\n\t\t\t\tif (this.awd_file_data.debug)\n\t\t\t\t\tconsole.log(\"Parsed a CurveSubGeometry\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar triangle_sub_geom = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\t\tif (weights)\n\t\t\t\t\ttriangle_sub_geom.jointsPerVertex = weights.length / (verts.length / 3);\n\t\t\t\tif (normals)\n\t\t\t\t\ttriangle_sub_geom.autoDeriveNormals = false;\n\t\t\t\tif (uvs)\n\t\t\t\t\ttriangle_sub_geom.autoDeriveUVs = false;\n\t\t\t\t//triangle_sub_geom.autoDeriveNormals = false;\n\t\t\t\tif (true) {\n\t\t\t\t\ttriangle_sub_geom.autoDeriveTangents = true;\n\t\t\t\t}\n\t\t\t\ttriangle_sub_geom.setIndices(indices);\n\t\t\t\ttriangle_sub_geom.setPositions(verts);\n\t\t\t\ttriangle_sub_geom.setNormals(normals);\n\t\t\t\ttriangle_sub_geom.setUVs(uvs);\n\t\t\t\ttriangle_sub_geom.setTangents(null);\n\t\t\t\ttriangle_sub_geom.setJointWeights(weights);\n\t\t\t\ttriangle_sub_geom.setJointIndices(w_indices);\n\n\t\t\t\tvar scaleU:number = subProps.get(1, 1);\n\t\t\t\tvar scaleV:number = subProps.get(2, 1);\n\t\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\n\n\t\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\n\t\t\t\t\tsetSubUVs = true;\n\t\t\t\t\tscaleU = geoScaleU / scaleU;\n\t\t\t\t\tscaleV = geoScaleV / scaleV;\n\t\t\t\t}\n\n\t\t\t\tif (setSubUVs)\n\t\t\t\t\ttriangle_sub_geom.scaleUV(scaleU, scaleV);\n\t\t\t\tgeom.addSubGeometry(triangle_sub_geom);\n\t\t\t\tif (this.awd_file_data.debug)\n\t\t\t\t\tconsole.log(\"Parsed a TriangleSubGeometry\");\n\t\t\t}\n\n\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\n\t\t\t// when creating meshes (and their material assignments.)\n\n\t\t\tsubs_parsed++;\n\t\t}\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\n\t\t\tgeom.scaleUV(geoScaleU, geoScaleV);\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data=geom;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a TriangleGeometry: Name = \" + name);\n\t\t}\n\t}\n\n}\n\nexport = GeometryAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass LightAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\t\n\t\tvar light:LightBase;\n\t\tvar newShadowMapper:ShadowMapperBase;\n\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar lightType:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.propsNrType, 2:this.awd_file_data.propsNrType, 3:AWD3Utils.COLOR, 4:this.awd_file_data.propsNrType, 5:this.awd_file_data.propsNrType, 6:AWD3Utils.BOOL, 7:AWD3Utils.COLOR, 8:this.awd_file_data.propsNrType, 9:AWD3Utils.UINT8, 10:AWD3Utils.UINT8, 11:this.awd_file_data.propsNrType, 12:AWD3Utils.UINT16, 21:this.awd_file_data.matrixNrType, 22:this.awd_file_data.matrixNrType, 23:this.awd_file_data.matrixNrType});\n\t\tvar shadowMapperType:number = props.get(9, 0);\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\n\n\t\tif (lightType == 1) {\n\t\t\tlight = new PointLight();\n\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 4) {\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlight.transform.matrix3D = mtx;\n\n\t\t}\n\n\t\tif (lightType == 2) {\n\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 1) {\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\n\t\t\t\t}\n\n\t\t\t\t//if (shadowMapperType == 2)\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\n\t\t\t\t//if (shadowMapperType == 3)\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\n\n\t\t\t}\n\n\t\t}\n\t\tlight.name=name;\n\t\tlight.color = props.get(3, 0xffffff);\n\t\tlight.specular = props.get(4, 1.0);\n\t\tlight.diffuse = props.get(5, 1.0);\n\t\tlight.ambientColor = props.get(7, 0xffffff);\n\t\tlight.ambient = props.get(8, 0.0);\n\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\n\t\tif (newShadowMapper) {\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\n\t\t\t\tif (props.get(10, 1) != 1) {\n\t\t\t\t\tnewShadowMapper.depthMapSize = this.awd_file_data.getDepthSizeFromEnum(props.get(10, 1));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (props.get(10, 2) != 2) {\n\t\t\t\t\tnewShadowMapper.depthMapSize = this.awd_file_data.getDepthSizeFromEnum(props.get(10, 2));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlight.shadowMapper = newShadowMapper;\n\t\t\tlight.castsShadows = true;\n\t\t}\n\n\t\tif (par_id != 0) {\n\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id)\n\n\t\t\tif (parent!=undefined){\n\t\t\t\tparent.addChild(light);\n\t\t\t\tparentName = parent.name;\n\t\t\t} else {\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find a parent for this.awd_file_data Light\");\n\t\t\t}\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t//(<DisplayObjectContainer> this.awd_file_data._pContent).addChild(light);\n\t\t}\n\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = light;\n\n\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + this.awd_file_data.cur_block.name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\n\t}\n\n\n}\n\nexport = LightAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\n\nclass LightPickerAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar numLights:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\n\t\tvar k:number = 0;\n\t\tvar lightID:number = 0;\n\n\t\tvar returnedArrayLight:Array<any>;\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\n\n\t\tfor (k = 0; k < numLights; k++) {\n\t\t\tlightID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar light:LightBase = <LightBase>this.awd_file_data.getAssetByID(lightID)\n\n\t\t\tif (light!=undefined) {\n\t\t\t\tlightsArray.push(<LightBase> light);\n\t\t\t\tlightsArrayNames.push(( <LightBase> light).name);\n\n\t\t\t} else {\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find a Light Nr \" + k + \" (ID = \" + lightID + \" ) for this.awd_file_data LightPicker\");\n\t\t\t}\n\t\t}\n\n\t\tif (lightsArray.length == 0) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not create this.awd_file_data LightPicker, cause no Light was found.\");\n\t\t\tthis.awd_file_data.parseUserAttributes();\n\t\t\treturn undefined; //return without any more parsing for this.awd_file_data block\n\t\t}\n\n\t\tvar lightPicker:LightPickerBase = new StaticLightPicker(lightsArray);\n\t\tthis.awd_file_data.cur_block.data = lightPicker;\n\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + lightsArrayNames.toString());\n\t\t}\n\t}\n\n\n}\n\nexport = LightPickerAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\n\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\")\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass MaterialAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\t// version 2.0\n\t\t////blockLength = block.len;\n\t\tvar name:string;\n\t\tvar type:number;\n\t\tvar props:AWDProperties;\n\t\tvar mat:MethodMaterial;\n\t\tvar attributes:Object;\n\t\tvar finalize:boolean;\n\t\tvar num_methods:number;\n\t\tvar methods_parsed:number;\n\t\tvar returnedArray:Array<any>;\n\t\tvar mat:MethodMaterial;\n\t\tvar normalTexture:Single2DTexture;\n\t\tvar specTexture:Single2DTexture;\n\t\tvar returnedArray:Array<any>;\n\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\ttype = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tnum_methods = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\n\t\tif((this.awd_file_data.major_version==2)&&(this.awd_file_data.major_version==0)) {\n\n\t\t\t// Read material numerical properties\n\t\t\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\n\t\t\tprops = this.awd_file_data.parseProperties({\n\t\t\t\t1: AWD3Utils.INT32,\n\t\t\t\t2: AWD3Utils.BADDR,\n\t\t\t\t10: this.awd_file_data.propsNrType,\n\t\t\t\t11: AWD3Utils.BOOL,\n\t\t\t\t12: this.awd_file_data.propsNrType,\n\t\t\t\t13: AWD3Utils.BOOL\n\t\t\t});\n\t\t\tmethods_parsed = 0;\n\t\t\twhile (methods_parsed < num_methods) {\n\t\t\t\tvar method_type:number;\n\n\t\t\t\tmethod_type = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\tthis.awd_file_data.parseProperties(null);\n\t\t\t\tthis.awd_file_data.parseUserAttributes();\n\t\t\t\tmethods_parsed += 1;\n\t\t\t}\n\t\t\tvar debugString:string = \"\";\n\t\t\tattributes = this.awd_file_data.parseUserAttributes();\n\t\t\tif (type === 1) { // Color material\n\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\t\tvar color:number;\n\t\t\t\tcolor = props.get(1, 0xffffff);\n\t\t\t\t/*if (this.awd_file_data.materialMode < 2) {\n\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\n\t\t\t\t} else {\n\t\t\t\t\tmat = new MethodMaterial(color);\n\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t}*/\n\t\t\t} else if (type === 2) {\n\t\t\t\tvar tex_addr:number = props.get(2, 0);\n\t\t\t\tvar texture:TextureBase=undefined;\n\t\t\t\tif (tex_addr > 0) {\n\t\t\t\t\tvar texture:TextureBase = <TextureBase> this.awd_file_data.getAssetByID(tex_addr);\n\t\t\t\t}\n\t\t\t\tif (texture==undefined) {\n\t\t\t\t\ttexture= DefaultMaterialManager.getDefaultTexture();\n\t\t\t\t}\n\n\t\t\t\tmat = new MethodMaterial(<Single2DTexture>texture);\n\t\t\t\t/*\n\t\t\t\tif (this.awd_file_data.materialMode < 2) {\n\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\n\t\t\t\t} else {\n\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t}\n\n\t\t\tmat.extra = attributes;\n\t\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\t\tmat.repeat = props.get(13, false);\n\t\t\tmat.name=name;\n\t\t\tif (this.awd_file_data.debug) {\n\t\t\t\tconsole.log(debugString);\n\n\t\t\t}\n\t\t\tthis.awd_file_data.cur_block.data=mat;\n\t\t\treturn;\n\t\t}\n\n\t\t// version 2.1+\n\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT32, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 4:AWD3Utils.UINT8, 5:AWD3Utils.BOOL, 6:AWD3Utils.BOOL, 7:AWD3Utils.BOOL, 8:AWD3Utils.BOOL, 9:AWD3Utils.UINT8, 10:this.awd_file_data.propsNrType, 11:AWD3Utils.BOOL, 12:this.awd_file_data.propsNrType, 13:AWD3Utils.BOOL, 15:this.awd_file_data.propsNrType, 16:AWD3Utils.UINT32, 17:AWD3Utils.BADDR, 18:this.awd_file_data.propsNrType, 19:this.awd_file_data.propsNrType, 20:AWD3Utils.UINT32, 21:AWD3Utils.BADDR, 22:AWD3Utils.BADDR});\n\t\tvar spezialType:number = props.get(4, 0);\n\t\tvar debugString:string = \"Parsed Material \";\n\n\t\tif (spezialType >= 2) {//this.awd_file_data is no supported material\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (type <= 2) {// Color material\n\t\t\t/*\n\t\t\tif (this.awd_file_data.materialMode == 1)\n\t\t\t\tspezialType = 0;\n\t\t\telse if (this.awd_file_data.materialMode == 2)\n\t\t\t\tspezialType = 1;\n\t\t\t\t*/\n\n\t\t\tif (spezialType < 2) {//this.awd_file_data is SinglePass or MultiPass\n\n\t\t\t\tif (type == 1) {// Color material\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\n\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\n\t\t\t\t\t\tmat = new MethodMaterial(color);\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\n\n\t\t\t\t\t} else { //\tSinglePassMaterial\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\t\t\t}\n\n\t\t\t\t} else if (type == 2) {// texture material\n\t\t\t\t\tvar tex_addr:number = props.get(2, 0);//TODO temporarily swapped so that diffuse texture goes to ambient\n\t\t\t\t\tvar diftexture:TextureBase=undefined;\n\t\t\t\t\tif (tex_addr > 0) {\n\t\t\t\t\t\tdiftexture = <TextureBase> this.awd_file_data.getAssetByID(tex_addr);\n\t\t\t\t\t}\n\t\t\t\t\tif (diftexture==undefined) {\n\t\t\t\t\t\tdiftexture= DefaultMaterialManager.getDefaultTexture();\n\t\t\t\t\t}\n\t\t\t\t\tmat = new MethodMaterial(<Single2DTexture>diftexture);\n\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + diftexture.name;\n\t\t\t\t\t} else {//\tSinglePassMaterial\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + diftexture.name;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tvar diffuseTex_addr:number = props.get(17, 0);\n\n\t\t\t\tvar diffuseTexture:TextureBase = undefined;\n\t\t\t\tif (diffuseTex_addr > 0) {\n\t\t\t\t\tdiffuseTexture = <Single2DTexture> this.awd_file_data.getAssetByID(diffuseTex_addr);\n\t\t\t\t}\n\t\t\t\tif (diffuseTexture) {\n\t\t\t\t\tmat.diffuseTexture = <Single2DTexture>diffuseTexture;\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\n\t\t\t\t}\n\n\t\t\t\tvar normalTex_addr:number = props.get(3, 0);\n\n\n\t\t\t\tnormalTexture = undefined;\n\t\t\t\tif (normalTex_addr > 0) {\n\t\t\t\t\tnormalTexture = <Single2DTexture> this.awd_file_data.getAssetByID(normalTex_addr);\n\t\t\t\t}\n\n\t\t\t\tvar specTex_addr:number = props.get(21, 0);\n\t\t\t\tspecTexture=undefined;\n\t\t\t\tif (specTex_addr > 0) {\n\t\t\t\t\tspecTexture = <Single2DTexture> this.awd_file_data.getAssetByID(specTex_addr);\n\t\t\t\t}\n\n\t\t\t\tvar lightPickerAddr:number = props.get(22, 0);\n\t\t\t\tif(lightPickerAddr>0) {\n\t\t\t\t\tmat.lightPicker = <LightPickerBase> this.awd_file_data.getAssetByID(lightPickerAddr);\n\t\t\t\t}\n\n\t\t\t\tmat.smooth = props.get(5, true);\n\t\t\t\tmat.mipmap = props.get(6, true);\n\t\t\t\tmat.bothSides = props.get(7, false);\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\n\t\t\t\tmat.blendMode = this.awd_file_data.getBlendModeStringFromEnum(props.get(9, 0));\n\t\t\t\tmat.repeat = props.get(13, false);\n\n\t\t\t\tif (normalTexture)\n\t\t\t\t\tmat.normalMap = normalTexture;\n\n\t\t\t\tif (specTexture)\n\t\t\t\t\tmat.specularMap = specTexture;\n\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\t\t\tmat.ambient = props.get(15, 1.0);\n\t\t\t\tmat.diffuseColor = props.get(16, 0xffffff);\n\t\t\t\tmat.specular = props.get(18, 1.0);\n\t\t\t\tmat.gloss = props.get(19, 50);\n\t\t\t\tmat.specularColor = props.get(20, 0xffffff);\n\n\t\t\t\tvar methods_parsed:number = 0;\n\t\t\t\tvar targetID:number;\n\n\t\t\t\twhile (methods_parsed < num_methods) {\n\t\t\t\t\tvar method_type:number;\n\t\t\t\t\tmethod_type = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\t\t\t\tprops = this.awd_file_data.parseProperties({\n\t\t\t\t\t\t1: AWD3Utils.BADDR,\n\t\t\t\t\t\t2: AWD3Utils.BADDR,\n\t\t\t\t\t\t3: AWD3Utils.BADDR,\n\t\t\t\t\t\t101: this.awd_file_data.propsNrType,\n\t\t\t\t\t\t102: this.awd_file_data.propsNrType,\n\t\t\t\t\t\t103: this.awd_file_data.propsNrType,\n\t\t\t\t\t\t201: AWD3Utils.UINT32,\n\t\t\t\t\t\t202: AWD3Utils.UINT32,\n\t\t\t\t\t\t301: AWD3Utils.UINT16,\n\t\t\t\t\t\t302: AWD3Utils.UINT16,\n\t\t\t\t\t\t401: AWD3Utils.UINT8,\n\t\t\t\t\t\t402: AWD3Utils.UINT8,\n\t\t\t\t\t\t601: AWD3Utils.COLOR,\n\t\t\t\t\t\t602: AWD3Utils.COLOR,\n\t\t\t\t\t\t701: AWD3Utils.BOOL,\n\t\t\t\t\t\t702: AWD3Utils.BOOL,\n\t\t\t\t\t\t801: AWD3Utils.MTX4x4\n\t\t\t\t\t});\n\n\t\t\t\t\tswitch (method_type) {\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffectMethod\n\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tvar fx_method:EffectMethodBase = <EffectMethodBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t\tmat.addEffectMethod(fx_method);\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<EffectMethodBase> fx_method).name;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\n\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tvar shadow_method:ShadowMethodBase = <ShadowMethodBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t\tmat.shadowMethod=shadow_method;\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<ShadowMethodBase> shadow_method).name;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tvar cubeTex:SingleCubeTexture=undefined;\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tcubeTex = <SingleCubeTexture>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(cubeTex==undefined){\n\t\t\t\t\t\t\t\tcubeTex=<SingleCubeTexture>this.awd_file_data.getDefaultCubeTexture();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data EnvMapAmbientMethodMaterial\");\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod();\n\t\t\t\t\t\t\tmat.texture = cubeTex;\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + (<SingleCubeTexture> cubeTex).name;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(thisTex==undefined){\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the GradientDiffuseTexture (ID = \" + targetID + \" ) for this.awd_file_data GradientDiffuseMethod\");\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(<Single2DTexture>thisTex);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + (<Single2DTexture>thisTex).name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(thisTex==undefined){\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this.awd_file_data LightMapDiffuseMethod\");\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(<Single2DTexture>thisTex, this.awd_file_data.getBlendModeStringFromEnum(props.get(401, 10)), false, mat.diffuseMethod);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + (<Single2DTexture> thisTex).name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(thisTex==undefined){\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the SecoundNormalMap (ID = \" + targetID + \" ) for this.awd_file_data SimpleWaterNormalMethod\");\n\t\t\t\t\t\t\t//if (!mat.normalMap)\n\t\t\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find a normal Map on this.awd_file_data Material to use with this.awd_file_data SimpleWaterNormalMethod\");\n\t\t\t\t\t\t\tif(mat.normalMap==undefined)\n\t\t\t\t\t\t\t\tmat.normalMap = <Single2DTexture>thisTex;\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(<Single2DTexture>mat.normalMap, <Single2DTexture>thisTex);\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + (<Single2DTexture> thisTex).name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tthis.awd_file_data.parseUserAttributes();\n\t\t\t\t\tmethods_parsed += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// todo: we should not need this.awd_file_data anymore (if using texture-atlas)\n\t\telse if ((type>=3)&&(type<=7)){\n\t\t\t// if this.awd_file_data is a curve material, we create it, finalize it, assign it to block-cache and return and return.\n\t\t\tvar color:number = props.get(1, 0xcccccc);\n\t\t\tdebugString+=color;\n\t\t\n\t\t\tvar diffuseTex_addr:number = props.get(2, 0);\n\t\t\n\t\t\tvar diffuseTexture:TextureBase=undefined;\n\t\t\tif (diffuseTex_addr>0) {\n\t\t\t\tdiffuseTexture = <TextureBase>this.awd_file_data.getAssetByID(diffuseTex_addr);\n\t\t\t}\n\t\t\tif(diffuseTex_addr==undefined){\n\t\t\t\tdiffuseTexture=DefaultMaterialManager.getDefaultTexture();\n\t\t\t}\n\t\t\n\t\t\tvar basic_mat:BasicMaterial = new BasicMaterial(<Single2DTexture>diffuseTexture);\n\t\t\t//debugString+= \" alpha = \"+props.get(10, 1.0)+\" \";\n\t\t\tdebugString+= \" texture = \"+diffuseTex_addr+\" \";\n\t\t\tbasic_mat.bothSides = true;\n\t\t\tbasic_mat.preserveAlpha = true;\n\t\t\tbasic_mat.alphaBlending = true;\n\t\t\tbasic_mat.extra = this.awd_file_data.parseUserAttributes();\n\t\t\tif (this.awd_file_data.debug)\n\t\t\t\tconsole.log(debugString);\n\t\t\tthis.awd_file_data.cur_block.data=basic_mat;\n\t\t\treturn;\n\t\t\n\t\t}\n\t\tmat.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data=mat;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(debugString);\n\t\t}\n\t}\n\n}\n\nexport = MaterialAWDParser;",
    "/**\n * Created by 80prozent on 4/18/2015.\n */\n\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AWD3Utils\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass MeshAWDParser extends AWDBlockParserBase\n{\n\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar num_materials:number;\n\t\tvar materials_parsed:number;\n\t\tif(this.awd_file_data.cur_block.type==23) {\n\t\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\n\t\t}\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar geom:Geometry = <Geometry>this.awd_file_data.getAssetByID(data_id)\n\n\t\tif (geom==undefined) {\n\t\t\tgeom = new Geometry();\n\t\t}\n\n\t\tthis.awd_file_data.cur_block.geoID = data_id;\n\t\tvar materials:Array<MaterialBase> = new Array<MaterialBase>();\n\t\tnum_materials = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\tvar materialNames:Array<string> = new Array<string>();\n\t\tmaterials_parsed = 0;\n\n\n\t\twhile (materials_parsed < num_materials) {\n\t\t\tvar mat_id:number;\n\t\t\tmat_id = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar m:MaterialBase = <MaterialBase> this.awd_file_data.getAssetByID(mat_id);\n\t\t\tif(m!=undefined) {\n\t\t\t\tmaterials.push(m);\n\t\t\t\tmaterialNames.push(m.name);\n\t\t\t}\n\t\t\tmaterials_parsed++;\n\t\t}\n\n\t\tvar mesh:Mesh = new Mesh(geom, null);\n\n\t\tif(this.awd_file_data.cur_block.type==23) {\n\n\t\t\tmesh.transform.matrix3D = mtx;\n\t\t\tif(par_id>0) {\n\t\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id)\n\n\t\t\t\tif (parent != undefined) {\n\t\t\t\t\tparent.addChild(mesh);\n\t\t\t\t\tparentName = parent.name;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\n\t\t\tmesh.material = materials[0];\n\t\t} else if (materials.length > 1) {\n\t\t\tvar i:number;\n\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\n\t\t\t}\n\t\t}\n\t\tif ((this.awd_file_data.major_version > 2)||((this.awd_file_data.major_version >= 2) && (this.awd_file_data.minor_version == 1))) {\n\t\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8, 5:AWD3Utils.BOOL});\n\t\t\tmesh.pivot = new Vector3D(<number>props.get(1, 0), <number>props.get(2, 0), <number> props.get(3, 0));\n\t\t\tmesh.castsShadows = props.get(5, true);\n\t\t} else {\n\t\t\tthis.awd_file_data.parseProperties(null);\n\t\t}\n\n\t\tmesh.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = mesh;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a Mesh: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\n\t\t}\n\t}\n\n\n}\n\nexport = MeshAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass MetadataAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT32, 2:AWD3Utils.AWDSTRING, 3:AWD3Utils.AWDSTRING, 4:AWD3Utils.AWDSTRING, 5:AWD3Utils.AWDSTRING});\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\n\t\t}\n\t}\n\n\n}\n\nexport = MetadataAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDBitFlags\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport MovieClip \t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport Timeline\t\t\t \t\t\t= require(\"awayjs-display/lib/base/Timeline\");\n\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport View\t\t\t= require(\"awayjs-display/lib/containers/View\");\n\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\n\nclass MovieClipAWDParser extends AWDBlockParserBase\n{\n\n\tprivate factory:AS2SceneGraphFactory;\n\tconstructor(view:View = null)\n\t{\n\t\tsuper();\n\t\tthis.factory = new AS2SceneGraphFactory(view);\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar c:number;\n\t\tvar new_timeline:Timeline = new Timeline();\n\t\tvar new_mc = this.factory.createMovieClip(new_timeline)\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar isScene = !!this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar sceneID = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar fps:number = this.awd_file_data.newBlockBytes.readFloat();\n\t\t//console.log(\"fps = \"+fps);\n\t\t//new_mc.fps=fps;\n\t\tvar ms_per_frame = 1000 / fps;\n\t\tvar num_instances:number=0;\n\t\tvar num_all_display_instances:number=0;\n\n\n\t\t// register list of potential childs\n\t\t// a potential child can be reused on a timeline (added / removed / added)\n\t\t// However, for each potential child, we need to register the max-number of instances that a frame contains\n\t\t// we parse 2 lists of potential-childs:\n\t\t// -\tthe first list contains potential-childs that are only ever instanced once per frame.\n\t\t// -\tthe second list contains potential-childs that are instanced multiple times on some frames.\n\n\t\t// on registering a child, the child gets a incremental-id assigned. This is the id, that the commands are using to access the childs.\n\t\t// hence we need to be careful to register all objects in correct order.\n\n\t\tvar num_potential_childs:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tfor (i = 0; i < num_potential_childs; i++) {\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\n\t\t\tif (cmd_asset != null) {\n\t\t\t\tnew_timeline.registerPotentialChild(cmd_asset);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\n\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t}\n\t\t}\n\t\tnum_all_display_instances+=num_potential_childs;\n\t\tvar num_potential_childs_multi_instanced = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tnum_potential_childs+=num_potential_childs_multi_instanced;\n\t\tfor (i = 0; i < num_potential_childs_multi_instanced; i++) {\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tnum_instances = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\tnum_all_display_instances+=num_instances;\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\n\t\t\tif (cmd_asset != null) {\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\n\t\t\t\t\tnew_timeline.registerPotentialChild(cmd_asset);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\n\t\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\n\t\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\n\t\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//console.log(\"Parsed \"+num_potential_childs+\" potential childs. They will be used by \"+num_all_display_instances+\" instances.\");\n\n\t\t// register list of potential sounds\n\t\t// a potential child can be reused on a timeline (added / removed / added)\n\t\tvar num_potential_sounds = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tfor (i = 0; i < num_potential_sounds; i++) {\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\n\t\t\tif (cmd_asset != null) {\n\t\t\t\t//todo: register sound objects on movieclip\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//todo: this.awd_file_data is a error that might break complete timeline, because all sound obj-id shift\n\t\t\t}\n\t\t}\n\t\t//console.log(\"Parsed \"+num_potential_sounds+\" potential sounds\");\n\n\t\tvar numFrames = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\t//console.log(\"numFrames \"+numFrames);\n\n\t\tvar totalDuration:number = 0;\n\t\tvar frameDuration:number;\n\t\tvar numLabels:number;\n\t\tvar numCommands:number;\n\t\tvar objectID:number;\n\t\tvar target_depth:number;\n\t\tvar resourceID:number;\n\t\tvar number_of_obj:number;\n\t\tvar commandType:number;\n\t\t//var frame:TimelineKeyFrame;\n\t\tvar hasDepthChanges:boolean;\n\t\tvar sessionCount:number=0;\n\t\tfor (i = 0; i < numFrames; i++) {\n\t\t\t// todo: remove the ms_per_frame to set the duration in frames\n\t\t\tframeDuration = this.awd_file_data.newBlockBytes.readUnsignedInt()*ms_per_frame;\n\t\t\t//frame = new TimelineKeyFrame(totalDuration, frameDuration);\n\t\t\ttotalDuration += frameDuration;\n\n\t\t\tnumLabels = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\t//for (j = 0; j < numLabels; j++)\n\t\t\t//\tnew_timeline._labels[this.awd_file_data.parseVarStr()]=new_timeline.numKeyFrames();\n\n\t\t\tnumCommands = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t//console.log(\"numCommands \"+numCommands);\n\t\t\t//traceString += \"\\n      Commands \" + numCommands;\n\t\t\thasDepthChanges = false;\n\t\t\tfor (j = 0; j < numCommands; j++) {\n\t\t\t\tcommandType = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\n\t\t\t\t// 1 = remove a number of objects by depth\n\t\t\t\t// 2 = add a object by child-id at specific depth\n\t\t\t\t// 3 = update a object by child-id\n\t\t\t\t// 4 = add / update sound - (not finished)\n\n\t\t\t\tswitch (commandType) {\n\n\t\t\t\t\tcase 1:// remove a number of objects at specific depth\n\t\t\t\t\t\tnumber_of_obj = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t//console.log(\"number_of_obj \", number_of_obj);\n\t\t\t\t\t\tvar remove_depths:Array<number>=new Array<number>();\n\t\t\t\t\t\tfor (c = 0; c < number_of_obj; c++) {\n\t\t\t\t\t\t\t// Remove Object Command\n\t\t\t\t\t\t\ttarget_depth = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\tremove_depths.push(target_depth);\n\t\t\t\t\t\t\t//console.log(\"\\n       - Remove object at depth: \" + target_depth);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//frame.frameConstructCommands.push(new RemoveChildrenAtDepthCommand(remove_depths));\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2:// add a of object by child-id at specific depth\n\t\t\t\t\tcase 3:// update a object by child-id\n\t\t\t\t\t\tobjectID = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t//console.log(\"add / update objectID \", objectID);\n\t\t\t\t\t\tif (commandType == 2) {\n\t\t\t\t\t\t\thasDepthChanges=true;\n\t\t\t\t\t\t\ttarget_depth = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\t//console.log(\"target_depth \", target_depth);\n\t\t\t\t\t\t\tvar potChild = new_timeline.getPotentialChildPrototype(objectID);\n\t\t\t\t\t\t\tif (potChild != undefined) {\n\t\t\t\t\t\t\t\t//frame.frameConstructCommands.push(new AddChildAtDepthCommand(objectID, target_depth, sessionCount));\n\t\t\t\t\t\t\t\tsessionCount++;\n\t\t\t\t\t\t\t\t// if the object is a tetfield, we set the textfield-name as instancename\n\t\t\t\t\t\t\t\tif(potChild.isAsset(TextField)) {\n\t\t\t\t\t\t\t\t\t//frame.frameConstructCommands.push(new SetInstanceNameCommand(objectID, potChild.name));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tconsole.log(\"ERROR: could not find the objectID \", objectID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar props_flag = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t/*\tProps_flags\n\t\t\t\t\t\t 1: read display matrix - 6 x float,\n\t\t\t\t\t\t 2: read display matrix - read another UINT8-bitflag that determinates what matrix components to parse\n\t\t\t\t\t\t 3: read color matrix - 4 x float, 4 x uint16\n\t\t\t\t\t\t 4: read color matrix - read another UINT8-bitflag that determinates what matrix components to parse\n\t\t\t\t\t\t 5: blendmode - uint8\n\t\t\t\t\t\t 6: visible - boolean\n\t\t\t\t\t\t 7: AWD3Parser.UINT8\n\t\t\t\t\t\t });*/\n\t\t\t\t\t\t// read display matrix\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG1)) {\n\t\t\t\t\t\t\tvar thisMatrix = new Matrix3D();\n\t\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG2)) {\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthisMatrix.rawData[0] = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.rawData[1] = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.rawData[4] = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.rawData[5] = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.position = new Vector3D(this.awd_file_data.newBlockBytes.readFloat(), this.awd_file_data.newBlockBytes.readFloat(), 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//frame.frameConstructCommands.push(new UpdatePropertyCommand(objectID, \"_iMatrix3D\", thisMatrix));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// read colortransforms\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG3)) {\n\t\t\t\t\t\t\tvar thisColorTransform = new ColorTransform();\n\t\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG4)) {\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthisColorTransform.redMultiplier = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.greenMultiplier = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.blueMultiplier = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.alphaMultiplier = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.redOffset = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\t\tthisColorTransform.greenOffset = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\t\tthisColorTransform.blueOffset = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\t\tthisColorTransform.alphaOffset = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG5)) {\n\t\t\t\t\t\t\tvar blendmode_int = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\t\t\t\t\tvar blendmode_string = this.awd_file_data.getBlendModeStringFromEnum(blendmode_int);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG6)) {\n\t\t\t\t\t\t\t//frame.frameConstructCommands.push(new UpdatePropertyCommand(objectID, \"visible\", this.awd_file_data.newBlockBytes.readByte()));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG7)) {\n\t\t\t\t\t\t\tvar instanceName = this.awd_file_data.parseVarStr();\n\t\t\t\t\t\t\tif (instanceName.length) {\n\t\t\t\t\t\t\t\t//frame.frameConstructCommands.push(new SetInstanceNameCommand(objectID, instanceName));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG8)) {\n\t\t\t\t\t\t\tvar mask_id_nums = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t\tvar mask_ids = new Array();\n\t\t\t\t\t\t\tfor (var mi_cnt = 0; mi_cnt < mask_id_nums; mi_cnt++) {\n\t\t\t\t\t\t\t\tmask_ids.push(this.awd_file_data.newBlockBytes.readShort());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (mask_ids.length > 0) {\n\t\t\t\t\t\t\t\tif ((mask_ids.length == 1) && (mask_ids[0] == -1)) {\n\t\t\t\t\t\t\t\t\t// TODO: this.awd_file_data object is used as mask\n\t\t\t\t\t\t\t\t\t//frame.frameConstructCommands.push(new UpdatePropertyCommand(objectID, \"_iMaskID\", objectID));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//else\n\t\t\t\t\t\t\t\t//\tframe.frameConstructCommands.push(new SetMaskCommand(objectID, mask_ids));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 4:\n\n\t\t\t\t\t\t// Add Sound Command\n\t\t\t\t\t\t// TODO: create CommandPropsSound and check which asset to use\n\t\t\t\t\t\tobjectID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\t// TODO: implement sound in timeline\n\t\t\t\t\t\t//commandString += \"\\n      - Add new Sound AWD-ID = \" + resourceID.toString() + \" as object_id = \" + objectID.toString();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t//commandString += \"\\n       - Unknown Command Type = \" + commandType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasDepthChanges) {\n\t\t\t\t// only want to do this.awd_file_data once after all children's depth values are updated\n\t\t\t\t//frame.frameConstructCommands.push(new ApplyAS2DepthsCommand());\n\t\t\t\thasDepthChanges = false;\n\t\t\t}\n\n\t\t\tvar length_code = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tif (length_code > 0) {\n\t\t\t\t// TODO: Script should probably not be attached to keyframes?\n\t\t\t\t//var frame_code = this.awd_file_data.newBlockBytes.readUTFBytes(length_code);\n\t\t\t\t//frame.framePostConstructCommands.push(new ExecuteScriptCommand(frame_code));\n\t\t\t\t//traceString += \"\\nframe-code = \" + frame_code;\n\t\t\t}\n\t\t\t//traceString += commandString;\n\t\t\t//trace(\"length_code = \"+length_code+\" frame_code = \"+frame_code);\n\t\t\tthis.awd_file_data.newBlockBytes.readUnsignedInt();// user attributes - skip for now\n\t\t\t//console.log(traceString);\n\t\t\t//new_timeline.addFrame(frame);\n\n\t\t}\n\t\tthis.awd_file_data.parseProperties(null);\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = new_mc;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| isScene = \" + isScene + \"| sceneID = \" + sceneID + \"| numFrames = \" + numFrames);\n\t}\n\n\n}\n\nexport = MovieClipAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nclass PrefabAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar name:string;\n\t\tvar prefab:PrefabBase;\n\t\tvar primType:number;\n\t\tvar subs_parsed:number;\n\t\tvar props:AWDProperties;\n\t\tvar bsm:Matrix3D;\n\n\t\t// Read name and sub count\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tprimType = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tprops = this.awd_file_data.parseProperties({101:this.awd_file_data.geoNrType, 102:this.awd_file_data.geoNrType, 103:this.awd_file_data.geoNrType, 110:this.awd_file_data.geoNrType, 111:this.awd_file_data.geoNrType, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 303:AWD3Utils.UINT16, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL, 703:AWD3Utils.BOOL, 704:AWD3Utils.BOOL});\n\n\t\tvar primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"]\n\n\t\tswitch (primType) {\n\t\t\t// to do, not all properties are set on all primitives\n\n\t\t\tcase 1:\n\t\t\t\tprefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tprefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\tprefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 4:\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\n\t\t\t\tif (!props.get(701, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\n\t\t\t\tif (!props.get(702, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\n\t\t\t\tif (!props.get(703, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\t\tprefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 6:\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 7:\n\t\t\t\tprefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tprefab = new PrefabBase();\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\n\t\t\t//geom.subGeometries;\n\t\t\t//geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\n\t\t}\n\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = prefab;\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tif ((primType < 0) || (primType > 7)) {\n\t\t\t\tprimType = 0;\n\t\t\t}\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + this.awd_file_data.cur_block.name + \"| type = \" + primitiveTypes[primType]);\n\t\t}\n\t}\n\n\n}\n\nexport = PrefabAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\n\nclass ShadowMethodAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar type:number;\n\t\tvar data_len:number;\n\t\tvar asset:ShadowMethodBase;\n\t\tvar shadowLightID:number;\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tshadowLightID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar light:LightBase=<LightBase> this.awd_file_data.getAssetByID(shadowLightID);\n\n\t\tif (light==undefined) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the TargetLight (ID = \" + shadowLightID + \" ) for this.awd_file_data ShadowMethod - ShadowMethod not created\");\n\t\t\treturn;\n\t\t}\n\n\t\tasset = this.parseShadowMethodList(light);\n\n\t\tif (!asset)\n\t\t\treturn;\n\t\tthis.awd_file_data.parseUserAttributes(); // Ignore for now\n\t\tthis.awd_file_data.cur_block.data = asset;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", light.name);\n\t\t}\n\t}\n\n\n\t// this.awd_file_data functions reads and creates a ShadowMethodMethod\n\tprivate parseShadowMethodList(light:LightBase):ShadowMethodBase\n\t{\n\n\t\tvar methodType:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar shadowMethod:ShadowMethodBase;\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 101:this.awd_file_data.propsNrType, 102:this.awd_file_data.propsNrType, 103:this.awd_file_data.propsNrType, 201:AWD3Utils.UINT32, 202:AWD3Utils.UINT32, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 401:AWD3Utils.UINT8, 402:AWD3Utils.UINT8, 601:AWD3Utils.COLOR, 602:AWD3Utils.COLOR, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL, 801:AWD3Utils.MTX4x4});\n\n\t\tvar targetID:number;\n\t\tvar returnedArray:Array<any>\n\t\tswitch (methodType) {\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this.awd_file_data CascadeShadowMapMethod - ShadowMethod not created\");\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\n\t\t\t//\t\t\t\t\t}\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 1002: //ShadowNearMethod\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\tvar shadow_meth:ShadowMapMethodBase = <ShadowMapMethodBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\tif (shadow_meth==undefined) {\n\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this.awd_file_data ShadowNearMethod - ShadowMethod not created\");\n\t\t\t\t\treturn shadowMethod;\n\t\t\t\t}\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> shadow_meth);\n\t\t\t\tbreak;\n\t\t\tcase 1101: //ShadowFilteredMethod\n\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t\tcase 1102: //ShadowDitheredMethod\n\n\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1103: //ShadowSoftMethod\n\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1104: //ShadowHardMethod\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\treturn shadowMethod;\n\t}\n}\n\nexport = ShadowMethodAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\n\nclass SharedMethodAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\n\t\tvar asset:EffectMethodBase;\n\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tasset = this.parseSharedMethodList();\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = asset;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\n\t\t}\n\t}\n\n\t// this.awd_file_data functions reads and creates a EffectMethod\n\tprivate parseSharedMethodList():EffectMethodBase\n\t{\n\n\t\tvar methodType:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar effectMethodReturn:EffectMethodBase;\n\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 101:this.awd_file_data.propsNrType, 102:this.awd_file_data.propsNrType, 103:this.awd_file_data.propsNrType, 104:this.awd_file_data.propsNrType, 105:this.awd_file_data.propsNrType, 106:this.awd_file_data.propsNrType, 107:this.awd_file_data.propsNrType, 201:AWD3Utils.UINT32, 202:AWD3Utils.UINT32, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 401:AWD3Utils.UINT8, 402:AWD3Utils.UINT8, 601:AWD3Utils.COLOR, 602:AWD3Utils.COLOR, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL});\n\t\tvar targetID:number;\n\t\tvar returnedArray:Array<any>;\n\n\t\tswitch (methodType) {\n\t\t\t// Effect Methods\n\t\t\tcase 401: //ColorMatrix\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\n\t\t\t\tbreak;\n\t\t\tcase 402: //ColorTransform\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\n\t\t\t\tbreak;\n\t\t\tcase 403: //EnvMap\n\n\t\t\t\t/*\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\tconsole.log('ENV MAP', targetID);\n\n\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [ TextureBase.assetType ], \"CubeTexture\");\n\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data EnvMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(<SingleCubeTexture> returnedArray[1], <number> props.get(101, 1));\n\t\t\t\ttargetID = props.get(2, 0);\n\t\t\t\tif (targetID > 0) {\n\t\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\n\t\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the Mask-texture (ID = \" + targetID + \" ) for this.awd_file_data EnvMapMethod\");\n\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <Texture2DBase> returnedArray[1];\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tbreak;\n\t\t\tcase 404: //LightMapMethod\n\t\t\t\t/*\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\n\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this.awd_file_data LightMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(returnedArray[1], this.awd_file_data.getBlendModeStringFromEnum(props.get(401, 10))); //usesecondaryUV not set\n\t\t\t\t*/\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureProjector.assetType]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this.awd_file_data ProjectiveTextureMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 406: //RimLightMethod\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\n\t\t\t\tbreak;\n\t\t\tcase 407: //AlphaMaskMethod\n\t\t\t\t/*\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\n\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the Alpha-texture (ID = \" + targetID + \" ) for this.awd_file_data AlphaMaskMethod\");\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(returnedArray[1], props.get(701, false));\n\t\t\t\t*/\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data RefractionEnvMapMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 410: //FresnelEnvMapMethod\n\t\t\t\t/*\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\n\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data FresnelEnvMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(returnedArray[1], props.get(101, 1));\n\t\t\t\t*/\n\t\t\t\tbreak;\n\t\t\tcase 411: //FogMethod\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\treturn effectMethodReturn;\n\n\t}\n\n}\n\nexport = SharedMethodAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass Single2DTextureAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\n\t\tvar asset:Single2DTexture;\n\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar data_len:number;\n\n\t\t//this.awd_file_data._texture_users[this.awd_file_data._cur_block_id.toString()] = [];\n\n\t\t// External\n\t\tif (type == 0) {\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar url:string;\n\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\n\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\n\n\t\t} else {\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\n\t\t\tvar data:ByteArray;\n\t\t\tdata = new ByteArray();\n\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\n\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\n\n\t\t\t//\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\n\t\t\t//\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\n\t\t\t// This gives the browser time to initialise image width / height.\n\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, data, true);\n\n\t\t}\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\n\t\t// Ignore for now\n\t\tthis.awd_file_data.parseProperties(null);\n\t\tthis.awd_file_data.parseUserAttributes();\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Bitmap for Texture\");\n\t\t}\n\t}\n\n\n}\n\nexport = Single2DTextureAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\n\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\nclass SingleCubeTextureAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar data_len:number;\n\t\tvar i:number;\n\n\t\t//this.awd_file_data._cubeTextures = new Array<any>();\n\t\t//this.awd_file_data._texture_users[ this.awd_file_data._cur_block_id.toString() ] = [];\n\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\n\t\t//this.awd_file_data._blocks[blockID].name =\n\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tfor (i = 0; i < 6; i++) {\n\t\t\t//this.awd_file_data.texture_users[this.awd_file_data.cur_block_id.toString()] = [];\n\t\t\t//this.awd_file_data.cubeTextures.push(null);\n\n\t\t\t// External\n\t\t\tif (type == 0) {\n\t\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\tvar url:string;\n\t\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\n\n\t\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\n\t\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block_id.toString() + \"#\" + i, new URLRequest(url), false, null, true);\n\t\t\t} else {\n\n\t\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\tvar data:ByteArray;\n\t\t\t\tdata = new ByteArray();\n\n\t\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\n\t\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block_id.toString() + \"#\" + i, null, false, ParserUtils.byteArrayToImage(data), true);\n\t\t\t}\n\t\t}\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\n\t\t// Ignore for now\n\t\tthis.awd_file_data.parseProperties(null);\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\t//this.awd_file_data._pPauseAndRetrieveDependencies();\n\t\t//this.awd_file_data._blocks[blockID].data = asset;\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\n\t\t\tconsole.log(\"Start parsing 6 \" + textureStylesNames[type] + \" Bitmaps for CubeTexture\");\n\t\t}\n\t}\n\n\n}\n\nexport = SingleCubeTextureAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nclass SkeletonAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar skeleton:Skeleton = new Skeleton();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tthis.awd_file_data.parseProperties(null); // Discard properties for now\n\n\t\tvar joints_parsed:number /*uint*/ = 0;\n\t\twhile (joints_parsed < num_joints) {\n\t\t\tvar joint:SkeletonJoint;\n\t\t\tvar ibp:Matrix3D;\n\t\t\t// Ignore joint id\n\t\t\tthis.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\tjoint = new SkeletonJoint();\n\t\t\tjoint.parentIndex = this.awd_file_data.newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\n\t\t\tjoint.name = this.awd_file_data.parseVarStr();\n\n\t\t\tibp = this.awd_file_data.parseMatrix3D();\n\t\t\tjoint.inverseBindPose = ibp.rawData;\n\t\t\t// Ignore joint props/attributes for now\n\t\t\tthis.awd_file_data.parseProperties(null);\n\t\t\tthis.awd_file_data.parseUserAttributes();\n\t\t\tskeleton.joints.push(joint);\n\t\t\tjoints_parsed++;\n\t\t}\n\n\t\t// Discard attributes for now\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = skeleton;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\n}\n\nexport = SkeletonAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\n\nclass SkeletonAnimClipAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar frame_dur:number;\n\t\tvar pose_addr:number /*uint*/;\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar num_frames:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tthis.awd_file_data.parseProperties(null); // Ignore properties for now\n\n\t\tvar frames_parsed:number /*uint*/ = 0;\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tpose_addr = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tframe_dur = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\tvar skel_pose:SkeletonPose = <SkeletonPose>this.awd_file_data.getAssetByID(pose_addr);\n\t\t\tif (skel_pose!=undefined) {\n\t\t\t\tclip.addFrame(skel_pose, frame_dur);\n\t\t\t}\n\t\t\tframes_parsed++;\n\t\t}\n\t\t// Ignore attributes for now\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = clip;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\n\n}\n\nexport = SkeletonAnimClipAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nclass SkeletonPoseAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar pose:SkeletonPose = new SkeletonPose();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tthis.awd_file_data.parseProperties(null); // Ignore properties for now\n\n\n\t\tvar joints_parsed:number /*uint*/ = 0;\n\t\twhile (joints_parsed < num_joints) {\n\t\t\tvar joint_pose:JointPose;\n\t\t\tvar has_transform:number /*uint*/;\n\t\t\tjoint_pose = new JointPose();\n\t\t\thas_transform = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\tif (has_transform == 1) {\n\t\t\t\tvar mtx_data:Array<number> = this.awd_file_data.parseMatrix43RawData();\n\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\n\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\n\t\t\t}\n\t\t\tjoints_parsed++;\n\t\t}\n\t\t// Skip attributes for now\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = pose;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\n}\n\nexport = SkeletonPoseAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass SkyboxAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar cubeTexAddr:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\n\t\tvar cube_tex:SingleCubeTexture = undefined;\n\t\tif(cubeTexAddr>0) {\n\t\t\tcube_tex = <SingleCubeTexture> this.awd_file_data.getAssetByID(cubeTexAddr);\n\t\t}\n\t\tif(cube_tex==undefined){\n\t\t\tcube_tex=<SingleCubeTexture>this.awd_file_data.getDefaultCubeTexture();\n\t\t}\n\t\t//if ((!returnedArrayCubeTex[0]) && (cubeTexAddr != 0))\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the Cubetexture (ID = \" + cubeTexAddr + \" ) for this.awd_file_data Skybox\");\n\t\tvar new_skybox:Skybox = new Skybox(<SingleCubeTexture> cube_tex);\n\n\t\tthis.awd_file_data.parseProperties(null)\n\t\tnew_skybox.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = new_skybox;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + this.awd_file_data.cur_block.name + \"' | CubeTexture-Name = \" + cube_tex.name);\n\t}\n\n\n}\n\nexport = SkyboxAWDParser;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport Font\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\nimport TesselatedFontTable\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nclass TesselatedFontAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar new_font:Font=new Font();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar font_style_cnt:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t//console.log(\"Font font_style_cnt = \"+font_style_cnt);\n\t\tfor (var i:number = 0; i < font_style_cnt; ++i) {\n\t\t\tvar font_style_name:string = this.awd_file_data.parseVarStr();\n\t\t\t//console.log(\"Font font_style_name = \"+font_style_name);\n\t\t\tvar new_font_style:TesselatedFontTable=new_font.get_font_table(font_style_name);\n\t\t\tnew_font_style.set_font_em_size(this.awd_file_data.newBlockBytes.readUnsignedInt());\n\t\t\t//console.log(\"Font new_font_style.font_em_size = \"+new_font_style.get_font_em_size);\n\t\t\tvar font_style_char_cnt:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t//console.log(\"Font font_style_char_cnt = \"+font_style_char_cnt);\n\t\t\tfor (var i:number = 0; i < font_style_char_cnt; ++i) {\n\n\t\t\t\tvar font_style_char:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"Font font_style_char = \"+font_style_char);\n\t\t\t\t// todo: this.awd_file_data is basically a simplified version of the subgeom-parsing done in parseTriangleGeometry. Make a parseSubGeom() instead (?)\n\t\t\t\tvar sm_len:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\tvar sm_end:number = this.awd_file_data.newBlockBytes.position + sm_len;\n\t\t\t\t//console.log(\"Font sm_len = \"+sm_len);\n\n\t\t\t\t//this.awd_file_data.parseProperties(null); // no properties for font-table subgeos\n\t\t\t\t// Loop through data streams\n\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < sm_end) {\n\t\t\t\t\tvar idx:number = 0;\n\t\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\n\n\t\t\t\t\t// Type, field type, length\n\t\t\t\t\tstr_type = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\t\t\tstr_ftype = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\n\n\t\t\t\t\tif (str_type == 2) {//face indicies positions\n\t\t\t\t\t\tvar indices:Array<number> = new Array<number>();\n\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\t\tindices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\n\t\t\t\t\t\tvar idx_pos:number = 0;\n\t\t\t\t\t\tvar idx_curves:number = 0;\n\t\t\t\t\t\tvar idx_uvs:number = 0;\n\n\t\t\t\t\t\tvar positions:Array<number> = new Array<number>();\n\t\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\n\t\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// x\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// y\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// type\n\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 2\n\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//this.awd_file_data.parseProperties(null);// no attributes for font-table subgeos\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(new AttributesBuffer());\n\t\t\t\tcurve_sub_geom.setIndices(indices);\n\t\t\t\tcurve_sub_geom.setPositions(positions);\n\t\t\t\tcurve_sub_geom.setCurves(curveData);\n\t\t\t\tcurve_sub_geom.setUVs(uvs);\n\t\t\t\tnew_font_style.set_subgeo_for_char(font_style_char.toString(), curve_sub_geom);\n\t\t\t}\n\t\t\t//console.log(\"Parsed a font-table\");\n\n\t\t}\n\t\t//console.log(\"Parsed a font\");\n\t\tthis.awd_file_data.parseProperties(null);\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = new_font;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a font: Name = '\" + this.awd_file_data.cur_block.name);\n\t\t}\n\n\t}\n\n}\n\nexport = TesselatedFontAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport View\t\t\t= require(\"awayjs-display/lib/containers/View\");\n\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\n\nclass TextfieldAWDParser extends AWDBlockParserBase\n{\n\n\tprivate factory:AS2SceneGraphFactory;\n\tconstructor(view:View = null)\n\t{\n\t\tsuper();\n\t\tthis.factory = new AS2SceneGraphFactory(view);\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar newTextField = this.factory.createTextField();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar text_field_type:number=this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tif(text_field_type==0) {\n\t\t\tnewTextField.type = \"static\";\n\t\t}\n\t\telse if(text_field_type==1) {\n\t\t\tnewTextField.type = \"dynamic\";\n\t\t}\n\t\telse if(text_field_type==2) {\n\t\t\tnewTextField.type = \"input\";\n\t\t}\n\t\telse if(text_field_type==3) {\n\t\t\tnewTextField.type =\"input\";\n\t\t\tnewTextField.displayAsPassword=true;\n\t\t}\n\n\t\tnewTextField.width=this.awd_file_data.newBlockBytes.readFloat();\n\t\tnewTextField.height=this.awd_file_data.newBlockBytes.readFloat();\n\t\tvar num_paragraphs:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar complete_text:string = \"\";\n\t\t//console.log(\"num_paragraphs  '\" + num_paragraphs);\n\t\tvar text_format:TextFormat;\n\t\tfor(var paracnt:number=0; paracnt<num_paragraphs; paracnt++){\n\n\t\t\tvar num_textruns:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t//console.log(\"num_textruns  '\" + num_textruns);\n\t\t\tfor(var textrun_cnt:number=0; textrun_cnt<num_textruns; textrun_cnt++) {\n\n\t\t\t\tvar format_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"format_id  '\" + format_id);\n\t\t\t\tvar textFormat:TextFormat = <TextFormat>this.awd_file_data.getAssetByID(format_id);\n\t\t\t\tif (textFormat==undefined) {\n\t\t\t\t\ttext_format = new TextFormat();\n\t\t\t\t}\n\t\t\t\t//console.log(\"text_format  '\" + text_format.name);\n\t\t\t\tvar txt_length = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"txt_length  '\" + txt_length);\n\t\t\t\tif (txt_length > 0) {\n\t\t\t\t\tvar this_txt:string = this.awd_file_data.newBlockBytes.readUTFBytes(txt_length);\n\t\t\t\t\t//newTextField.appendText(this_txt, text_format);\n\t\t\t\t\tcomplete_text+=this_txt;\n\t\t\t\t\t//console.log(\"this_txt  '\" + this_txt);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//newTextField.closeParagraph();\n\t\t}\n\t\tnewTextField.textFormat=text_format;\n\t\tnewTextField.text=complete_text;\n\n\t\t//newTextField.construct_geometry();\n\n\t\t// todo: optional matrix etc can be put in properties.\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BOOL, 3:AWD3Utils.BOOL, 4:AWD3Utils.BOOL, 5:AWD3Utils.BOOL, 7:AWD3Utils.UINT8, 8:AWD3Utils.UINT8, 9:AWD3Utils.UINT8});\n\t\tnewTextField.selectable = props.get(1, false);\n\t\tnewTextField.border =  props.get(3, false);\n\t\t//newTextField.renderHTML =  props.get(4, false);\n\t\t//newTextField.scrollable =  props.get(5, false);\n\t\t//newTextField.text_flow =  props.get(7, 0);\n\t\t//newTextField.orientationMode =  props.get(8, 0);\n\t\t//newTextField.line_mode =  props.get(9, 0);\n\n\t\tnewTextField.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = newTextField;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a TextField: Name = '\" + newTextField.name + \"| text  = \" + complete_text);\n\t\t}\n\n\t}\n\n\n}\n\nexport = TextfieldAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TextformatAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar newTextFormat:TextFormat = new TextFormat();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\t//console.log(\"this.awd_file_data._blocks[blockID].name  '\" + this.awd_file_data._blocks[blockID].name );\n\t\tvar font_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t//console.log(\"font_id  '\" + font_id);\n\t\tvar font_style_name:string = this.awd_file_data.parseVarStr();\n\t\t//console.log(\"font_style_name  '\" + font_style_name);\n\t\tvar font:Font = <Font>this.awd_file_data.getAssetByID(font_id);\n\t\tif (font==undefined) {\n\t\t\tfont = new Font();\n\t\t}\n\t\tnewTextFormat.font_name = font.name;\n\t\tvar font_table:TesselatedFontTable = font.get_font_table(font_style_name);\n\t\tif(font_table!=null){\n\t\t\tnewTextFormat.font_style = font_style_name;\n\t\t\tnewTextFormat.font_table = font_table;\n\t\t}\n\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t//console.log(\"mat  '\" + data_id);\n\t\tvar mat:BasicMaterial = <BasicMaterial> this.awd_file_data.getAssetByID(data_id);\n\n\t\tif (mat==undefined) {\n\t\t\tmat = new BasicMaterial();\n\t\t}\n\t\tmat.bothSides=true;\n\n\t\tvar num_uv_values:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t//console.log(\"num_uv_values  '\" + num_uv_values);\n\t\tvar uv_values:Array<number>=[];\n\t\tfor(var uvcnt:number=0; uvcnt<num_uv_values; uvcnt++){\n\t\t\tvar uv_value:number=this.awd_file_data.newBlockBytes.readFloat();\n\t\t\tuv_values.push(uv_value);\n\t\t\t//console.log(\"uv_value  '\" + uv_value);\n\t\t}\n\t\tnewTextFormat.uv_values=uv_values;\n\t\tvar format_props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT16, 2:AWD3Utils.UINT16, 3:AWD3Utils.UINT8,4:AWD3Utils.UINT8,5:AWD3Utils.UINT8,6:AWD3Utils.UINT8, 7:AWD3Utils.UINT16, 8:AWD3Utils.UINT16, 9:AWD3Utils.UINT16, 10:AWD3Utils.UINT16});\n\n\t\tnewTextFormat.size = format_props.get(1,12);\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\n\t\t//newTextFormat.rotated = format_props.get(3,false);\n\t\tnewTextFormat.kerning = format_props.get(4,true);\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\n\t\t//newTextFormat.align = format_props.get(6,0);\n\t\tnewTextFormat.indent = format_props.get(7,0);\n\t\tnewTextFormat.leftMargin = format_props.get(8,0);\n\t\tnewTextFormat.rightMargin = format_props.get(9,0);\n\t\t//newTextFormat.linespacing = format_props.get(10,0);\n\t\tnewTextFormat.size = format_props.get(1,12);\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\n\t\t//newTextFormat.rotated = format_props.get(3,false);\n\t\tnewTextFormat.kerning = format_props.get(4,true);\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\n\t\tnewTextFormat.material = mat;\n\t\tthis.awd_file_data.parseUserAttributes();// textformat has no extra-properties\n\t\t//newTextFormat.extra =\n\n\t\tthis.awd_file_data.cur_block.data = newTextFormat;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a TextFormat: Name = '\" + name + \" font: \"+font.name);\n\t\t}\n\t}\n\n\n}\n\nexport = TextformatAWDParser;/**\n * Created by 80prozent on 4/18/2015.\n */\n",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Short3Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\n\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\n\nclass VertexAnimClipAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar poseOnly:boolean=false;\n\t\tif(this.awd_file_data.cur_block.type==111){\n\t\t\tposeOnly=true\n\t\t}\n\t\tvar num_frames:number /*uint*/ = 1;\n\t\tvar num_submeshes:number /*uint*/;\n\t\tvar frames_parsed:number /*uint*/;\n\t\tvar subMeshParsed:number /*uint*/;\n\t\tvar frame_dur:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar str_len:number;\n\t\tvar str_end:number;\n\t\tvar geometry:Geometry;\n\t\tvar subGeom:TriangleSubGeometry;\n\t\tvar idx:number /*int*/ = 0;\n\t\tvar indices:Short3Attributes;\n\t\tvar verts:Array<number>;\n\t\tvar num_Streams:number /*int*/ = 0;\n\t\tvar streamsParsed:number /*int*/ = 0;\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\n\t\tvar props:AWDProperties;\n\t\tvar thisGeo:Geometry;\n\t\tvar clip:VertexClipNode = new VertexClipNode();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar geoAdress:number /*int*/ = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar geom:Geometry = <Geometry>this.awd_file_data.getAssetByID(geoAdress);\n\t\tif (geom==undefined) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the target-Geometry-Object \" + geoAdress + \" ) for this.awd_file_data VertexClipNode\");\n\t\t\treturn;\n\t\t}\n\t\tvar uvs:Array<Float32Array> = this.awd_file_data.getUVForVertexAnimation(geoAdress);\n\t\tif (!poseOnly)\n\t\t\tnum_frames = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\tnum_submeshes = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tnum_Streams = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tstreamsParsed = 0;\n\t\twhile (streamsParsed < num_Streams) {\n\t\t\tstreamtypes.push(this.awd_file_data.newBlockBytes.readUnsignedShort());\n\t\t\tstreamsParsed++;\n\t\t}\n\t\tprops = this.awd_file_data.parseProperties({1:AWD3Utils.BOOL, 2:AWD3Utils.BOOL});\n\n\t\tclip.looping = props.get(1, true);\n\t\tclip.stitchFinalFrame = props.get(2, false);\n\n\t\tframes_parsed = 0;\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tframe_dur = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\tgeometry = new Geometry();\n\t\t\tsubMeshParsed = 0;\n\t\t\twhile (subMeshParsed < num_submeshes) {\n\t\t\t\tstreamsParsed = 0;\n\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\n\t\t\t\twhile (streamsParsed < num_Streams) {\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\n\t\t\t\t\t\tindices = geom.subGeometries[subMeshParsed].indices;\n\t\t\t\t\t\tverts = new Array<number>();\n\t\t\t\t\t\tidx = 0;\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\t\tx = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t\t\ty = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t\t\tz = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsubGeom = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\t\t\t\tsubGeom.setIndices(indices);\n\t\t\t\t\t\tsubGeom.setPositions(verts);\n\t\t\t\t\t\tsubGeom.setUVs(uvs[subMeshParsed]);\n\t\t\t\t\t\tsubGeom.setNormals(null);\n\t\t\t\t\t\tsubGeom.setTangents(null);\n\t\t\t\t\t\tsubGeom.autoDeriveNormals = false;\n\t\t\t\t\t\tsubGeom.autoDeriveTangents = false;\n\t\t\t\t\t\tsubMeshParsed++;\n\t\t\t\t\t\tgeometry.addSubGeometry(subGeom)\n\t\t\t\t\t} else\n\t\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\n\t\t\t\t\tstreamsParsed++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tclip.addFrame(geometry, frame_dur);\n\t\t\tframes_parsed++;\n\t\t}\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data=clip;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + geom.name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\n\n}\n\nexport = VertexAnimClipAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\n\nclass VertexAnimationSetAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar poseBlockAdress:number /*int*/\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar num_frames:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT16});\n\t\tvar frames_parsed:number /*uint*/ = 0;\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tposeBlockAdress = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar animNode:AnimationNodeBase = <AnimationNodeBase>this.awd_file_data.getAssetByID(poseBlockAdress);\n\t\t\tif (animNode==undefined) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the AnimationClipNode Nr \" + frames_parsed + \" ( \" + poseBlockAdress + \" ) for this.awd_file_data AnimationSet\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (animNode instanceof VertexClipNode)\n\t\t\t\t\tvertexFrames.push(<VertexClipNode>animNode)\n\t\t\t\tif (animNode instanceof SkeletonClipNode)\n\t\t\t\t\tskeletonFrames.push(<SkeletonClipNode>animNode)\n\t\t\t}\n\t\t\tframes_parsed++;\n\t\t}\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not create this.awd_file_data AnimationSet, because it contains no animations\");\n\t\t\treturn;\n\t\t}\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tif (vertexFrames.length > 0) {\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\n\t\t\tthis.awd_file_data.cur_block.data = newVertexAnimationSet;\n\t\t\tif (this.awd_file_data.debug)\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + newVertexAnimationSet.name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames.toString());\n\t\t\treturn;\n\t\t} else if (skeletonFrames.length > 0) {\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\n\t\t\tthis.awd_file_data.cur_block.data = newSkeletonAnimationSet;\n\t\t\tif (this.awd_file_data.debug)\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + newSkeletonAnimationSet.name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames.toString());\n\t\t}\n\t}\n\n\n}\n\nexport = VertexAnimationSetAWDParser;",
    "import BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\n\nimport AWDBitFlags\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWDBlock\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\n\n/**\n * AWD3FileData stores the data loaded for a AWD-file. It also gives access to some helper functions.\n */\nclass AWD3FileData\n{\n\t//set to \"true\" to have some console.logs in the Console\n\tprivate _debug:boolean = false;\n\n\tprivate _cur_block:AWDBlock;\n\tprivate _blocks:Array<AWDBlock>;\n\tprivate _newBlockBytes:ByteArray;\n\n\tpublic  major_version:number;\n\tpublic  minor_version:number;\n\n\tprivate _accuracyOnBlocks:boolean = false;\n\n\tprivate _accuracyMatrix:boolean;\n\tprivate _accuracyGeo:boolean;\n\tprivate _accuracyProps:boolean;\n\tprivate _matrixNrType:number;\n\tprivate _geoNrType:number;\n\tprivate _propsNrType:number;\n\n\tprivate blendModeDic:Array<string>;\n\tprivate _depthSizeDic:Array<number>;\n\n\tprivate _defaultCubeTexture:SingleCubeTexture;\n\t/**\n\t * Creates a new AWD3FileData object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.major_version=0;\n\t\tthis.minor_version=0;\n\n\t\tthis._blocks = new Array<AWDBlock>();\n\t\tthis._blocks.push(new AWDBlock(255, 0));\n\t\tthis._cur_block=this._blocks[0];\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.ADD);\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\n\t\tthis._depthSizeDic.push(256);\n\t\tthis._depthSizeDic.push(512);\n\t\tthis._depthSizeDic.push(2048);\n\t\tthis._depthSizeDic.push(1024);\n\t}\n\n\tpublic getDepthSizeFromEnum(depthSize:number):number\n\t{\n\t\treturn this._depthSizeDic[depthSize];\n\t}\n\tpublic getBlendModeStringFromEnum(blendmode:number):string\n\t{\n\t\treturn this.blendModeDic[blendmode];\n\t}\n\n\tpublic dispose():void\n\t{\n\n\t\tfor (var c in this._blocks) {\n\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[ c ];\n\t\t\tb.dispose();\n\n\t\t}\n\n\t}\n\tpublic get accuracyOnBlocks():boolean\n\t{\n\t\treturn this._accuracyOnBlocks;\n\t}\n\tpublic get accuracyMatrix():boolean\n\t{\n\t\treturn this._accuracyMatrix;\n\t}\n\tpublic set accuracyMatrix(new_accuracyMatrix:boolean)\n\t{\n\t\tthis._accuracyMatrix = new_accuracyMatrix;\n\t}\n\tpublic get accuracyProps():boolean\n\t{\n\t\treturn this._accuracyProps;\n\t}\n\tpublic set accuracyProps(new_accuracyProps:boolean)\n\t{\n\t\tthis._accuracyProps = new_accuracyProps;\n\t}\n\tpublic set accuracyGeo(new_accuracyGeo:boolean)\n\t{\n\t\tthis._accuracyGeo = new_accuracyGeo;\n\t}\n\tpublic get accuracyGeo():boolean\n\t{\n\t\treturn this._accuracyGeo;\n\t}\n\tpublic get debug():boolean\n\t{\n\t\treturn this._debug;\n\t}\n\n\tpublic get matrixNrType():number\n\t{\n\t\treturn this._matrixNrType;\n\t}\n\tpublic set matrixNrType(newmatrixNrType:number)\n\t{\n\t\tthis._matrixNrType = newmatrixNrType;\n\t}\n\n\tpublic get propsNrType():number\n\t{\n\t\treturn this._propsNrType;\n\t}\n\tpublic set propsNrType(new_props_nr:number)\n\t{\n\t\tthis._propsNrType = new_props_nr;\n\t}\n\n\tpublic get geoNrType():number\n\t{\n\t\treturn this._geoNrType;\n\t}\n\tpublic set geoNrType(new_geoNrType:number)\n\t{\n\t\tthis._geoNrType = new_geoNrType;\n\t}\n\n\n\tpublic set newBlockBytes(new_newBlockBytes:ByteArray)\n\t{\n\t\tthis._newBlockBytes = new_newBlockBytes;\n\t}\n\tpublic get newBlockBytes():ByteArray\n\t{\n\t\treturn this._newBlockBytes;\n\t}\n\tpublic create_new_block(type:number, id:number)\n\t{\n\t\tvar new_block:AWDBlock= new AWDBlock(this._blocks.length, type);\n\t\tthis._cur_block=new_block;\n\t\tthis._blocks[id]=new_block;\n\t}\n\tpublic get cur_block():AWDBlock\n\t{\n\t\treturn this._cur_block;\n\t}\n\tpublic block_cnt():number\n\t{\n\t\treturn this._blocks.length;\n\t}\n\n\t//--Parser UTILS---------------------------------------------------------------------------\n\n\tpublic parseUserAttributes():Object\n\t{\n\t\tvar attributes:Object;\n\t\tvar list_len:number;\n\t\tvar attibuteCnt:number;\n\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\n\n\t\tif (list_len > 0) {\n\n\t\t\tvar list_end:number;\n\n\t\t\tattributes = {};\n\n\t\t\tlist_end = this._newBlockBytes.position + list_len;\n\n\t\t\twhile (this._newBlockBytes.position < list_end) {\n\t\t\t\tvar ns_id:number;\n\t\t\t\tvar attr_key:string;\n\t\t\t\tvar attr_type:number;\n\t\t\t\tvar attr_len:number;\n\t\t\t\tvar attr_val:any;\n\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_key = this.parseVarStr();\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn attributes;\n\t\t\t\t}\n\n\t\t\t\tswitch (attr_type) {\n\t\t\t\t\tcase AWD3Utils.AWDSTRING:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.INT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.INT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.INT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.BOOL:\n\t\t\t\t\tcase AWD3Utils.UINT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.UINT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.UINT32:\n\t\t\t\t\tcase AWD3Utils.BADDR:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.FLOAT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.FLOAT64:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\n\t\t\t\t}\n\n\t\t\t\tattributes[attr_key] = attr_val;\n\t\t\t\tattibuteCnt += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\tpublic parseProperties(expected:Object):AWDProperties\n\t{\n\t\tvar list_end:number;\n\t\tvar list_len:number;\n\t\tvar propertyCnt:number = 0;\n\t\tvar props:AWDProperties = new AWDProperties();\n\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\n\t\tlist_end = this._newBlockBytes.position + list_len;\n\n\t\tif (expected) {\n\n\t\t\twhile (this._newBlockBytes.position < list_end) {\n\t\t\t\tvar len:number;\n\t\t\t\tvar key:number;\n\t\t\t\tvar type:number;\n\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn props;\n\t\t\t\t}\n\n\t\t\t\tif (expected.hasOwnProperty(key.toString())) {\n\t\t\t\t\ttype = expected[key];\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\n\t\t\t\t} else {\n\t\t\t\t\tthis._newBlockBytes.position += len;\n\t\t\t\t}\n\n\t\t\t\tpropertyCnt += 1;\n\n\t\t\t}\n\t\t} else {\n\t\t\tthis._newBlockBytes.position = list_end;\n\t\t}\n\n\t\treturn props;\n\n\t}\n\n\tprivate parseAttrValue(type:number, len:number):any\n\t{\n\t\tvar elem_len:number;\n\t\tvar read_func:Function;\n\n\t\tswitch (type) {\n\n\t\t\tcase AWD3Utils.BOOL:\n\t\t\tcase AWD3Utils.INT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.INT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.INT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.UINT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.UINT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.UINT32:\n\t\t\tcase AWD3Utils.COLOR:\n\t\t\tcase AWD3Utils.BADDR:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.FLOAT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.FLOAT64:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.AWDSTRING:\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\n\n\t\t\tcase AWD3Utils.VECTOR2x1:\n\t\t\tcase AWD3Utils.VECTOR3x1:\n\t\t\tcase AWD3Utils.VECTOR4x1:\n\t\t\tcase AWD3Utils.MTX3x2:\n\t\t\tcase AWD3Utils.MTX3x3:\n\t\t\tcase AWD3Utils.MTX4x3:\n\t\t\tcase AWD3Utils.MTX4x4:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif (elem_len < len) {\n\t\t\tvar list:Array<any> = [];\n\t\t\tvar num_read:number = 0;\n\t\t\tvar num_elems:number = len/elem_len;\n\n\t\t\twhile (num_read < num_elems) {\n\t\t\t\tlist.push(read_func.apply(this._newBlockBytes)); // list.push(read_func());\n\t\t\t\tnum_read++;\n\t\t\t}\n\n\t\t\treturn list;\n\t\t} else {\n\n\t\t\tvar val:any = read_func.apply(this._newBlockBytes);//read_func();\n\t\t\treturn val;\n\t\t}\n\t}\n\n\t// Helper - functions\n\tpublic getUVForVertexAnimation(meshID:number /*uint*/):Array<Float32Array>\n\t{\n\t\tif (this._blocks[meshID].data instanceof Mesh)\n\t\t\tmeshID = this._blocks[meshID].geoID;\n\t\tif (this._blocks[meshID].uvsForVertexAnimation)\n\t\t\treturn this._blocks[meshID].uvsForVertexAnimation;\n\t\tvar geometry:Geometry = (<Geometry> this._blocks[meshID].data);\n\t\tvar geoCnt:number /*int*/ = 0;\n\t\tvar sub_geom:TriangleSubGeometry;\n\t\tthis._blocks[meshID].uvsForVertexAnimation = new Array<Float32Array>();\n\t\twhile (geoCnt < geometry.subGeometries.length) {\n\t\t\tsub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\n\t\t\tthis._blocks[meshID].uvsForVertexAnimation.push(sub_geom.uvs.get(sub_geom.numVertices));\n\t\t\tgeoCnt++;\n\t\t}\n\t\treturn this._blocks[meshID].uvsForVertexAnimation;\n\t}\n\n\tpublic parseVarStr():string\n\t{\n\n\t\tvar len:number = this._newBlockBytes.readUnsignedShort();\n\t\treturn this._newBlockBytes.readUTFBytes(len);\n\t}\n\n\tpublic getBlockByID(assetID:number):AWDBlock\n\t{\n\t\treturn this._blocks[assetID];\n\t}\n\tpublic getAssetByID(assetID:number):IAsset\n\t{\n\t\treturn this._blocks[assetID].data;\n\t}\n\tprivate getDefaultAsset(assetType:string):IAsset\n\t{\n\t\tswitch (true) {\n\t\t\tcase (assetType == SingleCubeTexture.assetType):\n\t\t\t\treturn this.getDefaultCubeTexture();\n\t\t\t\tbreak;\n\t\t\tcase (assetType == Single2DTexture.assetType):\n\t\t\t\treturn DefaultMaterialManager.getDefaultTexture();\n\t\t\t\tbreak;\n\t\t\tcase (assetType == MethodMaterial.assetType):\n\t\t\t\treturn DefaultMaterialManager.getDefaultMaterial();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getDefaultCubeTexture():IAsset\n\t{\n\t\t/*\n\t\tif (!this._defaultCubeTexture) {\n\t\t\tvar defaultBitmap:BitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\t\tvar bitmapImageCube = new BitmapImageCube(defaultBitmap.width);\n\n\t\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\t\tbitmapImageCube.draw(i, defaultBitmap);\n\n\n\t\t\tthis._defaultCubeTexture = new SingleCubeTexture(bitmapImageCube);\n\t\t\tthis._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t\t}\n\t\t*/\n\t\treturn <IAsset> this._defaultCubeTexture;\n\t}\n\n\tpublic  readNumber(precision:boolean = false):number\n\t{\n\t\tif (precision)\n\t\t\treturn this._newBlockBytes.readDouble();\n\t\treturn this._newBlockBytes.readFloat();\n\n\t}\n\n\tpublic parseMatrix3D():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\n\t}\n\n\tprivate parseMatrix32RawData():Array<number>\n\t{\n\t\tvar i:number;\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\n\t\tfor (i = 0; i < 6; i++) {\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\n\t\t}\n\n\t\treturn mtx_raw;\n\t}\n\n\tpublic parseMatrix43RawData():Array<number>\n\t{\n\t\tvar mtx_raw:Array<number> = new Array<number>(16);\n\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[3] = 0.0;\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[7] = 0.0;\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[11] = 0.0;\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[15] = 1.0;\n\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\n\n\t\tif (isNaN(mtx_raw[0])) {\n\t\t\tmtx_raw[0] = 1;\n\t\t\tmtx_raw[1] = 0;\n\t\t\tmtx_raw[2] = 0;\n\t\t\tmtx_raw[4] = 0;\n\t\t\tmtx_raw[5] = 1;\n\t\t\tmtx_raw[6] = 0;\n\t\t\tmtx_raw[8] = 0;\n\t\t\tmtx_raw[9] = 0;\n\t\t\tmtx_raw[10] = 1;\n\t\t\tmtx_raw[12] = 0;\n\t\t\tmtx_raw[13] = 0;\n\t\t\tmtx_raw[14] = 0;\n\n\t\t}\n\n\t\treturn mtx_raw;\n\t}\n\n}\n\nexport = AWD3FileData;\n\n\n\n",
    "\nclass AWD3Utils {\n\tpublic static BLOCKSTATE_FINALIZE:number = 0;\n\tpublic static BLOCKSTATE_INVALID:number = 1;\n\tpublic static BLOCKSTATE_LOAD_DEPENDENICES:number = 2;\n\tpublic static BLOCKSTATE_NO_ASSET:number = 3;\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\n\tpublic static UNCOMPRESSED:number = 0;\n\tpublic static DEFLATE:number = 1;\n\tpublic static LZMA:number = 2;\n\tpublic static INT8:number = 1;\n\tpublic static INT16:number = 2;\n\tpublic static INT32:number = 3;\n\tpublic static UINT8:number = 4;\n\tpublic static UINT16:number = 5;\n\tpublic static UINT32:number = 6;\n\tpublic static FLOAT32:number = 7;\n\tpublic static FLOAT64:number = 8;\n\tpublic static BOOL:number = 21;\n\tpublic static COLOR:number = 22;\n\tpublic static BADDR:number = 23;\n\tpublic static AWDSTRING:number = 31;\n\tpublic static AWDBYTEARRAY:number = 32;\n\tpublic static VECTOR2x1:number = 41;\n\tpublic static VECTOR3x1:number = 42;\n\tpublic static VECTOR4x1:number = 43;\n\tpublic static MTX3x2:number = 44;\n\tpublic static MTX3x3:number = 45;\n\tpublic static MTX4x3:number = 46;\n\tpublic static MTX4x4:number = 47;\n}\nexport = AWD3Utils;",
    "\n/**\n *\n */\nclass AWDBitFlags\n{\n\tpublic static FLAG1:number = 1;\n\tpublic static FLAG2:number = 2;\n\tpublic static FLAG3:number = 4;\n\tpublic static FLAG4:number = 8;\n\tpublic static FLAG5:number = 16;\n\tpublic static FLAG6:number = 32;\n\tpublic static FLAG7:number = 64;\n\tpublic static FLAG8:number = 128;\n\tpublic static FLAG9:number = 256;\n\tpublic static FLAG10:number = 512;\n\tpublic static FLAG11:number = 1024;\n\tpublic static FLAG12:number = 2048;\n\tpublic static FLAG13:number = 4096;\n\tpublic static FLAG14:number = 8192;\n\tpublic static FLAG15:number = 16384;\n\tpublic static FLAG16:number = 32768;\n\n\tpublic static test(flags:number, testFlag:number):boolean\n\t{\n\t\treturn (flags & testFlag) == testFlag;\n\t}\n}\nexport = AWDBitFlags;",
    "import ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\nclass AWDBlock\n{\n\tpublic id:number;\n\tpublic name:string;\n\tpublic type:number;\n\tpublic data:any;\n\tpublic dependencies_data:Array<ByteArray>;\n\tpublic dependencies_urls:Array<string>;\n\tpublic loaded_dependencies:Array<any>;\n\tpublic loaded_dependencies_cnt:number;\n\tpublic len:number;\n\tpublic geoID:number;\n\tpublic state:number;\n\tpublic extras:Object;\n\tpublic bytes:ByteArray;\n\tpublic errorMessages:Array<string>;\n\tpublic uvsForVertexAnimation:Array<Float32Array>;\n\n\tconstructor(this_id:number, this_type:number)\n\t{\n\t\tthis.type=this_type;\n\t\tthis.id=this_id;\n\t\tthis.state = AWD3Utils.BLOCKSTATE_FINALIZE;\n\t\tthis.dependencies_data=Array<any>();\n\t\tthis.dependencies_urls=Array<string>();\n\t\tif(this_type==83){\n\t\t\tthis.loaded_dependencies=Array<any>(6);\n\t\t}\n\t\tthis.loaded_dependencies_cnt=0;\n\t}\n\n\tpublic dispose()\n\t{\n\n\t\tthis.id = null;\n\t\tthis.bytes = null;\n\t\tthis.errorMessages = null;\n\t\tthis.uvsForVertexAnimation = null;\n\n\t}\n\n\tpublic addError(errorMsg:string):void\n\t{\n\t\tif (!this.errorMessages)\n\t\t\tthis.errorMessages = new Array<string>();\n\n\t\tthis.errorMessages.push(errorMsg);\n\t}\n}\nexport = AWDBlock;",
    "\nclass AWDProperties\n{\n\tpublic set(key:number, value:any):void\n\t{\n\t\tthis[ key.toString() ] = value;\n\t}\n\n\tpublic get(key:number, fallback:any):any\n\t{\n\t\tif (this.hasOwnProperty(key.toString())) {\n\t\t\treturn this[key.toString()];\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n}\nexport = AWDProperties;",
    "import BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\n\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\n\n\n\nimport AWDBitFlags\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport AWDAssetParsers\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers\");\nimport AWDBlock\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\nimport AWD3FileData\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\n\n/**\n * AWD3Utils provides a parser for the AWD data type.\n */\nclass AWD3Parser extends ParserBase\n{\n\t//set to \"true\" to have some console.logs in the Console\n\tprivate _debug:boolean = false;\n\tprivate _byteData:ByteArray;\n\tprivate _startedParsing:boolean = false;\n\tprivate _compression:number;\n\tprivate _streaming:boolean;\n\tprivate _parsed_header:boolean = false;\n\tprivate _body:ByteArray;\n\tprivate _awd_data:AWD3FileData;\n\tprivate _block_parser:AWDAssetParsers;\n\n\t// temp for checking stats\n\tpublic total_time:number = 0;\n\tpublic geom_time:number = 0;\n\tpublic timeline_time:number = 0;\n\n\t/**\n\t * Creates a new AWD3Utils object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(block_parser:AWDAssetParsers = undefined)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\n\t\tthis._block_parser=block_parser;\n\t\tif(this._block_parser==undefined){\n\t\t\tthis._block_parser=new AWDAssetParsers();\n\t\t}\n\t\tthis._awd_data=new AWD3FileData();\n\t\tthis._block_parser.init_parser(this._awd_data);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"awd\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\t// this will be called when Dependency has finished loading.\n\t\t// the ressource dependecniy has a id that point to the awd_block waiting for it.\n\t\tif (resourceDependency.assets.length == 1) {\n\t\t\tvar this_block:AWDBlock = this._awd_data.getBlockByID(parseInt(resourceDependency.id));\n\t\t\tif(this_block.type==82){\n\t\t\t\tvar testure_asset:Single2DTexture = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\n\t\t\t\tthis_block.data = testure_asset; // Store finished asset\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\n\t\t\t\t// previously suppressed while the dependency was loaded.\n\t\t\t\tthis._pFinalizeAsset(<IAsset> testure_asset, this_block.name);\n\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap for texture\");\n\t\t\t\t\tconsole.log(\"Parsed texture: Name = \" + this_block.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(this_block.type==44){\n\t\t\t\t// todo: implement parsing of Audio block data\n\t\t\t\t/*\n\t\t\t\t var audio_asset:AudioAsset = <AudioAsset> resourceDependency.assets[0];\n\t\t\t\t this_block.data = audio_asset; // Store finished asset\n\t\t\t\t // Finalize texture asset to dispatch texture event, which was\n\t\t\t\t // previously suppressed while the dependency was loaded.\n\t\t\t\t this._pFinalizeAsset(<IAsset> audio_asset, this_block.name);\n\t\t\t\t */\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tconsole.log(\"Successfully loaded Sound into AudioAsset\");\n\t\t\t\t\tconsole.log(\"Loaded Sound: Name = \" + this_block.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(this_block.type==83){\n\t\t\t\tthis_block.loaded_dependencies[resourceDependency.sub_id]= resourceDependency.assets[0];\n\t\t\t\tthis_block.loaded_dependencies_cnt++;\n\t\t\t\tif(this_block.loaded_dependencies_cnt==6){\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + resourceDependency.sub_id + \" / 6 for Cubetexture\");\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cube_image_asset = new BitmapImageCube(this_block.loaded_dependencies[0].width);\n\n\t\t\t\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\t\t\t\tcube_image_asset.draw(i, this_block.loaded_dependencies[i]);\n\n\n\t\t\t\t\tvar cube_tex_asset = new SingleCubeTexture(cube_image_asset);\n\t\t\t\t\tthis_block.data = cube_tex_asset; // Store finished asset\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> cube_tex_asset, this_block.name);\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + this_block.name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\t//\tnot used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\n\t\t// \tthis means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\tvar oldName:string = asset.name;\n\n\t\tif (asset) {\n\t\t\tvar block:AWDBlock = this._awd_data.getBlockByID(parseInt(resourceDependency.id));\n\t\t\t// Reset name of texture to the one defined in the AWD file,\n\t\t\t// as opposed to whatever the image parser came up with.\n\t\t\tasset.resetAssetPath(block.name, null, true);\n\t\t}\n\n\t\tvar newName:string = asset.name;\n\n\t\tasset.name = oldName;\n\n\t\treturn newName;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\tif (!this._parsed_header) {\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Parse header and decompress body if needed\n\t\t\tthis.parseHeader();\n\n\t\t\tswitch (this._compression) {\n\n\t\t\t\tcase AWD3Utils.DEFLATE:\n\t\t\t\tcase AWD3Utils.LZMA:\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AWD3Utils.UNCOMPRESSED:\n\t\t\t\t\tthis._body = this._byteData;\n\t\t\t\t\tbreak;\n\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t// Compressed AWD Formats not yet supported\n\t\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t\t/*\n\t\t\t\t case AWD3Parserutils.DEFLATE:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress();\n\n\t\t\t\t break;\n\t\t\t\t case AWD3Parserutils.LZMA:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\n\n\t\t\t\t break;\n\t\t\t\t //*/\n\n\t\t\t}\n\n\t\t\tthis._parsed_header = true;\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t}\n\n\t\tif (this._body) {\n\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\n\t\t\t{\n\t\t\t\tthis.parseNextBlock();\n\n\t\t\t}\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Return complete status\n\t\t\tif (this._body.getBytesAvailable() == 0) {\n\t\t\t\tthis.dispose();\n\t\t\t\treturn  ParserBase.PARSING_DONE;\n\t\t\t} else {\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} else {\n\n\t\t\tswitch (this._compression) {\n\n\t\t\t\tcase AWD3Utils.DEFLATE:\n\t\t\t\tcase AWD3Utils.LZMA:\n\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"(!) AWD3Utils Error: Compressed AWD formats not yet supported (!)\");\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t\t// Error - most likely _body not set because we do not support compression.\n\t\t\treturn  ParserBase.PARSING_DONE;\n\n\t\t}\n\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\tprivate dispose():void\n\t{\n\t\tthis._awd_data.dispose();\n\t}\n\n\tprivate parseNextBlock():void\n\t{\n\t\tvar block_id:number = this._body.readUnsignedInt();\n\n\t\tvar ns:number = this._body.readUnsignedByte();\n\t\tvar block_type:number = this._body.readUnsignedByte();\n\t\tvar flags:number = this._body.readUnsignedByte();\n\t\tvar len:number = this._body.readUnsignedInt();\n\n\t\tvar blockCompression:boolean = AWDBitFlags.test(flags, AWDBitFlags.FLAG4);\n\t\tvar blockCompressionLZMA:boolean = AWDBitFlags.test(flags, AWDBitFlags.FLAG5);\n\n\t\tif (this._awd_data.accuracyOnBlocks) {\n\t\t\tthis._awd_data.accuracyMatrix = AWDBitFlags.test(flags, AWDBitFlags.FLAG1);\n\t\t\tthis._awd_data.accuracyGeo = AWDBitFlags.test(flags, AWDBitFlags.FLAG2);\n\t\t\tthis._awd_data.accuracyProps = AWDBitFlags.test(flags, AWDBitFlags.FLAG3);\n\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT32;\n\n\t\t\tif (this._awd_data.accuracyGeo) {\n\t\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT64;\n\t\t\t}\n\n\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT32;\n\n\t\t\tif (this._awd_data.accuracyMatrix) {\n\t\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT64;\n\t\t\t}\n\n\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT32;\n\n\t\t\tif (this._awd_data.accuracyProps) {\n\t\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT64;\n\t\t\t}\n\t\t}\n\n\t\tvar blockEndAll:number = this._body.position + len;\n\n\t\tif (len > this._body.getBytesAvailable()) {\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\n\t\t\tthis._body.position += this._body.getBytesAvailable();\n\t\t\treturn;\n\t\t}\n\n\t\tvar newBlockBytes:ByteArray = new ByteArray();\n\t\tthis._body.readBytes(newBlockBytes, 0, len);\n\t\tthis._awd_data.newBlockBytes = newBlockBytes;\n\n\t\t//----------------------------------------------------------------------------\n\t\t// Compressed AWD Formats not yet supported\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\n\t\t\t/*\n\t\t\t if (blockCompressionLZMA)\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress(AWD3Parserutils.COMPRESSIONMODE_LZMA);\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress();\n\t\t\t }\n\t\t\t */\n\n\t\t}\n\n\t\t//----------------------------------------------------------------------------\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t//----------------------------------------------------------------------------\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\n\t\t//----------------------------------------------------------------------------\n\n\t\tthis._awd_data.newBlockBytes.position = 0;\n\n\t\t// we create AWDBlock for all exept the metadata. the metadata block has is the first awdblock in the list by default.\n\t\t//if(block_type!=255)\n\t\tthis._awd_data.create_new_block(block_type, block_id);\n\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\n\t\t\t//block.len       = blockEndBlock;\n\t\t}\n\n\t\t//if (this._debug) {\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + block_id + \" | TypeID = \" + block_type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._awd_data.accuracyMatrix + \" | Geometry-Precision = \" + this._awd_data.accuracyGeo + \" | Properties-Precision = \" + this._awd_data.accuracyProps);\n\t\t//}\n\n\t\tvar time_start = performance.now();\n\n\t\t// first check if the block is any of the 3 blocks that does not produce a asset.\n\t\t\t// this block contains a asset.\n\t\tif(this._block_parser.parseAsset(block_type)){\n\t\t\tif(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_FINALIZE){\n\t\t\t\tthis._pFinalizeAsset(<IAsset>this._awd_data.cur_block.data, this._awd_data.cur_block.name);\n\t\t\t\tif(this._awd_data.cur_block.data instanceof DisplayObject){\n\t\t\t\t\tif((<DisplayObjectContainer> this._awd_data.cur_block.data).parent==undefined){\n\t\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild((<DisplayObjectContainer> this._awd_data.cur_block.data));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_INVALID){\n\t\t\t\tconsole.log(\"ERROR while parsing block - type = \", block_type, \" id = \", block_id);\n\t\t\t}\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES){\n\t\t\t\t// trigger No asset created yet, because the block has dependencies. load the dependencies:.\n\t\t\t\tfor(var r:number=0; r<this._awd_data.cur_block.dependencies_urls.length;r++){\n\t\t\t\t\t// load dependencies by url. let the parser system decide how to parse it\n\t\t\t\t\tthis._pAddDependency(this._awd_data.cur_block.id.toString(), new URLRequest(this._awd_data.cur_block.dependencies_urls[r]), false, null, true, r);\n\t\t\t\t}\n\t\t\t\tfor(var r:number=0; r<this._awd_data.cur_block.dependencies_data.length;r++) {\n\t\t\t\t\t// load dependencies from data. need to prepare the data based on block_type (image vs audio).\n\t\t\t\t\tif ((block_type == 82) || (block_type == 83)) {\n\t\t\t\t\t\tthis._pAddDependency(this._awd_data.cur_block.id.toString(), null, false, ParserUtils.byteArrayToImage(this._awd_data.cur_block.dependencies_data[r]), true, r);\n\t\t\t\t\t}\n\t\t\t\t\telse if (block_type == 44) {\n\t\t\t\t\t\t// todo: parse audio data\n\t\t\t\t\t\t// this._pAddDependency(this._awd_data.cur_block.id.toString(), null, false, this._awd_data.cur_block.dependencies_data[r], true, r);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t}\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_NO_ASSET){\n\t\t\t\t// this block does not produce any asset (metadata, namespace, command)\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.log(\"Encountered unknown blocktype - type = \", block_type, \" id = \", block_id);\n\t\t}\n\n\t\tvar time_end = performance.now();\n\t\tvar thisTime:number=time_end-time_start;\n\t\tthis.total_time+=thisTime;\n\t\tif(block_type==1){\n\t\t\tthis.geom_time+=thisTime;\n\t\t}\n\t\telse if(block_type==133){\n\t\t\tthis.timeline_time+=thisTime;\n\t\t}\n\t\tconsole.log(\"'parsed '\"+block_type+\"'  block in \"+thisTime+ \" ms\", \" total: \",this.total_time,\" geom: \",this.geom_time,\"timelines:\",this.timeline_time);\n\n\t\tthis._body.position = blockEndAll;\n\t\tthis._awd_data.newBlockBytes = null;\n\n\t}\n\n\n\n\n\tprivate parseHeader():void\n\t{\n\t\tvar flags:number;\n\t\tvar body_len:number;\n\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\n\n\t\tthis._awd_data.major_version = this._byteData.readUnsignedByte();\n\t\tthis._awd_data.minor_version = this._byteData.readUnsignedByte();\n\n\t\tflags = this._byteData.readUnsignedShort(); // Parse bit flags\n\n\t\tthis._streaming = AWDBitFlags.test(flags, AWDBitFlags.FLAG1);\n\n\t\tif ((this._awd_data.major_version == 2) && (this._awd_data.minor_version == 1)) {\n\t\t\tthis._awd_data.accuracyMatrix = AWDBitFlags.test(flags, AWDBitFlags.FLAG2);\n\t\t\tthis._awd_data.accuracyGeo = AWDBitFlags.test(flags, AWDBitFlags.FLAG3);\n\t\t\tthis._awd_data.accuracyProps = AWDBitFlags.test(flags, AWDBitFlags.FLAG4);\n\t\t}\n\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\n\n\t\t// set storagePrecision types\n\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT32;\n\n\t\tif (this._awd_data.accuracyGeo) {\n\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT64;\n\t\t}\n\n\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT32;\n\n\t\tif (this._awd_data.accuracyMatrix) {\n\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT64;\n\t\t}\n\n\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT32;\n\n\t\tif (this._awd_data.accuracyProps) {\n\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT64;\n\t\t}\n\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._awd_data.major_version + \" - \" + this._awd_data.minor_version );\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._awd_data.accuracyMatrix + \" | Geometry-Precision = \" + this._awd_data.accuracyGeo + \" | Properties-Precision = \" + this._awd_data.accuracyProps);\n\t\t}\n\n\t\t// Check file integrity\n\t\tbody_len = this._byteData.readUnsignedInt();\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable()) {\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\n\t\t}\n\t}\n}\n\nexport = AWD3Parser;\n\n",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Short3Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float3Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport WaveAudio\t\t\t\t\t\t= require(\"awayjs-core/lib/data/WaveAudio\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport View\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport TextField\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\nimport PrimitivePrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\n\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\n\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport ITimelineSceneGraphFactory \t= require(\"awayjs-display/lib/factories/ITimelineSceneGraphFactory\");\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\nimport MovieClip \t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport Timeline\t\t\t \t\t\t= require(\"awayjs-display/lib/base/Timeline\");\n\n\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport TextFormat\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextFieldType\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\n\nimport AWDBlock\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\n/**\n * AWDParser provides a parser for the AWD data type.\n */\nclass AWDParser extends ParserBase\n{\n\tprivate _view:View;\n\n\t//set to \"true\" to have some console.logs in the Console\n\tprivate _debug:boolean = false;\n\tprivate _debugTimers:boolean = true;\n\tprivate _byteData:ByteArray;\n\tprivate _startedParsing:boolean = false;\n\tprivate _cur_block_id:number;\n\tprivate _blocks:Array<AWDBlock>;\n\tprivate _newBlockBytes:ByteArray;\n\tprivate _version:Array<number>;\n\tprivate _compression:number;\n\tprivate _accuracyOnBlocks:boolean;\n\tprivate _accuracyMatrix:boolean;\n\tprivate _accuracyGeo:boolean;\n\tprivate _accuracyProps:boolean;\n\tprivate _streaming:boolean;\n\tprivate _texture_users:Object = {};\n\tprivate _parsed_header:boolean = false;\n\tprivate _body:ByteArray;\n\n\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\n\tpublic static UNCOMPRESSED:number = 0;\n\tpublic static DEFLATE:number = 1;\n\tpublic static LZMA:number = 2;\n\tpublic static INT8:number = 1;\n\tpublic static INT16:number = 2;\n\tpublic static INT32:number = 3;\n\tpublic static UINT8:number = 4;\n\tpublic static UINT16:number = 5;\n\tpublic static UINT32:number = 6;\n\tpublic static FLOAT32:number = 7;\n\tpublic static FLOAT64:number = 8;\n\tpublic static BOOL:number = 21;\n\tpublic static COLOR:number = 22;\n\tpublic static BADDR:number = 23;\n\tpublic static AWDSTRING:number = 31;\n\tpublic static AWDBYTEARRAY:number = 32;\n\tpublic static VECTOR2x1:number = 41;\n\tpublic static VECTOR3x1:number = 42;\n\tpublic static VECTOR4x1:number = 43;\n\tpublic static MTX3x2:number = 44;\n\tpublic static MTX3x3:number = 45;\n\tpublic static MTX4x3:number = 46;\n\tpublic static MTX4x4:number = 47;\n\tpublic static GEO_NUMBER:number = 48;\n\tpublic static MATRIX_NUMBER:number = 49;\n\tpublic static PROPERTY_NUMBER:number = 50;\n\t\n\n\tprivate blendModeDic:Array<string>;\n\tprivate _depthSizeDic:Array<number>;\n\n\tprivate start_timeing:number;\n\tprivate _time_all:number=0;\n\tprivate _time_geom:number=0;\n\tprivate _time_timeline:number=0;\n\tprivate _time_fonts:number=0;\n\tprivate _time_textfields:number=0;\n\tprivate _time_sounds:number=0;\n\tprivate _time_textures:number=0;\n\tprivate _time_materials:number=0;\n\tprivate _time_meshes:number=0;\n\tprivate _num_geom:number=0;\n\tprivate _num_timeline:number=0;\n\tprivate _num_fonts:number=0;\n\tprivate _num_textfields:number=0;\n\tprivate _num_sounds:number=0;\n\tprivate _num_textures:number=0;\n\tprivate _num_materials:number=0;\n\tprivate _num_meshes:number=0;\n\n\n\t/**\n\t * Creates a new AWD3Parserutils object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(view:View = null)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\n\t\tthis._view = view;\n\t\tthis._blocks = new Array<AWDBlock>();\n\t\tthis._blocks[0] = new AWDBlock(0,255);\n\t\tthis._blocks[0].data = null; // Zero address means null in AWD\n\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.ADD);\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\n\t\tthis._depthSizeDic.push(256);\n\t\tthis._depthSizeDic.push(512);\n\t\tthis._depthSizeDic.push(2048);\n\t\tthis._depthSizeDic.push(1024);\n\t\tthis._version = Array<number>(); // will contain 2 int (major-version, minor-version) for awd-version-check\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"awd\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\t// this will be called when Dependency has finished loading.\n\t\t// the ressource dependecniy has a id that point to the awd_block waiting for it.\n\t\t//console.log(\"AWDParser resolve dependencies\");\n\t\tif (resourceDependency.assets.length == 1) {\n\t\t\tvar this_block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\n\t\t\tif(this_block.type==82){\n\t\t\t\tvar texture_asset:Single2DTexture = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\n\t\t\t\tthis_block.data = texture_asset; // Store finished asset\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\n\t\t\t\t// previously suppressed while the dependency was loaded.\n\t\t\t\tthis._pFinalizeAsset(<IAsset> texture_asset, this_block.name);\n\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Parsed Texture: Name = \" + this_block.name);\n\t\t\t}\n\t\t\telse if(this_block.type==44){\n\t\t\t\tvar audio_asset:WaveAudio = <WaveAudio> resourceDependency.assets[0];\n\t\t\t\tthis_block.data = audio_asset; // Store finished asset\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\n\t\t\t\t// previously suppressed while the dependency was loaded.\n\t\t\t\t//console.log(\"Parsing audio \" + this_block.name);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> audio_asset, this_block.name);\n\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Parsed WaveAudio: Name = \" + this_block.name);\n\t\t\t}\n\t\t\telse if(this_block.type==83){\n\t\t\t\tthis_block.loaded_dependencies[resourceDependency.sub_id]= resourceDependency.assets[0];\n\t\t\t\tthis_block.loaded_dependencies_cnt++;\n\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + resourceDependency.sub_id + \" / 6 for Cubetexture\");\n\n\t\t\t\tif(this_block.loaded_dependencies_cnt==6){\n\t\t\t\t\tvar cube_image_asset = new BitmapImageCube(this_block.loaded_dependencies[0].width);\n\n\t\t\t\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\t\t\t\tcube_image_asset.draw(i, this_block.loaded_dependencies[i]);\n\n\t\t\t\t\tvar cube_tex_asset = new SingleCubeTexture(cube_image_asset);\n\t\t\t\t\tthis_block.data = cube_tex_asset; // Store finished asset\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> cube_tex_asset, this_block.name);\n\n\t\t\t\t\tif (this._debug)\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + this_block.name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._debugTimers && !this._isParsing)\n\t\t\t\tthis.updateTimers(this_block.type);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\t//not used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\n\t\t// this means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\tvar oldName:string = asset.name;\n\n\t\tif (asset) {\n\t\t\tvar block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\n\t\t\t// Reset name of texture to the one defined in the AWD file,\n\t\t\t// as opposed to whatever the image parser came up with.\n\t\t\tasset.resetAssetPath(block.name, null, true);\n\t\t}\n\n\t\tvar newName:string = asset.name;\n\n\t\tasset.name = oldName;\n\n\t\treturn newName;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (!this._startedParsing) {\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\tif (!this._parsed_header) {\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Parse header and decompress body if needed\n\t\t\tthis.parseHeader();\n\n\t\t\tswitch (this._compression) {\n\t\t\t\tcase AWDParser.DEFLATE:\n\t\t\t\tcase AWDParser.LZMA:\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AWDParser.UNCOMPRESSED:\n\t\t\t\t\tthis._body = this._byteData;\n\t\t\t\t\tbreak;\n\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t// Compressed AWD Formats not yet supported\n\t\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t\t/*\n\t\t\t\t case AWD3Parserutils.DEFLATE:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress();\n\n\t\t\t\t break;\n\t\t\t\t case AWD3Parserutils.LZMA:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\n\n\t\t\t\t break;\n\t\t\t\t //*/\n\n\t\t\t}\n\n\t\t\tthis._parsed_header = true;\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t}\n\n\t\tif (this._body) {\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\n\t\t\t\tthis.parseNextBlock();\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Return complete status\n\t\t\tif (this._body.getBytesAvailable() == 0) {\n\t\t\t\tthis.dispose();\n\n\t\t\t\tif (this._debugTimers)\n\t\t\t\t\tconsole.log(\"Parsing total: \"+(this._time_all | 0)+\"ms\",\n\t\t\t\t\t\t\" | geoms: \"+this._num_geom+\", \"+(this._time_geom | 0)+\"ms\",\n\t\t\t\t\t\t\" | timelines: \"+this._num_timeline+\", \"+(this._time_timeline | 0)+\"ms\",\n\t\t\t\t\t\t\" | fonts: \"+this._num_fonts+\", \"+(this._time_fonts | 0)+\"ms\",\n\t\t\t\t\t\t\" | sounds: \"+this._num_sounds+\", \"+(this._time_sounds | 0)+\"ms\",\n\t\t\t\t\t\t\" | mats: \"+this._num_materials+\", \"+(this._time_materials | 0)+\"ms\",\n\t\t\t\t\t\t\" | textures: \"+this._num_textures+\", \"+(this._time_textures | 0)+\"ms\",\n\t\t\t\t\t\t\" | meshes: \"+this._num_meshes+\", \"+(this._time_meshes | 0)+\"ms\");\n\n\t\t\t\treturn  ParserBase.PARSING_DONE;\n\t\t\t} else {\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} else {\n\n\t\t\tswitch (this._compression) {\n\t\t\t\tcase AWDParser.DEFLATE:\n\t\t\t\tcase AWDParser.LZMA:\n\t\t\t\t\tif (this._debug)\n\t\t\t\t\t\tconsole.log(\"(!) AWDParser Error: Compressed AWD formats not yet supported (!)\");\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Error - most likely _body not set because we do not support compression.\n\t\t\treturn  ParserBase.PARSING_DONE;\n\t\t}\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\tprivate dispose()\n\t{\n\t\tfor (var c in this._blocks) {\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[c];\n\t\t\tb.dispose();\n\t\t}\n\t}\n\n\tprivate parseNextBlock()\n\t{\n\t\tvar block:AWDBlock;\n\t\tvar isParsed:boolean = false;\n\t\tvar ns:number;\n\t\tvar type:number;\n\t\tvar flags:number;\n\t\tvar len:number;\n//*\n\t\tif (this._debugTimers)\n\t\t\tthis.start_timeing = performance.now();\n//*/\n\t\tthis._cur_block_id = this._body.readUnsignedInt();\n\n\t\tns = this._body.readUnsignedByte();\n\t\ttype = this._body.readUnsignedByte();\n\t\tflags = this._body.readUnsignedByte();\n\t\tlen = this._body.readUnsignedInt();\n\n\t\tvar blockCompression:boolean = BitFlags.test(flags, BitFlags.FLAG4);\n\t\tvar blockCompressionLZMA:boolean = BitFlags.test(flags, BitFlags.FLAG5);\n\n\t\tif (this._accuracyOnBlocks) {\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG1);\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG2);\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG3);\n\t\t}\n\n\t\tvar blockEndAll:number = this._body.position + len;\n\n\t\tif (len > this._body.getBytesAvailable()) {\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\n\t\t\tthis._body.position += this._body.getBytesAvailable();\n\t\t\treturn;\n\t\t}\n\n\t\t//----------------------------------------------------------------------------\n\t\t// Compressed AWD Formats not yet supported\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\tthis._newBlockBytes = new ByteArray();\n\t\t\tthis._body.readBytes(this._newBlockBytes, 0, len);\n\t\t\tthis._newBlockBytes.position = 0;\n\t\t\t/*\n\t\t\t if (blockCompressionLZMA)\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress(AWD3Parserutils.COMPRESSIONMODE_LZMA);\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress();\n\t\t\t }\n\t\t\t */\n\n\t\t} else {\n\t\t\tthis._newBlockBytes = this._body;\n\t\t}\n\n\t\t//----------------------------------------------------------------------------\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t//----------------------------------------------------------------------------\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\n\t\t//----------------------------------------------------------------------------\n\n\t\tblock = new AWDBlock(this._cur_block_id, type);\n\t\tblock.len = len;\n\t\tvar blockEndBlock:number = this._newBlockBytes.position + len;\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\n\t\t\t//block.len       = blockEndBlock;\n\t\t}\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + this._cur_block_id + \" | TypeID = \" + type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\n\n\t\tthis._blocks[this._cur_block_id] = block;\n\n\t\tif ((this._version[0] == 3) && (this._version[1] == 0)) {\n\t\t\t// probably should contain some info about the type of animation\n\t\t\tvar factory = new AS2SceneGraphFactory(this._view);\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 24:\n\t\t\t\t\tthis.parseMeshLibraryBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 25:\n\t\t\t\t\tthis.parseBillBoardLibraryBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 44:\n\t\t\t\t\tthis.parseAudioBlock(this._cur_block_id, factory);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 133:\n\t\t\t\t\tthis.parseTimeLine(this._cur_block_id, factory);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 134:\n\t\t\t\t\tthis.paresTextField(this._cur_block_id, factory);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 135:\n\t\t\t\t\tthis.parseTesselatedFont(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 136:\n\t\t\t\t\tthis.parseTextFormat(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ((this._version[0] > 2)||((this._version[0] >= 2) && (this._version[1] >= 1))) {\n\t\t\tswitch (type) {\n\t\t\t\tcase 11:\n\t\t\t\t\tthis.parsePrimitves(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 31:\n\t\t\t\t\tthis.parseSkyboxInstance(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 41:\n\t\t\t\t\tthis.parseLight(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 42:\n\t\t\t\t\tthis.parseCamera(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t//  case 43:\n\t\t\t\t//      parseTextureProjector(_cur_block_id);\n\t\t\t\t//      isParsed = true;\n\t\t\t\t//      break;\n\n\t\t\t\tcase 51:\n\t\t\t\t\tthis.parseLightPicker(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 81:\n\t\t\t\t\tthis.parseMaterial_v1(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 83:\n\t\t\t\t\tthis.parseCubeTexture(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 91:\n\t\t\t\t\tthis.parseSharedMethodBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 92:\n\t\t\t\t\tthis.parseShadowMethodBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 111:\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id, true);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 112:\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 113:\n\t\t\t\t\tthis.parseVertexAnimationSet(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 122:\n\t\t\t\t\tthis.parseAnimatorSet(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 253:\n\t\t\t\t\tthis.parseCommand(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isParsed == false) {\n\t\t\tswitch (type) {\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.parseGeometry(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 22:\n\t\t\t\t\tthis.parseContainer(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 23:\n\t\t\t\t\tthis.parseMeshInstance(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 81:\n\t\t\t\t\tthis.parseMaterial(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 82:\n\t\t\t\t\tthis.parseTexture(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 101:\n\t\t\t\t\tthis.parseSkeleton(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 102:\n\t\t\t\t\tthis.parseSkeletonPose(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 103:\n\t\t\t\t\tthis.parseSkeletonAnimation(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 121:\n\t\t\t\t//this.parseUVAnimation(this._cur_block_id);\n\t\t\t\t//break;\n\t\t\t\tcase 254:\n\t\t\t\t\tthis.parseNameSpace(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 255:\n\t\t\t\t\tthis.parseMetaData(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (this._debug)\n\t\t\t\t\t\tconsole.log(\"AWDBlock:   Unknown BlockType  (BlockID = \" + this._cur_block_id + \") - Skip \" + len + \" bytes\");\n\n\t\t\t\t\tthis._newBlockBytes.position += len;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this._debug) {\n\t\t\tif (this._newBlockBytes.position != blockEndBlock)\n\t\t\t\tconsole.log(\"  (!)(!)(!) Error while reading AWDBlock ID \" + this._cur_block_id + \" = skip to next block\");\n\n\t\t\tif (block.errorMessages) {\n\t\t\t\tvar len:number = block.errorMessages.length;\n\t\t\t\tfor (var msgCnt:number = 0; msgCnt < len; msgCnt++)\n\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\n\t\t\t}\n\n\t\t\tconsole.log(\"\\n\");\n\t\t}\n\n\t\tif (this._debugTimers && !this.parsingPaused)\n\t\t\tthis.updateTimers(type);\n\n\t\tthis._body.position = blockEndAll;\n\t\tthis._newBlockBytes = null;\n\t}\n\n\tprivate updateTimers(type:number)\n\t{\n\t\tvar end_timing = performance.now();\n\t\tvar time_delta = end_timing - this.start_timeing;\n\t\tthis._time_all += time_delta;\n\n\t\tif (type == 1) {\n\t\t\tthis._time_geom += time_delta;\n\t\t\tthis._num_geom++;\n\t\t} else if (type == 133) {\n\t\t\tthis._time_timeline += time_delta;\n\t\t\tthis._num_timeline++;\n\t\t} else if (type == 135) {\n\t\t\tthis._time_fonts += time_delta;\n\t\t\tthis._num_fonts++;\n\t\t} else if (type == 134) {\n\t\t\tthis._time_textfields += time_delta;\n\t\t\tthis._num_textfields++;\n\t\t} else if (type == 44) {\n\t\t\tthis._time_sounds += time_delta;\n\t\t\tthis._num_sounds++;\n\t\t} else if (type == 82) {\n\t\t\tthis._time_textures += time_delta;\n\t\t\tthis._num_textures++;\n\t\t} else if (type == 81) {\n\t\t\tthis._time_materials += time_delta;\n\t\t\tthis._num_materials++;\n\t\t} else if(type==24) {\n\t\t\tthis._time_meshes += time_delta;\n\t\t\tthis._num_meshes++;\n\t\t}\n\t}\n\n\n\t//--Parser Blocks---------------------------------------------------------------------------\n\n\n\tprivate parseTesselatedFont(blockID:number)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tthis._blocks[blockID].name = name;\n\t\tvar font_style_cnt:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar font_style_char_cnt:number;\n\t\tvar font_style_name:string;\n\t\tvar new_font_style:TesselatedFontTable;\n\t\tvar new_font:Font=new Font();\n\t\tvar font_style_char:number;\n\t\tvar sm_len:number;\n\t\tvar sm_end:number;\n\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\n\t\tfor (var i:number = 0; i < font_style_cnt; ++i) {\n\t\t\tfont_style_name = this.parseVarStr();\n\t\t\tnew_font_style = new_font.get_font_table(font_style_name);\n\t\t\tnew_font_style.set_font_em_size(this._newBlockBytes.readUnsignedInt());\n\t\t\tnew_font_style.set_whitespace_width(this._newBlockBytes.readUnsignedInt());\n\t\t\t//console.log(new_font_style.get_whitespace_width());\n\t\t\tfont_style_char_cnt = this._newBlockBytes.readUnsignedInt();\n\t\t\tfor (var j:number = 0; j < font_style_char_cnt; ++j) {\n\t\t\t\t// todo: this is basically a simplified version of the subgeom-parsing done in parseGeometry. Make a parseSubGeom() instead (?)\n\t\t\t\tfont_style_char = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tsm_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tsm_end = this._newBlockBytes.position + sm_len;\n\n\t\t\t\t// Loop through data streams\n\t\t\t\twhile (this._newBlockBytes.position < sm_end) {\n\t\t\t\t\t// Type, field type, length\n\t\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\n\n\t\t\t\t\tif (str_type == 2) {//face indices positions\n\t\t\t\t\t\tvar indices:Array<number> = new Array<number>();\n\t\t\t\t\t\tfor(var idx:number = 0; this._newBlockBytes.position < str_end; idx++)\n\t\t\t\t\t\t\tindices[idx] = this._newBlockBytes.readUnsignedShort();\n\n\t\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 7 x float32\n\t\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\n\t\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(curveData) {\n\t\t\t\t\tvar vertexBuffer:AttributesBuffer = new AttributesBuffer(20, str_len / 20);\n\t\t\t\t\tvertexBuffer.bufferView = new Uint8Array(<ArrayBuffer> curveData.arraybytes);\n\n\t\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(vertexBuffer);\n\t\t\t\t\t//curve_sub_geom.setUVs(new Float2Attributes(vertexBuffer));\n\t\t\t\t\tcurve_sub_geom.autoDeriveUVs=false;\n\t\t\t\t\tnew_font_style.set_subgeo_for_char(font_style_char.toString(), curve_sub_geom);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.parseProperties(null);\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset>new_font, name);\n\n\t\tthis._blocks[blockID].data = new_font;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a font: Name = '\" + name);\n\t}\n\n\tprivate static textFormatProperties:Object = {\n\t\t1:AWDParser.UINT16,\n\t\t2:AWDParser.UINT16,\n\t\t3:AWDParser.UINT8,\n\t\t4:AWDParser.UINT8,\n\t\t5:AWDParser.UINT8,\n\t\t6:AWDParser.UINT8,\n\t\t7:AWDParser.UINT16,\n\t\t8:AWDParser.UINT16,\n\t\t9:AWDParser.UINT16,\n\t\t10:AWDParser.UINT16};\n\n\tprivate parseTextFormat(blockID:number)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tthis._blocks[blockID].name = name;\n\n\t\tvar font:Font = <Font> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar font_style_name:string = this.parseVarStr();\n\n\t\tvar newTextFormat:TextFormat = new TextFormat();\n\t\tnewTextFormat.font_name = font.name;\n\n\t\tvar font_table:TesselatedFontTable = font.get_font_table(font_style_name);\n\t\tif (font_table!=null) {\n\t\t\tnewTextFormat.font_style = font_style_name;\n\t\t\tnewTextFormat.font_table = font_table;\n\t\t}\n\n\t\tvar mat:BasicMaterial = <BasicMaterial> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tmat.bothSides = true;\n\n\t\tvar num_uv_values:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar uv_values:Array<number> = [];\n\t\tfor(var uvcnt:number = 0; uvcnt < num_uv_values; uvcnt++)\n\t\t\tuv_values[uvcnt] = this._newBlockBytes.readFloat();\n\n\t\tnewTextFormat.uv_values = uv_values;\n\t\tvar format_props:AWDProperties = this.parseProperties(AWDParser.textFormatProperties);\n\n\t\tnewTextFormat.size = format_props.get(1,12);\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\n\t\t//newTextFormat.rotated = format_props.get(3,false);\n\t\tnewTextFormat.kerning = format_props.get(4,true);\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\n\t\tvar tf_align_int:number = format_props.get(6,0);\n\t\tif(tf_align_int==1){\n\t\t\tnewTextFormat.align=\"right\";\n\t\t}\n\t\telse if(tf_align_int==2){\n\t\t\tnewTextFormat.align=\"center\";\n\t\t}\n\t\tnewTextFormat.indent = format_props.get(7,0);\n\t\tnewTextFormat.leftMargin = format_props.get(8,0);\n\t\tnewTextFormat.rightMargin = format_props.get(9,0);\n\t\t//newTextFormat.linespacing = format_props.get(10,0);\n\t\tnewTextFormat.material = mat;\n\t\tthis.parseUserAttributes();// textformat has no extra-properties\n\t\t//newTextFormat.extra =\n\n\t\tthis._pFinalizeAsset(<IAsset> newTextFormat, name);\n\t\tthis._blocks[blockID].data = newTextFormat;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a TextFormat: Name = '\" + name + \" font: \"+font.name);\n\t}\n\n\tprivate static textFieldProperties:Object = {\n\t\t1:AWDParser.BOOL,\n\t\t3:AWDParser.BOOL,\n\t\t4:AWDParser.BOOL,\n\t\t5:AWDParser.BOOL,\n\t\t7:AWDParser.UINT8,\n\t\t8:AWDParser.UINT8,\n\t\t9:AWDParser.UINT8};\n\n\tprivate static textFieldTypes:Array<string> = [\"static\", \"dynamic\", \"input\", \"input\"];\n\n\n\tprivate paresTextField(blockID:number, factory:ITimelineSceneGraphFactory)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tthis._blocks[blockID].name = name;\n        var newTextField = factory.createTextField();\n\t\tvar text_field_type:number=this._newBlockBytes.readUnsignedByte();\n\n\t\tnewTextField.type = AWDParser.textFieldTypes[text_field_type];\n\n\t\tif(text_field_type == 3)\n\t\t\tnewTextField.displayAsPassword = true;\n\n\t\t//\n\t\tnewTextField.textWidth = Math.abs(this._newBlockBytes.readFloat());\n\t\tnewTextField.textHeight = Math.abs(this._newBlockBytes.readFloat());\n\t\tvar num_paragraphs:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar complete_text:string = \"\";\n\t\t//console.log(\"num_paragraphs  '\" + num_paragraphs);\n\t\tfor(var paracnt:number=0; paracnt<num_paragraphs; paracnt++){\n\n\t\t\tvar num_textruns:number = this._newBlockBytes.readUnsignedInt();\n\t\t\t//console.log(\"num_textruns  '\" + num_textruns);\n\t\t\tfor(var textrun_cnt:number=0; textrun_cnt<num_textruns; textrun_cnt++) {\n\t\t\t\tvar text_format:TextFormat = <TextFormat> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\t\t\tvar txt_length = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"txt_length  '\" + txt_length);\n\t\t\t\tif (txt_length > 0) {\n\t\t\t\t\tvar this_txt:string = this._newBlockBytes.readUTFBytes(txt_length);\n\t\t\t\t\t//newTextField.appendText(this_txt, text_format);\n\t\t\t\t\tcomplete_text += this_txt;\n\t\t\t\t\t//console.log(\"this_txt  '\" + this_txt);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//newTextField.closeParagraph();\n\t\t}\n\t\tnewTextField.textFormat=text_format;\n\t\tnewTextField.text=complete_text;\n\t\t//newTextField.construct_geometry();\n\t\t// todo: optional matrix etc can be put in properties.\n\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.textFieldProperties);\n\t\tnewTextField.selectable = props.get(1, false);\n\t\tnewTextField.border =  props.get(3, false);\n\t\t//newTextField.renderHTML =  props.get(4, false);\n\t\t//newTextField.scrollable =  props.get(5, false);\n\t\t//newTextField.text_flow =  props.get(7, 0);\n\t\t//newTextField.orientationMode =  props.get(8, 0);\n\t\t//newTextField.line_mode =  props.get(9, 0);\n\t\tnewTextField.extra = this.parseUserAttributes();\n\n\t\t//console.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\n\t\tthis._pFinalizeAsset(<IAsset> newTextField, name);\n\t\tthis._blocks[blockID].data = newTextField;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\n\t}\n\n\t// Block ID = 25\n\tprivate parseBillBoardLibraryBlock(blockID:number)\n\t{\n\n\t\tvar name:string = this.parseVarStr();\n\t\tvar mat:BasicMaterial = <BasicMaterial> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tmat.bothSides=true;\n\t\tvar billboard:Billboard = new Billboard(mat);\n\n\t\t// todo: optional matrix etc can be put in properties.\n\t\tthis.parseProperties(null);\n\n\t\tbillboard.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> billboard, name);\n\n\t\tthis._blocks[blockID].data = billboard;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Library-Billboard: Name = '\" + name + \"| Material-Name = \" + mat.name);\n\t}\n\t// Block ID = 24\n\tprivate parseMeshLibraryBlock(blockID:number)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar geom:Geometry = <Geometry> this._blocks[data_id].data;\n\t\tthis._blocks[blockID].geoID = data_id;\n\n\t\tvar num_materials:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar materials:Array<MethodMaterial> = new Array<MethodMaterial>();\n\t\tvar materialNames:Array<string> = new Array<string>();\n\t\tvar mat:MethodMaterial;\n\t\tfor (var materials_parsed:number = 0; materials_parsed < num_materials; materials_parsed++) {\n\t\t\tmat = <MethodMaterial> (this._blocks[this._newBlockBytes.readUnsignedInt()].data || DefaultMaterialManager.getDefaultMaterial());\n\t\t\t//mat.preserveAlpha = true;\n\t\t\tmat.alphaBlending = true;\n\t\t\tmat.useColorTransform = true;\n\t\t\tmaterials[materials_parsed] = mat;\n\t\t\tmaterialNames[materials_parsed] = mat.name;\n\t\t}\n\n\t\tvar mesh:Mesh = new Mesh(geom, null);\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\n\t\t\tmesh.material = materials[0];\n\t\t} else if (materials.length > 1) {\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\n\t\t\tfor (var i:number = 0; i < mesh.subMeshes.length; i++)\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\n\t\t}\n\n\t\tthis.parseProperties(null);\n\t\tmesh.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\n\n\t\tthis._blocks[blockID].data = mesh;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Library-Mesh: Name = '\" + name + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames);\n\t}\n\n\tprivate parseAudioBlock(blockID:number, factory:ITimelineSceneGraphFactory)\n\t{\n\t\t//var asset:Audio;todo create asset for audio\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar data_len:number;\n\n\t\t// External\n\t\tif (type == 0) {\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\tvar url:string;\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\n\t\t\t// todo parser needs to be able to handle mp3 and wav files if we trigger the loading of external ressource\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\n\t\t} else {\n\t\t\t// todo: exporter does not export embed sounds yet\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\n\t\t\tvar data:ByteArray = new ByteArray(data_len);\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t// todo parse sound from bytes\n\t\t\t// this._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.by(data), true);\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\n\t\t}\n\n\t\t// Ignore for now\n\t\tthis.parseProperties(null);\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\n\t\tthis._pPauseAndRetrieveDependencies();\n\t\t//this._blocks[blockID].data = asset;todo\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Start parsing a \" + [\"external\", \"embed\"][type] + \" Audio file\");\n\t}\n\n\t//Block ID = 4\n\tprivate parseTimeLine(blockID:number, factory:ITimelineSceneGraphFactory)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar cmd_asset:DisplayObject;\n\t\tvar new_timeline:Timeline = new Timeline();\n\t\tvar timeLineContainer = factory.createMovieClip(new_timeline);\n\t\tvar name = this.parseVarStr();\n\t\tvar isScene = !!this._newBlockBytes.readUnsignedByte();\n\t\tvar sceneID = this._newBlockBytes.readUnsignedByte();\n\t\ttimeLineContainer.fps = this._newBlockBytes.readFloat();\n\n\t\t// register list of potential childs\n\t\t// a potential child can be reused on a timeline (added / removed / added)\n\t\t// However, for each potential child, we need to register the max-number of instances that a frame contains\n\t\t// we parse 2 lists of potential-childs:\n\t\t// -\tthe first list contains potential-childs that are only ever instanced once per frame.\n\t\t// -\tthe second list contains potential-childs that are instanced multiple times on some frames.\n\n\t\t// on registering a child, the child gets a incremental-id assigned. This is the id, that the commands are using to access the childs.\n\t\t// hence we need to be careful to register all objects in correct order.\n\n\t\tvar num_potential_childs:number = this._newBlockBytes.readUnsignedShort();\n\t\tfor (i = 0; i < num_potential_childs; i++) {\n\t\t\tcmd_asset = <DisplayObject> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\t\tif (cmd_asset != null) {\n\t\t\t\tnew_timeline.registerPotentialChild(cmd_asset);\n\t\t\t} else {\n\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\n\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t}\n\t\t}\n\n\t\tvar num_all_display_instances:number = num_potential_childs;\n\n\t\tvar num_potential_childs_multi_instanced = this._newBlockBytes.readUnsignedShort();\n\t\tfor (i = 0; i < num_potential_childs_multi_instanced; i++) {\n\t\t\tcmd_asset = <DisplayObject> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\t\tvar num_instances:number = this._newBlockBytes.readUnsignedShort();\n\t\t\tnum_all_display_instances += num_instances;\n\t\t\tif (cmd_asset != null) {\n\t\t\t\tfor (j = 0; j < num_instances; j++)\n\t\t\t\t\tnew_timeline.registerPotentialChild(cmd_asset);\n\t\t\t} else {\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\n\t\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\n\t\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\n\t\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed \" + (num_potential_childs + num_potential_childs_multi_instanced) + \" potential childs. They will be used by \" + num_all_display_instances + \" instances.\");\n\n\t\t// register list of potential sounds - for now we always have 0 sounds\n\t\tvar num_potential_sounds = this._newBlockBytes.readUnsignedShort();\n\n\n\t\tvar str_cnt = this._newBlockBytes.readUnsignedByte();\n\t\tvar str_len = 0;\n\t\tvar str_data_type = 0;\n\t\tvar str_type=0;\n\t\tvar str_counter=0;\n\t\tfor(i=0; i<str_cnt;i++){\n\t\t\t// the first 6 lists are not optional and always in same order\n\t\t\t// hence we can get type by incremental counter instead of stored uint8\n\t\t\tif(str_counter<6)\n\t\t\t\tstr_type=str_counter;\n\t\t\telse\n\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t// get the data type for this stream (1:UINT8 - 2:UINT16 - 3:UINT32)\n\t\t\tstr_data_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t// size of this stream in byte\n\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\tif(str_len>0) {\n\t\t\t\tvar keyframes_start_indices_data:ByteArray = new ByteArray(str_len);\n\t\t\t\tthis._newBlockBytes.readBytes(keyframes_start_indices_data, 0, str_len);\n\t\t\t\tvar new_buffer:ArrayBufferView;\n\t\t\t\t//console.log(\"str_data_type = \"+str_type);\n\t\t\t\tswitch (str_data_type) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tnew_buffer = new Uint8Array(<ArrayBuffer> keyframes_start_indices_data.arraybytes);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tnew_buffer = new Uint16Array(<ArrayBuffer> keyframes_start_indices_data.arraybytes);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tnew_buffer = new Uint32Array(<ArrayBuffer> keyframes_start_indices_data.arraybytes);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tswitch (str_type) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tnew_timeline.keyframe_durations = new_buffer;\n\t\t\t\t\t\tnew_timeline.numKeyFrames=str_len / str_data_type;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tnew_timeline.frame_command_indices = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tnew_timeline.frame_recipe = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tnew_timeline.command_length_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tnew_timeline.command_index_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\tnew_timeline.add_child_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\tnew_timeline.remove_child_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\tnew_timeline.update_child_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\tnew_timeline.update_child_props_indices_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 9:\n\t\t\t\t\t\tnew_timeline.update_child_props_length_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 10:\n\t\t\t\t\t\tnew_timeline.property_type_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 11:\n\t\t\t\t\t\tnew_timeline.property_index_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 12:\n\t\t\t\t\t\tnew_timeline.properties_stream_int = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tstr_counter++;\n\t\t}\n\t\tvar lc:number=0;\n\t\tvar float_array_data:ByteArray;\n\t\tstr_cnt = this._newBlockBytes.readUnsignedByte();\n\t\tfor(i=0; i<str_cnt;i++){\n\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\tswitch(str_type) {\n\t\t\t\tcase 0://mtx_scale\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\tfloat_array_data = new ByteArray(str_len);\n\t\t\t\t\tthis._newBlockBytes.readBytes(float_array_data, 0, str_len);\n\t\t\t\t\tnew_timeline.properties_stream_f32_mtx_scale_rot=new Float32Array(<ArrayBuffer> float_array_data.arraybytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1://mtx_pos\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\tfloat_array_data = new ByteArray(str_len);\n\t\t\t\t\tthis._newBlockBytes.readBytes(float_array_data, 0, str_len);\n\t\t\t\t\tnew_timeline.properties_stream_f32_mtx_pos=new Float32Array(<ArrayBuffer> float_array_data.arraybytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2://mtx_all\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\tfloat_array_data = new ByteArray(str_len);\n\t\t\t\t\tthis._newBlockBytes.readBytes(float_array_data, 0, str_len);\n\t\t\t\t\tnew_timeline.properties_stream_f32_mtx_all=new Float32Array(<ArrayBuffer> float_array_data.arraybytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3://ct\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\tfloat_array_data = new ByteArray(str_len);\n\t\t\t\t\tthis._newBlockBytes.readBytes(float_array_data, 0, str_len);\n\t\t\t\t\tnew_timeline.properties_stream_f32_ct=new Float32Array(<ArrayBuffer> float_array_data.arraybytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4://labels\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t//console.log(\"start reading labels \"+str_len);\n\t\t\t\t\tfor (lc = 0; lc < str_len; lc++) {\n\t\t\t\t\t\tnew_timeline._labels[this.parseVarStr()] = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5://name_stream\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\tvar string_props_array:Array<string>=[];\n\t\t\t\t\tfor (lc = 0; lc < str_len; lc++) {\n\t\t\t\t\t\tstring_props_array.push(this._newBlockBytes.readUTFBytes(this._newBlockBytes.readUnsignedShort()));\n\t\t\t\t\t}\n\t\t\t\t\tnew_timeline.properties_stream_strings = string_props_array;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6://script_stream\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\tfor (lc = 0; lc < str_len; lc++) {\n\t\t\t\t\t\tvar frame_index=this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\tvar one_str_len=this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\t//this._newBlockBytes.readUTFBytes(one_str_len);\n\t\t\t\t\t\tnew_timeline.add_framescript(this._newBlockBytes.readUTFBytes(one_str_len), frame_index);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tnew_timeline.init();\n\t\tthis.parseProperties(null);\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset>timeLineContainer, name);\n\n\t\tthis._blocks[blockID].data = timeLineContainer;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| isScene = \" + isScene + \"| sceneID = \" + sceneID + \"| numFrames = \");\n\t}\n\n\tprivate static geometryProperties:Object = {\n\t\t1:AWDParser.GEO_NUMBER,\n\t\t2:AWDParser.GEO_NUMBER};\n\n\tprivate static subGeometryProperties:Object = {\n\t\t1:AWDParser.GEO_NUMBER,\n\t\t2:AWDParser.GEO_NUMBER};\n\n\t//Block ID = 1\n\tprivate parseGeometry(blockID:number)\n\t{\n\t\tvar geom:Geometry = new Geometry();\n\n\t\t// Read name and sub count\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_subs:number = this._newBlockBytes.readUnsignedShort();\n\n\t\t// Read optional properties\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.geometryProperties);\n\t\tvar geoScaleU:number = props.get(1, 1);\n\t\tvar geoScaleV:number = props.get(2, 1);\n\n\t\t// Loop through sub meshes\n\t\tfor (var subs_parsed:number = 0;  subs_parsed < num_subs; subs_parsed++) {\n\t\t\tvar is_curve_geom:boolean=false;\n\t\t\tvar sm_len:number, sm_end:number;\n\t\t\tvar w_indices:Array<number>;\n\t\t\tvar weights:Array<number>;\n\n\t\t\tsm_len = this._newBlockBytes.readUnsignedInt();\n\t\t\tsm_end = this._newBlockBytes.position + sm_len;\n\n\t\t\tvar subProps:AWDProperties = this.parseProperties(AWDParser.subGeometryProperties);\n\t\t\t// Loop through data streams\n\t\t\twhile (this._newBlockBytes.position < sm_end) {\n\t\t\t\tvar idx:number = 0;\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\n\n\t\t\t\t// Type, field type, length\n\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\n\n\t\t\t\tvar x:number, y:number, z:number;\n\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo);\n\n\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\n\t\t\t\t\t\tindices[idx++] = this._newBlockBytes.readUnsignedShort();\n\n\t\t\t\t} else if (str_type == 3) {\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\n\t\t\t\t\t\tuvs[idx++] = this.readNumber(this._accuracyGeo);\n\t\t\t\t} else if (str_type == 4) {\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\n\t\t\t\t\t\tnormals[idx++] = this.readNumber(this._accuracyGeo);\n\t\t\t\t} else if (str_type == 6) {\n\t\t\t\t\tw_indices = Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\n\t\t\t\t\t\tw_indices[idx++] = this._newBlockBytes.readUnsignedShort()*3;\n\t\t\t\t} else if (str_type == 7) {\n\t\t\t\t\tweights = new Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\n\t\t\t\t\t\tweights[idx++] = this.readNumber(this._accuracyGeo);\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\n\t\t\t\t\tis_curve_geom = true;\n\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\n\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\n\t\t\t\t} else {\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.parseUserAttributes(); // Ignore sub-mesh attributes for now\n\n\t\t\tif(is_curve_geom){\n\t\t\t\tvar vertexBuffer:AttributesBuffer = new AttributesBuffer(28, str_len/28);\n\t\t\t\tvertexBuffer.bufferView = new Uint8Array(<ArrayBuffer> curveData.arraybytes);\n\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(vertexBuffer);\n\t\t\t\tcurve_sub_geom.setUVs(new Float2Attributes(vertexBuffer));\n\t\t\t\tgeom.addSubGeometry(curve_sub_geom);\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Parsed a CurveSubGeometry\");\n\t\t\t} else {\n\t\t\t\tvar triangle_sub_geom = new TriangleSubGeometry(new AttributesBuffer());\n\n\t\t\t\tif (weights)\n\t\t\t\t\ttriangle_sub_geom.jointsPerVertex = weights.length / (verts.length / 3);\n\n\t\t\t\tif (normals)\n\t\t\t\t\ttriangle_sub_geom.autoDeriveNormals = false;\n\n\t\t\t\tif (uvs)\n\t\t\t\t\ttriangle_sub_geom.autoDeriveUVs = false;\n\n\t\t\t\ttriangle_sub_geom.autoDeriveTangents = true;\n\n\t\t\t\ttriangle_sub_geom.setIndices(indices);\n\t\t\t\ttriangle_sub_geom.setPositions(verts);\n\t\t\t\ttriangle_sub_geom.setNormals(normals);\n\t\t\t\ttriangle_sub_geom.setUVs(uvs);\n\t\t\t\ttriangle_sub_geom.setTangents(null);\n\t\t\t\ttriangle_sub_geom.setJointWeights(weights);\n\t\t\t\ttriangle_sub_geom.setJointIndices(w_indices);\n\n\t\t\t\tvar scaleU:number = subProps.get(1, 1);\n\t\t\t\tvar scaleV:number = subProps.get(2, 1);\n\t\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\n\n\t\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\n\t\t\t\t\tsetSubUVs = true;\n\t\t\t\t\tscaleU = geoScaleU / scaleU;\n\t\t\t\t\tscaleV = geoScaleV / scaleV;\n\t\t\t\t}\n\n\t\t\t\tif (setSubUVs)\n\t\t\t\t\ttriangle_sub_geom.scaleUV(scaleU, scaleV);\n\n\t\t\t\tgeom.addSubGeometry(triangle_sub_geom);\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Parsed a TriangleSubGeometry\");\n\t\t\t}\n\n\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\n\t\t\t// when creating meshes (and their material assignments.)\n\t\t}\n\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\n\t\t\tgeom.scaleUV(geoScaleU, geoScaleV);\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> geom, name);\n\t\tthis._blocks[blockID].data = geom;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a TriangleGeometry: Name = \" + name);\n\t}\n\n\tprivate static primitiveProperties:Object = {\n\t\t101:AWDParser.GEO_NUMBER,\n\t\t102:AWDParser.GEO_NUMBER,\n\t\t103:AWDParser.GEO_NUMBER,\n\t\t110:AWDParser.GEO_NUMBER,\n\t\t111:AWDParser.GEO_NUMBER,\n\t\t301:AWDParser.UINT16,\n\t\t302:AWDParser.UINT16,\n\t\t303:AWDParser.UINT16,\n\t\t701:AWDParser.BOOL,\n\t\t702:AWDParser.BOOL,\n\t\t703:AWDParser.BOOL,\n\t\t704:AWDParser.BOOL};\n\n\tprivate static primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"];\n\n\t//Block ID = 11\n\tprivate parsePrimitves(blockID:number)\n\t{\n\t\tvar name:string;\n\t\tvar prefab:PrefabBase;\n\t\tvar primType:number;\n\t\tvar subs_parsed:number;\n\t\tvar props:AWDProperties;\n\t\tvar bsm:Matrix3D;\n\n\t\t// Read name and sub count\n\t\tname = this.parseVarStr();\n\t\tprimType = this._newBlockBytes.readUnsignedByte();\n\t\tprops = this.parseProperties(AWDParser.primitiveProperties);\n\n\t\t// to do, not all properties are set on all primitives\n\t\tswitch (primType) {\n\t\t\tcase 1:\n\t\t\t\tprefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tprefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\tprefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 4:\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\n\t\t\t\tif (!props.get(701, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\n\t\t\t\tif (!props.get(702, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\n\t\t\t\tif (!props.get(703, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\t\tprefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 6:\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 7:\n\t\t\t\tprefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tprefab = new PrefabBase();\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\n\t\t\t//geom.subGeometries;\n\t\t\t//geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\n\t\t}\n\n\t\tthis.parseUserAttributes();\n\t\tprefab.name = name;\n\t\tthis._pFinalizeAsset(prefab, name);\n\t\tthis._blocks[blockID].data = prefab;\n\n\t\tif (this._debug) {\n\t\t\tif ((primType < 0) || (primType > 7))\n\t\t\t\tprimType = 0;\n\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + name + \"| type = \" + AWDParser.primitiveTypes[primType]);\n\t\t}\n\t}\n\n\tprivate static containerProperties:Object = {\n\t\t1:AWDParser.MATRIX_NUMBER,\n\t\t2:AWDParser.MATRIX_NUMBER,\n\t\t3:AWDParser.MATRIX_NUMBER,\n\t\t4:AWDParser.UINT8};\n\n\t// Block ID = 22\n\tprivate parseContainer(blockID:number)\n\t{\n\t\tvar name:string;\n\t\tvar mtx:Matrix3D;\n\t\tvar ctr:DisplayObjectContainer;\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\n\t\tmtx = this.parseMatrix3D();\n\t\tname = this.parseVarStr();\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tctr = new DisplayObjectContainer();\n\t\tctr.transform.matrix3D = mtx;\n\n\t\tif (parent) {\n\t\t\tparent.addChild(ctr);\n\t\t\tparentName = parent.name;\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(ctr);\n\t\t}\n\n\t\t// in AWD version 2.1 we read the Container properties\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tvar props:AWDProperties = this.parseProperties(AWDParser.containerProperties);\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t} else {// in other versions we do not read the Container properties\n\t\t\tthis.parseProperties(null);\n\t\t}\n\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\n\t\tctr.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> ctr, name);\n\t\tthis._blocks[blockID].data = ctr;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + name + \"' | Parent-Name = \" + parentName);\n\t}\n\n\tprivate static meshInstanceProperties:Object = {\n\t\t1:AWDParser.MATRIX_NUMBER,\n\t\t2:AWDParser.MATRIX_NUMBER,\n\t\t3:AWDParser.MATRIX_NUMBER,\n\t\t4:AWDParser.UINT8,\n\t\t5:AWDParser.BOOL};\n\n\t// Block ID = 23\n\tprivate parseMeshInstance(blockID:number)\n\t{\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar asset:IAsset = <IAsset> this._blocks[data_id].data;\n\t\tvar geom:Geometry;\n\t\tvar prefab:PrefabBase;\n\t\tvar isPrefab:boolean=false;\n\t\tif (asset.isAsset(Geometry)) {\n\t\t\tgeom = <Geometry> asset;\n\t\t} else {\n\t\t\tisPrefab = true;\n\t\t\tprefab = <PrefabBase> asset;\n\t\t}\n\n\t\tthis._blocks[blockID].geoID = data_id;\n\t\tvar num_materials:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar materials:Array<MethodMaterial> = new Array<MethodMaterial>();\n\t\tvar materialNames:Array<string> = new Array<string>();\n\t\tvar mat:MethodMaterial;\n\t\tfor (var materials_parsed:number = 0; materials_parsed < num_materials; materials_parsed++) {\n\t\t\tmat = <MethodMaterial> (this._blocks[this._newBlockBytes.readUnsignedInt()].data || DefaultMaterialManager.getDefaultMaterial());\n\t\t\tmaterials[materials_parsed] = mat;\n\t\t\tmaterialNames[materials_parsed] = mat.name;\n\t\t}\n\n\t\tvar mesh:Mesh = isPrefab? <Mesh> prefab.getNewObject() : new Mesh(geom, null);\n\t\tmesh.transform.matrix3D = mtx;\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tif (parent) {\n\t\t\tparent.addChild(mesh);\n\t\t\tparentName = parent.name;\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\n\t\t}\n\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\n\t\t\tmesh.material = materials[0];\n\t\t} else if (materials.length > 1) {\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\n\t\t\tfor (var i:number = 0; i < mesh.subMeshes.length; i++)\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\n\t\t}\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tvar props:AWDProperties = this.parseProperties(AWDParser.meshInstanceProperties);\n\t\t\tmesh.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t\tmesh.castsShadows = props.get(5, true);\n\t\t} else {\n\t\t\tthis.parseProperties(null);\n\t\t}\n\n\t\tmesh.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\n\t\tthis._blocks[blockID].data = mesh;\n\n\t\tif (this._debug) {\n\t\t\tif (isPrefab)\n\t\t\t\tconsole.log(\"Parsed a Mesh for Prefab: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Prefab-Name = \" + prefab.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames);\n\t\t\telse\n\t\t\t\tconsole.log(\"Parsed a Mesh for Geometry: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames);\n\t\t}\n\t}\n\n\n\t//Block ID 31\n\tprivate parseSkyboxInstance(blockID:number)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar asset:Skybox = new Skybox();\n\t\tvar tex:SingleCubeTexture = <SingleCubeTexture> (this._blocks[this._newBlockBytes.readUnsignedInt()].data || DefaultMaterialManager.getDefaultTexture(asset));\n\t\tasset.cubeMap = tex;\n\n\t\tthis.parseProperties(null);\n\t\tasset.extra = this.parseUserAttributes();\n\t\tthis._pFinalizeAsset(asset, name);\n\t\tthis._blocks[blockID].data = asset;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + name + \"' | CubeTexture-Name = \" + tex.name);\n\t}\n\n\tprivate static lightProperties:Object = {\n\t\t1:AWDParser.PROPERTY_NUMBER,\n\t\t2:AWDParser.PROPERTY_NUMBER,\n\t\t3:AWDParser.COLOR,\n\t\t4:AWDParser.PROPERTY_NUMBER,\n\t\t5:AWDParser.PROPERTY_NUMBER,\n\t\t6:AWDParser.BOOL,\n\t\t7:AWDParser.COLOR,\n\t\t8:AWDParser.PROPERTY_NUMBER,\n\t\t9:AWDParser.UINT8,\n\t\t10:AWDParser.UINT8,\n\t\t11:AWDParser.PROPERTY_NUMBER,\n\t\t12:AWDParser.UINT16,\n\t\t21:AWDParser.MATRIX_NUMBER,\n\t\t22:AWDParser.MATRIX_NUMBER,\n\t\t23:AWDParser.MATRIX_NUMBER};\n\n\t//Block ID = 41\n\tprivate parseLight(blockID:number)\n\t{\n\t\tvar light:LightBase;\n\t\tvar newShadowMapper:ShadowMapperBase;\n\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\t\tvar lightType:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.lightProperties);\n\t\tvar shadowMapperType:number = props.get(9, 0);\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\n\n\t\tif (lightType == 1) {\n\t\t\tlight = new PointLight();\n\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 4) {\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlight.transform.matrix3D = mtx;\n\t\t}\n\n\t\tif (lightType == 2) {\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 1) {\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\n\t\t\t\t}\n\n\t\t\t\t//if (shadowMapperType == 2)\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\n\t\t\t\t//if (shadowMapperType == 3)\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\n\n\t\t\t}\n\t\t}\n\n\t\tlight.color = props.get(3, 0xffffff);\n\t\tlight.specular = props.get(4, 1.0);\n\t\tlight.diffuse = props.get(5, 1.0);\n\t\tlight.ambientColor = props.get(7, 0xffffff);\n\t\tlight.ambient = props.get(8, 0.0);\n\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\n\t\tif (newShadowMapper) {\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\n\t\t\t\tif (props.get(10, 1) != 1)\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 1)];\n\t\t\t} else {\n\t\t\t\tif (props.get(10, 2) != 2)\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 2)];\n\t\t\t}\n\n\t\t\tlight.shadowMapper = newShadowMapper;\n\t\t\tlight.castsShadows = true;\n\t\t}\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tif (parent) {\n\t\t\tparent.addChild(light);\n\t\t\tparentName = parent.name;\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(light);\n\t\t}\n\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(< IAsset> light, name);\n\n\t\tthis._blocks[blockID].data = light;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\n\t}\n\n\tprivate static cameraProperties:Object = {\n\t\t101:AWDParser.PROPERTY_NUMBER,\n\t\t102:AWDParser.PROPERTY_NUMBER,\n\t\t103:AWDParser.PROPERTY_NUMBER,\n\t\t104:AWDParser.PROPERTY_NUMBER};\n\n\tprivate static cameraPivotProperties:Object = {\n\t\t1:AWDParser.MATRIX_NUMBER,\n\t\t2:AWDParser.MATRIX_NUMBER,\n\t\t3:AWDParser.MATRIX_NUMBER,\n\t\t4:AWDParser.UINT8};\n\n\t//Block ID = 43\n\tprivate parseCamera(blockID:number)\n\t{\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\t\tvar projection:ProjectionBase;\n\n\t\tthis._newBlockBytes.readUnsignedByte(); //set as active camera\n\t\tthis._newBlockBytes.readShort(); //lengthof lenses - not used yet\n\n\t\tvar projectiontype:number = this._newBlockBytes.readShort();\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.cameraProperties);\n\n\t\tswitch (projectiontype) {\n\t\t\tcase 5001:\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\n\t\t\t\tbreak;\n\t\t\tcase 5002:\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\n\t\t\t\tbreak;\n\t\t\tcase 5003:\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\n\t\t\t\treturn;\n\t\t}\n\n\t\tvar camera:Camera = new Camera(projection);\n\t\tcamera.transform.matrix3D = mtx;\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tif (parent) {\n\t\t\tparent.addChild(camera);\n\t\t\tparentName = parent.name;\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(camera);\n\t\t}\n\n\t\tcamera.name = name;\n\t\tprops = this.parseProperties(AWDParser.cameraPivotProperties);\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\tcamera.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(camera, name);\n\n\t\tthis._blocks[blockID].data = camera;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\n\t}\n\n\t//Block ID = 51\n\tprivate parseLightPicker(blockID:number)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar numLights:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\n\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\n\n\t\tfor (var k:number = 0; k < numLights; k++) {\n\t\t\tvar light:LightBase = <LightBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\t\tlightsArray.push(light);\n\t\t\tlightsArrayNames.push(light.name);\n\t\t}\n\n\t\tif (lightsArray.length == 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not create this LightPicker, cause no Light was found.\");\n\t\t\tthis.parseUserAttributes();\n\t\t\treturn; //return without any more parsing for this block\n\t\t}\n\n\t\tvar lightPick:LightPickerBase = new StaticLightPicker(lightsArray);\n\t\tlightPick.name = name;\n\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> lightPick, name);\n\n\t\tthis._blocks[blockID].data = lightPick;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + name + \"' | Texture-Name = \" + lightsArrayNames);\n\t}\n\n\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\n\tprivate static materialProperties:Object = {\n\t\t1:AWDParser.INT32,\n\t\t2:AWDParser.BADDR,\n\t\t10:AWDParser.PROPERTY_NUMBER,\n\t\t11:AWDParser.BOOL,\n\t\t12:AWDParser.PROPERTY_NUMBER,\n\t\t13:AWDParser.BOOL};\n\n\t//Block ID = 81\n\tprivate parseMaterial(blockID:number)\n\t{\n\t\t// TODO: not used\n\t\t////blockLength = block.len;\n\t\tvar name:string;\n\t\tvar type:number;\n\t\tvar props:AWDProperties;\n\t\tvar mat:MethodMaterial;\n\t\tvar finalize:boolean;\n\t\tvar num_methods:number;\n\t\tvar methods_parsed:number;\n\t\tvar returnedArray:Array<any>;\n\n\t\tname = this.parseVarStr();\n\t\ttype = this._newBlockBytes.readUnsignedByte();\n\t\tnum_methods = this._newBlockBytes.readUnsignedByte();\n\n\t\t// Read material numerical properties\n\t\tprops = this.parseProperties(AWDParser.materialProperties);\n\n\t\tmethods_parsed = 0;\n\t\twhile (methods_parsed < num_methods) {\n\t\t\tvar method_type:number;\n\n\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\n\t\t\tthis.parseProperties(null);\n\t\t\tthis.parseUserAttributes();\n\t\t\tmethods_parsed += 1;\n\t\t}\n\n\t\tvar debugString:string = \"\";\n\t\tif (type === 1) { // Color material\n\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\tvar color:number = props.get(1, 0xffffff);\n\t\t\tif (this.materialMode < 2) {\n\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\n\t\t\t} else {\n\t\t\t\tmat = new MethodMaterial(color);\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t}\n\t\t} else if (type === 2) {\n\t\t\tvar texture:Single2DTexture = <Single2DTexture> this._blocks[props.get(2, 0)].data;\n\n\t\t\tmat = new MethodMaterial(texture);\n\n\t\t\tif (this.materialMode < 2) {\n\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\n\t\t\t} else {\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\n\t\t\t}\n\t\t}\n\n\t\tmat.extra = this.parseUserAttributes();\n\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\tmat.repeat = props.get(13, false);\n\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\n\n\t\tthis._blocks[blockID].data = mat;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(debugString);\n\t}\n\t\n\tprivate static material_v1Properties:Object = {1:AWDParser.UINT32,\n\t\t2:AWDParser.BADDR,\n\t\t3:AWDParser.BADDR,\n\t\t4:AWDParser.UINT8,\n\t\t5:AWDParser.BOOL,\n\t\t6:AWDParser.BOOL,\n\t\t7:AWDParser.BOOL,\n\t\t8:AWDParser.BOOL,\n\t\t9:AWDParser.UINT8,\n\t\t10:AWDParser.PROPERTY_NUMBER,\n\t\t11:AWDParser.BOOL,\n\t\t12:AWDParser.PROPERTY_NUMBER,\n\t\t13:AWDParser.BOOL,\n\t\t15:AWDParser.PROPERTY_NUMBER,\n\t\t16:AWDParser.UINT32,\n\t\t17:AWDParser.BADDR,\n\t\t18:AWDParser.PROPERTY_NUMBER,\n\t\t19:AWDParser.PROPERTY_NUMBER,\n\t\t20:AWDParser.UINT32,\n\t\t21:AWDParser.BADDR,\n\t\t22:AWDParser.BADDR};\n\n\tprivate static method_v1Properties:Object = {\n\t\t1:AWDParser.BADDR,\n\t\t2:AWDParser.BADDR,\n\t\t3:AWDParser.BADDR,\n\t\t101:AWDParser.PROPERTY_NUMBER,\n\t\t102:AWDParser.PROPERTY_NUMBER,\n\t\t103:AWDParser.PROPERTY_NUMBER,\n\t\t201:AWDParser.UINT32,\n\t\t202:AWDParser.UINT32,\n\t\t301:AWDParser.UINT16,\n\t\t302:AWDParser.UINT16,\n\t\t401:AWDParser.UINT8,\n\t\t402:AWDParser.UINT8,\n\t\t601:AWDParser.COLOR,\n\t\t602:AWDParser.COLOR,\n\t\t701:AWDParser.BOOL,\n\t\t702:AWDParser.BOOL,\n\t\t801:AWDParser.MTX4x4};\n\n\t// Block ID = 81 AWD2.1\n\tprivate parseMaterial_v1(blockID:number)\n\t{\n\t\tvar mat:MethodMaterial;\n\t\tvar diffuseTexture:Single2DTexture;\n\t\tvar normalTexture:TextureBase;\n\t\tvar specTexture:TextureBase;\n\n\t\tvar name:string = this.parseVarStr();\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar num_methods:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.material_v1Properties);\n\t\tvar spezialType:number = props.get(4, 0);\n\t\tvar debugString:string = \"Parsed Material \";\n\n\t\tif (spezialType >= 2) {//this is no supported material\n\t\t\tthis._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (type <= 2) {// Color material\n\t\t\tif (this.materialMode == 1)\n\t\t\t\tspezialType = 0;\n\t\t\telse if (this.materialMode == 2)\n\t\t\t\tspezialType = 1;\n\n\t\t\tif (spezialType < 2) {//this is SinglePass or MultiPass\n\n\t\t\t\tif (type == 1) {// Color material\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\n\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\n\t\t\t\t\t\tmat = new MethodMaterial(color);\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\n\n\t\t\t\t\t} else { //\tSinglePassMaterial\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\t\t\t}\n\n\t\t\t\t} else if (type == 2) {// texture material\n\t\t\t\t\tvar texture:Single2DTexture = <Single2DTexture> this._blocks[props.get(2, 0)].data;\n\n\t\t\t\t\tmat = new MethodMaterial(texture);\n\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\n\t\t\t\t\t} else {//\tSinglePassMaterial\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdiffuseTexture = <Single2DTexture> this._blocks[props.get(17, 0)].data;\n\t\t\t\tnormalTexture = <TextureBase> this._blocks[props.get(3, 0)].data;\n\t\t\t\tspecTexture = <TextureBase> this._blocks[props.get(21, 0)].data;\n\t\t\t\tmat.lightPicker = <LightPickerBase> this._blocks[props.get(22, 0)].data;\n\t\t\t\tmat.smooth = props.get(5, true);\n\t\t\t\tmat.mipmap = props.get(6, true);\n\t\t\t\tmat.bothSides = props.get(7, false);\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\n\t\t\t\tmat.blendMode = this.blendModeDic[props.get(9, 0)];\n\t\t\t\tmat.repeat = props.get(13, false);\n\n\t\t\t\tif (diffuseTexture) {\n\t\t\t\t\tmat.diffuseTexture = diffuseTexture;\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\n\t\t\t\t}\n\n\t\t\t\tif (normalTexture) {\n\t\t\t\t\tmat.normalMap = normalTexture;\n\t\t\t\t\tdebugString += \" | NormalTexture-Name = \" + normalTexture.name;\n\t\t\t\t}\n\n\t\t\t\tif (specTexture) {\n\t\t\t\t\tmat.specularMap = specTexture;\n\t\t\t\t\tdebugString += \" | SpecularTexture-Name = \" + specTexture.name;\n\t\t\t\t}\n\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\t\t\tmat.ambient = props.get(15, 1.0);\n\t\t\t\tmat.diffuseColor = props.get(16, 0xffffff);\n\t\t\t\tmat.specular = props.get(18, 1.0);\n\t\t\t\tmat.gloss = props.get(19, 50);\n\t\t\t\tmat.specularColor = props.get(20, 0xffffff);\n\n\t\t\t\tfor (var methods_parsed:number = 0; methods_parsed < num_methods; methods_parsed++) {\n\t\t\t\t\tvar method_type:number;\n\t\t\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\n\n\t\t\t\t\tprops = this.parseProperties(AWDParser.method_v1Properties);\n\n\t\t\t\t\tswitch (method_type) {\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffektMethod returned\n\t\t\t\t\t\t\tvar effectMethod:EffectMethodBase = <EffectMethodBase> this._blocks[props.get(1, 0)].data;\n\t\t\t\t\t\t\tmat.addEffectMethod(effectMethod);\n\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + effectMethod.name;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\n\t\t\t\t\t\t\tvar shadowMapMethod:ShadowMapMethodBase = <ShadowMapMethodBase> this._blocks[props.get(1, 0)].data;\n\t\t\t\t\t\t\tmat.shadowMethod = shadowMapMethod;\n\t\t\t\t\t\t\tdebugString += \" | ShadowMethod-Name = \" + shadowMapMethod.name;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\n\t\t\t\t\t\t\tvar cubeTexture:SingleCubeTexture = <SingleCubeTexture> this._blocks[props.get(1, 0)].data;\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod();\n\t\t\t\t\t\t\tmat.texture = cubeTexture;\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + cubeTexture.name;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\n\t\t\t\t\t\t\tvar texture:Single2DTexture = <Single2DTexture> this._blocks[props.get(1, 0)].data;\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(texture);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + texture.name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\n\t\t\t\t\t\t\tvar texture:Single2DTexture = <Single2DTexture> this._blocks[props.get(1, 0)].data;\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(texture, this.blendModeDic[props.get(401, 10)], false, mat.diffuseMethod);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + texture.name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\n\t\t\t\t\t\t\tvar texture:Single2DTexture = <Single2DTexture> this._blocks[props.get(1, 0)].data;\n\t\t\t\t\t\t\tmat.normalMap = texture;\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(mat.normalMap, texture);\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + texture.name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tthis.parseUserAttributes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// todo: we should not need this anymore (if using texture-atlas)\n\t\telse if ((type>=3)&&(type<=7)){\n\t\t\t// if this is a basic material, we create it, finalize it, assign it to block-cache and return and return.\n\t\t\tvar color:number = props.get(1, 0xcccccc);\n\t\t\tdebugString+=color;\n\t\t\n\t\t\tvar diffuseTexture:Single2DTexture = <Single2DTexture> this._blocks[props.get(2, 0)].data;\n\t\t\tvar basic_mat:BasicMaterial = new BasicMaterial(diffuseTexture);\n\t\t\tbasic_mat.bothSides = true;\n\t\t\tbasic_mat.preserveAlpha = true;\n\t\t\tbasic_mat.alphaBlending = true;\n\t\t\tbasic_mat.extra = this.parseUserAttributes();\n\t\t\tthis._pFinalizeAsset(<IAsset> basic_mat, name);\n\t\t\tthis._blocks[blockID].data = basic_mat;\n\t\t\tif (this._debug)\n\t\t\t\tconsole.log(debugString);\n\t\t\treturn;\n\t\t\n\t\t}\n\t\tmat.extra = this.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\n\n\t\tthis._blocks[blockID].data = mat;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(debugString);\n\t}\n\n\t//Block ID = 82\n\tprivate parseTexture(blockID:number)\n\t{\n\n\t\tvar asset:TextureBase;\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\n\t\tthis._texture_users[this._cur_block_id] = [];\n\n\t\t// External\n\t\tif (type == 0) {\n\t\t\tvar url:string = this._newBlockBytes.readUTFBytes(this._newBlockBytes.readUnsignedInt());\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\n\n\t\t} else {\n\t\t\tvar data_len:number = this._newBlockBytes.readUnsignedInt();\n\t\t\tvar data:ByteArray = new ByteArray(data_len);\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t//\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\n\t\t\t//\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\n\t\t\t// This gives the browser time to initialise image width / height.\n\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\n\n\t\t}\n\n\t\t// Ignore for now\n\t\tthis.parseProperties(null);\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tthis._pPauseAndRetrieveDependencies();\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Start parsing a \" + [\"external\", \"embed\"][type] + \" Bitmap for Texture\");\n\t}\n\n\t//Block ID = 83\n\tprivate parseCubeTexture(blockID:number)\n\t{\n\t\t//blockLength = block.len;\n\t\tvar data_len:number;\n\t\tvar asset:SingleCubeTexture;\n\t\tvar i:number;\n\n\t\tthis._texture_users[ this._cur_block_id ] = [];\n\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tfor (i = 0; i < 6; i++) {\n\t\t\tthis._texture_users[this._cur_block_id] = [];\n\n\t\t\t// External\n\t\t\tif (type == 0) {\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tvar url:string;\n\t\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true, i);\n\t\t\t} else {\n\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tvar data:ByteArray = new ByteArray(data_len);\n\t\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true, i);\n\t\t\t}\n\t\t}\n\n\t\t// Ignore for now\n\t\tthis.parseProperties(null);\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\n\t\tthis._pPauseAndRetrieveDependencies();\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Start parsing 6 \" + [\"external\", \"embed\"][type] + \" Bitmaps for CubeTexture\");\n\t}\n\n\t//Block ID = 91\n\tprivate parseSharedMethodBlock(blockID:number)\n\t{\n\t\tvar asset:EffectMethodBase;\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\t\tasset = this.parseSharedMethodList(blockID);\n\t\tthis.parseUserAttributes();\n\t\tthis._blocks[blockID].data = asset;\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\n\t}\n\n\t//Block ID = 92\n\tprivate parseShadowMethodBlock(blockID:number)\n\t{\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\t\tvar light:LightBase = <LightBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar asset:ShadowMethodBase = this.parseShadowMethodList(light, blockID);\n\n\t\tif (!asset)\n\t\t\treturn;\n\n\t\tthis.parseUserAttributes(); // Ignore for now\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", light.name);\n\t}\n\n\tprivate static commandProperties:Object = {\n\t\t1:AWDParser.BADDR};\n\n\tprivate static targetProperties:Object = {\n\t\t1:AWDParser.MATRIX_NUMBER,\n\t\t2:AWDParser.MATRIX_NUMBER,\n\t\t3:AWDParser.MATRIX_NUMBER,\n\t\t4:AWDParser.UINT8};\n\t\n\t//Block ID = 253\n\tprivate parseCommand(blockID:number)\n\t{\n\t\tvar hasBlocks:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\n\t\tvar parentObject:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar targetObject:DisplayObjectContainer;\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\n\t\tvar numCommands:number = this._newBlockBytes.readShort();\n\t\tvar typeCommand:number = this._newBlockBytes.readShort();\n\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.commandProperties);\n\n\t\tswitch (typeCommand) {\n\t\t\tcase 1:\n\t\t\t\ttargetObject = this._blocks[props.get(1, 0)].data;\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\n\n\t\t\t\tif (parentObject)\n\t\t\t\t\tparentObject.addChild(targetObject);\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (targetObject) {\n\t\t\tprops = this.parseProperties(AWDParser.targetProperties);\n\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t\ttargetObject.extra = this.parseUserAttributes();\n\t\t}\n\n\t\tthis._blocks[blockID].data = targetObject;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\n\t}\n\t\n\tprivate static metaDataProperties:Object = {\n\t\t1:AWDParser.UINT32,\n\t\t2:AWDParser.AWDSTRING,\n\t\t3:AWDParser.AWDSTRING,\n\t\t4:AWDParser.AWDSTRING,\n\t\t5:AWDParser.AWDSTRING};\n\n\t//blockID 255\n\tprivate parseMetaData(blockID:number)\n\t{\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.metaDataProperties);\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\n\t\t}\n\t}\n\n\t//blockID 254\n\tprivate parseNameSpace(blockID:number)\n\t{\n\t\tvar id:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar nameSpaceString:string = this.parseVarStr();\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\n\t}\n\n\t//--Parser UTILS---------------------------------------------------------------------------\n\n\tprivate shadowMethodListProperties:Object = {\n\t\t1:AWDParser.BADDR,\n\t\t2:AWDParser.BADDR,\n\t\t3:AWDParser.BADDR,\n\t\t101:AWDParser.PROPERTY_NUMBER,\n\t\t102:AWDParser.PROPERTY_NUMBER,\n\t\t103:AWDParser.PROPERTY_NUMBER,\n\t\t201:AWDParser.UINT32,\n\t\t202:AWDParser.UINT32,\n\t\t301:AWDParser.UINT16,\n\t\t302:AWDParser.UINT16,\n\t\t401:AWDParser.UINT8,\n\t\t402:AWDParser.UINT8,\n\t\t601:AWDParser.COLOR,\n\t\t602:AWDParser.COLOR,\n\t\t701:AWDParser.BOOL,\n\t\t702:AWDParser.BOOL,\n\t\t801:AWDParser.MTX4x4}\n\t\n\t// this functions reads and creates a ShadowMethodMethod\n\tprivate parseShadowMethodList(light:LightBase, blockID:number):ShadowMethodBase\n\t{\n\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar shadowMethod:ShadowMethodBase;\n\t\tvar props:AWDProperties = this.parseProperties(this.shadowMethodListProperties);\n\n\t\tvar targetID:number;\n\t\tvar returnedArray:Array<any>\n\t\tswitch (methodType) {\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this CascadeShadowMapMethod - ShadowMethod not created\");\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\n\t\t\t//\t\t\t\t\t}\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 1002: //ShadowNearMethod\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> this._blocks[props.get(1, 0)].data);\n\t\t\t\tbreak;\n\t\t\tcase 1101: //ShadowFilteredMethod\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t\tcase 1102: //ShadowDitheredMethod\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1103: //ShadowSoftMethod\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1104: //ShadowHardMethod\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\treturn shadowMethod;\n\t}\n\n\t//Block ID 101\n\tprivate parseSkeleton(blockID:number /*uint*/)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar skeleton:Skeleton = new Skeleton();\n\t\tthis.parseProperties(null); // Discard properties for now\n\n\t\tfor (var joints_parsed:number = 0; joints_parsed < num_joints; joints_parsed++) {\n\t\t\tvar joint:SkeletonJoint;\n\t\t\tvar ibp:Matrix3D;\n\t\t\t// Ignore joint id\n\t\t\tthis._newBlockBytes.readUnsignedShort();\n\t\t\tjoint = new SkeletonJoint();\n\t\t\tjoint.parentIndex = this._newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\n\t\t\tjoint.name = this.parseVarStr();\n\n\t\t\tibp = this.parseMatrix3D();\n\t\t\tjoint.inverseBindPose = ibp.rawData;\n\t\t\t// Ignore joint props/attributes for now\n\t\t\tthis.parseProperties(null);\n\t\t\tthis.parseUserAttributes();\n\t\t\tskeleton.joints.push(joint);\n\t\t}\n\n\t\t// Discard attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(skeleton, name);\n\n\t\tthis._blocks[blockID].data = skeleton;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + skeleton.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\t//Block ID = 102\n\tprivate parseSkeletonPose(blockID:number /*uint*/)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tthis.parseProperties(null); // Ignore properties for now\n\n\t\tvar pose:SkeletonPose = new SkeletonPose();\n\n\t\tfor (var joints_parsed:number = 0; joints_parsed < num_joints; joints_parsed++) {\n\t\t\tvar joint_pose:JointPose;\n\t\t\tvar has_transform:number /*uint*/;\n\t\t\tjoint_pose = new JointPose();\n\t\t\thas_transform = this._newBlockBytes.readUnsignedByte();\n\t\t\tif (has_transform == 1) {\n\t\t\t\tvar mtx_data:Array<number> = this.parseMatrix43RawData();\n\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\n\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\n\t\t\t}\n\t\t}\n\n\t\t// Skip attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(pose, name);\n\n\t\tthis._blocks[blockID].data = pose;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + pose.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\t//blockID 103\n\tprivate parseSkeletonAnimation(blockID:number /*uint*/)\n\t{\n\t\tvar frame_dur:number;\n\t\tvar pose_id:number;\n\t\tvar name:string = this.parseVarStr();\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tthis.parseProperties(null); // Ignore properties for now\n\n\t\tfor (var frames_parsed:number = 0; frames_parsed < num_frames; frames_parsed++) {\n\t\t\tpose_id = this._newBlockBytes.readUnsignedInt();\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\n\t\t\tclip.addFrame(<SkeletonPose> this._blocks[pose_id].data, frame_dur);\n\t\t}\n\t\tif (clip.frames.length == 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not this SkeletonClipNode, because no Frames where set.\");\n\t\t\treturn;\n\t\t}\n\t\t// Ignore attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(clip, name);\n\t\tthis._blocks[blockID].data = clip;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + clip.name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\t\n\tprivate meshPoseAnimationProperties:Object = {\n\t\t1:AWDParser.BOOL,\n\t\t2:AWDParser.BOOL};\n\n\t//Block ID = 111 /  Block ID = 112\n\tprivate parseMeshPoseAnimation(blockID:number /*uint*/, poseOnly:boolean = false)\n\t{\n\t\tvar subMeshParsed:number /*uint*/;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar str_len:number;\n\t\tvar str_end:number;\n\t\tvar subGeom:TriangleSubGeometry;\n\t\tvar idx:number /*int*/ = 0;\n\t\tvar clip:VertexClipNode = new VertexClipNode();\n\t\tvar indices:Short3Attributes;\n\t\tvar verts:Array<number>;\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\n\t\tvar props:AWDProperties;\n\t\tvar name:string = this.parseVarStr();\n\t\tvar geo_id:number /*int*/ = this._newBlockBytes.readUnsignedInt();\n\t\tvar geometry:Geometry = <Geometry> this._blocks[geo_id].data;\n\n\t\tvar uvs:Array<Float32Array> = this.getUVForVertexAnimation(geo_id);\n\n\t\tvar num_frames:number = (!poseOnly)? this._newBlockBytes.readUnsignedShort() : 1;\n\n\t\tvar num_submeshes:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar num_Streams:number = this._newBlockBytes.readUnsignedShort();\n\t\tfor (var streamsParsed:number = 0; streamsParsed < num_Streams; streamsParsed++)\n\t\t\tstreamtypes.push(this._newBlockBytes.readUnsignedShort());\n\n\t\tprops = this.parseProperties(this.meshPoseAnimationProperties);\n\n\t\tclip.looping = props.get(1, true);\n\t\tclip.stitchFinalFrame = props.get(2, false);\n\n\t\tvar frame_dur:number;\n\t\tfor (var frames_parsed:number = 0; frames_parsed < num_frames; frames_parsed++) {\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\n\t\t\tgeometry = new Geometry();\n\t\t\tsubMeshParsed = 0;\n\t\t\twhile (subMeshParsed < num_submeshes) {\n\t\t\t\tstreamsParsed = 0;\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\n\t\t\t\twhile (streamsParsed < num_Streams) {\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\n\t\t\t\t\t\tindices = geometry.subGeometries[subMeshParsed].indices;\n\t\t\t\t\t\tverts = new Array<number>();\n\t\t\t\t\t\tidx = 0;\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsubGeom = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\t\t\t\tsubGeom.setIndices(indices);\n\t\t\t\t\t\tsubGeom.setPositions(verts);\n\t\t\t\t\t\tsubGeom.setUVs(uvs[subMeshParsed]);\n\t\t\t\t\t\tsubGeom.setNormals(null);\n\t\t\t\t\t\tsubGeom.setTangents(null);\n\t\t\t\t\t\tsubGeom.autoDeriveNormals = false;\n\t\t\t\t\t\tsubGeom.autoDeriveTangents = false;\n\t\t\t\t\t\tsubMeshParsed++;\n\t\t\t\t\t\tgeometry.addSubGeometry(subGeom)\n\t\t\t\t\t} else\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t\tstreamsParsed++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tclip.addFrame(geometry, frame_dur);\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(clip, name);\n\n\t\tthis._blocks[blockID].data = clip;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + geometry.name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\n\tprivate static vertexAnimationSetProperties:Object = {\n\t\t1:AWDParser.UINT16};\n\t\n\t//BlockID 113\n\tprivate parseVertexAnimationSet(blockID:number /*uint*/)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.vertexAnimationSetProperties);\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\n\t\tvar clipNode:AnimationClipNodeBase;\n\t\tfor (var frames_parsed:number = 0; frames_parsed < num_frames; frames_parsed++) {\n\t\t\tclipNode = <AnimationClipNodeBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\t\tif (clipNode instanceof VertexClipNode)\n\t\t\t\tvertexFrames.push(<VertexClipNode> clipNode);\n\t\t\telse if (clipNode instanceof SkeletonClipNode)\n\t\t\t\tskeletonFrames.push(<SkeletonClipNode> clipNode);\n\t\t}\n\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\n\t\t\tthis._blocks[blockID].addError(\"Could not create this AnimationSet, because it contains no animations\");\n\t\t\treturn;\n\t\t}\n\n\t\tthis.parseUserAttributes();\n\n\t\tif (vertexFrames.length > 0) {\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\n\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\n\n\t\t\tthis._pFinalizeAsset(newVertexAnimationSet, name);\n\n\t\t\tthis._blocks[blockID].data = newVertexAnimationSet;\n\n\t\t\tif (this._debug)\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames);\n\n\t\t} else if (skeletonFrames.length > 0) {\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\n\t\t\tthis._pFinalizeAsset(newSkeletonAnimationSet, name);\n\n\t\t\tthis._blocks[blockID].data = newSkeletonAnimationSet;\n\n\t\t\tif (this._debug)\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames);\n\t\t}\n\t}\n\n\tprivate static animatorSetProperties:Object = {1:AWDParser.BADDR};\n\t\n\t//BlockID 122\n\tprivate parseAnimatorSet(blockID:number /*uint*/)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar type:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.animatorSetProperties);\n\t\tvar targetAnimationSet:AnimationSetBase = <AnimationSetBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\n\t\tvar targetMeshes:Array<Mesh> = new Array<Mesh>();\n\t\tvar targetMeshLength:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tfor (var i:number /*int*/ = 0; i < targetMeshLength; i++)\n\t\t\ttargetMeshes.push(<Mesh> this._blocks[this._newBlockBytes.readUnsignedInt()].data);\n\n\t\tvar activeState:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar autoplay:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\n\t\tthis.parseUserAttributes();\n\t\tthis.parseUserAttributes();\n\n\t\tvar thisAnimator:AnimatorBase;\n\t\tif (type == 1)\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, <Skeleton> this._blocks[props.get(1, 0)].data);\n\t\telse if (type == 2)\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\n\n\t\tthis._pFinalizeAsset(thisAnimator, name);\n\t\tthis._blocks[blockID].data = thisAnimator;\n\n\t\tfor (i = 0; i < targetMeshes.length; i++) {\n\t\t\tif (type == 1)\n\t\t\t\ttargetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\n\t\t\telse if (type == 2)\n\t\t\t\ttargetMeshes[i].animator = (<VertexAnimator> thisAnimator);\n\t\t}\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + name);\n\t}\n\n\tprivate sharedMethodListProperties:Object = {\n\t\t1:AWDParser.BADDR,\n\t\t2:AWDParser.BADDR,\n\t\t3:AWDParser.BADDR,\n\t\t101:AWDParser.PROPERTY_NUMBER,\n\t\t102:AWDParser.PROPERTY_NUMBER,\n\t\t103:AWDParser.PROPERTY_NUMBER,\n\t\t104:AWDParser.PROPERTY_NUMBER,\n\t\t105:AWDParser.PROPERTY_NUMBER,\n\t\t106:AWDParser.PROPERTY_NUMBER,\n\t\t107:AWDParser.PROPERTY_NUMBER,\n\t\t201:AWDParser.UINT32,\n\t\t202:AWDParser.UINT32,\n\t\t301:AWDParser.UINT16,\n\t\t302:AWDParser.UINT16,\n\t\t401:AWDParser.UINT8,\n\t\t402:AWDParser.UINT8,\n\t\t601:AWDParser.COLOR,\n\t\t602:AWDParser.COLOR,\n\t\t701:AWDParser.BOOL,\n\t\t702:AWDParser.BOOL};\n\n\t// this functions reads and creates a EffectMethod\n\tprivate parseSharedMethodList(blockID:number):EffectMethodBase\n\t{\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar effectMethodReturn:EffectMethodBase;\n\n\t\tvar props:AWDProperties = this.parseProperties(this.sharedMethodListProperties);\n\n\t\tswitch (methodType) {\n\t\t\t// Effect Methods\n\t\t\tcase 401: //ColorMatrix\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\n\t\t\t\tbreak;\n\t\t\tcase 402: //ColorTransform\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\n\t\t\t\tbreak;\n\t\t\tcase 403: //EnvMap\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(<SingleCubeTexture> this._blocks[props.get(1, 0)].data, <number> props.get(101, 1));\n\t\t\t\tvar targetID:number = props.get(2, 0);\n\t\t\t\tif (targetID > 0) {\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <TextureBase> this._blocks[targetID].data;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 404: //LightMapMethod\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(this._blocks[props.get(1, 0)].data, this.blendModeDic[props.get(401, 10)]); //usesecondaryUV not set\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureProjector.assetType]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this ProjectiveTextureMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 406: //RimLightMethod\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\n\t\t\t\tbreak;\n\t\t\tcase 407: //AlphaMaskMethod\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(this._blocks[props.get(1, 0)].data, props.get(701, false));\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this RefractionEnvMapMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 410: //FresnelEnvMapMethod\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(this._blocks[props.get(1, 0)].data, props.get(101, 1));\n\t\t\t\tbreak;\n\t\t\tcase 411: //FogMethod\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\treturn effectMethodReturn;\n\n\t}\n\n\tprivate parseUserAttributes():Object\n\t{\n\t\tvar list_len:number = this._newBlockBytes.readUnsignedInt();\n\n\t\tif (list_len > 0) {\n\t\t\tvar list_end:number = this._newBlockBytes.position + list_len;\n\t\t\tvar attributes:Object = {};\n\n\t\t\tfor (var attibuteCnt:number = 0; this._newBlockBytes.position < list_end; attibuteCnt++) {\n\t\t\t\tvar ns_id:number;\n\t\t\t\tvar attr_key:string;\n\t\t\t\tvar attr_type:number;\n\t\t\t\tvar attr_len:number;\n\t\t\t\tvar attr_val:any;\n\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_key = this.parseVarStr();\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn attributes;\n\t\t\t\t}\n\n\t\t\t\tswitch (attr_type) {\n\t\t\t\t\tcase AWDParser.AWDSTRING:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.BOOL:\n\t\t\t\t\tcase AWDParser.UINT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.UINT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.UINT32:\n\t\t\t\t\tcase AWDParser.BADDR:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.FLOAT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.FLOAT64:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tattributes[attr_key] = attr_val;\n\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\n\t\t\t}\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\tprivate parseProperties(expected:Object):AWDProperties\n\t{\n\t\tvar list_len:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar props:AWDProperties = new AWDProperties();\n\t\tvar list_end:number = this._newBlockBytes.position + list_len;\n\n\t\tif (expected) {\n\t\t\tvar len:number;\n\t\t\tvar key:number;\n\t\t\tvar type:number;\n\n\t\t\tfor (var propertyCnt:number = 0; this._newBlockBytes.position < list_end; propertyCnt++) {\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn props;\n\t\t\t\t}\n\n\t\t\t\tif (expected[key]) {\n\t\t\t\t\ttype = expected[key];\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\n\t\t\t\t} else {\n\t\t\t\t\tthis._newBlockBytes.position += len;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis._newBlockBytes.position = list_end;\n\t\t}\n\n\t\treturn props;\n\t}\n\n\tprivate parseAttrValue(type:number, len:number):any\n\t{\n\t\tvar elem_len:number;\n\t\tvar read_func:Function;\n\t\tvar accuracy:boolean;\n\n\t\tswitch (type) {\n\t\t\tcase AWDParser.BOOL:\n\t\t\tcase AWDParser.INT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.INT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.INT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT32:\n\t\t\tcase AWDParser.COLOR:\n\t\t\tcase AWDParser.BADDR:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.FLOAT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.FLOAT64:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.AWDSTRING:\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\n\n\t\t\tcase AWDParser.VECTOR2x1:\n\t\t\tcase AWDParser.VECTOR3x1:\n\t\t\tcase AWDParser.VECTOR4x1:\n\t\t\tcase AWDParser.MTX3x2:\n\t\t\tcase AWDParser.MTX3x3:\n\t\t\tcase AWDParser.MTX4x3:\n\t\t\tcase AWDParser.MTX4x4:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\t\t\tcase AWDParser.GEO_NUMBER:\n\t\t\t\taccuracy = this._accuracyGeo;\n\t\t\tcase AWDParser.MATRIX_NUMBER:\n\t\t\t\taccuracy = this._accuracyMatrix;\n\t\t\tcase AWDParser.PROPERTY_NUMBER:\n\t\t\t\taccuracy = this._accuracyProps;\n\t\t\tdefault:\n\t\t\t\tif (accuracy) {\n\t\t\t\t\telem_len = 8;\n\t\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\t} else {\n\t\t\t\t\telem_len = 4;\n\t\t\t\t\tread_func = this._newBlockBytes.readFloat;\n\t\t\t\t}\n\t\t}\n\n\t\tif (elem_len < len) {\n\t\t\tvar list:Array<any> = [];\n\t\t\tvar num_elems:number = len/elem_len;\n\n\t\t\tfor (var num_read:number = 0; num_read < num_elems; num_read++)\n\t\t\t\tlist[num_read] = read_func.call(this._newBlockBytes);\n\n\t\t\treturn list;\n\t\t} else {\n\t\t\treturn read_func.call(this._newBlockBytes);\n\t\t}\n\t}\n\n\tprivate parseHeader()\n\t{\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\n\n\t\tthis._version[0] = this._byteData.readUnsignedByte();\n\t\tthis._version[1] = this._byteData.readUnsignedByte();\n\n\t\tvar flags:number = this._byteData.readUnsignedShort(); // Parse bit flags\n\n\t\tthis._streaming = BitFlags.test(flags, BitFlags.FLAG1);\n\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG2);\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG3);\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG4);\n\t\t}\n\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._version[0] + \" - \" + this._version[1]);\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\n\t\t}\n\n\t\t// Check file integrity\n\t\tvar body_len:number = this._byteData.readUnsignedInt();\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable())\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\n\n\t}\n\t// Helper - functions\n\tprivate getUVForVertexAnimation(meshID:number /*uint*/):Array<Float32Array>\n\t{\n\t\tif (this._blocks[meshID].data instanceof Mesh)\n\t\t\tmeshID = this._blocks[meshID].geoID;\n\n\t\tif (this._blocks[meshID].uvsForVertexAnimation)\n\t\t\treturn this._blocks[meshID].uvsForVertexAnimation;\n\n\t\tvar geometry:Geometry = (<Geometry> this._blocks[meshID].data);\n\t\tvar sub_geom:TriangleSubGeometry;\n\t\tvar uvsForVertexAnimation:Array<Float32Array> = this._blocks[meshID].uvsForVertexAnimation = new Array<Float32Array>();\n\n\t\tvar len:number = geometry.subGeometries.length;\n\t\tfor (var geoCnt:number= 0; geoCnt < len; geoCnt++) {\n\t\t\tsub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\n\t\t\tuvsForVertexAnimation[geoCnt] = sub_geom.uvs.get(sub_geom.numVertices);\n\t\t}\n\n\t\treturn this._blocks[meshID].uvsForVertexAnimation;\n\t}\n\n\tprivate parseVarStr():string\n\t{\n\t\treturn this._newBlockBytes.readUTFBytes(this._newBlockBytes.readUnsignedShort());\n\t}\n\n\tprivate readNumber(precision:boolean = false):number\n\t{\n\t\tif (precision)\n\t\t\treturn this._newBlockBytes.readDouble();\n\n\t\treturn this._newBlockBytes.readFloat();\n\t}\n\n\tprivate parseMatrix3D():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\n\t}\n\n\tprivate parseMatrix32RawData():Array<number>\n\t{\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\n\n\t\treturn mtx_raw;\n\t}\n\n\tprivate parseMatrix43RawData():Array<number>\n\t{\n\t\tvar mtx_raw:Array<number> = new Array<number>(16);\n\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[3] = 0.0;\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[7] = 0.0;\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[11] = 0.0;\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[15] = 1.0;\n\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\n\n\t\tif (isNaN(mtx_raw[0])) {\n\t\t\tmtx_raw[0] = 1;\n\t\t\tmtx_raw[1] = 0;\n\t\t\tmtx_raw[2] = 0;\n\t\t\tmtx_raw[4] = 0;\n\t\t\tmtx_raw[5] = 1;\n\t\t\tmtx_raw[6] = 0;\n\t\t\tmtx_raw[8] = 0;\n\t\t\tmtx_raw[9] = 0;\n\t\t\tmtx_raw[10] = 1;\n\t\t\tmtx_raw[12] = 0;\n\t\t\tmtx_raw[13] = 0;\n\t\t\tmtx_raw[14] = 0;\n\t\t}\n\n\t\treturn mtx_raw;\n\t}\n}\n\nexport = AWDParser;\n\n\nclass AWDProperties\n{\n\tpublic set(key:number, value:any)\n\t{\n\t\tthis[key] = value;\n\t}\n\n\tpublic get(key:number, fallback:any):any\n\t{\n\t\treturn (this[key] || fallback);\n\t}\n}\n\n/**\n *\n */\nclass BitFlags\n{\n\tpublic static FLAG1:number = 1;\n\tpublic static FLAG2:number = 2;\n\tpublic static FLAG3:number = 4;\n\tpublic static FLAG4:number = 8;\n\tpublic static FLAG5:number = 16;\n\tpublic static FLAG6:number = 32;\n\tpublic static FLAG7:number = 64;\n\tpublic static FLAG8:number = 128;\n\tpublic static FLAG9:number = 256;\n\tpublic static FLAG10:number = 512;\n\tpublic static FLAG11:number = 1024;\n\tpublic static FLAG12:number = 2048;\n\tpublic static FLAG13:number = 4096;\n\tpublic static FLAG14:number = 8192;\n\tpublic static FLAG15:number = 16384;\n\tpublic static FLAG16:number = 32768;\n\n\tpublic static test(flags:number, testFlag:number):boolean\n\t{\n\t\treturn (flags & testFlag) == testFlag;\n\t}\n}\n",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\n\n/**\n * MD2Parser provides a parser for the MD2 data type.\n */\nclass MD2Parser extends ParserBase\n{\n\tpublic static FPS:number /*int*/ = 6;\n\n\tprivate _clipNodes:Object = new Object();\n\tprivate _byteData:ByteArray;\n\tprivate _startedParsing:boolean;\n\tprivate _parsedHeader:boolean;\n\tprivate _parsedUV:boolean;\n\tprivate _parsedFaces:boolean;\n\tprivate _parsedFrames:boolean;\n\n\tprivate _ident:number /*uint*/;\n\tprivate _version:number /*uint*/;\n\tprivate _skinWidth:number /*uint*/;\n\tprivate _skinHeight:number /*uint*/;\n\t//private _frameSize : number /*uint*/;\n\tprivate _numSkins:number /*uint*/;\n\tprivate _numVertices:number /*uint*/;\n\tprivate _numST:number /*uint*/;\n\tprivate _numTris:number /*uint*/;\n\t//private _numGlCmds : number /*uint*/;\n\tprivate _numFrames:number /*uint*/;\n\tprivate _offsetSkins:number /*uint*/;\n\tprivate _offsetST:number /*uint*/;\n\tprivate _offsetTris:number /*uint*/;\n\tprivate _offsetFrames:number /*uint*/;\n\t//private _offsetGlCmds : number /*uint*/;\n\tprivate _offsetEnd:number /*uint*/;\n\n\tprivate _uvIndices:Array<number>;\n\tprivate _indices:Array<number> /*uint*/;\n\tprivate _vertIndices:Array<number>;\n\n\t// the current subgeom being built\n\tprivate _animationSet:VertexAnimationSet = new VertexAnimationSet();\n\tprivate _firstSubGeom:TriangleSubGeometry;\n\tprivate _uvs:Array<number>;\n\tprivate _finalUV:Array<number>;\n\n\tprivate _materialNames:Array<string>;\n\tprivate _textureType:string;\n\tprivate _ignoreTexturePath:boolean;\n\tprivate _mesh:Mesh;\n\tprivate _geometry:Geometry;\n\n\tprivate materialFinal:boolean = false;\n\tprivate geoCreated:boolean = false;\n\n\t/**\n\t * Creates a new MD2Parser object.\n\t * @param textureType The extension of the texture (e.g. jpg/png/...)\n\t * @param ignoreTexturePath If true, the path of the texture is ignored\n\t */\n\tconstructor(textureType:string = \"jpg\", ignoreTexturePath:boolean = true)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\t\tthis._textureType = textureType;\n\t\tthis._ignoreTexturePath = ignoreTexturePath;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md2\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn (ParserUtils.toString(data, 4) == 'IDP2');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif (resourceDependency.assets.length != 1)\n\t\t\treturn;\n\n\t\tvar asset:Single2DTexture = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\n\n\t\tif (asset) {\n\t\t\tvar material:MethodMaterial = new MethodMaterial(asset);\n\n\t\t\tif (this.materialMode >= 2)\n\t\t\t\tmaterial.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\t\tmaterial.name = this._mesh.material.name;\n\t\t\tthis._mesh.material = material;\n\t\t\tthis._pFinalizeAsset(material);\n\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\n\t\t\tthis._pFinalizeAsset(this._mesh);\n\t\t}\n\t\tthis.materialFinal = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\t// apply system default\n\t\tif (this.materialMode < 2) {\n\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\n\t\t} else {\n\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\n\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\n\t\t}\n\n\t\t//add to the content property\n\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\tthis._pFinalizeAsset(this._mesh.geometry);\n\t\tthis._pFinalizeAsset(this._mesh);\n\t\tthis.materialFinal = true;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (!this._startedParsing) {\n\t\t\tthis._byteData = this._pGetByteData();\n\t\t\tthis._startedParsing = true;\n\n\t\t\t// Reset bytearray read position (which may have been\n\t\t\t// moved forward by the supportsData() function.)\n\t\t\tthis._byteData.position = 0;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\tif (!this._parsedHeader) {\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\n\n\t\t\t\t// TODO: Create a mesh only when encountered (if it makes sense\n\t\t\t\t// for this file format) and return it using this._pFinalizeAsset()\n\t\t\t\tthis._geometry = new Geometry();\n\t\t\t\tthis._mesh = new Mesh(this._geometry, null);\n\t\t\t\tif (this.materialMode < 2) {\n\t\t\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\n\t\t\t\t} else {\n\t\t\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\n\t\t\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t}\n\n\t\t\t\t//_geometry.animation = new VertexAnimation(2, VertexAnimationMode.ABSOLUTE);\n\t\t\t\t//_animator = new VertexAnimator(VertexAnimationState(_mesh.animationState));\n\n\t\t\t\t// Parse header and decompress body\n\t\t\t\tthis.parseHeader();\n\t\t\t\tthis.parseMaterialNames();\n\t\t\t} else if (!this._parsedUV) {\n\t\t\t\tthis.parseUV();\n\t\t\t} else if (!this._parsedFaces) {\n\t\t\t\tthis.parseFaces();\n\t\t\t} else if (!this._parsedFrames) {\n\t\t\t\tthis.parseFrames();\n\t\t\t} else if ((this.geoCreated) && (this.materialFinal)) {\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t} else if (!this.geoCreated) {\n\t\t\t\tthis.geoCreated = true;\n\t\t\t\t//create default subgeometry\n\t\t\t\tthis._geometry.addSubGeometry(this._firstSubGeom.clone());\n\t\t\t\t// Force name to be chosen by this._pFinalizeAsset()\n\t\t\t\tthis._mesh.name = \"\";\n\t\t\t\tif (this.materialFinal) {\n\t\t\t\t\t//add to the content property\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh);\n\t\t\t\t}\n\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t}\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\t/**\n\t * Reads in all that MD2 Header data that is declared as private variables.\n\t * I know its a lot, and it looks ugly, but only way to do it in Flash\n\t */\n\tprivate parseHeader()\n\t{\n\t\tthis._ident = this._byteData.readInt();\n\t\tthis._version = this._byteData.readInt();\n\t\tthis._skinWidth = this._byteData.readInt();\n\t\tthis._skinHeight = this._byteData.readInt();\n\t\t//skip this._frameSize\n\t\tthis._byteData.readInt();\n\t\tthis._numSkins = this._byteData.readInt();\n\t\tthis._numVertices = this._byteData.readInt();\n\t\tthis._numST = this._byteData.readInt();\n\t\tthis._numTris = this._byteData.readInt();\n\t\t//skip this._numGlCmds\n\t\tthis._byteData.readInt();\n\t\tthis._numFrames = this._byteData.readInt();\n\t\tthis._offsetSkins = this._byteData.readInt();\n\t\tthis._offsetST = this._byteData.readInt();\n\t\tthis._offsetTris = this._byteData.readInt();\n\t\tthis._offsetFrames = this._byteData.readInt();\n\t\t//skip this._offsetGlCmds\n\t\tthis._byteData.readInt();\n\t\tthis._offsetEnd = this._byteData.readInt();\n\n\t\tthis._parsedHeader = true;\n\t}\n\n\t/**\n\t * Parses the file names for the materials.\n\t */\n\tprivate parseMaterialNames()\n\t{\n\t\tvar url:string;\n\t\tvar name:string;\n\t\tvar extIndex:number /*int*/;\n\t\tvar slashIndex:number /*int*/;\n\t\tthis._materialNames = new Array<string>();\n\t\tthis._byteData.position = this._offsetSkins;\n\n\t\tvar regExp:RegExp = new RegExp(\"[^a-zA-Z0-9\\\\_\\/.]\", \"g\");\n\t\tfor (var i:number /*uint*/ = 0; i < this._numSkins; ++i) {\n\t\t\tname = this._byteData.readUTFBytes(64);\n\t\t\tname = name.replace(regExp, \"\");\n\t\t\textIndex = name.lastIndexOf(\".\");\n\t\t\tif (this._ignoreTexturePath)\n\t\t\t\tslashIndex = name.lastIndexOf(\"/\");\n\t\t\tif (name.toLowerCase().indexOf(\".jpg\") == -1 && name.toLowerCase().indexOf(\".png\") == -1) {\n\t\t\t\tname = name.substring(slashIndex + 1, extIndex);\n\t\t\t\turl = name + \".\" + this._textureType;\n\t\t\t} else {\n\t\t\t\turl = name;\n\t\t\t}\n\n\t\t\tthis._materialNames[i] = name;\n\n\t\t\t// only support 1 skin TODO: really?\n\t\t\tif (this.dependencies.length == 0)\n\t\t\t\tthis._pAddDependency(name, new URLRequest(url));\n\t\t}\n\n\t\tif (this._materialNames.length > 0)\n\t\t\tthis._mesh.material.name = this._materialNames[0]; else\n\t\t\tthis.materialFinal = true;\n\t}\n\n\t/**\n\t * Parses the uv data for the mesh.\n\t */\n\tprivate parseUV()\n\t{\n\t\tvar j:number /*uint*/ = 0;\n\n\t\tthis._uvs = new Array<number>(this._numST*2);\n\t\tthis._byteData.position = this._offsetST;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numST; i++) {\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinWidth;\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinHeight;\n\t\t}\n\n\t\tthis._parsedUV = true;\n\t}\n\n\t/**\n\t * Parses unique indices for the faces.\n\t */\n\tprivate parseFaces()\n\t{\n\t\tvar a:number /*uint*/, b:number /*uint*/, c:number /*uint*/, ta:number /*uint*/, tb:number /*uint*/, tc:number /*uint*/;\n\t\tvar i:number /*uint*/;\n\n\t\tthis._vertIndices = new Array<number>();\n\t\tthis._uvIndices = new Array<number>();\n\t\tthis._indices = new Array<number>() /*uint*/;\n\n\t\tthis._byteData.position = this._offsetTris;\n\n\t\tfor (i = 0; i < this._numTris; i++) {\n\t\t\t//collect vertex indices\n\t\t\ta = this._byteData.readUnsignedShort();\n\t\t\tb = this._byteData.readUnsignedShort();\n\t\t\tc = this._byteData.readUnsignedShort();\n\n\t\t\t//collect uv indices\n\t\t\tta = this._byteData.readUnsignedShort();\n\t\t\ttb = this._byteData.readUnsignedShort();\n\t\t\ttc = this._byteData.readUnsignedShort();\n\n\t\t\tthis.addIndex(a, ta);\n\t\t\tthis.addIndex(b, tb);\n\t\t\tthis.addIndex(c, tc);\n\t\t}\n\n\t\tvar len:number /*uint*/ = this._uvIndices.length;\n\t\tthis._finalUV = new Array<number>(len*2);\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._finalUV[i << 1] = this._uvs[this._uvIndices[i] << 1];\n\t\t\tthis._finalUV[(i << 1) + 1] = this._uvs[(this._uvIndices[i] << 1) + 1];\n\t\t}\n\n\t\tthis._parsedFaces = true;\n\t}\n\n\t/**\n\t * Adds a face index to the list if it doesn't exist yet, based on vertexIndex and uvIndex, and adds the\n\t * corresponding vertex and uv data in the correct location.\n\t * @param vertexIndex The original index in the vertex list.\n\t * @param uvIndex The original index in the uv list.\n\t */\n\tprivate addIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/)\n\t{\n\t\tvar index:number /*int*/ = this.findIndex(vertexIndex, uvIndex);\n\n\t\tif (index == -1) {\n\t\t\tthis._indices.push(this._vertIndices.length);\n\t\t\tthis._vertIndices.push(vertexIndex);\n\t\t\tthis._uvIndices.push(uvIndex);\n\t\t} else\n\t\t\tthis._indices.push(index);\n\t}\n\n\t/**\n\t * Finds the final index corresponding to the original MD2's vertex and uv indices. Returns -1 if it wasn't added yet.\n\t * @param vertexIndex The original index in the vertex list.\n\t * @param uvIndex The original index in the uv list.\n\t * @return The index of the final mesh corresponding to the original vertex and uv index. -1 if it doesn't exist yet.\n\t */\n\tprivate findIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/):number /*int*/\n\t{\n\t\tvar len:number /*uint*/ = this._vertIndices.length;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tif (this._vertIndices[i] == vertexIndex && this._uvIndices[i] == uvIndex)\n\t\t\t\treturn i;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Parses all the frame geometries.\n\t */\n\tprivate parseFrames()\n\t{\n\t\tvar sx:number, sy:number, sz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar geometry:Geometry;\n\t\tvar subGeom:TriangleSubGeometry;\n\t\tvar vertLen:number /*uint*/ = this._vertIndices.length;\n\t\tvar fvertices:Array<number>;\n\t\tvar tvertices:Array<number>;\n\t\tvar i:number /*uint*/, j:number /*int*/, k:number /*uint*/;\n\t\t//var ch : number /*uint*/;\n\t\tvar name:string = \"\";\n\t\tvar prevClip:VertexClipNode = null;\n\n\t\tthis._byteData.position = this._offsetFrames;\n\n\t\tfor (i = 0; i < this._numFrames; i++) {\n\n\t\t\ttvertices = new Array<number>();\n\t\t\tfvertices = new Array<number>(vertLen*3);\n\n\t\t\tsx = this._byteData.readFloat();\n\t\t\tsy = this._byteData.readFloat();\n\t\t\tsz = this._byteData.readFloat();\n\n\t\t\ttx = this._byteData.readFloat();\n\t\t\tty = this._byteData.readFloat();\n\t\t\ttz = this._byteData.readFloat();\n\n\t\t\tname = this.readFrameName();\n\n\t\t\t// Note, the extra data.position++ in the for loop is there\n\t\t\t// to skip over a byte that holds the \"vertex normal index\"\n\t\t\tfor (j = 0; j < this._numVertices; j++, this._byteData.position++)\n\t\t\t\ttvertices.push(sx*this._byteData.readUnsignedByte() + tx, sy*this._byteData.readUnsignedByte() + ty, sz*this._byteData.readUnsignedByte() + tz);\n\n\t\t\tk = 0;\n\t\t\tfor (j = 0; j < vertLen; j++) {\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3];\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 2];\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 1];\n\t\t\t}\n\n\t\t\tsubGeom = new TriangleSubGeometry(new AttributesBuffer());\n\n\t\t\tif (this._firstSubGeom == null)\n\t\t\t\tthis._firstSubGeom = subGeom;\n\n\t\t\tgeometry = new Geometry();\n\t\t\tgeometry.addSubGeometry(subGeom);\n\n\t\t\tsubGeom.setIndices(this._indices);\n\t\t\tsubGeom.setPositions(fvertices);\n\t\t\tsubGeom.setUVs(this._finalUV);\n\t\t\t// cause explicit updates\n\t\t\tsubGeom.setNormals(null);\n\t\t\tsubGeom.setTangents(null);\n\t\t\t// turn auto updates off because they may be animated and set explicitly\n\t\t\tsubGeom.autoDeriveNormals = false;\n\t\t\tsubGeom.autoDeriveTangents = false;\n\n\t\t\tvar clip:VertexClipNode = this._clipNodes[name];\n\n\t\t\tif (!clip) {\n\t\t\t\t// If another sequence was parsed before this one, starting\n\t\t\t\t// a new state means the previous one is complete and can\n\t\t\t\t// hence be finalized.\n\t\t\t\tif (prevClip) {\n\t\t\t\t\tthis._pFinalizeAsset(prevClip);\n\t\t\t\t\tthis._animationSet.addAnimation(prevClip);\n\t\t\t\t}\n\n\t\t\t\tclip = new VertexClipNode();\n\t\t\t\tclip.name = name;\n\t\t\t\tclip.stitchFinalFrame = true;\n\n\t\t\t\tthis._clipNodes[name] = clip;\n\n\t\t\t\tprevClip = clip;\n\t\t\t}\n\t\t\tclip.addFrame(geometry, 1000/MD2Parser.FPS);\n\t\t}\n\n\t\t// Finalize the last state\n\t\tif (prevClip) {\n\t\t\tthis._pFinalizeAsset(prevClip);\n\t\t\tthis._animationSet.addAnimation(prevClip);\n\t\t}\n\n\t\t// Force this._pFinalizeAsset() to decide name\n\t\tthis._pFinalizeAsset(this._animationSet);\n\n\t\tthis._parsedFrames = true;\n\t}\n\n\tprivate readFrameName():string\n\t{\n\t\tvar name:string = \"\";\n\t\tvar k:number /*uint*/ = 0;\n\t\tfor (var j:number /*uint*/ = 0; j < 16; j++) {\n\t\t\tvar ch:number /*uint*/ = this._byteData.readUnsignedByte();\n\n\t\t\tif (Math.floor(ch) > 0x39 && Math.floor(ch) <= 0x7A && k == 0)\n\t\t\t\tname += String.fromCharCode(ch);\n\n\t\t\tif (Math.floor(ch) >= 0x30 && Math.floor(ch) <= 0x39)\n\t\t\t\tk++;\n\t\t}\n\t\treturn name;\n\t}\n}\n\nexport = MD2Parser;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\n\n/**\n * MD5AnimParser provides a parser for the md5anim data type, providing an animation sequence for the md5 format.\n *\n * todo: optimize\n */\nclass MD5AnimParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\n\tpublic static NUM_FRAMES_TOKEN:string = \"numFrames\";\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\n\tpublic static FRAME_RATE_TOKEN:string = \"frameRate\";\n\tpublic static NUM_ANIMATED_COMPONENTS_TOKEN:string = \"numAnimatedComponents\";\n\n\tpublic static HIERARCHY_TOKEN:string = \"hierarchy\";\n\tpublic static BOUNDS_TOKEN:string = \"bounds\";\n\tpublic static BASE_FRAME_TOKEN:string = \"baseframe\";\n\tpublic static FRAME_TOKEN:string = \"frame\";\n\n\tpublic static COMMENT_TOKEN:string = \"//\";\n\n\tprivate _parseIndex:number /*int*/ = 0;\n\tprivate _reachedEOF:boolean;\n\tprivate _line:number /*int*/ = 0;\n\tprivate _charLineIndex:number /*int*/ = 0;\n\tprivate _version:number /*int*/;\n\tprivate _frameRate:number /*int*/;\n\tprivate _numFrames:number /*int*/;\n\tprivate _numJoints:number /*int*/;\n\tprivate _numAnimatedComponents:number /*int*/;\n\n\tprivate _hierarchy:Array<HierarchyData>;\n\tprivate _bounds:Array<BoundsData>;\n\tprivate _frameData:Array<FrameData>;\n\tprivate _baseFrameData:Array<BaseFrameData>;\n\n\tprivate _rotationQuat:Quaternion;\n\tprivate _clip:SkeletonClipNode;\n\n\t/**\n\t * Creates a new MD5AnimParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._rotationQuat = new Quaternion();\n\t\tvar t1:Quaternion = new Quaternion();\n\t\tvar t2:Quaternion = new Quaternion();\n\n\t\tt1.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\n\t\tt2.fromAxisAngle(Vector3D.Y_AXIS, -Math.PI*.5);\n\n\t\tthis._rotationQuat.multiply(t2, t1);\n\n\t\tif (additionalRotationAxis) {\n\t\t\tthis._rotationQuat.multiply(t2, t1);\n\t\t\tt1.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\n\t\t\tthis._rotationQuat.multiply(t1, this._rotationQuat);\n\t\t}\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md5anim\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar token:string;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\ttoken = this.getNextToken();\n\t\t\tswitch (token) {\n\t\t\t\tcase MD5AnimParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"\":\n\t\t\t\t\t// can occur at the end of a file\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.VERSION_TOKEN:\n\t\t\t\t\tthis._version = this.getNextInt();\n\t\t\t\t\tif (this._version != 10)\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.COMMAND_LINE_TOKEN:\n\t\t\t\t\tthis.parseCMD();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_FRAMES_TOKEN:\n\t\t\t\t\tthis._numFrames = this.getNextInt();\n\t\t\t\t\tthis._bounds = new Array<BoundsData>();\n\t\t\t\t\tthis._frameData = new Array<FrameData>();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_JOINTS_TOKEN:\n\t\t\t\t\tthis._numJoints = this.getNextInt();\n\t\t\t\t\tthis._hierarchy = new Array<HierarchyData>(this._numJoints);\n\t\t\t\t\tthis._baseFrameData = new Array<BaseFrameData>(this._numJoints);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.FRAME_RATE_TOKEN:\n\t\t\t\t\tthis._frameRate = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_ANIMATED_COMPONENTS_TOKEN:\n\t\t\t\t\tthis._numAnimatedComponents = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.HIERARCHY_TOKEN:\n\t\t\t\t\tthis.parseHierarchy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.BOUNDS_TOKEN:\n\t\t\t\t\tthis.parseBounds();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.BASE_FRAME_TOKEN:\n\t\t\t\t\tthis.parseBaseFrame();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.FRAME_TOKEN:\n\t\t\t\t\tthis.parseFrame();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (!this._reachedEOF)\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\n\t\t\t}\n\n\t\t\tif (this._reachedEOF) {\n\t\t\t\tthis._clip = new SkeletonClipNode();\n\t\t\t\tthis.translateClip();\n\t\t\t\tthis._pFinalizeAsset(this._clip);\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t}\n\t\t}\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\t/**\n\t * Converts all key frame data to an SkinnedAnimationSequence.\n\t */\n\tprivate translateClip():void\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < this._numFrames; ++i)\n\t\t\tthis._clip.addFrame(this.translatePose(this._frameData[i]), 1000/this._frameRate);\n\t}\n\n\t/**\n\t * Converts a single key frame data to a SkeletonPose.\n\t * @param frameData The actual frame data.\n\t * @return A SkeletonPose containing the frame data's pose.\n\t */\n\tprivate translatePose(frameData:FrameData):SkeletonPose\n\t{\n\t\tvar hierarchy:HierarchyData;\n\t\tvar pose:JointPose;\n\t\tvar base:BaseFrameData;\n\t\tvar flags:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar translate:Vector3D = new Vector3D();\n\t\tvar orientation:Quaternion = new Quaternion();\n\t\tvar components:Array<number> = frameData.components;\n\t\tvar skelPose:SkeletonPose = new SkeletonPose();\n\t\tvar jointPoses:Array<JointPose> = skelPose.jointPoses;\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numJoints; ++i) {\n\t\t\tj = 0;\n\t\t\tpose = new JointPose();\n\t\t\thierarchy = this._hierarchy[i];\n\t\t\tbase = this._baseFrameData[i];\n\t\t\tflags = hierarchy.flags;\n\t\t\ttranslate.x = base.position.x;\n\t\t\ttranslate.y = base.position.y;\n\t\t\ttranslate.z = base.position.z;\n\t\t\torientation.x = base.orientation.x;\n\t\t\torientation.y = base.orientation.y;\n\t\t\torientation.z = base.orientation.z;\n\n\t\t\tif (flags & 1)\n\t\t\t\ttranslate.x = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 2)\n\t\t\t\ttranslate.y = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 4)\n\t\t\t\ttranslate.z = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 8)\n\t\t\t\torientation.x = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 16)\n\t\t\t\torientation.y = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 32)\n\t\t\t\torientation.z = components[hierarchy.startIndex + (j++)];\n\n\t\t\tvar w:number = 1 - orientation.x*orientation.x - orientation.y*orientation.y - orientation.z*orientation.z;\n\t\t\torientation.w = w < 0? 0 : -Math.sqrt(w);\n\n\t\t\tif (hierarchy.parentIndex < 0) {\n\t\t\t\tpose.orientation.multiply(this._rotationQuat, orientation);\n\t\t\t\tpose.translation = this._rotationQuat.rotatePoint(translate);\n\t\t\t} else {\n\t\t\t\tpose.orientation.copyFrom(orientation);\n\t\t\t\tpose.translation.x = translate.x;\n\t\t\t\tpose.translation.y = translate.y;\n\t\t\t\tpose.translation.z = translate.z;\n\t\t\t}\n\t\t\tpose.orientation.y = -pose.orientation.y;\n\t\t\tpose.orientation.z = -pose.orientation.z;\n\t\t\tpose.translation.x = -pose.translation.x;\n\n\t\t\tjointPoses[i] = pose;\n\t\t}\n\n\t\treturn skelPose;\n\t}\n\n\t/**\n\t * Parses the skeleton's hierarchy data.\n\t */\n\tprivate parseHierarchy():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:HierarchyData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new HierarchyData();\n\t\t\tdata.name = this.parseLiteralstring();\n\t\t\tdata.parentIndex = this.getNextInt();\n\t\t\tdata.flags = this.getNextInt();\n\t\t\tdata.startIndex = this.getNextInt();\n\t\t\tthis._hierarchy[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses frame bounds.\n\t */\n\tprivate parseBounds():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:BoundsData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new BoundsData();\n\t\t\tdata.min = this.parseVector3D();\n\t\t\tdata.max = this.parseVector3D();\n\t\t\tthis._bounds[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses the base frame.\n\t */\n\tprivate parseBaseFrame():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:BaseFrameData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new BaseFrameData();\n\t\t\tdata.position = this.parseVector3D();\n\t\t\tdata.orientation = this.parseQuaternion();\n\t\t\tthis._baseFrameData[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses a single frame.\n\t */\n\tprivate parseFrame():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:FrameData;\n\t\tvar token:string;\n\t\tvar frameIndex:number /*int*/;\n\n\t\tframeIndex = this.getNextInt();\n\n\t\ttoken = this.getNextToken();\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new FrameData();\n\t\t\tdata.components = new Array<number>(this._numAnimatedComponents);\n\n\t\t\tfor (var i:number /*int*/ = 0; i < this._numAnimatedComponents; ++i)\n\t\t\t\tdata.components[i] = this.getNextNumber();\n\n\t\t\tthis._frameData[frameIndex] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Puts back the last read character into the data stream.\n\t */\n\tprivate putBack():void\n\t{\n\t\tthis._parseIndex--;\n\t\tthis._charLineIndex--;\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\n\t}\n\n\t/**\n\t * Gets the next token in the data stream.\n\t */\n\tprivate getNextToken():string\n\t{\n\t\tvar ch:string;\n\t\tvar token:string = \"\";\n\n\t\twhile (!this._reachedEOF) {\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\n\t\t\t\tif (token != MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.skipWhiteSpace();\n\t\t\t\tif (token != \"\")\n\t\t\t\t\treturn token;\n\t\t\t} else\n\t\t\t\ttoken += ch;\n\n\t\t\tif (token == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\treturn token;\n\t\t}\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Skips all whitespace in the data stream.\n\t */\n\tprivate skipWhiteSpace():void\n\t{\n\t\tvar ch:string;\n\n\t\tdo\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\n\n\t\tthis.putBack();\n\t}\n\n\t/**\n\t * Skips to the next line.\n\t */\n\tprivate ignoreLine():void\n\t{\n\t\tvar ch:string;\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\n\t\t\tch = this.getNextChar();\n\t}\n\n\t/**\n\t * Retrieves the next single character in the data stream.\n\t */\n\tprivate getNextChar():string\n\t{\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\n\n\t\tif (ch == \"\\n\") {\n\t\t\t++this._line;\n\t\t\tthis._charLineIndex = 0;\n\t\t} else if (ch != \"\\r\")\n\t\t\t++this._charLineIndex;\n\n\t\tif (this._parseIndex == this._textData.length)\n\t\t\tthis._reachedEOF = true;\n\n\t\treturn ch;\n\t}\n\n\t/**\n\t * Retrieves the next integer in the data stream.\n\t */\n\tprivate getNextInt():number /*int*/\n\t{\n\t\tvar i:number = parseInt(this.getNextToken());\n\t\tif (isNaN(i))\n\t\t\tthis.sendParseError(\"int type\");\n\t\treturn i;\n\t}\n\n\t/**\n\t * Retrieves the next floating point number in the data stream.\n\t */\n\tprivate getNextNumber():number\n\t{\n\t\tvar f:number = parseFloat(this.getNextToken());\n\t\tif (isNaN(f))\n\t\t\tthis.sendParseError(\"float type\");\n\t\treturn f;\n\t}\n\n\t/**\n\t * Retrieves the next 3d vector in the data stream.\n\t */\n\tprivate parseVector3D():Vector3D\n\t{\n\t\tvar vec:Vector3D = new Vector3D();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tvec.x = this.getNextNumber();\n\t\tvec.y = this.getNextNumber();\n\t\tvec.z = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn vec;\n\t}\n\n\t/**\n\t * Retrieves the next quaternion in the data stream.\n\t */\n\tprivate parseQuaternion():Quaternion\n\t{\n\t\tvar quat:Quaternion = new Quaternion();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tquat.x = this.getNextNumber();\n\t\tquat.y = this.getNextNumber();\n\t\tquat.z = this.getNextNumber();\n\n\t\t// quat supposed to be unit length\n\t\tvar t:number = 1 - (quat.x*quat.x) - (quat.y*quat.y) - (quat.z*quat.z);\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn quat;\n\t}\n\n\t/**\n\t * Parses the command line data.\n\t */\n\tprivate parseCMD():void\n\t{\n\t\t// just ignore the command line property\n\t\tthis.parseLiteralstring();\n\t}\n\n\t/**\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\n\t * by double quotes.\n\t */\n\tprivate parseLiteralstring():string\n\t{\n\t\tthis.skipWhiteSpace();\n\n\t\tvar ch:string = this.getNextChar();\n\t\tvar str:string = \"\";\n\n\t\tif (ch != \"\\\"\")\n\t\t\tthis.sendParseError(\"\\\"\");\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch != \"\\\"\")\n\t\t\t\tstr += ch;\n\t\t} while (ch != \"\\\"\");\n\n\t\treturn str;\n\t}\n\n\t/**\n\t * Throws an end-of-file error when a premature end of file was encountered.\n\t */\n\tprivate sendEOFError():void\n\t{\n\t\tthrow new Error(\"Unexpected end of file\");\n\t}\n\n\t/**\n\t * Throws an error when an unexpected token was encountered.\n\t * @param expected The token type that was actually expected.\n\t */\n\tprivate sendParseError(expected:string):void\n\t{\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\n\t}\n\n\t/**\n\t * Throws an error when an unknown keyword was encountered.\n\t */\n\tprivate sendUnknownKeywordError():void\n\t{\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\n\t}\n}\n\nexport = MD5AnimParser;\n\n\n/**\n *\n */\nclass BaseFrameData\n{\n\t/**\n\t *\n\t */\n\tpublic position:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic orientation:Quaternion;\n}\n\n/**\n *\n */\nclass BoundsData\n{\n\t/**\n\t *\n\t */\n\tpublic min:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic max:Vector3D;\n}\n\n/**\n *\n */\nclass FrameData\n{\n\t/**\n\t *\n\t */\n\tpublic index:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic components:Array<number>;\n}\n\n/**\n *\n */\nclass HierarchyData\n{\n\t/**\n\t *\n\t */\n\tpublic name:string;\n\n\t/**\n\t *\n\t */\n\tpublic parentIndex:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic flags:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic startIndex:number /*int*/;\n}",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\n\n// todo: create animation system, parse skeleton\n\n/**\n * MD5MeshParser provides a parser for the md5mesh data type, providing the geometry of the md5 format.\n *\n * todo: optimize\n */\nclass MD5MeshParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\n\tpublic static NUM_MESHES_TOKEN:string = \"numMeshes\";\n\tpublic static COMMENT_TOKEN:string = \"//\";\n\tpublic static JOINTS_TOKEN:string = \"joints\";\n\tpublic static MESH_TOKEN:string = \"mesh\";\n\n\tpublic static MESH_SHADER_TOKEN:string = \"shader\";\n\tpublic static MESH_NUM_VERTS_TOKEN:string = \"numverts\";\n\tpublic static MESH_VERT_TOKEN:string = \"vert\";\n\tpublic static MESH_NUM_TRIS_TOKEN:string = \"numtris\";\n\tpublic static MESH_TRI_TOKEN:string = \"tri\";\n\tpublic static MESH_NUM_WEIGHTS_TOKEN:string = \"numweights\";\n\tpublic static MESH_WEIGHT_TOKEN:string = \"weight\";\n\n\tprivate _parseIndex:number /*int*/ = 0;\n\tprivate _reachedEOF:boolean;\n\tprivate _line:number /*int*/ = 0;\n\tprivate _charLineIndex:number /*int*/ = 0;\n\tprivate _version:number /*int*/;\n\tprivate _numJoints:number /*int*/;\n\tprivate _numMeshes:number /*int*/;\n\n\tprivate _mesh:Mesh;\n\tprivate _shaders:Array<string>;\n\n\tprivate _maxJointCount:number /*int*/;\n\tprivate _meshData:Array<MeshData>;\n\tprivate _bindPoses:Array<Matrix3D>;\n\tprivate _geometry:Geometry;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _animationSet:SkeletonAnimationSet;\n\n\tprivate _rotationQuat:Quaternion;\n\n\t/**\n\t * Creates a new MD5MeshParser object.\n\t */\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._rotationQuat = new Quaternion();\n\n\t\tthis._rotationQuat.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\n\n\t\tif (additionalRotationAxis) {\n\t\t\tvar quat:Quaternion = new Quaternion();\n\t\t\tquat.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\n\t\t\tthis._rotationQuat.multiply(this._rotationQuat, quat);\n\t\t}\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md5mesh\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar token:string;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\ttoken = this.getNextToken();\n\t\t\tswitch (token) {\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.VERSION_TOKEN:\n\t\t\t\t\tthis._version = this.getNextInt();\n\t\t\t\t\tif (this._version != 10)\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.COMMAND_LINE_TOKEN:\n\t\t\t\t\tthis.parseCMD();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.NUM_JOINTS_TOKEN:\n\t\t\t\t\tthis._numJoints = this.getNextInt();\n\t\t\t\t\tthis._bindPoses = new Array<Matrix3D>(this._numJoints);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.NUM_MESHES_TOKEN:\n\t\t\t\t\tthis._numMeshes = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.JOINTS_TOKEN:\n\t\t\t\t\tthis.parseJoints();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_TOKEN:\n\t\t\t\t\tthis.parseMesh();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (!this._reachedEOF)\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\n\t\t\t}\n\n\t\t\tif (this._reachedEOF) {\n\t\t\t\tthis.calculateMaxJointCount();\n\t\t\t\tthis._animationSet = new SkeletonAnimationSet(this._maxJointCount);\n\n\t\t\t\tthis._mesh = new Mesh(new Geometry(), null);\n\t\t\t\tthis._geometry = this._mesh.geometry;\n\n\t\t\t\tfor (var i:number /*int*/ = 0; i < this._meshData.length; ++i)\n\t\t\t\t\tthis._geometry.addSubGeometry(this.translateGeom(this._meshData[i].vertexData, this._meshData[i].weightData, this._meshData[i].indices));\n\n\t\t\t\t//_geometry.animation = _animation;\n\t\t\t\t//\t\t\t\t\t_mesh.animationController = _animationController;\n\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\t\t\tthis._pFinalizeAsset(this._geometry);\n\t\t\t\tthis._pFinalizeAsset(this._mesh);\n\t\t\t\tthis._pFinalizeAsset(this._skeleton);\n\t\t\t\tthis._pFinalizeAsset(this._animationSet);\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t}\n\t\t}\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\tprivate calculateMaxJointCount():void\n\t{\n\t\tthis._maxJointCount = 0;\n\n\t\tvar numMeshData:number /*int*/ = this._meshData.length;\n\t\tfor (var i:number /*int*/ = 0; i < numMeshData; ++i) {\n\t\t\tvar meshData:MeshData = this._meshData[i];\n\t\t\tvar vertexData:Array<VertexData> = meshData.vertexData;\n\t\t\tvar numVerts:number /*int*/ = vertexData.length;\n\n\t\t\tfor (var j:number /*int*/ = 0; j < numVerts; ++j) {\n\t\t\t\tvar zeroWeights:number /*int*/ = this.countZeroWeightJoints(vertexData[j], meshData.weightData);\n\t\t\t\tvar totalJoints:number /*int*/ = vertexData[j].countWeight - zeroWeights;\n\t\t\t\tif (totalJoints > this._maxJointCount)\n\t\t\t\t\tthis._maxJointCount = totalJoints;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate countZeroWeightJoints(vertex:VertexData, weights:Array<JointData>):number /*int*/\n\t{\n\t\tvar start:number /*int*/ = vertex.startWeight;\n\t\tvar end:number /*int*/ = vertex.startWeight + vertex.countWeight;\n\t\tvar count:number /*int*/ = 0;\n\t\tvar weight:number;\n\n\t\tfor (var i:number /*int*/ = start; i < end; ++i) {\n\t\t\tweight = weights[i].bias;\n\t\t\tif (weight == 0)\n\t\t\t\t++count;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Parses the skeleton's joints.\n\t */\n\tprivate parseJoints():void\n\t{\n\t\tvar ch:string;\n\t\tvar joint:SkeletonJoint;\n\t\tvar pos:Vector3D;\n\t\tvar quat:Quaternion;\n\t\tvar i:number /*int*/ = 0;\n\t\tvar token:string = this.getNextToken();\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tthis._skeleton = new Skeleton();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tjoint = new SkeletonJoint();\n\t\t\tjoint.name = this.parseLiteralstring();\n\t\t\tjoint.parentIndex = this.getNextInt();\n\t\t\tpos = this.parseVector3D();\n\t\t\tpos = this._rotationQuat.rotatePoint(pos);\n\t\t\tquat = this.parseQuaternion();\n\n\t\t\t// todo: check if this is correct, or maybe we want to actually store it as quats?\n\t\t\tthis._bindPoses[i] = quat.toMatrix3D();\n\t\t\tthis._bindPoses[i].appendTranslation(pos.x, pos.y, pos.z);\n\t\t\tvar inv:Matrix3D = this._bindPoses[i].clone();\n\t\t\tinv.invert();\n\t\t\tjoint.inverseBindPose = inv.rawData;\n\n\t\t\tthis._skeleton.joints[i++] = joint;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Puts back the last read character into the data stream.\n\t */\n\tprivate putBack():void\n\t{\n\t\tthis._parseIndex--;\n\t\tthis._charLineIndex--;\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\n\t}\n\n\t/**\n\t * Parses the mesh geometry.\n\t */\n\tprivate parseMesh():void\n\t{\n\t\tvar token:string = this.getNextToken();\n\t\tvar ch:string;\n\t\tvar vertexData:Array<VertexData>;\n\t\tvar weights:Array<JointData>;\n\t\tvar indices:Array<number> /*uint*/;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tif (this._shaders == null)\n\t\t\tthis._shaders = new Array<string>();\n\n\t\twhile (ch != \"}\") {\n\t\t\tch = this.getNextToken();\n\t\t\tswitch (ch) {\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_SHADER_TOKEN:\n\t\t\t\t\tthis._shaders.push(this.parseLiteralstring());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_VERTS_TOKEN:\n\t\t\t\t\tvertexData = new Array<VertexData>(this.getNextInt());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_TRIS_TOKEN:\n\t\t\t\t\tindices = new Array<number>(this.getNextInt()*3) /*uint*/;\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_WEIGHTS_TOKEN:\n\t\t\t\t\tweights = new Array<JointData>(this.getNextInt());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_VERT_TOKEN:\n\t\t\t\t\tthis.parseVertex(vertexData);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_TRI_TOKEN:\n\t\t\t\t\tthis.parseTri(indices);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_WEIGHT_TOKEN:\n\t\t\t\t\tthis.parseJoint(weights);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this._meshData == null)\n\t\t\tthis._meshData = new Array<MeshData>();\n\n\t\tvar i:number /*uint*/ = this._meshData.length;\n\t\tthis._meshData[i] = new MeshData();\n\t\tthis._meshData[i].vertexData = vertexData;\n\t\tthis._meshData[i].weightData = weights;\n\t\tthis._meshData[i].indices = indices;\n\t}\n\n\t/**\n\t * Converts the mesh data to a SkinnedSub instance.\n\t * @param vertexData The mesh's vertices.\n\t * @param weights The joint weights per vertex.\n\t * @param indices The indices for the faces.\n\t * @return A SubGeometry instance containing all geometrical data for the current mesh.\n\t */\n\tprivate translateGeom(vertexData:Array<VertexData>, weights:Array<JointData>, indices:Array<number> /*uint*/):TriangleSubGeometry\n\t{\n\t\tvar len:number /*int*/ = vertexData.length;\n\t\tvar v1:number /*int*/, v2:number /*int*/, v3:number /*int*/;\n\t\tvar vertex:VertexData;\n\t\tvar weight:JointData;\n\t\tvar bindPose:Matrix3D;\n\t\tvar pos:Vector3D;\n\t\tvar subGeom:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\tvar uvs:Array<number> = new Array<number>(len*2);\n\t\tvar vertices:Array<number> = new Array<number>(len*3);\n\t\tvar jointIndices:Array<number> = new Array<number>(len*this._maxJointCount);\n\t\tvar jointWeights:Array<number> = new Array<number>(len*this._maxJointCount);\n\t\tvar l:number /*int*/ = 0;\n\t\tvar nonZeroWeights:number /*int*/;\n\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i) {\n\t\t\tvertex = vertexData[i];\n\t\t\tv1 = vertex.index*3;\n\t\t\tv2 = v1 + 1;\n\t\t\tv3 = v1 + 2;\n\t\t\tvertices[v1] = vertices[v2] = vertices[v3] = 0;\n\n\t\t\tnonZeroWeights = 0;\n\t\t\tfor (var j:number /*int*/ = 0; j < vertex.countWeight; ++j) {\n\t\t\t\tweight = weights[vertex.startWeight + j];\n\t\t\t\tif (weight.bias > 0) {\n\t\t\t\t\tbindPose = this._bindPoses[weight.joint];\n\t\t\t\t\tpos = bindPose.transformVector(weight.pos);\n\t\t\t\t\tvertices[v1] += pos.x*weight.bias;\n\t\t\t\t\tvertices[v2] += pos.y*weight.bias;\n\t\t\t\t\tvertices[v3] += pos.z*weight.bias;\n\n\t\t\t\t\t// indices need to be multiplied by 3 (amount of matrix registers)\n\t\t\t\t\tjointIndices[l] = weight.joint*3;\n\t\t\t\t\tjointWeights[l++] = weight.bias;\n\t\t\t\t\t++nonZeroWeights;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = nonZeroWeights; j < this._maxJointCount; ++j) {\n\t\t\t\tjointIndices[l] = 0;\n\t\t\t\tjointWeights[l++] = 0;\n\t\t\t}\n\n\t\t\tv1 = vertex.index << 1;\n\t\t\tuvs[v1++] = vertex.s;\n\t\t\tuvs[v1] = vertex.t;\n\t\t}\n\n\t\tsubGeom.jointsPerVertex = this._maxJointCount;\n\t\tsubGeom.setIndices(indices);\n\t\tsubGeom.setPositions(vertices);\n\t\tsubGeom.setUVs(uvs);\n\t\tsubGeom.setJointIndices(jointIndices);\n\t\tsubGeom.setJointWeights(jointWeights);\n\t\t// cause explicit updates\n\t\tsubGeom.setNormals(null);\n\t\tsubGeom.setTangents(null);\n\t\t// turn auto updates off because they may be animated and set explicitly\n\t\tsubGeom.autoDeriveTangents = false;\n\t\tsubGeom.autoDeriveNormals = false;\n\n\t\treturn subGeom;\n\t}\n\n\t/**\n\t * Retrieve the next triplet of vertex indices that form a face.\n\t * @param indices The index list in which to store the read data.\n\t */\n\tprivate parseTri(indices:Array<number> /*uint*/):void\n\t{\n\t\tvar index:number /*int*/ = this.getNextInt()*3;\n\t\tindices[index] = this.getNextInt();\n\t\tindices[index + 1] = this.getNextInt();\n\t\tindices[index + 2] = this.getNextInt();\n\t}\n\n\t/**\n\t * Reads a new joint data set for a single joint.\n\t * @param weights the target list to contain the weight data.\n\t */\n\tprivate parseJoint(weights:Array<JointData>):void\n\t{\n\t\tvar weight:JointData = new JointData();\n\t\tweight.index = this.getNextInt();\n\t\tweight.joint = this.getNextInt();\n\t\tweight.bias = this.getNextNumber();\n\t\tweight.pos = this.parseVector3D();\n\t\tweights[weight.index] = weight;\n\t}\n\n\t/**\n\t * Reads the data for a single vertex.\n\t * @param vertexData The list to contain the vertex data.\n\t */\n\tprivate parseVertex(vertexData:Array<VertexData>):void\n\t{\n\t\tvar vertex:VertexData = new VertexData();\n\t\tvertex.index = this.getNextInt();\n\t\tthis.parseUV(vertex);\n\t\tvertex.startWeight = this.getNextInt();\n\t\tvertex.countWeight = this.getNextInt();\n\t\t//\t\t\tif (vertex.countWeight > _maxJointCount) _maxJointCount = vertex.countWeight;\n\t\tvertexData[vertex.index] = vertex;\n\t}\n\n\t/**\n\t * Reads the next uv coordinate.\n\t * @param vertexData The vertexData to contain the UV coordinates.\n\t */\n\tprivate parseUV(vertexData:VertexData):void\n\t{\n\t\tvar ch:string = this.getNextToken();\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tvertexData.s = this.getNextNumber();\n\t\tvertexData.t = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\t}\n\n\t/**\n\t * Gets the next token in the data stream.\n\t */\n\tprivate getNextToken():string\n\t{\n\t\tvar ch:string;\n\t\tvar token:string = \"\";\n\n\t\twhile (!this._reachedEOF) {\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\n\t\t\t\tif (token != MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.skipWhiteSpace();\n\t\t\t\tif (token != \"\")\n\t\t\t\t\treturn token;\n\t\t\t} else\n\t\t\t\ttoken += ch;\n\n\t\t\tif (token == MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\treturn token;\n\t\t}\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Skips all whitespace in the data stream.\n\t */\n\tprivate skipWhiteSpace():void\n\t{\n\t\tvar ch:string;\n\n\t\tdo\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\n\n\t\tthis.putBack();\n\t}\n\n\t/**\n\t * Skips to the next line.\n\t */\n\tprivate ignoreLine():void\n\t{\n\t\tvar ch:string;\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\n\t\t\tch = this.getNextChar();\n\t}\n\n\t/**\n\t * Retrieves the next single character in the data stream.\n\t */\n\tprivate getNextChar():string\n\t{\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\n\n\t\tif (ch == \"\\n\") {\n\t\t\t++this._line;\n\t\t\tthis._charLineIndex = 0;\n\t\t} else if (ch != \"\\r\")\n\t\t\t++this._charLineIndex;\n\n\t\tif (this._parseIndex >= this._textData.length)\n\t\t\tthis._reachedEOF = true;\n\n\t\treturn ch;\n\t}\n\n\t/**\n\t * Retrieves the next integer in the data stream.\n\t */\n\tprivate getNextInt():number /*int*/\n\t{\n\t\tvar i:number = parseInt(this.getNextToken());\n\t\tif (isNaN(i))\n\t\t\tthis.sendParseError(\"int type\");\n\t\treturn i;\n\t}\n\n\t/**\n\t * Retrieves the next floating point number in the data stream.\n\t */\n\tprivate getNextNumber():number\n\t{\n\t\tvar f:number = parseFloat(this.getNextToken());\n\t\tif (isNaN(f))\n\t\t\tthis.sendParseError(\"float type\");\n\t\treturn f;\n\t}\n\n\t/**\n\t * Retrieves the next 3d vector in the data stream.\n\t */\n\tprivate parseVector3D():Vector3D\n\t{\n\t\tvar vec:Vector3D = new Vector3D();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tvec.x = -this.getNextNumber();\n\t\tvec.y = this.getNextNumber();\n\t\tvec.z = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn vec;\n\t}\n\n\t/**\n\t * Retrieves the next quaternion in the data stream.\n\t */\n\tprivate parseQuaternion():Quaternion\n\t{\n\t\tvar quat:Quaternion = new Quaternion();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tquat.x = this.getNextNumber();\n\t\tquat.y = -this.getNextNumber();\n\t\tquat.z = -this.getNextNumber();\n\n\t\t// quat supposed to be unit length\n\t\tvar t:number = 1 - quat.x*quat.x - quat.y*quat.y - quat.z*quat.z;\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\tvar rotQuat:Quaternion = new Quaternion();\n\t\trotQuat.multiply(this._rotationQuat, quat);\n\t\treturn rotQuat;\n\t}\n\n\t/**\n\t * Parses the command line data.\n\t */\n\tprivate parseCMD():void\n\t{\n\t\t// just ignore the command line property\n\t\tthis.parseLiteralstring();\n\t}\n\n\t/**\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\n\t * by double quotes.\n\t */\n\tprivate parseLiteralstring():string\n\t{\n\t\tthis.skipWhiteSpace();\n\n\t\tvar ch:string = this.getNextChar();\n\t\tvar str:string = \"\";\n\n\t\tif (ch != \"\\\"\")\n\t\t\tthis.sendParseError(\"\\\"\");\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch != \"\\\"\")\n\t\t\t\tstr += ch;\n\t\t} while (ch != \"\\\"\");\n\n\t\treturn str;\n\t}\n\n\t/**\n\t * Throws an end-of-file error when a premature end of file was encountered.\n\t */\n\tprivate sendEOFError():void\n\t{\n\t\tthrow new Error(\"Unexpected end of file\");\n\t}\n\n\t/**\n\t * Throws an error when an unexpected token was encountered.\n\t * @param expected The token type that was actually expected.\n\t */\n\tprivate sendParseError(expected:string):void\n\t{\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\n\t}\n\n\t/**\n\t * Throws an error when an unknown keyword was encountered.\n\t */\n\tprivate sendUnknownKeywordError():void\n\t{\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\n\t}\n}\n\nexport = MD5MeshParser;\n\n\nclass VertexData\n{\n\tpublic index:number /*int*/;\n\tpublic s:number;\n\tpublic t:number;\n\tpublic startWeight:number /*int*/;\n\tpublic countWeight:number /*int*/;\n}\n\nclass JointData\n{\n\tpublic index:number /*int*/;\n\tpublic joint:number /*int*/;\n\tpublic bias:number;\n\tpublic pos:Vector3D;\n}\n\nclass MeshData\n{\n\tpublic vertexData:Array<VertexData>;\n\tpublic weightData:Array<JointData>;\n\tpublic indices:Array<number> /*uint*/;\n}",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\n\n/**\n * Max3DSParser provides a parser for the 3ds data type.\n */\nclass Max3DSParser extends ParserBase\n{\n\tprivate _byteData:ByteArray;\n\n\tprivate _textures:Object;\n\tprivate _materials:Object;\n\tprivate _unfinalized_objects:Object;\n\n\tprivate _cur_obj_end:number;\n\tprivate _cur_obj:ObjectVO;\n\n\tprivate _cur_mat_end:number;\n\tprivate _cur_mat:MaterialVO;\n\tprivate _useSmoothingGroups:boolean;\n\n\t/**\n\t * Creates a new <code>Max3DSParser</code> object.\n\t *\n\t * @param useSmoothingGroups Determines whether the parser looks for smoothing groups in the 3ds file or assumes uniform smoothing. Defaults to true.\n\t */\n\tconstructor(useSmoothingGroups:boolean = true)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\n\t\tthis._useSmoothingGroups = useSmoothingGroups;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"3ds\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tvar ba:ByteArray;\n\n\t\tba = ParserUtils.toByteArray(data);\n\t\tif (ba) {\n\t\t\tba.position = 0;\n\t\t\tif (ba.readShort() == 0x4d4d)\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\n\t{\n\t\tif (resourceDependency.assets.length == 1) {\n\t\t\tvar asset:IAsset;\n\n\t\t\tasset = resourceDependency.assets[0];\n\t\t\tif (asset.isAsset(BitmapImage2D)) {\n\t\t\t\tvar tex:TextureVO;\n\n\t\t\t\ttex = this._textures[resourceDependency.id];\n\t\t\t\ttex.texture = new Single2DTexture(<BitmapImage2D> asset);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\n\t{\n\t\t// TODO: Implement\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (!this._byteData) {\n\t\t\tthis._byteData = this._pGetByteData();\n\t\t\tthis._byteData.position = 0;\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;// Should be default\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t\tthis._textures = {};\n\t\t\tthis._materials = {};\n\t\t\tthis._unfinalized_objects = {};\n\t\t}\n\n\t\t// TODO: With this construct, the loop will run no-op for as long\n\t\t// as there is time once file has finished reading. Consider a nice\n\t\t// way to stop loop when byte array is empty, without putting it in\n\t\t// the while-conditional, which will prevent finalizations from\n\t\t// happening after the last chunk.\n\t\twhile (this._pHasTime()) {\n\n\t\t\t// If we are currently working on an object, and the most recent chunk was\n\t\t\t// the last one in that object, finalize the current object.\n\t\t\tif (this._cur_mat && this._byteData.position >= this._cur_mat_end)\n\t\t\t\tthis.finalizeCurrentMaterial();\n\t\t\telse if (this._cur_obj && this._byteData.position >= this._cur_obj_end) {\n\t\t\t\t// Can't finalize at this point, because we have to wait until the full\n\t\t\t\t// animation section has been parsed for any potential pivot definitions\n\t\t\t\tthis._unfinalized_objects[this._cur_obj.name] = this._cur_obj;\n\t\t\t\tthis._cur_obj_end = Number.MAX_VALUE /*uint*/;\n\t\t\t\tthis._cur_obj = null;\n\t\t\t}\n\n\t\t\tif (this._byteData.getBytesAvailable() > 0) {\n\t\t\t\tvar cid:number /*uint*/;\n\t\t\t\tvar len:number /*uint*/;\n\t\t\t\tvar end:number /*uint*/;\n\n\t\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\t\tlen = this._byteData.readUnsignedInt();\n\t\t\t\tend = this._byteData.position + (len - 6);\n\n\t\t\t\tswitch (cid) {\n\t\t\t\t\tcase 0x4D4D: // MAIN3DS\n\t\t\t\t\tcase 0x3D3D: // EDIT3DS\n\t\t\t\t\tcase 0xB000: // KEYF3DS\n\t\t\t\t\t\t// This types are \"container chunks\" and contain only\n\t\t\t\t\t\t// sub-chunks (no data on their own.) This means that\n\t\t\t\t\t\t// there is nothing more to parse at this point, and\n\t\t\t\t\t\t// instead we should progress to the next chunk, which\n\t\t\t\t\t\t// will be the first sub-chunk of this one.\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0xAFFF: // MATERIAL\n\t\t\t\t\t\tthis._cur_mat_end = end;\n\t\t\t\t\t\tthis._cur_mat = this.parseMaterial();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4000: // EDIT_OBJECT\n\t\t\t\t\t\tthis._cur_obj_end = end;\n\t\t\t\t\t\tthis._cur_obj = new ObjectVO();\n\t\t\t\t\t\tthis._cur_obj.name = this.readNulTermstring();\n\t\t\t\t\t\tthis._cur_obj.materials = new Array<string>();\n\t\t\t\t\t\tthis._cur_obj.materialFaces = {};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4100: // OBJ_TRIMESH\n\t\t\t\t\t\tthis._cur_obj.type = Mesh.assetType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4110: // TRI_VERTEXL\n\t\t\t\t\t\tthis.parseVertexList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4120: // TRI_FACELIST\n\t\t\t\t\t\tthis.parseFaceList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4140: // TRI_MAPPINGCOORDS\n\t\t\t\t\t\tthis.parseUVList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4130: // Face materials\n\t\t\t\t\t\tthis.parseFaceMaterialList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4160: // Transform\n\t\t\t\t\t\tthis._cur_obj.transform = this.readTransform();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0xB002: // Object animation (including pivot)\n\t\t\t\t\t\tthis.parseObjectAnimation(end);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4150: // Smoothing groups\n\t\t\t\t\t\tthis.parseSmoothingGroups();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Skip this (unknown) chunk\n\t\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Pause parsing if there were any dependencies found during this\n\t\t\t\t// iteration (i.e. if there are any dependencies that need to be\n\t\t\t\t// retrieved at this time.)\n\t\t\t\tif (this.dependencies.length) {\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// More parsing is required if the entire byte array has not yet\n\t\t// been read, or if there is a currently non-finalized object in\n\t\t// the pipeline.\n\t\tif (this._byteData.getBytesAvailable() || this._cur_obj || this._cur_mat) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t} else {\n\t\t\tvar name:string;\n\n\t\t\t// Finalize any remaining objects before ending.\n\t\t\tfor (name in this._unfinalized_objects) {\n\t\t\t\tvar obj:DisplayObjectContainer;\n\t\t\t\tobj = this.constructObject(this._unfinalized_objects[name]);\n\t\t\t\tif (obj) {\n\t\t\t\t\t//add to the content property\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\n\n\t\t\t\t\tthis._pFinalizeAsset(obj, name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\tprivate parseMaterial():MaterialVO\n\t{\n\t\tvar mat:MaterialVO;\n\n\t\tmat = new MaterialVO();\n\n\t\twhile (this._byteData.position < this._cur_mat_end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\t\t\tvar end:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\t\t\tend = this._byteData.position + (len - 6);\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xA000: // Material name\n\t\t\t\t\tmat.name = this.readNulTermstring();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA010: // Ambient color\n\t\t\t\t\tmat.ambientColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA020: // Diffuse color\n\t\t\t\t\tmat.diffuseColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA030: // Specular color\n\t\t\t\t\tmat.specularColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA081: // Two-sided, existence indicates \"true\"\n\t\t\t\t\tmat.twoSided = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA200: // Main (color) texture\n\t\t\t\t\tmat.colorMap = this.parseTexture(end);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA204: // Specular map\n\t\t\t\t\tmat.specularMap = this.parseTexture(end);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._byteData.position = end;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn mat;\n\t}\n\n\tprivate parseTexture(end:number /*uint*/):TextureVO\n\t{\n\t\tvar tex:TextureVO;\n\n\t\ttex = new TextureVO();\n\n\t\twhile (this._byteData.position < end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xA300:\n\t\t\t\t\ttex.url = this.readNulTermstring();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t// Skip this unknown texture sub-chunk\n\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._textures[tex.url] = tex;\n\t\tthis._pAddDependency(tex.url, new URLRequest(tex.url));\n\n\t\treturn tex;\n\t}\n\n\tprivate parseVertexList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.verts = new Array<number>(count*3);\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.verts.length;\n\t\twhile (i < len) {\n\t\t\tvar x:number, y:number, z:number;\n\n\t\t\tx = this._byteData.readFloat();\n\t\t\ty = this._byteData.readFloat();\n\t\t\tz = this._byteData.readFloat();\n\n\t\t\tthis._cur_obj.verts[i++] = x;\n\t\t\tthis._cur_obj.verts[i++] = z;\n\t\t\tthis._cur_obj.verts[i++] = y;\n\t\t}\n\t}\n\n\tprivate parseFaceList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.indices = new Array<number>(count*3) /*uint*/;\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.indices.length;\n\t\twhile (i < len) {\n\t\t\tvar i0:number /*uint*/, i1:number /*uint*/, i2:number /*uint*/;\n\n\t\t\ti0 = this._byteData.readUnsignedShort();\n\t\t\ti1 = this._byteData.readUnsignedShort();\n\t\t\ti2 = this._byteData.readUnsignedShort();\n\n\t\t\tthis._cur_obj.indices[i++] = i0;\n\t\t\tthis._cur_obj.indices[i++] = i2;\n\t\t\tthis._cur_obj.indices[i++] = i1;\n\n\t\t\t// Skip \"face info\", irrelevant in Away3D\n\t\t\tthis._byteData.position += 2;\n\t\t}\n\n\t\tthis._cur_obj.smoothingGroups = new Array<number>(count) /*uint*/;\n\t}\n\n\tprivate parseSmoothingGroups():void\n\t{\n\t\tvar len:number /*uint*/ = this._cur_obj.indices.length/3;\n\t\tvar i:number /*uint*/ = 0;\n\t\twhile (i < len) {\n\t\t\tthis._cur_obj.smoothingGroups[i] = this._byteData.readUnsignedInt();\n\t\t\ti++;\n\t\t}\n\t}\n\n\tprivate parseUVList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.uvs = new Array<number>(count*2);\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.uvs.length;\n\t\twhile (i < len) {\n\t\t\tthis._cur_obj.uvs[i++] = this._byteData.readFloat();\n\t\t\tthis._cur_obj.uvs[i++] = 1.0 - this._byteData.readFloat();\n\t\t}\n\t}\n\n\tprivate parseFaceMaterialList():void\n\t{\n\t\tvar mat:string;\n\t\tvar count:number /*uint*/;\n\t\tvar i:number /*uint*/;\n\t\tvar faces:Array<number> /*uint*/;\n\n\t\tmat = this.readNulTermstring();\n\t\tcount = this._byteData.readUnsignedShort();\n\n\t\tfaces = new Array<number>(count) /*uint*/;\n\t\ti = 0;\n\t\twhile (i < faces.length)\n\t\t\tfaces[i++] = this._byteData.readUnsignedShort();\n\n\t\tthis._cur_obj.materials.push(mat);\n\t\tthis._cur_obj.materialFaces[mat] = faces;\n\t}\n\n\tprivate parseObjectAnimation(end:number):void\n\t{\n\t\tvar vo:ObjectVO;\n\t\tvar obj:DisplayObjectContainer;\n\t\tvar pivot:Vector3D;\n\t\tvar name:string;\n\t\tvar hier:number /*uint*/;\n\n\t\t// Pivot defaults to origin\n\t\tpivot = new Vector3D;\n\n\t\twhile (this._byteData.position < end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xb010: // Name/hierarchy\n\t\t\t\t\tname = this.readNulTermstring();\n\t\t\t\t\tthis._byteData.position += 4;\n\t\t\t\t\thier = this._byteData.readShort();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xb013: // Pivot\n\t\t\t\t\tpivot.x = this._byteData.readFloat();\n\t\t\t\t\tpivot.z = this._byteData.readFloat();\n\t\t\t\t\tpivot.y = this._byteData.readFloat();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If name is \"$$$DUMMY\" this is an empty object (e.g. a container)\n\t\t// and will be ignored in this version of the parser\n\t\t// TODO: Implement containers in 3DS parser.\n\t\tif (name != '$$$DUMMY' && this._unfinalized_objects.hasOwnProperty(name)) {\n\t\t\tvo = this._unfinalized_objects[name];\n\t\t\tobj = this.constructObject(vo, pivot);\n\n\t\t\tif (obj) {\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\n\n\t\t\t\tthis._pFinalizeAsset(obj, vo.name);\n\t\t\t}\n\n\n\t\t\tdelete this._unfinalized_objects[name];\n\t\t}\n\t}\n\n\tprivate constructObject(obj:ObjectVO, pivot:Vector3D = null):DisplayObjectContainer\n\t{\n\t\tif (obj.type == Mesh.assetType) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar sub:TriangleSubGeometry;\n\t\t\tvar geom:Geometry;\n\t\t\tvar mat:MaterialBase;\n\t\t\tvar mesh:Mesh;\n\t\t\tvar mtx:Matrix3D;\n\t\t\tvar vertices:Array<VertexVO>;\n\t\t\tvar faces:Array<FaceVO>;\n\n\t\t\tif (obj.materials.length > 1)\n\t\t\t\tconsole.log(\"The Away3D 3DS parser does not support multiple materials per mesh at this point.\");\n\n\t\t\t// Ignore empty objects\n\t\t\tif (!obj.indices || obj.indices.length == 0)\n\t\t\t\treturn null;\n\n\t\t\tvertices = new Array<VertexVO>(obj.verts.length/3);\n\t\t\tfaces = new Array<FaceVO>(obj.indices.length/3);\n\n\t\t\tthis.prepareData(vertices, faces, obj);\n\n\t\t\tif (this._useSmoothingGroups)\n\t\t\t\tthis.applySmoothGroups(vertices, faces);\n\n\t\t\tobj.verts = new Array<number>(vertices.length*3);\n\t\t\tfor (i = 0; i < vertices.length; i++) {\n\t\t\t\tobj.verts[i*3] = vertices[i].x;\n\t\t\t\tobj.verts[i*3 + 1] = vertices[i].y;\n\t\t\t\tobj.verts[i*3 + 2] = vertices[i].z;\n\t\t\t}\n\t\t\tobj.indices = new Array<number>(faces.length*3) /*uint*/;\n\n\t\t\tfor (i = 0; i < faces.length; i++) {\n\t\t\t\tobj.indices[i*3] = faces[i].a;\n\t\t\t\tobj.indices[i*3 + 1] = faces[i].b;\n\t\t\t\tobj.indices[i*3 + 2] = faces[i].c;\n\t\t\t}\n\n\t\t\tif (obj.uvs) {\n\t\t\t\t// If the object had UVs to start with, use UVs generated by\n\t\t\t\t// smoothing group splitting algorithm. Otherwise those UVs\n\t\t\t\t// will be nonsense and should be skipped.\n\t\t\t\tobj.uvs = new Array<number>(vertices.length*2);\n\t\t\t\tfor (i = 0; i < vertices.length; i++) {\n\t\t\t\t\tobj.uvs[i*2] = vertices[i].u;\n\t\t\t\t\tobj.uvs[i*2 + 1] = vertices[i].v;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeom = new Geometry();\n\n\t\t\t// Construct sub-geometries (potentially splitting buffers)\n\t\t\t// and add them to geometry.\n\t\t\tsub = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\tsub.setIndices(obj.indices);\n\t\t\tsub.setPositions(obj.verts);\n\t\t\tsub.setUVs(obj.uvs);\n\n\t\t\tgeom.addSubGeometry(sub);\n\n\t\t\tif (obj.materials.length > 0) {\n\t\t\t\tvar mname:string;\n\t\t\t\tmname = obj.materials[0];\n\t\t\t\tmat = this._materials[mname].material;\n\t\t\t}\n\n\t\t\t// Apply pivot translation to geometry if a pivot was\n\t\t\t// found while parsing the keyframe chunk earlier.\n\t\t\tif (pivot) {\n\t\t\t\tif (obj.transform) {\n\t\t\t\t\t// If a transform was found while parsing the\n\t\t\t\t\t// object chunk, use it to find the local pivot vector\n\t\t\t\t\tvar dat:Array<number> = obj.transform.concat();\n\t\t\t\t\tdat[12] = 0;\n\t\t\t\t\tdat[13] = 0;\n\t\t\t\t\tdat[14] = 0;\n\t\t\t\t\tmtx = new Matrix3D(dat);\n\t\t\t\t\tpivot = mtx.transformVector(pivot);\n\t\t\t\t}\n\n\t\t\t\tpivot.scaleBy(-1);\n\n\t\t\t\tmtx = new Matrix3D();\n\t\t\t\tmtx.appendTranslation(pivot.x, pivot.y, pivot.z);\n\t\t\t\tgeom.applyTransformation(mtx);\n\t\t\t}\n\n\t\t\t// Apply transformation to geometry if a transformation\n\t\t\t// was found while parsing the object chunk earlier.\n\t\t\tif (obj.transform) {\n\t\t\t\tmtx = new Matrix3D(obj.transform);\n\t\t\t\tmtx.invert();\n\t\t\t\tgeom.applyTransformation(mtx);\n\t\t\t}\n\n\t\t\t// Final transform applied to geometry. Finalize the geometry,\n\t\t\t// which will no longer be modified after this point.\n\t\t\tthis._pFinalizeAsset(geom, obj.name.concat('_geom'));\n\n\t\t\t// Build mesh and return it\n\t\t\tmesh = new Mesh(geom, mat);\n\t\t\tmesh.transform.matrix3D = new Matrix3D(obj.transform);\n\t\t\treturn mesh;\n\t\t}\n\n\t\t// If reached, unknown\n\t\treturn null;\n\t}\n\n\tprivate prepareData(vertices:Array<VertexVO>, faces:Array<FaceVO>, obj:ObjectVO):void\n\t{\n\t\t// convert raw ObjectVO's data to structured VertexVO and FaceVO\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar k:number /*int*/;\n\t\tvar len:number /*int*/ = obj.verts.length;\n\t\tfor (i = 0, j = 0, k = 0; i < len;) {\n\t\t\tvar v:VertexVO = new VertexVO;\n\t\t\tv.x = obj.verts[i++];\n\t\t\tv.y = obj.verts[i++];\n\t\t\tv.z = obj.verts[i++];\n\t\t\tif (obj.uvs) {\n\t\t\t\tv.u = obj.uvs[j++];\n\t\t\t\tv.v = obj.uvs[j++];\n\t\t\t}\n\t\t\tvertices[k++] = v;\n\t\t}\n\t\tlen = obj.indices.length;\n\t\tfor (i = 0, k = 0; i < len;) {\n\t\t\tvar f:FaceVO = new FaceVO();\n\t\t\tf.a = obj.indices[i++];\n\t\t\tf.b = obj.indices[i++];\n\t\t\tf.c = obj.indices[i++];\n\t\t\tf.smoothGroup = obj.smoothingGroups[k] || 0;\n\t\t\tfaces[k++] = f;\n\t\t}\n\t}\n\n\tprivate applySmoothGroups(vertices:Array<VertexVO>, faces:Array<FaceVO>):void\n\t{\n\t\t// clone vertices according to following rule:\n\t\t// clone if vertex's in faces from groups 1+2 and 3\n\t\t// don't clone if vertex's in faces from groups 1+2, 3 and 1+3\n\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar k:number /*int*/;\n\t\tvar l:number /*int*/;\n\t\tvar len:number /*int*/;\n\t\tvar numVerts:number /*uint*/ = vertices.length;\n\t\tvar numFaces:number /*uint*/ = faces.length;\n\n\t\t// extract groups data for vertices\n\t\tvar vGroups:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\n\t\tfor (i = 0; i < numVerts; i++)\n\t\t\tvGroups[i] = new Array<number>() /*uint*/;\n\t\tfor (i = 0; i < numFaces; i++) {\n\t\t\tvar face:FaceVO = faces[i];\n\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\tvar groups:Array<number> /*uint*/ = vGroups[(j == 0)? face.a : ((j == 1)? face.b : face.c)];\n\t\t\t\tvar group:number /*uint*/ = face.smoothGroup;\n\t\t\t\tfor (k = groups.length - 1; k >= 0; k--) {\n\t\t\t\t\tif ((group & groups[k]) > 0) {\n\t\t\t\t\t\tgroup |= groups[k];\n\t\t\t\t\t\tgroups.splice(k, 1);\n\t\t\t\t\t\tk = groups.length - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tgroups.push(group);\n\t\t\t}\n\t\t}\n\t\t// clone vertices\n\t\tvar vClones:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\n\t\tfor (i = 0; i < numVerts; i++) {\n\t\t\tif ((len = vGroups[i].length) < 1)\n\t\t\t\tcontinue;\n\t\t\tvar clones:Array<number> /*uint*/ = new Array<number>(len) /*uint*/;\n\t\t\tvClones[i] = clones;\n\t\t\tclones[0] = i;\n\t\t\tvar v0:VertexVO = vertices[i];\n\t\t\tfor (j = 1; j < len; j++) {\n\t\t\t\tvar v1:VertexVO = new VertexVO;\n\t\t\t\tv1.x = v0.x;\n\t\t\t\tv1.y = v0.y;\n\t\t\t\tv1.z = v0.z;\n\t\t\t\tv1.u = v0.u;\n\t\t\t\tv1.v = v0.v;\n\t\t\t\tclones[j] = vertices.length;\n\t\t\t\tvertices.push(v1);\n\t\t\t}\n\t\t}\n\t\tnumVerts = vertices.length;\n\n\t\tfor (i = 0; i < numFaces; i++) {\n\t\t\tface = faces[i];\n\t\t\tgroup = face.smoothGroup;\n\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\tk = (j == 0)? face.a : ((j == 1)? face.b : face.c);\n\t\t\t\tgroups = vGroups[k];\n\t\t\t\tlen = groups.length;\n\t\t\t\tclones = vClones[k];\n\t\t\t\tfor (l = 0; l < len; l++) {\n\t\t\t\t\tif (((group == 0) && (groups[l] == 0)) || ((group & groups[l]) > 0)) {\n\t\t\t\t\t\tvar index:number /*uint*/ = clones[l];\n\t\t\t\t\t\tif (group == 0) {\n\t\t\t\t\t\t\t// vertex is unique if no smoothGroup found\n\t\t\t\t\t\t\tgroups.splice(l, 1);\n\t\t\t\t\t\t\tclones.splice(l, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j == 0)\n\t\t\t\t\t\t\tface.a = index; else if (j == 1)\n\t\t\t\t\t\t\tface.b = index; else\n\t\t\t\t\t\t\tface.c = index;\n\t\t\t\t\t\tl = len;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate finalizeCurrentMaterial():void\n\t{\n\t\tvar mat:MethodMaterial;\n\n\t\tif (this._cur_mat.colorMap)\n\t\t\tmat = new MethodMaterial(this._cur_mat.colorMap.texture || DefaultMaterialManager.getDefaultTexture());\n\t\telse\n\t\t\tmat = new MethodMaterial(this._cur_mat.ambientColor);\n\n\t\tmat.diffuseColor = this._cur_mat.diffuseColor;\n\t\tmat.specularColor = this._cur_mat.specularColor;\n\n\t\tif (this.materialMode >= 2)\n\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS\n\n\t\tmat.bothSides = this._cur_mat.twoSided;\n\n\t\tthis._pFinalizeAsset(mat, this._cur_mat.name);\n\n\t\tthis._materials[this._cur_mat.name] = this._cur_mat;\n\t\tthis._cur_mat.material = mat;\n\n\t\tthis._cur_mat = null;\n\t}\n\n\tprivate readNulTermstring():string\n\t{\n\t\tvar chr:number /*int*/;\n\t\tvar str:string = \"\";\n\n\t\twhile ((chr = this._byteData.readUnsignedByte()) > 0)\n\t\t\tstr += String.fromCharCode(chr);\n\n\t\treturn str;\n\t}\n\n\tprivate readTransform():Array<number>\n\t{\n\t\tvar data:Array<number>;\n\n\t\tdata = new Array<number>(16);\n\n\t\t// X axis\n\t\tdata[0] = this._byteData.readFloat(); // X\n\t\tdata[2] = this._byteData.readFloat(); // Z\n\t\tdata[1] = this._byteData.readFloat(); // Y\n\t\tdata[3] = 0;\n\n\t\t// Z axis\n\t\tdata[8] = this._byteData.readFloat(); // X\n\t\tdata[10] = this._byteData.readFloat(); // Z\n\t\tdata[9] = this._byteData.readFloat(); // Y\n\t\tdata[11] = 0;\n\n\t\t// Y Axis\n\t\tdata[4] = this._byteData.readFloat(); // X\n\t\tdata[6] = this._byteData.readFloat(); // Z\n\t\tdata[5] = this._byteData.readFloat(); // Y\n\t\tdata[7] = 0;\n\n\t\t// Translation\n\t\tdata[12] = this._byteData.readFloat(); // X\n\t\tdata[14] = this._byteData.readFloat(); // Z\n\t\tdata[13] = this._byteData.readFloat(); // Y\n\t\tdata[15] = 1;\n\n\t\treturn data;\n\t}\n\n\tprivate readColor():number /*int*/\n\t{\n\t\tvar cid:number /*int*/;\n\t\tvar len:number /*int*/;\n\t\tvar r:number /*int*/, g:number /*int*/, b:number /*int*/;\n\n\t\tcid = this._byteData.readUnsignedShort();\n\t\tlen = this._byteData.readUnsignedInt();\n\n\t\tswitch (cid) {\n\t\t\tcase 0x0010: // Floats\n\t\t\t\tr = this._byteData.readFloat()*255;\n\t\t\t\tg = this._byteData.readFloat()*255;\n\t\t\t\tb = this._byteData.readFloat()*255;\n\t\t\t\tbreak;\n\t\t\tcase 0x0011: // 24-bit color\n\t\t\t\tr = this._byteData.readUnsignedByte();\n\t\t\t\tg = this._byteData.readUnsignedByte();\n\t\t\t\tb = this._byteData.readUnsignedByte();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n}\n\nexport = Max3DSParser;\n\n/**\n *\n */\nclass FaceVO\n{\n\tpublic a:number /*int*/;\n\tpublic b:number /*int*/;\n\tpublic c:number /*int*/;\n\tpublic smoothGroup:number /*int*/;\n}\n\n/**\n *\n */\nclass MaterialVO\n{\n\tpublic name:string;\n\tpublic ambientColor:number /*int*/;\n\tpublic diffuseColor:number /*int*/;\n\tpublic specularColor:number /*int*/;\n\tpublic twoSided:boolean;\n\tpublic colorMap:TextureVO;\n\tpublic specularMap:TextureVO;\n\tpublic material:MaterialBase;\n}\n\n/**\n *\n */\nclass ObjectVO\n{\n\tpublic name:string;\n\tpublic type:string;\n\tpublic pivotX:number;\n\tpublic pivotY:number;\n\tpublic pivotZ:number;\n\tpublic transform:Array<number>;\n\tpublic verts:Array<number>;\n\tpublic indices:Array<number> /*int*/;\n\tpublic uvs:Array<number>;\n\tpublic materialFaces:Object;\n\tpublic materials:Array<string>;\n\tpublic smoothingGroups:Array<number> /*int*/;\n}\n\n/**\n *\n */\nclass TextureVO\n{\n\tpublic url:string;\n\tpublic texture:Single2DTexture;\n}\n\n/**\n *\n */\nclass VertexVO\n{\n\tpublic x:number;\n\tpublic y:number;\n\tpublic z:number;\n\tpublic u:number;\n\tpublic v:number;\n\tpublic normal:Vector3D;\n\tpublic tangent:Vector3D;\n}",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\n\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\n\n/**\n * OBJParser provides a parser for the OBJ data type.\n */\nclass OBJParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tprivate _charIndex:number;\n\tprivate _oldIndex:number;\n\tprivate _stringLength:number;\n\tprivate _currentObject:ObjectGroup;\n\tprivate _currentGroup:Group;\n\tprivate _currentMaterialGroup:MaterialGroup;\n\tprivate _objects:Array<ObjectGroup>;\n\tprivate _materialIDs:string[];\n\tprivate _materialLoaded:Array<LoadedMaterial>;\n\tprivate _materialSpecularData:Array<SpecularData>;\n\tprivate _meshes:Array<Mesh>;\n\tprivate _lastMtlID:string;\n\tprivate _objectIndex:number;\n\tprivate _realIndices;\n\tprivate _vertexIndex:number;\n\tprivate _vertices:Array<Vertex>;\n\tprivate _vertexNormals:Array<Vertex>;\n\tprivate _uvs:Array<UV>;\n\tprivate _scale:number;\n\tprivate _mtlLib:boolean;\n\tprivate _mtlLibLoaded:boolean = true;\n\tprivate _activeMaterialID:string = \"\";\n\n\t/**\n\t * Creates a new OBJParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(scale:number = 1)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._scale = scale;\n\t}\n\n\t/**\n\t * Scaling factor applied directly to vertices data\n\t * @param value The scaling factor.\n\t */\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"obj\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tvar content:string = ParserUtils.toString(data);\n\t\tvar hasV:boolean = false;\n\t\tvar hasF:boolean = false;\n\n\t\tif (content) {\n\t\t\thasV = content.indexOf(\"\\nv \") != -1;\n\t\t\thasF = content.indexOf(\"\\nf \") != -1;\n\t\t}\n\n\t\treturn hasV && hasF;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif (resourceDependency.id == 'mtl') {\n\t\t\tvar str:string = ParserUtils.toString(resourceDependency.data);\n\t\t\tthis.parseMtl(str);\n\n\t\t} else {\n\t\t\tvar asset:IAsset;\n\n\t\t\tif (resourceDependency.assets.length != 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tasset = resourceDependency.assets[0];\n\n\t\t\tif (asset.isAsset(BitmapImage2D)) {\n\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\t\tlm.materialID = resourceDependency.id;\n\t\t\t\tlm.texture = new Single2DTexture(<BitmapImage2D> asset);\n\n\t\t\t\tthis._materialLoaded.push(lm);\n\n\t\t\t\tif (this._meshes.length > 0) {\n\t\t\t\t\tthis.applyMaterial(lm);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tif (resourceDependency.id == \"mtl\") {\n\t\t\tthis._mtlLib = false;\n\t\t\tthis._mtlLibLoaded = false;\n\t\t} else {\n\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\tlm.materialID = resourceDependency.id;\n\t\t\tthis._materialLoaded.push(lm);\n\t\t}\n\n\t\tif (this._meshes.length > 0)\n\t\t\tthis.applyMaterial(lm);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar line:string;\n\t\tvar creturn:string = String.fromCharCode(10);\n\t\tvar trunk;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\t// Merge linebreaks that are immediately preceeded by\n\t\t\t// the \"escape\" backward slash into single lines.\n\t\t\tthis._textData = this._textData.replace(/\\\\[\\r\\n]+\\s*/gm, ' ');\n\t\t}\n\n\t\tif (this._textData.indexOf(creturn) == -1)\n\t\t\tcreturn = String.fromCharCode(13);\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._startedParsing = true;\n\t\t\tthis._vertices = new Array<Vertex>();\n\t\t\tthis._vertexNormals = new Array<Vertex>();\n\t\t\tthis._materialIDs = new Array<string>();\n\t\t\tthis._materialLoaded = new Array<LoadedMaterial>();\n\t\t\tthis._meshes = new Array<Mesh>();\n\t\t\tthis._uvs = new Array<UV>();\n\t\t\tthis._stringLength = this._textData.length;\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, 0);\n\t\t\tthis._oldIndex = 0;\n\t\t\tthis._objects = new Array<ObjectGroup>();\n\t\t\tthis._objectIndex = 0;\n\t\t}\n\n\t\twhile (this._charIndex < this._stringLength && this._pHasTime()) {\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, this._oldIndex);\n\n\t\t\tif (this._charIndex == -1)\n\t\t\t\tthis._charIndex = this._stringLength;\n\n\t\t\tline = this._textData.substring(this._oldIndex, this._charIndex);\n\t\t\tline = line.split('\\r').join(\"\");\n\t\t\tline = line.replace(\"  \", \" \");\n\t\t\ttrunk = line.split(\" \");\n\t\t\tthis._oldIndex = this._charIndex + 1;\n\t\t\tthis.parseLine(trunk);\n\n\t\t\t// If whatever was parsed on this line resulted in the\n\t\t\t// parsing being paused to retrieve dependencies, break\n\t\t\t// here and do not continue parsing until un-paused.\n\t\t\tif (this.parsingPaused) {\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._charIndex >= this._stringLength) {\n\n\t\t\tif (this._mtlLib && !this._mtlLibLoaded) {\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\n\t\t\tthis.translate();\n\t\t\tthis.applyMaterials();\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\t/**\n\t * Parses a single line in the OBJ file.\n\t */\n\tprivate parseLine(trunk)\n\t{\n\t\tswitch (trunk[0]) {\n\n\t\t\tcase \"mtllib\":\n\n\t\t\t\tthis._mtlLib = true;\n\t\t\t\tthis._mtlLibLoaded = false;\n\t\t\t\tthis.loadMtl(trunk[1]);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"g\":\n\n\t\t\t\tthis.createGroup(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"o\":\n\n\t\t\t\tthis.createObject(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"usemtl\":\n\n\t\t\t\tif (this._mtlLib) {\n\n\t\t\t\t\tif (!trunk[1])\n\t\t\t\t\t\ttrunk[1] = \"def000\";\n\n\t\t\t\t\tthis._materialIDs.push(trunk[1]);\n\t\t\t\t\tthis._activeMaterialID = trunk[1];\n\n\t\t\t\t\tif (this._currentGroup)\n\t\t\t\t\t\tthis._currentGroup.materialID = this._activeMaterialID;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"v\":\n\n\t\t\t\tthis.parseVertex(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"vt\":\n\n\t\t\t\tthis.parseUV(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"vn\":\n\n\t\t\t\tthis.parseVertexNormal(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"f\":\n\n\t\t\t\tthis.parseFace(trunk);\n\n\t\t}\n\t}\n\n\t/**\n\t * Converts the parsed data into an Away3D scenegraph structure\n\t */\n\tprivate translate()\n\t{\n\t\tfor (var objIndex:number = 0; objIndex < this._objects.length; ++objIndex) {\n\t\t\tvar groups:Array<Group> = this._objects[objIndex].groups;\n\t\t\tvar numGroups:number = groups.length;\n\t\t\tvar materialGroups:Array<MaterialGroup>;\n\t\t\tvar numMaterialGroups:number;\n\t\t\tvar geometry:Geometry;\n\t\t\tvar mesh:Mesh;\n\n\t\t\tvar m:number;\n\t\t\tvar sm:number;\n\t\t\tvar bmMaterial:MethodMaterial;\n\n\t\t\tfor (var g:number = 0; g < numGroups; ++g) {\n\t\t\t\tgeometry = new Geometry();\n\t\t\t\tmaterialGroups = groups[g].materialGroups;\n\t\t\t\tnumMaterialGroups = materialGroups.length;\n\n\t\t\t\tfor (m = 0; m < numMaterialGroups; ++m)\n\t\t\t\t\tthis.translateMaterialGroup(materialGroups[m], geometry);\n\n\t\t\t\tif (geometry.subGeometries.length == 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Finalize and force type-based name\n\t\t\t\tthis._pFinalizeAsset(<IAsset> geometry);//, \"\");\n\n\t\t\t\tbmMaterial = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\n\n\t\t\t\t//check for multipass\n\t\t\t\tif (this.materialMode >= 2)\n\t\t\t\t\tbmMaterial.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\tmesh = new Mesh(geometry, bmMaterial);\n\n\t\t\t\tif (this._objects[objIndex].name) {\n\t\t\t\t\t// this is a full independent object ('o' tag in OBJ file)\n\t\t\t\t\tmesh.name = this._objects[objIndex].name;\n\n\t\t\t\t} else if (groups[g].name) {\n\n\t\t\t\t\t// this is a group so the sub groups contain the actual mesh object names ('g' tag in OBJ file)\n\t\t\t\t\tmesh.name = groups[g].name;\n\n\t\t\t\t} else {\n\t\t\t\t\t// No name stored. Use empty string which will force it\n\t\t\t\t\t// to be overridden by finalizeAsset() to type default.\n\t\t\t\t\tmesh.name = \"\";\n\t\t\t\t}\n\n\t\t\t\tthis._meshes.push(mesh);\n\n\t\t\t\tif (groups[g].materialID != \"\")\n\t\t\t\t\tbmMaterial.name = groups[g].materialID + \"~\" + mesh.name; else\n\t\t\t\t\tbmMaterial.name = this._lastMtlID + \"~\" + mesh.name;\n\n\t\t\t\tif (mesh.subMeshes.length > 1) {\n\t\t\t\t\tfor (sm = 1; sm < mesh.subMeshes.length; ++sm)\n\t\t\t\t\t\tmesh.subMeshes[sm].material = bmMaterial;\n\t\t\t\t}\n\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\n\n\t\t\t\tthis._pFinalizeAsset(<IAsset> mesh);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Translates an obj's material group to a subgeometry.\n\t * @param materialGroup The material group data to convert.\n\t * @param geometry The Geometry to contain the converted SubGeometry.\n\t */\n\tprivate translateMaterialGroup(materialGroup:MaterialGroup, geometry:Geometry)\n\t{\n\t\tvar faces:Array<FaceData> = materialGroup.faces;\n\t\tvar face:FaceData;\n\t\tvar numFaces:number = faces.length;\n\t\tvar numVerts:number;\n\t\tvar sub:TriangleSubGeometry;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\t\tvar uvs:Array<number> = new Array<number>();\n\t\tvar normals:Array<number> = new Array<number>();\n\t\tvar indices:Array<number> /*uint*/ = new Array<number>();\n\n\t\tthis._realIndices = [];\n\t\tthis._vertexIndex = 0;\n\n\t\tvar j:number;\n\t\tfor (var i:number = 0; i < numFaces; ++i) {\n\n\t\t\tface = faces[i];\n\t\t\tnumVerts = face.indexIds.length - 1;\n\n\t\t\tfor (j = 1; j < numVerts; ++j) {\n\n\t\t\t\tthis.translateVertexData(face, j, vertices, uvs, indices, normals);\n\t\t\t\tthis.translateVertexData(face, 0, vertices, uvs, indices, normals);\n\t\t\t\tthis.translateVertexData(face, j + 1, vertices, uvs, indices, normals);\n\t\t\t}\n\t\t}\n\t\tif (vertices.length > 0) {\n\t\t\tsub = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\tsub.autoDeriveNormals = normals.length? false : true;\n\t\t\tsub.setIndices(indices);\n\t\t\tsub.setPositions(vertices);\n\t\t\tsub.setNormals(normals);\n\t\t\tsub.setUVs(uvs);\n\n\t\t\tgeometry.addSubGeometry(sub);\n\t\t}\n\t}\n\n\tprivate translateVertexData(face:FaceData, vertexIndex:number, vertices:Array<number>, uvs:Array<number>, indices:Array<number> /*uint*/, normals:Array<number>)\n\t{\n\t\tvar index:number;\n\t\tvar vertex:Vertex;\n\t\tvar vertexNormal:Vertex;\n\t\tvar uv:UV;\n\n\t\tif (!this._realIndices[face.indexIds[vertexIndex]]) {\n\n\t\t\tindex = this._vertexIndex;\n\t\t\tthis._realIndices[face.indexIds[vertexIndex]] = ++this._vertexIndex;\n\t\t\tvertex = this._vertices[face.vertexIndices[vertexIndex] - 1];\n\t\t\tvertices.push(vertex.x*this._scale, vertex.y*this._scale, vertex.z*this._scale);\n\n\t\t\tif (face.normalIndices.length > 0) {\n\t\t\t\tvertexNormal = this._vertexNormals[face.normalIndices[vertexIndex] - 1];\n\t\t\t\tnormals.push(vertexNormal.x, vertexNormal.y, vertexNormal.z);\n\t\t\t}\n\n\t\t\tif (face.uvIndices.length > 0) {\n\n\t\t\t\ttry {\n\t\t\t\t\tuv = this._uvs[face.uvIndices[vertexIndex] - 1];\n\t\t\t\t\tuvs.push(uv.u, uv.v);\n\n\t\t\t\t} catch (e) {\n\n\t\t\t\t\tswitch (vertexIndex) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tuvs.push(0, 1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tuvs.push(.5, 0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tuvs.push(1, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tindex = this._realIndices[face.indexIds[vertexIndex]] - 1;\n\t\t}\n\n\t\tindices.push(index);\n\t}\n\n\t/**\n\t * Creates a new object group.\n\t * @param trunk The data block containing the object tag and its parameters\n\t */\n\tprivate createObject(trunk)\n\t{\n\t\tthis._currentGroup = null;\n\t\tthis._currentMaterialGroup = null;\n\t\tthis._objects.push(this._currentObject = new ObjectGroup());\n\n\t\tif (trunk)\n\t\t\tthis._currentObject.name = trunk[1];\n\t}\n\n\t/**\n\t * Creates a new group.\n\t * @param trunk The data block containing the group tag and its parameters\n\t */\n\tprivate createGroup(trunk)\n\t{\n\t\tif (!this._currentObject)\n\t\t\tthis.createObject(null);\n\t\tthis._currentGroup = new Group();\n\n\t\tthis._currentGroup.materialID = this._activeMaterialID;\n\n\t\tif (trunk)\n\t\t\tthis._currentGroup.name = trunk[1];\n\t\tthis._currentObject.groups.push(this._currentGroup);\n\n\t\tthis.createMaterialGroup(null);\n\t}\n\n\t/**\n\t * Creates a new material group.\n\t * @param trunk The data block containing the material tag and its parameters\n\t */\n\tprivate createMaterialGroup(trunk)\n\t{\n\t\tthis._currentMaterialGroup = new MaterialGroup();\n\t\tif (trunk)\n\t\t\tthis._currentMaterialGroup.url = trunk[1];\n\t\tthis._currentGroup.materialGroups.push(this._currentMaterialGroup);\n\t}\n\n\t/**\n\t * Reads the next vertex coordinates.\n\t * @param trunk The data block containing the vertex tag and its parameters\n\t */\n\tprivate parseVertex(trunk)\n\t{\n\t\t//for the very rare cases of other delimiters/charcodes seen in some obj files\n\n\t\tvar v1:number, v2:number , v3:number;\n\t\tif (trunk.length > 4) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\n\t\t\tv1 = <number> nTrunk[0];\n\t\t\tv2 = <number> nTrunk[1];\n\t\t\tv3 = <number> -nTrunk[2];\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\n\n\t\t} else {\n\t\t\tv1 = <number> parseFloat(trunk[1]);\n\t\t\tv2 = <number> parseFloat(trunk[2]);\n\t\t\tv3 = <number> -parseFloat(trunk[3]);\n\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the next uv coordinates.\n\t * @param trunk The data block containing the uv tag and its parameters\n\t */\n\tprivate parseUV(trunk)\n\t{\n\t\tif (trunk.length > 3) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\t\t\tthis._uvs.push(new UV(nTrunk[0], 1 - nTrunk[1]));\n\n\t\t} else {\n\t\t\tthis._uvs.push(new UV(parseFloat(trunk[1]), 1 - parseFloat(trunk[2])));\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the next vertex normal coordinates.\n\t * @param trunk The data block containing the vertex normal tag and its parameters\n\t */\n\tprivate parseVertexNormal(trunk)\n\t{\n\t\tif (trunk.length > 4) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\t\t\tthis._vertexNormals.push(new Vertex(nTrunk[0], nTrunk[1], -nTrunk[2]));\n\n\t\t} else {\n\t\t\tthis._vertexNormals.push(new Vertex(parseFloat(trunk[1]), parseFloat(trunk[2]), -parseFloat(trunk[3])));\n\t\t}\n\t}\n\n\t/**\n\t * Reads the next face's indices.\n\t * @param trunk The data block containing the face tag and its parameters\n\t */\n\tprivate parseFace(trunk)\n\t{\n\t\tvar len:number = trunk.length;\n\t\tvar face:FaceData = new FaceData();\n\n\t\tif (!this._currentGroup) {\n\t\t\tthis.createGroup(null);\n\t\t}\n\n\t\tvar indices;\n\t\tfor (var i:number = 1; i < len; ++i) {\n\n\t\t\tif (trunk[i] == \"\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices = trunk[i].split(\"/\");\n\t\t\tface.vertexIndices.push(this.parseIndex(parseInt(indices[0]), this._vertices.length));\n\n\t\t\tif (indices[1] && String(indices[1]).length > 0)\n\t\t\t\tface.uvIndices.push(this.parseIndex(parseInt(indices[1]), this._uvs.length));\n\n\t\t\tif (indices[2] && String(indices[2]).length > 0)\n\t\t\t\tface.normalIndices.push(this.parseIndex(parseInt(indices[2]), this._vertexNormals.length));\n\n\t\t\tface.indexIds.push(trunk[i]);\n\t\t}\n\n\t\tthis._currentMaterialGroup.faces.push(face);\n\t}\n\n\t/**\n\t * This is a hack around negative face coords\n\t */\n\tprivate parseIndex(index:number, length:number):number\n\t{\n\t\tif (index < 0)\n\t\t\treturn index + length + 1; else\n\t\t\treturn index;\n\t}\n\n\tprivate parseMtl(data:string)\n\t{\n\t\tvar materialDefinitions = data.split('newmtl');\n\t\tvar lines;\n\t\tvar trunk;\n\t\tvar j:number;\n\n\t\tvar basicSpecularMethod:SpecularBasicMethod;\n\t\tvar useSpecular:boolean;\n\t\tvar useColor:boolean;\n\t\tvar diffuseColor:number;\n\t\tvar color:number;\n\t\tvar specularColor:number;\n\t\tvar specular:number;\n\t\tvar alpha:number;\n\t\tvar mapkd:string;\n\n\t\tfor (var i:number = 0; i < materialDefinitions.length; ++i) {\n\n\n\t\t\tlines = (materialDefinitions[i].split('\\r')).join(\"\").split('\\n');\n\t\t\t//lines = (materialDefinitions[i].split('\\r') as Array).join(\"\").split('\\n');\n\n\t\t\tif (lines.length == 1)\n\t\t\t\tlines = materialDefinitions[i].split(String.fromCharCode(13));\n\n\t\t\tdiffuseColor = color = specularColor = 0xFFFFFF;\n\t\t\tspecular = 0;\n\t\t\tuseSpecular = false;\n\t\t\tuseColor = false;\n\t\t\talpha = 1;\n\t\t\tmapkd = \"\";\n\n\t\t\tfor (j = 0; j < lines.length; ++j) {\n\n\t\t\t\tlines[j] = lines[j].replace(/\\s+$/, \"\");\n\n\t\t\t\tif (lines[j].substring(0, 1) != \"#\" && (j == 0 || lines[j] != \"\")) {\n\t\t\t\t\ttrunk = lines[j].split(\" \");\n\n\t\t\t\t\tif (String(trunk[0]).charCodeAt(0) == 9 || String(trunk[0]).charCodeAt(0) == 32)\n\t\t\t\t\t\ttrunk[0] = trunk[0].substring(1, trunk[0].length);\n\n\t\t\t\t\tif (j == 0) {\n\t\t\t\t\t\tthis._lastMtlID = trunk.join(\"\");\n\t\t\t\t\t\tthis._lastMtlID = (this._lastMtlID == \"\")? \"def000\" : this._lastMtlID;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tswitch (trunk[0]) {\n\n\t\t\t\t\t\t\tcase \"Ka\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3])))\n\t\t\t\t\t\t\t\t\tcolor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Ks\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\n\t\t\t\t\t\t\t\t\tspecularColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\t\tuseSpecular = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Ns\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\n\t\t\t\t\t\t\t\t\tspecular = Number(trunk[1])*0.001;\n\t\t\t\t\t\t\t\tif (specular == 0)\n\t\t\t\t\t\t\t\t\tuseSpecular = false;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Kd\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\n\t\t\t\t\t\t\t\t\tdiffuseColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\t\tuseColor = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"tr\":\n\t\t\t\t\t\t\tcase \"d\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\n\t\t\t\t\t\t\t\t\talpha = Number(trunk[1]);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"map_Kd\":\n\t\t\t\t\t\t\t\tmapkd = this.parseMapKdString(trunk);\n\t\t\t\t\t\t\t\tmapkd = mapkd.replace(/\\\\/g, \"/\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mapkd != \"\") {\n\n\t\t\t\tif (useSpecular) {\n\n\t\t\t\t\tbasicSpecularMethod = new SpecularBasicMethod();\n\t\t\t\t\tbasicSpecularMethod.specularColor = specularColor;\n\t\t\t\t\tbasicSpecularMethod.specular = specular;\n\n\t\t\t\t\tvar specularData:SpecularData = new SpecularData();\n\t\t\t\t\tspecularData.alpha = alpha;\n\t\t\t\t\tspecularData.basicSpecularMethod = basicSpecularMethod;\n\t\t\t\t\tspecularData.materialID = this._lastMtlID;\n\n\t\t\t\t\tif (!this._materialSpecularData)\n\t\t\t\t\t\tthis._materialSpecularData = new Array<SpecularData>();\n\n\t\t\t\t\tthis._materialSpecularData.push(specularData);\n\n\t\t\t\t}\n\n\t\t\t\tthis._pAddDependency(this._lastMtlID, new URLRequest(mapkd));\n\n\t\t\t} else if (useColor && !isNaN(color)) {\n\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\t\tlm.materialID = this._lastMtlID;\n\n\t\t\t\tif (alpha == 0)\n\t\t\t\t\tconsole.log(\"Warning: an alpha value of 0 was found in mtl color tag (Tr or d) ref:\" + this._lastMtlID + \", mesh(es) using it will be invisible!\");\n\n\t\t\t\tvar cm:MethodMaterial;\n\n\t\t\t\tif (this.materialMode < 2) {\n\t\t\t\t\tcm = new MethodMaterial(color);\n\n\t\t\t\t\tvar colorMat:MethodMaterial = <MethodMaterial> cm;\n\n\t\t\t\t\tcolorMat.alpha = alpha;\n\t\t\t\t\tcolorMat.diffuseColor = diffuseColor;\n\t\t\t\t\tcolorMat.repeat = true;\n\n\t\t\t\t\tif (useSpecular) {\n\t\t\t\t\t\tcolorMat.specularColor = specularColor;\n\t\t\t\t\t\tcolorMat.specular = specular;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tcm = new MethodMaterial(color);\n\t\t\t\t\tcm.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\t\tvar colorMultiMat:MethodMaterial = <MethodMaterial> cm;\n\n\n\t\t\t\t\tcolorMultiMat.diffuseColor = diffuseColor;\n\t\t\t\t\tcolorMultiMat.repeat = true;\n\n\t\t\t\t\tif (useSpecular) {\n\t\t\t\t\t\tcolorMultiMat.specularColor = specularColor;\n\t\t\t\t\t\tcolorMultiMat.specular = specular;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlm.cm = cm;\n\n\t\t\t\tthis._materialLoaded.push(lm);\n\n\t\t\t\tif (this._meshes.length > 0)\n\t\t\t\t\tthis.applyMaterial(lm);\n\n\t\t\t}\n\t\t}\n\n\t\tthis._mtlLibLoaded = true;\n\t}\n\n\tprivate parseMapKdString(trunk):string\n\t{\n\t\tvar url:string = \"\";\n\t\tvar i:number;\n\t\tvar breakflag:boolean;\n\n\t\tfor (i = 1; i < trunk.length;) {\n\t\t\tswitch (trunk[i]) {\n\t\t\t\tcase \"-blendu\":\n\t\t\t\tcase \"-blendv\":\n\t\t\t\tcase \"-cc\":\n\t\t\t\tcase \"-clamp\":\n\t\t\t\tcase \"-texres\":\n\t\t\t\t\ti += 2; //Skip ahead 1 attribute\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"-mm\":\n\t\t\t\t\ti += 3; //Skip ahead 2 attributes\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"-o\":\n\t\t\t\tcase \"-s\":\n\t\t\t\tcase \"-t\":\n\t\t\t\t\ti += 4; //Skip ahead 3 attributes\n\t\t\t\t\tcontinue;\n\t\t\t\tdefault:\n\t\t\t\t\tbreakflag = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (breakflag)\n\t\t\t\tbreak;\n\t\t}\n\n\t\t//Reconstruct URL/filename\n\t\tfor (i; i < trunk.length; i++) {\n\t\t\turl += trunk[i];\n\t\t\turl += \" \";\n\t\t}\n\n\t\t//Remove the extraneous space and/or newline from the right side\n\t\turl = url.replace(/\\s+$/, \"\");\n\n\t\treturn url;\n\t}\n\n\tprivate loadMtl(mtlurl:string)\n\t{\n\t\t// Add raw-data dependency to queue and load dependencies now,\n\t\t// which will pause the parsing in the meantime.\n\t\tthis._pAddDependency('mtl', new URLRequest(mtlurl), true);\n\t\tthis._pPauseAndRetrieveDependencies();//\n\t}\n\n\tprivate applyMaterial(lm:LoadedMaterial)\n\t{\n\t\tvar decomposeID;\n\t\tvar mesh:Mesh;\n\t\tvar tm:MethodMaterial;\n\t\tvar j:number;\n\t\tvar specularData:SpecularData;\n\n\t\tfor (var i:number = 0; i < this._meshes.length; ++i) {\n\t\t\tmesh = this._meshes[i];\n\t\t\tdecomposeID = mesh.material.name.split(\"~\");\n\n\t\t\tif (decomposeID[0] == lm.materialID) {\n\n\t\t\t\tif (lm.cm) {\n\t\t\t\t\tif (mesh.material)\n\t\t\t\t\t\tmesh.material = null;\n\t\t\t\t\tmesh.material = lm.cm;\n\n\t\t\t\t} else if (lm.texture) {\n\t\t\t\t\tif (this.materialMode < 2) { // if materialMode is 0 or 1, we create a SinglePass\n\t\t\t\t\t\ttm = <MethodMaterial > mesh.material;\n\n\t\t\t\t\t\ttm.texture = lm.texture;\n\t\t\t\t\t\ttm.color = lm.color;\n\t\t\t\t\t\ttm.alpha = lm.alpha;\n\t\t\t\t\t\ttm.repeat = true;\n\n\t\t\t\t\t\tif (lm.specularMethod) {\n\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\n\t\t\t\t\t\t\ttm.specularMethod = null;\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\n\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\n\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\n\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\n\t\t\t\t\t\t\t\t\ttm.alpha = specularData.alpha;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { //if materialMode==2 this is a MultiPassTexture\n\t\t\t\t\t\ttm = <MethodMaterial> mesh.material;\n\t\t\t\t\t\ttm.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\t\t\ttm.texture = lm.texture;\n\t\t\t\t\t\ttm.color = lm.color;\n\t\t\t\t\t\ttm.repeat = true;\n\n\t\t\t\t\t\tif (lm.specularMethod) {\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\n\t\t\t\t\t\t\ttm.specularMethod = null;\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\n\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmesh.material.name = decomposeID[1]? decomposeID[1] : decomposeID[0];\n\t\t\t\tthis._meshes.splice(i, 1);\n\t\t\t\t--i;\n\t\t\t}\n\t\t}\n\n\t\tif (lm.cm || tm)\n\t\t\tthis._pFinalizeAsset(lm.cm || tm);\n\t}\n\n\tprivate applyMaterials()\n\t{\n\t\tif (this._materialLoaded.length == 0)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._materialLoaded.length; ++i)\n\t\t\tthis.applyMaterial(this._materialLoaded[i]);\n\t}\n}\n\nexport = OBJParser;\n\nclass ObjectGroup\n{\n\tpublic name:string;\n\tpublic groups:Group[] = new Array<Group>();\n}\n\nclass Group\n{\n\tpublic name:string;\n\tpublic materialID:string;\n\tpublic materialGroups:MaterialGroup[] = new Array<MaterialGroup>();\n}\n\nclass MaterialGroup\n{\n\tpublic url:string;\n\tpublic faces:FaceData[] = new Array<FaceData>();\n}\n\nclass SpecularData\n{\n\tpublic materialID:string;\n\tpublic basicSpecularMethod:SpecularBasicMethod;\n\tpublic color:number = 0xFFFFFF;\n\tpublic alpha:number = 1;\n}\n\nclass LoadedMaterial\n{\n\tpublic materialID:string;\n\tpublic texture:Single2DTexture;\n\tpublic cm:MaterialBase;\n\tpublic specularMethod:SpecularBasicMethod;\n\tpublic color:number = 0xFFFFFF;\n\tpublic alpha:number = 1;\n}\n\nclass FaceData\n{\n\tpublic vertexIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic uvIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic normalIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic indexIds:string[] = new Array<string>(); // used for real index lookups\n}\n\n/**\n* Texture coordinates value object.\n*/\nclass UV\n{\n\tprivate _u:number;\n\tprivate _v:number;\n\n\t/**\n\t * Creates a new <code>UV</code> object.\n\t *\n\t * @param    u        [optional]    The horizontal coordinate of the texture value. Defaults to 0.\n\t * @param    v        [optional]    The vertical coordinate of the texture value. Defaults to 0.\n\t */\n\tconstructor(u:number = 0, v:number = 0)\n\t{\n\t\tthis._u = u;\n\t\tthis._v = v;\n\t}\n\n\t/**\n\t * Defines the vertical coordinate of the texture value.\n\t */\n\tpublic get v():number\n\t{\n\t\treturn this._v;\n\t}\n\n\tpublic set v(value:number)\n\t{\n\t\tthis._v = value;\n\t}\n\n\t/**\n\t * Defines the horizontal coordinate of the texture value.\n\t */\n\tpublic get u():number\n\t{\n\t\treturn this._u;\n\t}\n\n\tpublic set u(value:number)\n\t{\n\t\tthis._u = value;\n\t}\n\n\t/**\n\t * returns a new UV value Object\n\t */\n\tpublic clone():UV\n\t{\n\t\treturn new UV(this._u, this._v);\n\t}\n\n\t/**\n\t * returns the value object as a string for trace/debug purpose\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._u + \",\" + this._v;\n\t}\n}\n\nclass Vertex\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _z:number;\n\tprivate _index:number;\n\n\t/**\n\t * Creates a new <code>Vertex</code> value object.\n\t *\n\t * @param    x            [optional]    The x value. Defaults to 0.\n\t * @param    y            [optional]    The y value. Defaults to 0.\n\t * @param    z            [optional]    The z value. Defaults to 0.\n\t * @param    index        [optional]    The index value. Defaults is NaN.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, index:number = 0)\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._index = index;\n\t}\n\n\t/**\n\t * To define/store the index of value object\n\t * @param    ind        The index\n\t */\n\tpublic set index(ind:number)\n\t{\n\t\tthis._index = ind;\n\t}\n\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n\n\t/**\n\t * To define/store the x value of the value object\n\t * @param    value        The x value\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tthis._x = value;\n\t}\n\n\t/**\n\t * To define/store the y value of the value object\n\t * @param    value        The y value\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tthis._y = value;\n\t}\n\n\t/**\n\t * To define/store the z value of the value object\n\t * @param    value        The z value\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(value:number)\n\t{\n\t\tthis._z = value;\n\t}\n\n\t/**\n\t * returns a new Vertex value Object\n\t */\n\tpublic clone():Vertex\n\t{\n\t\treturn new Vertex(this._x, this._y, this._z);\n\t}\n}",
    "import LoaderSession\t\t\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\n\nimport AWDParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWDParser\");\nimport Max3DSParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/Max3DSParser\");\nimport MD2Parser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/MD2Parser\");\nimport OBJParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/OBJParser\");\n\n/**\n *\n */\nclass Parsers\n{\n\t/**\n\t * A list of all parsers that come bundled with Away3D. Use this to quickly\n\t * enable support for all bundled parsers to the file format auto-detection\n\t * feature, using any of the enableParsers() methods on loaders, e.g.:\n\t *\n\t * <code>AssetLibrary.enableParsers(Parsers.ALL_BUNDLED);</code>\n\t *\n\t * Beware however that this requires all parser classes to be included in the\n\t * SWF file, which will add 50-100 kb to the file. When only a limited set of\n\t * file formats are used, SWF file size can be saved by adding the parsers\n\t * individually using AssetLibrary.enableParser()\n\t *\n\t * A third way is to specify a parser for each loaded file, thereby bypassing\n\t * the auto-detection mechanisms altogether, while at the same time allowing\n\t * any properties that are unique to that parser to be set for that load.\n\t *\n\t * The bundled parsers are:\n\t *\n\t * <ul>\n\t * <li>AC3D (.ac)</li>\n\t * <li>Away Data version 1 ASCII and version 2 binary (.awd). AWD1 BSP unsupported</li>\n\t * <li>3DMax (.3ds)</li>\n\t * <li>DXF (.dxf)</li>\n\t * <li>Quake 2 MD2 models (.md2)</li>\n\t * <li>Doom 3 MD5 animation clips (.md5anim)</li>\n\t * <li>Doom 3 MD5 meshes (.md5mesh)</li>\n\t * <li>Wavefront OBJ (.obj)</li>\n\t * <li>Collada (.dae)</li>\n\t * <li>Images (.jpg, .png)</li>\n\t * </ul>\n\t *\n\t * @see away.library.AssetLibrary.enableParser\n\t */\n\tpublic static ALL_BUNDLED:Array<Object> = Array<Object>(AWDParser, Max3DSParser, MD2Parser, OBJParser);\n\n\t/**\n\t * Short-hand function to enable all bundled parsers for auto-detection. In practice,\n\t * this is the same as invoking enableParsers(Parsers.ALL_BUNDLED) on any of the\n\t * loader classes SingleFileLoader, LoaderSession, AssetLibrary or Loader3D.\n\t *\n\t * See notes about file size in the documentation for the ALL_BUNDLED constant.\n\t *\n\t * @see away.parsers.Parsers.ALL_BUNDLED\n\t */\n\tpublic static enableAllBundled():void\n\t{\n\t\tLoaderSession.enableParsers(Parsers.ALL_BUNDLED);\n\t}\n}\n\nexport = Parsers;"
  ],
  "sourceRoot": ""
}