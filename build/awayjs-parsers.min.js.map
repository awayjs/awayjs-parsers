{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase.ts",
    "awayjs-parsers.js",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/BitmapTextureAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/CubeTextureAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBlock.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDProperties.ts",
    "awayjs-parsers/lib/AWD3Parser.ts",
    "awayjs-parsers/lib/AWDParser.ts",
    "awayjs-parsers/lib/MD2Parser.ts",
    "awayjs-parsers/lib/MD5AnimParser.ts",
    "awayjs-parsers/lib/MD5MeshParser.ts",
    "awayjs-parsers/lib/Max3DSParser.ts",
    "awayjs-parsers/lib/OBJParser.ts",
    "awayjs-parsers/lib/Parsers.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase",
    "module",
    "AbstractMethodError",
    "AWDAssetParserBase",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "this",
    "_awd_file_data",
    "set",
    "awd_file_data",
    "enumerable",
    "configurable",
    "parseFromBytes",
    "awayjs-core/lib/errors/AbstractMethodError",
    "undefined",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers",
    "GeometryAWDParser",
    "PrefabAWDParser",
    "DisplayObjectContainerAWDParser",
    "MeshAWDParser",
    "BillboardAWDParser",
    "BitmapTextureAWDParser",
    "CameraAWDParser",
    "CubeTextureAWDParser",
    "LightAWDParser",
    "LightPickerAWDParser",
    "MaterialAWDParser",
    "MovieClipAWDParser",
    "ShadowMethodAWDParser",
    "SharedMethodAWDParser",
    "SkeletonAnimClipAWDParser",
    "SkeletonAWDParser",
    "SkeletonPoseAWDParser",
    "SkyboxAWDParser",
    "TesselatedFontAWDParser",
    "TextfieldAWDParser",
    "TextformatAWDParser",
    "VertexAnimationSetAWDParser",
    "VertexAnimClipAWDParser",
    "CommandAWDParser",
    "MetadataAWDParser",
    "BlockNameSpaceAWDParser",
    "AnimatorAWDParser",
    "AudioAWDParser",
    "AWDBlockParsers",
    "_supported_asset_blocks",
    "_all_block_parsers",
    "Array",
    "add_block_parser",
    "block_parser",
    "block_types",
    "push",
    "init_parser",
    "file_data",
    "parseAsset",
    "type",
    "this_parser",
    "awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/BitmapTextureAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/CubeTextureAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser",
    "__extends",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "AWDBlockParserBase",
    "VertexAnimator",
    "SkeletonAnimator",
    "AWD3Utils",
    "_super",
    "animSetBlockAdress",
    "targetAnimationSet",
    "cur_block",
    "name",
    "parseVarStr",
    "newBlockBytes",
    "readUnsignedShort",
    "props",
    "parseProperties",
    1,
    "BADDR",
    "readUnsignedInt",
    "targetMeshLength",
    "meshAdresses",
    "activeState",
    "autoplay",
    "readUnsignedByte",
    "parseUserAttributes",
    "returnedArray",
    "targetMeshes",
    "targetMesh",
    "getAssetByID",
    "thisAnimator",
    "skeleton",
    "animator",
    "data",
    "debug",
    "console",
    "log",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "ByteArray",
    "data_len",
    "url",
    "readUTFBytes",
    "dependencies_urls",
    "readBytes",
    "dependencies_data",
    "state",
    "BLOCKSTATE_LOAD_DEPENDENICES",
    "audioStylesNames",
    "awayjs-core/lib/utils/ByteArray",
    "Billboard",
    "BasicMaterial",
    "data_id",
    "mat",
    "bothSides",
    "billboard",
    "extra",
    "awayjs-display/lib/entities/Billboard",
    "awayjs-display/lib/materials/BasicMaterial",
    "asset",
    "textureStylesNames",
    "BLOCKSTATE_NO_ASSET",
    "id",
    "nameSpaceString",
    "Camera",
    "PerspectiveProjection",
    "OrthographicProjection",
    "OrthographicOffCenterProjection",
    "Vector3D",
    "CameraAWD3Parser",
    "par_id",
    "mtx",
    "parseMatrix3D",
    "parentName",
    "projection",
    "readShort",
    "projectiontype",
    101,
    "propsNrType",
    102,
    103,
    104,
    "camera",
    "transform",
    "matrix3D",
    "parent",
    "addChild",
    "matrixNrType",
    2,
    3,
    4,
    "UINT8",
    "pivot",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "awayjs-core/lib/projections/OrthographicProjection",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/Camera",
    "hasBlocks",
    "parentObject",
    "targetObject",
    "numCommands",
    "typeCommand",
    "targetID",
    "DisplayObjectContainer",
    "ctr",
    "major_version",
    "minor_version",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "Geometry",
    "CurveSubGeometry",
    "TriangleSubGeometry",
    "geom",
    "num_subs",
    "geoNrType",
    "geoScaleU",
    "geoScaleV",
    "subs_parsed",
    "is_curve_geom",
    "sm_len",
    "sm_end",
    "w_indices",
    "weights",
    "position",
    "subProps",
    "idx",
    "str_ftype",
    "str_type",
    "str_len",
    "str_end",
    "x",
    "y",
    "z",
    "verts",
    "readNumber",
    "accuracyGeo",
    "indices",
    "uvs",
    "normals",
    "idx_pos",
    "idx_curves",
    "idx_uvs",
    "positions",
    "curveData",
    "curve_sub_geom",
    "updateIndices",
    "updatePositions",
    "updateCurves",
    "updateUVs",
    "addSubGeometry",
    "triangle_sub_geom",
    "jointsPerVertex",
    "autoDeriveNormals",
    "autoDeriveUVs",
    "autoDeriveTangents",
    "updateVertexNormals",
    "updateVertexTangents",
    "updateJointWeights",
    "updateJointIndices",
    "scaleU",
    "scaleV",
    "setSubUVs",
    "scaleUV",
    "awayjs-core/lib/data/CurveSubGeometry",
    "awayjs-core/lib/data/Geometry",
    "awayjs-core/lib/data/TriangleSubGeometry",
    "CubeMapShadowMapper",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "PointLight",
    "light",
    "newShadowMapper",
    "lightType",
    "COLOR",
    5,
    6,
    "BOOL",
    7,
    8,
    9,
    10,
    11,
    12,
    "UINT16",
    21,
    22,
    23,
    "shadowMapperType",
    "lightTypes",
    "shadowMapperTypes",
    "radius",
    "fallOff",
    "color",
    "specular",
    "diffuse",
    "ambientColor",
    "ambient",
    "depthMapSize",
    "getDepthSizeFromEnum",
    "shadowMapper",
    "castsShadows",
    "awayjs-display/lib/entities/DirectionalLight",
    "awayjs-display/lib/entities/PointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "StaticLightPicker",
    "numLights",
    "lightsArray",
    "k",
    "lightID",
    "returnedArrayLight",
    "lightsArrayNames",
    "lightPicker",
    "toString",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "MethodMaterialMode",
    "MethodMaterial",
    "CurveMaterial",
    "DefaultMaterialManager",
    "AmbientEnvMapMethod",
    "DiffuseDepthMethod",
    "DiffuseCelMethod",
    "DiffuseGradientMethod",
    "DiffuseLightMapMethod",
    "DiffuseWrapMethod",
    "NormalSimpleWaterMethod",
    "SpecularFresnelMethod",
    "SpecularAnisotropicMethod",
    "SpecularCelMethod",
    "SpecularPhongMethod",
    "attributes",
    "finalize",
    "num_methods",
    "methods_parsed",
    "normalTexture",
    "specTexture",
    "INT32",
    13,
    "method_type",
    "debugString",
    "tex_addr",
    "texture",
    "getDefaultTexture",
    "alphaThreshold",
    "repeat",
    "UINT32",
    15,
    16,
    17,
    18,
    19,
    20,
    "spezialType",
    "mode",
    "MULTI_PASS",
    "alphaBlending",
    "diftexture",
    "alpha",
    "diffuseTex_addr",
    "diffuseTexture",
    "normalTex_addr",
    "specTex_addr",
    "lightPickerAddr",
    "smooth",
    "mipmap",
    "alphaPremultiplied",
    "blendMode",
    "getBlendModeStringFromEnum",
    "normalMap",
    "specularMap",
    "diffuseColor",
    "gloss",
    "specularColor",
    201,
    202,
    301,
    302,
    401,
    402,
    601,
    602,
    701,
    702,
    801,
    "MTX4x4",
    "fx_method",
    "addEffectMethod",
    "shadow_method",
    "shadowMethod",
    "cubeTex",
    "getDefaultCubeTexture",
    "ambientMethod",
    "diffuseMethod",
    "thisTex",
    "smoothness",
    "specularMethod",
    "fresnelPower",
    "normalReflectance",
    "normalMethod",
    "curve_mat",
    "preserveAlpha",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-display/lib/materials/CurveMaterial",
    "awayjs-methodmaterials/lib/MethodMaterial",
    "awayjs-methodmaterials/lib/MethodMaterialMode",
    "awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseCelMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseDepthMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseGradientMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseWrapMethod",
    "awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod",
    "awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod",
    "awayjs-methodmaterials/lib/methods/SpecularCelMethod",
    "awayjs-methodmaterials/lib/methods/SpecularFresnelMethod",
    "awayjs-methodmaterials/lib/methods/SpecularPhongMethod",
    "Mesh",
    "num_materials",
    "materials_parsed",
    "geoID",
    "materials",
    "materialNames",
    "mat_id",
    "m",
    "mesh",
    "subMeshes",
    "material",
    "Math",
    "min",
    "awayjs-display/lib/entities/Mesh",
    "AWDSTRING",
    "AWDBitFlags",
    "ColorTransform",
    "Matrix3D",
    "TimelineKeyFrame",
    "AddChildAtDepthCommand",
    "ApplyAS2DepthsCommand",
    "ExecuteScriptCommand",
    "RemoveChildrenAtDepthCommand",
    "SetInstanceNameCommand",
    "UpdatePropertyCommand",
    "SetMaskCommand",
    "TextField",
    "AS2SceneGraphFactory",
    "factory",
    "j",
    "c",
    "new_mc",
    "createMovieClip",
    "isScene",
    "sceneID",
    "fps",
    "readFloat",
    "ms_per_frame",
    "num_instances",
    "num_all_display_instances",
    "num_potential_childs",
    "resourceID",
    "cmd_asset",
    "registerPotentialChild",
    "num_potential_childs_multi_instanced",
    "num_potential_sounds",
    "numFrames",
    "totalDuration",
    "frameDuration",
    "numLabels",
    "objectID",
    "target_depth",
    "number_of_obj",
    "commandType",
    "frame",
    "label",
    "hasDepthChanges",
    "setFrameTime",
    "remove_depths",
    "addConstructCommand",
    "potChild",
    "getPotentialChild",
    "isAsset",
    "props_flag",
    "test",
    "FLAG1",
    "thisMatrix",
    "FLAG2",
    "rawData",
    "FLAG3",
    "thisColorTransform",
    "FLAG4",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "FLAG5",
    "blendmode_int",
    "blendmode_string",
    "FLAG6",
    "readByte",
    "FLAG7",
    "instanceName",
    "FLAG8",
    "mask_id_nums",
    "mask_ids",
    "mi_cnt",
    "length_code",
    "frame_code",
    "addFrame",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-display/lib/entities/TextField",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags",
    "awayjs-player/lib/factories/AS2SceneGraphFactory",
    "awayjs-player/lib/timeline/TimelineKeyFrame",
    "awayjs-player/lib/timeline/commands/AddChildAtDepthCommand",
    "awayjs-player/lib/timeline/commands/ApplyAS2DepthsCommand",
    "awayjs-player/lib/timeline/commands/ExecuteScriptCommand",
    "awayjs-player/lib/timeline/commands/RemoveChildrenAtDepthCommand",
    "awayjs-player/lib/timeline/commands/SetInstanceNameCommand",
    "awayjs-player/lib/timeline/commands/SetMaskCommand",
    "awayjs-player/lib/timeline/commands/UpdatePropertyCommand",
    "PrefabBase",
    "PrimitiveCapsulePrefab",
    "PrimitiveConePrefab",
    "PrimitiveCubePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitivePlanePrefab",
    "PrimitiveSpherePrefab",
    "PrimitiveTorusPrefab",
    "prefab",
    "primType",
    "bsm",
    110,
    111,
    303,
    703,
    704,
    "primitiveTypes",
    "topClosed",
    "bottomClosed",
    "yUp",
    "awayjs-display/lib/prefabs/PrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "ShadowDitheredMethod",
    "ShadowFilteredMethod",
    "ShadowHardMethod",
    "ShadowNearMethod",
    "ShadowSoftMethod",
    "shadowLightID",
    "parseShadowMethodList",
    "methodType",
    "shadow_meth",
    "epsilon",
    "range",
    "awayjs-methodmaterials/lib/methods/ShadowDitheredMethod",
    "awayjs-methodmaterials/lib/methods/ShadowFilteredMethod",
    "awayjs-methodmaterials/lib/methods/ShadowHardMethod",
    "awayjs-methodmaterials/lib/methods/ShadowNearMethod",
    "awayjs-methodmaterials/lib/methods/ShadowSoftMethod",
    "EffectColorMatrixMethod",
    "EffectColorTransformMethod",
    "EffectFogMethod",
    "EffectRimLightMethod",
    "parseSharedMethodList",
    "effectMethodReturn",
    105,
    106,
    107,
    "offCol",
    "colorTransform",
    "awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod",
    "awayjs-methodmaterials/lib/methods/EffectColorTransformMethod",
    "awayjs-methodmaterials/lib/methods/EffectFogMethod",
    "awayjs-methodmaterials/lib/methods/EffectRimLightMethod",
    "Skeleton",
    "SkeletonJoint",
    "num_joints",
    "joints_parsed",
    "joint",
    "ibp",
    "parentIndex",
    "inverseBindPose",
    "joints",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonClipNode",
    "frame_dur",
    "pose_addr",
    "clip",
    "num_frames",
    "frames_parsed",
    "skel_pose",
    "frames",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "SkeletonPose",
    "JointPose",
    "pose",
    "joint_pose",
    "has_transform",
    "mtx_data",
    "parseMatrix43RawData",
    "orientation",
    "fromMatrix",
    "translation",
    "copyFrom",
    "jointPoses",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "Skybox",
    "cubeTexAddr",
    "cube_tex",
    "new_skybox",
    "awayjs-display/lib/entities/Skybox",
    "Font",
    "new_font",
    "font_style_cnt",
    "font_style_name",
    "new_font_style",
    "get_font_table",
    "set_font_em_size",
    "font_style_char_cnt",
    "font_style_char",
    "set_subgeo_for_char",
    "awayjs-display/lib/text/Font",
    "TextFormat",
    "newTextField",
    "createTextField",
    "text_field_type",
    "displayAsPassword",
    "width",
    "height",
    "num_paragraphs",
    "complete_text",
    "text_format",
    "paracnt",
    "num_textruns",
    "textrun_cnt",
    "format_id",
    "textFormat",
    "txt_length",
    "this_txt",
    "text",
    "selectable",
    "border",
    "awayjs-display/lib/text/TextFormat",
    "newTextFormat",
    "font_id",
    "font",
    "font_name",
    "font_table",
    "font_style",
    "num_uv_values",
    "uv_values",
    "uvcnt",
    "uv_value",
    "format_props",
    "size",
    "letterSpacing",
    "kerning",
    "indent",
    "leftMargin",
    "rightMargin",
    "VertexClipNode",
    "poseOnly",
    "num_submeshes",
    "subMeshParsed",
    "geometry",
    "subGeom",
    "num_Streams",
    "streamsParsed",
    "streamtypes",
    "thisGeo",
    "geoAdress",
    "getUVForVertexAnimation",
    "looping",
    "stitchFinalFrame",
    "subGeometries",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexAnimationSet",
    "SkeletonAnimationSet",
    "poseBlockAdress",
    "skeletonFrames",
    "vertexFrames",
    "animNode",
    "newVertexAnimationSet",
    "addAnimation",
    "animations",
    "animationNames",
    "newSkeletonAnimationSet",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData",
    "BlendMode",
    "BitmapCubeTexture",
    "TextureBase",
    "MaterialBase",
    "AWDProperties",
    "AWDBlock",
    "AWD3FileData",
    "_debug",
    "_accuracyOnBlocks",
    "_blocks",
    "_cur_block",
    "blendModeDic",
    "NORMAL",
    "ADD",
    "ALPHA",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "_depthSizeDic",
    "depthSize",
    "blendmode",
    "dispose",
    "_accuracyMatrix",
    "new_accuracyMatrix",
    "_accuracyProps",
    "new_accuracyProps",
    "_accuracyGeo",
    "new_accuracyGeo",
    "_matrixNrType",
    "newmatrixNrType",
    "_propsNrType",
    "new_props_nr",
    "_geoNrType",
    "new_geoNrType",
    "_newBlockBytes",
    "new_newBlockBytes",
    "create_new_block",
    "new_block",
    "block_cnt",
    "list_len",
    "attibuteCnt",
    "list_end",
    "ns_id",
    "attr_key",
    "attr_type",
    "attr_len",
    "attr_val",
    "INT8",
    "INT16",
    "readInt",
    "FLOAT32",
    "FLOAT64",
    "readDouble",
    "expected",
    "propertyCnt",
    "len",
    "key",
    "parseAttrValue",
    "elem_len",
    "read_func",
    "VECTOR2x1",
    "VECTOR3x1",
    "VECTOR4x1",
    "MTX3x2",
    "MTX3x3",
    "MTX4x3",
    "list",
    "num_read",
    "num_elems",
    "apply",
    "val",
    "meshID",
    "uvsForVertexAnimation",
    "geoCnt",
    "ud",
    "uStride",
    "uOffs",
    "numPoints",
    "newUvs",
    "sub_geom",
    "numVertices",
    "getStride",
    "UV_DATA",
    "getOffset",
    "getBlockByID",
    "assetID",
    "getDefaultAsset",
    "assetType",
    "extraTypeInfo",
    "getDefaultMaterial",
    "_defaultCubeTexture",
    "defaultBitmap",
    "createCheckeredBitmapData",
    "precision",
    "parseMatrix32RawData",
    "mtx_raw",
    "isNaN",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-core/lib/textures/BitmapCubeTexture",
    "awayjs-core/lib/textures/TextureBase",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBlock",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDProperties",
    "BLOCKSTATE_FINALIZE",
    "BLOCKSTATE_INVALID",
    "COMPRESSIONMODE_LZMA",
    "UNCOMPRESSED",
    "DEFLATE",
    "LZMA",
    "AWDBYTEARRAY",
    "flags",
    "testFlag",
    "FLAG9",
    "FLAG10",
    "FLAG11",
    "FLAG12",
    "FLAG13",
    "FLAG14",
    "FLAG15",
    "FLAG16",
    "this_id",
    "this_type",
    "loaded_dependencies",
    "loaded_dependencies_cnt",
    "bytes",
    "errorMessages",
    "addError",
    "errorMsg",
    "value",
    "fallback",
    "awayjs-parsers/lib/AWD3Parser",
    "URLLoaderDataFormat",
    "URLRequest",
    "ParserBase",
    "ParserUtils",
    "ImageCubeTexture",
    "DisplayObject",
    "AWDAssetParsers",
    "AWD3Parser",
    "ARRAY_BUFFER",
    "_startedParsing",
    "_parsed_header",
    "total_time",
    "geom_time",
    "timeline_time",
    "_block_parser",
    "_awd_data",
    "supportsType",
    "extension",
    "toLowerCase",
    "supportsData",
    "_iResolveDependency",
    "resourceDependency",
    "assets",
    "this_block",
    "parseInt",
    "testure_asset",
    "_pFinalizeAsset",
    "sub_id",
    "posX",
    "negX",
    "posY",
    "negY",
    "posZ",
    "negZ",
    "cube_tex_asset",
    "_iResolveDependencyFailure",
    "_iResolveDependencyName",
    "oldName",
    "block",
    "resetAssetPath",
    "newName",
    "_pProceedParsing",
    "_byteData",
    "_pGetByteData",
    "parseHeader",
    "_compression",
    "_pDieWithError",
    "_body",
    "getBytesAvailable",
    "parsingPaused",
    "parseNextBlock",
    "PARSING_DONE",
    "MORE_TO_PARSE",
    "_pStartParsing",
    "frameLimit",
    "_pContent",
    "block_id",
    "ns",
    "block_type",
    "blockCompression",
    "blockCompressionLZMA",
    "accuracyOnBlocks",
    "accuracyMatrix",
    "accuracyProps",
    "blockEndAll",
    "time_start",
    "performance",
    "now",
    "_pAddDependency",
    "byteArrayToImage",
    "_pPauseAndRetrieveDependencies",
    "time_end",
    "thisTime",
    "body_len",
    "_streaming",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/net/URLRequest",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-core/lib/textures/ImageCubeTexture",
    "awayjs-display/lib/base/DisplayObject",
    "awayjs-parsers/lib/AWDParser",
    "ImageTexture",
    "AnimationNodeBase",
    "LightBase",
    "LightPickerBase",
    "AnimationSetBase",
    "EffectAlphaMaskMethod",
    "EffectEnvMapMethod",
    "EffectFresnelEnvMapMethod",
    "EffectLightMapMethod",
    "EffectMethodBase",
    "ShadowMapMethodBase",
    "AWDParser",
    "_texture_users",
    "_version",
    "isCubeTextureArray",
    "split",
    "ressourceID",
    "thisBitmapTexture",
    "users",
    "tx",
    "_cubeTextures",
    "htmlImageElement",
    "assetData",
    "isParsed",
    "_cur_block_id",
    "BitFlags",
    "blockEndBlock",
    "parseMeshLibraryBlock",
    "parseBillBoardLibraryBlock",
    "parseAudioBlock",
    "parseTimeLine",
    "paresTextField",
    "parseTesselatedFont",
    "parseTextFormat",
    "parsePrimitves",
    "parseSkyboxInstance",
    "parseLight",
    "parseCamera",
    "parseLightPicker",
    "parseMaterial_v1",
    "parseCubeTexture",
    "parseSharedMethodBlock",
    "parseShadowMethodBlock",
    "parseMeshPoseAnimation",
    "parseVertexAnimationSet",
    "parseAnimatorSet",
    "parseCommand",
    "parseTriangleGeometrieBlock",
    "parseContainer",
    "parseMeshInstance",
    "parseMaterial",
    "parseTexture",
    "parseSkeleton",
    "parseSkeletonPose",
    "parseSkeletonAnimation",
    "parseNameSpace",
    "parseMetaData",
    "msgCnt",
    "blockID",
    "returnArrayFont",
    "returnedArrayMaterial",
    "textFormatArray",
    "returnedArrayGeometry",
    "extras",
    "timeLineContainer",
    "obj",
    "returnedArrayParent",
    "objC",
    "returnedArrayCubeTex",
    "lightPick",
    "materialMode",
    "returnedArrayTarget",
    "outputString",
    "assetTypesToGet",
    "returnArray",
    "typeCnt",
    "iasset",
    "awayjs-core/lib/textures/ImageTexture",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "awayjs-display/lib/base/LightBase",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod",
    "awayjs-methodmaterials/lib/methods/EffectEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectLightMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectMethodBase",
    "awayjs-methodmaterials/lib/methods/ShadowMapMethodBase",
    "awayjs-renderergl/lib/animators/AnimationSetBase",
    "awayjs-parsers/lib/MD2Parser",
    "MD2Parser",
    "textureType",
    "ignoreTexturePath",
    "_clipNodes",
    "_animationSet",
    "materialFinal",
    "geoCreated",
    "_textureType",
    "_ignoreTexturePath",
    "_mesh",
    "_pHasTime",
    "_parsedHeader",
    "_geometry",
    "parseMaterialNames",
    "_parsedUV",
    "parseUV",
    "_parsedFaces",
    "parseFaces",
    "_parsedFrames",
    "parseFrames",
    "_firstSubGeom",
    "clone",
    "_ident",
    "_skinWidth",
    "_skinHeight",
    "_numSkins",
    "_numVertices",
    "_numST",
    "_numTris",
    "_numFrames",
    "_offsetSkins",
    "_offsetST",
    "_offsetTris",
    "_offsetFrames",
    "_offsetEnd",
    "extIndex",
    "slashIndex",
    "_materialNames",
    "regExp",
    "RegExp",
    "replace",
    "lastIndexOf",
    "indexOf",
    "substring",
    "dependencies",
    "_uvs",
    "ta",
    "tb",
    "tc",
    "_vertIndices",
    "_uvIndices",
    "_indices",
    "addIndex",
    "_finalUV",
    "vertexIndex",
    "uvIndex",
    "index",
    "findIndex",
    "sx",
    "sy",
    "sz",
    "ty",
    "tz",
    "vertLen",
    "fvertices",
    "tvertices",
    "prevClip",
    "readFrameName",
    "vertexNormals",
    "vertexTangents",
    "FPS",
    "ch",
    "floor",
    "String",
    "fromCharCode",
    "awayjs-parsers/lib/MD5AnimParser",
    "Quaternion",
    "MD5AnimParser",
    "additionalRotationAxis",
    "additionalRotationRadians",
    "TEXT",
    "_parseIndex",
    "_line",
    "_charLineIndex",
    "_rotationQuat",
    "t1",
    "t2",
    "fromAxisAngle",
    "X_AXIS",
    "PI",
    "Y_AXIS",
    "multiply",
    "token",
    "_textData",
    "_pGetTextData",
    "getNextToken",
    "COMMENT_TOKEN",
    "ignoreLine",
    "VERSION_TOKEN",
    "getNextInt",
    "COMMAND_LINE_TOKEN",
    "parseCMD",
    "NUM_FRAMES_TOKEN",
    "_bounds",
    "_frameData",
    "NUM_JOINTS_TOKEN",
    "_numJoints",
    "_hierarchy",
    "_baseFrameData",
    "FRAME_RATE_TOKEN",
    "_frameRate",
    "NUM_ANIMATED_COMPONENTS_TOKEN",
    "_numAnimatedComponents",
    "HIERARCHY_TOKEN",
    "parseHierarchy",
    "BOUNDS_TOKEN",
    "parseBounds",
    "BASE_FRAME_TOKEN",
    "parseBaseFrame",
    "FRAME_TOKEN",
    "parseFrame",
    "_reachedEOF",
    "sendUnknownKeywordError",
    "_clip",
    "translateClip",
    "translatePose",
    "frameData",
    "hierarchy",
    "base",
    "translate",
    "components",
    "skelPose",
    "startIndex",
    "w",
    "sqrt",
    "rotatePoint",
    "sendEOFError",
    "HierarchyData",
    "parseLiteralstring",
    "getNextChar",
    "putBack",
    "BoundsData",
    "parseVector3D",
    "max",
    "BaseFrameData",
    "parseQuaternion",
    "frameIndex",
    "FrameData",
    "getNextNumber",
    "skipWhiteSpace",
    "charAt",
    "sendParseError",
    "parseFloat",
    "vec",
    "quat",
    "str",
    "awayjs-core/lib/geom/Quaternion",
    "awayjs-parsers/lib/MD5MeshParser",
    "MD5MeshParser",
    "_bindPoses",
    "NUM_MESHES_TOKEN",
    "_numMeshes",
    "JOINTS_TOKEN",
    "parseJoints",
    "MESH_TOKEN",
    "parseMesh",
    "calculateMaxJointCount",
    "_maxJointCount",
    "_meshData",
    "translateGeom",
    "vertexData",
    "weightData",
    "_skeleton",
    "numMeshData",
    "meshData",
    "numVerts",
    "zeroWeights",
    "countZeroWeightJoints",
    "totalJoints",
    "countWeight",
    "vertex",
    "start",
    "startWeight",
    "end",
    "count",
    "weight",
    "bias",
    "pos",
    "toMatrix3D",
    "appendTranslation",
    "inv",
    "invert",
    "_shaders",
    "MESH_SHADER_TOKEN",
    "MESH_NUM_VERTS_TOKEN",
    "MESH_NUM_TRIS_TOKEN",
    "MESH_NUM_WEIGHTS_TOKEN",
    "MESH_VERT_TOKEN",
    "parseVertex",
    "MESH_TRI_TOKEN",
    "parseTri",
    "MESH_WEIGHT_TOKEN",
    "parseJoint",
    "MeshData",
    "v1",
    "v2",
    "v3",
    "bindPose",
    "vertices",
    "jointIndices",
    "jointWeights",
    "nonZeroWeights",
    "transformVector",
    "JointData",
    "VertexData",
    "rotQuat",
    "awayjs-parsers/lib/Max3DSParser",
    "Max3DSParser",
    "useSmoothingGroups",
    "_useSmoothingGroups",
    "ba",
    "toByteArray",
    "tex",
    "_textures",
    "_materials",
    "_unfinalized_objects",
    "_cur_mat",
    "_cur_mat_end",
    "finalizeCurrentMaterial",
    "_cur_obj",
    "_cur_obj_end",
    "Number",
    "MAX_VALUE",
    "cid",
    "ObjectVO",
    "readNulTermstring",
    "materialFaces",
    "parseVertexList",
    "parseFaceList",
    "parseUVList",
    "parseFaceMaterialList",
    "readTransform",
    "parseObjectAnimation",
    "parseSmoothingGroups",
    "constructObject",
    "MaterialVO",
    "readColor",
    "twoSided",
    "colorMap",
    "TextureVO",
    "i0",
    "i1",
    "i2",
    "smoothingGroups",
    "faces",
    "vo",
    "hier",
    "sub",
    "prepareData",
    "applySmoothGroups",
    "v",
    "mname",
    "dat",
    "concat",
    "scaleBy",
    "applyTransformation",
    "VertexVO",
    "FaceVO",
    "smoothGroup",
    "numFaces",
    "vGroups",
    "face",
    "groups",
    "group",
    "splice",
    "vClones",
    "clones",
    "v0",
    "chr",
    "g",
    "awayjs-parsers/lib/OBJParser",
    "SpecularBasicMethod",
    "OBJParser",
    "scale",
    "_mtlLibLoaded",
    "_activeMaterialID",
    "_scale",
    "content",
    "hasV",
    "hasF",
    "parseMtl",
    "lm",
    "LoadedMaterial",
    "materialID",
    "_materialLoaded",
    "_meshes",
    "applyMaterial",
    "_mtlLib",
    "line",
    "creturn",
    "trunk",
    "_vertices",
    "_vertexNormals",
    "_materialIDs",
    "_stringLength",
    "_charIndex",
    "_oldIndex",
    "_objects",
    "_objectIndex",
    "join",
    "parseLine",
    "applyMaterials",
    "loadMtl",
    "createGroup",
    "createObject",
    "_currentGroup",
    "parseVertexNormal",
    "parseFace",
    "objIndex",
    "numGroups",
    "materialGroups",
    "numMaterialGroups",
    "sm",
    "bmMaterial",
    "translateMaterialGroup",
    "_lastMtlID",
    "materialGroup",
    "_realIndices",
    "_vertexIndex",
    "indexIds",
    "translateVertexData",
    "vertexNormal",
    "uv",
    "vertexIndices",
    "normalIndices",
    "uvIndices",
    "_currentMaterialGroup",
    "_currentObject",
    "ObjectGroup",
    "Group",
    "createMaterialGroup",
    "MaterialGroup",
    "nTrunk",
    "Vertex",
    "UV",
    "FaceData",
    "parseIndex",
    "materialDefinitions",
    "lines",
    "basicSpecularMethod",
    "useSpecular",
    "useColor",
    "mapkd",
    "charCodeAt",
    "parseMapKdString",
    "specularData",
    "SpecularData",
    "_materialSpecularData",
    "cm",
    "colorMat",
    "colorMultiMat",
    "breakflag",
    "mtlurl",
    "decomposeID",
    "tm",
    "_u",
    "_v",
    "_x",
    "_y",
    "_z",
    "_index",
    "ind",
    "awayjs-methodmaterials/lib/methods/SpecularBasicMethod",
    "awayjs-parsers/lib/Parsers",
    "AssetLoader",
    "Parsers",
    "enableAllBundled",
    "enableParsers",
    "ALL_BUNDLED",
    "awayjs-core/lib/library/AssetLoader"
  ],
  "mappings": "AAAAA,QAAA,QAAAC,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,SAAAR,UAAA,YAAAA,OAAA,KAAAO,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAG,EAAA,MAAAA,GAAAH,GAAA,EAAA,IAAAI,GAAA,GAAAC,OAAA,uBAAAL,EAAA,IAAA,MAAAI,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAV,EAAAG,IAAAQ,WAAAZ,GAAAI,GAAA,GAAAS,KAAAF,EAAAC,QAAA,SAAAb,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAC,QAAAb,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAQ,QAAA,GAAAL,SAAAT,UAAA,YAAAA,OAAA,KAAA,GAAAM,GAAA,EAAAA,EAAAF,EAAAY,OAAAV,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAY,0DAAA,SAAAjB,EAAAkB,EAAAJ,GCGA,GAAOK,GAAmBnB,EAAY,6CAMtC,IAAMoB,GAAkB,WAIvB,QAJKA,MASLC,OAAAC,eAAWF,EAAAG,UAAA,iBCZJC,IDYP,WAEC,MAAOC,MAAKC,gBCXNC,IDaP,SAAyBC,GAExBH,KAAKC,eAAeE,GCZdC,WAAY,KACZC,aAAc,MDadV,GAAAG,UAAAQ,eAAP,WAEC,KAAM,IAAIZ,GAIZ,OAAAC,KAE4BF,GAAAJ,QAAnBM,ICZNY,6CAA6CC,YAAYC,uDAAuD,SAASlC,EAAQkB,EAAOJ,GCb3I,GAAOqB,GAAiBnC,EAAkB,wDAC1C,IAAOoC,GAAepC,EAAmB,sDACzC,IAAOqC,GAA+BrC,EAAe,sEACrD,IAAOsC,GAAatC,EAAmB,oDACvC,IAAOuC,GAAkBvC,EAAkB,yDAC3C,IAAOwC,GAAsBxC,EAAiB,6DAC9C,IAAOyC,GAAezC,EAAmB,sDACzC,IAAO0C,GAAoB1C,EAAiB,2DAC5C,IAAO2C,GAAc3C,EAAmB,qDACxC,IAAO4C,GAAoB5C,EAAiB,2DAC5C,IAAO6C,GAAiB7C,EAAkB,wDAC1C,IAAO8C,GAAkB9C,EAAkB,yDAC3C,IAAO+C,GAAqB/C,EAAiB,4DAC7C,IAAOgD,GAAqBhD,EAAiB,4DAC7C,IAAOiD,GAAyBjD,EAAgB,gEAChD,IAAOkD,GAAiBlD,EAAkB,wDAC1C,IAAOmD,GAAqBnD,EAAiB,4DAC7C,IAAOoD,GAAepD,EAAmB,sDACzC,IAAOqD,GAAuBrD,EAAiB,8DAC/C,IAAOsD,GAAkBtD,EAAkB,yDAC3C,IAAOuD,GAAmBvD,EAAkB,0DAC5C,IAAOwD,GAA2BxD,EAAgB,kEAClD,IAAOyD,GAAuBzD,EAAiB,8DAC/C,IAAO0D,GAAgB1D,EAAkB,uDACzC,IAAO2D,GAAiB3D,EAAkB,wDAC1C,IAAO4D,GAAuB5D,EAAiB,8DAC/C,IAAO6D,GAAiB7D,EAAkB,wDAC1C,IAAO8D,GAAc9D,EAAmB,qDAIxC,IAAM+D,GAAe,WAKpB,QALKA,KAGGtC,KAAAuC,0BAIPvC,MAAKwC,mBAAmB,GAAIC,MAE5BzC,MAAK0C,iBAAiB,GAAIhC,IAAsB,GAChDV,MAAK0C,iBAAiB,GAAI/B,IAAoB,IAC9CX,MAAK0C,iBAAiB,GAAI9B,IAAoC,IAC9DZ,MAAK0C,iBAAiB,GAAI7B,IAAkB,GAAI,IAEhDb,MAAK0C,iBAAiB,GAAI5B,IAAuB,IACjDd,MAAK0C,iBAAiB,GAAIf,IAAoB,IAC9C3B,MAAK0C,iBAAiB,GAAIxB,IAAmB,IAC7ClB,MAAK0C,iBAAiB,GAAI1B,IAAoB,IAE9ChB,MAAK0C,iBAAiB,GAAIL,IAAmB,IAC7CrC,MAAK0C,iBAAiB,GAAIvB,IAAyB,IACnDnB,MAAK0C,iBAAiB,GAAItB,IAAsB,IAChDpB,MAAK0C,iBAAiB,GAAI3B,IAA2B,IACrDf,MAAK0C,iBAAiB,GAAIzB,IAAyB,IACnDjB,MAAK0C,iBAAiB,GAAInB,IAA0B,IACpDvB,MAAK0C,iBAAiB,GAAIpB,IAA0B,IACpDtB,MAAK0C,iBAAiB,GAAIjB,IAAsB,KAChDzB,MAAK0C,iBAAiB,GAAIhB,IAA0B,KACpD1B,MAAK0C,iBAAiB,GAAIlB,IAA8B,KACxDxB,MAAK0C,iBAAiB,GAAIV,IAA4B,IAAK,KAC3DhC,MAAK0C,iBAAiB,GAAIX,IAAgC,KAE1D/B,MAAK0C,iBAAiB,GAAIN,IAAsB,KAChDpC,MAAK0C,iBAAiB,GAAIrB,IAAuB,KACjDrB,MAAK0C,iBAAiB,GAAIb,IAAuB,KACjD7B,MAAK0C,iBAAiB,GAAId,IAA4B,KACtD5B,MAAK0C,iBAAiB,GAAIZ,IAAwB,KAGlD9B,MAAK0C,iBAAiB,GAAIT,IAAqB,KAC/CjC,MAAK0C,iBAAiB,GAAIP,IAA4B,KACtDnC,MAAK0C,iBAAiB,GAAIR,IAAsB,MAK1CI,EAAAxC,UAAA4C,iBAAP,SAAwBC,EAAiCC,GAExD,IAAI,GAAI5D,GAAS,EAAGA,EAAE4D,EAAYrD,OAAOP,IAAI,CAC5CgB,KAAKuC,wBAAwBK,EAAY5D,IAAO2D,EAEjD3C,KAAKwC,mBAAmBK,KAAKF,GAIvBL,GAAAxC,UAAAgD,YAAP,SAAmBC,GAElB,IAAI,GAAI/D,GAAS,EAAGA,EAAEgB,KAAKwC,mBAAmBjD,OAAOP,IAAI,CACxDgB,KAAKwC,mBAAmBxD,GAAGmB,cAAc4C,GAIpCT,GAAAxC,UAAAkD,WAAP,SAAkBC,GAGjB,GAAIC,GAA+BlD,KAAKuC,wBAAwBU,EAChE,IAAGC,GAAa1C,UAAU,CACzB0C,EAAY5C,gBACZ,OAAO,MAGR,MAAO,OAGT,OAAAgC,KAEyB7C,GAAAJ,QAAhBiD,IDPNa,wDAAwD,wDAAwDC,qDAAqD,qDAAqDC,yDAAyD,yDAAyDC,6DAA6D,6DAA6DC,8DAA8D,8DAA8DC,sDAAsD,sDAAsDC,uDAAuD,uDAAuDC,2DAA2D,2DAA2DC,sEAAsE,sEAAsEC,wDAAwD,wDAAwDC,qDAAqD,qDAAqDC,2DAA2D,2DAA2DC,wDAAwD,wDAAwDC,oDAAoD,oDAAoDC,wDAAwD,wDAAwDC,yDAAyD,yDAAyDC,sDAAsD,sDAAsDC,4DAA4D,4DAA4DC,4DAA4D,4DAA4DC,wDAAwD,wDAAwDC,gEAAgE,gEAAgEC,4DAA4D,4DAA4DC,sDAAsD,sDAAsDC,8DAA8D,8DAA8DC,yDAAyD,yDAAyDC,0DAA0D,0DAA0DC,8DAA8D,8DAA8DC,kEAAkE,oEAAoE3B,yDAAyD,SAAS5E,EAAQkB,EAAOJ,GAIhxG,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GE7GtB,IAAOE,GAAkB/G,EAAY,yDAOrC,IAAOgH,GAAchH,EAAe,iDAEpC,IAAOiH,GAAgBjH,EAAe,mDAEtC,IAAOkH,GAASlH,EAAgB,+CAEhC,IAAM6D,GAAiB,SAAAsD,GAASX,EAA1B3C,EAAiBsD,EAItB,SAJKtD,KAMJsD,EAAApG,KAAAU,MAIMoC,EAAAtC,UAAAQ,eAAP,WAEC,GAAIqF,EACJ,IAAIC,EACJ5F,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvD,IAAI9C,GAAuBjD,KAAKG,cAAc6F,cAAcC,mBAE5D,IAAIC,GAAsBlG,KAAKG,cAAcgG,iBAAiBC,EAAEX,EAAUY,OAE1EV,GAAqB3F,KAAKG,cAAc6F,cAAcM,iBACtD,IAAIC,GAAmCvG,KAAKG,cAAc6F,cAAcC,mBACxE,IAAIO,GAAsC,GAAI/D,MAC9C,KAAK,GAAIzD,GAAmB,EAAGA,EAAIuH,EAAkBvH,IACpDwH,EAAa3D,KAAK7C,KAAKG,cAAc6F,cAAcM,kBAEpD,IAAIG,GAA8BzG,KAAKG,cAAc6F,cAAcC,mBACnE,IAAIS,GAAqB1G,KAAKG,cAAc6F,cAAcW,oBAAsB,CAChF3G,MAAKG,cAAcyG,qBACnB5G,MAAKG,cAAcyG,qBAEnB,IAAIC,EACJ,IAAIC,GAA2B,GAAIrE,MAEnC,KAAKzD,EAAI,EAAGA,EAAIwH,EAAajH,OAAQP,IAAK,CACzC,GAAI+H,GAAwB/G,KAAKG,cAAc6G,aAAaR,EAAaxH,GACzE,IAAI+H,GAAYvG,UACfsG,EAAajE,KAAKkE,GAEpB,GAAInB,GAAwD5F,KAAKG,cAAc6G,aAAarB,EAC5F,IAAIC,GAAoBpF,UAAW,CAElC,MAAOA,WAER,GAAIyG,EACJ,IAAIhE,GAAQ,EAAG,CAEd,GAAIiE,GAA8BlH,KAAKG,cAAc6G,aAAad,EAAMnG,IAAI,EAAG,GAC/E,IAAImH,GAAU1G,UAAW,CAExB,OAEDyG,EAAe,GAAIzB,GAAwCI,EAAoBsB,OAEzE,IAAIjE,GAAQ,EAClBgE,EAAe,GAAI1B,GAAoCK,EAExD,KAAK5G,EAAI,EAAGA,EAAI8H,EAAavH,OAAQP,IAAK,CACzC,GAAIiE,GAAQ,EACX6D,EAAa9H,GAAGmI,SAA+BF,CAChD,IAAIhE,GAAQ,EACX6D,EAAa9H,GAAGmI,SAA6BF,EAE/CjH,KAAKG,cAAc0F,UAAUuB,KAAOH,CACpC,IAAIjH,KAAKG,cAAckH,MACtBC,QAAQC,IAAI,6BAA+BvH,KAAKG,cAAc0F,UAAUC,MAI3E,OAAA1D,IApEgCkD,EAsEhC7F,GAA2BJ,QAAlB+C,IFyFN5C,yDAAyD,yDAAyDgI,+CAA+C,+CAA+CC,mDAAmDjH,UAAUkH,iDAAiDlH,YAAY4C,sDAAsD,SAAS7E,EAAQkB,EAAOJ,GAC3Z,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GGvLtB,IAAOuC,GAASpJ,EAAc,kCAG9B,IAAO+G,GAAkB/G,EAAY,yDAErC,IAAOkH,GAASlH,EAAc,+CAG9B,IAAM8D,GAAc,SAAAqD,GAASX,EAAvB1C,EAAcqD,EAGnB,SAHKrD,KAKJqD,EAAApG,KAAAU,MAIMqC,EAAAvC,UAAAQ,eAAP,WAGCN,KAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aAEvD,IAAI9C,GAAcjD,KAAKG,cAAc6F,cAAcW,kBACnD,IAAIiB,EAKJ,IAAI3E,GAAQ,EAAG,CACd2E,EAAW5H,KAAKG,cAAc6F,cAAcM,iBAC5C,IAAIuB,EACJA,GAAM7H,KAAKG,cAAc6F,cAAc8B,aAAaF,EACpD5H,MAAKG,cAAc0F,UAAUkC,kBAAkBlF,KAAKgF,OAG9C,CACND,EAAW5H,KAAKG,cAAc6F,cAAcM,iBAE5C,IAAIc,EACJA,GAAO,GAAIO,EACX3H,MAAKG,cAAc6F,cAAcgC,UAAUZ,EAAM,EAAGQ,EACpD5H,MAAKG,cAAc0F,UAAUoC,kBAAkBpF,KAAKuE,GAYrDpH,KAAKG,cAAc0F,UAAUqC,MAAMzC,EAAU0C,4BAE7CnI,MAAKG,cAAcgG,gBAAgB,KACnCnG,MAAKG,cAAcyG,qBAGnB,IAAI5G,KAAKG,cAAckH,MAAO,CAC7B,GAAIe,IAAkC,WAAY,QAClDd,SAAQC,IAAI,mBAAqBa,EAAiBnF,GAAQ,eAK7D,OAAAZ,IA1D6BiD,EA4D7B7F,GAAwBJ,QAAfgD,IH8JNgG,kCAAkC7H,UAAUhB,yDAAyD,yDAAyDgI,+CAA+C,iDAAiDnE,0DAA0D,SAAS9E,EAAQkB,EAAOJ,GACnV,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GIpOtB,IAAOE,GAAkB/G,EAAY,yDAKrC,IAAO+J,GAAS/J,EAAgB,wCAChC,IAAOgK,GAAahK,EAAe,6CAEnC,IAAMuC,GAAkB,SAAA4E,GAASX,EAA3BjE,EAAkB4E,EAGvB,SAHK5E,KAKJ4E,EAAApG,KAAAU,MAIMc,EAAAhB,UAAAQ,eAAP,WAECN,KAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aAEvD,IAAIyC,GAAiBxI,KAAKG,cAAc6F,cAAcM,iBACtD,IAAImC,GAAiCzI,KAAKG,cAAc6G,aAAawB,EAErE,IAAIC,GAAKjI,UAAW,CACnBiI,EAAM,GAAIF,GAEXE,EAAIC,UAAU,IACd,IAAIC,GAAsB,GAAIL,GAAUG,EACxCzI,MAAKG,cAAc0F,UAAUuB,KAAOuB,CAEpC3I,MAAKG,cAAcgG,gBAAgB,KAEnCwC,GAAUC,MAAQ5I,KAAKG,cAAcyG,qBAGrC,IAAI5G,KAAKG,cAAckH,MAAO,CAC7BC,QAAQC,IAAI,uCAAyCoB,EAAU7C,KAAO,qBAAuB2C,EAAI3C,OAMpG,OAAAhF,IAnCiCwE,EAqCjC7F,GAA4BJ,QAAnByB,IJsNN+H,wCAAwCrI,UAAUsI,6CAA6CtI,UAAUhB,yDAAyD,2DAA2D8D,8DAA8D,SAAS/E,EAAQkB,EAAOJ,GACtT,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GK3QtB,IAAOuC,GAASpJ,EAAc,kCAG9B,IAAO+G,GAAkB/G,EAAY,yDAErC,IAAOkH,GAASlH,EAAc,+CAI9B,IAAMwC,GAAsB,SAAA2E,GAASX,EAA/BhE,EAAsB2E,EAG3B,SAHK3E,KAKJ2E,EAAApG,KAAAU,MAIMe,EAAAjB,UAAAQ,eAAP,WAGC,GAAIyI,EAEJ/I,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aAEvD,IAAI9C,GAAcjD,KAAKG,cAAc6F,cAAcW,kBACnD,IAAIiB,EAKJ,IAAI3E,GAAQ,EAAG,CACd2E,EAAW5H,KAAKG,cAAc6F,cAAcM,iBAC5C,IAAIuB,EACJA,GAAM7H,KAAKG,cAAc6F,cAAc8B,aAAaF,EACpD5H,MAAKG,cAAc0F,UAAUkC,kBAAkBlF,KAAKgF,OAE9C,CACND,EAAW5H,KAAKG,cAAc6F,cAAcM,iBAE5C,IAAIc,EACJA,GAAO,GAAIO,EACX3H,MAAKG,cAAc6F,cAAcgC,UAAUZ,EAAM,EAAGQ,EACpD5H,MAAKG,cAAc0F,UAAUoC,kBAAkBpF,KAAKuE,GAWrDpH,KAAKG,cAAc0F,UAAUqC,MAAMzC,EAAU0C,4BAE7CnI,MAAKG,cAAcgG,gBAAgB,KACnCnG,MAAKG,cAAcyG,qBAEnB,IAAI5G,KAAKG,cAAckH,MAAO,CAC7B,GAAI2B,IAAoC,WAAY,QACpD1B,SAAQC,IAAI,mBAAqByB,EAAmB/F,GAAQ,wBAK/D,OAAAlC,IAzDqCuE,EA2DL7F,GAAAJ,QAAvB0B,ILkPNsH,kCAAkC7H,UAAUhB,yDAAyD,yDAAyDgI,+CAA+C,iDAAiDjE,+DAA+D,SAAShF,EAAQkB,EAAOJ,GACxV,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GMxTtB,IAAOE,GAAkB/G,EAAY,yDAErC,IAAOkH,GAASlH,EAAgB,+CAEhC,IAAM4D,GAAuB,SAAAuD,GAASX,EAAhC5C,EAAuBuD,EAG5B,SAHKvD,KAKJuD,EAAApG,KAAAU,MAIMmC,EAAArC,UAAAQ,eAAP,WAECN,KAAKG,cAAc0F,UAAUqC,MAAMzC,EAAUwD,mBAC7C,IAAIC,GAAYlJ,KAAKG,cAAc6F,cAAcW,kBACjD,IAAIwC,GAAyBnJ,KAAKG,cAAc4F,aAChD,IAAI/F,KAAKG,cAAckH,MACtBC,QAAQC,IAAI,iCAAmC2B,EAAK,eAAiBC,GAIxE,OAAAhH,IAnBsCmD,EAqBL7F,GAAAJ,QAAxB8C,INmTN3C,yDAAyD,yDAAyDgI,+CAA+C,iDAAiDhE,uDAAuD,SAASjF,EAAQkB,EAAOJ,GACpS,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GOjVtB,IAAOE,GAAkB/G,EAAY,yDAIrC,IAAO6K,GAAM7K,EAAiB,qCAE9B,IAAO8K,GAAqB9K,EAAa,oDACzC,IAAO+K,GAAsB/K,EAAa,qDAC1C,IAAOgL,GAA+BhL,EAAW,8DAGjD,IAAOiL,GAAQjL,EAAiB,gCAChC,IAAOkH,GAASlH,EAAgB,+CAEhC,IAAMkL,GAAgB,SAAA/D,GAASX,EAAzB0E,EAAgB/D,EAGrB,SAHK+D,KAKJ/D,EAAApG,KAAAU,MAIMyJ,EAAA3J,UAAAQ,eAAP,WACC,GAAIoJ,GAAgB1J,KAAKG,cAAc6F,cAAcM,iBACrD,IAAIqD,GAAe3J,KAAKG,cAAcyJ,eACtC5J,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvD,IAAI8D,GAAoB,iBACxB,IAAIC,EAEJ9J,MAAKG,cAAc6F,cAAcW,kBACjC3G,MAAKG,cAAc6F,cAAc+D,WAEjC,IAAIC,GAAwBhK,KAAKG,cAAc6F,cAAc+D,WAC7D,IAAI7D,GAAsBlG,KAAKG,cAAcgG,iBAC5C8D,IAAKjK,KAAKG,cAAc+J,YACxBC,IAAKnK,KAAKG,cAAc+J,YACxBE,IAAKpK,KAAKG,cAAc+J,YACxBG,IAAKrK,KAAKG,cAAc+J,aAGzB,QAAQF,GACP,IAAK,MACJF,EAAa,GAAIT,GAAsBnD,EAAMnG,IAAI,IAAK,IACtD,MACD,KAAK,MACJ+J,EAAa,GAAIR,GAAuBpD,EAAMnG,IAAI,IAAK,KACvD,MACD,KAAK,MACJ+J,EAAa,GAAIP,GAAgCrD,EAAMnG,IAAI,KAAM,KAAMmG,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,KAAM,KAAMmG,EAAMnG,IAAI,IAAK,KACjI,MACD,SACCuH,QAAQC,IAAI,sBACZ,QAGF,GAAI+C,GAAgB,GAAIlB,GAAOU,EAC/BQ,GAAOC,UAAUC,SAAWb,CAC5B,IAAID,EAAS,EAAG,CACf,GAAIe,GAAwDzK,KAAKG,cAAc6G,aAAa0C,EAC5F,IAAIe,GAAUjK,UAAW,CACxBiK,EAAOC,SAASJ,EAChBT,GAAaY,EAAO3E,MAItBwE,EAAOxE,KAAOA,IACdI,GAAQlG,KAAKG,cAAcgG,iBAAiBC,EAAEpG,KAAKG,cAAcwK,aAAcC,EAAE5K,KAAKG,cAAcwK,aAAcE,EAAE7K,KAAKG,cAAcwK,aAAcG,EAAErF,EAAUsF,OACjKT,GAAOU,MAAQ,GAAIxB,GAAStD,EAAMnG,IAAI,EAAG,GAAImG,EAAMnG,IAAI,EAAG,GAAImG,EAAMnG,IAAI,EAAG,GAC3EuK,GAAO1B,MAAQ5I,KAAKG,cAAcyG,qBAClC5G,MAAKG,cAAc0F,UAAUuB,KAAOkD,CAEpC,IAAItK,KAAKG,cAAckH,MAAO,CAC7BC,QAAQC,IAAI,4BAA8B+C,EAAOxE,KAAO,wBAA0BgE,EAAa,oBAAsBD,IAMxH,OAAAJ,IAjE+BnE,EAmEL7F,GAAAJ,QAAjBoK,IPiUNwB,gCAAgCzK,UAAU0K,8DAA8D1K,UAAU2K,qDAAqD3K,UAAU4K,oDAAoD5K,UAAU6K,qCAAqC7K,UAAUhB,yDAAyD,yDAAyDgI,+CAA+C,iDAAiD/D,wDAAwD,SAASlF,EAAQkB,EAAOJ,GACnkB,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GQvZtB,IAAOE,GAAkB/G,EAAY,yDAKrC,IAAOiL,GAAQjL,EAAiB,gCAEhC,IAAOkH,GAASlH,EAAgB,+CAEhC,IAAM0D,GAAgB,SAAAyD,GAASX,EAAzB9C,EAAgByD,EAGrB,SAHKzD,KAKJyD,EAAApG,KAAAU,MAIMiC,EAAAnC,UAAAQ,eAAP,WAECN,KAAKG,cAAc0F,UAAUqC,MAAMzC,EAAUwD,mBAC7C,IAAIqC,GAAsBtL,KAAKG,cAAc6F,cAAcW,oBAAsB,CACjF,IAAI+C,GAAgB1J,KAAKG,cAAc6F,cAAcM,iBACrD,IAAIqD,GAAe3J,KAAKG,cAAcyJ,eACtC,IAAI9D,GAAc9F,KAAKG,cAAc4F,aAErC,IAAIwF,EACJ,IAAIC,EAEJ,IAAG9B,EAAO,EACT6B,EAAuCvL,KAAKG,cAAc6G,aAAa0C,EAExE,IAAI+B,GAAqBzL,KAAKG,cAAc6F,cAAc+D,WAC1D,IAAI2B,GAAqB1L,KAAKG,cAAc6F,cAAc+D,WAE1D,IAAI7D,GAAsBlG,KAAKG,cAAcgG,iBAAiBC,EAAEX,EAAUY,OAE1E,QAAQqF,GACP,IAAK,GAEJ,GAAIC,GAAkBzF,EAAMnG,IAAI,EAAG,EAEnCyL,GAA8BxL,KAAKG,cAAc6G,aAAa2E,EAC9D,IAAGH,GAAchL,UAAU,CAE1B,OAGD,GAAI+K,EAAc,CACjBA,EAAab,SAASc,GAEvBA,EAAajB,UAAUC,SAAWb,CAClC,OAGF,GAAI6B,EAAc,CACjBtF,EAAQlG,KAAKG,cAAcgG,iBAAiBC,EAAEpG,KAAKG,cAAcwK,aAAcC,EAAE5K,KAAKG,cAAcwK,aAAcE,EAAE7K,KAAKG,cAAcwK,aAAcG,EAAErF,EAAUsF,OAEjKS,GAAaR,MAAQ,GAAIxB,GAAStD,EAAMnG,IAAI,EAAG,GAAImG,EAAMnG,IAAI,EAAG,GAAImG,EAAMnG,IAAI,EAAG,GACjFyL,GAAa5C,MAAQ5I,KAAKG,cAAcyG,sBAKzC,GAAI5G,KAAKG,cAAckH,MAAO,CAC7BC,QAAQC,IAAI,kCAAoCzB,IAKnD,OAAA7D,IA7D+BqD,EA+DL7F,GAAAJ,QAAjB4C,IRmYNgJ,gCAAgCzK,UAAUhB,yDAAyD,yDAAyDgI,+CAA+C,iDAAiD9D,4DAA4D,SAASnF,EAAQkB,EAAOJ,GACnV,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GSndtB,IAAOuC,GAASpJ,EAAc,kCAG9B,IAAO+G,GAAkB/G,EAAY,yDAErC,IAAOkH,GAASlH,EAAgB,+CAMhC,IAAM0C,GAAoB,SAAAyE,GAASX,EAA7B9D,EAAoByE,EAGzB,SAHKzE,KAKJyE,EAAApG,KAAAU,MAIMiB,EAAAnB,UAAAQ,eAAP,WAEC,GAAIsH,EACJ,IAAI5I,ET2cE,IStcFiE,GAAcjD,KAAKG,cAAc6F,cAAcW,kBAInD3G,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aAEvD,KAAK/G,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAKvB,GAAIiE,GAAQ,EAAG,CACd2E,EAAW5H,KAAKG,cAAc6F,cAAcM,iBAC5C,IAAIuB,EACJA,GAAM7H,KAAKG,cAAc6F,cAAc8B,aAAaF,EAEpD5H,MAAKG,cAAc0F,UAAUkC,kBAAkBlF,KAAKgF,OAE9C,CAEND,EAAW5H,KAAKG,cAAc6F,cAAcM,iBAC5C,IAAIc,EACJA,GAAO,GAAIO,EAEX3H,MAAKG,cAAc6F,cAAcgC,UAAUZ,EAAM,EAAGQ,EAEpD5H,MAAKG,cAAc0F,UAAUoC,kBAAkBpF,KAAKuE,IAItDpH,KAAKG,cAAc0F,UAAUqC,MAAMzC,EAAU0C,4BAE7CnI,MAAKG,cAAcgG,gBAAgB,KACnCnG,MAAKG,cAAcyG,qBAInB,IAAI5G,KAAKG,cAAckH,MAAO,CAC7B,GAAI2B,IAAoC,WAAY,QACpD1B,SAAQC,IAAI,mBAAqByB,EAAmB/F,GAAQ,6BAK/D,OAAAhC,IA7DmCqE,EA+DnC7F,GAA8BJ,QAArB4B,IT4bNoH,kCAAkC7H,UAAUhB,yDAAyD,yDAAyDgI,+CAA+C,iDAAiD7D,uEAAuE,SAASpF,EAAQkB,EAAOJ,GAChW,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GUvgBtB,IAAOoE,GAAQjL,EAAe,gCAI9B,IAAOqN,GAAsBrN,EAAW,uDAExC,IAAO+G,GAAkB/G,EAAY,yDACrC,IAAOkH,GAASlH,EAAc,+CAG9B,IAAMqC,GAA+B,SAAA8E,GAASX,EAAxCnE,EAA+B8E,EAGpC,SAHK9E,KAKJ8E,EAAApG,KAAAU,MAIMY,EAAAd,UAAAQ,eAAP,WAGC,GAAIoJ,EACJ,IAAIC,EACJ,IAAIkC,EACJ,IAAIpB,EAEJoB,GAAM,GAAID,EACVlC,GAAS1J,KAAKG,cAAc6F,cAAcM,iBAC1CqD,GAAM3J,KAAKG,cAAcyJ,eACzB5J,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aAEvD,IAAI8D,GAAoB,iBACxBgC,GAAItB,UAAUC,SAAWb,CAGzB,IAAID,EAAS,EAAG,CACf,GAAIe,GAAwDzK,KAAKG,cAAc6G,aAAa0C,EAC5F,IAAIe,GAAUjK,UAAW,CACxBiK,EAAOC,SAASmB,EAChBhC,GAAaY,EAAO3E,MAKtB,GAAK9F,KAAKG,cAAc2L,cAAgB,GAAM9L,KAAKG,cAAc2L,eAAiB,GAAO9L,KAAKG,cAAc4L,eAAiB,EAAK,CACjI,GAAI7F,GAAsBlG,KAAKG,cAAcgG,iBAAiBC,EAAEpG,KAAKG,cAAcwK,aAAcC,EAAE5K,KAAKG,cAAcwK,aAAcE,EAAE7K,KAAKG,cAAcwK,aAAcG,EAAErF,EAAUsF,OACnLc,GAAIb,MAAQ,GAAIxB,GAAStD,EAAMnG,IAAI,EAAG,GAAImG,EAAMnG,IAAI,EAAG,GAAImG,EAAMnG,IAAI,EAAG,QAGpE,CACJC,KAAKG,cAAcgG,gBAAgB,MAIpC0F,EAAIjD,MAAQ5I,KAAKG,cAAcyG,qBAC/B5G,MAAKG,cAAc0F,UAAUuB,KAAKyE,CAClC,IAAI7L,KAAKG,cAAckH,MAAO,CAC7BC,QAAQC,IAAI,+BAAiCsE,EAAI/F,KAAO,qBAAuB+D,IAKlF,OAAAjJ,IArD8C0E,EAuDL7F,GAAAJ,QAAhCuB,IVsfNqK,gCAAgCzK,UAAUwL,uDAAuDxL,UAAUhB,yDAAyD,yDAAyDgI,+CAA+C,iDAAiD5D,yDAAyD,SAASrF,EAAQkB,EAAOJ,GACjZ,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GW7jBtB,IAAOE,GAAkB/G,EAAY,yDAGrC,IAAO0N,GAAQ1N,EAAiB,gCAEhC,IAAO2N,GAAgB3N,EAAe,wCACtC,IAAO4N,GAAmB5N,EAAc,2CAExC,IAAMmC,GAAiB,SAAAgF,GAASX,EAA1BrE,EAAiBgF,EAItB,SAJKhF,KAMJgF,EAAApG,KAAAU,MAIMU,EAAAZ,UAAAQ,eAAP,WAEC,GAAI8L,GAAgB,GAAIH,EAGxBjM,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvD,IAAIsG,GAAkBrM,KAAKG,cAAc6F,cAAcC,mBXsjBjD,IWnjBFC,GAAsBlG,KAAKG,cAAcgG,iBAAiBC,EAAEpG,KAAKG,cAAcmM,UAAW1B,EAAE5K,KAAKG,cAAcmM,WACnH,IAAIC,GAAmBrG,EAAMnG,IAAI,EAAG,EACpC,IAAIyM,GAAmBtG,EAAMnG,IAAI,EAAG,EXqjB9B,IWljBF0M,GAAqB,CACzB,OAAOA,EAAcJ,EAAU,CAC9B,GAAIK,GAAsB,KAC1B,IAAI1N,EACJ,IAAI2N,GAAeC,CACnB,IAAIC,EACJ,IAAIC,EAEJH,GAAS3M,KAAKG,cAAc6F,cAAcM,iBAC1CsG,GAAS5M,KAAKG,cAAc6F,cAAc+G,SAAWJ,CAErD,IAAIK,GAAyBhN,KAAKG,cAAcgG,iBAAiBC,EAAEpG,KAAKG,cAAcmM,UAAW1B,EAAE5K,KAAKG,cAAcmM,WAEtH,OAAOtM,KAAKG,cAAc6F,cAAc+G,SAAWH,EAAQ,CAC1D,GAAIK,GAAa,CACjB,IAAIC,GAAkBC,EAAiBC,EAAgBC,CAGvDF,GAAWnN,KAAKG,cAAc6F,cAAcW,kBAC5CuG,GAAYlN,KAAKG,cAAc6F,cAAcW,kBAC7CyG,GAAUpN,KAAKG,cAAc6F,cAAcM,iBAC3C+G,GAAUrN,KAAKG,cAAc6F,cAAc+G,SAAWK,CAEtD,IAAIE,GAAUC,EAAUC,CAExB,IAAIL,GAAY,EAAG,CAClB,GAAIM,GAAsB,GAAIhL,MAE9B,OAAOzC,KAAKG,cAAc6F,cAAc+G,SAAWM,EAAS,CAE3DC,EAAItN,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YACrDJ,GAAIvN,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YACrDH,GAAIxN,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YAErDF,GAAMR,KAASK,CACfG,GAAMR,KAASM,CACfE,GAAMR,KAASO,OAEV,IAAIL,GAAY,EAAG,CACzB,GAAIS,GAAwB,GAAInL,MAEhC,OAAOzC,KAAKG,cAAc6F,cAAc+G,SAAWM,EAAS,CAC3DO,EAAQX,KAASjN,KAAKG,cAAc6F,cAAcC,yBAG7C,IAAIkH,GAAY,EAAG,CACzB,GAAIU,GAAoB,GAAIpL,MAC5B,OAAOzC,KAAKG,cAAc6F,cAAc+G,SAAWM,EAAS,CAC3DQ,EAAIZ,KAASjN,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,kBAGzD,IAAIR,GAAY,EAAG,CAEzB,GAAIW,GAAwB,GAAIrL,MAEhC,OAAOzC,KAAKG,cAAc6F,cAAc+G,SAAWM,EAAS,CAC3DS,EAAQb,KAASjN,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,kBAG7D,IAAIR,GAAY,EAAG,CACzBN,EAAYpK,OAEZ,OAAOzC,KAAKG,cAAc6F,cAAc+G,SAAWM,EAAS,CAC3DR,EAAUI,KAASjN,KAAKG,cAAc6F,cAAcC,oBAAoB,OAGnE,IAAIkH,GAAY,EAAG,CAEzBL,EAAU,GAAIrK,MAEd,OAAOzC,KAAKG,cAAc6F,cAAc+G,SAAWM,EAAS,CAC3DP,EAAQG,KAASjN,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,kBAE7D,IAAIR,GAAY,EAAG,CACzBnN,KAAKG,cAAc6F,cAAc+G,SAAWM,MACtC,IAAIF,GAAY,EAAG,CACzBnN,KAAKG,cAAc6F,cAAc+G,SAAWM,MACtC,IAAIF,GAAY,GAAI,CAC1BT,EAAc,IACd,IAAIqB,GAAiB,CACrB,IAAIC,GAAoB,CACxB,IAAIC,GAAiB,CAErB,IAAIC,GAA0B,GAAIzL,MAClC,IAAI0L,GAA0B,GAAI1L,MAClC,IAAIoL,GAAoB,GAAIpL,MAE5B,OAAOzC,KAAKG,cAAc6F,cAAc+G,SAAWM,EAAS,CAE3Da,EAAUH,KAAa/N,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YACxEO,GAAUH,KAAa/N,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YACxEO,GAAUH,KAAc/N,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YAEzEQ,GAAUH,KAAgBhO,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YAC3EQ,GAAUH,KAAgBhO,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YAE3EE,GAAII,KAAajO,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YAClEE,GAAII,KAAajO,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,kBAG/D,CACJ3N,KAAKG,cAAc6F,cAAc+G,SAAWM,GAK9CrN,KAAKG,cAAcyG,qBACnB,IAAG8F,EAAc,CAChB,GAAI0B,GAAkC,GAAIlC,GAAiB,KAC3DkC,GAAeC,cAAcT,EAC7BQ,GAAeE,gBAAgBJ,EAC/BE,GAAeG,aAAaJ,EAC5BC,GAAeI,UAAUX,EACzBzB,GAAKqC,eAAeL,EACpB,IAAIpO,KAAKG,cAAckH,MACtBC,QAAQC,IAAI,iCAET,CACJ,GAAImH,GAAoB,GAAIvC,GAAoB,KAChD,IAAIW,EACH4B,EAAkBC,gBAAkB7B,EAAQvN,QAAUkO,EAAMlO,OAAS,EACtE,IAAIuO,EACHY,EAAkBE,kBAAoB,KACvC,IAAIf,EACHa,EAAkBG,cAAgB,KAEnC,IAAI,KAAM,CACTH,EAAkBI,mBAAqB,KAExCJ,EAAkBL,cAAcT,EAChCc,GAAkBJ,gBAAgBb,EAClCiB,GAAkBK,oBAAoBjB,EACtCY,GAAkBF,UAAUX,EAC5Ba,GAAkBM,qBAAqB,KACvCN,GAAkBO,mBAAmBnC,EACrC4B,GAAkBQ,mBAAmBrC,EAErC,IAAIsC,GAAgBnC,EAASjN,IAAI,EAAG,EACpC,IAAIqP,GAAgBpC,EAASjN,IAAI,EAAG,EACpC,IAAIsP,GAAoB,KAExB,IAAK9C,GAAa4C,GAAY3C,GAAa4C,EAAS,CACnDC,EAAY,IACZF,GAAS5C,EAAY4C,CACrBC,GAAS5C,EAAY4C,EAGtB,GAAIC,EACHX,EAAkBY,QAAQH,EAAQC,EACnChD,GAAKqC,eAAeC,EACpB,IAAI1O,KAAKG,cAAckH,MACtBC,QAAQC,IAAI,gCAOdkF,IAED,GAAKF,GAAa,GAAOC,GAAa,EACrCJ,EAAKkD,QAAQ/C,EAAWC,EACzBxM,MAAKG,cAAcyG,qBACnB5G,MAAKG,cAAc0F,UAAUuB,KAAKgF,CAClC,IAAIpM,KAAKG,cAAckH,MAAO,CAC7BC,QAAQC,IAAI,qCAAuCzB,OAItD,OAAApF,IAjMgC4E,EAmMhC7F,GAA2BJ,QAAlBqB,IX2hBN6O,wCAAwC/O,UAAUgP,gCAAgChP,UAAUiP,2CAA2CjP,UAAUhB,yDAAyD,2DAA2DqE,sDAAsD,SAAStF,EAAQkB,EAAOJ,GACtV,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GY3uBtB,IAAOE,GAAkB/G,EAAY,yDAQrC,IAAOmR,GAAmBnR,EAAc,iEACxC,IAAOoR,GAAuBpR,EAAa,qEAI3C,IAAOqR,GAAgBrR,EAAe,+CACtC,IAAOsR,GAAUtR,EAAgB,yCACjC,IAAOkH,GAASlH,EAAc,+CAE9B,IAAM2C,GAAc,SAAAwE,GAASX,EAAvB7D,EAAcwE,EAGnB,SAHKxE,KAKJwE,EAAApG,KAAAU,MAIMkB,EAAApB,UAAAQ,eAAP,WAEC,GAAIwP,EACJ,IAAIC,EAEJ,IAAIrG,GAAgB1J,KAAKG,cAAc6F,cAAcM,iBACrD,IAAIqD,GAAe3J,KAAKG,cAAcyJ,eACtC5J,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvD,IAAIiK,GAAmBhQ,KAAKG,cAAc6F,cAAcW,kBACxD,IAAIT,GAAsBlG,KAAKG,cAAcgG,iBAAiBC,EAAEpG,KAAKG,cAAc+J,YAAaU,EAAE5K,KAAKG,cAAc+J,YAAaW,EAAEpF,EAAUwK,MAAOnF,EAAE9K,KAAKG,cAAc+J,YAAagG,EAAElQ,KAAKG,cAAc+J,YAAaiG,EAAE1K,EAAU2K,KAAMC,EAAE5K,EAAUwK,MAAOK,EAAEtQ,KAAKG,cAAc+J,YAAaqG,EAAE9K,EAAUsF,MAAOyF,GAAG/K,EAAUsF,MAAO0F,GAAGzQ,KAAKG,cAAc+J,YAAawG,GAAGjL,EAAUkL,OAAQC,GAAG5Q,KAAKG,cAAcwK,aAAckG,GAAG7Q,KAAKG,cAAcwK,aAAcmG,GAAG9Q,KAAKG,cAAcwK,cAC7d,IAAIoG,GAA0B7K,EAAMnG,IAAI,EAAG,EAC3C,IAAI8J,GAAoB,iBACxB,IAAImH,IAA4B,wBAAyB,aAAc,mBACvE,IAAIC,IAAmC,kBAAmB,0BAA2B,8BAA+B,sBAAuB,sBAE3I,IAAIjB,GAAa,EAAG,CACnBF,EAAQ,GAAID,EAEEC,GAAOoB,OAAShL,EAAMnG,IAAI,EAAG,IAC7B+P,GAAOqB,QAAUjL,EAAMnG,IAAI,EAAG,IAE5C,IAAIgR,EAAmB,EAAG,CACzB,GAAIA,GAAoB,EAAG,CAC1BhB,EAAkB,GAAIL,IAIxBI,EAAMvF,UAAUC,SAAWb,EAI5B,GAAIqG,GAAa,EAAG,CAEnBF,EAAQ,GAAIF,GAAiB1J,EAAMnG,IAAI,GAAI,GAAImG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,GAAI,GAEhF,IAAIgR,EAAmB,EAAG,CACzB,GAAIA,GAAoB,EAAG,CAC1BhB,EAAkB,GAAIJ,KAWzBG,EAAMhK,KAAKA,IACXgK,GAAMsB,MAAQlL,EAAMnG,IAAI,EAAG,SAC3B+P,GAAMuB,SAAWnL,EAAMnG,IAAI,EAAG,EAC9B+P,GAAMwB,QAAUpL,EAAMnG,IAAI,EAAG,EAC7B+P,GAAMyB,aAAerL,EAAMnG,IAAI,EAAG,SAClC+P,GAAM0B,QAAUtL,EAAMnG,IAAI,EAAG,EAG7B,IAAIgQ,EAAiB,CACpB,GAAIA,YAA2BL,GAAqB,CACnD,GAAIxJ,EAAMnG,IAAI,GAAI,IAAM,EAAG,CAC1BgQ,EAAgB0B,aAAezR,KAAKG,cAAcuR,qBAAqBxL,EAAMnG,IAAI,GAAI,SAEhF,CACN,GAAImG,EAAMnG,IAAI,GAAI,IAAM,EAAG,CAC1BgQ,EAAgB0B,aAAezR,KAAKG,cAAcuR,qBAAqBxL,EAAMnG,IAAI,GAAI,KAIvF+P,EAAM6B,aAAe5B,CACrBD,GAAM8B,aAAe,KAGtB,GAAIlI,GAAU,EAAG,CAEhB,GAAIe,GAAwDzK,KAAKG,cAAc6G,aAAa0C,EAE5F,IAAIe,GAAQjK,UAAU,CACrBiK,EAAOC,SAASoF,EAChBjG,GAAaY,EAAO3E,SACd,OAGD,EAKP9F,KAAKG,cAAcyG,qBACnB5G,MAAKG,cAAc0F,UAAUuB,KAAO0I,CAGpC,IAAI9P,KAAKG,cAAckH,MACtBC,QAAQC,IAAI,2BAA6BvH,KAAKG,cAAc0F,UAAUC,KAAO,cAAgBkL,EAAWhB,GAAa,oBAAsBnG,EAAa,0BAA4BoH,EAAkBF,IAIzM,OAAA7P,IAxG6BoE,EA0GL7F,GAAAJ,QAAf6B,IZqsBN2Q,+CAA+CrR,UAAUsR,yCAAyCtR,UAAUuR,iEAAiEvR,UAAUwR,qEAAqExR,UAAUhB,yDAAyD,yDAAyDgI,+CAA+C,iDAAiD1D,4DAA4D,SAASvF,EAAQkB,EAAOJ,GAC/iB,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,Gar0BtB,IAAOE,GAAkB/G,EAAY,yDAIrC,IAAO0T,GAAiB1T,EAAc,8DAGtC,IAAM4C,GAAoB,SAAAuE,GAASX,EAA7B5D,EAAoBuE,EAGzB,SAHKvE,KAKJuE,EAAApG,KAAAU,MAIMmB,EAAArB,UAAAQ,eAAP,WAECN,KAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvD,IAAImM,GAAmBlS,KAAKG,cAAc6F,cAAcC,mBACxD,IAAIkM,GAA+B,GAAI1P,MACvC,IAAI2P,GAAW,CACf,IAAIC,GAAiB,CAErB,IAAIC,EACJ,IAAIC,GAAiC,GAAI9P,MAEzC,KAAK2P,EAAI,EAAGA,EAAIF,EAAWE,IAAK,CAC/BC,EAAUrS,KAAKG,cAAc6F,cAAcM,iBAC3C,IAAIwJ,GAA6B9P,KAAKG,cAAc6G,aAAaqL,EAEjE,IAAIvC,GAAOtP,UAAW,CACrB2R,EAAYtP,KAAiBiN,EAC7ByC,GAAiB1P,KAAmBiN,EAAOhK,UAErC,GAKR,GAAIqM,EAAY5S,QAAU,EAAG,CAE5BS,KAAKG,cAAcyG,qBACnB,OAAOpG,WAGR,GAAIgS,GAA8B,GAAIP,GAAkBE,EACxDnS,MAAKG,cAAc0F,UAAUuB,KAAOoL,CAEpCxS,MAAKG,cAAcyG,qBACnB,IAAI5G,KAAKG,cAAckH,MAAO,CAC7BC,QAAQC,IAAI,uCAAyCvH,KAAKG,cAAc0F,UAAUC,KAAO,sBAAwByM,EAAiBE,aAKrI,OAAAtR,IAjDmCmE,EAmDL7F,GAAAJ,QAArB8B,IbszBNuR,8DAA8DlS,UAAUhB,yDAAyD,2DAA2DuE,yDAAyD,SAASxF,EAAQkB,EAAOJ,GAChR,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,Gcr3BtB,IAAOE,GAAkB/G,EAAY,yDAIrC,IAAOoU,GAAkBpU,EAAc,gDACvC,IAAOqU,GAAcrU,EAAe,4CAKpC,IAAOsU,GAAatU,EAAe,6CAGnC,IAAOuU,GAAsBvU,EAAa,qDAI1C,IAAOwU,GAAmBxU,EAAc,yDACxC,IAAOyU,GAAkBzU,EAAc,wDACvC,IAAO0U,GAAgB1U,EAAe,sDACtC,IAAO2U,GAAqB3U,EAAa,2DACzC,IAAO4U,GAAqB5U,EAAa;;AACzC,GAAO6U,GAAiB7U,EAAc,uDACtC,IAAO8U,GAAuB9U,EAAa,6DAC3C,IAAO+U,GAAqB/U,EAAa,2DACzC,IAAOgV,GAAyBhV,EAAY,+DAC5C,IAAOiV,GAAiBjV,EAAc,uDACtC,IAAOkV,GAAmBlV,EAAc,yDAGxC,IAAOkH,GAASlH,EAAc,+CAE9B,IAAM6C,GAAiB,SAAAsE,GAASX,EAA1B3D,EAAiBsE,EAGtB,SAHKtE,KAKJsE,EAAApG,KAAAU,MAIMoB,EAAAtB,UAAAQ,eAAP,Wdu2BO,Gcn2BFwF,EACJ,IAAI7C,EACJ,IAAIiD,EACJ,IAAIuC,EACJ,IAAIiL,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIhN,EACJ,IAAI4B,EACJ,IAAIqL,EACJ,IAAIC,EACJ,IAAIlN,EAEJ7G,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvD9C,GAAOjD,KAAKG,cAAc6F,cAAcW,kBACxCiN,GAAc5T,KAAKG,cAAc6F,cAAcW,kBAE/C,IAAI3G,KAAKG,cAAc2L,eAAe,GAAK9L,KAAKG,cAAc2L,eAAe,EAAI,CAIhF5F,EAAQlG,KAAKG,cAAcgG,iBAC1BC,EAAGX,EAAUuO,MACbpJ,EAAGnF,EAAUY,MACbmK,GAAIxQ,KAAKG,cAAc+J,YACvBuG,GAAIhL,EAAU2K,KACdM,GAAI1Q,KAAKG,cAAc+J,YACvB+J,GAAIxO,EAAU2K,MAEfyD,GAAiB,CACjB,OAAOA,EAAiBD,EAAa,CACpC,GAAIM,EAEJA,GAAclU,KAAKG,cAAc6F,cAAcC,mBAC/CjG,MAAKG,cAAcgG,gBAAgB,KACnCnG,MAAKG,cAAcyG,qBACnBiN,IAAkB,EAEnB,GAAIM,GAAqB,EACzBT,GAAa1T,KAAKG,cAAcyG,qBAChC,IAAI3D,IAAS,EAAG,CACfkR,GAAe,+CAAiDrO,EAAO,MACvE,IAAIsL,EACJA,GAAQlL,EAAMnG,IAAI,EAAG,cAOf,IAAIkD,IAAS,EAAG,CACtB,GAAImR,GAAkBlO,EAAMnG,IAAI,EAAG,EACnC,IAAIsU,GAAoB7T,SACxB,IAAI4T,EAAW,EAAG,CACjB,GAAIC,GAAoCrU,KAAKG,cAAc6G,aAAaoN,GAEzE,GAAIC,GAAS7T,UAAW,CACvB6T,EAASvB,EAAuBwB,oBAGjC7L,EAAM,GAAImK,GAA8ByB,GAazC5L,EAAIG,MAAQ8K,CACZjL,GAAI8L,eAAiBrO,EAAMnG,IAAI,GAAI,EACnC0I,GAAI+L,OAAStO,EAAMnG,IAAI,GAAI,MAC3B0I,GAAI3C,KAAKA,CACT,IAAI9F,KAAKG,cAAckH,MAAO,CAC7BC,QAAQC,IAAI4M,GAGbnU,KAAKG,cAAc0F,UAAUuB,KAAKqB,CAClC,Qdg1BK,Gc30BFvC,GAAsBlG,KAAKG,cAAcgG,iBAAiBC,EAAEX,EAAUgP,OAAQ7J,EAAEnF,EAAUY,MAAOwE,EAAEpF,EAAUY,MAAOyE,EAAErF,EAAUsF,MAAOmF,EAAEzK,EAAU2K,KAAMD,EAAE1K,EAAU2K,KAAMC,EAAE5K,EAAU2K,KAAME,EAAE7K,EAAU2K,KAAMG,EAAE9K,EAAUsF,MAAOyF,GAAGxQ,KAAKG,cAAc+J,YAAauG,GAAGhL,EAAU2K,KAAMM,GAAG1Q,KAAKG,cAAc+J,YAAa+J,GAAGxO,EAAU2K,KAAMsE,GAAG1U,KAAKG,cAAc+J,YAAayK,GAAGlP,EAAUgP,OAAQG,GAAGnP,EAAUY,MAAOwO,GAAG7U,KAAKG,cAAc+J,YAAa4K,GAAG9U,KAAKG,cAAc+J,YAAa6K,GAAGtP,EAAUgP,OAAQ7D,GAAGnL,EAAUY,MAAOwK,GAAGpL,EAAUY,OAC1hB,IAAI2O,GAAqB9O,EAAMnG,IAAI,EAAG,EACtC,IAAIoU,GAAqB,kBAEzB,IAAIa,GAAe,EAAG,CAErB,OAGD,GAAI/R,GAAQ,EAAG,CAQd,GAAI+R,EAAc,EAAG,CAEpB,GAAI/R,GAAQ,EAAG,CACd,GAAImO,GAAelL,EAAMnG,IAAI,EAAG,SAEhC,IAAIiV,GAAe,EAAG,CACrBvM,EAAM,GAAImK,GAAexB,EACzB3I,GAAIwM,KAAOtC,EAAmBuC,UAC9Bf,IAAe,8CAAgDrO,EAAO,WAEhE,CACN2C,EAAM,GAAImK,GAAexB,EAAOlL,EAAMnG,IAAI,GAAI,GAC9C0I,GAAI0M,cAAgBjP,EAAMnG,IAAI,GAAI,MAClCoU,IAAe,+CAAiDrO,EAAO,YAGlE,IAAI7C,GAAQ,EAAG,CACrB,GAAImR,GAAkBlO,EAAMnG,IAAI,EAAG,EACnC,IAAIqV,GAAuB5U,SAC3B,IAAI4T,EAAW,EAAG,CACjBgB,EAA2BpV,KAAKG,cAAc6G,aAAaoN,GAE5D,GAAIgB,GAAY5U,UAAW,CAC1B4U,EAAYtC,EAAuBwB,oBAEpC7L,EAAM,GAAImK,GAA8BwC,EAExC,IAAIJ,GAAe,EAAG,CACrBvM,EAAIwM,KAAOtC,EAAmBuC,UAE9Bf,IAAe,+CAAiDnU,KAAKG,cAAc0F,UAAUC,KAAO,sBAAwBsP,EAAWtP,SACjI,CACN2C,EAAI4M,MAAQnP,EAAMnG,IAAI,GAAI,EAC1B0I,GAAI0M,cAAgBjP,EAAMnG,IAAI,GAAI,MAElCoU,IAAe,gDAAkDnU,KAAKG,cAAc0F,UAAUC,KAAO,sBAAwBsP,EAAWtP,MAK1I,GAAIwP,GAAyBpP,EAAMnG,IAAI,GAAI,EAE3CwV,GAAe/U,SACf,IAAI8U,EAAkB,EAAG,CACxBC,EAAiCvV,KAAKG,cAAc6G,aAAasO,GAElE,GAAIC,EAAgB,CACnB9M,EAAI8M,eAAgCA,CACpCpB,IAAe,4BAA8BoB,EAAezP,KAG7D,GAAI0P,GAAwBtP,EAAMnG,IAAI,EAAG,EAGzC+T,GAAgBtT,SAChB,IAAIgV,EAAiB,EAAG,CACvB1B,EAAgC9T,KAAKG,cAAc6G,aAAawO,GAGjE,GAAIC,GAAsBvP,EAAMnG,IAAI,GAAI,EACxCgU,GAAYvT,SACZ,IAAIiV,EAAe,EAAG,CACrB1B,EAA8B/T,KAAKG,cAAc6G,aAAayO,GAG/D,GAAIC,GAAyBxP,EAAMnG,IAAI,GAAI,EAC3C,IAAG2V,EAAgB,EAAG,CACrBjN,EAAI+J,YAAgCxS,KAAKG,cAAc6G,aAAa0O,GAGrEjN,EAAIkN,OAASzP,EAAMnG,IAAI,EAAG,KAC1B0I,GAAImN,OAAS1P,EAAMnG,IAAI,EAAG,KAC1B0I,GAAIC,UAAYxC,EAAMnG,IAAI,EAAG,MAC7B0I,GAAIoN,mBAAqB3P,EAAMnG,IAAI,EAAG,MACtC0I,GAAIqN,UAAY9V,KAAKG,cAAc4V,2BAA2B7P,EAAMnG,IAAI,EAAG,GAC3E0I,GAAI+L,OAAStO,EAAMnG,IAAI,GAAI,MAE3B,IAAI+T,EACHrL,EAAIuN,UAAYlC,CAEjB,IAAIC,EACHtL,EAAIwN,YAAclC,CAEnBtL,GAAI8L,eAAiBrO,EAAMnG,IAAI,GAAI,EACnC0I,GAAI+I,QAAUtL,EAAMnG,IAAI,GAAI,EAC5B0I,GAAIyN,aAAehQ,EAAMnG,IAAI,GAAI,SACjC0I,GAAI4I,SAAWnL,EAAMnG,IAAI,GAAI,EAC7B0I,GAAI0N,MAAQjQ,EAAMnG,IAAI,GAAI,GAC1B0I,GAAI2N,cAAgBlQ,EAAMnG,IAAI,GAAI,SAElC,IAAI8T,GAAwB,CAC5B,IAAIlI,EAEJ,OAAOkI,EAAiBD,EAAa,CACpC,GAAIM,EACJA,GAAclU,KAAKG,cAAc6F,cAAcC,mBAE/CC,GAAQlG,KAAKG,cAAcgG,iBAC1BC,EAAGX,EAAUY,MACbuE,EAAGnF,EAAUY,MACbwE,EAAGpF,EAAUY,MACb4D,IAAKjK,KAAKG,cAAc+J,YACxBC,IAAKnK,KAAKG,cAAc+J,YACxBE,IAAKpK,KAAKG,cAAc+J,YACxBmM,IAAK5Q,EAAUgP,OACf6B,IAAK7Q,EAAUgP,OACf8B,IAAK9Q,EAAUkL,OACf6F,IAAK/Q,EAAUkL,OACf8F,IAAKhR,EAAUsF,MACf2L,IAAKjR,EAAUsF,MACf4L,IAAKlR,EAAUwK,MACf2G,IAAKnR,EAAUwK,MACf4G,IAAKpR,EAAU2K,KACf0G,IAAKrR,EAAU2K,KACf2G,IAAKtR,EAAUuR,QAGhB,QAAQ9C,GACP,IAAK,KAEJvI,EAAWzF,EAAMnG,IAAI,EAAG,EACxB,IAAI4L,EAAS,EAAG,CACf,GAAIsL,GAA+CjX,KAAKG,cAAc6G,aAAa2E,EACnFlD,GAAIyO,gBAAgBD,EACpB9C,IAAe,0BAAgD8C,EAAWnR,KAG3E,KAED,KAAK,KAEJ6F,EAAWzF,EAAMnG,IAAI,EAAG,EACxB,IAAI4L,EAAS,EAAG,CACf,GAAIwL,GAAmDnX,KAAKG,cAAc6G,aAAa2E,EACvFlD,GAAI2O,aAAaD,CACjBhD,IAAe,0BAAgDgD,EAAerR,KAG/E,KAED,KAAK,GACJ6F,EAAWzF,EAAMnG,IAAI,EAAG,EACxB,IAAIsX,GAAwB7W,SAC5B,IAAImL,EAAS,EAAG,CACf0L,EAA2BrX,KAAKG,cAAc6G,aAAa2E,GAE5D,GAAG0L,GAAS7W,UAAU,CACrB6W,EAAyBrX,KAAKG,cAAcmX,wBAI7C7O,EAAI8O,cAAgB,GAAIxE,GAAoBsE,EAC5ClD,IAAe,yCAA8DkD,EAASvR,IACtF,MAED,KAAK,IACJ2C,EAAI+O,cAAgB,GAAIxE,EACxBmB,IAAe,uBACf,MACD,KAAK,IACJxI,EAAWzF,EAAMnG,IAAI,EAAG,EACxB,IAAI0X,GAAoBjX,SACxB,IAAImL,EAAS,EAAG,CACf8L,EAAuBzX,KAAKG,cAAc6G,aAAa2E,GAExD,GAAG8L,GAASjX,UAAU,CACrBiX,EAAQ3E,EAAuBwB,oBAIhC7L,EAAI+O,cAAgB,GAAItE,GAAqCuE,EAC7DtD,IAAe,2DAA6EsD,EAAS3R,IACrG,MACD,KAAK,IACJ2C,EAAI+O,cAAgB,GAAIpE,GAAkBlN,EAAMnG,IAAI,IAAK,GACzDoU,IAAe,sBACf,MACD,KAAK,IACJxI,EAAWzF,EAAMnG,IAAI,EAAG,EACxB,IAAI0X,GAAoBjX,SACxB,IAAImL,EAAS,EAAG,CACf8L,EAAuBzX,KAAKG,cAAc6G,aAAa2E,GAExD,GAAG8L,GAASjX,UAAU,CACrBiX,EAAQ3E,EAAuBwB,oBAIhC7L,EAAI+O,cAAgB,GAAIrE,GAAqCsE,EAASzX,KAAKG,cAAc4V,2BAA2B7P,EAAMnG,IAAI,IAAK,KAAM,MAAO0I,EAAI+O,cACpJrD,IAAe,oDAAuEsD,EAAS3R,IAC/F,MACD,KAAK,IACJ2C,EAAI+O,cAAgB,GAAIvE,GAAiB/M,EAAMnG,IAAI,IAAK,GAAI0I,EAAI+O,cAC5C/O,GAAI+O,cAAeE,WAAaxR,EAAMnG,IAAI,IAAK,GACnEoU,IAAe,qBACf,MACD,KAAK,IAMJ,KAED,KAAK,KACJ1L,EAAIkP,eAAiB,GAAIpE,EACzBY,IAAe,8BACf,MACD,KAAK,KACJ1L,EAAIkP,eAAiB,GAAIlE,EACzBU,IAAe,wBACf,MACD,KAAK,KACJ1L,EAAIkP,eAAiB,GAAInE,GAAkBtN,EAAMnG,IAAI,IAAK,IAAM0I,EAAIkP,eAC/ClP,GAAIkP,eAAgBD,WAAaxR,EAAMnG,IAAI,IAAK,GACrEoU,IAAe,sBACf,MACD,KAAK,KACJ1L,EAAIkP,eAAiB,GAAIrE,GAAsBpN,EAAMnG,IAAI,IAAK,MAAO0I,EAAIkP,eAChDlP,GAAIkP,eAAgBC,aAAe1R,EAAMnG,IAAI,IAAK,EAClD0I,GAAIkP,eAAgBE,kBAAoB3R,EAAMnG,IAAI,IAAK,GAChFoU,IAAe,0BACf,MACD,KAAK,KACJ,KACD,KAAK,KACJxI,EAAWzF,EAAMnG,IAAI,EAAG,EACxB,IAAI0X,GAAoBjX,SACxB,IAAImL,EAAS,EAAG,CACf8L,EAAuBzX,KAAKG,cAAc6G,aAAa2E,GAExD,GAAG8L,GAASjX,UAAU,CACrBiX,EAAQ3E,EAAuBwB,oBAMhC,GAAG7L,EAAIuN,WAAWxV,UACjBiI,EAAIuN,UAA2ByB,CAChChP,GAAIqP,aAAe,GAAIzE,GAAuC5K,EAAIuN,UAA0ByB,EAC5FtD,IAAe,4DAA+EsD,EAAS3R,IACvG,OAEF9F,KAAKG,cAAcyG,qBACnBiN,IAAkB,QAKhB,IAAK5Q,GAAM,GAAKA,GAAM,EAAG,CdwyBpB,GctyBLmO,GAAelL,EAAMnG,IAAI,EAAG,SAChCoU,IAAa/C,CAEb,IAAIkE,GAAyBpP,EAAMnG,IAAI,EAAG,EAE1C,IAAIwV,GAA2B/U,SAC/B,IAAI8U,EAAgB,EAAG,CACtBC,EAA8BvV,KAAKG,cAAc6G,aAAasO,GAE/D,GAAGA,GAAiB9U,UAAU,CAC7B+U,EAAezC,EAAuBwB,oBAGvC,GAAIyD,GAA0B,GAAIlF,GAA6B0C,EAE/DpB,IAAc,cAAcmB,EAAgB,GAC5CyC,GAAUrP,UAAY,IACtBqP,GAAUC,cAAgB,IAC1BD,GAAU5C,cAAgB,IAC1B4C,GAAUnP,MAAQ5I,KAAKG,cAAcyG,qBACrC,IAAI5G,KAAKG,cAAckH,MACtBC,QAAQC,IAAI4M,EACbnU,MAAKG,cAAc0F,UAAUuB,KAAK2Q,CAClC,QAGDtP,EAAIG,MAAQ5I,KAAKG,cAAcyG,qBAC/B5G,MAAKG,cAAc0F,UAAUuB,KAAKqB,CAClC,IAAIzI,KAAKG,cAAckH,MAAO,CAC7BC,QAAQC,IAAI4M,IAIf,OAAA/S,IAnZgCkE,EAqZL7F,GAAAJ,QAAlB+B,IdmyBN6W,qDAAqDzX,UAAU0X,6CAA6C1X,UAAU2X,4CAA4C3X,UAAU4X,gDAAgD5X,UAAU6X,yDAAyD7X,UAAU8X,sDAAsD9X,UAAU+X,wDAAwD/X,UAAUgY,2DAA2DhY,UAAUiY,2DAA2DjY,UAAUkY,uDAAuDlY,UAAUmY,6DAA6DnY,UAAUoY,+DAA+DpY,UAAUqY,uDAAuDrY,UAAUsY,2DAA2DtY,UAAUuY,yDAAyDvY,UAAUhB,yDAAyD,yDAAyDgI,+CAA+C,iDAAiDxD,qDAAqD,SAASzF,EAAQkB,EAAOJ,GAIjvC,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,Ge7tCtB,IAAOE,GAAkB/G,EAAY,yDAIrC,IAAOya,GAAIza,EAAkB,mCAK7B,IAAO0N,GAAQ1N,EAAiB,gCAChC,IAAOiL,GAAQjL,EAAiB,gCAChC,IAAOkH,GAASlH,EAAa,+CAE7B,IAAMsC,GAAa,SAAA6E,GAASX,EAAtBlE,EAAa6E,EAIlB,SAJK7E,KAMJ6E,EAAApG,KAAAU,MAIMa,EAAAf,UAAAQ,eAAP,WAEC,GAAI2Y,EACJ,IAAIC,EACJ,IAAGlZ,KAAKG,cAAc0F,UAAU5C,MAAM,GAAI,CACzC,GAAIyG,GAAgB1J,KAAKG,cAAc6F,cAAcM,iBACrD,IAAIqD,GAAe3J,KAAKG,cAAcyJ,gBAEvC5J,KAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvD,IAAI8D,GAAoB,iBACxB,IAAIrB,GAAiBxI,KAAKG,cAAc6F,cAAcM,iBACtD,IAAI8F,GAA0BpM,KAAKG,cAAc6G,aAAawB,EAE9D,IAAI4D,GAAM5L,UAAW,CACpB4L,EAAO,GAAIH,GAGZjM,KAAKG,cAAc0F,UAAUsT,MAAQ3Q,CACrC,IAAI4Q,GAAgC,GAAI3W,MACxCwW,GAAgBjZ,KAAKG,cAAc6F,cAAcC,mBAEjD,IAAIoT,GAA8B,GAAI5W,MACtCyW,GAAmB,CAGnB,OAAOA,EAAmBD,EAAe,CACxC,GAAIK,EACJA,GAAStZ,KAAKG,cAAc6F,cAAcM,iBAC1C,IAAIiT,GAAgCvZ,KAAKG,cAAc6G,aAAasS,EACpE,IAAGC,GAAG/Y,UAAW,CAChB4Y,EAAUvW,KAAK0W,EACfF,GAAcxW,KAAK0W,EAAEzT,MAEtBoT,IAGD,GAAIM,GAAY,GAAIR,GAAK5M,EAAM,KAE/B,IAAGpM,KAAKG,cAAc0F,UAAU5C,MAAM,GAAI,CAEzCuW,EAAKjP,UAAUC,SAAWb,CAC1B,IAAGD,EAAO,EAAG,CACZ,GAAIe,GAAwDzK,KAAKG,cAAc6G,aAAa0C,EAE5F,IAAIe,GAAUjK,UAAW,CACxBiK,EAAOC,SAAS8O,EAChB3P,GAAaY,EAAO3E,OAKvB,GAAIsT,EAAU7Z,QAAU,GAAKia,EAAKC,UAAUla,QAAU,EAAG,CACxDia,EAAKE,SAAWN,EAAU,OACpB,IAAIA,EAAU7Z,OAAS,EAAG,CAChC,GAAIP,EAIJ,KAAKA,EAAI,EAAGA,EAAIwa,EAAKC,UAAUla,OAAQP,IAAK,CAC3Cwa,EAAKC,UAAUza,GAAG0a,SAAWN,EAAUO,KAAKC,IAAIR,EAAU7Z,OAAS,EAAGP,KAGxE,GAAKgB,KAAKG,cAAc2L,cAAgB,GAAM9L,KAAKG,cAAc2L,eAAiB,GAAO9L,KAAKG,cAAc4L,eAAiB,EAAK,CACjI,GAAI7F,GAAsBlG,KAAKG,cAAcgG,iBAAiBC,EAAEpG,KAAKG,cAAcwK,aAAcC,EAAE5K,KAAKG,cAAcwK,aAAcE,EAAE7K,KAAKG,cAAcwK,aAAcG,EAAErF,EAAUsF,MAAOmF,EAAEzK,EAAU2K,MACtMoJ,GAAKxO,MAAQ,GAAIxB,GAAiBtD,EAAMnG,IAAI,EAAG,GAAYmG,EAAMnG,IAAI,EAAG,GAAamG,EAAMnG,IAAI,EAAG,GAClGyZ,GAAK5H,aAAe1L,EAAMnG,IAAI,EAAG,UAC3B,CACNC,KAAKG,cAAcgG,gBAAgB,MAGpCqT,EAAK5Q,MAAQ5I,KAAKG,cAAcyG,qBAChC5G,MAAKG,cAAc0F,UAAUuB,KAAOoS,CACpC,IAAIxZ,KAAKG,cAAckH,MAAO,CAC7BC,QAAQC,IAAI,0BAA4BzB,KAAO,qBAAuB+D,EAAa,qBAAuBuC,EAAKtG,KAAO,kBAAoB0T,EAAKC,UAAUla,OAAS,kBAAoB8Z,EAAc5G,aAKvM,OAAA5R,IAxF4ByE,EA0F5B7F,GAAuBJ,QAAdwB,IfqsCN2O,gCAAgChP,UAAUyK,gCAAgCzK,UAAUqZ,mCAAmCrZ,UAAUhB,yDAAyD,yDAAyDgI,+CAA+C,iDAAiDvD,yDAAyD,SAAS1F,EAAQkB,EAAOJ,GACva,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GgBpzCtB,IAAOE,GAAkB/G,EAAY,yDAGrC,IAAOkH,GAASlH,EAAgB,+CAEhC,IAAM2D,GAAiB,SAAAwD,GAASX,EAA1B7C,EAAiBwD,EAGtB,SAHKxD,KAKJwD,EAAApG,KAAAU,MAIMkC,EAAApC,UAAAQ,eAAP,WAECN,KAAKG,cAAc0F,UAAUqC,MAAMzC,EAAUwD,mBAC7C,IAAI/C,GAAsBlG,KAAKG,cAAcgG,iBAAiBC,EAAEX,EAAUgP,OAAQ7J,EAAEnF,EAAUqU,UAAWjP,EAAEpF,EAAUqU,UAAWhP,EAAErF,EAAUqU,UAAW5J,EAAEzK,EAAUqU,WAEnK,IAAI9Z,KAAKG,cAAckH,MAAO,CAC7BC,QAAQC,IAAI,+CAAiDrB,EAAMnG,IAAI,EAAG,GAC1EuH,SAAQC,IAAI,+CAAiDrB,EAAMnG,IAAI,EAAG,WAC1EuH,SAAQC,IAAI,+CAAiDrB,EAAMnG,IAAI,EAAG,WAC1EuH,SAAQC,IAAI,+CAAiDrB,EAAMnG,IAAI,EAAG,WAC1EuH,SAAQC,IAAI,+CAAiDrB,EAAMnG,IAAI,EAAG,aAK7E,OAAAmC,IAxBgCoD,EA0BhC7F,GAA2BJ,QAAlB6C,IhB6yCN1C,yDAAyD,yDAAyDgI,+CAA+C,iDAAiDtD,0DAA0D,SAAS3F,EAAQkB,EAAOJ,GACvS,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GiBj1CtB,IAAOE,GAAkB/G,EAAY,yDACrC,IAAOwb,GAAWxb,EAAc,iDAGhC,IAAOyb,GAAczb,EAAe,sCACpC,IAAO0b,GAAQ1b,EAAiB,gCAGhC,IAAO2b,GAAgB3b,EAAc,8CAErC,IAAO4b,GAAsB5b,EAAY,6DACzC,IAAO6b,GAAqB7b,EAAY,4DACxC,IAAO8b,GAAoB9b,EAAa,2DAExC,IAAO+b,GAA4B/b,EAAW,mEAC9C,IAAOgc,GAAsBhc,EAAa,6DAC1C,IAAOic,GAAqBjc,EAAa,4DACzC,IAAOkc,GAAclc,EAAqB,qDAE1C,IAAOiL,GAAQjL,EAAiB,gCAEhC,IAAOmc,GAASnc,EAAe,wCAE/B,IAAOoc,GAAoBpc,EAAa,mDAExC,IAAM8C,GAAkB,SAAAqE,GAASX,EAA3B1D,EAAkBqE,EAIvB,SAJKrE,KAMJqE,EAAApG,KAAAU,KACAA,MAAK4a,QAAU,GAAID,GAIbtZ,EAAAvB,UAAAQ,eAAP,WAGC,GAAItB,EACJ,IAAI6b,EACJ,IAAIC,EACJ,IAAIC,GAAS/a,KAAK4a,QAAQI,iBAC1Bhb,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvD,IAAIkV,KAAYjb,KAAKG,cAAc6F,cAAcW,kBACjD,IAAIuU,GAAUlb,KAAKG,cAAc6F,cAAcW,kBAC/C,IAAIwU,GAAanb,KAAKG,cAAc6F,cAAcoV,WjBq0C5C,IiBl0CFC,GAAe,IAAOF,CAC1B,IAAIG,GAAqB,CACzB,IAAIC,GAAiC,CjB20C/B,IiB9zCFC,GAA8Bxb,KAAKG,cAAc6F,cAAcC,mBACnE,KAAKjH,EAAI,EAAGA,EAAIwc,EAAsBxc,IAAK,CAC1Cyc,EAAazb,KAAKG,cAAc6F,cAAcM,iBAC9C,IAAIoV,GAAyC1b,KAAKG,cAAc6G,aAAayU,EAC7E,IAAIC,GAAa,KAAM,CACtBX,EAAOY,uBAAuBD,OAE3B,CAGHpU,QAAQC,IAAI,+CAGdgU,GAA2BC,CAC3B,IAAII,GAAuC5b,KAAKG,cAAc6F,cAAcC,mBAC5EuV,IAAsBI,CACtB,KAAK5c,EAAI,EAAGA,EAAI4c,EAAsC5c,IAAK,CAC1Dyc,EAAazb,KAAKG,cAAc6F,cAAcM,iBAC9CgV,GAAgBtb,KAAKG,cAAc6F,cAAcC,mBACjDsV,IAA2BD,CAC3B,IAAII,GAAyC1b,KAAKG,cAAc6G,aAAayU,EAC7E,IAAIC,GAAa,KAAM,CACtB,IAAKb,EAAI,EAAGA,EAAIS,EAAeT,IAAK,CACnCE,EAAOY,uBAAuBD,QAG5B,CACH,IAAKb,EAAI,EAAGA,EAAIS,EAAeT,IAAK,CAGnCvT,QAAQC,IAAI,gDjBq0CT,GiB7zCFsU,GAAuB7b,KAAKG,cAAc6F,cAAcC,mBAC5D,KAAKjH,EAAI,EAAGA,EAAI6c,EAAsB7c,IAAK,CAC1Cyc,EAAazb,KAAKG,cAAc6F,cAAcM,iBAC9C,IAAIoV,GAAyC1b,KAAKG,cAAc6G,aAAayU,EAC7E,IAAIC,GAAa,KAAM,CAEtBpU,QAAQC,IAAI,kDAGT,GjBg0CC,GiB1zCFuU,GAAY9b,KAAKG,cAAc6F,cAAcC,mBjB4zC3C,IiBxzCF8V,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIxQ,EACJ,IAAIyQ,EACJ,IAAIC,EACJ,IAAIV,EACJ,IAAIW,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJT,GAAc,CACd,KAAK/c,EAAI,EAAGA,EAAI8c,EAAW9c,IAAK,CAC/Bsd,EAAQ,GAAIpC,EAEZ8B,GAAgBhc,KAAKG,cAAc6F,cAAcM,kBAAkB+U,CACnEiB,GAAMG,aAAaV,EAAeC,EAClCD,IAAiBC,CAGjBC,GAAYjc,KAAKG,cAAc6F,cAAcW,kBAC7C,KAAKkU,EAAI,EAAGA,EAAIoB,EAAWpB,IAAK,CAC/B0B,EAAQvc,KAAKG,cAAc4F,cAI5B0F,EAAczL,KAAKG,cAAc6F,cAAcC,mBAG/CuW,GAAkB,KAClB,KAAK3B,EAAI,EAAGA,EAAIpP,EAAaoP,IAAK,CACjCwB,EAAcrc,KAAKG,cAAc6F,cAAcW,kBAO/C,QAAQ0V,GAEP,IAAK,GACJD,EAAgBpc,KAAKG,cAAc6F,cAAcC,mBjBgzC/B,IiB9yCdyW,GAA4B,GAAIja,MACpC,KAAKqY,EAAI,EAAGA,EAAIsB,EAAetB,IAAK,CAEnCqB,EAAenc,KAAKG,cAAc6F,cAAc+D,WAChD2S,GAAc7Z,KAAKsZ,GAGpBG,EAAMK,oBAAoB,GAAIrC,GAA6BoC,GAC3D,MAED,KAAK,GACL,IAAK,GACJR,EAAWlc,KAAKG,cAAc6F,cAAcC,mBAE5C,IAAIoW,GAAe,EAAG,CACrBG,EAAgB,IAChBL,GAAenc,KAAKG,cAAc6F,cAAc+D,WjB8yC3B,IiB5yCjB6S,GAAW7B,EAAO8B,kBAAkBX,EACxC,IAAIU,GAAYpc,UAAW,CAC1B8b,EAAMK,oBAAoB,GAAIxC,GAAuB+B,EAAUC,GAE/D,IAAGS,EAASE,QAAQpC,GAAY,CAC/B4B,EAAMK,oBAAoB,GAAIpC,GAAuB2B,EAAUU,EAAS9W,YAGtE,CACHwB,QAAQC,IAAI,sCAAuC2U,IAGrD,GAAIa,GAAa/c,KAAKG,cAAc6F,cAAcC,mBAWlD,IAAI8T,EAAYiD,KAAKD,EAAYhD,EAAYkD,OAAQ,CACpD,GAAIC,GAAa,GAAIjD,EACrB,IAAIF,EAAYiD,KAAKD,EAAYhD,EAAYoD,OAAQ,MAEhD,CACJD,EAAWE,QAAQ,GAAKpd,KAAKG,cAAc6F,cAAcoV,WACzD8B,GAAWE,QAAQ,GAAKpd,KAAKG,cAAc6F,cAAcoV,WACzD8B,GAAWE,QAAQ,GAAKpd,KAAKG,cAAc6F,cAAcoV,WACzD8B,GAAWE,QAAQ,GAAKpd,KAAKG,cAAc6F,cAAcoV,WACzD8B,GAAWnQ,SAAW,GAAIvD,GAASxJ,KAAKG,cAAc6F,cAAcoV,YAAapb,KAAKG,cAAc6F,cAAcoV,YAAa,GAEhIkB,EAAMK,oBAAoB,GAAInC,GAAsB0B,EAAU,aAAcgB,IAG7E,GAAInD,EAAYiD,KAAKD,EAAYhD,EAAYsD,OAAQ,CACpD,GAAIC,GAAqB,GAAItD,EAC7B,IAAID,EAAYiD,KAAKD,EAAYhD,EAAYwD,OAAQ,MAEhD,CACJD,EAAmBE,cAAgBxd,KAAKG,cAAc6F,cAAcoV,WACpEkC,GAAmBG,gBAAkBzd,KAAKG,cAAc6F,cAAcoV,WACtEkC,GAAmBI,eAAiB1d,KAAKG,cAAc6F,cAAcoV,WACrEkC,GAAmBK,gBAAkB3d,KAAKG,cAAc6F,cAAcoV,WACtEkC,GAAmBM,UAAY5d,KAAKG,cAAc6F,cAAc+D,WAChEuT,GAAmBO,YAAc7d,KAAKG,cAAc6F,cAAc+D,WAClEuT,GAAmBQ,WAAa9d,KAAKG,cAAc6F,cAAc+D,WACjEuT,GAAmBS,YAAc/d,KAAKG,cAAc6F,cAAc+D,aAGpE,GAAIgQ,EAAYiD,KAAKD,EAAYhD,EAAYiE,OAAQ,CACpD,GAAIC,GAAgBje,KAAKG,cAAc6F,cAAcW,kBACrD,IAAIuX,GAAmBle,KAAKG,cAAc4V,2BAA2BkI,GAEtE,GAAIlE,EAAYiD,KAAKD,EAAYhD,EAAYoE,OAAQ,CACpD7B,EAAMK,oBAAoB,GAAInC,GAAsB0B,EAAU,UAAWlc,KAAKG,cAAc6F,cAAcoY,aAE3G,GAAIrE,EAAYiD,KAAKD,EAAYhD,EAAYsE,OAAQ,CACpD,GAAIC,GAAete,KAAKG,cAAc4F,aACtC,IAAIuY,EAAa/e,OAAQ,CACxB+c,EAAMK,oBAAoB,GAAIpC,GAAuB2B,EAAUoC,KAGjE,GAAIvE,EAAYiD,KAAKD,EAAYhD,EAAYwE,OAAQ,CACpD,GAAIC,GAAexe,KAAKG,cAAc6F,cAAcC,mBACpD,IAAIwY,GAAW,GAAIhc,MACnB,KAAK,GAAIic,GAAS,EAAGA,EAASF,EAAcE,IAAU,CACrDD,EAAS5b,KAAK7C,KAAKG,cAAc6F,cAAc+D,aAEhD,GAAI0U,EAASlf,OAAS,EAAG,CACxB,GAAKkf,EAASlf,QAAU,GAAOkf,EAAS,KAAO,EAAI,CAElDnC,EAAMK,oBAAoB,GAAInC,GAAsB0B,EAAU,WAAYA,QAG1EI,GAAMK,oBAAoB,GAAIlC,GAAeyB,EAAUuC,KAG1D,KAED,KAAK,GAIJvC,EAAWlc,KAAKG,cAAc6F,cAAcM,iBAC5CmV,GAAazb,KAAKG,cAAc6F,cAAcM,iBAG9C,MAED,SAGC,OAKH,GAAIkW,EAAiB,CAEpBF,EAAMK,oBAAoB,GAAIvC,GAC9BoC,GAAkB,MAGnB,GAAImC,GAAc3e,KAAKG,cAAc6F,cAAcM,iBACnD,IAAIqY,EAAc,EAAG,CjBoyCR,GiBlyCRC,GAAa5e,KAAKG,cAAc6F,cAAc8B,aAAa6W,EAC/DrC,GAAMK,oBAAoB,GAAItC,GAAqBuE,IAKpD5e,KAAKG,cAAc6F,cAAcM,iBAEjCyU,GAAO8D,SAASvC,GAGjBtc,KAAKG,cAAcgG,gBAAgB,KACnCnG,MAAKG,cAAcyG,qBACnB5G,MAAKG,cAAc0F,UAAUuB,KAAO2T,CACpC,IAAI/a,KAAKG,cAAckH,MACtBC,QAAQC,IAAI,6BAA+BzB,KAAO,eAAiBmV,EAAU,eAAiBC,EAAU,iBAAmBY,GAI9H,OAAAza,IA9RiCiE,EAgSjC7F,GAA4BJ,QAAnBgC,IjBgyCNyd,sCAAsCte,UAAUue,gCAAgCve,UAAUyK,gCAAgCzK,UAAUwe,wCAAwCxe,UAAUhB,yDAAyD,yDAAyDyf,iDAAiD,iDAAiDC,mDAAmD1e,UAAU2e,8CAA8C3e,UAAU4e,6DAA6D5e,UAAU6e,4DAA4D7e,UAAU8e,2DAA2D9e,UAAU+e,mEAAmE/e,UAAUgf,6DAA6Dhf,UAAUif,qDAAqDjf,UAAUkf,4DAA4Dlf,YAAY2D,uDAAuD,SAAS5F,EAAQkB,EAAOJ,GAC9jC,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GkB9lDtB,IAAOE,GAAkB/G,EAAY,yDAErC,IAAOkH,GAASlH,EAAc,+CAE9B,IAAOohB,GAAUphB,EAAgB,wCACjC,IAAOqhB,GAAsBrhB,EAAa,oDAC1C,IAAOshB,GAAmBthB,EAAc,iDACxC,IAAOuhB,GAAmBvhB,EAAc,iDACxC,IAAOwhB,GAAuBxhB,EAAa,qDAC3C,IAAOyhB,GAAoBzhB,EAAc,kDACzC,IAAO0hB,GAAqB1hB,EAAa,mDACzC,IAAO2hB,GAAoB3hB,EAAc,kDAGzC,IAAMoC,GAAe,SAAA+E,GAASX,EAAxBpE,EAAe+E,EAGpB,SAHK/E,KAKJ+E,EAAApG,KAAAU,MAIMW,EAAAb,UAAAQ,eAAP,WAEC,GAAIwF,EACJ,IAAIqa,EACJ,IAAIC,EACJ,IAAI3T,EACJ,IAAIvG,EACJ,IAAIma,EAGJrgB,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvDqa,GAAWpgB,KAAKG,cAAc6F,cAAcW,kBAC5CT,GAAQlG,KAAKG,cAAcgG,iBAAiB8D,IAAIjK,KAAKG,cAAcmM,UAAWnC,IAAInK,KAAKG,cAAcmM,UAAWlC,IAAIpK,KAAKG,cAAcmM,UAAWgU,IAAItgB,KAAKG,cAAcmM,UAAWiU,IAAIvgB,KAAKG,cAAcmM,UAAWiK,IAAI9Q,EAAUkL,OAAQ6F,IAAI/Q,EAAUkL,OAAQ6P,IAAI/a,EAAUkL,OAAQkG,IAAIpR,EAAU2K,KAAM0G,IAAIrR,EAAU2K,KAAMqQ,IAAIhb,EAAU2K,KAAMsQ,IAAIjb,EAAU2K,MAElW,IAAIuQ,IAAgC,sBAAuB,uBAAwB,sBAAuB,wBAAyB,0BAA2B,uBAAwB,0BAA2B,wBAEjN,QAAQP,GAGP,IAAK,GACJD,EAAS,GAAIH,GAAqB9Z,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,MAAOmG,EAAMnG,IAAI,IAAK,OACvJ,MAED,KAAK,GACJogB,EAAS,GAAIL,GAAoB5Z,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,MACxK,MAED,KAAK,GACJogB,EAAS,GAAIF,GAAsB/Z,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,MAC9G,MAED,KAAK,GACJogB,EAAS,GAAIJ,GAAwB7Z,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,GAAI,KAAM,KAAM,KACrJ,KAAKmG,EAAMnG,IAAI,IAAK,MACOogB,EAAQS,UAAY,KAC/C,KAAK1a,EAAMnG,IAAI,IAAK,MACOogB,EAAQU,aAAe,KAClD,KAAK3a,EAAMnG,IAAI,IAAK,MACOogB,EAAQW,IAAM,KAEzC,MAED,KAAK,GACJX,EAAS,GAAIN,GAAoB3Z,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,MAAOmG,EAAMnG,IAAI,IAAK,MACtJ,MAED,KAAK,GACJogB,EAAS,GAAIP,GAAuB1Z,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,MACpI,MAED,KAAK,GACJogB,EAAS,GAAID,GAAqBha,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,MAChI,MAED,SACCogB,EAAS,GAAIR,EACbrY,SAAQC,IAAI,iCACZ,OAGF,GAAKrB,EAAMnG,IAAI,IAAK,IAAM,GAAOmG,EAAMnG,IAAI,IAAK,IAAM,EAAI,EAK1DC,KAAKG,cAAcyG,qBACnB5G,MAAKG,cAAc0F,UAAUuB,KAAO+Y,CAEpC,IAAIngB,KAAKG,cAAckH,MAAO,CAC7B,GAAK+Y,EAAW,GAAOA,EAAW,EAAI,CACrCA,EAAW,EAEZ9Y,QAAQC,IAAI,8BAAgCvH,KAAKG,cAAc0F,UAAUC,KAAO,YAAc6a,EAAeP,KAKhH,OAAAzf,IAtF8B2E,EAwF9B7F,GAAyBJ,QAAhBsB,IlBqkDNogB,wCAAwCvgB,UAAUwgB,oDAAoDxgB,UAAUygB,iDAAiDzgB,UAAU0gB,iDAAiD1gB,UAAU2gB,qDAAqD3gB,UAAU4gB,kDAAkD5gB,UAAU6gB,mDAAmD7gB,UAAU8gB,kDAAkD9gB,UAAUhB,yDAAyD,yDAAyDgI,+CAA+C,iDAAiDpD,6DAA6D,SAAS7F,EAAQkB,EAAOJ,GACpwB,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GmBhrDtB,IAAOE,GAAkB/G,EAAY,yDAErC,IAAOkH,GAASlH,EAAc,+CAQ9B,IAAOgjB,GAAoBhjB,EAAc,0DACzC,IAAOijB,GAAoBjjB,EAAc,0DACzC,IAAOkjB,GAAgBljB,EAAe,sDACtC,IAAOmjB,GAAgBnjB,EAAe,sDACtC,IAAOojB,GAAgBpjB,EAAe,sDAEtC,IAAM+C,GAAqB,SAAAoE,GAASX,EAA9BzD,EAAqBoE,EAG1B,SAHKpE,KAKJoE,EAAApG,KAAAU,MAIMsB,EAAAxB,UAAAQ,eAAP,WAEC,GAAI2C,EACJ,IAAI2E,EACJ,IAAImB,EACJ,IAAI6Y,EACJ5hB,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aAEvD6b,GAAgB5hB,KAAKG,cAAc6F,cAAcM,iBACjD,IAAIwJ,GAA4B9P,KAAKG,cAAc6G,aAAa4a,EAEhE,IAAI9R,GAAOtP,UAAW,CAErB,OAGDuI,EAAQ/I,KAAK6hB,sBAAsB/R,EAEnC,KAAK/G,EACJ,MACD/I,MAAKG,cAAcyG,qBACnB5G,MAAKG,cAAc0F,UAAUuB,KAAO2B,CACpC,IAAI/I,KAAKG,cAAckH,MAAO,CAC7BC,QAAQC,IAAI,0CAA4CwB,EAAMjD,KAAO,aAAeiD,EAAQ,mBAAoB+G,EAAMhK,OAMhHxE,GAAAxB,UAAA+hB,sBAAR,SAA8B/R,GAG7B,GAAIgS,GAAoB9hB,KAAKG,cAAc6F,cAAcC,mBACzD,IAAImR,EACJ,IAAIlR,GAAsBlG,KAAKG,cAAcgG,iBAAiBC,EAAEX,EAAUY,MAAOuE,EAAEnF,EAAUY,MAAOwE,EAAEpF,EAAUY,MAAO4D,IAAIjK,KAAKG,cAAc+J,YAAaC,IAAInK,KAAKG,cAAc+J,YAAaE,IAAIpK,KAAKG,cAAc+J,YAAamM,IAAI5Q,EAAUgP,OAAQ6B,IAAI7Q,EAAUgP,OAAQ8B,IAAI9Q,EAAUkL,OAAQ6F,IAAI/Q,EAAUkL,OAAQ8F,IAAIhR,EAAUsF,MAAO2L,IAAIjR,EAAUsF,MAAO4L,IAAIlR,EAAUwK,MAAO2G,IAAInR,EAAUwK,MAAO4G,IAAIpR,EAAU2K,KAAM0G,IAAIrR,EAAU2K,KAAM2G,IAAItR,EAAUuR,QAErc,IAAIrL,EACJ,IAAI9E,EACJ,QAAQib,GAUP,IAAK,MACJnW,EAAWzF,EAAMnG,IAAI,EAAG,EACxB,IAAIgiB,GAAuD/hB,KAAKG,cAAc6G,aAAa2E,EAC3F,IAAIoW,GAAavhB,UAAW,CAE3B,MAAO4W,GAERA,EAAe,GAAIsK,GAAoCK,EACvD,MACD,KAAK,MAEJ3K,EAAe,GAAIoK,GAAwC1R,EACnCsH,GAAc/B,MAAQnP,EAAMnG,IAAI,IAAK,EACrCqX,GAAc4K,QAAU9b,EAAMnG,IAAI,IAAK,KAC/D,MAED,KAAK,MAGJqX,EAAe,GAAImK,GAAwCzR,EAAgB5J,EAAMnG,IAAI,IAAK,GAClEqX,GAAc/B,MAAQnP,EAAMnG,IAAI,IAAK,EACrCqX,GAAc4K,QAAU9b,EAAMnG,IAAI,IAAK,KACvCqX,GAAc6K,MAAQ/b,EAAMnG,IAAI,IAAK,EAE7D,MACD,KAAK,MAEJqX,EAAe,GAAIuK,GAAoC7R,EAAgB5J,EAAMnG,IAAI,IAAK,GAClEqX,GAAc/B,MAAQnP,EAAMnG,IAAI,IAAK,EACrCqX,GAAc4K,QAAU9b,EAAMnG,IAAI,IAAK,KACvCqX,GAAc6K,MAAQ/b,EAAMnG,IAAI,IAAK,EAEzD,MACD,KAAK,MACJqX,EAAe,GAAIqK,GAAiB3R,EAChBsH,GAAc/B,MAAQnP,EAAMnG,IAAI,IAAK,EACrCqX,GAAc4K,QAAU9b,EAAMnG,IAAI,IAAK,KAC3D,OAGFC,KAAKG,cAAcyG,qBACnB,OAAOwQ,GAET,OAAA9V,IApGoCgE,EAsGpC7F,GAA+BJ,QAAtBiC,InB4oDN4gB,0DAA0D1hB,UAAU2hB,0DAA0D3hB,UAAU4hB,sDAAsD5hB,UAAU6hB,sDAAsD7hB,UAAU8hB,sDAAsD9hB,UAAUhB,yDAAyD,yDAAyDgI,+CAA+C,iDAAiDnD,6DAA6D,SAAS9F,EAAQkB,EAAOJ,GAClnB,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GoBvwDtB,IAAOE,GAAkB/G,EAAY,yDAErC,IAAOkH,GAASlH,EAAc,+CAE9B,IAAOyb,GAAczb,EAAe,sCAKpC,IAAOgkB,GAAuBhkB,EAAa,6DAC3C,IAAOikB,GAA0BjkB,EAAY,gEAG7C,IAAOkkB,GAAelkB,EAAe,qDAGrC,IAAOmkB,GAAoBnkB,EAAc,0DAEzC,IAAMgD,GAAqB,SAAAmE,GAASX,EAA9BxD,EAAqBmE,EAG1B,SAHKnE,KAKJmE,EAAApG,KAAAU,MAIMuB,EAAAzB,UAAAQ,eAAP,WAGC,GAAIyI,EAEJ/I,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvDgD,GAAQ/I,KAAK2iB,uBACb3iB,MAAKG,cAAcyG,qBACnB5G,MAAKG,cAAc0F,UAAUuB,KAAO2B,CACpC,IAAI/I,KAAKG,cAAckH,MAAO,CAC7BC,QAAQC,IAAI,iCAAmCwB,EAAMjD,KAAO,WAAaiD,IAKnExH,GAAAzB,UAAA6iB,sBAAR,WAGC,GAAIb,GAAoB9hB,KAAKG,cAAc6F,cAAcC,mBACzD,IAAI2c,EAEJ,IAAI1c,GAAsBlG,KAAKG,cAAcgG,iBAAiBC,EAAEX,EAAUY,MAAOuE,EAAEnF,EAAUY,MAAOwE,EAAEpF,EAAUY,MAAO4D,IAAIjK,KAAKG,cAAc+J,YAAaC,IAAInK,KAAKG,cAAc+J,YAAaE,IAAIpK,KAAKG,cAAc+J,YAAaG,IAAIrK,KAAKG,cAAc+J,YAAa2Y,IAAI7iB,KAAKG,cAAc+J,YAAa4Y,IAAI9iB,KAAKG,cAAc+J,YAAa6Y,IAAI/iB,KAAKG,cAAc+J,YAAamM,IAAI5Q,EAAUgP,OAAQ6B,IAAI7Q,EAAUgP,OAAQ8B,IAAI9Q,EAAUkL,OAAQ6F,IAAI/Q,EAAUkL,OAAQ8F,IAAIhR,EAAUsF,MAAO2L,IAAIjR,EAAUsF,MAAO4L,IAAIlR,EAAUwK,MAAO2G,IAAInR,EAAUwK,MAAO4G,IAAIpR,EAAU2K,KAAM0G,IAAIrR,EAAU2K,MACjkB,IAAIzE,EACJ,IAAI9E,EAEJ,QAAQib,GAEP,IAAK,KACJc,EAAqB,GAAIL,GAAwBrc,EAAMnG,IAAI,IAAK,GAAI0C,OAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACnI,MACD,KAAK,KACJmgB,EAAqB,GAAIJ,EACzB,IAAIQ,GAAyB9c,EAAMnG,IAAI,IAAK,EACd6iB,GAAoBK,eAAiB,GAAIjJ,GAAe9T,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,GAAMijB,GAAU,GAAM,IAASA,GAAU,EAAK,IAAQA,EAAS,IAASA,GAAU,GAAM,IACtP,MACD,KAAK,KAqBJ,KACD,KAAK,KAQJ,KAQD,KAAK,KACJJ,EAAqB,GAAIF,GAAqBxc,EAAMnG,IAAI,IAAK,UAAWmG,EAAMnG,IAAI,IAAK,IAAMmG,EAAMnG,IAAI,IAAK,GAC5G,MACD,KAAK,KAQJ,KAYD,KAAK,KAQJ,KACD,KAAK,KACJ6iB,EAAqB,GAAIH,GAAgBvc,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,KAAOmG,EAAMnG,IAAI,IAAK,SACjG,OAGFC,KAAKG,cAAcyG,qBACnB,OAAOgc,GAIT,OAAArhB,IA5HoC+D,EA8HpC7F,GAA+BJ,QAAtBkC,IpBqrDNud,sCAAsCte,UAAU0iB,6DAA6D1iB,UAAU2iB,gEAAgE3iB,UAAU4iB,qDAAqD5iB,UAAU6iB,0DAA0D7iB,UAAUhB,yDAAyD,yDAAyDgI,+CAA+C,iDAAiDlD,yDAAyD,SAAS/F,EAAQkB,EAAOJ,GAC1mB,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GqB10DtB,IAAOE,GAAkB/G,EAAY,yDAIrC,IAAO+kB,GAAQ/kB,EAAiB,gDAChC,IAAOglB,GAAahlB,EAAe,qDAGnC,IAAMkD,GAAiB,SAAAiE,GAASX,EAA1BtD,EAAiBiE,EAGtB,SAHKjE,KAKJiE,EAAApG,KAAAU,MAIMyB,EAAA3B,UAAAQ,eAAP,WAEC,GAAI4G,GAAoB,GAAIoc,EAC5BtjB,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvD,IAAIyd,GAA6BxjB,KAAKG,cAAc6F,cAAcC,mBAClEjG,MAAKG,cAAcgG,gBAAgB,KAEnC,IAAIsd,GAAgC,CACpC,OAAOA,EAAgBD,EAAY,CAClC,GAAIE,EACJ,IAAIC,EAEJ3jB,MAAKG,cAAc6F,cAAcC,mBACjCyd,GAAQ,GAAIH,EACZG,GAAME,YAAc5jB,KAAKG,cAAc6F,cAAcC,oBAAsB,CAC3Eyd,GAAM5d,KAAO9F,KAAKG,cAAc4F,aAEhC4d,GAAM3jB,KAAKG,cAAcyJ,eACzB8Z,GAAMG,gBAAkBF,EAAIvG,OAE5Bpd,MAAKG,cAAcgG,gBAAgB,KACnCnG,MAAKG,cAAcyG,qBACnBM,GAAS4c,OAAOjhB,KAAK6gB,EACrBD,KAIDzjB,KAAKG,cAAcyG,qBACnB5G,MAAKG,cAAc0F,UAAUuB,KAAOF,CACpC,IAAIlH,KAAKG,cAAckH,MACtBC,QAAQC,IAAI,6BAA+BvH,KAAKG,cAAc0F,UAAUC,KAAO,yBAA2B2d,GAI7G,OAAAhiB,IA3CgC6D,EA6ChC7F,GAA2BJ,QAAlBoC,IrB+zDNjC,yDAAyD,yDAAyDukB,gDAAgDvjB,UAAUwjB,qDAAqDxjB,YAAY+D,iEAAiE,SAAShG,EAAQkB,EAAOJ,GACzU,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GsBz3DtB,IAAOE,GAAkB/G,EAAY,yDAIrC,IAAO0lB,GAAgB1lB,EAAe,yDAGtC,IAAMiD,GAAyB,SAAAkE,GAASX,EAAlCvD,EAAyBkE,EAG9B,SAHKlE,KAKJkE,EAAApG,KAAAU,MAIMwB,EAAA1B,UAAAQ,eAAP,WAEC,GAAI4jB,EACJ,IAAIC,EACJ,IAAIC,GAAwB,GAAIH,EAChCjkB,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvD,IAAIse,GAA6BrkB,KAAKG,cAAc6F,cAAcC,mBAClEjG,MAAKG,cAAcgG,gBAAgB,KAEnC,IAAIme,GAAgC,CACpC,OAAOA,EAAgBD,EAAY,CAClCF,EAAYnkB,KAAKG,cAAc6F,cAAcM,iBAC7C4d,GAAYlkB,KAAKG,cAAc6F,cAAcC,mBAC7C,IAAIse,GAAuCvkB,KAAKG,cAAc6G,aAAamd,EAC3E,IAAII,GAAW/jB,UAAW,CACzB4jB,EAAKvF,SAAS0F,EAAWL,GAE1BI,IAGDtkB,KAAKG,cAAcyG,qBACnB5G,MAAKG,cAAc0F,UAAUuB,KAAOgd,CACpC,IAAIpkB,KAAKG,cAAckH,MACtBC,QAAQC,IAAI,qCAAuCvH,KAAKG,cAAc0F,UAAUC,KAAO,yBAA2Bse,EAAKI,OAAOjlB,QAIjI,OAAAiC,IApCwC8D,EAsCxC7F,GAAmCJ,QAA1BmC,ItBg3DNhC,yDAAyD,yDAAyDilB,yDAAyDjkB,YAAYgE,6DAA6D,SAASjG,EAAQkB,EAAOJ,GAC/Q,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GuBl6DtB,IAAOE,GAAkB/G,EAAY,yDAIrC,IAAOmmB,GAAYnmB,EAAgB,oDACnC,IAAOomB,GAASpmB,EAAgB,iDAChC,IAAO0b,GAAQ1b,EAAiB,gCAEhC,IAAMmD,GAAqB,SAAAgE,GAASX,EAA9BrD,EAAqBgE,EAG1B,SAHKhE,KAKJgE,EAAApG,KAAAU,MAIM0B,EAAA5B,UAAAQ,eAAP,WAEC,GAAIskB,GAAoB,GAAIF,EAC5B1kB,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvD,IAAIyd,GAA6BxjB,KAAKG,cAAc6F,cAAcC,mBAClEjG,MAAKG,cAAcgG,gBAAgB,KAGnC,IAAIsd,GAAgC,CACpC,OAAOA,EAAgBD,EAAY,CAClC,GAAIqB,EACJ,IAAIC,EACJD,GAAa,GAAIF,EACjBG,GAAgB9kB,KAAKG,cAAc6F,cAAcW,kBACjD,IAAIme,GAAiB,EAAG,CACvB,GAAIC,GAAyB/kB,KAAKG,cAAc6kB,sBAEhD,IAAIrb,GAAe,GAAIsQ,GAAS8K,EAChCF,GAAWI,YAAYC,WAAWvb,EAClCkb,GAAWM,YAAYC,SAASzb,EAAIoD,SAEpC6X,GAAKS,WAAW5B,GAAiBoB,EAElCpB,IAGDzjB,KAAKG,cAAcyG,qBACnB5G,MAAKG,cAAc0F,UAAUuB,KAAOwd,CACpC,IAAI5kB,KAAKG,cAAckH,MACtBC,QAAQC,IAAI,iCAAmCvH,KAAKG,cAAc0F,UAAUC,KAAO,yBAA2B2d,GAIjH,OAAA/hB,IA1CoC4D,EA4CpC7F,GAA+BJ,QAAtBqC,IvBu5DNqd,gCAAgCve,UAAUhB,yDAAyD,yDAAyD8lB,iDAAiD9kB,UAAU+kB,oDAAoD/kB,YAAYiE,uDAAuD,SAASlG,EAAQkB,EAAOJ,GACzW,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GwBh9DtB,IAAOE,GAAkB/G,EAAY;;AAKrC,GAAOinB,GAAMjnB,EAAiB,qCAI9B,IAAMoD,GAAe,SAAA+D,GAASX,EAAxBpD,EAAe+D,EAGpB,SAHK/D,KAKJ+D,EAAApG,KAAAU,MAIM2B,EAAA7B,UAAAQ,eAAP,WAECN,KAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvD,IAAI0f,GAAqBzlB,KAAKG,cAAc6F,cAAcM,iBAE1D,IAAIof,GAA4BllB,SAChC,IAAGilB,EAAY,EAAG,CACjBC,EAA8B1lB,KAAKG,cAAc6G,aAAaye,GAE/D,GAAGC,GAAUllB,UAAU,CACtBklB,EAA2B1lB,KAAKG,cAAcmX,wBxBy8DzC,GwBr8DFqO,GAAoB,GAAIH,GAA0BE,EAEtD1lB,MAAKG,cAAcgG,gBAAgB,KACnCwf,GAAW/c,MAAQ5I,KAAKG,cAAcyG,qBACtC5G,MAAKG,cAAc0F,UAAUuB,KAAOue,CACpC,IAAI3lB,KAAKG,cAAckH,MACtBC,QAAQC,IAAI,4BAA8BvH,KAAKG,cAAc0F,UAAUC,KAAO,0BAA4B4f,EAAS5f,MAItH,OAAAnE,IAjC8B2D,EAmCL7F,GAAAJ,QAAhBsC,IxBo8DNikB,qCAAqCplB,UAAUhB,yDAAyD,2DAA2DkF,+DAA+D,SAASnG,EAAQkB,EAAOJ,GAC7P,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GyBt/DtB,IAAOE,GAAkB/G,EAAY,yDAIrC,IAAOsnB,GAAItnB,EAAiB,+BAG5B,IAAO2N,GAAgB3N,EAAe,wCAEtC,IAAMqD,GAAuB,SAAA8D,GAASX,EAAhCnD,EAAuB8D,EAG5B,SAHK9D,KAKJ8D,EAAApG,KAAAU,MAIM4B,EAAA9B,UAAAQ,eAAP,WAEC,GAAIwlB,GAAc,GAAID,EACtB7lB,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvD,IAAIggB,GAAwB/lB,KAAKG,cAAc6F,cAAcM,iBAE7D,KAAK,GAAItH,GAAW,EAAGA,EAAI+mB,IAAkB/mB,EAAG,CAC/C,GAAIgnB,GAAyBhmB,KAAKG,cAAc4F,azB8+DvC,IyB5+DLkgB,GAAmCH,EAASI,eAAeF,EAC/DC,GAAeE,iBAAiBnmB,KAAKG,cAAc6F,cAAcM,kBzB8+DxD,IyB5+DL8f,GAA6BpmB,KAAKG,cAAc6F,cAAcM,iBAElE,KAAK,GAAItH,GAAW,EAAGA,EAAIonB,IAAuBpnB,EAAG,CAEpD,GAAIqnB,GAAyBrmB,KAAKG,cAAc6F,cAAcM,iBzB6+DlD,IyB1+DRqG,GAAgB3M,KAAKG,cAAc6F,cAAcM,iBACrD,IAAIsG,GAAgB5M,KAAKG,cAAc6F,cAAc+G,SAAWJ,CAKhE,OAAO3M,KAAKG,cAAc6F,cAAc+G,SAAWH,EAAQ,CAC1D,GAAIK,GAAa,CACjB,IAAIC,GAAkBC,EAAiBC,EAAgBC,CAGvDF,GAAWnN,KAAKG,cAAc6F,cAAcW,kBAC5CuG,GAAYlN,KAAKG,cAAc6F,cAAcW,kBAC7CyG,GAAUpN,KAAKG,cAAc6F,cAAcM,iBAC3C+G,GAAUrN,KAAKG,cAAc6F,cAAc+G,SAAWK,CAEtD,IAAID,GAAY,EAAG,CAClB,GAAIS,GAAwB,GAAInL,MAEhC,OAAOzC,KAAKG,cAAc6F,cAAc+G,SAAWM,EAAS,CAC3DO,EAAQX,KAASjN,KAAKG,cAAc6F,cAAcC,yBAE7C,IAAIkH,GAAY,GAAI,CAC1B,GAAIY,GAAiB,CACrB,IAAIC,GAAoB,CACxB,IAAIC,GAAiB,CAErB,IAAIC,GAA0B,GAAIzL,MAClC,IAAI0L,GAA0B,GAAI1L,MAClC,IAAIoL,GAAoB,GAAIpL,MAE5B,OAAOzC,KAAKG,cAAc6F,cAAc+G,SAAWM,EAAS,CAE3Da,EAAUH,KAAa/N,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YACxEO,GAAUH,KAAa/N,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YACxEO,GAAUH,KAAa/N,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YAExEQ,GAAUH,KAAgBhO,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YAC3EQ,GAAUH,KAAgBhO,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YAE3EE,GAAII,KAAajO,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YAClEE,GAAII,KAAajO,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,kBAG/D,CACJ3N,KAAKG,cAAc6F,cAAc+G,SAAWM,GzBm+DlC,GyB/9DRe,GAAkC,GAAIlC,GAAiB,KAC3DkC,GAAeC,cAAcT,EAC7BQ,GAAeE,gBAAgBJ,EAC/BE,GAAeG,aAAaJ,EAC5BC,GAAeI,UAAUX,EACzBoY,GAAeK,oBAAoBD,EAAgB5T,WAAYrE,IAMjEpO,KAAKG,cAAcgG,gBAAgB,KACnCnG,MAAKG,cAAcyG,qBACnB5G,MAAKG,cAAc0F,UAAUuB,KAAO0e,CACpC,IAAI9lB,KAAKG,cAAckH,MAAO,CAC7BC,QAAQC,IAAI,0BAA4BvH,KAAKG,cAAc0F,UAAUC,OAKxE,OAAAlE,IAjGsC0D,EAmGL7F,GAAAJ,QAAxBuC,IzB69DN2N,wCAAwC/O,UAAU+lB,+BAA+B/lB,UAAUhB,yDAAyD,2DAA2DmF,0DAA0D,SAASpG,EAAQkB,EAAOJ,GACpS,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,G0B7kEtB,IAAOE,GAAkB/G,EAAY,yDAErC,IAAOkH,GAASlH,EAAc,+CAG9B,IAAOioB,GAAUjoB,EAAe,qCAGhC,IAAOoc,GAAoBpc,EAAa,mDAExC,IAAMsD,GAAkB,SAAA6D,GAASX,EAA3BlD,EAAkB6D,EAIvB,SAJK7D,KAMJ6D,EAAApG,KAAAU,KACAA,MAAK4a,QAAU,GAAID,GAIb9Y,EAAA/B,UAAAQ,eAAP,WAEC,GAAImmB,GAAezmB,KAAK4a,QAAQ8L,iBAChC1mB,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvD,IAAI4gB,GAAuB3mB,KAAKG,cAAc6F,cAAcW,kBAC5D,IAAGggB,GAAiB,EAAG,CACtBF,EAAaxjB,KAAO,aAEhB,IAAG0jB,GAAiB,EAAG,CAC3BF,EAAaxjB,KAAO,cAEhB,IAAG0jB,GAAiB,EAAG,CAC3BF,EAAaxjB,KAAO,YAEhB,IAAG0jB,GAAiB,EAAG,CAC3BF,EAAaxjB,KAAM,OACnBwjB,GAAaG,kBAAkB,KAGhCH,EAAaI,MAAM7mB,KAAKG,cAAc6F,cAAcoV,WACpDqL,GAAaK,OAAO9mB,KAAKG,cAAc6F,cAAcoV,WACrD,IAAI2L,GAAwB/mB,KAAKG,cAAc6F,cAAcM,iBAC7D,IAAI0gB,GAAuB,E1BokErB,I0BlkEFC,EACJ,KAAI,GAAIC,GAAe,EAAGA,EAAQH,EAAgBG,IAAU,CAE3D,GAAIC,GAAsBnnB,KAAKG,cAAc6F,cAAcM,iBAE3D,KAAI,GAAI8gB,GAAmB,EAAGA,EAAYD,EAAcC,IAAe,CAEtE,GAAIC,GAAmBrnB,KAAKG,cAAc6F,cAAcM,iB1BikE5C,I0B/jERghB,GAAoCtnB,KAAKG,cAAc6G,aAAaqgB,EACxE,IAAIC,GAAY9mB,UAAW,CAC1BymB,EAAc,GAAIT,G1BkkEP,G0B/jERe,GAAavnB,KAAKG,cAAc6F,cAAcM,iBAElD,IAAIihB,EAAa,EAAG,CACnB,GAAIC,GAAkBxnB,KAAKG,cAAc6F,cAAc8B,aAAayf,EAEpEP,IAAeQ,IAMlBf,EAAaa,WAAWL,CACxBR,GAAagB,KAAKT,C1BgkEZ,I0B3jEF9gB,GAAsBlG,KAAKG,cAAcgG,iBAAiBC,EAAEX,EAAU2K,KAAMvF,EAAEpF,EAAU2K,KAAMtF,EAAErF,EAAU2K,KAAMF,EAAEzK,EAAU2K,KAAMC,EAAE5K,EAAUsF,MAAOuF,EAAE7K,EAAUsF,MAAOwF,EAAE9K,EAAUsF,OACxL0b,GAAaiB,WAAaxhB,EAAMnG,IAAI,EAAG,MACvC0mB,GAAakB,OAAUzhB,EAAMnG,IAAI,EAAG,MAOpC0mB,GAAa7d,MAAQ5I,KAAKG,cAAcyG,qBACxC5G,MAAKG,cAAc0F,UAAUuB,KAAOqf,CACpC,IAAIzmB,KAAKG,cAAckH,MAAO,CAC7BC,QAAQC,IAAI,+BAAiCkf,EAAa3gB,KAAO,aAAekhB,IAMnF,OAAAnlB,IApFiCyD,EAsFjC7F,GAA4BJ,QAAnBwC,I1ByjEN+lB,qCAAqCpnB,UAAUhB,yDAAyD,yDAAyDgI,+CAA+C,+CAA+C0X,mDAAmD1e,YAAYoE,2DAA2D,SAASrG,EAAQkB,EAAOJ,GACpZ,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,G2B9pEtB,IAAOE,GAAkB/G,EAAY,yDAErC,IAAOkH,GAASlH,EAAc,+CAE9B,IAAOioB,GAAUjoB,EAAe,qCAEhC,IAAOsnB,GAAItnB,EAAiB,+BAC5B,IAAOgK,GAAahK,EAAe,6CAGnC,IAAMuD,GAAmB,SAAA4D,GAASX,EAA5BjD,EAAmB4D,EAGxB,SAHK5D,KAKJ4D,EAAApG,KAAAU,MAIM8B,EAAAhC,UAAAQ,eAAP,WAEC,GAAIunB,GAA2B,GAAIrB,EACnCxmB,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,a3BwpEjD,I2BtpEF+hB,GAAiB9nB,KAAKG,cAAc6F,cAAcM,iB3BwpEhD,I2BtpEF0f,GAAyBhmB,KAAKG,cAAc4F,a3BwpE1C,I2BtpEFgiB,GAAkB/nB,KAAKG,cAAc6G,aAAa8gB,EACtD,IAAIC,GAAMvnB,UAAW,CACpBunB,EAAO,GAAIlC,GAEZgC,EAAcG,UAAYD,EAAKjiB,IAC/B,IAAImiB,GAAiCF,EAAK7B,eAAeF,EACzD,IAAGiC,GAAY,KAAK,CACnBJ,EAAcK,WAAalC,CAC3B6B,GAAcI,WAAaA,EAG5B,GAAIzf,GAAiBxI,KAAKG,cAAc6F,cAAcM,iB3BupEhD,I2BrpEFmC,GAAoCzI,KAAKG,cAAc6G,aAAawB,EAExE,IAAIC,GAAKjI,UAAW,CACnBiI,EAAM,GAAIF,GAEXE,EAAIC,UAAU,IAEd,IAAIyf,GAAuBnoB,KAAKG,cAAc6F,cAAcW,kB3BqpEtD,I2BnpEFyhB,KACJ,KAAI,GAAIC,GAAa,EAAGA,EAAMF,EAAeE,IAAQ,CACpD,GAAIC,GAAgBtoB,KAAKG,cAAc6F,cAAcoV,WACrDgN,GAAUvlB,KAAKylB,GAGhBT,EAAcO,UAAUA,CACxB,IAAIG,GAA6BvoB,KAAKG,cAAcgG,iBAAiBC,EAAEX,EAAUkL,OAAQ/F,EAAEnF,EAAUkL,OAAQ9F,EAAEpF,EAAUsF,MAAMD,EAAErF,EAAUsF,MAAMmF,EAAEzK,EAAUsF,MAAMoF,EAAE1K,EAAUsF,MAAOsF,EAAE5K,EAAUkL,OAAQL,EAAE7K,EAAUkL,OAAQJ,EAAE9K,EAAUkL,OAAQH,GAAG/K,EAAUkL,QAE/PkX,GAAcW,KAAOD,EAAaxoB,IAAI,EAAE,GACxC8nB,GAAcY,cAAgBF,EAAaxoB,IAAI,EAAE,EAEjD8nB,GAAca,QAAUH,EAAaxoB,IAAI,EAAE,KAG3C8nB,GAAcc,OAASJ,EAAaxoB,IAAI,EAAE,EAC1C8nB,GAAce,WAAaL,EAAaxoB,IAAI,EAAE,EAC9C8nB,GAAcgB,YAAcN,EAAaxoB,IAAI,EAAE,EAE/C8nB,GAAcW,KAAOD,EAAaxoB,IAAI,EAAE,GACxC8nB,GAAcY,cAAgBF,EAAaxoB,IAAI,EAAE,EAEjD8nB,GAAca,QAAUH,EAAaxoB,IAAI,EAAE,KAE3C8nB,GAAcnO,SAAWjR,CACzBzI,MAAKG,cAAcyG,qBAGnB5G,MAAKG,cAAc0F,UAAUuB,KAAOygB,CACpC,IAAI7nB,KAAKG,cAAckH,MAAO,CAC7BC,QAAQC,IAAI,gCAAkCzB,KAAO,UAAUiiB,EAAKjiB,OAKvE,OAAAhE,IA3EkCwD,EA6ElC7F,GAA6BJ,QAApByC,I3BgpENgH,6CAA6CtI,UAAU+lB,+BAA+B/lB,UAAUonB,qCAAqCpnB,UAAUhB,yDAAyD,yDAAyDgI,+CAA+C,iDAAiD3C,+DAA+D,SAAStG,EAAQkB,EAAOJ,GAC3b,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,G4B5uEtB,IAAOE,GAAkB/G,EAAY,yDAErC,IAAOkH,GAASlH,EAAc,+CAE9B,IAAO4N,GAAmB5N,EAAc,2CACxC,IAAOuqB,GAAcvqB,EAAe,uDACpC,IAAO0N,GAAQ1N,EAAiB,gCAEhC,IAAMyD,GAAuB,SAAA0D,GAASX,EAAhC/C,EAAuB0D,EAG5B,SAHK1D,KAKJ0D,EAAApG,KAAAU,MAGMgC,EAAAlC,UAAAQ,eAAP,WAEC,GAAIyoB,GAAiB,KACrB,IAAG/oB,KAAKG,cAAc0F,UAAU5C,MAAM,IAAI,CACzC8lB,EAAS,KAEV,GAAI1E,GAA6B,CACjC,IAAI2E,EACJ,IAAI1E,EACJ,IAAI2E,EACJ,IAAI/E,EACJ,IAAI5W,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIJ,EACJ,IAAIC,EACJ,IAAI6b,EACJ,IAAIC,EACJ,IAAIlc,GAAqB,CACzB,IAAIW,EACJ,IAAIH,EACJ,IAAI2b,GAA6B,CACjC,IAAIC,GAA+B,CACnC,IAAIC,GAAoC,GAAI7mB,MAC5C,IAAIyD,EACJ,IAAIqjB,EACJ,IAAInF,GAAsB,GAAI0E,EAC9B9oB,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvD,IAAIyjB,GAA2BxpB,KAAKG,cAAc6F,cAAcM,iBAChE,IAAI8F,GAA0BpM,KAAKG,cAAc6G,aAAawiB,EAC9D,IAAIpd,GAAM5L,UAAW,CAEpB,OAED,GAAIqN,GAA2B7N,KAAKG,cAAcspB,wBAAwBD,EAC1E,KAAKT,EACJ1E,EAAarkB,KAAKG,cAAc6F,cAAcC,mBAE/C+iB,GAAgBhpB,KAAKG,cAAc6F,cAAcC,mBACjDmjB,GAAcppB,KAAKG,cAAc6F,cAAcC,mBAC/CojB,GAAgB,CAChB,OAAOA,EAAgBD,EAAa,CACnCE,EAAYzmB,KAAK7C,KAAKG,cAAc6F,cAAcC,oBAClDojB,KAEDnjB,EAAQlG,KAAKG,cAAcgG,iBAAiBC,EAAEX,EAAU2K,KAAMxF,EAAEnF,EAAU2K,MAE1EgU,GAAKsF,QAAUxjB,EAAMnG,IAAI,EAAG,KAC5BqkB,GAAKuF,iBAAmBzjB,EAAMnG,IAAI,EAAG,MAErCukB,GAAgB,CAChB,OAAOA,EAAgBD,EAAY,CAClCH,EAAYlkB,KAAKG,cAAc6F,cAAcC,mBAC7CijB,GAAW,GAAIjd,EACfgd,GAAgB,CAChB,OAAOA,EAAgBD,EAAe,CACrCK,EAAgB,CAChBjc,GAAUpN,KAAKG,cAAc6F,cAAcM,iBAC3C+G,GAAUrN,KAAKG,cAAc6F,cAAc+G,SAAWK,CACtD,OAAOic,EAAgBD,EAAa,CACnC,GAAIE,EAAYD,IAAkB,EAAG,CACpCzb,EAAUxB,EAAKwd,cAAcX,GAAerb,OAC5CH,GAAQ,GAAIhL,MACZwK,GAAM,CACN,OAAOjN,KAAKG,cAAc6F,cAAc+G,SAAWM,EAAS,CAC3DC,EAAItN,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YACrDJ,GAAIvN,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YACrDH,GAAIxN,KAAKG,cAAcuN,WAAW1N,KAAKG,cAAcwN,YACrDF,GAAMR,KAASK,CACfG,GAAMR,KAASM,CACfE,GAAMR,KAASO,EAEhB2b,EAAU,GAAIhd,GAAoB,KAClCgd,GAAQ9a,cAAcT,EACtBub,GAAQ7a,gBAAgBb,EACxB0b,GAAQ3a,UAAUX,EAAIob,GACtBE,GAAQpa,oBAAoB,KAC5Boa,GAAQna,qBAAqB,KAC7Bma,GAAQva,kBAAoB,KAC5Bua,GAAQra,mBAAqB,KAC7Bma,IACAC,GAASza,eAAe0a,OAExBnpB,MAAKG,cAAc6F,cAAc+G,SAAWM,CAC7Cgc,MAGFjF,EAAKvF,SAASqK,EAAUhF,EACxBI,KAEDtkB,KAAKG,cAAcyG,qBACnB5G,MAAKG,cAAc0F,UAAUuB,KAAKgd,CAClC,IAAIpkB,KAAKG,cAAckH,MACtBC,QAAQC,IAAI,mCAAqC6c,EAAKte,KAAO,6BAA+BsG,EAAKtG,KAAO,yBAA2Bse,EAAKI,OAAOjlB,QAIlJ,OAAAyC,IAzGsCsD,EA2GtC7F,GAAiCJ,QAAxB2C,I5BquENwN,gCAAgChP,UAAUiP,2CAA2CjP,UAAUhB,yDAAyD,yDAAyDgI,+CAA+C,+CAA+CqiB,uDAAuDrpB,YAAYsE,mEAAmE,SAASvG,EAAQkB,EAAOJ,GAChd,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,G6B71EtB,IAAOE,GAAkB/G,EAAY,yDAErC,IAAOkH,GAASlH,EAAc,+CAG9B,IAAO0lB,GAAgB1lB,EAAe,yDACtC,IAAOuqB,GAAcvqB,EAAe,uDACpC,IAAOurB,GAAkBvrB,EAAc,qDACvC,IAAOwrB,GAAoBxrB,EAAc,uDAEzC,IAAMwD,GAA2B,SAAA2D,GAASX,EAApChD,EAA2B2D,EAGhC,SAHK3D,KAKJ2D,EAAApG,KAAAU,MAIM+B,EAAAjC,UAAAQ,eAAP,WAEC,GAAI0pB,EACJhqB,MAAKG,cAAc0F,UAAUC,KAAO9F,KAAKG,cAAc4F,aACvD,IAAIse,GAA6BrkB,KAAKG,cAAc6F,cAAcC,mBAClE,IAAIC,GAAsBlG,KAAKG,cAAcgG,iBAAiBC,EAAEX,EAAUkL,QAC1E,IAAI2T,GAAgC,CACpC,IAAI2F,GAAyC,GAAIxnB,MACjD,IAAIynB,GAAqC,GAAIznB,MAC7C,OAAO6hB,EAAgBD,EAAY,CAClC2F,EAAkBhqB,KAAKG,cAAc6F,cAAcM,iBACnD,IAAI6jB,GAAgDnqB,KAAKG,cAAc6G,aAAagjB,EACpF,IAAIG,GAAU3pB,UAAW,MAGpB,CACJ,GAAI2pB,YAAoBrB,GACvBoB,EAAarnB,KAAqBsnB,EACnC,IAAIA,YAAoBlG,GACvBgG,EAAepnB,KAAuBsnB,GAExC7F,IAED,GAAK4F,EAAa3qB,QAAU,GAAO0qB,EAAe1qB,QAAU,EAAI,CAE/D,OAEDS,KAAKG,cAAcyG,qBACnB,IAAIsjB,EAAa3qB,OAAS,EAAG,CAC5B,GAAI6qB,GAA2C,GAAIN,EACnD,KAAK,GAAI9qB,GAAmB,EAAGA,EAAIkrB,EAAa3qB,OAAQP,IACvDorB,EAAsBC,aAAaH,EAAalrB,GACjDgB,MAAKG,cAAc0F,UAAUuB,KAAOgjB,CACpC,IAAIpqB,KAAKG,cAAckH,MACtBC,QAAQC,IAAI,uCAAyC6iB,EAAsBtkB,KAAO,mBAAqBskB,EAAsBE,WAAW/qB,OAAS,wBAA0B6qB,EAAsBG,eAAe9X,WACjN,YACM,IAAIwX,EAAe1qB,OAAS,EAAG,CACrC,GAAIirB,GAA+C,GAAIT,GAAqB7jB,EAAMnG,IAAI,EAAG,GACzF,KAAK,GAAIf,GAAmB,EAAGA,EAAIirB,EAAe1qB,OAAQP,IACzDwrB,EAAwBH,aAAaJ,EAAejrB,GACrDgB,MAAKG,cAAc0F,UAAUuB,KAAOojB,CACpC,IAAIxqB,KAAKG,cAAckH,MACtBC,QAAQC,IAAI,yCAA2CijB,EAAwB1kB,KAAO,mBAAqB0kB,EAAwBF,WAAW/qB,OAAS,wBAA0BirB,EAAwBD,eAAe9X,aAK5N,OAAA1Q,IAxD0CuD,EA0DL7F,GAAAJ,QAA5B0C,I7Bs1ENvC,yDAAyD,yDAAyDgI,+CAA+C,+CAA+CijB,uDAAuDjqB,UAAUkqB,qDAAqDlqB,UAAUikB,yDAAyDjkB,UAAUqpB,uDAAuDrpB,YAAYmqB,mDAAmD,SAASpsB,EAAQkB,EAAOJ,G8B35EpiB,GAAOurB,GAASrsB,EAAgB,iCAChC,IAAO4N,GAAmB5N,EAAc,2CACxC,IAAO0b,GAAQ1b,EAAiB,gCAShC,IAAOssB,GAAiBtsB,EAAc,6CAMtC,IAAOusB,GAAWvsB,EAAgB,uCAQlC,IAAOwsB,GAAYxsB,EAAgB,4CACnC,IAAOuU,GAAsBvU,EAAa,qDAG1C,IAAOya,GAAIza,EAAkB,mCAM7B,IAAOysB,GAAazsB,EAAe,mDAEnC,IAAO0sB,GAAQ1sB,EAAa,8CAC5B,IAAOkH,GAASlH,EAAa,+C9Bo4E7B,I8B73EM2sB,GAAY,WA4BjB,QA5BKA,KAGGlrB,KAAAmrB,OAAiB,KASjBnrB,MAAAorB,kBAA4B,KAkBnCprB,MAAK8L,cAAc,CACnB9L,MAAK+L,cAAc,CAEnB/L,MAAKqrB,QAAU,GAAI5oB,MACnBzC,MAAKqrB,QAAQxoB,KAAK,GAAIooB,GAAS,IAAK,GACpCjrB,MAAKsrB,WAAWtrB,KAAKqrB,QAAQ,EAC7BrrB,MAAKurB,aAAe,GAAI9oB,MACxBzC,MAAKurB,aAAa1oB,KAAK+nB,EAAUY,OACjCxrB,MAAKurB,aAAa1oB,KAAK+nB,EAAUa,IACjCzrB,MAAKurB,aAAa1oB,KAAK+nB,EAAUc,MACjC1rB,MAAKurB,aAAa1oB,KAAK+nB,EAAUe,OACjC3rB,MAAKurB,aAAa1oB,KAAK+nB,EAAUgB,WACjC5rB,MAAKurB,aAAa1oB,KAAK+nB,EAAUiB,MACjC7rB,MAAKurB,aAAa1oB,KAAK+nB,EAAUkB,UACjC9rB,MAAKurB,aAAa1oB,KAAK+nB,EAAUmB,OACjC/rB,MAAKurB,aAAa1oB,KAAK+nB,EAAUoB,MACjChsB,MAAKurB,aAAa1oB,KAAK+nB,EAAUqB,QACjCjsB,MAAKurB,aAAa1oB,KAAK+nB,EAAUsB,SACjClsB,MAAKurB,aAAa1oB,KAAK+nB,EAAUY,OACjCxrB,MAAKurB,aAAa1oB,KAAK+nB,EAAUuB,QACjCnsB,MAAKurB,aAAa1oB,KAAK+nB,EAAUwB,OACjCpsB,MAAKurB,aAAa1oB,KAAK+nB,EAAUyB,OACjCrsB,MAAKurB,aAAa1oB,KAAK+nB,EAAUuB,QAEjCnsB,MAAKssB,cAAgB,GAAI7pB,MACzBzC,MAAKssB,cAAczpB,KAAK,IACxB7C,MAAKssB,cAAczpB,KAAK,IACxB7C,MAAKssB,cAAczpB,KAAK,KACxB7C,MAAKssB,cAAczpB,KAAK,MAGlBqoB,EAAAprB,UAAA4R,qBAAP,SAA4B6a,GAE3B,MAAOvsB,MAAKssB,cAAcC,GAEpBrB,GAAAprB,UAAAiW,2BAAP,SAAkCyW,GAEjC,MAAOxsB,MAAKurB,aAAaiB,GAGnBtB,GAAAprB,UAAA2sB,QAAP,WAGC,IAAK,GAAI3R,KAAK9a,MAAKqrB,QAAS,CAE3B,GAAIpmB,GAAwBjF,KAAKqrB,QAASvQ,EAC1C7V,GAAEwnB,WAKJ7sB,QAAAC,eAAWqrB,EAAAprB,UAAA,oB9B61EJC,I8B71EP,WAEC,MAAOC,MAAKorB,mB9B81ENhrB,WAAY,KACZC,aAAc,M8B71ErBT,QAAAC,eAAWqrB,EAAAprB,UAAA,kB9Bg2EJC,I8Bh2EP,WAEC,MAAOC,MAAK0sB,iB9Bi2ENxsB,I8B/1EP,SAA0BysB,GAEzB3sB,KAAK0sB,gBAAkBC,G9Bg2EjBvsB,WAAY,KACZC,aAAc,M8B/1ErBT,QAAAC,eAAWqrB,EAAAprB,UAAA,iB9Bk2EJC,I8Bl2EP,WAEC,MAAOC,MAAK4sB,gB9Bm2EN1sB,I8Bj2EP,SAAyB2sB,GAExB7sB,KAAK4sB,eAAiBC,G9Bk2EhBzsB,WAAY,KACZC,aAAc,M8Bj2ErBT,QAAAC,eAAWqrB,EAAAprB,UAAA,e9Bo2EJC,I8Bh2EP,WAEC,MAAOC,MAAK8sB,c9Bi2EN5sB,I8Bv2EP,SAAuB6sB,GAEtB/sB,KAAK8sB,aAAeC,G9Bw2Ed3sB,WAAY,KACZC,aAAc,M8Bn2ErBT,QAAAC,eAAWqrB,EAAAprB,UAAA,S9Bs2EJC,I8Bt2EP,WAEC,MAAOC,MAAKmrB,Q9Bu2EN/qB,WAAY,KACZC,aAAc,M8Br2ErBT,QAAAC,eAAWqrB,EAAAprB,UAAA,gB9Bw2EJC,I8Bx2EP,WAEC,MAAOC,MAAKgtB,e9By2EN9sB,I8Bv2EP,SAAwB+sB,GAEvBjtB,KAAKgtB,cAAgBC,G9Bw2Ef7sB,WAAY,KACZC,aAAc,M8Bt2ErBT,QAAAC,eAAWqrB,EAAAprB,UAAA,e9By2EJC,I8Bz2EP,WAEC,MAAOC,MAAKktB,c9B02ENhtB,I8Bx2EP,SAAuBitB,GAEtBntB,KAAKktB,aAAeC,G9By2Ed/sB,WAAY,KACZC,aAAc,M8Bv2ErBT,QAAAC,eAAWqrB,EAAAprB,UAAA,a9B02EJC,I8B12EP,WAEC,MAAOC,MAAKotB,Y9B22ENltB,I8Bz2EP,SAAqBmtB,GAEpBrtB,KAAKotB,WAAaC,G9B02EZjtB,WAAY,KACZC,aAAc,M8Bv2ErBT,QAAAC,eAAWqrB,EAAAprB,UAAA,iB9B02EJC,I8Bt2EP,WAEC,MAAOC,MAAKstB,gB9Bu2ENptB,I8B72EP,SAAyBqtB,GAExBvtB,KAAKstB,eAAiBC,G9B82EhBntB,WAAY,KACZC,aAAc,M8Bz2Ed6qB,GAAAprB,UAAA0tB,iBAAP,SAAwBvqB,EAAaiG,GAEpC,GAAIukB,GAAoB,GAAIxC,GAASjrB,KAAKqrB,QAAQ9rB,OAAQ0D,EAC1DjD,MAAKsrB,WAAWmC,CAChBztB,MAAKqrB,QAAQniB,GAAIukB,EAElB7tB,QAAAC,eAAWqrB,EAAAprB,UAAA,a9B22EJC,I8B32EP,WAEC,MAAOC,MAAKsrB,Y9B42ENlrB,WAAY,KACZC,aAAc,M8B32Ed6qB,GAAAprB,UAAA4tB,UAAP,WAEC,MAAO1tB,MAAKqrB,QAAQ9rB,OAKd2rB,GAAAprB,UAAA8G,oBAAP,WAEC,GAAI8M,EACJ,IAAIia,EACJ,IAAIC,EAEJD,GAAW3tB,KAAKstB,eAAehnB,iBAE/B,IAAIqnB,EAAW,EAAG,CAEjB,GAAIE,EAEJna,KAEAma,GAAW7tB,KAAKstB,eAAevgB,SAAW4gB,CAE1C,OAAO3tB,KAAKstB,eAAevgB,SAAW8gB,EAAU,CAC/C,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAGJJ,GAAQ9tB,KAAKstB,eAAe3mB,kBAC5BonB,GAAW/tB,KAAK+F,aAChBioB,GAAYhuB,KAAKstB,eAAe3mB,kBAChCsnB,GAAWjuB,KAAKstB,eAAehnB,iBAE/B,IAAKtG,KAAKstB,eAAevgB,SAAWkhB,EAAYJ,EAAU,CACzDvmB,QAAQC,IAAI,2CAA6CqmB,EAAc,sCACvE5tB,MAAKstB,eAAevgB,SAAW8gB,CAC/B,OAAOna,GAGR,OAAQsa,GACP,IAAKvoB,GAAUqU,UACdoU,EAAWluB,KAAKstB,eAAexlB,aAAammB,EAC5C,MACD,KAAKxoB,GAAU0oB,KACdD,EAAWluB,KAAKstB,eAAelP,UAC/B,MACD,KAAK3Y,GAAU2oB,MACdF,EAAWluB,KAAKstB,eAAevjB,WAC/B,MACD,KAAKtE,GAAUuO,MACdka,EAAWluB,KAAKstB,eAAee,SAC/B,MACD,KAAK5oB,GAAU2K,KACf,IAAK3K,GAAUsF,MACdmjB,EAAWluB,KAAKstB,eAAe3mB,kBAC/B,MACD,KAAKlB,GAAUkL,OACdud,EAAWluB,KAAKstB,eAAernB,mBAC/B,MACD,KAAKR,GAAUgP,OACf,IAAKhP,GAAUY,MACd6nB,EAAWluB,KAAKstB,eAAehnB,iBAC/B,MACD,KAAKb,GAAU6oB,QACdJ,EAAWluB,KAAKstB,eAAelS,WAC/B,MACD,KAAK3V,GAAU8oB,QACdL,EAAWluB,KAAKstB,eAAekB,YAC/B,MACD,SACCN,EAAW,gCAAkCF,CAC7ChuB,MAAKstB,eAAevgB,UAAYkhB,CAChC,OAGF,GAAIjuB,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,qBAAuBwmB,EAAW,eAAiBG,GAGhExa,EAAWqa,GAAYG,CACvBN,IAAe,GAIjB,MAAOla,GAGDwX,GAAAprB,UAAAqG,gBAAP,SAAuBsoB,GAEtB,GAAIZ,EACJ,IAAIF,EACJ,IAAIe,GAAqB,CACzB,IAAIxoB,GAAsB,GAAI8kB,EAE9B2C,GAAW3tB,KAAKstB,eAAehnB,iBAC/BunB,GAAW7tB,KAAKstB,eAAevgB,SAAW4gB,CAE1C,IAAIc,EAAU,CAEb,MAAOzuB,KAAKstB,eAAevgB,SAAW8gB,EAAU,CAC/C,GAAIc,EACJ,IAAIC,EACJ,IAAI3rB,EAEJ2rB,GAAM5uB,KAAKstB,eAAernB,mBAC1B0oB,GAAM3uB,KAAKstB,eAAehnB,iBAE1B,IAAKtG,KAAKstB,eAAevgB,SAAW4hB,EAAOd,EAAU,CACpDvmB,QAAQC,IAAI,0CAA4CmnB,EAAc,sCACtE1uB,MAAKstB,eAAevgB,SAAW8gB,CAC/B,OAAO3nB,GAGR,GAAIuoB,EAAStpB,eAAeypB,EAAInc,YAAa,CAC5CxP,EAAOwrB,EAASG,EAChB1oB,GAAMhG,IAAI0uB,EAAK5uB,KAAK6uB,eAAe5rB,EAAM0rB,QACnC,CACN3uB,KAAKstB,eAAevgB,UAAY4hB,EAGjCD,GAAe,OAGV,CACN1uB,KAAKstB,eAAevgB,SAAW8gB,EAGhC,MAAO3nB,GAIAglB,GAAAprB,UAAA+uB,eAAR,SAAuB5rB,EAAa0rB,GAEnC,GAAIG,EACJ,IAAIC,EAEJ,QAAQ9rB,GAEP,IAAKwC,GAAU2K,KACf,IAAK3K,GAAU0oB,KACdW,EAAW,CACXC,GAAY/uB,KAAKstB,eAAelP,QAChC,MAED,KAAK3Y,GAAU2oB,MACdU,EAAW,CACXC,GAAY/uB,KAAKstB,eAAevjB,SAChC,MAED,KAAKtE,GAAUuO,MACd8a,EAAW,CACXC,GAAY/uB,KAAKstB,eAAee,OAChC,MAED,KAAK5oB,GAAUsF,MACd+jB,EAAW,CACXC,GAAY/uB,KAAKstB,eAAe3mB,gBAChC,MAED,KAAKlB,GAAUkL,OACdme,EAAW,CACXC,GAAY/uB,KAAKstB,eAAernB,iBAChC,MAED,KAAKR,GAAUgP,OACf,IAAKhP,GAAUwK,MACf,IAAKxK,GAAUY,MACdyoB,EAAW,CACXC,GAAY/uB,KAAKstB,eAAehnB,eAChC,MAED,KAAKb,GAAU6oB,QACdQ,EAAW,CACXC,GAAY/uB,KAAKstB,eAAelS,SAChC,MAED,KAAK3V,GAAU8oB,QACdO,EAAW,CACXC,GAAY/uB,KAAKstB,eAAekB,UAChC,MAED,KAAK/oB,GAAUqU,UACd,MAAO9Z,MAAKstB,eAAexlB,aAAa6mB,EAEzC,KAAKlpB,GAAUupB,UACf,IAAKvpB,GAAUwpB,UACf,IAAKxpB,GAAUypB,UACf,IAAKzpB,GAAU0pB,OACf,IAAK1pB,GAAU2pB,OACf,IAAK3pB,GAAU4pB,OACf,IAAK5pB,GAAUuR,OACd8X,EAAW,CACXC,GAAY/uB,KAAKstB,eAAekB,UAChC,OAIF,GAAIM,EAAWH,EAAK,CACnB,GAAIW,KACJ,IAAIC,GAAkB,CACtB,IAAIC,GAAmBb,EAAIG,CAE3B,OAAOS,EAAWC,EAAW,CAC5BF,EAAKzsB,KAAKksB,EAAUU,MAAMzvB,KAAKstB,gBAC/BiC,KAGD,MAAOD,OACD,CAEN,GAAII,GAAUX,EAAUU,MAAMzvB,KAAKstB,eACnC,OAAOoC,IAKFxE,GAAAprB,UAAA2pB,wBAAP,SAA+BkG,GAE9B,GAAI3vB,KAAKqrB,QAAQsE,GAAQvoB,eAAgB4R,GACxC2W,EAAS3vB,KAAKqrB,QAAQsE,GAAQxW,KAC/B,IAAInZ,KAAKqrB,QAAQsE,GAAQC,sBACxB,MAAO5vB,MAAKqrB,QAAQsE,GAAQC,qBAC7B,IAAI1G,GAAgClpB,KAAKqrB,QAAQsE,GAAQvoB,IACzD,IAAIyoB,GAAwB,CAC5B,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIjxB,EACJ,IAAIkxB,EACJ,IAAIC,EACJnwB,MAAKqrB,QAAQsE,GAAQC,sBAAwB,GAAIntB,MACjD,OAAOotB,EAAS3G,EAASU,cAAcrqB,OAAQ,CAC9C2wB,EAAS,GAAIztB,MACb0tB,GAAiCjH,EAASU,cAAciG,EACxDI,GAAYE,EAASC,WACrBN,GAAKK,EAAStiB,GACdkiB,GAAUI,EAASE,UAAUlkB,EAAoBmkB,QACjDN,GAAQG,EAASI,UAAUpkB,EAAoBmkB,QAC/C,KAAKtxB,EAAI,EAAGA,EAAIixB,EAAWjxB,IAAK,CAC/BkxB,EAAOrtB,KAAKitB,EAAGE,EAAQhxB,EAAE+wB,EAAU,GACnCG,GAAOrtB,KAAKitB,EAAGE,EAAQhxB,EAAE+wB,EAAU,IAEpC/vB,KAAKqrB,QAAQsE,GAAQC,sBAAsB/sB,KAAKqtB,EAChDL,KAED,MAAO7vB,MAAKqrB,QAAQsE,GAAQC,sBAGtB1E,GAAAprB,UAAAiG,YAAP,WAGC,GAAI4oB,GAAa3uB,KAAKstB,eAAernB,mBACrC,OAAOjG,MAAKstB,eAAexlB,aAAa6mB,GAGlCzD,GAAAprB,UAAA0wB,aAAP,SAAoBC,GAEnB,MAAOzwB,MAAKqrB,QAAQoF,GAEdvF,GAAAprB,UAAAkH,aAAP,SAAoBypB,GAEnB,MAAOzwB,MAAKqrB,QAAQoF,GAASrpB,KAEtB8jB,GAAAprB,UAAA4wB,gBAAR,SAAwBC,EAAkBC,GAEzC,OAAQ,MACP,IAAMD,IAAa7F,EAAY6F,UAC9B,GAAIC,GAAiB,cACpB,MAAO5wB,MAAKsX,uBACb,IAAIsZ,GAAiB,gBACpB,MAAO9d,GAAuBwB,mBAC/B,MACD,KAAMqc,IAAa5F,EAAa4F,UAC/B,MAAO7d,GAAuB+d,oBAC9B,MACD,SACC,MAGF,MAAO,MAGD3F,GAAAprB,UAAAwX,sBAAP,WAEC,IAAKtX,KAAK8wB,oBAAqB,CAC9B,GAAIC,GAA2Bje,EAAuBke,2BAEtDhxB,MAAK8wB,oBAAsB,GAAIjG,GAAkBkG,EAAeA,EAAeA,EAAeA,EAAeA,EAAeA,EAC5H/wB,MAAK8wB,oBAAoBhrB,KAAO,qBAGjC,MAAgB9F,MAAK8wB,oBAGd5F,GAAAprB,UAAA4N,WAAR,SAAmBujB,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,MAElB,GAAIA,EACH,MAAOjxB,MAAKstB,eAAekB,YAC5B,OAAOxuB,MAAKstB,eAAelS,YAIrB8P,GAAAprB,UAAA8J,cAAP,WAEC,MAAO,IAAIqQ,GAASja,KAAKglB,wBAGlBkG,GAAAprB,UAAAoxB,qBAAR,WAEC,GAAIlyB,EACJ,IAAImyB,GAAwB,GAAI1uB,OAAc,EAC9C,KAAKzD,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvBmyB,EAAQnyB,GAAKgB,KAAKstB,eAAelS,YAGlC,MAAO+V,GAGDjG,GAAAprB,UAAAklB,qBAAP,WAEC,GAAImM,GAAwB,GAAI1uB,OAAc,GAE9C0uB,GAAQ,GAAKnxB,KAAK0N,WAAW1N,KAAK0sB,gBAClCyE,GAAQ,GAAKnxB,KAAK0N,WAAW1N,KAAK0sB,gBAClCyE,GAAQ,GAAKnxB,KAAK0N,WAAW1N,KAAK0sB,gBAClCyE,GAAQ,GAAK,CACbA,GAAQ,GAAKnxB,KAAK0N,WAAW1N,KAAK0sB,gBAClCyE,GAAQ,GAAKnxB,KAAK0N,WAAW1N,KAAK0sB,gBAClCyE,GAAQ,GAAKnxB,KAAK0N,WAAW1N,KAAK0sB,gBAClCyE,GAAQ,GAAK,CACbA,GAAQ,GAAKnxB,KAAK0N,WAAW1N,KAAK0sB,gBAClCyE,GAAQ,GAAKnxB,KAAK0N,WAAW1N,KAAK0sB,gBAClCyE,GAAQ,IAAMnxB,KAAK0N,WAAW1N,KAAK0sB,gBACnCyE,GAAQ,IAAM,CACdA,GAAQ,IAAMnxB,KAAK0N,WAAW1N,KAAK0sB,gBACnCyE,GAAQ,IAAMnxB,KAAK0N,WAAW1N,KAAK0sB,gBACnCyE,GAAQ,IAAMnxB,KAAK0N,WAAW1N,KAAK0sB,gBACnCyE,GAAQ,IAAM,CAId,IAAIC,MAAMD,EAAQ,IAAK,CACtBA,EAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,IAAM,CACdA,GAAQ,IAAM,CACdA,GAAQ,IAAM,CACdA,GAAQ,IAAM,EAIf,MAAOA,GAGT,OAAAjG,KAEsBzrB,GAAAJ,QAAb6rB,I9BuyENmG,iCAAiC7wB,UAAUiP,2CAA2CjP,UAAUue,gCAAgCve,UAAU8wB,6CAA6C9wB,UAAU+wB,uCAAuC/wB,UAAUqZ,mCAAmCrZ,UAAUyX,qDAAqDzX,UAAUgxB,4CAA4ChxB,UAAUgH,+CAA+C,+CAA+CiqB,8CAA8C,8CAA8CC,mDAAmD,qDAAqDlqB,gDAAgD,SAASjJ,EAAQkB,EAAOJ,G+Br2FjwB,GAAMoG,GAAS,WAAf,QAAMA,MACSA,EAAAksB,oBAA6B,CAC7BlsB,GAAAmsB,mBAA4B,CAC5BnsB,GAAA0C,6BAAsC,CACtC1C,GAAAwD,oBAA6B,CAC7BxD,GAAAosB,qBAA8B,MAC9BpsB,GAAAqsB,aAAsB,CACtBrsB,GAAAssB,QAAiB,CACjBtsB,GAAAusB,KAAc,CACdvsB,GAAA0oB,KAAc,CACd1oB,GAAA2oB,MAAe,CACf3oB,GAAAuO,MAAe,CACfvO,GAAAsF,MAAe,CACftF,GAAAkL,OAAgB,CAChBlL,GAAAgP,OAAgB,CAChBhP,GAAA6oB,QAAiB,CACjB7oB,GAAA8oB,QAAiB,CACjB9oB,GAAA2K,KAAc,EACd3K,GAAAwK,MAAe,EACfxK,GAAAY,MAAe,EACfZ,GAAAqU,UAAmB,EACnBrU,GAAAwsB,aAAsB,EACtBxsB,GAAAupB,UAAmB,EACnBvpB,GAAAwpB,UAAmB,EACnBxpB,GAAAypB,UAAmB,EACnBzpB,GAAA0pB,OAAgB,EAChB1pB,GAAA2pB,OAAgB,EAChB3pB,GAAA4pB,OAAgB,EAChB5pB,GAAAuR,OAAgB,EAC/B,OAAAvR,KACAhG,GAAmBJ,QAAVoG,O/B22FHwZ,kDAAkD,SAAS1gB,EAAQkB,EAAOJ,GAIhF,GgC14FM0a,GAAW,WAAjB,QAAMA,MAmBSA,EAAAiD,KAAd,SAAmBkV,EAAcC,GAEhC,OAAQD,EAAQC,IAAaA,EAnBhBpY,GAAAkD,MAAe,CACflD,GAAAoD,MAAe,CACfpD,GAAAsD,MAAe,CACftD,GAAAwD,MAAe,CACfxD,GAAAiE,MAAe,EACfjE,GAAAoE,MAAe,EACfpE,GAAAsE,MAAe,EACftE,GAAAwE,MAAe,GACfxE,GAAAqY,MAAe,GACfrY,GAAAsY,OAAgB,GAChBtY,GAAAuY,OAAgB,IAChBvY,GAAAwY,OAAgB,IAChBxY,GAAAyY,OAAgB,IAChBzY,GAAA0Y,OAAgB,IAChB1Y,GAAA2Y,OAAgB,KAChB3Y,GAAA4Y,OAAgB,KAM/B,OAAA5Y,KACqBta,GAAAJ,QAAZ0a,OhC44FH0X,+CAA+C,SAASlzB,EAAQkB,EAAOJ,GiCv6F7E,GAAOoG,GAASlH,EAAgB,+CAGhC,IAAM0sB,GAAQ,WAkBb,QAlBKA,GAkBO2H,EAAgBC,GAE3B7yB,KAAKiD,KAAK4vB,CACV7yB,MAAKkJ,GAAG0pB,CACR5yB,MAAKkI,MAAQzC,EAAUksB,mBACvB3xB,MAAKiI,kBAAkBxF,OACvBzC,MAAK+H,kBAAkBtF,OACvB,IAAGowB,GAAW,GAAG,CAChB7yB,KAAK8yB,oBAAoBrwB,MAAW,GAErCzC,KAAK+yB,wBAAwB,EAGvB9H,EAAAnrB,UAAA2sB,QAAP,WAGCzsB,KAAKkJ,GAAK,IACVlJ,MAAKgzB,MAAQ,IACbhzB,MAAKizB,cAAgB,IACrBjzB,MAAK4vB,sBAAwB,KAIvB3E,GAAAnrB,UAAAozB,SAAP,SAAgBC,GAEf,IAAKnzB,KAAKizB,cACTjzB,KAAKizB,cAAgB,GAAIxwB,MAE1BzC,MAAKizB,cAAcpwB,KAAKswB,GAE1B,OAAAlI,KACAxrB,GAAkBJ,QAAT4rB,IjCg5FNzjB,+CAA+C,iDAAiDkqB,oDAAoD,SAASnzB,EAAQkB,EAAOJ,GkCp8F/K,GAAM2rB,GAAa,WAAnB,QAAMA,MAEEA,EAAAlrB,UAAAI,IAAP,SAAW0uB,EAAYwE,GAEtBpzB,KAAM4uB,EAAInc,YAAe2gB,EAGnBpI,GAAAlrB,UAAAC,IAAP,SAAW6uB,EAAYyE,GAEtB,GAAIrzB,KAAKmF,eAAeypB,EAAInc,YAAa,CACxC,MAAOzS,MAAK4uB,EAAInc,gBACV,CACN,MAAO4gB,IAGV,OAAArI,KACuBvrB,GAAAJ,QAAd2rB,OlCu8FHsI,iCAAiC,SAAS/0B,EAAQkB,EAAOJ,GAC/D,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GmCt9FtB,IAAOmuB,GAAmBh1B,EAAc,0CACxC,IAAOi1B,GAAUj1B,EAAgB,iCAEjC,IAAOk1B,GAAUl1B,EAAgB,qCACjC,IAAOm1B,GAAWn1B,EAAgB,sCAOlC,IAAOo1B,GAAgBp1B,EAAe,4CAGtC,IAAOoJ,GAASpJ,EAAgB,kCAIhC,IAAOq1B,GAAar1B,EAAe,wCACnC,IAAOqN,GAAsBrN,EAAa,uDAW1C,IAAOwb,GAAWxb,EAAgB,iDAGlC,IAAOs1B,GAAet1B,EAAe,sDAErC,IAAO2sB,GAAY3sB,EAAgB,kDACnC,IAAOkH,GAASlH,EAAgB,+CnCm8FhC,ImC57FMu1B,GAAU,SAAApuB,GAASX,EAAnB+uB,EAAUpuB,EAuBf,SAvBKouB,GAuBOnxB,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAAnC,UAEXkF,EAAApG,KAAAU,KAAMuzB,EAAoBQ,aAtBnB/zB,MAAAmrB,OAAiB,KAEjBnrB,MAAAg0B,gBAA0B,KAG1Bh0B,MAAAi0B,eAAyB,KAM1Bj0B,MAAAk0B,WAAoB,CACpBl0B,MAAAm0B,UAAmB,CACnBn0B,MAAAo0B,cAAuB,CAW7Bp0B,MAAKq0B,cAAc1xB,CACnB,IAAG3C,KAAKq0B,eAAe7zB,UAAU,CAChCR,KAAKq0B,cAAc,GAAIR,GAExB7zB,KAAKs0B,UAAU,GAAIpJ,EACnBlrB,MAAKq0B,cAAcvxB,YAAY9C,KAAKs0B,WAQvBR,EAAAS,aAAd,SAA2BC,GAE1BA,EAAYA,EAAUC,aACtB,OAAOD,IAAa,MAQPV,GAAAY,aAAd,SAA2BttB,GAE1B,MAAQssB,GAAYjhB,SAASrL,EAAM,IAAM,MAMnC0sB,GAAAh0B,UAAA60B,oBAAP,SAA2BC,GAI1B,GAAIA,EAAmBC,OAAOt1B,QAAU,EAAG,CAC1C,GAAIu1B,GAAsB90B,KAAKs0B,UAAU9D,aAAauE,SAASH,EAAmB1rB,IAClF,IAAG4rB,EAAW7xB,MAAM,GAAG,CACtB,GAAI+xB,GAA8CJ,EAAmBC,OAAO,EAC5EC,GAAW1tB,KAAO4tB,CAGlBh1B,MAAKi1B,gBAAyBD,EAAeF,EAAWhvB,KAExD,IAAI9F,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,yCACZD,SAAQC,IAAI,0BAA4ButB,EAAWhvB,WAGhD,IAAGgvB,EAAW7xB,MAAM,GAAG,MAavB,IAAG6xB,EAAW7xB,MAAM,GAAG,CAC3B6xB,EAAWhC,oBAAoB8B,EAAmBM,QAAwBN,EAAmBC,OAAO,EACpGC,GAAW/B,yBACX,IAAG+B,EAAW/B,yBAAyB,EAAE,CACxC,GAAI/yB,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,8BAAgCqtB,EAAmBM,OAAS,wBAEzE,GAAIC,GAAWL,EAAWhC,oBAAoB,EAC9C,IAAIsC,GAAWN,EAAWhC,oBAAoB,EAC9C,IAAIuC,GAAWP,EAAWhC,oBAAoB,EAC9C,IAAIwC,GAAWR,EAAWhC,oBAAoB,EAC9C,IAAIyC,GAAWT,EAAWhC,oBAAoB,EAC9C,IAAI0C,GAAWV,EAAWhC,oBAAoB,EAE9C,IAAI2C,GAA+B,GAAI9B,GAAiBwB,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EACtFV,GAAW1tB,KAAOquB,CAClBz1B,MAAKi1B,gBAAyBQ,EAAgBX,EAAWhvB,KACzD,IAAI9F,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,8BAAgCutB,EAAWhvB,UAUrDguB,GAAAh0B,UAAA41B,2BAAP,SAAkCd,IAW3Bd,GAAAh0B,UAAA61B,wBAAP,SAA+Bf,EAAuC7rB,GAErE,GAAI6sB,GAAiB7sB,EAAMjD,IAE3B,IAAIiD,EAAO,CACV,GAAI8sB,GAAiB71B,KAAKs0B,UAAU9D,aAAauE,SAASH,EAAmB1rB,IAG7EH,GAAM+sB,eAAeD,EAAM/vB,KAAM,KAAM,MAGxC,GAAIiwB,GAAiBhtB,EAAMjD,IAE3BiD,GAAMjD,KAAO8vB,CAEb,OAAOG,GAODjC,GAAAh0B,UAAAk2B,iBAAP,WAGC,IAAKh2B,KAAKg0B,gBAAiB,CAC1Bh0B,KAAKi2B,UAAYj2B,KAAKk2B,eACtBl2B,MAAKg0B,gBAAkB,KAGxB,IAAKh0B,KAAKi0B,eAAgB,CAUzBj0B,KAAKm2B,aAEL,QAAQn2B,KAAKo2B,cAEZ,IAAK3wB,GAAUssB,QACf,IAAKtsB,GAAUusB,KACdhyB,KAAKq2B,eAAe,2CACpB,MAED,KAAK5wB,GAAUqsB,aACd9xB,KAAKs2B,MAAQt2B,KAAKi2B,SAClB,OAyBFj2B,KAAKi0B,eAAiB,KAUvB,GAAIj0B,KAAKs2B,MAAO,CAEf,MAAOt2B,KAAKs2B,MAAMC,oBAAsB,IAAMv2B,KAAKw2B,cACnD,CACCx2B,KAAKy2B,iBAMN,GAAIz2B,KAAKs2B,MAAMC,qBAAuB,EAAG,CACxCv2B,KAAKysB,SACL,OAAQgH,GAAWiD,iBACb,CACN,MAAQjD,GAAWkD,mBAEd,CAEN,OAAQ32B,KAAKo2B,cAEZ,IAAK3wB,GAAUssB,QACf,IAAKtsB,GAAUusB,KAEd,GAAIhyB,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,qEAGb,MAIF,MAAQksB,GAAWiD,cAMd5C,GAAAh0B,UAAA82B,eAAP,SAAsBC,GAErBnxB,EAAA5F,UAAM82B,eAAct3B,KAAAU,KAAC62B,EAGrB72B,MAAK82B,UAAY,GAAIlrB,GAGdkoB,GAAAh0B,UAAA2sB,QAAR,WAECzsB,KAAKs0B,UAAU7H,UAGRqH,GAAAh0B,UAAA22B,eAAR,WAEC,GAAIM,GAAkB/2B,KAAKs2B,MAAMhwB,iBAEjC,IAAI0wB,GAAYh3B,KAAKs2B,MAAM3vB,kBAC3B,IAAIswB,GAAoBj3B,KAAKs2B,MAAM3vB,kBACnC,IAAIurB,GAAelyB,KAAKs2B,MAAM3vB,kBAC9B,IAAIgoB,GAAa3uB,KAAKs2B,MAAMhwB,iBAE5B,IAAI4wB,GAA2Bnd,EAAYiD,KAAKkV,EAAOnY,EAAYwD,MACnE,IAAI4Z,GAA+Bpd,EAAYiD,KAAKkV,EAAOnY,EAAYiE,MAEvE,IAAIhe,KAAKs0B,UAAU8C,iBAAkB,CACpCp3B,KAAKs0B,UAAU+C,eAAiBtd,EAAYiD,KAAKkV,EAAOnY,EAAYkD,MACpEjd,MAAKs0B,UAAU3mB,YAAcoM,EAAYiD,KAAKkV,EAAOnY,EAAYoD,MACjEnd,MAAKs0B,UAAUgD,cAAgBvd,EAAYiD,KAAKkV,EAAOnY,EAAYsD,MACnErd,MAAKs0B,UAAUhoB,UAAY7G,EAAU6oB,OAErC,IAAItuB,KAAKs0B,UAAU3mB,YAAa,CAC/B3N,KAAKs0B,UAAUhoB,UAAY7G,EAAU8oB,QAGtCvuB,KAAKs0B,UAAU3pB,aAAelF,EAAU6oB,OAExC,IAAItuB,KAAKs0B,UAAU+C,eAAgB,CAClCr3B,KAAKs0B,UAAU3pB,aAAelF,EAAU8oB,QAGzCvuB,KAAKs0B,UAAUpqB,YAAczE,EAAU6oB,OAEvC,IAAItuB,KAAKs0B,UAAUgD,cAAe,CACjCt3B,KAAKs0B,UAAUpqB,YAAczE,EAAU8oB,SAIzC,GAAIgJ,GAAqBv3B,KAAKs2B,MAAMvpB,SAAW4hB,CAE/C,IAAIA,EAAM3uB,KAAKs2B,MAAMC,oBAAqB,CACzCv2B,KAAKq2B,eAAe,iEACpBr2B,MAAKs2B,MAAMvpB,UAAY/M,KAAKs2B,MAAMC,mBAClC,QAGD,GAAIvwB,GAA0B,GAAI2B,EAClC3H,MAAKs2B,MAAMtuB,UAAUhC,EAAe,EAAG2oB,EACvC3uB,MAAKs0B,UAAUtuB,cAAgBA,CAK/B,IAAIkxB,EAAkB,CACrBl3B,KAAKq2B,eAAe,4CAqBrBr2B,KAAKs0B,UAAUtuB,cAAc+G,SAAW,CAIxC/M,MAAKs0B,UAAU9G,iBAAiByJ,EAAYF,EAG5C,IAAIG,EAAkB,CACrBl3B,KAAKq2B,eAAe,4CAMpB/uB,QAAQC,IAAI,mBAAqBwvB,EAAW,eAAiBE,EAAa,oBAAsBC,EAAmB,yBAA2Bl3B,KAAKs0B,UAAU+C,eAAiB,2BAA6Br3B,KAAKs0B,UAAU3mB,YAAc,6BAA+B3N,KAAKs0B,UAAUgD,cnCg0FjR,ImC7zFFE,GAAaC,YAAYC,KAI7B,IAAG13B,KAAKq0B,cAAcrxB,WAAWi0B,GAAY,CAC5C,GAAGj3B,KAAKs0B,UAAUzuB,UAAUqC,OAAOzC,EAAUksB,oBAAoB,CAChE3xB,KAAKi1B,gBAAwBj1B,KAAKs0B,UAAUzuB,UAAUuB,KAAMpH,KAAKs0B,UAAUzuB,UAAUC,KACrF,IAAG9F,KAAKs0B,UAAUzuB,UAAUuB,eAAgBwsB,GAAc,CACzD,GAA6B5zB,KAAKs0B,UAAUzuB,UAAUuB,KAAMqD,QAAQjK,UAAU,CACnDR,KAAK82B,UAAWpsB,SAAmC1K,KAAKs0B,UAAUzuB,UAAUuB,YAIpG,IAAGpH,KAAKs0B,UAAUzuB,UAAUqC,OAAOzC,EAAUmsB,mBAAmB,CACpEtqB,QAAQC,IAAI,sCAAuC0vB,EAAY,SAAUF,OAErE,IAAG/2B,KAAKs0B,UAAUzuB,UAAUqC,OAAOzC,EAAU0C,6BAA6B,CAE9E,IAAI,GAAIxJ,GAAS,EAAGA,EAAEqB,KAAKs0B,UAAUzuB,UAAUkC,kBAAkBxI,OAAOZ,IAAI,CAE3EqB,KAAK23B,gBAAgB33B,KAAKs0B,UAAUzuB,UAAUqD,GAAGuJ,WAAY,GAAI+gB,GAAWxzB,KAAKs0B,UAAUzuB,UAAUkC,kBAAkBpJ,IAAK,MAAO,KAAM,KAAMA,GAEhJ,IAAI,GAAIA,GAAS,EAAGA,EAAEqB,KAAKs0B,UAAUzuB,UAAUoC,kBAAkB1I,OAAOZ,IAAK,CAE5E,GAAKs4B,GAAc,IAAQA,GAAc,GAAK,CAC7Cj3B,KAAK23B,gBAAgB33B,KAAKs0B,UAAUzuB,UAAUqD,GAAGuJ,WAAY,KAAM,MAAOihB,EAAYkE,iBAAiB53B,KAAKs0B,UAAUzuB,UAAUoC,kBAAkBtJ,IAAK,KAAMA,OAEzJ,IAAIs4B,GAAc,GAAI,GAK5Bj3B,KAAK63B,qCAED,IAAG73B,KAAKs0B,UAAUzuB,UAAUqC,OAAOzC,EAAUwD,oBAAoB,OAIlE,CACJ3B,QAAQC,IAAI,0CAA2C0vB,EAAY,SAAUF,GAG9E,GAAIe,GAAWL,YAAYC,KAC3B,IAAIK,GAAgBD,EAASN,CAC7Bx3B,MAAKk0B,YAAY6D,CACjB,IAAGd,GAAY,EAAE,CAChBj3B,KAAKm0B,WAAW4D,MAEZ,IAAGd,GAAY,IAAI,CACvBj3B,KAAKo0B,eAAe2D,EAErBzwB,QAAQC,IAAI,YAAY0vB,EAAW,eAAec,EAAU,MAAO,WAAW/3B,KAAKk0B,WAAW,UAAUl0B,KAAKm0B,UAAU,aAAan0B,KAAKo0B,cAEzIp0B,MAAKs2B,MAAMvpB,SAAWwqB,CACtBv3B,MAAKs0B,UAAUtuB,cAAgB,KAOxB8tB,GAAAh0B,UAAAq2B,YAAR,WAEC,GAAIjE,EACJ,IAAI8F,EAEJh4B,MAAKi2B,UAAUlpB,SAAW,CAE1B/M,MAAKs0B,UAAUxoB,cAAgB9L,KAAKi2B,UAAUtvB,kBAC9C3G,MAAKs0B,UAAUvoB,cAAgB/L,KAAKi2B,UAAUtvB,kBAE9CurB,GAAQlyB,KAAKi2B,UAAUhwB,mBAEvBjG,MAAKi4B,WAAale,EAAYiD,KAAKkV,EAAOnY,EAAYkD,MAEtD,IAAKjd,KAAKs0B,UAAUxoB,eAAiB,GAAO9L,KAAKs0B,UAAUvoB,eAAiB,EAAI,CAC/E/L,KAAKs0B,UAAU+C,eAAiBtd,EAAYiD,KAAKkV,EAAOnY,EAAYoD,MACpEnd,MAAKs0B,UAAU3mB,YAAcoM,EAAYiD,KAAKkV,EAAOnY,EAAYsD,MACjErd,MAAKs0B,UAAUgD,cAAgBvd,EAAYiD,KAAKkV,EAAOnY,EAAYwD,OAMpEvd,KAAKs0B,UAAUhoB,UAAY7G,EAAU6oB,OAErC,IAAItuB,KAAKs0B,UAAU3mB,YAAa,CAC/B3N,KAAKs0B,UAAUhoB,UAAY7G,EAAU8oB,QAGtCvuB,KAAKs0B,UAAU3pB,aAAelF,EAAU6oB,OAExC,IAAItuB,KAAKs0B,UAAU+C,eAAgB,CAClCr3B,KAAKs0B,UAAU3pB,aAAelF,EAAU8oB,QAGzCvuB,KAAKs0B,UAAUpqB,YAAczE,EAAU6oB,OAEvC,IAAItuB,KAAKs0B,UAAUgD,cAAe,CACjCt3B,KAAKs0B,UAAUpqB,YAAczE,EAAU8oB,QAGxCvuB,KAAKo2B,aAAep2B,KAAKi2B,UAAUtvB,kBAEnC,IAAI3G,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,+BAAiCvH,KAAKs0B,UAAUxoB,cAAgB,MAAQ9L,KAAKs0B,UAAUvoB,cACnGzE,SAAQC,IAAI,mCAAqCvH,KAAKo2B,aAAe,kBAAoBp2B,KAAKi4B,WAAa,yBAA2Bj4B,KAAKs0B,UAAU+C,eAAiB,2BAA6Br3B,KAAKs0B,UAAU3mB,YAAc,6BAA+B3N,KAAKs0B,UAAUgD,eAI/QU,EAAWh4B,KAAKi2B,UAAU3vB,iBAC1B,KAAKtG,KAAKi4B,YAAcD,GAAYh4B,KAAKi2B,UAAUM,oBAAqB;AACvEv2B,KAAKq2B,eAAe,2DAGvB,OAAAvC,IArdyBL,EAudzBh0B,GAAoBJ,QAAXy0B,InCmyFNoE,0CAA0C13B,UAAU23B,iCAAiC33B,UAAU43B,qCAAqC53B,UAAU63B,sCAAsC73B,UAAU83B,4CAA4C93B,UAAU6H,kCAAkC7H,UAAU+3B,wCAAwC/3B,UAAUwL,uDAAuDxL,UAAUC,sDAAsD,sDAAsDkqB,kDAAkD,kDAAkDnjB,+CAA+C,+CAA+CyX,iDAAiD,mDAAmDuZ,gCAAgC,SAASj6B,EAAQkB,EAAOJ,GACh2B,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GoChzGtB,IAAOwlB,GAASrsB,EAAgB,iCAChC,IAAO0N,GAAQ1N,EAAiB,gCAEhC,IAAO2N,GAAgB3N,EAAe,wCACtC,IAAO4N,GAAmB5N,EAAc,2CACxC,IAAOyb,GAAczb,EAAe,sCACpC,IAAO0b,GAAQ1b,EAAiB,gCAChC,IAAOiL,GAAQjL,EAAiB,gCAChC,IAAOg1B,GAAmBh1B,EAAc,0CACxC,IAAOi1B,GAAUj1B,EAAgB,iCAEjC,IAAOk1B,GAAUl1B,EAAgB,qCACjC,IAAOm1B,GAAWn1B,EAAgB,sCAGlC,IAAO8K,GAAqB9K,EAAa,oDACzC,IAAO+K,GAAsB/K,EAAa,qDAC1C,IAAOgL,GAA+BhL,EAAW,8DACjD,IAAOssB,GAAiBtsB,EAAc,6CAGtC,IAAOo1B,GAAgBp1B,EAAe,4CACtC,IAAOk6B,GAAYl6B,EAAgB,wCAEnC,IAAOusB,GAAWvsB,EAAgB,uCAClC,IAAOoJ,GAASpJ,EAAgB,kCAEhC,IAAOm6B,GAAiBn6B,EAAc,uDACtC,IAAOqN,GAAsBrN,EAAa,uDAE1C,IAAOo6B,GAASp6B,EAAgB,oCAChC,IAAOqR,GAAgBrR,EAAe,+CACtC,IAAOsR,GAAUtR,EAAgB,yCACjC,IAAO6K,GAAM7K,EAAiB,qCAC9B,IAAOya,GAAIza,EAAkB,mCAC7B,IAAOmc,GAASnc,EAAgB,wCAChC,IAAO+J,GAAS/J,EAAgB,wCAChC,IAAOinB,GAAMjnB,EAAiB,qCAC9B,IAAOuU,GAAsBvU,EAAa,qDAC1C,IAAOwsB,GAAYxsB,EAAgB,4CACnC,IAAOq6B,GAAer6B,EAAe,4DACrC,IAAO0T,GAAiB1T,EAAc,8DACtC,IAAOmR,GAAmBnR,EAAc,iEACxC,IAAOoR,GAAuBpR,EAAa,qEAE3C,IAAOohB,GAAUphB,EAAgB,wCACjC,IAAOqhB,GAAsBrhB,EAAa,oDAC1C,IAAOshB,GAAmBthB,EAAc,iDACxC,IAAOuhB,GAAmBvhB,EAAc,iDACxC,IAAOwhB,GAAuBxhB,EAAa,qDAC3C,IAAOyhB,GAAoBzhB,EAAc,kDACzC,IAAO0hB,GAAqB1hB,EAAa,mDACzC,IAAO2hB,GAAoB3hB,EAAc,kDAEzC,IAAOs6B,GAAgBt6B,EAAe,mDAEtC,IAAOurB,GAAkBvrB,EAAc,qDACvC,IAAOgH,GAAchH,EAAe,iDACpC,IAAOwrB,GAAoBxrB,EAAc,uDACzC,IAAOiH,GAAgBjH,EAAe,mDACtC,IAAOomB,GAASpmB,EAAgB,iDAChC,IAAO+kB,GAAQ/kB,EAAiB,gDAChC,IAAOmmB,IAAYnmB,EAAgB,oDACnC,IAAOglB,IAAahlB,EAAe,qDACnC,IAAO0lB,IAAgB1lB,EAAe,yDACtC,IAAOuqB,IAAcvqB,EAAe,uDAEpC,IAAOoU,IAAkBpU,EAAc,gDACvC,IAAOqU,IAAcrU,EAAe,4CACpC,IAAOwU,IAAmBxU,EAAc,yDACxC,IAAOyU,IAAkBzU,EAAc,wDACvC,IAAO0U,IAAgB1U,EAAe,sDACtC,IAAO2U,IAAqB3U,EAAa,2DACzC,IAAO4U,IAAqB5U,EAAa,2DACzC,IAAO6U,IAAiB7U,EAAc,uDACtC,IAAOu6B,IAAqBv6B,EAAa,2DACzC,IAAOgkB,IAAuBhkB,EAAa,6DAC3C,IAAOikB,IAA0BjkB,EAAY,gEAC7C,IAAOw6B,IAAkBx6B,EAAc,wDACvC,IAAOkkB,IAAelkB,EAAe,qDACrC,IAAOy6B,IAAyBz6B,EAAY,+DAC5C,IAAO06B,IAAoB16B,EAAc,0DACzC,IAAO26B,IAAgB36B,EAAe,sDACtC,IAAOmkB,IAAoBnkB,EAAc,0DACzC,IAAO8U,IAAuB9U,EAAa,6DAC3C,IAAOgjB,IAAoBhjB,EAAc,0DACzC,IAAOijB,IAAoBjjB,EAAc,0DACzC,IAAO46B,IAAmB56B,EAAc,yDAExC,IAAO+U,IAAqB/U,EAAa,2DACzC,IAAOkjB,IAAgBljB,EAAe,sDACtC,IAAOgV,IAAyBhV,EAAY,+DAC5C,IAAOiV,IAAiBjV,EAAc,uDACtC,IAAOkV,IAAmBlV,EAAc,yDACxC,IAAOmjB,IAAgBnjB,EAAe,sDACtC,IAAOojB,IAAgBpjB,EAAe,sDAEtC,IAAOsU,IAAatU,EAAe,6CACnC,IAAOgK,IAAahK,EAAe,6CAGnC,IAAOoc,IAAoBpc,EAAa,mDAExC,IAAO2b,IAAgB3b,EAAc,8CAErC,IAAO4b,IAAsB5b,EAAY,6DACzC,IAAO6b,IAAqB7b,EAAY,4DACxC,IAAO8b,IAAoB9b,EAAa,2DAExC,IAAO+b,IAA4B/b,EAAW,mEAC9C,IAAOgc,IAAsBhc,EAAa,6DAC1C,IAAOic,IAAqBjc,EAAa,4DACzC,IAAOkc,IAAclc,EAAqB,qDAE1C,IAAOsnB,IAAItnB,EAAiB,+BAE5B,IAAOioB,IAAUjoB,EAAa,qCpCgyG9B,IoC1xGM66B,IAAS,SAAA1zB,GAASX,EAAlBq0B,EAAS1zB,EAmEd,SAnEK0zB,KAqEJ1zB,EAAApG,KAAAU,KAAMuzB,EAAoBQ,aAlEnB/zB,MAAAmrB,OAAiB,KAEjBnrB,MAAAg0B,gBAA0B,KAc1Bh0B,MAAAq5B,iBACAr5B,MAAAi0B,eAAyB,KAS1Bj0B,MAAAk0B,WAAoB,CACpBl0B,MAAAm0B,UAAmB,CACnBn0B,MAAAo0B,cAAuB,CAwC7Bp0B,MAAKqrB,QAAU,GAAI5oB,MACnBzC,MAAKqrB,QAAQ,GAAK,GAAIJ,GACtBjrB,MAAKqrB,QAAQ,GAAGjkB,KAAO,IAEvBpH,MAAKurB,aAAe,GAAI9oB,MACxBzC,MAAKurB,aAAa1oB,KAAK+nB,EAAUY,OACjCxrB,MAAKurB,aAAa1oB,KAAK+nB,EAAUa,IACjCzrB,MAAKurB,aAAa1oB,KAAK+nB,EAAUc,MACjC1rB,MAAKurB,aAAa1oB,KAAK+nB,EAAUe,OACjC3rB,MAAKurB,aAAa1oB,KAAK+nB,EAAUgB,WACjC5rB,MAAKurB,aAAa1oB,KAAK+nB,EAAUiB,MACjC7rB,MAAKurB,aAAa1oB,KAAK+nB,EAAUkB,UACjC9rB,MAAKurB,aAAa1oB,KAAK+nB,EAAUmB,OACjC/rB,MAAKurB,aAAa1oB,KAAK+nB,EAAUoB,MACjChsB,MAAKurB,aAAa1oB,KAAK+nB,EAAUqB,QACjCjsB,MAAKurB,aAAa1oB,KAAK+nB,EAAUsB,SACjClsB,MAAKurB,aAAa1oB,KAAK+nB,EAAUY,OACjCxrB,MAAKurB,aAAa1oB,KAAK+nB,EAAUuB,QACjCnsB,MAAKurB,aAAa1oB,KAAK+nB,EAAUwB,OACjCpsB,MAAKurB,aAAa1oB,KAAK+nB,EAAUyB,OACjCrsB,MAAKurB,aAAa1oB,KAAK+nB,EAAUuB,QAEjCnsB,MAAKssB,cAAgB,GAAI7pB,MACzBzC,MAAKssB,cAAczpB,KAAK,IACxB7C,MAAKssB,cAAczpB,KAAK,IACxB7C,MAAKssB,cAAczpB,KAAK,KACxB7C,MAAKssB,cAAczpB,KAAK,KACxB7C,MAAKs5B,SAAW72B,QAQH22B,EAAA7E,aAAd,SAA2BC,GAE1BA,EAAYA,EAAUC,aACtB,OAAOD,IAAa,MAQP4E,GAAA1E,aAAd,SAA2BttB,GAE1B,MAAQssB,GAAYjhB,SAASrL,EAAM,IAAM,MAMnCgyB,GAAAt5B,UAAA60B,oBAAP,SAA2BC,GAM1B,GAAIA,EAAmBC,OAAOt1B,QAAU,EAAG,CAC1C,GAAIg6B,GAAmC3E,EAAmB1rB,GAAGswB,MAAM,IACnE,IAAIC,GAAqBF,EAAmB,EAC5C,IAAIxwB,EACJ,IAAI2wB,EACJ,IAAI7D,EAEJ,IAAI0D,EAAmBh6B,QAAU,EACjC,CACCwJ,EAAwB6rB,EAAmBC,OAAO,EAClD,IAAI9rB,EAAO,CACV,GAAIN,EACJ,IAAIkxB,EAEJ9D,GAAQ71B,KAAKqrB,QAASuJ,EAAmB1rB,GACzC2sB,GAAMzuB,KAAO2B,CAIbA,GAAM+sB,eAAeD,EAAM/vB,KAAM,KAAM,KACvC+vB,GAAM/vB,KAAOiD,EAAMjD,IAGnB9F,MAAKi1B,gBAAyBlsB,EAE9B,IAAI/I,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,yCACZD,SAAQC,IAAI,0BAA4BsuB,EAAM/vB,QAKjD,GAAIyzB,EAAmBh6B,OAAS,EAChC,CACCm6B,EAAoC9E,EAAmBC,OAAO,EAE9D,IAAI+E,GAAiCF,CAErC15B,MAAK65B,cAAeN,EAAmB,IAAOK,EAAGE,gBACjD95B,MAAKq5B,eAAeI,GAAa52B,KAAK,EAEtC,IAAI7C,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,8BAAgCvH,KAAKq5B,eAAeI,GAAal6B,OAAS,wBAEvF,GAAIS,KAAKq5B,eAAeI,GAAal6B,QAAUS,KAAK65B,cAAct6B,OAAQ,CAEzE,GAAI41B,GAAWn1B,KAAK65B,cAAc,EAClC,IAAIzE,GAAWp1B,KAAK65B,cAAc,EAClC,IAAIxE,GAAWr1B,KAAK65B,cAAc,EAClC,IAAIvE,GAAWt1B,KAAK65B,cAAc,EAClC,IAAItE,GAAWv1B,KAAK65B,cAAc,EAClC,IAAIrE,GAAWx1B,KAAK65B,cAAc,EAElC9wB,GAAsB,GAAI4qB,GAAiBwB,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EACzEK,GAAQ71B,KAAKqrB,QAAQoO,EACrB5D,GAAMzuB,KAAO2B,CAIbA,GAAM+sB,eAAeD,EAAM/vB,KAAM,KAAM,KACvC+vB,GAAM/vB,KAAOiD,EAAMjD,IAGnB9F,MAAKi1B,gBAAyBlsB,EAC9B,IAAI/I,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,8BAAgCsuB,EAAM/vB,UAWhDszB,GAAAt5B,UAAA41B,2BAAP,SAAkCd,IAW3BwE,GAAAt5B,UAAA61B,wBAAP,SAA+Bf,EAAuC7rB,GAErE,GAAI6sB,GAAiB7sB,EAAMjD,IAE3B,IAAIiD,EAAO,CACV,GAAI8sB,GAAiB71B,KAAKqrB,QAAQ0J,SAASH,EAAmB1rB,IAG9DH,GAAM+sB,eAAeD,EAAM/vB,KAAM,KAAM,MAGxC,GAAIiwB,GAAiBhtB,EAAMjD,IAE3BiD,GAAMjD,KAAO8vB,CAEb,OAAOG,GAODqD,GAAAt5B,UAAAk2B,iBAAP,WAGC,IAAKh2B,KAAKg0B,gBAAiB,CAC1Bh0B,KAAKi2B,UAAYj2B,KAAKk2B,eACtBl2B,MAAKg0B,gBAAkB,KAGxB,IAAKh0B,KAAKi0B,eAAgB,CAUzBj0B,KAAKm2B,aAEL,QAAQn2B,KAAKo2B,cAEZ,IAAKgD,GAAUrH,QACf,IAAKqH,GAAUpH,KACdhyB,KAAKq2B,eAAe,2CACpB,MAED,KAAK+C,GAAUtH,aACd9xB,KAAKs2B,MAAQt2B,KAAKi2B,SAClB,OAyBFj2B,KAAKi0B,eAAiB,KAUvB,GAAIj0B,KAAKs2B,MAAO,CAEf,MAAOt2B,KAAKs2B,MAAMC,oBAAsB,IAAMv2B,KAAKw2B,cACnD,CACCx2B,KAAKy2B,iBAMN,GAAIz2B,KAAKs2B,MAAMC,qBAAuB,EAAG,CACxCv2B,KAAKysB,SACL,OAAQgH,GAAWiD,iBACb,CACN,MAAQjD,GAAWkD,mBAEd,CAEN,OAAQ32B,KAAKo2B,cAEZ,IAAKgD,GAAUrH,QACf,IAAKqH,GAAUpH,KAEd,GAAIhyB,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,qEAGb,MAIF,MAAQksB,GAAWiD,cAMd0C,GAAAt5B,UAAA82B,eAAP,SAAsBC,GAErBnxB,EAAA5F,UAAM82B,eAAct3B,KAAAU,KAAC62B,EAGrB72B,MAAK82B,UAAY,GAAIlrB,GAGdwtB,GAAAt5B,UAAA2sB,QAAR,WAGC,IAAK,GAAI3R,KAAK9a,MAAKqrB,QAAS,CAE3B,GAAIpmB,GAAwBjF,KAAKqrB,QAASvQ,EAC1C7V,GAAEwnB,WAMI2M,GAAAt5B,UAAA22B,eAAR,WAEC,GAAIZ,EACJ,IAAIkE,EACJ,IAAIC,GAAmB,KACvB,IAAIhD,EACJ,IAAI/zB,EACJ,IAAIivB,EACJ,IAAIvD,EAEJ3uB,MAAKi6B,cAAgBj6B,KAAKs2B,MAAMhwB,iBAEhC0wB,GAAKh3B,KAAKs2B,MAAM3vB,kBAChB1D,GAAOjD,KAAKs2B,MAAM3vB,kBAClBurB,GAAQlyB,KAAKs2B,MAAM3vB,kBACnBgoB,GAAM3uB,KAAKs2B,MAAMhwB,iBAEjB,IAAI4wB,GAA2BgD,GAASld,KAAKkV,EAAOgI,GAAS3c,MAC7D,IAAI4Z,GAA+B+C,GAASld,KAAKkV,EAAOgI,GAASlc,MAEjE,IAAIhe,KAAKorB,kBAAmB,CAC3BprB,KAAK0sB,gBAAkBwN,GAASld,KAAKkV,EAAOgI,GAASjd,MACrDjd,MAAK8sB,aAAeoN,GAASld,KAAKkV,EAAOgI,GAAS/c,MAClDnd,MAAK4sB,eAAiBsN,GAASld,KAAKkV,EAAOgI,GAAS7c,MACpDrd,MAAKotB,WAAagM,EAAU9K,OAE5B,IAAItuB,KAAK8sB,aAAc,CACtB9sB,KAAKotB,WAAagM,EAAU7K,QAG7BvuB,KAAKgtB,cAAgBoM,EAAU9K,OAE/B,IAAItuB,KAAK0sB,gBAAiB,CACzB1sB,KAAKgtB,cAAgBoM,EAAU7K,QAGhCvuB,KAAKktB,aAAekM,EAAU9K,OAE9B,IAAItuB,KAAK4sB,eAAgB,CACxB5sB,KAAKktB,aAAekM,EAAU7K,SAIhC,GAAIgJ,GAAqBv3B,KAAKs2B,MAAMvpB,SAAW4hB,CAE/C,IAAIA,EAAM3uB,KAAKs2B,MAAMC,oBAAqB,CACzCv2B,KAAKq2B,eAAe,iEACpBr2B,MAAKs2B,MAAMvpB,UAAY/M,KAAKs2B,MAAMC,mBAClC,QAEDv2B,KAAKstB,eAAiB,GAAI3lB,EAG1B3H,MAAKs2B,MAAMtuB,UAAUhI,KAAKstB,eAAgB,EAAGqB,EAK7C,IAAIuI,EAAkB,CACrBl3B,KAAKq2B,eAAe,4CAqBrBr2B,KAAKstB,eAAevgB,SAAW,CAC/B8oB,GAAQ,GAAI5K,GACZ4K,GAAMlH,IAAM3uB,KAAKstB,eAAevgB,SAAW4hB,CAC3CkH,GAAM3sB,GAAKlJ,KAAKi6B,aAEhB,IAAIE,GAAuBn6B,KAAKstB,eAAevgB,SAAW4hB,CAE1D,IAAIuI,EAAkB,CACrBl3B,KAAKq2B,eAAe,4CAKrB,GAAIr2B,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,mBAAqBvH,KAAKi6B,cAAgB,eAAiBh3B,EAAO,oBAAsBi0B,EAAmB,yBAA2Bl3B,KAAK0sB,gBAAkB,2BAA6B1sB,KAAK8sB,aAAe,6BAA+B9sB,KAAK4sB,gBAG/P5sB,KAAKqrB,QAAQrrB,KAAKi6B,eAAiBpE,CAGnC,IAAK71B,KAAKs5B,SAAS,IAAM,GAAOt5B,KAAKs5B,SAAS,IAAM,EAAI,CpCwmG9C,GoCtmGL1e,GAAU,GAAID,GAElB,QAAQ1X,GACP,IAAK,IACJjD,KAAKo6B,sBAAsBp6B,KAAKi6B,cAChCD,GAAW,IACX,MACD,KAAK,IACJh6B,KAAKq6B,2BAA2Br6B,KAAKi6B,cACrCD,GAAW,IACX,MACD,KAAK,IACJh6B,KAAKs6B,gBAAgBt6B,KAAKi6B,cAAerf,EACzCof,GAAW,IACX,MACD,KAAK,KACJh6B,KAAKu6B,cAAcv6B,KAAKi6B,cAAerf,EACvCof,GAAW,IACX,MACD,KAAK,KACJh6B,KAAKw6B,eAAex6B,KAAKi6B,cAAerf,EACxCof,GAAW,IACX,MACD,KAAK,KACJh6B,KAAKy6B,oBAAoBz6B,KAAKi6B,cAC9BD,GAAW,IACX,MACD,KAAK,KACJh6B,KAAK06B,gBAAgB16B,KAAKi6B,cAC1BD,GAAW,IACX,QAGH,GAAKh6B,KAAKs5B,SAAS,GAAK,GAAMt5B,KAAKs5B,SAAS,IAAM,GAAOt5B,KAAKs5B,SAAS,IAAM,EAAK,CAEjF,OAAQr2B,GACP,IAAK,IACJjD,KAAK26B,eAAe36B,KAAKi6B,cACzBD,GAAW,IACX,MACD,KAAK,IACJh6B,KAAK46B,oBAAoB56B,KAAKi6B,cAC9BD,GAAW,IACX,MACD,KAAK,IACJh6B,KAAK66B,WAAW76B,KAAKi6B,cACrBD,GAAW,IACX,MACD,KAAK,IACJh6B,KAAK86B,YAAY96B,KAAKi6B,cACtBD,GAAW,IACX,MAOD,KAAK,IACJh6B,KAAK+6B,iBAAiB/6B,KAAKi6B,cAC3BD,GAAW,IACX,MACD,KAAK,IACJh6B,KAAKg7B,iBAAiBh7B,KAAKi6B,cAC3BD,GAAW,IACX,MACD,KAAK,IACJh6B,KAAKi7B,iBAAiBj7B,KAAKi6B,cAC3BD,GAAW,IACX,MACD,KAAK,IACJh6B,KAAKk7B,uBAAuBl7B,KAAKi6B,cACjCD,GAAW,IACX,MACD,KAAK,IACJh6B,KAAKm7B,uBAAuBn7B,KAAKi6B,cACjCD,GAAW,IACX,MACD,KAAK,KACJh6B,KAAKo7B,uBAAuBp7B,KAAKi6B,cAAe,KAChDD,GAAW,IACX,MACD,KAAK,KACJh6B,KAAKo7B,uBAAuBp7B,KAAKi6B,cACjCD,GAAW,IACX,MACD,KAAK,KACJh6B,KAAKq7B,wBAAwBr7B,KAAKi6B,cAClCD,GAAW,IACX,MACD,KAAK,KACJh6B,KAAKs7B,iBAAiBt7B,KAAKi6B,cAC3BD,GAAW,IACX,MACD,KAAK,KACJh6B,KAAKu7B,aAAav7B,KAAKi6B,cACvBD,GAAW,IACX,QAKH,GAAIA,GAAY,MAAO,CACtB,OAAQ/2B,GAEP,IAAK,GACJjD,KAAKw7B,4BAA4Bx7B,KAAKi6B,cACtC,MACD,KAAK,IACJj6B,KAAKy7B,eAAez7B,KAAKi6B,cACzB,MACD,KAAK,IACJj6B,KAAK07B,kBAAkB17B,KAAKi6B,cAC5B,MACD,KAAK,IACJj6B,KAAK27B,cAAc37B,KAAKi6B,cACxB,MACD,KAAK,IACJj6B,KAAK47B,aAAa57B,KAAKi6B,cACvB,MACD,KAAK,KACJj6B,KAAK67B,cAAc77B,KAAKi6B,cACxB,MACD,KAAK,KACJj6B,KAAK87B,kBAAkB97B,KAAKi6B,cAC5B,MACD,KAAK,KACJj6B,KAAK+7B,uBAAuB/7B,KAAKi6B,cACjC,MACD,KAAK,KAGL,IAAK,KACJj6B,KAAKg8B,eAAeh8B,KAAKi6B,cACzB,MACD,KAAK,KACJj6B,KAAKi8B,cAAcj8B,KAAKi6B,cACxB,MACD,SACC,GAAIj6B,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,6CAA+CvH,KAAKi6B,cAAgB,YAActL,EAAM,UAErG3uB,KAAKstB,eAAevgB,UAAY4hB,CAChC,QpC8lGG,GoCzlGFuN,GAAgB,CACpB,IAAIl8B,KAAKstB,eAAevgB,UAAYotB,EAAe,CAClD,GAAIn6B,KAAKmrB,OAAQ,CAChB,GAAI0K,EAAM5C,cAAe,CACxB,MAAOiJ,EAASrG,EAAM5C,cAAc1zB,OAAQ,CAC3C+H,QAAQC,IAAI,sBAAwBsuB,EAAM5C,cAAciJ,GAAU,OAClEA,OAIH,GAAIl8B,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,WAEP,CACN,GAAIvH,KAAKmrB,OAAQ,CAEhB7jB,QAAQC,IAAI,+CAAiDvH,KAAKi6B,cAAgB,wBAElF,IAAIpE,EAAM5C,cAAe,CACxB,MAAOiJ,EAASrG,EAAM5C,cAAc1zB,OAAQ,CAC3C+H,QAAQC,IAAI,sBAAwBsuB,EAAM5C,cAAciJ,GAAU,OAClEA,QAiBJl8B,KAAKs2B,MAAMvpB,SAAWwqB,CACtBv3B,MAAKstB,eAAiB,KAQf8L,GAAAt5B,UAAA26B,oBAAR,SAA4B0B,GAC3B,GAAIr2B,GAAc9F,KAAK+F,aACvB/F,MAAKqrB,QAAQ8Q,GAASr2B,KAAOA,CpCqlGvB,IoCnlGFigB,GAAwB/lB,KAAKstB,eAAehnB,iBpCqlG1C,IoCnlGFwf,GAAc,GAAID,GACtB,KAAK,GAAI7mB,GAAW,EAAGA,EAAI+mB,IAAkB/mB,EAAG,CAC/C,GAAIgnB,GAAyBhmB,KAAK+F,apCqlGzB,IoCnlGLkgB,GAAmCH,EAASI,eAAeF,EAC/DC,GAAeE,iBAAiBnmB,KAAKstB,eAAehnB,kBpCqlG3C,IoCnlGL8f,GAA6BpmB,KAAKstB,eAAehnB,iBAErD,KAAK,GAAItH,GAAW,EAAGA,EAAIonB,IAAuBpnB,EAAG,CAEpD,GAAIqnB,GAAyBrmB,KAAKstB,eAAehnB,iBpColGrC,IoCjlGRqG,GAAgB3M,KAAKstB,eAAehnB,iBACxC,IAAIsG,GAAgB5M,KAAKstB,eAAevgB,SAAWJ,CAKnD,OAAO3M,KAAKstB,eAAevgB,SAAWH,EAAQ,CAC7C,GAAIK,GAAa,CACjB,IAAIC,GAAkBC,EAAiBC,EAAgBC,CAGvDF,GAAWnN,KAAKstB,eAAe3mB,kBAC/BuG,GAAYlN,KAAKstB,eAAe3mB,kBAChCyG,GAAUpN,KAAKstB,eAAehnB,iBAC9B+G,GAAUrN,KAAKstB,eAAevgB,SAAWK,CAEzC,IAAID,GAAY,EAAG,CAClB,GAAIS,GAAwB,GAAInL,MAEhC,OAAOzC,KAAKstB,eAAevgB,SAAWM,EAAS,CAC9CO,EAAQX,KAASjN,KAAKstB,eAAernB,yBAEhC,IAAIkH,GAAY,GAAI,CAC1B,GAAIY,GAAiB,CACrB,IAAIC,GAAoB,CACxB,IAAIC,GAAiB,CAErB,IAAIC,GAA0B,GAAIzL,MAClC,IAAI0L,GAA0B,GAAI1L,MAClC,IAAIoL,GAAoB,GAAIpL,MAE5B,OAAOzC,KAAKstB,eAAevgB,SAAWM,EAAS,CAE9Ca,EAAUH,KAAa/N,KAAK0N,WAAW1N,KAAK8sB,aAC5C5e,GAAUH,KAAa/N,KAAK0N,WAAW1N,KAAK8sB,aAC5C5e,GAAUH,KAAa/N,KAAK0N,WAAW1N,KAAK8sB,aAE5C3e,GAAUH,KAAgBhO,KAAK0N,WAAW1N,KAAK8sB,aAC/C3e,GAAUH,KAAgBhO,KAAK0N,WAAW1N,KAAK8sB,aAE/Cjf,GAAII,KAAajO,KAAK0N,WAAW1N,KAAK8sB,aACtCjf,GAAII,KAAajO,KAAK0N,WAAW1N,KAAK8sB,mBAGnC,CACJ9sB,KAAKstB,eAAevgB,SAAWM,GpC0kGrB,GoCtkGRe,GAAkC,GAAIlC,GAAiB,KAC3DkC,GAAeC,cAAcT,EAC7BQ,GAAeE,gBAAgBJ,EAC/BE,GAAeG,aAAaJ,EAC5BC,GAAeI,UAAUX,EACzBoY,GAAeK,oBAAoBD,EAAgB5T,WAAYrE,IAMjEpO,KAAKmG,gBAAgB,KACrBnG,MAAK4G,qBACL5G,MAAKi1B,gBAAwBnP,EAAUhgB,EACvC9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAO0e,CAC7B,IAAI9lB,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,0BAA4BzB,IAKlCszB,GAAAt5B,UAAA46B,gBAAR,SAAwByB,GACvB,GAAIr2B,GAAc9F,KAAK+F,aACvB/F,MAAKqrB,QAAQ8Q,GAASr2B,KAAOA,CpCokGvB,IoClkGFgiB,GAAiB9nB,KAAKstB,eAAehnB,iBpCokGnC,IoClkGF0f,GAAyBhmB,KAAK+F,apCokG5B,IoClkGFq2B,GAA6Bp8B,KAAKgH,aAAa8gB,GAAUjC,GAAK8K,WAClE,IAAI5I,EACJ,IAAIqU,EAAgB,GAAI,CACvBrU,EAAcqU,EAAgB,OACxB,CACNp8B,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,sEAC/BnL,GAAO,GAAIlC,IAEZ,GAAIgC,GAA2B,GAAIrB,GACnCqB,GAAcG,UAAYD,EAAKjiB,IAC/B,IAAImiB,GAAiCF,EAAK7B,eAAeF,EACzD,IAAGiC,GAAY,KAAK,CACnBJ,EAAcK,WAAalC,CAC3B6B,GAAcI,WAAaA,EAG5B,GAAIzf,GAAiBxI,KAAKstB,eAAehnB,iBpCokGnC,IoClkGFmC,EACJ,IAAI4zB,GAAmCr8B,KAAKgH,aAAawB,GAAUuiB,EAAa4F,WAEhF,IAAI0L,EAAsB,GAAI,CAC7B5zB,EAAsB4zB,EAAsB,OACtC,CACNr8B,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,gFAC/BzqB,GAAM,GAAIF,IAEXE,EAAIC,UAAU,IAEd,IAAIyf,GAAuBnoB,KAAKstB,eAAe3mB,kBpCmkGzC,IoCjkGFyhB,KACJ,KAAI,GAAIC,GAAa,EAAGA,EAAMF,EAAeE,IAAQ,CACpD,GAAIC,GAAgBtoB,KAAKstB,eAAelS,WACxCgN,GAAUvlB,KAAKylB,GAGhBT,EAAcO,UAAUA,CACxB,IAAIG,GAA6BvoB,KAAKmG,iBAAiBC,EAAEgzB,EAAUzoB,OAAQ/F,EAAEwuB,EAAUzoB,OAAQ9F,EAAEuuB,EAAUruB,MAAMD,EAAEsuB,EAAUruB,MAAMmF,EAAEkpB,EAAUruB,MAAMoF,EAAEipB,EAAUruB,MAAOsF,EAAE+oB,EAAUzoB,OAAQL,EAAE8oB,EAAUzoB,OAAQJ,EAAE6oB,EAAUzoB,OAAQH,GAAG4oB,EAAUzoB,QAEjPkX,GAAcW,KAAOD,EAAaxoB,IAAI,EAAE,GACxC8nB,GAAcY,cAAgBF,EAAaxoB,IAAI,EAAE,EAEjD8nB,GAAca,QAAUH,EAAaxoB,IAAI,EAAE,KAG3C8nB,GAAcc,OAASJ,EAAaxoB,IAAI,EAAE,EAC1C8nB,GAAce,WAAaL,EAAaxoB,IAAI,EAAE,EAC9C8nB,GAAcgB,YAAcN,EAAaxoB,IAAI,EAAE,EAE/C8nB,GAAcnO,SAAWjR,CACzBzI,MAAK4G,qBAGL5G,MAAKi1B,gBAAyBpN,EAAe/hB,EAC7C9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOygB,CAE7B,IAAI7nB,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,gCAAkCzB,EAAO,UAAUiiB,EAAKjiB,OAK9DszB,GAAAt5B,UAAA06B,eAAR,SAAuB2B,EAAgBvhB,GACtC,GAAI9U,GAAc9F,KAAK+F,aACvB/F,MAAKqrB,QAAQ8Q,GAASr2B,KAAOA,CpC6jGvB,IoC3jGI2gB,GAAe7L,EAAQ8L,iBACjC,IAAIC,GAAuB3mB,KAAKstB,eAAe3mB,kBAC/C,IAAGggB,GAAiB,EAAG,CACtBF,EAAaxjB,KAAO,aAEhB,IAAG0jB,GAAiB,EAAG,CAC3BF,EAAaxjB,KAAO,cAEhB,IAAG0jB,GAAiB,EAAG,CAC3BF,EAAaxjB,KAAO,YAEhB,IAAG0jB,GAAiB,EAAG,CAC3BF,EAAaxjB,KAAM,OACnBwjB,GAAaG,kBAAkB,KAGhCH,EAAaI,MAAM7mB,KAAKstB,eAAelS,WACvCqL,GAAaK,OAAO9mB,KAAKstB,eAAelS,WACxC,IAAI2L,GAAwB/mB,KAAKstB,eAAehnB,iBAChD,IAAI0gB,GAAuB,EpC4jGrB,IoC1jGFC,EACJ,KAAI,GAAIC,GAAe,EAAGA,EAAQH,EAAgBG,IAAU,CAE3D,GAAIC,GAAsBnnB,KAAKstB,eAAehnB,iBAE9C,KAAI,GAAI8gB,GAAmB,EAAGA,EAAYD,EAAcC,IAAe,CAEtE,GAAIC,GAAmBrnB,KAAKstB,eAAehnB,iBpCyjG/B,IoCvjGRg2B,GAA6Bt8B,KAAKgH,aAAaqgB,GAAYb,GAAWmK,WAC1E,IAAI2L,EAAgB,GAAI,CACvBrV,EAA2BqV,EAAgB,OACrC,CACNt8B,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,6EAC/BjM,GAAc,GAAIT,IpC2jGP,GoCxjGRe,GAAavnB,KAAKstB,eAAehnB,iBAErC,IAAIihB,EAAa,EAAG,CACnB,GAAIC,GAAkBxnB,KAAKstB,eAAexlB,aAAayf,EAEvDP,IAAeQ,IAMlBf,EAAaa,WAAWL,CACxBR,GAAagB,KAAKT,CpCyjGZ,IoCrjGF9gB,GAAsBlG,KAAKmG,iBAAiBC,EAAEgzB,EAAUhpB,KAAMvF,EAAEuuB,EAAUhpB,KAAMtF,EAAEsuB,EAAUhpB,KAAMF,EAAEkpB,EAAUhpB,KAAMC,EAAE+oB,EAAUruB,MAAOuF,EAAE8oB,EAAUruB,MAAOwF,EAAE6oB,EAAUruB,OAC1K0b,GAAaiB,WAAaxhB,EAAMnG,IAAI,EAAG,MACvC0mB,GAAakB,OAAUzhB,EAAMnG,IAAI,EAAG,MAMpC0mB,GAAa7d,MAAQ5I,KAAK4G,qBAG1B5G,MAAKi1B,gBAAyBxO,EAAc3gB,EAC5C9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOqf,CAE7B,IAAIzmB,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,+BAAiCzB,EAAO,aAAekhB,IAM7DoS,GAAAt5B,UAAAu6B,2BAAR,SAAmC8B,GAElC,GAAIr2B,GAAc9F,KAAK+F,aAEvB,IAAIyC,GAAiBxI,KAAKstB,eAAehnB,iBACzC,IAAImC,EACJ,IAAI4zB,GAAmCr8B,KAAKgH,aAAawB,GAAUuiB,EAAa4F,WAEhF,IAAI0L,EAAsB,GAAI,CAC7B5zB,EAAsB4zB,EAAsB,OACtC,CACNr8B,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,6EAC/BzqB,GAAM,GAAIF,IAEXE,EAAIC,UAAU,IACd,IAAIC,GAAsB,GAAIL,GAAUG,EAGxCzI,MAAKmG,gBAAgB,KAErBwC,GAAUC,MAAQ5I,KAAK4G,qBAEvB5G,MAAKi1B,gBAAyBtsB,EAAW7C,EACzC9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOuB,CAE7B,IAAI3I,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,uCAAyCzB,EAAO,qBAAuB2C,EAAI3C,OAIjFszB,GAAAt5B,UAAAs6B,sBAAR,SAA8B+B,GAC7B,GAAIljB,EACJ,IAAIC,EAEJ,IAAIpT,GAAc9F,KAAK+F,aAEvB,IAAIyC,GAAiBxI,KAAKstB,eAAehnB,iBACzC,IAAI8F,EACJ,IAAImwB,GAAmCv8B,KAAKgH,aAAawB,GAAUyD,EAAS0kB,WAE5E,IAAI4L,EAAsB,GAAI,CAC7BnwB,EAAkBmwB,EAAsB,OAClC,CACNv8B,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,wEAC/B9mB,GAAO,GAAIH,GAGZjM,KAAKqrB,QAAQ8Q,GAAShjB,MAAQ3Q,CAC9B,IAAI4Q,GAAgC,GAAI3W,MACxCwW,GAAgBjZ,KAAKstB,eAAernB,mBAEpC,IAAIoT,GAA8B,GAAI5W,MACtCyW,GAAmB,CAEnB,IAAImjB,EAEJ,OAAOnjB,EAAmBD,EAAe,CACxC,GAAIK,EACJA,GAAStZ,KAAKstB,eAAehnB,iBAC7B+1B,GAAwBr8B,KAAKgH,aAAasS,GAASyR,EAAa4F,WAChE,KAAM0L,EAAsB,IAAQ/iB,EAAS,EAAI,CAChDtZ,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,8BAAgCha,EAAmB,UAAYI,EAAS,oBAGxG,GAAIC,GAAgC8iB,EAAsB,EAE1DjjB,GAAUvW,KAAK0W,EACfF,GAAcxW,KAAK0W,EAAEzT,KAErBoT,KAGD,GAAIM,GAAY,GAAIR,GAAK5M,EAAM,KAG/B,IAAIgN,EAAU7Z,QAAU,GAAKia,EAAKC,UAAUla,QAAU,EAAG,CACxDia,EAAKE,SAAWN,EAAU,OACpB,IAAIA,EAAU7Z,OAAS,EAAG,CAChC,GAAIP,EAIJ,KAAKA,EAAI,EAAGA,EAAIwa,EAAKC,UAAUla,OAAQP,IAAK,CAC3Cwa,EAAKC,UAAUza,GAAG0a,SAAWN,EAAUO,KAAKC,IAAIR,EAAU7Z,OAAS,EAAGP,KAGxEgB,KAAKmG,gBAAgB,KACrBqT,GAAK5Q,MAAQ5I,KAAK4G,qBAElB5G,MAAKi1B,gBAAyBzb,EAAM1T,EACpC9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOoS,CAE7B,IAAIxZ,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,kCAAoCzB,EAAO,qBAAuBsG,EAAKtG,KAAO,kBAAoB0T,EAAKC,UAAUla,OAAS,kBAAoB8Z,EAAc5G,aAGlK2mB,GAAAt5B,UAAAw6B,gBAAR,SAAwB6B,EAAgBvhB,GAIvC5a,KAAKqrB,QAAQ8Q,GAASr2B,KAAO9F,KAAK+F,aAElC,IAAI9C,GAAcjD,KAAKstB,eAAe3mB,kBACtC,IAAIiB,EAKJ,IAAI3E,GAAQ,EAAG,CACd2E,EAAW5H,KAAKstB,eAAehnB,iBAC/B,IAAIuB,EACJA,GAAM7H,KAAKstB,eAAexlB,aAAaF,EAGvCN,SAAQC,IAAI,eAAeM,OAErB,CAEND,EAAW5H,KAAKstB,eAAehnB,iBAE/B,IAAIc,EACJA,GAAO,GAAIO,EACX3H,MAAKstB,eAAetlB,UAAUZ,EAAM,EAAGQ,GASxC5H,KAAKmG,gBAAgB,KACrBnG,MAAKqrB,QAAQ8Q,GAASK,OAASx8B,KAAK4G,qBACpC5G,MAAK63B,gCAGL,IAAI73B,KAAKmrB,OAAQ,CAChB,GAAIniB,IAAoC,WAAY,QACpD1B,SAAQC,IAAI,mBAAqByB,EAAmB/F,GAAQ,gBAKtDm2B,GAAAt5B,UAAAy6B,cAAR,SAAsB4B,EAAgBvhB,GAErC,GAAI5b,EACJ,IAAI6b,EACJ,IAAIC,EACJ,IAAI2hB,GAAoB7hB,EAAQI,iBAChC,IAAIlV,GAAO9F,KAAK+F,aAChB,IAAIkV,KAAYjb,KAAKstB,eAAe3mB,kBACpC,IAAIuU,GAAUlb,KAAKstB,eAAe3mB,kBAClC,IAAIwU,GAAanb,KAAKstB,eAAelS,WpC+gG/B,IoC5gGFC,GAAe,IAAOF,CAC1B,IAAIG,GAAqB,CACzB,IAAIC,GAAiC,CpCqhG/B,IoCxgGFC,GAA8Bxb,KAAKstB,eAAernB,mBACtD,KAAKjH,EAAI,EAAGA,EAAIwc,EAAsBxc,IAAK,CAC1Cyc,EAAazb,KAAKstB,eAAehnB,iBACjC,IAAIoV,GAAyC1b,KAAKqrB,QAAQ5P,GAAYrU,IACtE,IAAIsU,GAAa,KAAM,CACtB+gB,EAAkB9gB,uBAAuBD,OAEtC,CAGHpU,QAAQC,IAAI,+CAGdgU,GAA2BC,CAC3B,IAAII,GAAuC5b,KAAKstB,eAAernB,mBAC/DuV,IAAsBI,CACtB,KAAK5c,EAAI,EAAGA,EAAI4c,EAAsC5c,IAAK,CAC1Dyc,EAAazb,KAAKstB,eAAehnB,iBACjCgV,GAAgBtb,KAAKstB,eAAernB,mBACpCsV,IAA2BD,CAC3B,IAAII,GAAyC1b,KAAKqrB,QAAQ5P,GAAYrU,IACtE,IAAIsU,GAAa,KAAM,CACtB,IAAKb,EAAI,EAAGA,EAAIS,EAAeT,IAAK,CACnC4hB,EAAkB9gB,uBAAuBD,QAGvC,CACH,IAAKb,EAAI,EAAGA,EAAIS,EAAeT,IAAK,CAGnCvT,QAAQC,IAAI,gDpC+gGT,GoCvgGFsU,GAAuB7b,KAAKstB,eAAernB,mBAC/C,KAAKjH,EAAI,EAAGA,EAAI6c,EAAsB7c,IAAK,CAC1Cyc,EAAazb,KAAKstB,eAAehnB,iBACjC,IAAIoV,GAAyC1b,KAAKqrB,QAAQ5P,GAAYrU,IACtE,IAAIsU,GAAa,KAAM,CAEtBpU,QAAQC,IAAI,kDAGT,GpC0gGC,GoCpgGFuU,GAAY9b,KAAKstB,eAAernB,mBpCwgG9B,IoCjgGF8V,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIxQ,EACJ,IAAIyQ,EACJ,IAAIC,EACJ,IAAIV,EACJ,IAAIW,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJT,GAAc,CACd,KAAK/c,EAAI,EAAGA,EAAI8c,EAAW9c,IAAK,CAC/Bsd,EAAQ,GAAIpC,GAEZ8B,GAAgBhc,KAAKstB,eAAehnB,kBAAkB+U,CACtDiB,GAAMG,aAAaV,EAAeC,EAClCD,IAAiBC,CAGjBC,GAAYjc,KAAKstB,eAAe3mB,kBAChC,KAAKkU,EAAI,EAAGA,EAAIoB,EAAWpB,IAAK,CAC/B0B,EAAQvc,KAAK+F,cAId0F,EAAczL,KAAKstB,eAAernB,mBAGlCuW,GAAkB,KAClB,KAAK3B,EAAI,EAAGA,EAAIpP,EAAaoP,IAAK,CACjCwB,EAAcrc,KAAKstB,eAAe3mB,kBAOlC,QAAQ0V,GAEP,IAAK,GACJD,EAAgBpc,KAAKstB,eAAernB,mBpCy/FlB,IoCv/FdyW,GAA4B,GAAIja,MACpC,KAAKqY,EAAI,EAAGA,EAAIsB,EAAetB,IAAK,CAEnCqB,EAAenc,KAAKstB,eAAevjB,WACnC2S,GAAc7Z,KAAKsZ,GAGpBG,EAAMK,oBAAoB,GAAIrC,IAA6BoC,GAC3D,MAED,KAAK,GACL,IAAK,GACJR,EAAWlc,KAAKstB,eAAernB,mBAE/B,IAAIoW,GAAe,EAAG,CACrBG,EAAgB,IAChBL,GAAenc,KAAKstB,eAAevjB,WpCu/Fd,IoCr/FI6S,GAAW6f,EAAkB5f,kBAAkBX,EACxE,IAAIU,GAAYpc,UAAW,CAC1B8b,EAAMK,oBAAoB,GAAIxC,IAAuB+B,EAAUC,GAEvC,IAAGS,EAASE,QAAQpC,GAAY,CAC5B4B,EAAMK,oBAAoB,GAAIpC,IAAuB2B,EAAUU,EAAS9W,YAGjG,CACHwB,QAAQC,IAAI,sCAAuC2U,IAGrD,GAAIa,GAAa/c,KAAKstB,eAAernB,mBAWrC,IAAIi0B,GAASld,KAAKD,EAAYmd,GAASjd,OAAQ,CAC9C,GAAIC,GAAa,GAAIjD,EACrB,IAAIigB,GAASld,KAAKD,EAAYmd,GAAS/c,OAAQ,MAE1C,CACJD,EAAWE,QAAQ,GAAKpd,KAAKstB,eAAelS,WAC5C8B,GAAWE,QAAQ,GAAKpd,KAAKstB,eAAelS,WAC5C8B,GAAWE,QAAQ,GAAKpd,KAAKstB,eAAelS,WAC5C8B,GAAWE,QAAQ,GAAKpd,KAAKstB,eAAelS,WAC5C8B,GAAWnQ,SAAW,GAAIvD,GAASxJ,KAAKstB,eAAelS,YAAapb,KAAKstB,eAAelS,YAAa,GAEtGkB,EAAMK,oBAAoB,GAAInC,IAAsB0B,EAAU,aAAcgB,IAG7E,GAAIgd,GAASld,KAAKD,EAAYmd,GAAS7c,OAAQ,CAC9C,GAAIC,GAAqB,GAAItD,EAC7B,IAAIkgB,GAASld,KAAKD,EAAYmd,GAAS3c,OAAQ,MAE1C,CACJD,EAAmBE,cAAgBxd,KAAKstB,eAAelS,WACvDkC,GAAmBG,gBAAkBzd,KAAKstB,eAAelS,WACzDkC,GAAmBI,eAAiB1d,KAAKstB,eAAelS,WACxDkC,GAAmBK,gBAAkB3d,KAAKstB,eAAelS,WACzDkC,GAAmBM,UAAY5d,KAAKstB,eAAevjB,WACnDuT,GAAmBO,YAAc7d,KAAKstB,eAAevjB,WACrDuT,GAAmBQ,WAAa9d,KAAKstB,eAAevjB,WACpDuT,GAAmBS,YAAc/d,KAAKstB,eAAevjB,aAGvD,GAAImwB,GAASld,KAAKD,EAAYmd,GAASlc,OAAQ,CAC9C,GAAIC,GAAgBje,KAAKstB,eAAe3mB,kBACxC,IAAIuX,GAAmBle,KAAKurB,aAAatN,GAE1C,GAAIic,GAASld,KAAKD,EAAYmd,GAAS/b,OAAQ,CAC9C7B,EAAMK,oBAAoB,GAAInC,IAAsB0B,EAAU,UAAWlc,KAAKstB,eAAelP,aAE9F,GAAI8b,GAASld,KAAKD,EAAYmd,GAAS7b,OAAQ,CAC9C,GAAIC,GAAete,KAAK+F,aACxB,IAAIuY,EAAa/e,OAAQ,CACxB+c,EAAMK,oBAAoB,GAAIpC,IAAuB2B,EAAUoC,KAGjE,GAAI4b,GAASld,KAAKD,EAAYmd,GAAS3b,OAAQ,CAC9C,GAAIC,GAAexe,KAAKstB,eAAernB,mBACvC,IAAIwY,GAAW,GAAIhc,MACnB,KAAK,GAAIic,GAAS,EAAGA,EAASF,EAAcE,IAAU,CACrDD,EAAS5b,KAAK7C,KAAKstB,eAAevjB,aAEnC,GAAI0U,EAASlf,OAAS,EAAG,CACxB,GAAKkf,EAASlf,QAAU,GAAOkf,EAAS,KAAO,EAAI,CAElDnC,EAAMK,oBAAoB,GAAInC,IAAsB0B,EAAU,WAAYA,QAG1EI,GAAMK,oBAAoB,GAAIlC,IAAeyB,EAAUuC,KAG1D,KAED,KAAK,GAIJvC,EAAWlc,KAAKstB,eAAehnB,iBAC/BmV,GAAazb,KAAKstB,eAAehnB,iBAGjC,MAED,SAGC,OAKH,GAAIkW,EAAiB,CAEpBF,EAAMK,oBAAoB,GAAIvC,IAC9BoC,GAAkB,MAGnB,GAAImC,GAAc3e,KAAKstB,eAAehnB,iBACtC,IAAIqY,EAAc,EAAG,CpC6+FR,GoC3+FRC,GAAa5e,KAAKstB,eAAexlB,aAAa6W,EAClDrC,GAAMK,oBAAoB,GAAItC,IAAqBuE,IAKpD5e,KAAKstB,eAAehnB,iBAEpBm2B,GAAkB5d,SAASvC,GAI5Btc,KAAKi1B,gBAAwBwH,EAAmB32B,EAChD9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOq1B,CAC7Bz8B,MAAKmG,gBAAgB,KACrBnG,MAAK4G,qBACL,IAAI5G,KAAKmrB,OACR7jB,QAAQC,IAAI,6BAA+BzB,EAAO,eAAiBmV,EAAU,eAAiBC,EAAU,iBAAmBY,GAGrHsd,GAAAt5B,UAAA07B,4BAAR,SAAoCW,GAGnC,GAAI/vB,GAAgB,GAAIH,EpCw+FlB,IoCr+FFnG,GAAc9F,KAAK+F,aACvB,IAAIsG,GAAkBrM,KAAKstB,eAAernB,mBpCu+FpC,IoCp+FFC,GAAsBlG,KAAKmG,iBAAiBC,EAAEpG,KAAKotB,WAAYxiB,EAAE5K,KAAKotB,YAC1E,IAAI7gB,GAAmBrG,EAAMnG,IAAI,EAAG,EACpC,IAAIyM,GAAmBtG,EAAMnG,IAAI,EAAG,EpCs+F9B,IoCn+FF0M,GAAqB,CACzB,OAAOA,EAAcJ,EAAU,CAC9B,GAAIK,GAAsB,KAC1B,IAAI1N,EACJ,IAAI2N,GAAeC,CACnB,IAAIC,EACJ,IAAIC,EAEJH,GAAS3M,KAAKstB,eAAehnB,iBAC7BsG,GAAS5M,KAAKstB,eAAevgB,SAAWJ,CAExC,IAAIK,GAAyBhN,KAAKmG,iBAAiBC,EAAEpG,KAAKotB,WAAYxiB,EAAE5K,KAAKotB,YAE7E,OAAOptB,KAAKstB,eAAevgB,SAAWH,EAAQ,CAC7C,GAAIK,GAAa,CACjB,IAAIC,GAAkBC,EAAiBC,EAAgBC,CAGvDF,GAAWnN,KAAKstB,eAAe3mB,kBAC/BuG,GAAYlN,KAAKstB,eAAe3mB,kBAChCyG,GAAUpN,KAAKstB,eAAehnB,iBAC9B+G,GAAUrN,KAAKstB,eAAevgB,SAAWK,CAEzC,IAAIE,GAAUC,EAAUC,CAExB,IAAIL,GAAY,EAAG,CAClB,GAAIM,GAAsB,GAAIhL,MAE9B,OAAOzC,KAAKstB,eAAevgB,SAAWM,EAAS,CAE9CC,EAAItN,KAAK0N,WAAW1N,KAAK8sB,aACzBvf,GAAIvN,KAAK0N,WAAW1N,KAAK8sB,aACzBtf,GAAIxN,KAAK0N,WAAW1N,KAAK8sB,aAEzBrf,GAAMR,KAASK,CACfG,GAAMR,KAASM,CACfE,GAAMR,KAASO,OAEV,IAAIL,GAAY,EAAG,CACzB,GAAIS,GAAwB,GAAInL,MAEhC,OAAOzC,KAAKstB,eAAevgB,SAAWM,EAAS,CAC9CO,EAAQX,KAASjN,KAAKstB,eAAernB,yBAGhC,IAAIkH,GAAY,EAAG,CACzB,GAAIU,GAAoB,GAAIpL,MAC5B,OAAOzC,KAAKstB,eAAevgB,SAAWM,EAAS,CAC9CQ,EAAIZ,KAASjN,KAAK0N,WAAW1N,KAAK8sB,mBAG7B,IAAI3f,GAAY,EAAG,CAEzB,GAAIW,GAAwB,GAAIrL,MAEhC,OAAOzC,KAAKstB,eAAevgB,SAAWM,EAAS,CAC9CS,EAAQb,KAASjN,KAAK0N,WAAW1N,KAAK8sB,mBAGjC,IAAI3f,GAAY,EAAG,CACzBN,EAAYpK,OAEZ,OAAOzC,KAAKstB,eAAevgB,SAAWM,EAAS,CAC9CR,EAAUI,KAASjN,KAAKstB,eAAernB,oBAAoB,OAGtD,IAAIkH,GAAY,EAAG,CAEzBL,EAAU,GAAIrK,MAEd,OAAOzC,KAAKstB,eAAevgB,SAAWM,EAAS,CAC9CP,EAAQG,KAASjN,KAAK0N,WAAW1N,KAAK8sB,mBAEjC,IAAI3f,GAAY,EAAG,CACzBnN,KAAKstB,eAAevgB,SAAWM,MACzB,IAAIF,GAAY,EAAG,CACzBnN,KAAKstB,eAAevgB,SAAWM,MACzB,IAAIF,GAAY,GAAI,CAC1BT,EAAc,IACd,IAAIqB,GAAiB,CACrB,IAAIC,GAAoB,CACxB,IAAIC,GAAiB,CAErB,IAAIC,GAA0B,GAAIzL,MAClC,IAAI0L,GAA0B,GAAI1L,MAClC,IAAIoL,GAAoB,GAAIpL,MAE5B,OAAOzC,KAAKstB,eAAevgB,SAAWM,EAAS,CAE9Ca,EAAUH,KAAa/N,KAAK0N,WAAW1N,KAAK8sB,aAC5C5e,GAAUH,KAAa/N,KAAK0N,WAAW1N,KAAK8sB,aAC5C5e,GAAUH,KAAc/N,KAAK0N,WAAW1N,KAAK8sB,aAE7C3e,GAAUH,KAAgBhO,KAAK0N,WAAW1N,KAAK8sB,aAC/C3e,GAAUH,KAAgBhO,KAAK0N,WAAW1N,KAAK8sB,aAE/Cjf,GAAII,KAAajO,KAAK0N,WAAW1N,KAAK8sB,aACtCjf,GAAII,KAAajO,KAAK0N,WAAW1N,KAAK8sB,mBAGnC,CACJ9sB,KAAKstB,eAAevgB,SAAWM,GAKjCrN,KAAK4G,qBACL,IAAG8F,EAAc,CAChB,GAAI0B,GAAkC,GAAIlC,GAAiB,KAC3DkC,GAAeC,cAAcT,EAC7BQ,GAAeE,gBAAgBJ,EAC/BE,GAAeG,aAAaJ,EAC5BC,GAAeI,UAAUX,EACzBzB,GAAKqC,eAAeL,EACpB,IAAIpO,KAAKmrB,OACR7jB,QAAQC,IAAI,iCAET,CACJ,GAAImH,GAAoB,GAAIvC,GAAoB,KAChD,IAAIW,EACH4B,EAAkBC,gBAAkB7B,EAAQvN,QAAUkO,EAAMlO,OAAS,EACtE,IAAIuO,EACHY,EAAkBE,kBAAoB,KACvC,IAAIf,EACHa,EAAkBG,cAAgB,KAEnC,IAAI,KAAM,CACTH,EAAkBI,mBAAqB,KAExCJ,EAAkBL,cAAcT,EAChCc,GAAkBJ,gBAAgBb,EAClCiB,GAAkBK,oBAAoBjB,EACtCY,GAAkBF,UAAUX,EAC5Ba,GAAkBM,qBAAqB,KACvCN,GAAkBO,mBAAmBnC,EACrC4B,GAAkBQ,mBAAmBrC,EAErC,IAAIsC,GAAgBnC,EAASjN,IAAI,EAAG,EACpC,IAAIqP,GAAgBpC,EAASjN,IAAI,EAAG,EACpC,IAAIsP,GAAoB,KAExB,IAAK9C,GAAa4C,GAAY3C,GAAa4C,EAAS,CACnDC,EAAY,IACZF,GAAS5C,EAAY4C,CACrBC,GAAS5C,EAAY4C,EAGtB,GAAIC,EACHX,EAAkBY,QAAQH,EAAQC,EACnChD,GAAKqC,eAAeC,EACpB,IAAI1O,KAAKmrB,OACR7jB,QAAQC,IAAI,gCAOdkF,IAED,GAAKF,GAAa,GAAOC,GAAa,EACrCJ,EAAKkD,QAAQ/C,EAAWC,EACzBxM,MAAK4G,qBACL5G,MAAKi1B,gBAAyB7oB,EAAMtG,EACpC9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOgF,CAE7B,IAAIpM,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,qCAAuCzB,IAO7CszB,GAAAt5B,UAAA66B,eAAR,SAAuBwB,GAEtB,GAAIr2B,EACJ,IAAIqa,EACJ,IAAIC,EACJ,IAAI3T,EACJ,IAAIvG,EACJ,IAAIma,EAGJva,GAAO9F,KAAK+F,aACZqa,GAAWpgB,KAAKstB,eAAe3mB,kBAC/BT,GAAQlG,KAAKmG,iBAAiB8D,IAAIjK,KAAKotB,WAAYjjB,IAAInK,KAAKotB,WAAYhjB,IAAIpK,KAAKotB,WAAY9M,IAAItgB,KAAKotB,WAAY7M,IAAIvgB,KAAKotB,WAAY7W,IAAI6iB,EAAUzoB,OAAQ6F,IAAI4iB,EAAUzoB,OAAQ6P,IAAI4Y,EAAUzoB,OAAQkG,IAAIuiB,EAAUhpB,KAAM0G,IAAIsiB,EAAUhpB,KAAMqQ,IAAI2Y,EAAUhpB,KAAMsQ,IAAI0Y,EAAUhpB,MAEnR,IAAIuQ,IAAgC,sBAAuB,uBAAwB,sBAAuB,wBAAyB,0BAA2B,uBAAwB,0BAA2B,wBAEjN,QAAQP,GAGP,IAAK,GACJD,EAAS,GAAIH,GAAqB9Z,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,MAAOmG,EAAMnG,IAAI,IAAK,OACvJ,MAED,KAAK,GACJogB,EAAS,GAAIL,GAAoB5Z,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,MACxK,MAED,KAAK,GACJogB,EAAS,GAAIF,GAAsB/Z,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,MAC9G,MAED,KAAK,GACJogB,EAAS,GAAIJ,GAAwB7Z,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,GAAI,KAAM,KAAM,KACrJ,KAAKmG,EAAMnG,IAAI,IAAK,MACOogB,EAAQS,UAAY,KAC/C,KAAK1a,EAAMnG,IAAI,IAAK,MACOogB,EAAQU,aAAe,KAClD,KAAK3a,EAAMnG,IAAI,IAAK,MACOogB,EAAQW,IAAM,KAEzC,MAED,KAAK,GACJX,EAAS,GAAIN,GAAoB3Z,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,MAAOmG,EAAMnG,IAAI,IAAK,MACtJ,MAED,KAAK,GACJogB,EAAS,GAAIP,GAAuB1Z,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,MACpI,MAED,KAAK,GACJogB,EAAS,GAAID,GAAqBha,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,IAAKmG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,MAChI,MAED,SACCogB,EAAS,GAAIR,EACbrY,SAAQC,IAAI,iCACZ,OAGF,GAAKrB,EAAMnG,IAAI,IAAK,IAAM,GAAOmG,EAAMnG,IAAI,IAAK,IAAM,EAAI,EAK1DC,KAAK4G,qBACLuZ,GAAOra,KAAOA,CACd9F,MAAKi1B,gBAAgB9U,EAAQra,EAC7B9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAO+Y,CAE7B,IAAIngB,KAAKmrB,OAAQ,CAChB,GAAK/K,EAAW,GAAOA,EAAW,EAAI,CACrCA,EAAW,EAEZ9Y,QAAQC,IAAI,8BAAgCzB,EAAO,YAAc6a,EAAeP,KAK1EgZ,GAAAt5B,UAAA27B,eAAR,SAAuBU,GAEtB,GAAIr2B,EACJ,IAAI4D,EACJ,IAAIC,EACJ,IAAIkC,EACJ,IAAIpB,EAEJf,GAAS1J,KAAKstB,eAAehnB,iBAC7BqD,GAAM3J,KAAK4J,eACX9D,GAAO9F,KAAK+F,aAEZ,IAAI8D,GAAoB,iBACxBgC,GAAM,GAAID,EACVC,GAAItB,UAAUC,SAAWb,CAEzB,IAAI9C,GAA2B7G,KAAKgH,aAAa0C,GAASkC,EAAuB+kB,UAAWgI,EAAUhI,UAAW3X,EAAK2X,WAEtH,IAAI9pB,EAAc,GAAI,CACrB,GAAI61B,GAA8C71B,EAAc,GAAI6D,SAASmB,EAC7EhC,GAAuChD,EAAc,GAAIf,SACnD,IAAI4D,EAAS,EAAG,CACtB1J,KAAKqrB,QAAS8Q,GAAUjJ,SAAS,0DAC3B,CAEoBlzB,KAAK82B,UAAWpsB,SAASmB,GAIpD,GAAK7L,KAAKs5B,SAAS,IAAM,GAAOt5B,KAAKs5B,SAAS,IAAM,EAAI,CACvD,GAAIpzB,GAAsBlG,KAAKmG,iBAAiBC,EAAEpG,KAAKgtB,cAAepiB,EAAE5K,KAAKgtB,cAAeniB,EAAE7K,KAAKgtB,cAAeliB,EAAEsuB,EAAUruB,OAC9Hc,GAAIb,MAAQ,GAAIxB,GAAStD,EAAMnG,IAAI,EAAG,GAAImG,EAAMnG,IAAI,EAAG,GAAImG,EAAMnG,IAAI,EAAG,QAGpE,CACJC,KAAKmG,gBAAgB,MAItB0F,EAAIjD,MAAQ5I,KAAK4G,qBAEjB5G,MAAKi1B,gBAAyBppB,EAAK/F,EACnC9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOyE,CAE7B,IAAI7L,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,+BAAiCzB,EAAO,qBAAuB+D,IAKrEuvB,GAAAt5B,UAAA47B,kBAAR,SAA0BS,GAEzB,GAAIljB,EACJ,IAAIC,EACJ,IAAIzO,EACJ,IAAIf,GAAgB1J,KAAKstB,eAAehnB,iBACxC,IAAIqD,GAAe3J,KAAK4J,eACxB,IAAI9D,GAAc9F,KAAK+F,aACvB,IAAI8D,GAAoB,iBACxB,IAAIrB,GAAiBxI,KAAKstB,eAAehnB,iBACzC,IAAI8F,EACJ,IAAImwB,GAAmCv8B,KAAKgH,aAAawB,GAAUyD,EAAS0kB,WAE5E,IAAI4L,EAAsB,GAAI,CAC7BnwB,EAAkBmwB,EAAsB,OAClC,CACNv8B,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,wEAC/B9mB,GAAO,GAAIH,GAGZjM,KAAKqrB,QAAQ8Q,GAAShjB,MAAQ3Q,CAC9B,IAAI4Q,GAAgC,GAAI3W,MACxCwW,GAAgBjZ,KAAKstB,eAAernB,mBAEpC,IAAIoT,GAA8B,GAAI5W,MACtCyW,GAAmB,CAEnB,IAAImjB,EAEJ,OAAOnjB,EAAmBD,EAAe,CACxC,GAAIK,EACJA,GAAStZ,KAAKstB,eAAehnB,iBAC7B+1B,GAAwBr8B,KAAKgH,aAAasS,GAASyR,EAAa4F,WAChE,KAAM0L,EAAsB,IAAQ/iB,EAAS,EAAI,CAChDtZ,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,8BAAgCha,EAAmB,UAAYI,EAAS,oBAGxG,GAAIC,GAAgC8iB,EAAsB,EAE1DjjB,GAAUvW,KAAK0W,EACfF,GAAcxW,KAAK0W,EAAEzT,KAErBoT,KAGD,GAAIM,GAAY,GAAIR,GAAK5M,EAAM,KAC/BoN,GAAKjP,UAAUC,SAAWb,CAE1B,IAAIgzB,GAAiC38B,KAAKgH,aAAa0C,GAASkC,EAAuB+kB,UAAWgI,EAAUhI,UAAW3X,EAAK2X,WAE5H,IAAIgM,EAAoB,GAAI,CAC3B,GAAIC,GAAuDD,EAAoB,EAC/EC,GAAKlyB,SAAS8O,EACd3P,GAAa+yB,EAAK92B,SACZ,IAAI4D,EAAS,EAAG,CACtB1J,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,6CACzB,CAEoBlzB,KAAK82B,UAAWpsB,SAAS8O,GAGpD,GAAIJ,EAAU7Z,QAAU,GAAKia,EAAKC,UAAUla,QAAU,EAAG,CACxDia,EAAKE,SAAWN,EAAU,OACpB,IAAIA,EAAU7Z,OAAS,EAAG,CAChC,GAAIP,EAIJ,KAAKA,EAAI,EAAGA,EAAIwa,EAAKC,UAAUla,OAAQP,IAAK,CAC3Cwa,EAAKC,UAAUza,GAAG0a,SAAWN,EAAUO,KAAKC,IAAIR,EAAU7Z,OAAS,EAAGP,KAGxE,GAAKgB,KAAKs5B,SAAS,IAAM,GAAOt5B,KAAKs5B,SAAS,IAAM,EAAI,CACvD,GAAIpzB,GAAsBlG,KAAKmG,iBAAiBC,EAAEpG,KAAKgtB,cAAepiB,EAAE5K,KAAKgtB,cAAeniB,EAAE7K,KAAKgtB,cAAeliB,EAAEsuB,EAAUruB,MAAOmF,EAAEkpB,EAAUhpB,MACjJoJ,GAAKxO,MAAQ,GAAIxB,GAAiBtD,EAAMnG,IAAI,EAAG,GAAYmG,EAAMnG,IAAI,EAAG,GAAamG,EAAMnG,IAAI,EAAG,GAClGyZ,GAAK5H,aAAe1L,EAAMnG,IAAI,EAAG,UAC3B,CACNC,KAAKmG,gBAAgB,MAGtBqT,EAAK5Q,MAAQ5I,KAAK4G,qBAElB5G,MAAKi1B,gBAAyBzb,EAAM1T,EACpC9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOoS,CAE7B,IAAIxZ,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,0BAA4BzB,EAAO,qBAAuB+D,EAAa,qBAAuBuC,EAAKtG,KAAO,kBAAoB0T,EAAKC,UAAUla,OAAS,kBAAoB8Z,EAAc5G,aAM9L2mB,GAAAt5B,UAAA86B,oBAAR,SAA4BuB,GAE3B,GAAIr2B,GAAc9F,KAAK+F,aACvB,IAAI0f,GAAqBzlB,KAAKstB,eAAehnB,iBAE7C,IAAIu2B,GAAkC78B,KAAKgH,aAAaye,GAAcqF,EAAY6F,WAAY,cAC9F,KAAMkM,EAAqB,IAAQpX,GAAe,EACjDzlB,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,wCAA0CzN,EAAc,qBACxF,IAAI1c,GAAe,GAAIyc,GAA0BqX,EAAqB,GAEtE78B,MAAKmG,gBAAgB,KACrB4C,GAAMH,MAAQ5I,KAAK4G,qBACnB5G,MAAKi1B,gBAAgBlsB,EAAOjD,EAC5B9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAO2B;;AAC7B,GAAI/I,KAAKmrB,OACR7jB,QAAQC,IAAI,4BAA8BzB,EAAO,0BAAgD+2B,EAAqB,GAAI/2B,MAKpHszB,GAAAt5B,UAAA+6B,WAAR,SAAmBsB,GAElB,GAAIrsB,EACJ,IAAIC,EAEJ,IAAIrG,GAAgB1J,KAAKstB,eAAehnB,iBACxC,IAAIqD,GAAe3J,KAAK4J,eACxB,IAAI9D,GAAc9F,KAAK+F,aACvB,IAAIiK,GAAmBhQ,KAAKstB,eAAe3mB,kBAC3C,IAAIT,GAAsBlG,KAAKmG,iBAAiBC,EAAEpG,KAAKktB,aAActiB,EAAE5K,KAAKktB,aAAcriB,EAAEuuB,EAAUnpB,MAAOnF,EAAE9K,KAAKktB,aAAchd,EAAElQ,KAAKktB,aAAc/c,EAAEipB,EAAUhpB,KAAMC,EAAE+oB,EAAUnpB,MAAOK,EAAEtQ,KAAKktB,aAAc3c,EAAE6oB,EAAUruB,MAAOyF,GAAG4oB,EAAUruB,MAAO0F,GAAGzQ,KAAKktB,aAAcxc,GAAG0oB,EAAUzoB,OAAQC,GAAG5Q,KAAKgtB,cAAenc,GAAG7Q,KAAKgtB,cAAelc,GAAG9Q,KAAKgtB,eACzV,IAAIjc,GAA0B7K,EAAMnG,IAAI,EAAG,EAC3C,IAAI8J,GAAoB,iBACxB,IAAImH,IAA4B,wBAAyB,aAAc,mBACvE,IAAIC,IAAmC,kBAAmB,0BAA2B,8BAA+B,sBAAuB,sBAE3I,IAAIjB,GAAa,EAAG,CACnBF,EAAQ,GAAID,EAEEC,GAAOoB,OAAShL,EAAMnG,IAAI,EAAG,IAC7B+P,GAAOqB,QAAUjL,EAAMnG,IAAI,EAAG,IAE5C,IAAIgR,EAAmB,EAAG,CACzB,GAAIA,GAAoB,EAAG,CAC1BhB,EAAkB,GAAIL,IAIxBI,EAAMvF,UAAUC,SAAWb,EAI5B,GAAIqG,GAAa,EAAG,CAEnBF,EAAQ,GAAIF,GAAiB1J,EAAMnG,IAAI,GAAI,GAAImG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,GAAI,GAEhF,IAAIgR,EAAmB,EAAG,CACzB,GAAIA,GAAoB,EAAG,CAC1BhB,EAAkB,GAAIJ,KAWzBG,EAAMsB,MAAQlL,EAAMnG,IAAI,EAAG,SAC3B+P,GAAMuB,SAAWnL,EAAMnG,IAAI,EAAG,EAC9B+P,GAAMwB,QAAUpL,EAAMnG,IAAI,EAAG,EAC7B+P,GAAMyB,aAAerL,EAAMnG,IAAI,EAAG,SAClC+P,GAAM0B,QAAUtL,EAAMnG,IAAI,EAAG,EAG7B,IAAIgQ,EAAiB,CACpB,GAAIA,YAA2BL,GAAqB,CACnD,GAAIxJ,EAAMnG,IAAI,GAAI,IAAM,EAAG,CAC1BgQ,EAAgB0B,aAAezR,KAAKssB,cAAcpmB,EAAMnG,IAAI,GAAI,SAE3D,CACN,GAAImG,EAAMnG,IAAI,GAAI,IAAM,EAAG,CAC1BgQ,EAAgB0B,aAAezR,KAAKssB,cAAcpmB,EAAMnG,IAAI,GAAI,KAIlE+P,EAAM6B,aAAe5B,CACrBD,GAAM8B,aAAe,KAGtB,GAAIlI,GAAU,EAAG,CAEhB,GAAIizB,GAAiC38B,KAAKgH,aAAa0C,GAASkC,EAAuB+kB,UAAWgI,EAAUhI,UAAW3X,EAAK2X,WAE5H,IAAIgM,EAAoB,GAAI,CACDA,EAAoB,GAAIjyB,SAASoF,EAC3DjG,GAAuC8yB,EAAoB,GAAI72B,SACzD,CACN9F,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,+CAE1B,CAEoBlzB,KAAK82B,UAAWpsB,SAASoF,GAGpD9P,KAAK4G,qBAEL5G,MAAKi1B,gBAA0BnlB,EAAOhK,EAEtC9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAO0I,CAE7B,IAAI9P,KAAKmrB,OACR7jB,QAAQC,IAAI,2BAA6BzB,EAAO,cAAgBkL,EAAWhB,GAAa,oBAAsBnG,EAAa,0BAA4BoH,EAAkBF,IAKnKqoB,GAAAt5B,UAAAg7B,YAAR,SAAoBqB,GAGnB,GAAIzyB,GAAgB1J,KAAKstB,eAAehnB,iBACxC,IAAIqD,GAAe3J,KAAK4J,eACxB,IAAI9D,GAAc9F,KAAK+F,aACvB,IAAI8D,GAAoB,iBACxB,IAAIC,EAEJ9J,MAAKstB,eAAe3mB,kBACpB3G,MAAKstB,eAAevjB,WAEpB,IAAIC,GAAwBhK,KAAKstB,eAAevjB,WAChD,IAAI7D,GAAsBlG,KAAKmG,iBAAiB8D,IAAIjK,KAAKktB,aAAc/iB,IAAInK,KAAKktB,aAAc9iB,IAAIpK,KAAKktB,aAAc7iB,IAAIrK,KAAKktB,cAE9H,QAAQljB,GACP,IAAK,MACJF,EAAa,GAAIT,GAAsBnD,EAAMnG,IAAI,IAAK,IACtD,MACD,KAAK,MACJ+J,EAAa,GAAIR,GAAuBpD,EAAMnG,IAAI,IAAK,KACvD,MACD,KAAK,MACJ+J,EAAa,GAAIP,GAAgCrD,EAAMnG,IAAI,KAAM,KAAMmG,EAAMnG,IAAI,IAAK,KAAMmG,EAAMnG,IAAI,KAAM,KAAMmG,EAAMnG,IAAI,IAAK,KACjI,MACD,SACCuH,QAAQC,IAAI,sBACZ,QAGF,GAAI+C,GAAgB,GAAIlB,GAAOU,EAC/BQ,GAAOC,UAAUC,SAAWb,CAE5B,IAAIgzB,GAAiC38B,KAAKgH,aAAa0C,GAASkC,EAAuB+kB,UAAWgI,EAAUhI,UAAW3X,EAAK2X,WAE5H,IAAIgM,EAAoB,GAAI,CAE3B,GAAIC,GAAuDD,EAAoB,EAC/EC,GAAKlyB,SAASJ,EAEdT,GAAa+yB,EAAK92B,SAEZ,IAAI4D,EAAS,EAAG,CACtB1J,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,+CACzB,CAEoBlzB,KAAK82B,UAAWpsB,SAASJ,GAGpDA,EAAOxE,KAAOA,CACdI,GAAQlG,KAAKmG,iBAAiBC,EAAEpG,KAAKgtB,cAAepiB,EAAE5K,KAAKgtB,cAAeniB,EAAE7K,KAAKgtB,cAAeliB,EAAEsuB,EAAUruB,OAC5GT,GAAOU,MAAQ,GAAIxB,GAAStD,EAAMnG,IAAI,EAAG,GAAImG,EAAMnG,IAAI,EAAG,GAAImG,EAAMnG,IAAI,EAAG,GAC3EuK,GAAO1B,MAAQ5I,KAAK4G,qBAEpB5G,MAAKi1B,gBAAgB3qB,EAAQxE,EAE7B9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOkD,CAE7B,IAAItK,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,4BAA8BzB,EAAO,wBAA0BgE,EAAa,oBAAsBD,IAMxGuvB,GAAAt5B,UAAAi7B,iBAAR,SAAyBoB,GAExB,GAAIr2B,GAAc9F,KAAK+F,aACvB,IAAImM,GAAmBlS,KAAKstB,eAAernB,mBAC3C,IAAIkM,GAA+B,GAAI1P,MACvC,IAAI2P,GAAW,CACf,IAAIC,GAAiB,CAErB,IAAIC,EACJ,IAAIC,GAAiC,GAAI9P,MAEzC,KAAK2P,EAAI,EAAGA,EAAIF,EAAWE,IAAK,CAC/BC,EAAUrS,KAAKstB,eAAehnB,iBAC9BgM,GAAqBtS,KAAKgH,aAAaqL,GAAUsmB,EAAUhI,WAE3D,IAAIre,EAAmB,GAAI,CAC1BH,EAAYtP,KAAiByP,EAAmB,GAChDC,GAAiB1P,KAAmByP,EAAmB,GAAIxM,UAErD,CACN9F,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,6BAA+B9gB,EAAI,UAAYC,EAAU,4BAI1F,GAAIF,EAAY5S,QAAU,EAAG,CAC5BS,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,+DAC/BlzB,MAAK4G,qBACL,QAGD,GAAIk2B,GAA4B,GAAI7qB,GAAkBE,EACtD2qB,GAAUh3B,KAAOA,CAEjB9F,MAAK4G,qBACL5G,MAAKi1B,gBAAyB6H,EAAWh3B,EAEzC9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAO01B,CAC7B,IAAI98B,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,uCAAyCzB,EAAO,sBAAwByM,EAAiBE,aAK/F2mB,GAAAt5B,UAAA67B,cAAR,SAAsBQ,GpCu2Ff,GoCn2FFr2B,EACJ,IAAI7C,EACJ,IAAIiD,EACJ,IAAIuC,EACJ,IAAIiL,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIhN,EAEJf,GAAO9F,KAAK+F,aACZ9C,GAAOjD,KAAKstB,eAAe3mB,kBAC3BiN,GAAc5T,KAAKstB,eAAe3mB,kBAIlCT,GAAQlG,KAAKmG,iBAAkBC,EAAEgzB,EAAUplB,MAAOpJ,EAAEwuB,EAAU/yB,MAAOmK,GAAGxQ,KAAKktB,aAAczc,GAAG2oB,EAAUhpB,KAAMM,GAAG1Q,KAAKktB,aAAcjZ,GAAGmlB,EAAUhpB,MAEjJyD,GAAiB,CACjB,OAAOA,EAAiBD,EAAa,CACpC,GAAIM,EAEJA,GAAclU,KAAKstB,eAAernB,mBAClCjG,MAAKmG,gBAAgB,KACrBnG,MAAK4G,qBACLiN,IAAkB,EAEnB,GAAIM,GAAqB,EACzBT,GAAa1T,KAAK4G,qBAClB,IAAI3D,IAAS,EAAG,CACfkR,GAAe,+CAAiDrO,EAAO,MACvE,IAAIsL,EACJA,GAAQlL,EAAMnG,IAAI,EAAG,SACrB,IAAIC,KAAK+8B,aAAe,EAAG,CAC1Bt0B,EAAM,GAAImK,IAAexB,EAAOlL,EAAMnG,IAAI,GAAI,QACxC,CACN0I,EAAM,GAAImK,IAAexB,EACzB3I,GAAIwM,KAAOtC,GAAmBuC,gBAEzB,IAAIjS,IAAS,EAAG,CACtB,GAAImR,GAAkBlO,EAAMnG,IAAI,EAAG,EAEnC8G,GAAgB7G,KAAKgH,aAAaoN,GAAW0W,EAAY6F,WAEzD,KAAM9pB,EAAc,IAAQuN,EAAW,EACtCpU,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,2CAA6C9e,EAAW,uBAExF3L,GAAM,GAAImK,IAA+B/L,EAAc,GAEvD,IAAI7G,KAAK+8B,aAAe,EAAG,CAC1Bt0B,EAAI0M,cAAgBjP,EAAMnG,IAAI,GAAI,MAClC0I,GAAI4M,MAAQnP,EAAMnG,IAAI,GAAI,EAC1BoU,IAAe,gDAAkDrO,EAAO,sBAAwB2C,EAAI3C,SAC9F,CACN2C,EAAIwM,KAAOtC,GAAmBuC,UAC9Bf,IAAe,+CAAiDrO,EAAO,sBAAwB2C,EAAI3C,MAIrG2C,EAAIG,MAAQ8K,CACZjL,GAAI8L,eAAiBrO,EAAMnG,IAAI,GAAI,EACnC0I,GAAI+L,OAAStO,EAAMnG,IAAI,GAAI,MAC3BC,MAAKi1B,gBAAyBxsB,EAAK3C,EACnC9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOqB,CAE7B,IAAIzI,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI4M,IAMNilB,GAAAt5B,UAAAk7B,iBAAR,SAAyBmB,GAExB,GAAI1zB,EACJ,IAAIqL,EACJ,IAAIC,EACJ,IAAIlN,EAEJ,IAAIf,GAAc9F,KAAK+F,aACvB,IAAI9C,GAAcjD,KAAKstB,eAAe3mB,kBACtC,IAAIiN,GAAqB5T,KAAKstB,eAAe3mB,kBAC7C,IAAIT,GAAsBlG,KAAKmG,iBAAiBC,EAAEgzB,EAAU3kB,OAAQ7J,EAAEwuB,EAAU/yB,MAAOwE,EAAEuuB,EAAU/yB,MAAOyE,EAAEsuB,EAAUruB,MAAOmF,EAAEkpB,EAAUhpB,KAAMD,EAAEipB,EAAUhpB,KAAMC,EAAE+oB,EAAUhpB,KAAME,EAAE8oB,EAAUhpB,KAAMG,EAAE6oB,EAAUruB,MAAOyF,GAAGxQ,KAAKktB,aAAczc,GAAG2oB,EAAUhpB,KAAMM,GAAG1Q,KAAKktB,aAAcjZ,GAAGmlB,EAAUhpB,KAAMsE,GAAG1U,KAAKktB,aAAcvY,GAAGykB,EAAU3kB,OAAQG,GAAGwkB,EAAU/yB,MAAOwO,GAAG7U,KAAKktB,aAAcpY,GAAG9U,KAAKktB,aAAcnY,GAAGqkB,EAAU3kB,OAAQ7D,GAAGwoB,EAAU/yB,MAAOwK,GAAGuoB,EAAU/yB,OAC3c,IAAI2O,GAAqB9O,EAAMnG,IAAI,EAAG,EACtC,IAAIoU,GAAqB,kBAEzB,IAAIa,GAAe,EAAG,CACrBhV,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,yBAA2Ble,EAAc,8DACxE,QAGD,GAAI/R,GAAQ,EAAG,CACd,GAAIjD,KAAK+8B,cAAgB,EACxB/nB,EAAc,MACV,IAAIhV,KAAK+8B,cAAgB,EAC7B/nB,EAAc,CAEf,IAAIA,EAAc,EAAG,CAEpB,GAAI/R,GAAQ,EAAG,CACd,GAAImO,GAAelL,EAAMnG,IAAI,EAAG,SAEhC,IAAIiV,GAAe,EAAG,CACrBvM,EAAM,GAAImK,IAAexB,EACzB3I,GAAIwM,KAAOtC,GAAmBuC,UAC9Bf,IAAe,8CAAgDrO,EAAO,WAEhE,CACN2C,EAAM,GAAImK,IAAexB,EAAOlL,EAAMnG,IAAI,GAAI,GAC9C0I,GAAI0M,cAAgBjP,EAAMnG,IAAI,GAAI,MAClCoU,IAAe,+CAAiDrO,EAAO,YAGlE,IAAI7C,GAAQ,EAAG,CACrB,GAAImR,GAAkBlO,EAAMnG,IAAI,EAAG,EACnC8G,GAAgB7G,KAAKgH,aAAaoN,GAAW0W,EAAY6F,WAEzD,KAAM9pB,EAAc,IAAQuN,EAAW,EACtCpU,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,2CAA6C9e,EAAW,6BAExF,IAAIC,GAAwBxN,EAAc,EAE1C4B,GAAM,GAAImK,IAAeyB,EAEzB,IAAIW,GAAe,EAAG,CACrBvM,EAAIwM,KAAOtC,GAAmBuC,UAE9Bf,IAAe,+CAAiDrO,EAAO,sBAAwBuO,EAAQvO,SACjG,CACN2C,EAAI4M,MAAQnP,EAAMnG,IAAI,GAAI,EAC1B0I,GAAI0M,cAAgBjP,EAAMnG,IAAI,GAAI,MAElCoU,IAAe,gDAAkDrO,EAAO,sBAAwBuO,EAAQvO,MAI1G,GAAIyP,EACJ,IAAID,GAAyBpP,EAAMnG,IAAI,GAAI,EAE3C8G,GAAgB7G,KAAKgH,aAAasO,GAAkBwV,EAAY6F,WAEhE,KAAM9pB,EAAc,IAAQyO,GAAmB,EAAI,CAClDtV,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,2CAA6C5d,EAAkB,8BAG/F,GAAIzO,EAAc,GACjB0O,EAAiB1O,EAAc,EAEhC,IAAI0O,EAAgB,CACnB9M,EAAI8M,eAAiBA,CACrBpB,IAAe,4BAA8BoB,EAAezP,KAG7D,GAAI0P,GAAwBtP,EAAMnG,IAAI,EAAG,EAEzC8G,GAAgB7G,KAAKgH,aAAawO,GAAiBsV,EAAY6F,WAE/D,KAAM9pB,EAAc,IAAQ2O,GAAkB,EAAI,CACjDxV,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,0CAA4C1d,EAAiB,8BAG7F,GAAI3O,EAAc,GAAI,CACrBiN,EAAgBjN,EAAc,EAC9BsN,IAAe,2BAA6BL,EAAchO,KAG3D,GAAI2P,GAAsBvP,EAAMnG,IAAI,GAAI,EACxC8G,GAAgB7G,KAAKgH,aAAayO,GAAeqV,EAAY6F,WAE7D,KAAM9pB,EAAc,IAAQ4O,GAAgB,EAAI,CAC/CzV,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,4CAA8Czd,EAAe,8BAE7F,GAAI5O,EAAc,GAAI,CACrBkN,EAAclN,EAAc,EAC5BsN,IAAe,6BAA+BJ,EAAYjO,KAG3D,GAAI4P,GAAyBxP,EAAMnG,IAAI,GAAI,EAC3C8G,GAAgB7G,KAAKgH,aAAa0O,GAAkBkjB,EAAgBjI,WAEpE,KAAM9pB,EAAc,IAAO,EAAmB,CAC7C7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,wCAA0Cxd,EAAkB,kCACrF,CACNjN,EAAI+J,YAAgC3L,EAAc,GAInD4B,EAAIkN,OAASzP,EAAMnG,IAAI,EAAG,KAC1B0I,GAAImN,OAAS1P,EAAMnG,IAAI,EAAG,KAC1B0I,GAAIC,UAAYxC,EAAMnG,IAAI,EAAG,MAC7B0I,GAAIoN,mBAAqB3P,EAAMnG,IAAI,EAAG,MACtC0I,GAAIqN,UAAY9V,KAAKurB,aAAarlB,EAAMnG,IAAI,EAAG,GAC/C0I,GAAI+L,OAAStO,EAAMnG,IAAI,GAAI,MAE3B,IAAI+T,EACHrL,EAAIuN,UAAYlC,CAEjB,IAAIC,EACHtL,EAAIwN,YAAclC,CAEnBtL,GAAI8L,eAAiBrO,EAAMnG,IAAI,GAAI,EACnC0I,GAAI+I,QAAUtL,EAAMnG,IAAI,GAAI,EAC5B0I,GAAIyN,aAAehQ,EAAMnG,IAAI,GAAI,SACjC0I,GAAI4I,SAAWnL,EAAMnG,IAAI,GAAI,EAC7B0I,GAAI0N,MAAQjQ,EAAMnG,IAAI,GAAI,GAC1B0I,GAAI2N,cAAgBlQ,EAAMnG,IAAI,GAAI,SAElC,IAAI8T,GAAwB,CAC5B,IAAIlI,EAEJ,OAAOkI,EAAiBD,EAAa,CACpC,GAAIM,EACJA,GAAclU,KAAKstB,eAAernB,mBAElCC,GAAQlG,KAAKmG,iBACZC,EAAGgzB,EAAU/yB,MACbuE,EAAGwuB,EAAU/yB,MACbwE,EAAGuuB,EAAU/yB,MACb4D,IAAKjK,KAAKktB,aACV/iB,IAAKnK,KAAKktB,aACV9iB,IAAKpK,KAAKktB,aACV7W,IAAK+iB,EAAU3kB,OACf6B,IAAK8iB,EAAU3kB,OACf8B,IAAK6iB,EAAUzoB,OACf6F,IAAK4iB,EAAUzoB,OACf8F,IAAK2iB,EAAUruB,MACf2L,IAAK0iB,EAAUruB,MACf4L,IAAKyiB,EAAUnpB,MACf2G,IAAKwiB,EAAUnpB,MACf4G,IAAKuiB,EAAUhpB,KACf0G,IAAKsiB,EAAUhpB,KACf2G,IAAKqiB,EAAUpiB,QAGhB,QAAQ9C,GACP,IAAK,KAEJvI,EAAWzF,EAAMnG,IAAI,EAAG,EACxB8G,GAAgB7G,KAAKgH,aAAa2E,GAAWutB,GAAiBvI,WAE9D,KAAK9pB,EAAc,GAAI,CACtB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,yCAA2CvnB,EAAW,4BAC/E,CACNlD,EAAIyO,gBAAgBrQ,EAAc,GAElCsN,IAAe,0BAAgDtN,EAAc,GAAIf,KAGlF,KAED,KAAK,KAEJ6F,EAAWzF,EAAMnG,IAAI,EAAG,EACxB8G,GAAgB7G,KAAKgH,aAAa2E,GAAWwtB,GAAoBxI,WAEjE,KAAK9pB,EAAc,GAAI,CACtB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,yCAA2CvnB,EAAW,4BAC/E,CACNlD,EAAI2O,aAAevQ,EAAc,EACjCsN,IAAe,0BAAgDtN,EAAc,GAAIf,KAGlF,KAED,KAAK,GACJ6F,EAAWzF,EAAMnG,IAAI,EAAG,EACxB8G,GAAgB7G,KAAKgH,aAAa2E,GAAWmf,EAAY6F,WAAY,cACrE,KAAK9pB,EAAc,GAClB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,mCAAqCvnB,EAAW,0CAChFlD,GAAI8O,cAAgB,GAAIxE,IAAoBlM,EAAc,GAC1DsN,IAAe,yCAA8DtN,EAAc,GAAIf,IAC/F,MAED,KAAK,IACJ2C,EAAI+O,cAAgB,GAAIxE,GACxBmB,IAAe,uBACf,MACD,KAAK,IACJxI,EAAWzF,EAAMnG,IAAI,EAAG,EACxB8G,GAAgB7G,KAAKgH,aAAa2E,GAAWmf,EAAY6F,WACzD,KAAK9pB,EAAc,GAClB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,mDAAqDvnB,EAAW,oCAChGlD,GAAI+O,cAAgB,GAAItE,IAAsBrM,EAAc,GAC5DsN,IAAe,2DAA8EtN,EAAc,GAAIf,IAC/G,MACD,KAAK,IACJ2C,EAAI+O,cAAgB,GAAIpE,IAAkBlN,EAAMnG,IAAI,IAAK,GACzDoU,IAAe,sBACf,MACD,KAAK,IACJxI,EAAWzF,EAAMnG,IAAI,EAAG,EACxB8G,GAAgB7G,KAAKgH,aAAa2E,GAAWmf,EAAY6F,WACzD,KAAK9pB,EAAc,GAClB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,qCAAuCvnB,EAAW,oCAClFlD,GAAI+O,cAAgB,GAAIrE,IAAsBtM,EAAc,GAAI7G,KAAKurB,aAAarlB,EAAMnG,IAAI,IAAK,KAAM,MAAO0I,EAAI+O,cAClHrD,IAAe,oDAAuEtN,EAAc,GAAIf,IACxG,MACD,KAAK,IACJ2C,EAAI+O,cAAgB,GAAIvE,IAAiB/M,EAAMnG,IAAI,IAAK,GAAI0I,EAAI+O,cAC5C/O,GAAI+O,cAAeE,WAAaxR,EAAMnG,IAAI,IAAK,GACnEoU,IAAe,qBACf,MACD,KAAK,IAMJ,KAED,KAAK,KACJ1L,EAAIkP,eAAiB,GAAIpE,GACzBY,IAAe,8BACf,MACD,KAAK,KACJ1L,EAAIkP,eAAiB,GAAIlE,GACzBU,IAAe,wBACf,MACD,KAAK,KACJ1L,EAAIkP,eAAiB,GAAInE,IAAkBtN,EAAMnG,IAAI,IAAK,IAAM0I,EAAIkP,eAC/ClP,GAAIkP,eAAgBD,WAAaxR,EAAMnG,IAAI,IAAK,GACrEoU,IAAe,sBACf,MACD,KAAK,KACJ1L,EAAIkP,eAAiB,GAAIrE,IAAsBpN,EAAMnG,IAAI,IAAK,MAAO0I,EAAIkP,eAChDlP,GAAIkP,eAAgBC,aAAe1R,EAAMnG,IAAI,IAAK,EAClD0I,GAAIkP,eAAgBE,kBAAoB3R,EAAMnG,IAAI,IAAK,GAChFoU,IAAe,0BACf,MACD,KAAK,KACJ,KACD,KAAK,KACJxI,EAAWzF,EAAMnG,IAAI,EAAG,EACxB8G,GAAgB7G,KAAKgH,aAAa2E,GAAWmf,EAAY6F,WACzD,KAAK9pB,EAAc,GAClB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,6CAA+CvnB,EAAW,sCAC1F,KAAKlD,EAAIuN,UACRhW,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,wFAEhCzqB,GAAIuN,UAAYnP,EAAc,EAC9B4B,GAAIqP,aAAe,GAAIzE,IAAwB5K,EAAIuN,UAAWnP,EAAc,GAC5EsN,IAAe,4DAA+EtN,EAAc,GAAIf,IAChH,OAEF9F,KAAK4G,qBACLiN,IAAkB,QAKhB,IAAK5Q,GAAM,GAAKA,GAAM,EAAG,CpC2yFpB,GoCzyFLmO,GAAelL,EAAMnG,IAAI,EAAG,SAChCoU,IAAa/C,CAEb,IAAImE,EACJ,IAAID,GAAyBpP,EAAMnG,IAAI,EAAG,EAE1C8G,GAAgB7G,KAAKgH,aAAasO,GAAkBwV,EAAY6F,WAEhE,KAAM9pB,EAAc,IAAQyO,GAAmB,EAAI,CAClDtV,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,2CAA6C5d,EAAkB,6BAC9FC,GAAiBzC,EAAuBwB,oBAGzC,GAAIzN,EAAc,GACjB0O,EAAiB1O,EAAc,EAChC,IAAIkR,GAA0B,GAAIlF,IAAc0C,EAEhDpB,IAAc,cAAcmB,EAAgB,GAC5CyC,GAAUrP,UAAY,IACtBqP,GAAUC,cAAgB,IAC1BD,GAAU5C,cAAgB,IAC1B4C,GAAUnP,MAAQ5I,KAAK4G,qBACvB5G,MAAKi1B,gBAAyBld,EAAWjS,EACzC9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAO2Q,CAC7B,IAAI/X,KAAKmrB,OACR7jB,QAAQC,IAAI4M,EACb,QAGD1L,EAAIG,MAAQ5I,KAAK4G,qBACjB5G,MAAKi1B,gBAAyBxsB,EAAK3C,EAEnC9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOqB,CAC7B,IAAIzI,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI4M,IAKNilB,GAAAt5B,UAAA87B,aAAR,SAAqBO,GAGpB,GAAIpzB,EAEJ/I,MAAKqrB,QAAQ8Q,GAASr2B,KAAO9F,KAAK+F,aAElC,IAAI9C,GAAcjD,KAAKstB,eAAe3mB,kBACtC,IAAIiB,EAEJ5H,MAAKq5B,eAAer5B,KAAKi6B,cAAcxnB,cAGvC,IAAIxP,GAAQ,EAAG,CACd2E,EAAW5H,KAAKstB,eAAehnB,iBAC/B,IAAIuB,EACJA,GAAM7H,KAAKstB,eAAexlB,aAAaF,EACvC5H,MAAK23B,gBAAgB33B,KAAKi6B,cAAcxnB,WAAY,GAAI+gB,GAAW3rB,GAAM,MAAO,KAAM,UAEhF,CACND,EAAW5H,KAAKstB,eAAehnB,iBAE/B,IAAIc,EACJA,GAAO,GAAIO,EACX3H,MAAKstB,eAAetlB,UAAUZ,EAAM,EAAGQ,EAQvC5H,MAAK23B,gBAAgB33B,KAAKi6B,cAAcxnB,WAAY,KAAM,MAAOihB,EAAYkE,iBAAiBxwB,GAAO,MAMtGpH,KAAKmG,gBAAgB,KACrBnG,MAAKqrB,QAAQ8Q,GAASK,OAASx8B,KAAK4G,qBACpC5G,MAAK63B,gCACL73B,MAAKqrB,QAAQ8Q,GAAS/0B,KAAO2B,CAE7B,IAAI/I,KAAKmrB,OAAQ,CAChB,GAAIniB,IAAoC,WAAY,QACpD1B,SAAQC,IAAI,mBAAqByB,EAAmB/F,GAAQ,wBAMtDm2B,GAAAt5B,UAAAm7B,iBAAR,SAAyBkB,GpCqxFlB,GoClxFFv0B,EACJ,IAAImB,EACJ,IAAI/J,EAEJgB,MAAK65B,cAAgB,GAAIp3B,MACzBzC,MAAKq5B,eAAgBr5B,KAAKi6B,cAAcxnB,cAExC,IAAIxP,GAAcjD,KAAKstB,eAAe3mB,kBAEtC3G,MAAKqrB,QAAQ8Q,GAASr2B,KAAO9F,KAAK+F,aAElC,KAAK/G,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvBgB,KAAKq5B,eAAer5B,KAAKi6B,cAAcxnB,cACvCzS,MAAK65B,cAAch3B,KAAK,KAGxB,IAAII,GAAQ,EAAG,CACd2E,EAAW5H,KAAKstB,eAAehnB,iBAC/B,IAAIuB,EACJA,GAAM7H,KAAKstB,eAAexlB,aAAaF,EAEvC5H,MAAK23B,gBAAgB33B,KAAKi6B,cAAcxnB,WAAa,IAAMzT,EAAG,GAAIw0B,GAAW3rB,GAAM,MAAO,KAAM,UAC1F,CAEND,EAAW5H,KAAKstB,eAAehnB,iBAC/B,IAAIc,EACJA,GAAO,GAAIO,EAEX3H,MAAKstB,eAAetlB,UAAUZ,EAAM,EAAGQ,EAEvC5H,MAAK23B,gBAAgB33B,KAAKi6B,cAAcxnB,WAAa,IAAMzT,EAAG,KAAM,MAAO00B,EAAYkE,iBAAiBxwB,GAAO,OAKjHpH,KAAKmG,gBAAgB,KACrBnG,MAAKqrB,QAAQ8Q,GAASK,OAASx8B,KAAK4G,qBACpC5G,MAAK63B,gCACL73B,MAAKqrB,QAAQ8Q,GAAS/0B,KAAO2B,CAE7B,IAAI/I,KAAKmrB,OAAQ,CAChB,GAAIniB,IAAoC,WAAY,QACpD1B,SAAQC,IAAI,mBAAqByB,EAAmB/F,GAAQ,6BAKtDm2B,GAAAt5B,UAAAo7B,uBAAR,SAA+BiB,GAE9B,GAAIpzB,EAEJ/I,MAAKqrB,QAAQ8Q,GAASr2B,KAAO9F,KAAK+F,aAClCgD,GAAQ/I,KAAK2iB,sBAAsBwZ,EACnCn8B,MAAK4G,qBACL5G,MAAKqrB,QAAQ8Q,GAAS/0B,KAAO2B,CAC7B/I,MAAKi1B,gBAAyBlsB,EAAO/I,KAAKqrB,QAAQ8Q,GAASr2B,KAC3D9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAO2B,CAE7B,IAAI/I,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,iCAAmCwB,EAAMjD,KAAO,WAAaiD,IAKnEqwB,GAAAt5B,UAAAq7B,uBAAR,SAA+BgB,GAE9B,GAAIl5B,EACJ,IAAI2E,EACJ,IAAImB,EACJ,IAAI6Y,EACJ5hB,MAAKqrB,QAAQ8Q,GAASr2B,KAAO9F,KAAK+F,aAElC6b,GAAgB5hB,KAAKstB,eAAehnB,iBACpC,IAAIO,GAA2B7G,KAAKgH,aAAa4a,GAAgB+W,EAAUhI,WAE3E,KAAK9pB,EAAc,GAAI,CACtB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,wCAA0CtR,EAAgB,sDACzF,QAGD7Y,EAAQ/I,KAAK6hB,sBAAkChb,EAAc,GAAIs1B,EAEjE,KAAKpzB,EACJ,MAED/I,MAAK4G,qBACL5G,MAAKi1B,gBAAyBlsB,EAAO/I,KAAKqrB,QAAQ8Q,GAASr2B,KAC3D9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAO2B,CAE7B,IAAI/I,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,0CAA4CwB,EAAMjD,KAAO,aAAeiD,EAAQ,mBAAkClC,EAAc,GAAKf,OAM3IszB,GAAAt5B,UAAAy7B,aAAR,SAAqBY,GAEpB,GAAI7wB,GAAsBtL,KAAKstB,eAAe3mB,oBAAsB,CACpE,IAAI+C,GAAgB1J,KAAKstB,eAAehnB,iBACxC,IAAIqD,GAAe3J,KAAK4J,eACxB,IAAI9D,GAAc9F,KAAK+F,aAEvB,IAAIwF,EACJ,IAAIC,EAEJ,IAAI3E,GAA2B7G,KAAKgH,aAAa0C,GAASkC,EAAuB+kB,UAAWgI,EAAUhI,UAAW3X,EAAK2X,WAEtH,IAAI9pB,EAAc,GAAI,CACrB0E,EAAwC1E,EAAc,GAGvD,GAAI4E,GAAqBzL,KAAKstB,eAAevjB,WAC7C,IAAI2B,GAAqB1L,KAAKstB,eAAevjB,WAE7C,IAAI7D,GAAsBlG,KAAKmG,iBAAiBC,EAAEgzB,EAAU/yB,OAE5D,QAAQqF,GACP,IAAK,GAEJ,GAAIC,GAAkBzF,EAAMnG,IAAI,EAAG,EpCovFvB,IoClvFRi9B,GAAiCh9B,KAAKgH,aAAa2E,GAAWgtB,EAAUhI,WAE5E,KAAMqM,EAAoB,IAAQrxB,GAAY,EAAI,CACjD3L,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,kCAAoCvnB,EAAW,2BAC9E,QAGDH,EAAewxB,EAAoB,EAEnC,IAAIzxB,EAAc,CACjBA,EAAab,SAASc,GAGvBA,EAAajB,UAAUC,SAAWb,CAElC,OAGF,GAAI6B,EAAc,CACjBtF,EAAQlG,KAAKmG,iBAAiBC,EAAEpG,KAAKgtB,cAAepiB,EAAE5K,KAAKgtB,cAAeniB,EAAE7K,KAAKgtB,cAAeliB,EAAEsuB,EAAUruB,OAE5GS,GAAaR,MAAQ,GAAIxB,GAAStD,EAAMnG,IAAI,EAAG,GAAImG,EAAMnG,IAAI,EAAG,GAAImG,EAAMnG,IAAI,EAAG,GACjFyL,GAAa5C,MAAQ5I,KAAK4G,sBAG3B5G,KAAKqrB,QAAQ8Q,GAAS/0B,KAAOoE,CAE7B,IAAIxL,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,kCAAoCzB,IAM1CszB,GAAAt5B,UAAAm8B,cAAR,SAAsBE,GAErB,GAAIj2B,GAAsBlG,KAAKmG,iBAAiBC,EAAEgzB,EAAU3kB,OAAQ7J,EAAEwuB,EAAUtf,UAAWjP,EAAEuuB,EAAUtf,UAAWhP,EAAEsuB,EAAUtf,UAAW5J,EAAEkpB,EAAUtf,WAErJ,IAAI9Z,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,+CAAiDrB,EAAMnG,IAAI,EAAG,GAC1EuH,SAAQC,IAAI,+CAAiDrB,EAAMnG,IAAI,EAAG,WAC1EuH,SAAQC,IAAI,+CAAiDrB,EAAMnG,IAAI,EAAG,WAC1EuH,SAAQC,IAAI,+CAAiDrB,EAAMnG,IAAI,EAAG,WAC1EuH,SAAQC,IAAI,+CAAiDrB,EAAMnG,IAAI,EAAG,aAKpEq5B,GAAAt5B,UAAAk8B,eAAR,SAAuBG,GAEtB,GAAIjzB,GAAYlJ,KAAKstB,eAAe3mB,kBACpC,IAAIwC,GAAyBnJ,KAAK+F,aAClC,IAAI/F,KAAKmrB,OACR7jB,QAAQC,IAAI,iCAAmC2B,EAAK,eAAiBC,GAM/DiwB,GAAAt5B,UAAA+hB,sBAAR,SAA8B/R,EAAiBqsB,GAG9C,GAAIra,GAAoB9hB,KAAKstB,eAAernB,mBAC5C,IAAImR,EACJ,IAAIlR,GAAsBlG,KAAKmG,iBAAiBC,EAAEgzB,EAAU/yB,MAAOuE,EAAEwuB,EAAU/yB,MAAOwE,EAAEuuB,EAAU/yB,MAAO4D,IAAIjK,KAAKktB,aAAc/iB,IAAInK,KAAKktB,aAAc9iB,IAAIpK,KAAKktB,aAAc7W,IAAI+iB,EAAU3kB,OAAQ6B,IAAI8iB,EAAU3kB,OAAQ8B,IAAI6iB,EAAUzoB,OAAQ6F,IAAI4iB,EAAUzoB,OAAQ8F,IAAI2iB,EAAUruB,MAAO2L,IAAI0iB,EAAUruB,MAAO4L,IAAIyiB,EAAUnpB,MAAO2G,IAAIwiB,EAAUnpB,MAAO4G,IAAIuiB,EAAUhpB,KAAM0G,IAAIsiB,EAAUhpB,KAAM2G,IAAIqiB,EAAUpiB,QAEhZ,IAAIrL,EACJ,IAAI9E,EACJ,QAAQib,GAUP,IAAK,MACJnW,EAAWzF,EAAMnG,IAAI,EAAG,EACxB8G,GAAgB7G,KAAKgH,aAAa2E,GAAWwtB,GAAoBxI,WACjE,KAAK9pB,EAAc,GAAI,CACtB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,6CAA+CvnB,EAAW,0DACzF,OAAOyL,GAERA,EAAe,GAAIsK,IAAoC7a,EAAc,GACrE,MACD,KAAK,MAEJuQ,EAAe,GAAIoK,IAAwC1R,EACnCsH,GAAc/B,MAAQnP,EAAMnG,IAAI,IAAK,EACrCqX,GAAc4K,QAAU9b,EAAMnG,IAAI,IAAK,KAC/D,MAED,KAAK,MAGJqX,EAAe,GAAImK,IAAwCzR,EAAgB5J,EAAMnG,IAAI,IAAK,GAClEqX,GAAc/B,MAAQnP,EAAMnG,IAAI,IAAK,EACrCqX,GAAc4K,QAAU9b,EAAMnG,IAAI,IAAK,KACvCqX,GAAc6K,MAAQ/b,EAAMnG,IAAI,IAAK,EAE7D,MACD,KAAK,MAEJqX,EAAe,GAAIuK,IAAoC7R,EAAgB5J,EAAMnG,IAAI,IAAK,GAClEqX,GAAc/B,MAAQnP,EAAMnG,IAAI,IAAK,EACrCqX,GAAc4K,QAAU9b,EAAMnG,IAAI,IAAK,KACvCqX,GAAc6K,MAAQ/b,EAAMnG,IAAI,IAAK,EAEzD,MACD,KAAK,MACJqX,EAAe,GAAIqK,IAAiB3R,EAChBsH,GAAc/B,MAAQnP,EAAMnG,IAAI,IAAK,EACrCqX,GAAc4K,QAAU9b,EAAMnG,IAAI,IAAK,KAC3D,OAGFC,KAAK4G,qBACL,OAAOwQ,GAIAgiB,GAAAt5B,UAAA+7B,cAAR,SAAsBM,GAErB,GAAIr2B,GAAc9F,KAAK+F,aACvB,IAAIyd,GAA6BxjB,KAAKstB,eAAernB,mBACrD,IAAIiB,GAAoB,GAAIoc,EAC5BtjB,MAAKmG,gBAAgB,KAErB,IAAIsd,GAAgC,CACpC,OAAOA,EAAgBD,EAAY,CAClC,GAAIE,EACJ,IAAIC,EAEJ3jB,MAAKstB,eAAernB,mBACpByd,GAAQ,GAAIH,GACZG,GAAME,YAAc5jB,KAAKstB,eAAernB,oBAAsB,CAC9Dyd,GAAM5d,KAAO9F,KAAK+F,aAElB4d,GAAM3jB,KAAK4J,eACX8Z,GAAMG,gBAAkBF,EAAIvG,OAE5Bpd,MAAKmG,gBAAgB,KACrBnG,MAAK4G,qBACLM,GAAS4c,OAAOjhB,KAAK6gB,EACrBD,KAIDzjB,KAAK4G,qBACL5G,MAAKi1B,gBAAgB/tB,EAAUpB,EAC/B9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOF,CAC7B,IAAIlH,KAAKmrB,OACR7jB,QAAQC,IAAI,6BAA+BL,EAASpB,KAAO,yBAA2B2d,GAIhF2V,GAAAt5B,UAAAg8B,kBAAR,SAA0BK,GAEzB,GAAIr2B,GAAc9F,KAAK+F,aACvB,IAAIyd,GAA6BxjB,KAAKstB,eAAernB,mBACrDjG,MAAKmG,gBAAgB,KAErB,IAAIye,GAAoB,GAAIF,GAE5B,IAAIjB,GAAgC,CACpC,OAAOA,EAAgBD,EAAY,CAClC,GAAIqB,EACJ,IAAIC,EACJD,GAAa,GAAIF,EACjBG,GAAgB9kB,KAAKstB,eAAe3mB,kBACpC,IAAIme,GAAiB,EAAG,CACvB,GAAIC,GAAyB/kB,KAAKglB,sBAElC,IAAIrb,GAAe,GAAIsQ,GAAS8K,EAChCF,GAAWI,YAAYC,WAAWvb,EAClCkb,GAAWM,YAAYC,SAASzb,EAAIoD,SAEpC6X,GAAKS,WAAW5B,GAAiBoB,EAElCpB,IAGDzjB,KAAK4G,qBACL5G,MAAKi1B,gBAAgBrQ,EAAM9e,EAC3B9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOwd,CAC7B,IAAI5kB,KAAKmrB,OACR7jB,QAAQC,IAAI,iCAAmCqd,EAAK9e,KAAO,yBAA2B2d,GAIhF2V,GAAAt5B,UAAAi8B,uBAAR,SAA+BI,GAE9B,GAAIjY,EACJ,IAAIC,EACJ,IAAIre,GAAc9F,KAAK+F,aACvB,IAAIqe,GAAwB,GAAIH,GAChC,IAAII,GAA6BrkB,KAAKstB,eAAernB,mBACrDjG,MAAKmG,gBAAgB,KAErB,IAAIme,GAAgC,CACpC,IAAIzd,EACJ,OAAOyd,EAAgBD,EAAY,CAClCF,EAAYnkB,KAAKstB,eAAehnB,iBAChC4d,GAAYlkB,KAAKstB,eAAernB,mBAChCY,GAAgB7G,KAAKgH,aAAamd,GAAYO,GAAaiM,WAC3D,KAAK9pB,EAAc,GAClB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,2CAA6C5O,EAAgB,UAAYH,EAAY,oCAEpHC,GAAKvF,SAAwB7e,KAAKqrB,QAAQlH,GAAW/c,KAAM8c,EAC5DI,KAED,GAAIF,EAAKI,OAAOjlB,QAAU,EAAG,CAC5BS,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,gEAC/B,QAGDlzB,KAAK4G,qBACL5G,MAAKi1B,gBAAgB7Q,EAAMte,EAC3B9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOgd,CAC7B,IAAIpkB,KAAKmrB,OACR7jB,QAAQC,IAAI,qCAAuC6c,EAAKte,KAAO,yBAA2Bse,EAAKI,OAAOjlB,QAIhG65B,GAAAt5B,UAAAs7B,uBAAR,SAA+Be,EAAyBpT,GAAA,GAAAA,QAAA,GAAwB,CAAxBA,EAAA,MAEvD,GAAI1E,GAA6B,CACjC,IAAI2E,EACJ,IAAI1E,EACJ,IAAI2E,EACJ,IAAI/E,EACJ,IAAI5W,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIJ,EACJ,IAAIC,EACJ,IAAI6b,EACJ,IAAIC,EACJ,IAAIlc,GAAqB,CACzB,IAAImX,GAAsB,GAAI0E,GAC9B,IAAIlb,EACJ,IAAIH,EACJ,IAAI2b,GAA6B,CACjC,IAAIC,GAA+B,CACnC,IAAIC,GAAoC,GAAI7mB,MAC5C,IAAIyD,EACJ,IAAIqjB,EACJ,IAAIzjB,GAAc9F,KAAK+F,aACvB,IAAIyjB,GAA2BxpB,KAAKstB,eAAehnB,iBACnD,IAAIO,GAA2B7G,KAAKgH,aAAawiB,GAAYvd,EAAS0kB,WACtE,KAAK9pB,EAAc,GAAI,CACtB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,6CAA+C1J,EAAY,6BAC1F,QAED,GAAI3b,GAA2B7N,KAAKypB,wBAAwBD,EAC5D,KAAKT,EACJ1E,EAAarkB,KAAKstB,eAAernB,mBAElC+iB,GAAgBhpB,KAAKstB,eAAernB,mBACpCmjB,GAAcppB,KAAKstB,eAAernB,mBAClCojB,GAAgB,CAChB,OAAOA,EAAgBD,EAAa,CACnCE,EAAYzmB,KAAK7C,KAAKstB,eAAernB,oBACrCojB,KAEDnjB,EAAQlG,KAAKmG,iBAAiBC,EAAEgzB,EAAUhpB,KAAMxF,EAAEwuB,EAAUhpB,MAE5DgU,GAAKsF,QAAUxjB,EAAMnG,IAAI,EAAG,KAC5BqkB,GAAKuF,iBAAmBzjB,EAAMnG,IAAI,EAAG,MAErCukB,GAAgB,CAChB,OAAOA,EAAgBD,EAAY,CAClCH,EAAYlkB,KAAKstB,eAAernB,mBAChCijB,GAAW,GAAIjd,EACfgd,GAAgB,CAChB,OAAOA,EAAgBD,EAAe,CACrCK,EAAgB,CAChBjc,GAAUpN,KAAKstB,eAAehnB,iBAC9B+G,GAAUrN,KAAKstB,eAAevgB,SAAWK,CACzC,OAAOic,EAAgBD,EAAa,CACnC,GAAIE,EAAYD,IAAkB,EAAG,CACpCzb,EAAsB/G,EAAc,GAAI+iB,cAAcX,GAAerb,OACrEH,GAAQ,GAAIhL,MACZwK,GAAM,CACN,OAAOjN,KAAKstB,eAAevgB,SAAWM,EAAS,CAC9CC,EAAItN,KAAK0N,WAAW1N,KAAK8sB,aACzBvf,GAAIvN,KAAK0N,WAAW1N,KAAK8sB,aACzBtf,GAAIxN,KAAK0N,WAAW1N,KAAK8sB,aACzBrf,GAAMR,KAASK,CACfG,GAAMR,KAASM,CACfE,GAAMR,KAASO,EAEhB2b,EAAU,GAAIhd,GAAoB,KAClCgd,GAAQ9a,cAAcT,EACtBub,GAAQ7a,gBAAgBb,EACxB0b,GAAQ3a,UAAUX,EAAIob,GACtBE,GAAQpa,oBAAoB,KAC5Boa,GAAQna,qBAAqB,KAC7Bma,GAAQva,kBAAoB,KAC5Bua,GAAQra,mBAAqB,KAC7Bma,IACAC,GAASza,eAAe0a,OAExBnpB,MAAKstB,eAAevgB,SAAWM,CAChCgc,MAGFjF,EAAKvF,SAASqK,EAAUhF,EACxBI,KAEDtkB,KAAK4G,qBACL5G,MAAKi1B,gBAAgB7Q,EAAMte,EAE3B9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOgd,CAC7B,IAAIpkB,KAAKmrB,OACR7jB,QAAQC,IAAI,mCAAqC6c,EAAKte,KAAO,6BAA2Ce,EAAc,GAAIf,KAAO,yBAA2Bse,EAAKI,OAAOjlB,QAIlK65B,GAAAt5B,UAAAu7B,wBAAR,SAAgCc,GAE/B,GAAInS,EACJ,IAAIiT,GAAsB,EAC1B,IAAIn3B,GAAc9F,KAAK+F,aACvB,IAAIse,GAA6BrkB,KAAKstB,eAAernB,mBACrD,IAAIC,GAAsBlG,KAAKmG,iBAAiBC,EAAEgzB,EAAUzoB,QAC5D,IAAI2T,GAAgC,CACpC,IAAI2F,GAAyC,GAAIxnB,MACjD,IAAIynB,GAAqC,GAAIznB,MAC7C,OAAO6hB,EAAgBD,EAAY,CAClC2F,EAAkBhqB,KAAKstB,eAAehnB,iBACtC,IAAIO,GAA2B7G,KAAKgH,aAAagjB,GAAkB0O,EAAkB/H,WACrF,KAAK9pB,EAAc,GAClB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,2CAA6C5O,EAAgB,MAAQ0F,EAAkB,gCAClH,CACJ,GAAInjB,EAAc,YAAciiB,IAC/BoB,EAAarnB,KAAKgE,EAAc,GACjC,IAAIA,EAAc,YAAcod,IAC/BgG,EAAepnB,KAAKgE,EAAc,IAEpCyd,IAED,GAAK4F,EAAa3qB,QAAU,GAAO0qB,EAAe1qB,QAAU,EAAI,CAC/DS,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,wEAC/B,QAEDlzB,KAAK4G,qBACL,IAAIsjB,EAAa3qB,OAAS,EAAG,CAC5B,GAAI6qB,GAA2C,GAAIN,EACnD,KAAK,GAAI9qB,GAAmB,EAAGA,EAAIkrB,EAAa3qB,OAAQP,IACvDorB,EAAsBC,aAAaH,EAAalrB,GACjDgB,MAAKi1B,gBAAgB7K,EAAuBtkB,EAC5C9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOgjB,CAC7B,IAAIpqB,KAAKmrB,OACR7jB,QAAQC,IAAI,uCAAyCzB,EAAO,mBAAqBskB,EAAsBE,WAAW/qB,OAAS,wBAA0B6qB,EAAsBG,eAAe9X,gBAErL,IAAIwX,EAAe1qB,OAAS,EAAG,CACrCsH,EAAgB7G,KAAKgH,aAAagjB,GAAkB0O,EAAkB/H,WACtE,IAAInG,GAA+C,GAAIT,GAAqB7jB,EAAMnG,IAAI,EAAG,GACzF,KAAK,GAAIf,GAAmB,EAAGA,EAAIirB,EAAe1qB,OAAQP,IACzDwrB,EAAwBH,aAAaJ,EAAejrB,GACrDgB,MAAKi1B,gBAAgBzK,EAAyB1kB,EAC9C9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOojB,CAC7B,IAAIxqB,KAAKmrB,OACR7jB,QAAQC,IAAI,yCAA2CzB,EAAO,mBAAqB0kB,EAAwBF,WAAW/qB,OAAS,wBAA0BirB,EAAwBD,eAAe9X,aAM3L2mB,GAAAt5B,UAAAw7B,iBAAR,SAAyBa,GAExB,GAAIp1B,EACJ,IAAIpB,EACJ,IAAIC,EACJ,IAAIq3B,GAAsB,EAC1B,IAAIn3B,GAAc9F,KAAK+F,aACvB,IAAI9C,GAAuBjD,KAAKstB,eAAernB,mBAE/C,IAAIC,GAAsBlG,KAAKmG,iBAAiBC,EAAEgzB,EAAU/yB,OAE5DV,GAAqB3F,KAAKstB,eAAehnB,iBACzC,IAAIC,GAAmCvG,KAAKstB,eAAernB,mBAC3D,IAAIO,GAAsC,GAAI/D,MAC9C,KAAK,GAAIzD,GAAmB,EAAGA,EAAIuH,EAAkBvH,IACpDwH,EAAa3D,KAAK7C,KAAKstB,eAAehnB,kBAEvC,IAAIG,GAA8BzG,KAAKstB,eAAernB,mBACtD,IAAIS,GAAqB1G,KAAKstB,eAAe3mB,oBAAsB,CACnE3G,MAAK4G,qBACL5G,MAAK4G,qBAEL,IAAIC,EACJ,IAAIC,GAA2B,GAAIrE,MAEnC,KAAKzD,EAAI,EAAGA,EAAIwH,EAAajH,OAAQP,IAAK,CACzC6H,EAAgB7G,KAAKgH,aAAaR,EAAaxH,IAAKga,EAAK2X,WACzD,IAAI9pB,EAAc,GACjBC,EAAajE,KAAYgE,EAAc,IAEzCA,EAAgB7G,KAAKgH,aAAarB,GAAqBkzB,EAAiBlI,WACxE,KAAK9pB,EAAc,GAAI,CACtB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,qCAAuCvtB,EAAqB,uBAC3F,QAEDC,EAAwCiB,EAAc,EACtD,IAAII,EACJ,IAAIhE,GAAQ,EAAG,CAEd4D,EAAgB7G,KAAKgH,aAAad,EAAMnG,IAAI,EAAG,IAAKujB,EAASqN,WAC7D,KAAK9pB,EAAc,GAAI,CACtB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,iCAAmChtB,EAAMnG,IAAI,EAAG,GAAK,uBACpF,QAEDkH,EAAe,GAAIzB,GAAwCI,EAA+BiB,EAAc,QAElG,IAAI5D,GAAQ,EAClBgE,EAAe,GAAI1B,GAAoCK,EAExD5F,MAAKi1B,gBAAgBhuB,EAAcnB,EACnC9F,MAAKqrB,QAAQ8Q,GAAS/0B,KAAOH,CAC7B,KAAKjI,EAAI,EAAGA,EAAI8H,EAAavH,OAAQP,IAAK,CACzC,GAAIiE,GAAQ,EACX6D,EAAa9H,GAAGmI,SAA+BF,CAChD,IAAIhE,GAAQ,EACX6D,EAAa9H,GAAGmI,SAA6BF,EAG/C,GAAIjH,KAAKmrB,OACR7jB,QAAQC,IAAI,6BAA+BzB,GAIrCszB,GAAAt5B,UAAA6iB,sBAAR,SAA8BwZ,GAG7B,GAAIra,GAAoB9hB,KAAKstB,eAAernB,mBAC5C,IAAI2c,EAEJ,IAAI1c,GAAsBlG,KAAKmG,iBAAiBC,EAAEgzB,EAAU/yB,MAAOuE,EAAEwuB,EAAU/yB,MAAOwE,EAAEuuB,EAAU/yB,MAAO4D,IAAIjK,KAAKktB,aAAc/iB,IAAInK,KAAKktB,aAAc9iB,IAAIpK,KAAKktB,aAAc7iB,IAAIrK,KAAKktB,aAAcrK,IAAI7iB,KAAKktB,aAAcpK,IAAI9iB,KAAKktB,aAAcnK,IAAI/iB,KAAKktB,aAAc7W,IAAI+iB,EAAU3kB,OAAQ6B,IAAI8iB,EAAU3kB,OAAQ8B,IAAI6iB,EAAUzoB,OAAQ6F,IAAI4iB,EAAUzoB,OAAQ8F,IAAI2iB,EAAUruB,MAAO2L,IAAI0iB,EAAUruB,MAAO4L,IAAIyiB,EAAUnpB,MAAO2G,IAAIwiB,EAAUnpB,MAAO4G,IAAIuiB,EAAUhpB,KAAM0G,IAAIsiB,EAAUhpB,MACxd,IAAIzE,EACJ,IAAI9E,EAEJ,QAAQib,GAEP,IAAK,KACJc,EAAqB,GAAIL,IAAwBrc,EAAMnG,IAAI,IAAK,GAAI0C,OAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACnI,MACD,KAAK,KACJmgB,EAAqB,GAAIJ,GACzB,IAAIQ,GAAyB9c,EAAMnG,IAAI,IAAK,EACd6iB,GAAoBK,eAAiB,GAAIjJ,GAAe9T,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,GAAMijB,GAAU,GAAM,IAASA,GAAU,EAAK,IAAQA,EAAS,IAASA,GAAU,GAAM,IACtP,MACD,KAAK,KAEJrX,EAAWzF,EAAMnG,IAAI,EAAG,EACxBuH,SAAQC,IAAI,UAAWoE,EAGvB9E,GAAgB7G,KAAKgH,aAAa2E,GAAYmf,EAAY6F,WAAa,cACvE,KAAK9pB,EAAc,GAClB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,mCAAqCvnB,EAAW,2BAChFiX,GAAqB,GAAImW,IAAqClyB,EAAc,GAAaX,EAAMnG,IAAI,IAAK,GACxG4L,GAAWzF,EAAMnG,IAAI,EAAG,EACxB,IAAI4L,EAAW,EAAG,CACjB9E,EAAgB7G,KAAKgH,aAAa2E,GAAWmf,EAAY6F,WACzD,KAAK9pB,EAAc,GAClB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,yCAA2CvnB,EAAW,4BAKvF,KACD,KAAK,KACJA,EAAWzF,EAAMnG,IAAI,EAAG,EACxB8G,GAAgB7G,KAAKgH,aAAa2E,GAAWmf,EAAY6F,WACzD,KAAK9pB,EAAc,GAClB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,qCAAuCvnB,EAAW,6BAClFiX,GAAqB,GAAIqW,IAAqBpyB,EAAc,GAAI7G,KAAKurB,aAAarlB,EAAMnG,IAAI,IAAK,KACjG,MAQD,KAAK,KACJ6iB,EAAqB,GAAIF,IAAqBxc,EAAMnG,IAAI,IAAK,UAAWmG,EAAMnG,IAAI,IAAK,IAAMmG,EAAMnG,IAAI,IAAK,GAC5G,MACD,KAAK,KACJ4L,EAAWzF,EAAMnG,IAAI,EAAG,EACxB8G,GAAgB7G,KAAKgH,aAAa2E,GAAWmf,EAAY6F,WACzD,KAAK9pB,EAAc,GAClB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,0CAA4CvnB,EAAW,8BACvFiX,GAAqB,GAAIkW,IAAsBjyB,EAAc,GAAIX,EAAMnG,IAAI,IAAK,OAChF,MAYD,KAAK,KACJ4L,EAAWzF,EAAMnG,IAAI,EAAG,EACxB8G,GAAgB7G,KAAKgH,aAAa2E,GAAWmf,EAAY6F,WAAY,cACrE,KAAK9pB,EAAc,GAClB7G,KAAKqrB,QAAQ8Q,GAASjJ,SAAS,mCAAqCvnB,EAAW,kCAChFiX,GAAqB,GAAIoW,IAA0BnyB,EAAc,GAAIX,EAAMnG,IAAI,IAAK,GACpF,MACD,KAAK,KACJ6iB,EAAqB,GAAIH,IAAgBvc,EAAMnG,IAAI,IAAK,GAAImG,EAAMnG,IAAI,IAAK,KAAOmG,EAAMnG,IAAI,IAAK,SACjG,OAGFC,KAAK4G,qBACL,OAAOgc,GAIAwW,GAAAt5B,UAAA8G,oBAAR,WAEC,GAAI8M,EACJ,IAAIia,EACJ,IAAIC,EAEJD,GAAW3tB,KAAKstB,eAAehnB,iBAE/B,IAAIqnB,EAAW,EAAG,CAEjB,GAAIE,EAEJna,KAEAma,GAAW7tB,KAAKstB,eAAevgB,SAAW4gB,CAE1C,OAAO3tB,KAAKstB,eAAevgB,SAAW8gB,EAAU,CAC/C,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAGJJ,GAAQ9tB,KAAKstB,eAAe3mB,kBAC5BonB,GAAW/tB,KAAK+F,aAChBioB,GAAYhuB,KAAKstB,eAAe3mB,kBAChCsnB,GAAWjuB,KAAKstB,eAAehnB,iBAE/B,IAAKtG,KAAKstB,eAAevgB,SAAWkhB,EAAYJ,EAAU,CACzDvmB,QAAQC,IAAI,2CAA6CqmB,EAAc,sCACvE5tB,MAAKstB,eAAevgB,SAAW8gB,CAC/B,OAAOna,GAGR,OAAQsa,GACP,IAAKoL,GAAUtf,UACdoU,EAAWluB,KAAKstB,eAAexlB,aAAammB,EAC5C,MACD,KAAKmL,GAAUjL,KACdD,EAAWluB,KAAKstB,eAAelP,UAC/B,MACD,KAAKgb,GAAUhL,MACdF,EAAWluB,KAAKstB,eAAevjB,WAC/B,MACD,KAAKqvB,GAAUplB,MACdka,EAAWluB,KAAKstB,eAAee,SAC/B,MACD,KAAK+K,GAAUhpB,KACf,IAAKgpB,GAAUruB,MACdmjB,EAAWluB,KAAKstB,eAAe3mB,kBAC/B,MACD,KAAKyyB,GAAUzoB,OACdud,EAAWluB,KAAKstB,eAAernB,mBAC/B,MACD,KAAKmzB,GAAU3kB,OACf,IAAK2kB,GAAU/yB,MACd6nB,EAAWluB,KAAKstB,eAAehnB,iBAC/B,MACD,KAAK8yB,GAAU9K,QACdJ,EAAWluB,KAAKstB,eAAelS,WAC/B,MACD,KAAKge,GAAU7K,QACdL,EAAWluB,KAAKstB,eAAekB,YAC/B,MACD,SACCN,EAAW,gCAAkCF,CAC7ChuB,MAAKstB,eAAevgB,UAAYkhB,CAChC,OAGF,GAAIjuB,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,qBAAuBwmB,EAAW,eAAiBG,GAGhExa,EAAWqa,GAAYG,CACvBN,IAAe,GAIjB,MAAOla,GAGA0lB,GAAAt5B,UAAAqG,gBAAR,SAAwBsoB,GAEvB,GAAIZ,EACJ,IAAIF,EACJ,IAAIe,GAAqB,CACzB,IAAIxoB,GAAsB,GAAI8kB,GAE9B2C,GAAW3tB,KAAKstB,eAAehnB,iBAC/BunB,GAAW7tB,KAAKstB,eAAevgB,SAAW4gB,CAE1C,IAAIc,EAAU,CAEb,MAAOzuB,KAAKstB,eAAevgB,SAAW8gB,EAAU,CAC/C,GAAIc,EACJ,IAAIC,EACJ,IAAI3rB,EAEJ2rB,GAAM5uB,KAAKstB,eAAernB,mBAC1B0oB,GAAM3uB,KAAKstB,eAAehnB,iBAE1B,IAAKtG,KAAKstB,eAAevgB,SAAW4hB,EAAOd,EAAU,CACpDvmB,QAAQC,IAAI,0CAA4CmnB,EAAc,sCACtE1uB,MAAKstB,eAAevgB,SAAW8gB,CAC/B,OAAO3nB,GAGR,GAAIuoB,EAAStpB,eAAeypB,EAAInc,YAAa,CAC5CxP,EAAOwrB,EAASG,EAChB1oB,GAAMhG,IAAI0uB,EAAK5uB,KAAK6uB,eAAe5rB,EAAM0rB,QACnC,CACN3uB,KAAKstB,eAAevgB,UAAY4hB,EAGjCD,GAAe,OAGV,CACN1uB,KAAKstB,eAAevgB,SAAW8gB,EAGhC,MAAO3nB,GAIAkzB,GAAAt5B,UAAA+uB,eAAR,SAAuB5rB,EAAa0rB,GAEnC,GAAIG,EACJ,IAAIC,EAEJ,QAAQ9rB,GAEP,IAAKm2B,GAAUhpB,KACf,IAAKgpB,GAAUjL,KACdW,EAAW,CACXC,GAAY/uB,KAAKstB,eAAelP,QAChC,MAED,KAAKgb,GAAUhL,MACdU,EAAW,CACXC,GAAY/uB,KAAKstB,eAAevjB,SAChC,MAED,KAAKqvB,GAAUplB,MACd8a,EAAW,CACXC,GAAY/uB,KAAKstB,eAAee,OAChC,MAED,KAAK+K,GAAUruB,MACd+jB,EAAW,CACXC,GAAY/uB,KAAKstB,eAAe3mB,gBAChC,MAED,KAAKyyB,GAAUzoB,OACdme,EAAW,CACXC,GAAY/uB,KAAKstB,eAAernB,iBAChC,MAED,KAAKmzB,GAAU3kB,OACf,IAAK2kB,GAAUnpB,MACf,IAAKmpB,GAAU/yB,MACdyoB,EAAW,CACXC,GAAY/uB,KAAKstB,eAAehnB,eAChC,MAED,KAAK8yB,GAAU9K,QACdQ,EAAW,CACXC,GAAY/uB,KAAKstB,eAAelS,SAChC,MAED,KAAKge,GAAU7K,QACdO,EAAW,CACXC,GAAY/uB,KAAKstB,eAAekB,UAChC,MAED,KAAK4K,GAAUtf,UACd,MAAO9Z,MAAKstB,eAAexlB,aAAa6mB,EAEzC,KAAKyK,GAAUpK,UACf,IAAKoK,GAAUnK,UACf,IAAKmK,GAAUlK,UACf,IAAKkK,GAAUjK,OACf,IAAKiK,GAAUhK,OACf,IAAKgK,GAAU/J,OACf,IAAK+J,GAAUpiB,OACd8X,EAAW,CACXC,GAAY/uB,KAAKstB,eAAekB,UAChC,OAIF,GAAIM,EAAWH,EAAK,CACnB,GAAIW,KACJ,IAAIC,GAAkB,CACtB,IAAIC,GAAmBb,EAAIG,CAE3B,OAAOS,EAAWC,EAAW,CAC5BF,EAAKzsB,KAAKksB,EAAUU,MAAMzvB,KAAKstB,gBAC/BiC,KAGD,MAAOD,OACD,CAEN,GAAII,GAAUX,EAAUU,MAAMzvB,KAAKstB,eACnC,OAAOoC,IAID0J,GAAAt5B,UAAAq2B,YAAR,WAEC,GAAIjE,EACJ,IAAI8F,EAEJh4B,MAAKi2B,UAAUlpB,SAAW,CAE1B/M,MAAKs5B,SAAS,GAAKt5B,KAAKi2B,UAAUtvB,kBAClC3G,MAAKs5B,SAAS,GAAKt5B,KAAKi2B,UAAUtvB,kBAElCurB,GAAQlyB,KAAKi2B,UAAUhwB,mBAEvBjG,MAAKi4B,WAAaiC,GAASld,KAAKkV,EAAOgI,GAASjd,MAEhD,IAAKjd,KAAKs5B,SAAS,IAAM,GAAOt5B,KAAKs5B,SAAS,IAAM,EAAI,CACvDt5B,KAAK0sB,gBAAkBwN,GAASld,KAAKkV,EAAOgI,GAAS/c,MACrDnd,MAAK8sB,aAAeoN,GAASld,KAAKkV,EAAOgI,GAAS7c,MAClDrd,MAAK4sB,eAAiBsN,GAASld,KAAKkV,EAAOgI,GAAS3c,OAMrDvd,KAAKotB,WAAagM,EAAU9K,OAE5B,IAAItuB,KAAK8sB,aAAc,CACtB9sB,KAAKotB,WAAagM,EAAU7K,QAG7BvuB,KAAKgtB,cAAgBoM,EAAU9K,OAE/B,IAAItuB,KAAK0sB,gBAAiB,CACzB1sB,KAAKgtB,cAAgBoM,EAAU7K,QAGhCvuB,KAAKktB,aAAekM,EAAU9K,OAE9B,IAAItuB,KAAK4sB,eAAgB,CACxB5sB,KAAKktB,aAAekM,EAAU7K,QAG/BvuB,KAAKo2B,aAAep2B,KAAKi2B,UAAUtvB,kBAEnC,IAAI3G,KAAKmrB,OAAQ,CAChB7jB,QAAQC,IAAI,+BAAiCvH,KAAKs5B,SAAS,GAAK,MAAQt5B,KAAKs5B,SAAS,GACtFhyB,SAAQC,IAAI,mCAAqCvH,KAAKo2B,aAAe,kBAAoBp2B,KAAKi4B,WAAa,yBAA2Bj4B,KAAK0sB,gBAAkB,2BAA6B1sB,KAAK8sB,aAAe,6BAA+B9sB,KAAK4sB,gBAInPoL,EAAWh4B,KAAKi2B,UAAU3vB,iBAC1B,KAAKtG,KAAKi4B,YAAcD,GAAYh4B,KAAKi2B,UAAUM,oBAAqB,CACvEv2B,KAAKq2B,eAAe,2DAKd+C,GAAAt5B,UAAA2pB,wBAAR,SAAgCkG,GAE/B,GAAI3vB,KAAKqrB,QAAQsE,GAAQvoB,eAAgB4R,GACxC2W,EAAS3vB,KAAKqrB,QAAQsE,GAAQxW,KAC/B,IAAInZ,KAAKqrB,QAAQsE,GAAQC,sBACxB,MAAO5vB,MAAKqrB,QAAQsE,GAAQC,qBAC7B,IAAI1G,GAAgClpB,KAAKqrB,QAAQsE,GAAQvoB,IACzD,IAAIyoB,GAAwB,CAC5B,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIjxB,EACJ,IAAIkxB,EACJ,IAAIC,EACJnwB,MAAKqrB,QAAQsE,GAAQC,sBAAwB,GAAIntB,MACjD,OAAOotB,EAAS3G,EAASU,cAAcrqB,OAAQ,CAC9C2wB,EAAS,GAAIztB,MACb0tB,GAAiCjH,EAASU,cAAciG,EACxDI,GAAYE,EAASC,WACrBN,GAAKK,EAAStiB,GACdkiB,GAAUI,EAASE,UAAUlkB,EAAoBmkB,QACjDN,GAAQG,EAASI,UAAUpkB,EAAoBmkB,QAC/C,KAAKtxB,EAAI,EAAGA,EAAIixB,EAAWjxB,IAAK,CAC/BkxB,EAAOrtB,KAAKitB,EAAGE,EAAQhxB,EAAE+wB,EAAU,GACnCG,GAAOrtB,KAAKitB,EAAGE,EAAQhxB,EAAE+wB,EAAU,IAEpC/vB,KAAKqrB,QAAQsE,GAAQC,sBAAsB/sB,KAAKqtB,EAChDL,KAED,MAAO7vB,MAAKqrB,QAAQsE,GAAQC,sBAGrBwJ,GAAAt5B,UAAAiG,YAAR,WAGC,GAAI4oB,GAAa3uB,KAAKstB,eAAernB,mBACrC,OAAOjG,MAAKstB,eAAexlB,aAAa6mB,GAGjCyK,GAAAt5B,UAAAkH,aAAR,SAAqBypB,EAAgByM,EAA+BtM,GAAA,GAAAA,QAAA,GAAsC,CAAtCA,EAAA,gBAEnE,GAAIuM,GAAyB,GAAI16B,MACjC,IAAI26B,GAAiB,CACrB,IAAI3M,EAAU,EAAG,CAChB,GAAIzwB,KAAKqrB,QAAQoF,GAAU,CAC1B,GAAIzwB,KAAKqrB,QAAQoF,GAASrpB,KAAM,CAC/B,MAAOg2B,EAAUF,EAAgB39B,OAAQ,CAExC,GAAI89B,GAAyBr9B,KAAKqrB,QAAQoF,GAASrpB,IAEnD,IAAIi2B,EAAO1M,WAAauM,EAAgBE,GAAU,CAEjD,GAAKF,EAAgBE,IAAYtS,EAAY6F,WAAeC,GAAiB,cAAgB,CAC5F,GAAI5wB,KAAKqrB,QAAQoF,GAASrpB,eAAgBusB,GAAkB,CAC3DwJ,EAAYt6B,KAAK,KACjBs6B,GAAYt6B,KAAK7C,KAAKqrB,QAAQoF,GAASrpB,KACvC,OAAO+1B,IAGT,GAAKD,EAAgBE,IAAYtS,EAAY6F,WAAeC,GAAiB,gBAAkB,CAC9F,GAAI5wB,KAAKqrB,QAAQoF,GAASrpB,eAAgBqxB,GAAc,CACvD0E,EAAYt6B,KAAK,KACjBs6B,GAAYt6B,KAAK7C,KAAKqrB,QAAQoF,GAASrpB,KACvC,OAAO+1B,QAEF,CACNA,EAAYt6B,KAAK,KACjBs6B,GAAYt6B,KAAK7C,KAAKqrB,QAAQoF,GAASrpB,KACvC,OAAO+1B,IAKT,GAAKD,EAAgBE,IAAYnxB,EAAS0kB,WAAe0M,EAAO1M,WAAa3X,EAAK2X,UAAY,CAE7F,GAAInX,GAAmBxZ,KAAKqrB,QAAQoF,GAASrpB,IAE7C+1B,GAAYt6B,KAAK,KACjBs6B,GAAYt6B,KAAK2W,EAAK0P,SACtB,OAAOiU,GAIRC,OAMJD,EAAYt6B,KAAK,MACjBs6B,GAAYt6B,KAAK7C,KAAK0wB,gBAAgBwM,EAAgB,GAAItM,GAC1D,OAAOuM,GAEA/D,GAAAt5B,UAAA4wB,gBAAR,SAAwBC,EAAkBC,GAEzC,OAAQ,MACP,IAAMD,IAAa7F,EAAY6F,UAC9B,GAAIC,GAAiB,cACpB,MAAO5wB,MAAKsX,uBACb,IAAIsZ,GAAiB,gBACpB,MAAO9d,GAAuBwB,mBAC/B,MACD,KAAMqc,IAAa5F,EAAa4F,UAC/B,MAAO7d,GAAuB+d,oBAC9B,MACD,SACC,MAGF,MAAO,MAGAuI,GAAAt5B,UAAAwX,sBAAR,WAEC,IAAKtX,KAAK8wB,oBAAqB,CAC9B,GAAIC,GAA2Bje,EAAuBke,2BAEtDhxB,MAAK8wB,oBAAsB,GAAIjG,GAAkBkG,EAAeA,EAAeA,EAAeA,EAAeA,EAAeA,EAC5H/wB,MAAK8wB,oBAAoBhrB,KAAO,qBAGjC,MAAgB9F,MAAK8wB,oBAGdsI,GAAAt5B,UAAA4N,WAAR,SAAmBujB,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,MAElB,GAAIA,EACH,MAAOjxB,MAAKstB,eAAekB,YAC5B,OAAOxuB,MAAKstB,eAAelS,YAIpBge,GAAAt5B,UAAA8J,cAAR,WAEC,MAAO,IAAIqQ,GAASja,KAAKglB,wBAGlBoU,GAAAt5B,UAAAoxB,qBAAR,WAEC,GAAIlyB,EACJ,IAAImyB,GAAwB,GAAI1uB,OAAc,EAC9C,KAAKzD,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvBmyB,EAAQnyB,GAAKgB,KAAKstB,eAAelS,YAGlC,MAAO+V,GAGAiI,GAAAt5B,UAAAklB,qBAAR,WAEC,GAAImM,GAAwB,GAAI1uB,OAAc,GAE9C0uB,GAAQ,GAAKnxB,KAAK0N,WAAW1N,KAAK0sB,gBAClCyE,GAAQ,GAAKnxB,KAAK0N,WAAW1N,KAAK0sB,gBAClCyE,GAAQ,GAAKnxB,KAAK0N,WAAW1N,KAAK0sB,gBAClCyE,GAAQ,GAAK,CACbA,GAAQ,GAAKnxB,KAAK0N,WAAW1N,KAAK0sB,gBAClCyE,GAAQ,GAAKnxB,KAAK0N,WAAW1N,KAAK0sB,gBAClCyE,GAAQ,GAAKnxB,KAAK0N,WAAW1N,KAAK0sB,gBAClCyE,GAAQ,GAAK,CACbA,GAAQ,GAAKnxB,KAAK0N,WAAW1N,KAAK0sB,gBAClCyE,GAAQ,GAAKnxB,KAAK0N,WAAW1N,KAAK0sB,gBAClCyE,GAAQ,IAAMnxB,KAAK0N,WAAW1N,KAAK0sB,gBACnCyE,GAAQ,IAAM,CACdA,GAAQ,IAAMnxB,KAAK0N,WAAW1N,KAAK0sB,gBACnCyE,GAAQ,IAAMnxB,KAAK0N,WAAW1N,KAAK0sB,gBACnCyE,GAAQ,IAAMnxB,KAAK0N,WAAW1N,KAAK0sB,gBACnCyE,GAAQ,IAAM,CAId,IAAIC,MAAMD,EAAQ,IAAK,CACtBA,EAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,IAAM,CACdA,GAAQ,IAAM,CACdA,GAAQ,IAAM,CACdA,GAAQ,IAAM,EAIf,MAAOA,GAl5GMiI,GAAAvH,qBAA8B,MAC9BuH,GAAAtH,aAAsB,CACtBsH,GAAArH,QAAiB,CACjBqH,GAAApH,KAAc,CACdoH,GAAAjL,KAAc,CACdiL,GAAAhL,MAAe,CACfgL,GAAAplB,MAAe,CACfolB,GAAAruB,MAAe,CACfquB,GAAAzoB,OAAgB,CAChByoB,GAAA3kB,OAAgB,CAChB2kB,GAAA9K,QAAiB,CACjB8K,GAAA7K,QAAiB,CACjB6K,GAAAhpB,KAAc,EACdgpB,GAAAnpB,MAAe,EACfmpB,GAAA/yB,MAAe,EACf+yB,GAAAtf,UAAmB,EACnBsf,GAAAnH,aAAsB,EACtBmH,GAAApK,UAAmB,EACnBoK,GAAAnK,UAAmB,EACnBmK,GAAAlK,UAAmB,EACnBkK,GAAAjK,OAAgB,EAChBiK,GAAAhK,OAAgB,EAChBgK,GAAA/J,OAAgB,EAChB+J,GAAApiB,OAAgB,EA83G/B,OAAAoiB,IAt7GwB3F,EA07GxB,IAAMxI,IAAQ,WAYb,QAZKA,MAgBEA,EAAAnrB,UAAA2sB,QAAP,WAGCzsB,KAAKkJ,GAAK,IACVlJ,MAAKgzB,MAAQ,IACbhzB,MAAKizB,cAAgB;;AACrBjzB,KAAK4vB,sBAAwB,KAIvB3E,GAAAnrB,UAAAozB,SAAP,SAAgBC,GAEf,IAAKnzB,KAAKizB,cACTjzB,KAAKizB,cAAgB,GAAIxwB,MAE1BzC,MAAKizB,cAAcpwB,KAAKswB,GAE1B,OAAAlI,KAEA,IAAMD,IAAa,WAAnB,QAAMA,MAEEA,EAAAlrB,UAAAI,IAAP,SAAW0uB,EAAYwE,GAEtBpzB,KAAM4uB,EAAInc,YAAe2gB,EAGnBpI,GAAAlrB,UAAAC,IAAP,SAAW6uB,EAAYyE,GAEtB,GAAIrzB,KAAKmF,eAAeypB,EAAInc,YAAa,CACxC,MAAOzS,MAAK4uB,EAAInc,gBACV,CACN,MAAO4gB,IAGV,OAAArI,KpC2jFA,IoCtjFMkP,IAAQ,WAAd,QAAMA,MAmBSA,EAAAld,KAAd,SAAmBkV,EAAcC,GAEhC,OAAQD,EAAQC,IAAaA,EAnBhB+H,GAAAjd,MAAe,CACfid,GAAA/c,MAAe,CACf+c,GAAA7c,MAAe,CACf6c,GAAA3c,MAAe,CACf2c,GAAAlc,MAAe,EACfkc,GAAA/b,MAAe,EACf+b,GAAA7b,MAAe,EACf6b,GAAA3b,MAAe,GACf2b,GAAA9H,MAAe,GACf8H,GAAA7H,OAAgB,GAChB6H,GAAA5H,OAAgB,IAChB4H,GAAA3H,OAAgB,IAChB2H,GAAA1H,OAAgB,IAChB0H,GAAAzH,OAAgB,IAChByH,GAAAxH,OAAgB,KAChBwH,GAAAvH,OAAgB,KAM/B,OAAAuH,KAhFAz6B,GAAAJ,QAAS+5B,KpCyoFN/H,iCAAiC7wB,UAAU+O,wCAAwC/O,UAAUgP,gCAAgChP,UAAUiP,2CAA2CjP,UAAUse,sCAAsCte,UAAUue,gCAAgCve,UAAUyK,gCAAgCzK,UAAU03B,0CAA0C13B,UAAU23B,iCAAiC33B,UAAU43B,qCAAqC53B,UAAU63B,sCAAsC73B,UAAU0K,8DAA8D1K,UAAU2K,qDAAqD3K,UAAU4K,oDAAoD5K,UAAU8wB,6CAA6C9wB,UAAU83B,4CAA4C93B,UAAU88B,wCAAwC98B,UAAU+wB,uCAAuC/wB,UAAU6H,kCAAkC7H,UAAU+8B,uDAAuD/8B,UAAUg9B,oCAAoCh9B,UAAUwL,uDAAuDxL,UAAUqI,wCAAwCrI,UAAU6K,qCAAqC7K,UAAUqR,+CAA+CrR,UAAUqZ,mCAAmCrZ,UAAUsR,yCAAyCtR,UAAUolB,qCAAqCplB,UAAUwe,wCAAwCxe,UAAUyX,qDAAqDzX,UAAUsI,6CAA6CtI,UAAU0X,6CAA6C1X,UAAUgxB,4CAA4ChxB,UAAUi9B,4DAA4Dj9B,UAAUkS,8DAA8DlS,UAAUuR,iEAAiEvR,UAAUwR,qEAAqExR,UAAUugB,wCAAwCvgB,UAAUwgB,oDAAoDxgB,UAAUygB,iDAAiDzgB,UAAU0gB,iDAAiD1gB,UAAU2gB,qDAAqD3gB,UAAU4gB,kDAAkD5gB,UAAU6gB,mDAAmD7gB,UAAU8gB,kDAAkD9gB,UAAU+lB,+BAA+B/lB,UAAUonB,qCAAqCpnB,UAAU2X,4CAA4C3X,UAAU4X,gDAAgD5X,UAAU6X,yDAAyD7X,UAAU8X,sDAAsD9X,UAAU+X,wDAAwD/X,UAAUgY,2DAA2DhY,UAAUiY,2DAA2DjY,UAAUkY,uDAAuDlY,UAAUk9B,2DAA2Dl9B,UAAU0iB,6DAA6D1iB,UAAU2iB,gEAAgE3iB,UAAUm9B,wDAAwDn9B,UAAU4iB,qDAAqD5iB,UAAUo9B,+DAA+Dp9B,UAAUq9B,0DAA0Dr9B,UAAUs9B,sDAAsDt9B,UAAU6iB,0DAA0D7iB,UAAUmY,6DAA6DnY,UAAU0hB,0DAA0D1hB,UAAU2hB,0DAA0D3hB,UAAU4hB,sDAAsD5hB,UAAUu9B,yDAAyDv9B,UAAU6hB,sDAAsD7hB,UAAU8hB,sDAAsD9hB,UAAUoY,+DAA+DpY,UAAUqY,uDAAuDrY,UAAUsY,2DAA2DtY,UAAUuY,yDAAyDvY,UAAU0e,mDAAmD1e,UAAU2e,8CAA8C3e,UAAU4e,6DAA6D5e,UAAU6e,4DAA4D7e,UAAU8e,2DAA2D9e,UAAU+e,mEAAmE/e,UAAUgf,6DAA6Dhf,UAAUif,qDAAqDjf,UAAUkf,4DAA4Dlf,UAAUw9B,mDAAmDx9B,UAAUiqB,uDAAuDjqB,UAAUiH,mDAAmDjH,UAAUkqB,qDAAqDlqB,UAAUkH,iDAAiDlH,UAAU8kB,iDAAiD9kB,UAAUujB,gDAAgDvjB,UAAUwjB,qDAAqDxjB,UAAU+kB,oDAAoD/kB,UAAUikB,yDAAyDjkB,UAAUqpB,uDAAuDrpB,YAAYy9B,gCAAgC,SAAS1/B,EAAQkB,EAAOJ,GAC3pL,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GqChsMtB,IAAO6G,GAAQ1N,EAAiB,gCAChC,IAAO4N,GAAmB5N,EAAc,2CAExC,IAAOg1B,GAAmBh1B,EAAc,0CACxC,IAAOi1B,GAAUj1B,EAAgB,iCACjC,IAAOk1B,GAAUl1B,EAAgB,qCACjC,IAAOm1B,GAAWn1B,EAAgB,sCAKlC,IAAOqN,GAAsBrN,EAAa,uDAG1C,IAAOya,GAAIza,EAAkB,mCAC7B,IAAOuU,GAAsBvU,EAAa,qDAE1C,IAAOuqB,GAAcvqB,EAAe,uDACpC,IAAOurB,GAAkBvrB,EAAc,qDAEvC,IAAOqU,GAAcrU,EAAe,4CACpC,IAAOoU,GAAkBpU,EAAc,gDrC6rMvC,IqCxrMM2/B,GAAS,SAAAx4B,GAASX,EAAlBm5B,EAASx4B,EAsDd,SAtDKw4B,GAsDOC,EAA4BC,GAA5B,GAAAD,QAAA,GAA0B,CAA1BA,EAAA,MAA4B,GAAAC,QAAA,GAAgC,CAAhCA,EAAA,KAEvC14B,EAAApG,KAAAU,KAAMuzB,EAAoBQ,aApDnB/zB,MAAAq+B,WAAoB,GAAIz+B,OA+BxBI,MAAAs+B,cAAmC,GAAIxU,EAWvC9pB,MAAAu+B,cAAwB,KACxBv+B,MAAAw+B,WAAqB,KAU5Bx+B,MAAKy+B,aAAeN,CACpBn+B,MAAK0+B,mBAAqBN,EAQbF,EAAA3J,aAAd,SAA2BC,GAE1BA,EAAYA,EAAUC,aACtB,OAAOD,IAAa,MAQP0J,GAAAxJ,aAAd,SAA2BttB,GAE1B,MAAQssB,GAAYjhB,SAASrL,EAAM,IAAM,OAMnC82B,GAAAp+B,UAAA60B,oBAAP,SAA2BC,GAE1B,GAAIA,EAAmBC,OAAOt1B,QAAU,EACvC,MAED,IAAIwJ,GAAsC6rB,EAAmBC,OAAO,EAEpE,IAAI9rB,EAAO,CACV,GAAI2Q,GAA0B,GAAI9G,GAAe7J,EAEjD,IAAI/I,KAAK+8B,cAAgB,EACxBrjB,EAASzE,KAAOtC,EAAmBuC,UAGVlV,MAAK82B,UAAWpsB,SAAS1K,KAAK2+B,MAExDjlB,GAAS5T,KAAO9F,KAAK2+B,MAAMjlB,SAAS5T,IACpC9F,MAAK2+B,MAAMjlB,SAAWA,CACtB1Z,MAAKi1B,gBAAgBvb,EACrB1Z,MAAKi1B,gBAAgBj1B,KAAK2+B,MAAMzV,SAChClpB,MAAKi1B,gBAAgBj1B,KAAK2+B,OAE3B3+B,KAAKu+B,cAAgB,KAMfL,GAAAp+B,UAAA41B,2BAAP,SAAkCd,GAGjC,GAAI50B,KAAK+8B,aAAe,EAAG,CAC1B/8B,KAAK2+B,MAAMjlB,SAAW5G,EAAuB+d,yBACvC,CACN7wB,KAAK2+B,MAAMjlB,SAAW,GAAI9G,GAAeE,EAAuBwB,oBAC9CtU,MAAK2+B,MAAMjlB,SAAUzE,KAAOtC,EAAmBuC,WAIxClV,KAAK82B,UAAWpsB,SAAS1K,KAAK2+B,MAExD3+B,MAAKi1B,gBAAgBj1B,KAAK2+B,MAAMzV,SAChClpB,MAAKi1B,gBAAgBj1B,KAAK2+B,MAC1B3+B,MAAKu+B,cAAgB,KAOfL,GAAAp+B,UAAAk2B,iBAAP,WAEC,IAAKh2B,KAAKg0B,gBAAiB,CAC1Bh0B,KAAKi2B,UAAYj2B,KAAKk2B,eACtBl2B,MAAKg0B,gBAAkB,IAIvBh0B,MAAKi2B,UAAUlpB,SAAW,EAG3B,MAAO/M,KAAK4+B,YAAa,CACxB,IAAK5+B,KAAK6+B,cAAe,CAQxB7+B,KAAK8+B,UAAY,GAAI7yB,EACrBjM,MAAK2+B,MAAQ,GAAI3lB,GAAKhZ,KAAK8+B,UAAW,KACtC,IAAI9+B,KAAK+8B,aAAe,EAAG,CAC1B/8B,KAAK2+B,MAAMjlB,SAAW5G,EAAuB+d,yBACvC,CACN7wB,KAAK2+B,MAAMjlB,SAAW,GAAI9G,GAAeE,EAAuBwB,oBAC9CtU,MAAK2+B,MAAMjlB,SAAUzE,KAAOtC,EAAmBuC,WAOlElV,KAAKm2B,aACLn2B,MAAK++B,yBACC,KAAK/+B,KAAKg/B,UAAW,CAC3Bh/B,KAAKi/B,cACC,KAAKj/B,KAAKk/B,aAAc,CAC9Bl/B,KAAKm/B,iBACC,KAAKn/B,KAAKo/B,cAAe,CAC/Bp/B,KAAKq/B,kBACC,IAAKr/B,KAAe,YAAMA,KAAkB,cAAG,CACrD,MAAOyzB,GAAWiD,iBACZ,KAAK12B,KAAKw+B,WAAY,CAC5Bx+B,KAAKw+B,WAAa,IAElBx+B,MAAK8+B,UAAUrwB,eAAezO,KAAKs/B,cAAcC,QAEjDv/B,MAAK2+B,MAAM74B,KAAO,EAClB,IAAI9F,KAAKu+B,cAAe,CAEGv+B,KAAK82B,UAAWpsB,SAAS1K,KAAK2+B,MAExD3+B,MAAKi1B,gBAAgBj1B,KAAK2+B,MAAMzV,SAChClpB,MAAKi1B,gBAAgBj1B,KAAK2+B,OAG3B3+B,KAAK63B,kCAIP,MAAOpE,GAAWkD,cAGZuH,GAAAp+B,UAAA82B,eAAP,SAAsBC,GAErBnxB,EAAA5F,UAAM82B,eAAct3B,KAAAU,KAAC62B,EAGrB72B,MAAK82B,UAAY,GAAIlrB,GAOdsyB,GAAAp+B,UAAAq2B,YAAR,WAECn2B,KAAKw/B,OAASx/B,KAAKi2B,UAAU5H,SAC7BruB,MAAKs5B,SAAWt5B,KAAKi2B,UAAU5H,SAC/BruB,MAAKy/B,WAAaz/B,KAAKi2B,UAAU5H,SACjCruB,MAAK0/B,YAAc1/B,KAAKi2B,UAAU5H,SAElCruB,MAAKi2B,UAAU5H,SACfruB,MAAK2/B,UAAY3/B,KAAKi2B,UAAU5H,SAChCruB,MAAK4/B,aAAe5/B,KAAKi2B,UAAU5H,SACnCruB,MAAK6/B,OAAS7/B,KAAKi2B,UAAU5H,SAC7BruB,MAAK8/B,SAAW9/B,KAAKi2B,UAAU5H,SAE/BruB,MAAKi2B,UAAU5H,SACfruB,MAAK+/B,WAAa//B,KAAKi2B,UAAU5H,SACjCruB,MAAKggC,aAAehgC,KAAKi2B,UAAU5H,SACnCruB,MAAKigC,UAAYjgC,KAAKi2B,UAAU5H,SAChCruB,MAAKkgC,YAAclgC,KAAKi2B,UAAU5H,SAClCruB,MAAKmgC,cAAgBngC,KAAKi2B,UAAU5H,SAEpCruB,MAAKi2B,UAAU5H,SACfruB,MAAKogC,WAAapgC,KAAKi2B,UAAU5H,SAEjCruB,MAAK6+B,cAAgB,KAMdX,GAAAp+B,UAAAi/B,mBAAR,WAEC,GAAIl3B,EACJ,IAAI/B,EACJ,IAAIu6B,EACJ,IAAIC,EACJtgC,MAAKugC,eAAiB,GAAI99B,MAC1BzC,MAAKi2B,UAAUlpB,SAAW/M,KAAKggC,YAE/B,IAAIQ,GAAgB,GAAIC,QAAO,oBAAsB,IACrD,KAAK,GAAIzhC,GAAoB,EAAGA,EAAIgB,KAAK2/B,YAAa3gC,EAAG,CACxD8G,EAAO9F,KAAKi2B,UAAUnuB,aAAa,GACnChC,GAAOA,EAAK46B,QAAQF,EAAQ,GAC5BH,GAAWv6B,EAAK66B,YAAY,IAC5B,IAAI3gC,KAAK0+B,mBACR4B,EAAax6B,EAAK66B,YAAY,IAC/B,IAAI76B,EAAK2uB,cAAcmM,QAAQ,UAAY,GAAK96B,EAAK2uB,cAAcmM,QAAQ,UAAY,EAAG,CACzF96B,EAAOA,EAAK+6B,UAAUP,EAAa,EAAGD,EACtCx4B,GAAM/B,EAAO,IAAM9F,KAAKy+B,iBAClB,CACN52B,EAAM/B,EAGP9F,KAAKugC,eAAevhC,GAAK8G,CAGzB,IAAI9F,KAAK8gC,aAAavhC,QAAU,EAC/BS,KAAK23B,gBAAgB7xB,EAAM,GAAI0tB,GAAW3rB,IAG5C,GAAI7H,KAAKugC,eAAehhC,OAAS,EAChCS,KAAK2+B,MAAMjlB,SAAS5T,KAAO9F,KAAKugC,eAAe,OAC/CvgC,MAAKu+B,cAAgB,KAMfL,GAAAp+B,UAAAm/B,QAAR,WAEC,GAAIpkB,GAAoB,CAExB7a,MAAK+gC,KAAO,GAAIt+B,OAAczC,KAAK6/B,OAAO,EAC1C7/B,MAAKi2B,UAAUlpB,SAAW/M,KAAKigC,SAC/B,KAAK,GAAIjhC,GAAoB,EAAGA,EAAIgB,KAAK6/B,OAAQ7gC,IAAK,CACrDgB,KAAK+gC,KAAKlmB,KAAO7a,KAAKi2B,UAAUlsB,YAAY/J,KAAKy/B,UACjDz/B,MAAK+gC,KAAKlmB,KAAO7a,KAAKi2B,UAAUlsB,YAAY/J,KAAK0/B,YAGlD1/B,KAAKg/B,UAAY,KAMVd,GAAAp+B,UAAAq/B,WAAR,WAEC,GAAIpgC,GAAmBkG,EAAmB6V,EAAmBkmB,EAAoBC,EAAoBC,CACrG,IAAIliC,EAEJgB,MAAKmhC,aAAe,GAAI1+B,MACxBzC,MAAKohC,WAAa,GAAI3+B,MACtBzC,MAAKqhC,SAAW,GAAI5+B,MAEpBzC,MAAKi2B,UAAUlpB,SAAW/M,KAAKkgC,WAE/B,KAAKlhC,EAAI,EAAGA,EAAIgB,KAAK8/B,SAAU9gC,IAAK,CAEnCD,EAAIiB,KAAKi2B,UAAUhwB,mBACnBhB,GAAIjF,KAAKi2B,UAAUhwB,mBACnB6U,GAAI9a,KAAKi2B,UAAUhwB,mBAGnB+6B,GAAKhhC,KAAKi2B,UAAUhwB,mBACpBg7B,GAAKjhC,KAAKi2B,UAAUhwB,mBACpBi7B,GAAKlhC,KAAKi2B,UAAUhwB,mBAEpBjG,MAAKshC,SAASviC,EAAGiiC,EACjBhhC,MAAKshC,SAASr8B,EAAGg8B,EACjBjhC,MAAKshC,SAASxmB,EAAGomB,GAGlB,GAAIvS,GAAsB3uB,KAAKohC,WAAW7hC,MAC1CS,MAAKuhC,SAAW,GAAI9+B,OAAcksB,EAAI,EAEtC,KAAK3vB,EAAI,EAAGA,EAAI2vB,IAAO3vB,EAAG,CACzBgB,KAAKuhC,SAASviC,GAAK,GAAKgB,KAAK+gC,KAAK/gC,KAAKohC,WAAWpiC,IAAM,EACxDgB,MAAKuhC,UAAUviC,GAAK,GAAK,GAAKgB,KAAK+gC,MAAM/gC,KAAKohC,WAAWpiC,IAAM,GAAK,GAGrEgB,KAAKk/B,aAAe,KASbhB,GAAAp+B,UAAAwhC,SAAR,SAAiBE,EAA6BC,GAE7C,GAAIC,GAAuB1hC,KAAK2hC,UAAUH,EAAaC,EAEvD,IAAIC,IAAU,EAAG,CAChB1hC,KAAKqhC,SAASx+B,KAAK7C,KAAKmhC,aAAa5hC,OACrCS,MAAKmhC,aAAat+B,KAAK2+B,EACvBxhC,MAAKohC,WAAWv+B,KAAK4+B,OAErBzhC,MAAKqhC,SAASx+B,KAAK6+B,GASbxD,GAAAp+B,UAAA6hC,UAAR,SAAkBH,EAA6BC,GAE9C,GAAI9S,GAAsB3uB,KAAKmhC,aAAa5hC,MAE5C,KAAK,GAAIP,GAAoB,EAAGA,EAAI2vB,IAAO3vB,EAAG,CAC7C,GAAIgB,KAAKmhC,aAAaniC,IAAMwiC,GAAexhC,KAAKohC,WAAWpiC,IAAMyiC,EAChE,MAAOziC,GAGT,OAAQ,EAMDk/B,GAAAp+B,UAAAu/B,YAAR,WAEC,GAAIuC,GAAWC,EAAWC,CAC1B,IAAIlI,GAAWmI,EAAWC,CAC1B,IAAI9Y,EACJ,IAAIC,EACJ,IAAI8Y,GAA0BjiC,KAAKmhC,aAAa5hC,MAChD,IAAI2iC,EACJ,IAAIC,EACJ,IAAInjC,GAAmB6b,EAAkBzI,CrC8lMnC,IqC5lMFtM,GAAc,EAClB,IAAIs8B,GAA0B,IAE9BpiC,MAAKi2B,UAAUlpB,SAAW/M,KAAKmgC,aAE/B,KAAKnhC,EAAI,EAAGA,EAAIgB,KAAK+/B,WAAY/gC,IAAK,CAErCmjC,EAAY,GAAI1/B,MAChBy/B,GAAY,GAAIz/B,OAAcw/B,EAAQ,EAEtCL,GAAK5hC,KAAKi2B,UAAU7a,WACpBymB,GAAK7hC,KAAKi2B,UAAU7a,WACpB0mB,GAAK9hC,KAAKi2B,UAAU7a,WAEpBwe,GAAK55B,KAAKi2B,UAAU7a,WACpB2mB,GAAK/hC,KAAKi2B,UAAU7a,WACpB4mB,GAAKhiC,KAAKi2B,UAAU7a,WAEpBtV,GAAO9F,KAAKqiC,eAIZ,KAAKxnB,EAAI,EAAGA,EAAI7a,KAAK4/B,aAAc/kB,IAAK7a,KAAKi2B,UAAUlpB,WACtDo1B,EAAUt/B,KAAK++B,EAAG5hC,KAAKi2B,UAAUtvB,mBAAqBizB,EAAIiI,EAAG7hC,KAAKi2B,UAAUtvB,mBAAqBo7B,EAAID,EAAG9hC,KAAKi2B,UAAUtvB,mBAAqBq7B,EAE7I5vB,GAAI,CACJ,KAAKyI,EAAI,EAAGA,EAAIonB,EAASpnB,IAAK,CAC7BqnB,EAAU9vB,KAAO+vB,EAAUniC,KAAKmhC,aAAatmB,GAAG,EAChDqnB,GAAU9vB,KAAO+vB,EAAUniC,KAAKmhC,aAAatmB,GAAG,EAAI,EACpDqnB,GAAU9vB,KAAO+vB,EAAUniC,KAAKmhC,aAAatmB,GAAG,EAAI,GAGrDsO,EAAU,GAAIhd,GAAoB,KAElC,IAAInM,KAAKs/B,eAAiB,KACzBt/B,KAAKs/B,cAAgBnW,CAEtBD,GAAW,GAAIjd,EACfid,GAASza,eAAe0a,EAExBA,GAAQ9a,cAAcrO,KAAKqhC,SAC3BlY,GAAQ7a,gBAAgB4zB,EACxB/Y,GAAQ3a,UAAUxO,KAAKuhC,SACvBpY,GAAQmZ,aACRnZ,GAAQoZ,cACRpZ,GAAQva,kBAAoB,KAC5Bua,GAAQra,mBAAqB,KAE7B,IAAIsV,GAAsBpkB,KAAKq+B,WAAWv4B,EAE1C,KAAKse,EAAM,CAIV,GAAIge,EAAU,CACbpiC,KAAKi1B,gBAAgBmN,EACrBpiC,MAAKs+B,cAAcjU,aAAa+X,GAGjChe,EAAO,GAAI0E,EACX1E,GAAKte,KAAOA,CACZse,GAAKuF,iBAAmB,IAExB3pB,MAAKq+B,WAAWv4B,GAAQse,CAExBge,GAAWhe,EAEZA,EAAKvF,SAASqK,EAAU,IAAKgV,EAAUsE,KAIxC,GAAIJ,EAAU,CACbpiC,KAAKi1B,gBAAgBmN,EACrBpiC,MAAKs+B,cAAcjU,aAAa+X,GAIjCpiC,KAAKi1B,gBAAgBj1B,KAAKs+B,cAE1Bt+B,MAAKo/B,cAAgB,KAGdlB,GAAAp+B,UAAAuiC,cAAR,WAEC,GAAIv8B,GAAc,EAClB,IAAIsM,GAAoB,CACxB,KAAK,GAAIyI,GAAoB,EAAGA,EAAI,GAAIA,IAAK,CAC5C,GAAI4nB,GAAqBziC,KAAKi2B,UAAUtvB,kBAExC,IAAIgT,KAAK+oB,MAAMD,GAAM,IAAQ9oB,KAAK+oB,MAAMD,IAAO,KAAQrwB,GAAK,EAC3DtM,GAAQ68B,OAAOC,aAAaH,EAE7B,IAAI9oB,KAAK+oB,MAAMD,IAAO,IAAQ9oB,KAAK+oB,MAAMD,IAAO,GAC/CrwB,IAEF,MAAOtM,GA5dMo4B,GAAAsE,IAAqB,CA8dpC,OAAAtE,IAhewBzK,EAkeLh0B,GAAAJ,QAAV6+B,IrCqkMN1uB,gCAAgChP,UAAUiP,2CAA2CjP,UAAU03B,0CAA0C13B,UAAU23B,iCAAiC33B,UAAU43B,qCAAqC53B,UAAU63B,sCAAsC73B,UAAUwL,uDAAuDxL,UAAUqZ,mCAAmCrZ,UAAUyX,qDAAqDzX,UAAU2X,4CAA4C3X,UAAU4X,gDAAgD5X,UAAUkqB,qDAAqDlqB,UAAUqpB,uDAAuDrpB,YAAYqiC,oCAAoC,SAAStkC,EAAQkB,EAAOJ,GAC3vB,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GsCvkNtB,IAAO09B,GAAUvkC,EAAgB,kCACjC,IAAOiL,GAAQjL,EAAiB,gCAChC,IAAOg1B,GAAmBh1B,EAAc,0CACxC,IAAOk1B,GAAUl1B,EAAgB,qCAEjC,IAAOomB,GAASpmB,EAAgB,iDAChC,IAAOmmB,GAAYnmB,EAAgB,oDACnC,IAAO0lB,GAAgB1lB,EAAe,yDtC8kNtC,IsCvkNMwkC,GAAa,SAAAr9B,GAASX,EAAtBg+B,EAAar9B,EAyClB,SAzCKq9B,GAyCOC,EAAwCC,GAAxC,GAAAD,QAAA,GAAsC,CAAtCA,EAAA,KAAwC,GAAAC,QAAA,GAAoC,CAApCA,EAAA,EAEnDv9B,EAAApG,KAAAU,KAAMuzB,EAAoB2P,KAzBnBljC,MAAAmjC,YAA6B,CAE7BnjC,MAAAojC,MAAuB,CACvBpjC,MAAAqjC,eAAgC,CAuBvCrjC,MAAKsjC,cAAgB,GAAIR,EACzB,IAAIS,GAAgB,GAAIT,EACxB,IAAIU,GAAgB,GAAIV,EAExBS,GAAGE,cAAcj6B,EAASk6B,QAAS/pB,KAAKgqB,GAAG,GAC3CH,GAAGC,cAAcj6B,EAASo6B,QAASjqB,KAAKgqB,GAAG,GAE3C3jC,MAAKsjC,cAAcO,SAASL,EAAID,EAEhC,IAAIP,EAAwB,CAC3BhjC,KAAKsjC,cAAcO,SAASL,EAAID,EAChCA,GAAGE,cAAcT,EAAwBC,EACzCjjC,MAAKsjC,cAAcO,SAASN,EAAIvjC,KAAKsjC,gBASzBP,EAAAxO,aAAd,SAA2BC,GAE1BA,EAAYA,EAAUC,aACtB,OAAOD,IAAa,UAQPuO,GAAArO,aAAd,SAA2BttB,GAE1B,MAAO,OAMD27B,GAAAjjC,UAAAk2B,iBAAP,WAEC,GAAI8N,EAEJ,KAAK9jC,KAAKg0B,gBAAiB,CAC1Bh0B,KAAK+jC,UAAY/jC,KAAKgkC,eACtBhkC,MAAKg0B,gBAAkB,KAGxB,MAAOh0B,KAAK4+B,YAAa,CACxBkF,EAAQ9jC,KAAKikC,cACb,QAAQH,GACP,IAAKf,GAAcmB,cAClBlkC,KAAKmkC,YACL,MACD,KAAK,GAEJ,KACD,KAAKpB,GAAcqB,cAClBpkC,KAAKs5B,SAAWt5B,KAAKqkC,YACrB,IAAIrkC,KAAKs5B,UAAY,GACpB,KAAM,IAAIp6B,OAAM,sCACjB,MACD,KAAK6jC,GAAcuB,mBAClBtkC,KAAKukC,UACL,MACD,KAAKxB,GAAcyB,iBAClBxkC,KAAK+/B,WAAa//B,KAAKqkC,YACvBrkC,MAAKykC,QAAU,GAAIhiC,MACnBzC,MAAK0kC,WAAa,GAAIjiC,MACtB,MACD,KAAKsgC,GAAc4B,iBAClB3kC,KAAK4kC,WAAa5kC,KAAKqkC,YACvBrkC,MAAK6kC,WAAa,GAAIpiC,OAAqBzC,KAAK4kC,WAChD5kC,MAAK8kC,eAAiB,GAAIriC,OAAqBzC,KAAK4kC,WACpD,MACD,KAAK7B,GAAcgC,iBAClB/kC,KAAKglC,WAAahlC,KAAKqkC,YACvB,MACD,KAAKtB,GAAckC,8BAClBjlC,KAAKklC,uBAAyBllC,KAAKqkC,YACnC,MACD,KAAKtB,GAAcoC,gBAClBnlC,KAAKolC,gBACL,MACD,KAAKrC,GAAcsC,aAClBrlC,KAAKslC,aACL,MACD,KAAKvC,GAAcwC,iBAClBvlC,KAAKwlC,gBACL,MACD,KAAKzC,GAAc0C,YAClBzlC,KAAK0lC,YACL,MACD,SACC,IAAK1lC,KAAK2lC,YACT3lC,KAAK4lC,0BAGR,GAAI5lC,KAAK2lC,YAAa,CACrB3lC,KAAK6lC,MAAQ,GAAI5hB,EACjBjkB,MAAK8lC,eACL9lC,MAAKi1B,gBAAgBj1B,KAAK6lC,MAC1B,OAAOpS,GAAWiD,cAGpB,MAAOjD,GAAWkD,cAMXoM,GAAAjjC,UAAAgmC,cAAR,WAEC,IAAK,GAAI9mC,GAAmB,EAAGA,EAAIgB,KAAK+/B,aAAc/gC,EACrDgB,KAAK6lC,MAAMhnB,SAAS7e,KAAK+lC,cAAc/lC,KAAK0kC,WAAW1lC,IAAK,IAAKgB,KAAKglC,YAQhEjC,GAAAjjC,UAAAimC,cAAR,SAAsBC,GAErB,GAAIC,EACJ,IAAIrhB,EACJ,IAAIshB,EACJ,IAAIhU,EACJ,IAAIrX,EACJ,IAAIsrB,GAAqB,GAAI38B,EAC7B,IAAIyb,GAAyB,GAAI6d,EACjC,IAAIsD,GAA2BJ,EAAUI,UACzC,IAAIC,GAAwB,GAAI3hB,EAChC,IAAIW,GAA8BghB,EAAShhB,UAE3C,KAAK,GAAIrmB,GAAmB,EAAGA,EAAIgB,KAAK4kC,aAAc5lC,EAAG,CACxD6b,EAAI,CACJ+J,GAAO,GAAID,EACXshB,GAAYjmC,KAAK6kC,WAAW7lC,EAC5BknC,GAAOlmC,KAAK8kC,eAAe9lC,EAC3BkzB,GAAQ+T,EAAU/T,KAClBiU,GAAU74B,EAAI44B,EAAKn5B,SAASO,CAC5B64B,GAAU54B,EAAI24B,EAAKn5B,SAASQ,CAC5B44B,GAAU34B,EAAI04B,EAAKn5B,SAASS,CAC5ByX,GAAY3X,EAAI44B,EAAKjhB,YAAY3X,CACjC2X,GAAY1X,EAAI24B,EAAKjhB,YAAY1X,CACjC0X,GAAYzX,EAAI04B,EAAKjhB,YAAYzX,CAEjC,IAAI0kB,EAAQ,EACXiU,EAAU74B,EAAI84B,EAAWH,EAAUK,WAAczrB,IAClD,IAAIqX,EAAQ,EACXiU,EAAU54B,EAAI64B,EAAWH,EAAUK,WAAczrB,IAClD,IAAIqX,EAAQ,EACXiU,EAAU34B,EAAI44B,EAAWH,EAAUK,WAAczrB,IAClD,IAAIqX,EAAQ,EACXjN,EAAY3X,EAAI84B,EAAWH,EAAUK,WAAczrB,IACpD,IAAIqX,EAAQ,GACXjN,EAAY1X,EAAI64B,EAAWH,EAAUK,WAAczrB,IACpD,IAAIqX,EAAQ,GACXjN,EAAYzX,EAAI44B,EAAWH,EAAUK,WAAczrB,IAEpD,IAAI0rB,GAAW,EAAIthB,EAAY3X,EAAE2X,EAAY3X,EAAI2X,EAAY1X,EAAE0X,EAAY1X,EAAI0X,EAAYzX,EAAEyX,EAAYzX,CACzGyX,GAAYshB,EAAIA,EAAI,EAAG,GAAK5sB,KAAK6sB,KAAKD,EAEtC,IAAIN,EAAUriB,YAAc,EAAG,CAC9BgB,EAAKK,YAAY4e,SAAS7jC,KAAKsjC,cAAere,EAC9CL,GAAKO,YAAcnlB,KAAKsjC,cAAcmD,YAAYN,OAC5C,CACNvhB,EAAKK,YAAYG,SAASH,EAC1BL,GAAKO,YAAY7X,EAAI64B,EAAU74B,CAC/BsX,GAAKO,YAAY5X,EAAI44B,EAAU54B,CAC/BqX,GAAKO,YAAY3X,EAAI24B,EAAU34B,EAEhCoX,EAAKK,YAAY1X,GAAKqX,EAAKK,YAAY1X,CACvCqX,GAAKK,YAAYzX,GAAKoX,EAAKK,YAAYzX,CACvCoX,GAAKO,YAAY7X,GAAKsX,EAAKO,YAAY7X,CAEvC+X,GAAWrmB,GAAK4lB,EAGjB,MAAOyhB,GAMAtD,GAAAjjC,UAAAslC,eAAR,WAEC,GAAI3C,EACJ,IAAIr7B,EACJ,IAAI08B,GAAe9jC,KAAKikC,cACxB,IAAIjlC,GAAmB,CAEvB,IAAI8kC,GAAS,IACZ9jC,KAAK4lC,yBAEN,GAAG,CACF,GAAI5lC,KAAK2lC,YACR3lC,KAAK0mC,cACNt/B,GAAO,GAAIu/B,EACXv/B,GAAKtB,KAAO9F,KAAK4mC,oBACjBx/B,GAAKwc,YAAc5jB,KAAKqkC,YACxBj9B,GAAK8qB,MAAQlyB,KAAKqkC,YAClBj9B,GAAKk/B,WAAatmC,KAAKqkC,YACvBrkC,MAAK6kC,WAAW7lC,KAAOoI,CAEvBq7B,GAAKziC,KAAK6mC,aAEV,IAAIpE,GAAM,IAAK,CACdziC,KAAK8mC,SACLrE,GAAKziC,KAAKikC,cACV,IAAIxB,GAAMM,EAAcmB,cACvBlkC,KAAKmkC,YACN1B,GAAKziC,KAAK6mC,cAGX,GAAIpE,GAAM,IACTziC,KAAK8mC,gBAEErE,GAAM,KAMRM,GAAAjjC,UAAAwlC,YAAR,WAEC,GAAI7C,EACJ,IAAIr7B,EACJ,IAAI08B,GAAe9jC,KAAKikC,cACxB,IAAIjlC,GAAmB,CAEvB,IAAI8kC,GAAS,IACZ9jC,KAAK4lC,yBAEN,GAAG,CACF,GAAI5lC,KAAK2lC,YACR3lC,KAAK0mC,cACNt/B,GAAO,GAAI2/B,EACX3/B,GAAKwS,IAAM5Z,KAAKgnC,eAChB5/B,GAAK6/B,IAAMjnC,KAAKgnC,eAChBhnC,MAAKykC,QAAQzlC,KAAOoI,CAEpBq7B,GAAKziC,KAAK6mC,aAEV,IAAIpE,GAAM,IAAK,CACdziC,KAAK8mC,SACLrE,GAAKziC,KAAKikC,cACV,IAAIxB,GAAMM,EAAcmB,cACvBlkC,KAAKmkC,YACN1B,GAAKziC,KAAK6mC,cAGX,GAAIpE,GAAM,IACTziC,KAAK8mC,gBAEErE,GAAM,KAMRM,GAAAjjC,UAAA0lC,eAAR,WAEC,GAAI/C,EACJ,IAAIr7B,EACJ,IAAI08B,GAAe9jC,KAAKikC,cACxB,IAAIjlC,GAAmB,CAEvB,IAAI8kC,GAAS,IACZ9jC,KAAK4lC,yBAEN,GAAG,CACF,GAAI5lC,KAAK2lC,YACR3lC,KAAK0mC,cACNt/B,GAAO,GAAI8/B,EACX9/B,GAAK2F,SAAW/M,KAAKgnC,eACrB5/B,GAAK6d,YAAcjlB,KAAKmnC,iBACxBnnC,MAAK8kC,eAAe9lC,KAAOoI,CAE3Bq7B,GAAKziC,KAAK6mC,aAEV,IAAIpE,GAAM,IAAK,CACdziC,KAAK8mC,SACLrE,GAAKziC,KAAKikC,cACV,IAAIxB,GAAMM,EAAcmB,cACvBlkC,KAAKmkC,YACN1B,GAAKziC,KAAK6mC,cAGX,GAAIpE,GAAM,IACTziC,KAAK8mC,gBAEErE,GAAM,KAMRM,GAAAjjC,UAAA4lC,WAAR,WAEC,GAAIjD,EACJ,IAAIr7B,EACJ,IAAI08B,EACJ,IAAIsD,EAEJA,GAAapnC,KAAKqkC,YAElBP,GAAQ9jC,KAAKikC,cACb,IAAIH,GAAS,IACZ9jC,KAAK4lC,yBAEN,GAAG,CACF,GAAI5lC,KAAK2lC,YACR3lC,KAAK0mC,cACNt/B,GAAO,GAAIigC,EACXjgC,GAAKg/B,WAAa,GAAI3jC,OAAczC,KAAKklC,uBAEzC,KAAK,GAAIlmC,GAAmB,EAAGA,EAAIgB,KAAKklC,yBAA0BlmC,EACjEoI,EAAKg/B,WAAWpnC,GAAKgB,KAAKsnC,eAE3BtnC,MAAK0kC,WAAW0C,GAAchgC,CAE9Bq7B,GAAKziC,KAAK6mC,aAEV,IAAIpE,GAAM,IAAK,CACdziC,KAAK8mC,SACLrE,GAAKziC,KAAKikC,cACV,IAAIxB,GAAMM,EAAcmB,cACvBlkC,KAAKmkC,YACN1B,GAAKziC,KAAK6mC,cAGX,GAAIpE,GAAM,IACTziC,KAAK8mC,gBAEErE,GAAM,KAMRM,GAAAjjC,UAAAgnC,QAAR,WAEC9mC,KAAKmjC,aACLnjC,MAAKqjC,gBACLrjC,MAAK2lC,YAAc3lC,KAAKmjC,aAAenjC,KAAK+jC,UAAUxkC,OAM/CwjC,GAAAjjC,UAAAmkC,aAAR,WAEC,GAAIxB,EACJ,IAAIqB,GAAe,EAEnB,QAAQ9jC,KAAK2lC,YAAa,CACzBlD,EAAKziC,KAAK6mC,aACV,IAAIpE,GAAM,KAAOA,GAAM,MAAQA,GAAM,MAAQA,GAAM,IAAM,CACxD,GAAIqB,GAASf,EAAcmB,cAC1BlkC,KAAKunC,gBACN,IAAIzD,GAAS,GACZ,MAAOA,OAERA,IAASrB,CAEV,IAAIqB,GAASf,EAAcmB,cAC1B,MAAOJ,GAGT,MAAOA,GAMAf,GAAAjjC,UAAAynC,eAAR,WAEC,GAAI9E,EAEJ,GACCA,GAAKziC,KAAK6mC,oBAAsBpE,GAAM,MAAQA,GAAM,KAAOA,GAAM,MAAQA,GAAM,IAEhFziC,MAAK8mC,UAME/D,GAAAjjC,UAAAqkC,WAAR,WAEC,GAAI1B,EACJ,QAAQziC,KAAK2lC,aAAelD,GAAM,KACjCA,EAAKziC,KAAK6mC,cAMJ9D,GAAAjjC,UAAA+mC,YAAR,WAEC,GAAIpE,GAAYziC,KAAK+jC,UAAUyD,OAAOxnC,KAAKmjC,cAE3C,IAAIV,GAAM,KAAM,GACbziC,KAAKojC,KACPpjC,MAAKqjC,eAAiB,MAChB,IAAIZ,GAAM,OACdziC,KAAKqjC,cAER,IAAIrjC,KAAKmjC,aAAenjC,KAAK+jC,UAAUxkC,OACtCS,KAAK2lC,YAAc,IAEpB,OAAOlD,GAMAM,GAAAjjC,UAAAukC,WAAR,WAEC,GAAIrlC,GAAW+1B,SAAS/0B,KAAKikC,eAC7B,IAAI7S,MAAMpyB,GACTgB,KAAKynC,eAAe,WACrB,OAAOzoC,GAMA+jC,GAAAjjC,UAAAwnC,cAAR,WAEC,GAAIroC,GAAWyoC,WAAW1nC,KAAKikC,eAC/B,IAAI7S,MAAMnyB,GACTe,KAAKynC,eAAe,aACrB,OAAOxoC,GAMA8jC,GAAAjjC,UAAAknC,cAAR,WAEC,GAAIW,GAAe,GAAIn+B,EACvB,IAAIi5B,GAAYziC,KAAKikC,cAErB,IAAIxB,GAAM,IACTziC,KAAKynC,eAAe,IACrBE,GAAIr6B,EAAItN,KAAKsnC,eACbK,GAAIp6B,EAAIvN,KAAKsnC,eACbK,GAAIn6B,EAAIxN,KAAKsnC,eAEb,IAAItnC,KAAKikC,gBAAkB,IAC1BjkC,KAAKynC,eAAe,IAErB,OAAOE,GAMA5E,GAAAjjC,UAAAqnC,gBAAR,WAEC,GAAIS,GAAkB,GAAI9E,EAC1B,IAAIL,GAAYziC,KAAKikC,cAErB,IAAIxB,GAAM,IACTziC,KAAKynC,eAAe,IACrBG,GAAKt6B,EAAItN,KAAKsnC,eACdM,GAAKr6B,EAAIvN,KAAKsnC,eACdM,GAAKp6B,EAAIxN,KAAKsnC,etCu9MR,IsCp9MF7oC,GAAW,EAAKmpC,EAAKt6B,EAAEs6B,EAAKt6B,EAAMs6B,EAAKr6B,EAAEq6B,EAAKr6B,EAAMq6B,EAAKp6B,EAAEo6B,EAAKp6B,CACpEo6B,GAAKrB,EAAI9nC,EAAI,EAAG,GAAKkb,KAAK6sB,KAAK/nC,EAE/B,IAAIuB,KAAKikC,gBAAkB,IAC1BjkC,KAAKynC,eAAe,IAErB,OAAOG,GAMA7E,GAAAjjC,UAAAykC,SAAR,WAGCvkC,KAAK4mC,qBAOE7D,GAAAjjC,UAAA8mC,mBAAR,WAEC5mC,KAAKunC,gBAEL,IAAI9E,GAAYziC,KAAK6mC,aACrB,IAAIgB,GAAa,EAEjB,IAAIpF,GAAM,IACTziC,KAAKynC,eAAe,IAErB,GAAG,CACF,GAAIznC,KAAK2lC,YACR3lC,KAAK0mC,cACNjE,GAAKziC,KAAK6mC,aACV,IAAIpE,GAAM,IACToF,GAAOpF,QACAA,GAAM,IAEf,OAAOoF,GAMA9E,GAAAjjC,UAAA4mC,aAAR,WAEC,KAAM,IAAIxnC,OAAM,0BAOT6jC,GAAAjjC,UAAA2nC,eAAR,SAAuBhZ,GAEtB,KAAM,IAAIvvB,OAAM,6BAA+Bc,KAAKojC,MAAQ,GAAK,eAAiBpjC,KAAKqjC,eAAiB,KAAO5U,EAAW,kBAAoBzuB,KAAK+jC,UAAUyD,OAAOxnC,KAAKmjC,YAAc,GAAK,gBAMrLJ,GAAAjjC,UAAA8lC,wBAAR,WAEC,KAAM,IAAI1mC,OAAM,4BAA8Bc,KAAKojC,MAAQ,GAAK,eAAiBpjC,KAAKqjC,eAAiB,MAnkB1FN,GAAAqB,cAAuB,YACvBrB,GAAAuB,mBAA4B,aAC5BvB,GAAAyB,iBAA0B,WAC1BzB,GAAA4B,iBAA0B,WAC1B5B,GAAAgC,iBAA0B,WAC1BhC,GAAAkC,8BAAuC,uBAEvClC,GAAAoC,gBAAyB,WACzBpC,GAAAsC,aAAsB,QACtBtC,GAAAwC,iBAA0B,WAC1BxC,GAAA0C,YAAqB,OAErB1C,GAAAmB,cAAuB,IAyjBtC,OAAAnB,IAzkB4BtP,EtC6hO5B,IsC58MMyT,GAAa,WAAnB,QAAMA,MAWN,MAAAA,KtCy8MA,IsCp8MMH,GAAU,WAAhB,QAAMA,MAWN,MAAAA,KtCi8MA,IsC57MMM,GAAS,WAAf,QAAMA,MAWN,MAAAA,KtCy7MA,IsCp7MMV,GAAa,WAAnB,QAAMA,MAqBN,MAAAA,KA3EAlnC,GAAAJ,QAAS0jC,ItCi/MN+E,kCAAkCtnC,UAAUyK,gCAAgCzK,UAAU03B,0CAA0C13B,UAAU43B,qCAAqC53B,UAAU8kB,iDAAiD9kB,UAAU+kB,oDAAoD/kB,UAAUikB,yDAAyDjkB,YAAYunC,oCAAoC,SAASxpC,EAAQkB,EAAOJ,GACtb,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GuC/kOtB,IAAO6G,GAAQ1N,EAAiB,gCAChC,IAAO4N,GAAmB5N,EAAc,2CAExC,IAAOukC,GAAUvkC,EAAgB,kCACjC,IAAOiL,GAAQjL,EAAiB,gCAChC,IAAOg1B,GAAmBh1B,EAAc,0CACxC,IAAOk1B,GAAUl1B,EAAgB,qCAEjC,IAAOqN,GAAsBrN,EAAa,uDAC1C,IAAOya,GAAIza,EAAkB,mCAE7B,IAAOwrB,GAAoBxrB,EAAc,uDACzC,IAAO+kB,GAAQ/kB,EAAiB,gDAChC,IAAOglB,GAAahlB,EAAe,qDvCqlOnC,IuC5kOMypC,GAAa,SAAAtiC,GAASX,EAAtBijC,EAAatiC,EA4ClB,SA5CKsiC,GA4COhF,EAAwCC,GAAxC,GAAAD,QAAA,GAAsC,CAAtCA,EAAA,KAAwC,GAAAC,QAAA,GAAoC,CAApCA,EAAA,EAEnDv9B,EAAApG,KAAAU,KAAMuzB,EAAoB2P,KA1BnBljC,MAAAmjC,YAA6B,CAE7BnjC,MAAAojC,MAAuB,CACvBpjC,MAAAqjC,eAAgC,CAwBvCrjC,MAAKsjC,cAAgB,GAAIR,EAEzB9iC,MAAKsjC,cAAcG,cAAcj6B,EAASk6B,QAAS/pB,KAAKgqB,GAAG,GAE3D,IAAIX,EAAwB,CAC3B,GAAI4E,GAAkB,GAAI9E,EAC1B8E,GAAKnE,cAAcT,EAAwBC,EAC3CjjC,MAAKsjC,cAAcO,SAAS7jC,KAAKsjC,cAAesE,IASpCI,EAAAzT,aAAd,SAA2BC,GAE1BA,EAAYA,EAAUC,aACtB,OAAOD,IAAa,UAQPwT,GAAAtT,aAAd,SAA2BttB,GAE1B,MAAO,OAMD4gC,GAAAloC,UAAAk2B,iBAAP,WAEC,GAAI8N,EAEJ,KAAK9jC,KAAKg0B,gBAAiB,CAC1Bh0B,KAAK+jC,UAAY/jC,KAAKgkC,eACtBhkC,MAAKg0B,gBAAkB,KAGxB,MAAOh0B,KAAK4+B,YAAa,CACxBkF,EAAQ9jC,KAAKikC,cACb,QAAQH,GACP,IAAKkE,GAAc9D,cAClBlkC,KAAKmkC,YACL,MACD,KAAK6D,GAAc5D,cAClBpkC,KAAKs5B,SAAWt5B,KAAKqkC,YACrB,IAAIrkC,KAAKs5B,UAAY,GACpB,KAAM,IAAIp6B,OAAM,sCACjB,MACD,KAAK8oC,GAAc1D,mBAClBtkC,KAAKukC,UACL,MACD,KAAKyD,GAAcrD,iBAClB3kC,KAAK4kC,WAAa5kC,KAAKqkC,YACvBrkC,MAAKioC,WAAa,GAAIxlC,OAAgBzC,KAAK4kC,WAC3C,MACD,KAAKoD,GAAcE,iBAClBloC,KAAKmoC,WAAanoC,KAAKqkC,YACvB,MACD,KAAK2D,GAAcI,aAClBpoC,KAAKqoC,aACL,MACD,KAAKL,GAAcM,WAClBtoC,KAAKuoC,WACL,MACD,SACC,IAAKvoC,KAAK2lC,YACT3lC,KAAK4lC,0BAGR,GAAI5lC,KAAK2lC,YAAa,CACrB3lC,KAAKwoC,wBACLxoC,MAAKs+B,cAAgB,GAAIvU,GAAqB/pB,KAAKyoC,eAEnDzoC,MAAK2+B,MAAQ,GAAI3lB,GAAK,GAAI/M,GAAY,KACtCjM,MAAK8+B,UAAY9+B,KAAK2+B,MAAMzV,QAE5B,KAAK,GAAIlqB,GAAmB,EAAGA,EAAIgB,KAAK0oC,UAAUnpC,SAAUP,EAC3DgB,KAAK8+B,UAAUrwB,eAAezO,KAAK2oC,cAAc3oC,KAAK0oC,UAAU1pC,GAAG4pC,WAAY5oC,KAAK0oC,UAAU1pC,GAAG6pC,WAAY7oC,KAAK0oC,UAAU1pC,GAAG4O,SAMtG5N,MAAK82B,UAAWpsB,SAAS1K,KAAK2+B,MAExD3+B,MAAKi1B,gBAAgBj1B,KAAK8+B,UAC1B9+B,MAAKi1B,gBAAgBj1B,KAAK2+B,MAC1B3+B,MAAKi1B,gBAAgBj1B,KAAK8oC,UAC1B9oC,MAAKi1B,gBAAgBj1B,KAAKs+B,cAC1B,OAAO7K,GAAWiD,cAGpB,MAAOjD,GAAWkD,cAGZqR,GAAAloC,UAAA82B,eAAP,SAAsBC,GAErBnxB,EAAA5F,UAAM82B,eAAct3B,KAAAU,KAAC62B,EAGrB72B,MAAK82B,UAAY,GAAIlrB,GAGdo8B,GAAAloC,UAAA0oC,uBAAR,WAECxoC,KAAKyoC,eAAiB,CAEtB,IAAIM,GAA6B/oC,KAAK0oC,UAAUnpC,MAChD,KAAK,GAAIP,GAAmB,EAAGA,EAAI+pC,IAAe/pC,EAAG,CACpD,GAAIgqC,GAAoBhpC,KAAK0oC,UAAU1pC,EACvC,IAAI4pC,GAA+BI,EAASJ,UAC5C,IAAIK,GAA0BL,EAAWrpC,MAEzC,KAAK,GAAIsb,GAAmB,EAAGA,EAAIouB,IAAYpuB,EAAG,CACjD,GAAIquB,GAA6BlpC,KAAKmpC,sBAAsBP,EAAW/tB,GAAImuB,EAASH,WACpF,IAAIO,GAA6BR,EAAW/tB,GAAGwuB,YAAcH,CAC7D,IAAIE,EAAcppC,KAAKyoC,eACtBzoC,KAAKyoC,eAAiBW,IAKlBpB,GAAAloC,UAAAqpC,sBAAR,SAA8BG,EAAmBx8B,GAEhD,GAAIy8B,GAAuBD,EAAOE,WAClC,IAAIC,GAAqBH,EAAOE,YAAcF,EAAOD,WACrD,IAAIK,GAAuB,CAC3B,IAAIC,EAEJ,KAAK,GAAI3qC,GAAmBuqC,EAAOvqC,EAAIyqC,IAAOzqC,EAAG,CAChD2qC,EAAS78B,EAAQ9N,GAAG4qC,IACpB,IAAID,GAAU,IACXD,EAGJ,MAAOA,GAMA1B,GAAAloC,UAAAuoC,YAAR,WAEC,GAAI5F,EACJ,IAAI/e,EACJ,IAAImmB,EACJ,IAAIjC,EACJ,IAAI5oC,GAAmB,CACvB,IAAI8kC,GAAe9jC,KAAKikC,cAExB,IAAIH,GAAS,IACZ9jC,KAAK4lC,yBAEN5lC,MAAK8oC,UAAY,GAAIxlB,EAErB,GAAG,CACF,GAAItjB,KAAK2lC,YACR3lC,KAAK0mC,cACNhjB,GAAQ,GAAIH,EACZG,GAAM5d,KAAO9F,KAAK4mC,oBAClBljB,GAAME,YAAc5jB,KAAKqkC,YACzBwF,GAAM7pC,KAAKgnC,eACX6C,GAAM7pC,KAAKsjC,cAAcmD,YAAYoD,EACrCjC,GAAO5nC,KAAKmnC,iBAGZnnC,MAAKioC,WAAWjpC,GAAK4oC,EAAKkC,YAC1B9pC,MAAKioC,WAAWjpC,GAAG+qC,kBAAkBF,EAAIv8B,EAAGu8B,EAAIt8B,EAAGs8B,EAAIr8B,EACvD,IAAIw8B,GAAehqC,KAAKioC,WAAWjpC,GAAGugC,OACtCyK,GAAIC,QACJvmB,GAAMG,gBAAkBmmB,EAAI5sB,OAE5Bpd,MAAK8oC,UAAUhlB,OAAO9kB,KAAO0kB,CAE7B+e,GAAKziC,KAAK6mC,aAEV,IAAIpE,GAAM,IAAK,CACdziC,KAAK8mC,SACLrE,GAAKziC,KAAKikC,cACV,IAAIxB,GAAMuF,EAAc9D,cACvBlkC,KAAKmkC,YACN1B,GAAKziC,KAAK6mC,cAIX,GAAIpE,GAAM,IACTziC,KAAK8mC,gBACErE,GAAM,KAMRuF,GAAAloC,UAAAgnC,QAAR,WAEC9mC,KAAKmjC,aACLnjC,MAAKqjC,gBACLrjC,MAAK2lC,YAAc3lC,KAAKmjC,aAAenjC,KAAK+jC,UAAUxkC,OAM/CyoC,GAAAloC,UAAAyoC,UAAR,WAEC,GAAIzE,GAAe9jC,KAAKikC,cACxB,IAAIxB,EACJ,IAAImG,EACJ,IAAI97B,EACJ,IAAIc,EAEJ,IAAIk2B,GAAS,IACZ9jC,KAAK4lC,yBAEN,IAAI5lC,KAAKkqC,UAAY,KACpBlqC,KAAKkqC,SAAW,GAAIznC,MAErB,OAAOggC,GAAM,IAAK,CACjBA,EAAKziC,KAAKikC,cACV,QAAQxB,GACP,IAAKuF,GAAc9D,cAClBlkC,KAAKmkC,YACL,MACD,KAAK6D,GAAcmC,kBAClBnqC,KAAKkqC,SAASrnC,KAAK7C,KAAK4mC,qBACxB,MACD,KAAKoB,GAAcoC,qBAClBxB,EAAa,GAAInmC,OAAkBzC,KAAKqkC,aACxC,MACD,KAAK2D,GAAcqC,oBAClBz8B,EAAU,GAAInL,OAAczC,KAAKqkC,aAAa,EAC9C,MACD,KAAK2D,GAAcsC,uBAClBx9B,EAAU,GAAIrK,OAAiBzC,KAAKqkC,aACpC,MACD,KAAK2D,GAAcuC,gBAClBvqC,KAAKwqC,YAAY5B,EACjB,MACD,KAAKZ,GAAcyC,eAClBzqC,KAAK0qC,SAAS98B,EACd,MACD,KAAKo6B,GAAc2C,kBAClB3qC,KAAK4qC,WAAW99B,EAChB,QAIH,GAAI9M,KAAK0oC,WAAa,KACrB1oC,KAAK0oC,UAAY,GAAIjmC,MAEtB,IAAIzD,GAAoBgB,KAAK0oC,UAAUnpC,MACvCS,MAAK0oC,UAAU1pC,GAAK,GAAI6rC,EACxB7qC,MAAK0oC,UAAU1pC,GAAG4pC,WAAaA,CAC/B5oC,MAAK0oC,UAAU1pC,GAAG6pC,WAAa/7B,CAC/B9M,MAAK0oC,UAAU1pC,GAAG4O,QAAUA,EAUrBo6B,GAAAloC,UAAA6oC,cAAR,SAAsBC,EAA8B97B,EAA0Bc,GAE7E,GAAI+gB,GAAqBia,EAAWrpC,MACpC,IAAIurC,GAAmBC,EAAmBC,CAC1C,IAAI1B,EACJ,IAAIK,EACJ,IAAIsB,EACJ,IAAIpB,EACJ,IAAI1gB,GAA8B,GAAIhd,GAAoB,KAC1D,IAAI0B,GAAoB,GAAIpL,OAAcksB,EAAI,EAC9C,IAAIuc,GAAyB,GAAIzoC,OAAcksB,EAAI,EACnD,IAAIwc,GAA6B,GAAI1oC,OAAcksB,EAAI3uB,KAAKyoC,eAC5D,IAAI2C,GAA6B,GAAI3oC,OAAcksB,EAAI3uB,KAAKyoC,eAC5D,IAAIrpC,GAAmB,CACvB,IAAIisC,EAEJ,KAAK,GAAIrsC,GAAmB,EAAGA,EAAI2vB,IAAO3vB,EAAG,CAC5CsqC,EAASV,EAAW5pC,EACpB8rC,GAAKxB,EAAO5H,MAAM,CAClBqJ,GAAKD,EAAK,CACVE,GAAKF,EAAK,CACVI,GAASJ,GAAMI,EAASH,GAAMG,EAASF,GAAM,CAE7CK,GAAiB,CACjB,KAAK,GAAIxwB,GAAmB,EAAGA,EAAIyuB,EAAOD,cAAexuB,EAAG,CAC3D8uB,EAAS78B,EAAQw8B,EAAOE,YAAc3uB,EACtC,IAAI8uB,EAAOC,KAAO,EAAG,CACpBqB,EAAWjrC,KAAKioC,WAAW0B,EAAOjmB,MAClCmmB,GAAMoB,EAASK,gBAAgB3B,EAAOE,IACtCqB,GAASJ,IAAOjB,EAAIv8B,EAAEq8B,EAAOC,IAC7BsB,GAASH,IAAOlB,EAAIt8B,EAAEo8B,EAAOC,IAC7BsB,GAASF,IAAOnB,EAAIr8B,EAAEm8B,EAAOC,IAG7BuB,GAAa/rC,GAAKuqC,EAAOjmB,MAAM,CAC/B0nB,GAAahsC,KAAOuqC,EAAOC,OACzByB,GAIJ,IAAKxwB,EAAIwwB,EAAgBxwB,EAAI7a,KAAKyoC,iBAAkB5tB,EAAG,CACtDswB,EAAa/rC,GAAK,CAClBgsC,GAAahsC,KAAO,EAGrB0rC,EAAKxB,EAAO5H,OAAS,CACrB7zB,GAAIi9B,KAAQxB,EAAO1qC,CACnBiP,GAAIi9B,GAAMxB,EAAO7qC,EAGlB0qB,EAAQxa,gBAAkB3O,KAAKyoC,cAC/Btf,GAAQ9a,cAAcT,EACtBub,GAAQ7a,gBAAgB48B,EACxB/hB,GAAQ3a,UAAUX,EAClBsb,GAAQja,mBAAmBi8B,EAC3BhiB,GAAQla,mBAAmBm8B,EAE3BjiB,GAAQmZ,aACRnZ,GAAQoZ,cAERpZ,GAAQra,mBAAqB,KAC7Bqa,GAAQva,kBAAoB,KAE5B,OAAOua,GAOA6e,GAAAloC,UAAA4qC,SAAR,SAAiB98B,GAEhB,GAAI8zB,GAAuB1hC,KAAKqkC,aAAa,CAC7Cz2B,GAAQ8zB,GAAS1hC,KAAKqkC,YACtBz2B,GAAQ8zB,EAAQ,GAAK1hC,KAAKqkC,YAC1Bz2B,GAAQ8zB,EAAQ,GAAK1hC,KAAKqkC,aAOnB2D,GAAAloC,UAAA8qC,WAAR,SAAmB99B,GAElB,GAAI68B,GAAmB,GAAI4B,EAC3B5B,GAAOjI,MAAQ1hC,KAAKqkC,YACpBsF,GAAOjmB,MAAQ1jB,KAAKqkC,YACpBsF,GAAOC,KAAO5pC,KAAKsnC,eACnBqC,GAAOE,IAAM7pC,KAAKgnC,eAClBl6B,GAAQ68B,EAAOjI,OAASiI,EAOjB3B,GAAAloC,UAAA0qC,YAAR,SAAoB5B,GAEnB,GAAIU,GAAoB,GAAIkC,EAC5BlC,GAAO5H,MAAQ1hC,KAAKqkC,YACpBrkC,MAAKi/B,QAAQqK,EACbA,GAAOE,YAAcxpC,KAAKqkC,YAC1BiF,GAAOD,YAAcrpC,KAAKqkC,YAE1BuE,GAAWU,EAAO5H,OAAS4H,EAOpBtB,GAAAloC,UAAAm/B,QAAR,SAAgB2J,GAEf,GAAInG,GAAYziC,KAAKikC,cACrB,IAAIxB,GAAM,IACTziC,KAAKynC,eAAe,IACrBmB,GAAWhqC,EAAIoB,KAAKsnC,eACpBsB,GAAWnqC,EAAIuB,KAAKsnC,eAEpB,IAAItnC,KAAKikC,gBAAkB,IAC1BjkC,KAAKynC,eAAe,KAMdO,GAAAloC,UAAAmkC,aAAR,WAEC,GAAIxB,EACJ,IAAIqB,GAAe,EAEnB,QAAQ9jC,KAAK2lC,YAAa,CACzBlD,EAAKziC,KAAK6mC,aACV,IAAIpE,GAAM,KAAOA,GAAM,MAAQA,GAAM,MAAQA,GAAM,IAAM,CACxD,GAAIqB,GAASkE,EAAc9D,cAC1BlkC,KAAKunC,gBACN,IAAIzD,GAAS,GACZ,MAAOA,OAERA,IAASrB,CAEV,IAAIqB,GAASkE,EAAc9D,cAC1B,MAAOJ,GAGT,MAAOA,GAMAkE,GAAAloC,UAAAynC,eAAR,WAEC,GAAI9E,EAEJ,GACCA,GAAKziC,KAAK6mC,oBAAsBpE,GAAM,MAAQA,GAAM,KAAOA,GAAM,MAAQA,GAAM,IAEhFziC,MAAK8mC,UAMEkB,GAAAloC,UAAAqkC,WAAR,WAEC,GAAI1B,EACJ,QAAQziC,KAAK2lC,aAAelD,GAAM,KACjCA,EAAKziC,KAAK6mC,cAMJmB,GAAAloC,UAAA+mC,YAAR,WAEC,GAAIpE,GAAYziC,KAAK+jC,UAAUyD,OAAOxnC,KAAKmjC,cAE3C,IAAIV,GAAM,KAAM,GACbziC,KAAKojC,KACPpjC,MAAKqjC,eAAiB,MAChB,IAAIZ,GAAM,OACdziC,KAAKqjC,cAER,IAAIrjC,KAAKmjC,aAAenjC,KAAK+jC,UAAUxkC,OACtCS,KAAK2lC,YAAc,IAEpB,OAAOlD,GAMAuF,GAAAloC,UAAAukC,WAAR,WAEC,GAAIrlC,GAAW+1B,SAAS/0B,KAAKikC,eAC7B,IAAI7S,MAAMpyB,GACTgB,KAAKynC,eAAe,WACrB,OAAOzoC,GAMAgpC,GAAAloC,UAAAwnC,cAAR,WAEC,GAAIroC,GAAWyoC,WAAW1nC,KAAKikC,eAC/B,IAAI7S,MAAMnyB,GACTe,KAAKynC,eAAe,aACrB,OAAOxoC,GAMA+oC,GAAAloC,UAAAknC,cAAR,WAEC,GAAIW,GAAe,GAAIn+B,EACvB,IAAIi5B,GAAYziC,KAAKikC,cAErB,IAAIxB,GAAM,IACTziC,KAAKynC,eAAe,IACrBE,GAAIr6B,GAAKtN,KAAKsnC,eACdK,GAAIp6B,EAAIvN,KAAKsnC,eACbK,GAAIn6B,EAAIxN,KAAKsnC,eAEb,IAAItnC,KAAKikC,gBAAkB,IAC1BjkC,KAAKynC,eAAe,IAErB,OAAOE,GAMAK,GAAAloC,UAAAqnC,gBAAR,WAEC,GAAIS,GAAkB,GAAI9E,EAC1B,IAAIL,GAAYziC,KAAKikC,cAErB,IAAIxB,GAAM,IACTziC,KAAKynC,eAAe,IACrBG,GAAKt6B,EAAItN,KAAKsnC,eACdM,GAAKr6B,GAAKvN,KAAKsnC,eACfM,GAAKp6B,GAAKxN,KAAKsnC,evCi9NT,IuC98NF7oC,GAAW,EAAImpC,EAAKt6B,EAAEs6B,EAAKt6B,EAAIs6B,EAAKr6B,EAAEq6B,EAAKr6B,EAAIq6B,EAAKp6B,EAAEo6B,EAAKp6B,CAC/Do6B,GAAKrB,EAAI9nC,EAAI,EAAG,GAAKkb,KAAK6sB,KAAK/nC,EAE/B,IAAIuB,KAAKikC,gBAAkB,IAC1BjkC,KAAKynC,eAAe,IAErB,IAAIgE,GAAqB,GAAI3I,EAC7B2I,GAAQ5H,SAAS7jC,KAAKsjC,cAAesE,EACrC,OAAO6D,GAMAzD,GAAAloC,UAAAykC,SAAR,WAGCvkC,KAAK4mC,qBAOEoB,GAAAloC,UAAA8mC,mBAAR,WAEC5mC,KAAKunC,gBAEL,IAAI9E,GAAYziC,KAAK6mC,aACrB,IAAIgB,GAAa,EAEjB,IAAIpF,GAAM,IACTziC,KAAKynC,eAAe,IAErB,GAAG,CACF,GAAIznC,KAAK2lC,YACR3lC,KAAK0mC,cACNjE,GAAKziC,KAAK6mC,aACV,IAAIpE,GAAM,IACToF,GAAOpF,QACAA,GAAM,IAEf,OAAOoF,GAMAG,GAAAloC,UAAA4mC,aAAR,WAEC,KAAM,IAAIxnC,OAAM,0BAOT8oC,GAAAloC,UAAA2nC,eAAR,SAAuBhZ,GAEtB,KAAM,IAAIvvB,OAAM,6BAA+Bc,KAAKojC,MAAQ,GAAK,eAAiBpjC,KAAKqjC,eAAiB,KAAO5U,EAAW,kBAAoBzuB,KAAK+jC,UAAUyD,OAAOxnC,KAAKmjC,YAAc,GAAK,gBAMrL6E,GAAAloC,UAAA8lC,wBAAR,WAEC,KAAM,IAAI1mC,OAAM,4BAA8Bc,KAAKojC,MAAQ,GAAK,eAAiBpjC,KAAKqjC,eAAiB,MApnB1F2E,GAAA5D,cAAuB,YACvB4D,GAAA1D,mBAA4B,aAC5B0D,GAAArD,iBAA0B,WAC1BqD,GAAAE,iBAA0B,WAC1BF,GAAA9D,cAAuB,IACvB8D,GAAAI,aAAsB,QACtBJ,GAAAM,WAAoB,MAEpBN,GAAAmC,kBAA2B,QAC3BnC,GAAAoC,qBAA8B,UAC9BpC,GAAAuC,gBAAyB,MACzBvC,GAAAqC,oBAA6B,SAC7BrC,GAAAyC,eAAwB;;AACxBzC,EAAAsC,uBAAgC,YAChCtC,GAAA2C,kBAA2B,QAwmB1C,OAAA3C,IA1nB4BvU,EA+nB5B,IAAM+X,GAAU,WAAhB,QAAMA,MAON,MAAAA,KAEA,IAAMD,GAAS,WAAf,QAAMA,MAMN,MAAAA,KAEA,IAAMV,GAAQ,WAAd,QAAMA,MAKN,MAAAA,KAzBAprC,GAAAJ,QAAS2oC,IvC69NNx4B,gCAAgChP,UAAUiP,2CAA2CjP,UAAUsnC,kCAAkCtnC,UAAUyK,gCAAgCzK,UAAU03B,0CAA0C13B,UAAU43B,qCAAqC53B,UAAUwL,uDAAuDxL,UAAUqZ,mCAAmCrZ,UAAUiqB,uDAAuDjqB,UAAUujB,gDAAgDvjB,UAAUwjB,qDAAqDxjB,YAAYkrC,mCAAmC,SAASntC,EAAQkB,EAAOJ,GAChoB,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GwCpnPtB,IAAO6G,GAAQ1N,EAAiB,gCAChC,IAAO4N,GAAmB5N,EAAc,2CACxC,IAAO0b,GAAQ1b,EAAiB,gCAChC,IAAOiL,GAAQjL,EAAiB,gCAEhC,IAAOg1B,GAAmBh1B,EAAc,0CACxC,IAAOi1B,GAAUj1B,EAAgB,iCACjC,IAAOk1B,GAAUl1B,EAAgB,qCACjC,IAAOm1B,GAAWn1B,EAAgB,sCAGlC,IAAOusB,GAAWvsB,EAAgB,uCAGlC,IAAOqN,GAAsBrN,EAAa,uDAC1C,IAAOya,GAAIza,EAAkB,mCAC7B,IAAOuU,GAAsBvU,EAAa,qDAG1C,IAAOqU,GAAcrU,EAAe,4CACpC,IAAOoU,GAAkBpU,EAAc,gDxCmnPvC,IwC9mPMotC,GAAY,SAAAjmC,GAASX,EAArB4mC,EAAYjmC,EAoBjB,SApBKimC,GAoBOC,GAAA,GAAAA,QAAA,GAAiC,CAAjCA,EAAA,KAEXlmC,EAAApG,KAAAU,KAAMuzB,EAAoBQ,aAE1B/zB,MAAK6rC,oBAAsBD,EAQdD,EAAApX,aAAd,SAA2BC,GAE1BA,EAAYA,EAAUC,aACtB,OAAOD,IAAa,MAQPmX,GAAAjX,aAAd,SAA2BttB,GAE1B,GAAI0kC,EAEJA,GAAKpY,EAAYqY,YAAY3kC,EAC7B,IAAI0kC,EAAI,CACPA,EAAG/+B,SAAW,CACd,IAAI++B,EAAG/hC,aAAe,MACrB,MAAO,MAGT,MAAO,OAMD4hC,GAAA7rC,UAAA60B,oBAAP,SAA2BC,GAE1B,GAAIA,EAAmBC,OAAOt1B,QAAU,EAAG,CAC1C,GAAIwJ,EAEJA,GAAQ6rB,EAAmBC,OAAO,EAClC,IAAI9rB,EAAM+T,QAAQgO,GAAc,CAC/B,GAAIkhB,EAEJA,GAAMhsC,KAAKisC,UAAUrX,EAAmB1rB,GACxC8iC,GAAI33B,QAA0BtL,IAQ1B4iC,GAAA7rC,UAAA41B,2BAAP,SAAkCd,IAQ3B+W,GAAA7rC,UAAAk2B,iBAAP,WAEC,IAAKh2B,KAAKi2B,UAAW,CACpBj2B,KAAKi2B,UAAYj2B,KAAKk2B,eACtBl2B,MAAKi2B,UAAUlpB,SAAW,CAQ1B/M,MAAKisC,YACLjsC,MAAKksC,aACLlsC,MAAKmsC,wBAQN,MAAOnsC,KAAK4+B,YAAa,CAIxB,GAAI5+B,KAAKosC,UAAYpsC,KAAKi2B,UAAUlpB,UAAY/M,KAAKqsC,aACpDrsC,KAAKssC,8BACD,IAAItsC,KAAKusC,UAAYvsC,KAAKi2B,UAAUlpB,UAAY/M,KAAKwsC,aAAc,CAGvExsC,KAAKmsC,qBAAqBnsC,KAAKusC,SAASzmC,MAAQ9F,KAAKusC,QACrDvsC,MAAKwsC,aAAeC,OAAOC,SAC3B1sC,MAAKusC,SAAW,KAGjB,GAAIvsC,KAAKi2B,UAAUM,oBAAsB,EAAG,CAC3C,GAAIoW,EACJ,IAAIhe,EACJ,IAAI8a,EAEJkD,GAAM3sC,KAAKi2B,UAAUhwB,mBACrB0oB,GAAM3uB,KAAKi2B,UAAU3vB,iBACrBmjC,GAAMzpC,KAAKi2B,UAAUlpB,UAAY4hB,EAAM,EAEvC,QAAQge,GACP,IAAK,OACL,IAAK,OACL,IAAK,OAMJ,QACA,MAED,KAAK,OACJ3sC,KAAKqsC,aAAe5C,CACpBzpC,MAAKosC,SAAWpsC,KAAK27B,eACrB,MAED,KAAK,OACJ37B,KAAKwsC,aAAe/C,CACpBzpC,MAAKusC,SAAW,GAAIK,EACpB5sC,MAAKusC,SAASzmC,KAAO9F,KAAK6sC,mBAC1B7sC,MAAKusC,SAASnzB,UAAY,GAAI3W,MAC9BzC,MAAKusC,SAASO,gBACd,MAED,KAAK,OACJ9sC,KAAKusC,SAAStpC,KAAO+V,EAAK2X,SAC1B,MAED,KAAK,OACJ3wB,KAAK+sC,iBACL,MAED,KAAK,OACJ/sC,KAAKgtC,eACL,MAED,KAAK,OACJhtC,KAAKitC,aACL,MAED,KAAK,OACJjtC,KAAKktC,uBACL,MAED,KAAK,OACJltC,KAAKusC,SAAShiC,UAAYvK,KAAKmtC,eAC/B,MAED,KAAK,OACJntC,KAAKotC,qBAAqB3D,EAC1B,MAED,KAAK,OACJzpC,KAAKqtC,sBACL,MAED,SAECrtC,KAAKi2B,UAAUlpB,UAAa4hB,EAAM,CAClC,OAMF,GAAI3uB,KAAK8gC,aAAavhC,OAAQ,CAC7BS,KAAK63B,gCACL,SAQH,GAAI73B,KAAKi2B,UAAUM,qBAAuBv2B,KAAKusC,UAAYvsC,KAAKosC,SAAU,CACzE,MAAO3Y,GAAWkD,kBACZ,CACN,GAAI7wB,EAGJ,KAAKA,IAAQ9F,MAAKmsC,qBAAsB,CACvC,GAAIzP,EACJA,GAAM18B,KAAKstC,gBAAgBttC,KAAKmsC,qBAAqBrmC,GACrD,IAAI42B,EAAK,CAEkB18B,KAAK82B,UAAWpsB,SAASgyB,EAEnD18B,MAAKi1B,gBAAgByH,EAAK52B,IAI5B,MAAO2tB,GAAWiD,cAIbiV,GAAA7rC,UAAA82B,eAAP,SAAsBC,GAErBnxB,EAAA5F,UAAM82B,eAAct3B,KAAAU,KAAC62B,EAGrB72B,MAAK82B,UAAY,GAAIlrB,GAGd+/B,GAAA7rC,UAAA67B,cAAR,WAEC,GAAIlzB,EAEJA,GAAM,GAAI8kC,EAEV,OAAOvtC,KAAKi2B,UAAUlpB,SAAW/M,KAAKqsC,aAAc,CACnD,GAAIM,EACJ,IAAIhe,EACJ,IAAI8a,EAEJkD,GAAM3sC,KAAKi2B,UAAUhwB,mBACrB0oB,GAAM3uB,KAAKi2B,UAAU3vB,iBACrBmjC,GAAMzpC,KAAKi2B,UAAUlpB,UAAY4hB,EAAM,EAEvC,QAAQge,GACP,IAAK,OACJlkC,EAAI3C,KAAO9F,KAAK6sC,mBAChB,MAED,KAAK,OACJpkC,EAAI8I,aAAevR,KAAKwtC,WACxB,MAED,KAAK,OACJ/kC,EAAIyN,aAAelW,KAAKwtC,WACxB,MAED,KAAK,OACJ/kC,EAAI2N,cAAgBpW,KAAKwtC,WACzB,MAED,KAAK,OACJ/kC,EAAIglC,SAAW,IACf,MAED,KAAK,OACJhlC,EAAIilC,SAAW1tC,KAAK47B,aAAa6N,EACjC,MAED,KAAK,OACJhhC,EAAIwN,YAAcjW,KAAK47B,aAAa6N,EACpC,MAED,SACCzpC,KAAKi2B,UAAUlpB,SAAW08B,CAC1B,QAIH,MAAOhhC,GAGAkjC,GAAA7rC,UAAA87B,aAAR,SAAqB6N,GAEpB,GAAIuC,EAEJA,GAAM,GAAI2B,EAEV,OAAO3tC,KAAKi2B,UAAUlpB,SAAW08B,EAAK,CACrC,GAAIkD,EACJ,IAAIhe,EAEJge,GAAM3sC,KAAKi2B,UAAUhwB,mBACrB0oB,GAAM3uB,KAAKi2B,UAAU3vB,iBAErB,QAAQqmC,GACP,IAAK,OACJX,EAAInkC,IAAM7H,KAAK6sC,mBACf,MAED,SAEC7sC,KAAKi2B,UAAUlpB,UAAa4hB,EAAM,CAClC,QAIH3uB,KAAKisC,UAAUD,EAAInkC,KAAOmkC,CAC1BhsC,MAAK23B,gBAAgBqU,EAAInkC,IAAK,GAAI2rB,GAAWwY,EAAInkC,KAEjD,OAAOmkC,GAGAL,GAAA7rC,UAAAitC,gBAAR,WAEC,GAAI/tC,EACJ,IAAI2vB,EACJ,IAAI+a,EAEJA,GAAQ1pC,KAAKi2B,UAAUhwB,mBACvBjG,MAAKusC,SAAS9+B,MAAQ,GAAIhL,OAAcinC,EAAM,EAE9C1qC,GAAI,CACJ2vB,GAAM3uB,KAAKusC,SAAS9+B,MAAMlO,MAC1B,OAAOP,EAAI2vB,EAAK,CACf,GAAIrhB,GAAUC,EAAUC,CAExBF,GAAItN,KAAKi2B,UAAU7a,WACnB7N,GAAIvN,KAAKi2B,UAAU7a,WACnB5N,GAAIxN,KAAKi2B,UAAU7a,WAEnBpb,MAAKusC,SAAS9+B,MAAMzO,KAAOsO,CAC3BtN,MAAKusC,SAAS9+B,MAAMzO,KAAOwO,CAC3BxN,MAAKusC,SAAS9+B,MAAMzO,KAAOuO,GAIrBo+B,GAAA7rC,UAAAktC,cAAR,WAEC,GAAIhuC,EACJ,IAAI2vB,EACJ,IAAI+a,EAEJA,GAAQ1pC,KAAKi2B,UAAUhwB,mBACvBjG,MAAKusC,SAAS3+B,QAAU,GAAInL,OAAcinC,EAAM,EAEhD1qC,GAAI,CACJ2vB,GAAM3uB,KAAKusC,SAAS3+B,QAAQrO,MAC5B,OAAOP,EAAI2vB,EAAK,CACf,GAAIif,GAAoBC,EAAoBC,CAE5CF,GAAK5tC,KAAKi2B,UAAUhwB,mBACpB4nC,GAAK7tC,KAAKi2B,UAAUhwB,mBACpB6nC,GAAK9tC,KAAKi2B,UAAUhwB,mBAEpBjG,MAAKusC,SAAS3+B,QAAQ5O,KAAO4uC,CAC7B5tC,MAAKusC,SAAS3+B,QAAQ5O,KAAO8uC,CAC7B9tC,MAAKusC,SAAS3+B,QAAQ5O,KAAO6uC,CAG7B7tC,MAAKi2B,UAAUlpB,UAAY,EAG5B/M,KAAKusC,SAASwB,gBAAkB,GAAItrC,OAAcinC,GAG3CiC,GAAA7rC,UAAAutC,qBAAR,WAEC,GAAI1e,GAAsB3uB,KAAKusC,SAAS3+B,QAAQrO,OAAO,CACvD,IAAIP,GAAoB,CACxB,OAAOA,EAAI2vB,EAAK,CACf3uB,KAAKusC,SAASwB,gBAAgB/uC,GAAKgB,KAAKi2B,UAAU3vB,iBAClDtH,MAIM2sC,GAAA7rC,UAAAmtC,YAAR,WAEC,GAAIjuC,EACJ,IAAI2vB,EACJ,IAAI+a,EAEJA,GAAQ1pC,KAAKi2B,UAAUhwB,mBACvBjG,MAAKusC,SAAS1+B,IAAM,GAAIpL,OAAcinC,EAAM,EAE5C1qC,GAAI,CACJ2vB,GAAM3uB,KAAKusC,SAAS1+B,IAAItO,MACxB,OAAOP,EAAI2vB,EAAK,CACf3uB,KAAKusC,SAAS1+B,IAAI7O,KAAOgB,KAAKi2B,UAAU7a,WACxCpb,MAAKusC,SAAS1+B,IAAI7O,KAAO,EAAMgB,KAAKi2B,UAAU7a,aAIxCuwB,GAAA7rC,UAAAotC,sBAAR,WAEC,GAAIzkC,EACJ,IAAIihC,EACJ,IAAI1qC,EACJ,IAAIgvC,EAEJvlC,GAAMzI,KAAK6sC,mBACXnD,GAAQ1pC,KAAKi2B,UAAUhwB,mBAEvB+nC,GAAQ,GAAIvrC,OAAcinC,EAC1B1qC,GAAI,CACJ,OAAOA,EAAIgvC,EAAMzuC,OAChByuC,EAAMhvC,KAAOgB,KAAKi2B,UAAUhwB,mBAE7BjG,MAAKusC,SAASnzB,UAAUvW,KAAK4F,EAC7BzI,MAAKusC,SAASO,cAAcrkC,GAAOulC,EAG5BrC,GAAA7rC,UAAAstC,qBAAR,SAA6B3D,GAE5B,GAAIwE,EACJ,IAAIvR,EACJ,IAAI1xB,EACJ,IAAIlF,EACJ,IAAIooC,EAGJljC,GAAQ,GAAIxB,EAEZ,OAAOxJ,KAAKi2B,UAAUlpB,SAAW08B,EAAK,CACrC,GAAIkD,EACJ,IAAIhe,EAEJge,GAAM3sC,KAAKi2B,UAAUhwB,mBACrB0oB,GAAM3uB,KAAKi2B,UAAU3vB,iBAErB,QAAQqmC,GACP,IAAK,OACJ7mC,EAAO9F,KAAK6sC,mBACZ7sC,MAAKi2B,UAAUlpB,UAAY,CAC3BmhC,GAAOluC,KAAKi2B,UAAUlsB,WACtB,MAED,KAAK,OACJiB,EAAMsC,EAAItN,KAAKi2B,UAAU7a,WACzBpQ,GAAMwC,EAAIxN,KAAKi2B,UAAU7a,WACzBpQ,GAAMuC,EAAIvN,KAAKi2B,UAAU7a,WACzB,MAED,SACCpb,KAAKi2B,UAAUlpB,UAAa4hB,EAAM,CAClC,QAOH,GAAI7oB,GAAQ,YAAc9F,KAAKmsC,qBAAqBhnC,eAAeW,GAAO,CACzEmoC,EAAKjuC,KAAKmsC,qBAAqBrmC,EAC/B42B,GAAM18B,KAAKstC,gBAAgBW,EAAIjjC,EAE/B,IAAI0xB,EAAK,CAEkB18B,KAAK82B,UAAWpsB,SAASgyB,EAEnD18B,MAAKi1B,gBAAgByH,EAAKuR,EAAGnoC,YAIvB9F,MAAKmsC,qBAAqBrmC,IAI3B6lC,GAAA7rC,UAAAwtC,gBAAR,SAAwB5Q,EAAc1xB,GAAA,GAAAA,QAAA,GAAqB,CAArBA,EAAA,KAErC,GAAI0xB,EAAIz5B,MAAQ+V,EAAK2X,UAAW,CAC/B,GAAI3xB,EACJ,IAAImvC,EACJ,IAAI/hC,EACJ,IAAI3D,EACJ,IAAI+Q,EACJ,IAAI7P,EACJ,IAAIuhC,EACJ,IAAI8C,EAEJ,IAAItR,EAAItjB,UAAU7Z,OAAS,EAC1B+H,QAAQC,IAAI,oFAGb,KAAKm1B,EAAI9uB,SAAW8uB,EAAI9uB,QAAQrO,QAAU,EACzC,MAAO,KAER2rC,GAAW,GAAIzoC,OAAgBi6B,EAAIjvB,MAAMlO,OAAO,EAChDyuC,GAAQ,GAAIvrC,OAAci6B,EAAI9uB,QAAQrO,OAAO,EAE7CS,MAAKouC,YAAYlD,EAAU8C,EAAOtR,EAElC,IAAI18B,KAAK6rC,oBACR7rC,KAAKquC,kBAAkBnD,EAAU8C,EAElCtR,GAAIjvB,MAAQ,GAAIhL,OAAcyoC,EAAS3rC,OAAO,EAC9C,KAAKP,EAAI,EAAGA,EAAIksC,EAAS3rC,OAAQP,IAAK,CACrC09B,EAAIjvB,MAAMzO,EAAE,GAAKksC,EAASlsC,GAAGsO,CAC7BovB,GAAIjvB,MAAMzO,EAAE,EAAI,GAAKksC,EAASlsC,GAAGuO,CACjCmvB,GAAIjvB,MAAMzO,EAAE,EAAI,GAAKksC,EAASlsC,GAAGwO,EAElCkvB,EAAI9uB,QAAU,GAAInL,OAAcurC,EAAMzuC,OAAO,EAE7C,KAAKP,EAAI,EAAGA,EAAIgvC,EAAMzuC,OAAQP,IAAK,CAClC09B,EAAI9uB,QAAQ5O,EAAE,GAAKgvC,EAAMhvC,GAAGD,CAC5B29B,GAAI9uB,QAAQ5O,EAAE,EAAI,GAAKgvC,EAAMhvC,GAAGiG,CAChCy3B,GAAI9uB,QAAQ5O,EAAE,EAAI,GAAKgvC,EAAMhvC,GAAG8b,EAGjC,GAAI4hB,EAAI7uB,IAAK,CAIZ6uB,EAAI7uB,IAAM,GAAIpL,OAAcyoC,EAAS3rC,OAAO,EAC5C,KAAKP,EAAI,EAAGA,EAAIksC,EAAS3rC,OAAQP,IAAK,CACrC09B,EAAI7uB,IAAI7O,EAAE,GAAKksC,EAASlsC,GAAGF,CAC3B49B,GAAI7uB,IAAI7O,EAAE,EAAI,GAAKksC,EAASlsC,GAAGsvC,GAIjCliC,EAAO,GAAIH,EAIXkiC,GAAM,GAAIhiC,GAAoB,KAC9BgiC,GAAI9/B,cAAcquB,EAAI9uB,QACtBugC,GAAI7/B,gBAAgBouB,EAAIjvB,MACxB0gC,GAAI3/B,UAAUkuB,EAAI7uB,IAElBzB,GAAKqC,eAAe0/B,EAEpB,IAAIzR,EAAItjB,UAAU7Z,OAAS,EAAG,CAC7B,GAAIgvC,EACJA,GAAQ7R,EAAItjB,UAAU,EACtB3Q,GAAMzI,KAAKksC,WAAWqC,GAAO70B,SAK9B,GAAI1O,EAAO,CACV,GAAI0xB,EAAInyB,UAAW,CxCs+OH,GwCn+OXikC,GAAoB9R,EAAInyB,UAAUkkC,QACtCD,GAAI,IAAM,CACVA,GAAI,IAAM,CACVA,GAAI,IAAM,CACV7kC,GAAM,GAAIsQ,GAASu0B,EACnBxjC,GAAQrB,EAAI2hC,gBAAgBtgC,GAG7BA,EAAM0jC,SAAS,EAEf/kC,GAAM,GAAIsQ,EACVtQ,GAAIogC,kBAAkB/+B,EAAMsC,EAAGtC,EAAMuC,EAAGvC,EAAMwC,EAC9CpB,GAAKuiC,oBAAoBhlC,GAK1B,GAAI+yB,EAAInyB,UAAW,CAClBZ,EAAM,GAAIsQ,GAASyiB,EAAInyB,UACvBZ,GAAIsgC,QACJ79B,GAAKuiC,oBAAoBhlC,GAK1B3J,KAAKi1B,gBAAgB7oB,EAAMswB,EAAI52B,KAAK2oC,OAAO,SAG3Cj1B,GAAO,GAAIR,GAAK5M,EAAM3D,EACtB+Q,GAAKjP,UAAUC,SAAW,GAAIyP,GAASyiB,EAAInyB,UAC3C,OAAOiP,GAIR,MAAO,MAGAmyB,GAAA7rC,UAAAsuC,YAAR,SAAoBlD,EAA0B8C,EAAqBtR,GxC89O5D,GwC39OF19B,EACJ,IAAI6b,EACJ,IAAIzI,EACJ,IAAIuc,GAAqB+N,EAAIjvB,MAAMlO,MACnC,KAAKP,EAAI,EAAG6b,EAAI,EAAGzI,EAAI,EAAGpT,EAAI2vB,GAAM,CACnC,GAAI2f,GAAa,GAAIM,EACrBN,GAAEhhC,EAAIovB,EAAIjvB,MAAMzO,IAChBsvC,GAAE/gC,EAAImvB,EAAIjvB,MAAMzO,IAChBsvC,GAAE9gC,EAAIkvB,EAAIjvB,MAAMzO,IAChB,IAAI09B,EAAI7uB,IAAK,CACZygC,EAAExvC,EAAI49B,EAAI7uB,IAAIgN,IACdyzB,GAAEA,EAAI5R,EAAI7uB,IAAIgN,KAEfqwB,EAAS94B,KAAOk8B,EAEjB3f,EAAM+N,EAAI9uB,QAAQrO,MAClB,KAAKP,EAAI,EAAGoT,EAAI,EAAGpT,EAAI2vB,GAAM,CAC5B,GAAI1vB,GAAW,GAAI4vC,EACnB5vC,GAAEF,EAAI29B,EAAI9uB,QAAQ5O,IAClBC,GAAEgG,EAAIy3B,EAAI9uB,QAAQ5O,IAClBC,GAAE6b,EAAI4hB,EAAI9uB,QAAQ5O,IAClBC,GAAE6vC,YAAcpS,EAAIqR,gBAAgB37B,IAAM,CAC1C47B,GAAM57B,KAAOnT,GAIP0sC,GAAA7rC,UAAAuuC,kBAAR,SAA0BnD,EAA0B8C,GAMnD,GAAIhvC,EACJ,IAAI6b,EACJ,IAAIzI,EACJ,IAAIhT,EACJ,IAAIuvB,EACJ,IAAIsa,GAA2BiC,EAAS3rC,MACxC,IAAIwvC,GAA2Bf,EAAMzuC,MxC09O/B,IwCv9OFyvC,GAAwC,GAAIvsC,OAAqBwmC,EACrE,KAAKjqC,EAAI,EAAGA,EAAIiqC,EAAUjqC,IACzBgwC,EAAQhwC,GAAK,GAAIyD,MAClB,KAAKzD,EAAI,EAAGA,EAAI+vC,EAAU/vC,IAAK,CAC9B,GAAIiwC,GAAcjB,EAAMhvC,EACxB,KAAK6b,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvB,GAAIq0B,GAAgCF,EAASn0B,GAAK,EAAIo0B,EAAKlwC,EAAM8b,GAAK,EAAIo0B,EAAKhqC,EAAIgqC,EAAKn0B,EACxF,IAAIq0B,GAAwBF,EAAKH,WACjC,KAAK18B,EAAI88B,EAAO3vC,OAAS,EAAG6S,GAAK,EAAGA,IAAK,CACxC,IAAK+8B,EAAQD,EAAO98B,IAAM,EAAG,CAC5B+8B,GAASD,EAAO98B,EAChB88B,GAAOE,OAAOh9B,EAAG,EACjBA,GAAI88B,EAAO3vC,OAAS,GAGtB2vC,EAAOrsC,KAAKssC,IxC29OR,GwCv9OFE,GAAwC,GAAI5sC,OAAqBwmC,EACrE,KAAKjqC,EAAI,EAAGA,EAAIiqC,EAAUjqC,IAAK,CAC9B,IAAK2vB,EAAMqgB,EAAQhwC,GAAGO,QAAU,EAC/B,QACD,IAAI+vC,GAAgC,GAAI7sC,OAAcksB,EACtD0gB,GAAQrwC,GAAKswC,CACbA,GAAO,GAAKtwC,CACZ,IAAIuwC,GAAcrE,EAASlsC,EAC3B,KAAK6b,EAAI,EAAGA,EAAI8T,EAAK9T,IAAK,CACzB,GAAIiwB,GAAc,GAAI8D,EACtB9D,GAAGx9B,EAAIiiC,EAAGjiC,CACVw9B,GAAGv9B,EAAIgiC,EAAGhiC,CACVu9B,GAAGt9B,EAAI+hC,EAAG/hC,CACVs9B,GAAGhsC,EAAIywC,EAAGzwC,CACVgsC,GAAGwD,EAAIiB,EAAGjB,CACVgB,GAAOz0B,GAAKqwB,EAAS3rC,MACrB2rC,GAASroC,KAAKioC,IAGhB7B,EAAWiC,EAAS3rC,MAEpB,KAAKP,EAAI,EAAGA,EAAI+vC,EAAU/vC,IAAK,CAC9BiwC,EAAOjB,EAAMhvC,EACbmwC,GAAQF,EAAKH,WACb,KAAKj0B,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvBzI,EAAKyI,GAAK,EAAIo0B,EAAKlwC,EAAM8b,GAAK,EAAIo0B,EAAKhqC,EAAIgqC,EAAKn0B,CAChDo0B,GAASF,EAAQ58B,EACjBuc,GAAMugB,EAAO3vC,MACb+vC,GAASD,EAAQj9B,EACjB,KAAKhT,EAAI,EAAGA,EAAIuvB,EAAKvvB,IAAK,CACzB,GAAM+vC,GAAS,GAAOD,EAAO9vC,IAAM,IAAS+vC,EAAQD,EAAO9vC,IAAM,EAAI,CACpE,GAAIsiC,GAAwB4N,EAAOlwC,EACnC,IAAI+vC,GAAS,EAAG,CAEfD,EAAOE,OAAOhwC,EAAG,EACjBkwC,GAAOF,OAAOhwC,EAAG,GAElB,GAAIyb,GAAK,EACRo0B,EAAKlwC,EAAI2iC,MAAY,IAAI7mB,GAAK,EAC9Bo0B,EAAKhqC,EAAIy8B,MACTuN,GAAKn0B,EAAI4mB,CACVtiC,GAAIuvB,MAODgd,GAAA7rC,UAAAwsC,wBAAR,WAEC,GAAI7jC,EAEJ,IAAIzI,KAAKosC,SAASsB,SACjBjlC,EAAM,GAAImK,GAAe5S,KAAKosC,SAASsB,SAASr5B,SAAWvB,EAAuBwB,yBAElF7L,GAAM,GAAImK,GAAe5S,KAAKosC,SAAS76B,aAExC9I,GAAIyN,aAAelW,KAAKosC,SAASl2B,YACjCzN,GAAI2N,cAAgBpW,KAAKosC,SAASh2B,aAElC,IAAIpW,KAAK+8B,cAAgB,EACxBt0B,EAAIwM,KAAOtC,EAAmBuC,UAE/BzM,GAAIC,UAAY1I,KAAKosC,SAASqB,QAE9BztC,MAAKi1B,gBAAgBxsB,EAAKzI,KAAKosC,SAAStmC,KAExC9F,MAAKksC,WAAWlsC,KAAKosC,SAAStmC,MAAQ9F,KAAKosC,QAC3CpsC,MAAKosC,SAAS1yB,SAAWjR,CAEzBzI,MAAKosC,SAAW,KAGTT,GAAA7rC,UAAA+sC,kBAAR,WAEC,GAAI2C,EACJ,IAAI3H,GAAa,EAEjB,QAAQ2H,EAAMxvC,KAAKi2B,UAAUtvB,oBAAsB,EAClDkhC,GAAOlF,OAAOC,aAAa4M,EAE5B,OAAO3H,GAGA8D,GAAA7rC,UAAAqtC,cAAR,WAEC,GAAI/lC,EAEJA,GAAO,GAAI3E,OAAc,GAGzB2E,GAAK,GAAKpH,KAAKi2B,UAAU7a,WACzBhU,GAAK,GAAKpH,KAAKi2B,UAAU7a,WACzBhU,GAAK,GAAKpH,KAAKi2B,UAAU7a,WACzBhU,GAAK,GAAK,CAGVA,GAAK,GAAKpH,KAAKi2B,UAAU7a,WACzBhU,GAAK,IAAMpH,KAAKi2B,UAAU7a,WAC1BhU,GAAK,GAAKpH,KAAKi2B,UAAU7a,WACzBhU,GAAK,IAAM,CAGXA,GAAK,GAAKpH,KAAKi2B,UAAU7a,WACzBhU,GAAK,GAAKpH,KAAKi2B,UAAU7a,WACzBhU,GAAK,GAAKpH,KAAKi2B,UAAU7a,WACzBhU,GAAK,GAAK,CAGVA,GAAK,IAAMpH,KAAKi2B,UAAU7a,WAC1BhU,GAAK,IAAMpH,KAAKi2B,UAAU7a,WAC1BhU,GAAK,IAAMpH,KAAKi2B,UAAU7a,WAC1BhU,GAAK,IAAM,CAEX,OAAOA,GAGAukC,GAAA7rC,UAAA0tC,UAAR,WAEC,GAAIb,EACJ,IAAIhe,EACJ,IAAIhwB,GAAkB8wC,EAAkBxqC,CAExC0nC,GAAM3sC,KAAKi2B,UAAUhwB,mBACrB0oB,GAAM3uB,KAAKi2B,UAAU3vB,iBAErB,QAAQqmC,GACP,IAAK,IACJhuC,EAAIqB,KAAKi2B,UAAU7a,YAAY,GAC/Bq0B,GAAIzvC,KAAKi2B,UAAU7a,YAAY,GAC/BnW,GAAIjF,KAAKi2B,UAAU7a,YAAY,GAC/B,MACD,KAAK,IACJzc,EAAIqB,KAAKi2B,UAAUtvB,kBACnB8oC,GAAIzvC,KAAKi2B,UAAUtvB,kBACnB1B,GAAIjF,KAAKi2B,UAAUtvB,kBACnB,MACD,SACC3G,KAAKi2B,UAAUlpB,UAAa4hB,EAAM,CAClC,OAGF,MAAQhwB,IAAK,GAAO8wC,GAAK,EAAKxqC,EAEhC,OAAA0mC,IA1xB2BlY,ExC6tQ3B,IwC57OMob,GAAM,WAAZ,QAAMA,MAMN,MAAAA,KxC87OA,IwCz7OMtB,GAAU,WAAhB,QAAMA,MAUN,MAAAA,KxCu7OA,IwCl7OMX,GAAQ,WAAd,QAAMA,MAcN,MAAAA,KxC46OA,IwCv6OMe,GAAS,WAAf,QAAMA,MAIN,MAAAA,KxC26OA,IwCt6OMiB,GAAQ,WAAd,QAAMA,MASN,MAAAA,KApEAnvC,GAAAJ,QAASssC,IxCw+ONn8B,gCAAgChP,UAAUiP,2CAA2CjP,UAAUue,gCAAgCve,UAAUyK,gCAAgCzK,UAAU03B,0CAA0C13B,UAAU23B,iCAAiC33B,UAAU43B,qCAAqC53B,UAAU63B,sCAAsC73B,UAAU+wB,uCAAuC/wB,UAAUwL,uDAAuDxL,UAAUqZ,mCAAmCrZ,UAAUyX,qDAAqDzX,UAAU2X,4CAA4C3X,UAAU4X,gDAAgD5X,YAAYkvC,gCAAgC,SAASnxC,EAAQkB,EAAOJ,GAC5vB,GAAI0F,GAAY/E,KAAK+E,WAAa,SAAUC,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOpF,KAAKqF,YAAcL,EACnCI,EAAGtF,UAAYmF,EAAEnF,SACjBkF,GAAElF,UAAY,GAAIsF,GyClyQtB,IAAO+G,GAAmB5N,EAAc,2CACxC,IAAO0N,GAAQ1N,EAAiB,gCAKhC,IAAOg1B,GAAmBh1B,EAAc,0CACxC,IAAOi1B,GAAUj1B,EAAgB,iCACjC,IAAOk1B,GAAUl1B,EAAgB,qCACjC,IAAOm1B,GAAWn1B,EAAgB,sCAGlC,IAAOusB,GAAWvsB,EAAgB,uCAElC,IAAOqN,GAAsBrN,EAAa,uDAC1C,IAAOya,GAAIza,EAAkB,mCAC7B,IAAOuU,GAAsBvU,EAAa,qDAG1C,IAAOqU,GAAcrU,EAAe,4CACpC,IAAOoU,GAAkBpU,EAAc,gDACvC,IAAOoxC,GAAmBpxC,EAAc,yDzC+xQxC,IyC1xQMqxC,GAAS,SAAAlqC,GAASX,EAAlB6qC,EAASlqC,EAgCd,SAhCKkqC,GAgCOC,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,EAEXnqC,EAAApG,KAAAU,KAAMuzB,EAAoB2P,KAVnBljC,MAAA8vC,cAAwB,IACxB9vC,MAAA+vC,kBAA2B,EAUlC/vC,MAAKgwC,OAASH,EAOfjwC,OAAAC,eAAW+vC,EAAA9vC,UAAA,SzCmwQJI,IyCnwQP,SAAiBkzB,GAEhBpzB,KAAKgwC,OAAS5c,GzCowQRhzB,WAAY,KACZC,aAAc,MyC7vQPuvC,GAAArb,aAAd,SAA2BC,GAE1BA,EAAYA,EAAUC,aACtB,OAAOD,IAAa,MAQPob,GAAAlb,aAAd,SAA2BttB,GAE1B,GAAI6oC,GAAiBvc,EAAYjhB,SAASrL,EAC1C,IAAI8oC,GAAe,KACnB,IAAIC,GAAe,KAEnB,IAAIF,EAAS,CACZC,EAAOD,EAAQrP,QAAQ,UAAY,CACnCuP,GAAOF,EAAQrP,QAAQ,UAAY,EAGpC,MAAOsP,IAAQC,EAMTP,GAAA9vC,UAAA60B,oBAAP,SAA2BC,GAE1B,GAAIA,EAAmB1rB,IAAM,MAAO,CACnC,GAAI2+B,GAAanU,EAAYjhB,SAASmiB,EAAmBxtB,KACzDpH,MAAKowC,SAASvI,OAER,CACN,GAAI9+B,EAEJ,IAAI6rB,EAAmBC,OAAOt1B,QAAU,EAAG,CAC1C,OAGDwJ,EAAQ6rB,EAAmBC,OAAO,EAElC,IAAI9rB,EAAM+T,QAAQgO,GAAc,CAE/B,GAAIulB,GAAoB,GAAIC,EAC5BD,GAAGE,WAAa3b,EAAmB1rB,EACnCmnC,GAAGh8B,QAA0BtL,CAE7B/I,MAAKwwC,gBAAgB3tC,KAAKwtC,EAE1B,IAAIrwC,KAAKywC,QAAQlxC,OAAS,EAAG,CAC5BS,KAAK0wC,cAAcL,MAShBT,GAAA9vC,UAAA41B,2BAAP,SAAkCd,GAEjC,GAAIA,EAAmB1rB,IAAM,MAAO,CACnClJ,KAAK2wC,QAAU,KACf3wC,MAAK8vC,cAAgB,UACf,CACN,GAAIO,GAAoB,GAAIC,EAC5BD,GAAGE,WAAa3b,EAAmB1rB,EACnClJ,MAAKwwC,gBAAgB3tC,KAAKwtC,GAG3B,GAAIrwC,KAAKywC,QAAQlxC,OAAS,EACzBS,KAAK0wC,cAAcL,GAMdT,GAAA9vC,UAAAk2B,iBAAP,WAEC,GAAI4a,EACJ,IAAIC,GAAiBlO,OAAOC,aAAa,GACzC,IAAIkO,EAEJ,KAAK9wC,KAAKg0B,gBAAiB,CAC1Bh0B,KAAK+jC,UAAY/jC,KAAKgkC,eAGtBhkC,MAAK+jC,UAAY/jC,KAAK+jC,UAAUrD,QAAQ,iBAAkB,KAG3D,GAAI1gC,KAAK+jC,UAAUnD,QAAQiQ,KAAa,EACvCA,EAAUlO,OAAOC,aAAa,GAE/B,KAAK5iC,KAAKg0B,gBAAiB,CAC1Bh0B,KAAKg0B,gBAAkB,IACvBh0B,MAAK+wC,UAAY,GAAItuC,MACrBzC,MAAKgxC,eAAiB,GAAIvuC,MAC1BzC,MAAKixC,aAAe,GAAIxuC,MACxBzC,MAAKwwC,gBAAkB,GAAI/tC,MAC3BzC,MAAKywC,QAAU,GAAIhuC,MACnBzC,MAAK+gC,KAAO,GAAIt+B,MAChBzC,MAAKkxC,cAAgBlxC,KAAK+jC,UAAUxkC,MACpCS,MAAKmxC,WAAanxC,KAAK+jC,UAAUnD,QAAQiQ,EAAS,EAClD7wC,MAAKoxC,UAAY,CACjBpxC,MAAKqxC,SAAW,GAAI5uC,MACpBzC,MAAKsxC,aAAe,EAGrB,MAAOtxC,KAAKmxC,WAAanxC,KAAKkxC,eAAiBlxC,KAAK4+B,YAAa,CAChE5+B,KAAKmxC,WAAanxC,KAAK+jC,UAAUnD,QAAQiQ,EAAS7wC,KAAKoxC,UAEvD,IAAIpxC,KAAKmxC,aAAe,EACvBnxC,KAAKmxC,WAAanxC,KAAKkxC,aAExBN,GAAO5wC,KAAK+jC,UAAUlD,UAAU7gC,KAAKoxC,UAAWpxC,KAAKmxC,WACrDP,GAAOA,EAAKpX,MAAM,MAAM+X,KAAK,GAC7BX,GAAOA,EAAKlQ,QAAQ,KAAM,IAC1BoQ,GAAQF,EAAKpX,MAAM,IACnBx5B,MAAKoxC,UAAYpxC,KAAKmxC,WAAa,CACnCnxC,MAAKwxC,UAAUV,EAKf,IAAI9wC,KAAKw2B,cAAe,CACvB,MAAO/C,GAAWkD,eAKpB,GAAI32B,KAAKmxC,YAAcnxC,KAAKkxC,cAAe,CAE1C,GAAIlxC,KAAK2wC,UAAY3wC,KAAK8vC,cAAe,CACxC,MAAOrc,GAAWkD,cAGnB32B,KAAKmmC,WACLnmC,MAAKyxC,gBAEL,OAAOhe,GAAWiD,aAGnB,MAAOjD,GAAWkD,cAGZiZ,GAAA9vC,UAAA82B,eAAP,SAAsBC,GAErBnxB,EAAA5F,UAAM82B,eAAct3B,KAAAU,KAAC62B,EAGrB72B,MAAK82B,UAAY,GAAIlrB,GAMdgkC,GAAA9vC,UAAA0xC,UAAR,SAAkBV,GAEjB,OAAQA,EAAM,IAEb,IAAK,SAEJ9wC,KAAK2wC,QAAU,IACf3wC,MAAK8vC,cAAgB,KACrB9vC,MAAK0xC,QAAQZ,EAAM,GAEnB,MAED,KAAK,IAEJ9wC,KAAK2xC,YAAYb,EAEjB,MAED,KAAK,IAEJ9wC,KAAK4xC,aAAad,EAElB,MAED,KAAK,SAEJ,GAAI9wC,KAAK2wC,QAAS,CAEjB,IAAKG,EAAM,GACVA,EAAM,GAAK,QAEZ9wC,MAAKixC,aAAapuC,KAAKiuC,EAAM,GAC7B9wC,MAAK+vC,kBAAoBe,EAAM,EAE/B,IAAI9wC,KAAK6xC,cACR7xC,KAAK6xC,cAActB,WAAavwC,KAAK+vC,kBAGvC,KAED,KAAK,IAEJ/vC,KAAKwqC,YAAYsG,EAEjB,MAED,KAAK,KAEJ9wC,KAAKi/B,QAAQ6R,EAEb,MAED,KAAK,KAEJ9wC,KAAK8xC,kBAAkBhB,EAEvB,MAED,KAAK,IAEJ9wC,KAAK+xC,UAAUjB,IAQVlB,GAAA9vC,UAAAqmC,UAAR,WAEC,IAAK,GAAI6L,GAAkB,EAAGA,EAAWhyC,KAAKqxC,SAAS9xC,SAAUyyC,EAAU,CAC1E,GAAI9C,GAAsBlvC,KAAKqxC,SAASW,GAAU9C,MAClD,IAAI+C,GAAmB/C,EAAO3vC,MAC9B,IAAI2yC,EACJ,IAAIC,EACJ,IAAIjpB,EACJ,IAAI1P,EAEJ,IAAID,EACJ,IAAI64B,EACJ,IAAIC,EAEJ,KAAK,GAAI5C,GAAW,EAAGA,EAAIwC,IAAaxC,EAAG,CAC1CvmB,EAAW,GAAIjd,EACfimC,GAAiBhD,EAAOO,GAAGyC,cAC3BC,GAAoBD,EAAe3yC,MAEnC,KAAKga,EAAI,EAAGA,EAAI44B,IAAqB54B,EACpCvZ,KAAKsyC,uBAAuBJ,EAAe34B,GAAI2P,EAEhD,IAAIA,EAASU,cAAcrqB,QAAU,EACpC,QAGDS,MAAKi1B,gBAAyB/L,EAE9BmpB,GAAa,GAAIz/B,GAAeE,EAAuBwB,oBAGvD,IAAItU,KAAK+8B,cAAgB,EACxBsV,EAAWp9B,KAAOtC,EAAmBuC,UAEtCsE,GAAO,GAAIR,GAAKkQ,EAAUmpB,EAE1B,IAAIryC,KAAKqxC,SAASW,GAAUlsC,KAAM,CAEjC0T,EAAK1T,KAAO9F,KAAKqxC,SAASW,GAAUlsC,SAE9B,IAAIopC,EAAOO,GAAG3pC,KAAM,CAG1B0T,EAAK1T,KAAOopC,EAAOO,GAAG3pC,SAEhB,CAGN0T,EAAK1T,KAAO,GAGb9F,KAAKywC,QAAQ5tC,KAAK2W,EAElB,IAAI01B,EAAOO,GAAGc,YAAc,GAC3B8B,EAAWvsC,KAAOopC,EAAOO,GAAGc,WAAa,IAAM/2B,EAAK1T,SACpDusC,GAAWvsC,KAAO9F,KAAKuyC,WAAa,IAAM/4B,EAAK1T,IAEhD,IAAI0T,EAAKC,UAAUla,OAAS,EAAG,CAC9B,IAAK6yC,EAAK,EAAGA,EAAK54B,EAAKC,UAAUla,SAAU6yC,EAC1C54B,EAAKC,UAAU24B,GAAI14B,SAAW24B,EAINryC,KAAK82B,UAAWpsB,SAAS8O,EAEnDxZ,MAAKi1B,gBAAyBzb,KAUzBo2B,GAAA9vC,UAAAwyC,uBAAR,SAA+BE,EAA6BtpB,GAE3D,GAAI8kB,GAAwBwE,EAAcxE,KAC1C,IAAIiB,EACJ,IAAIF,GAAkBf,EAAMzuC,MAC5B,IAAI0pC,EACJ,IAAIkF,EAEJ,IAAIjD,GAAyB,GAAIzoC,MACjC,IAAIoL,GAAoB,GAAIpL,MAC5B,IAAIqL,GAAwB,GAAIrL,MAChC,IAAImL,GAAiC,GAAInL,MAEzCzC,MAAKyyC,eACLzyC,MAAK0yC,aAAe,CAEpB,IAAI73B,EACJ,KAAK,GAAI7b,GAAW,EAAGA,EAAI+vC,IAAY/vC,EAAG,CAEzCiwC,EAAOjB,EAAMhvC,EACbiqC,GAAWgG,EAAK0D,SAASpzC,OAAS,CAElC,KAAKsb,EAAI,EAAGA,EAAIouB,IAAYpuB,EAAG,CAE9B7a,KAAK4yC,oBAAoB3D,EAAMp0B,EAAGqwB,EAAUr9B,EAAKD,EAASE,EAC1D9N,MAAK4yC,oBAAoB3D,EAAM,EAAG/D,EAAUr9B,EAAKD,EAASE,EAC1D9N,MAAK4yC,oBAAoB3D,EAAMp0B,EAAI,EAAGqwB,EAAUr9B,EAAKD,EAASE,IAGhE,GAAIo9B,EAAS3rC,OAAS,EAAG,CACxB4uC,EAAM,GAAIhiC,GAAoB,KAC9BgiC,GAAIv/B,kBAAoBd,EAAQvO,OAAQ,MAAQ,IAChD4uC,GAAI9/B,cAAcT,EAClBugC,GAAI7/B,gBAAgB48B,EACpBiD,GAAIp/B,oBAAoBjB,EACxBqgC,GAAI3/B,UAAUX,EAEdqb,GAASza,eAAe0/B,IAIlByB,GAAA9vC,UAAA8yC,oBAAR,SAA4B3D,EAAezN,EAAoB0J,EAAwBr9B,EAAmBD,EAAgCE,GAEzI,GAAI4zB,EACJ,IAAI4H,EACJ,IAAIuJ,EACJ,IAAIC,EAEJ,KAAK9yC,KAAKyyC,aAAaxD,EAAK0D,SAASnR,IAAe,CAEnDE,EAAQ1hC,KAAK0yC,YACb1yC,MAAKyyC,aAAaxD,EAAK0D,SAASnR,MAAkBxhC,KAAK0yC,YACvDpJ,GAAStpC,KAAK+wC,UAAU9B,EAAK8D,cAAcvR,GAAe,EAC1D0J,GAASroC,KAAKymC,EAAOh8B,EAAEtN,KAAKgwC,OAAQ1G,EAAO/7B,EAAEvN,KAAKgwC,OAAQ1G,EAAO97B,EAAExN,KAAKgwC,OAExE,IAAIf,EAAK+D,cAAczzC,OAAS,EAAG,CAClCszC,EAAe7yC,KAAKgxC,eAAe/B,EAAK+D,cAAcxR,GAAe,EACrE1zB,GAAQjL,KAAKgwC,EAAavlC,EAAGulC,EAAatlC,EAAGslC,EAAarlC,GAG3D,GAAIyhC,EAAKgE,UAAU1zC,OAAS,EAAG,CAE9B,IACCuzC,EAAK9yC,KAAK+gC,KAAKkO,EAAKgE,UAAUzR,GAAe,EAC7C3zB,GAAIhL,KAAKiwC,EAAGh0C,EAAGg0C,EAAGxE,GAEjB,MAAO9vC,GAER,OAAQgjC,GACP,IAAK,GACJ3zB,EAAIhL,KAAK,EAAG,EACZ,MACD,KAAK,GACJgL,EAAIhL,KAAK,GAAI,EACb,MACD,KAAK,GACJgL,EAAIhL,KAAK,EAAG,UAMV,CACN6+B,EAAQ1hC,KAAKyyC,aAAaxD,EAAK0D,SAASnR,IAAgB,EAGzD5zB,EAAQ/K,KAAK6+B,GAONkO,GAAA9vC,UAAA8xC,aAAR,SAAqBd,GAEpB9wC,KAAK6xC,cAAgB,IACrB7xC,MAAKkzC,sBAAwB,IAC7BlzC,MAAKqxC,SAASxuC,KAAK7C,KAAKmzC,eAAiB,GAAIC,GAE7C,IAAItC,EACH9wC,KAAKmzC,eAAertC,KAAOgrC,EAAM,GAO3BlB,GAAA9vC,UAAA6xC,YAAR,SAAoBb,GAEnB,IAAK9wC,KAAKmzC,eACTnzC,KAAK4xC,aAAa,KACnB5xC,MAAK6xC,cAAgB,GAAIwB,EAEzBrzC,MAAK6xC,cAActB,WAAavwC,KAAK+vC,iBAErC,IAAIe,EACH9wC,KAAK6xC,cAAc/rC,KAAOgrC,EAAM,EACjC9wC,MAAKmzC,eAAejE,OAAOrsC,KAAK7C,KAAK6xC,cAErC7xC,MAAKszC,oBAAoB,MAOlB1D,GAAA9vC,UAAAwzC,oBAAR,SAA4BxC,GAE3B9wC,KAAKkzC,sBAAwB,GAAIK,EACjC,IAAIzC,EACH9wC,KAAKkzC,sBAAsBrrC,IAAMipC,EAAM,EACxC9wC,MAAK6xC,cAAcK,eAAervC,KAAK7C,KAAKkzC,uBAOrCtD,GAAA9vC,UAAA0qC,YAAR,SAAoBsG,GAInB,GAAIhG,GAAWC,EAAYC,CAC3B,IAAI8F,EAAMvxC,OAAS,EAAG,CACrB,GAAIi0C,KACJ,IAAI9jB,EAEJ,KAAK,GAAI1wB,GAAW,EAAGA,EAAI8xC,EAAMvxC,SAAUP,EAAG,CAC7C0wB,EAAMgY,WAAWoJ,EAAM9xC,GACvB,KAAKoyB,MAAM1B,GACV8jB,EAAO3wC,KAAK6sB,GAGdob,EAAc0I,EAAO,EACrBzI,GAAcyI,EAAO,EACrBxI,IAAewI,EAAO,EACtBxzC,MAAK+wC,UAAUluC,KAAK,GAAI4wC,GAAO3I,EAAIC,EAAIC,QAEjC,CACNF,EAAcpD,WAAWoJ,EAAM,GAC/B/F,GAAcrD,WAAWoJ,EAAM,GAC/B9F,IAAetD,WAAWoJ,EAAM,GAEhC9wC,MAAK+wC,UAAUluC,KAAK,GAAI4wC,GAAO3I,EAAIC,EAAIC,KASjC4E,GAAA9vC,UAAAm/B,QAAR,SAAgB6R,GAEf,GAAIA,EAAMvxC,OAAS,EAAG,CACrB,GAAIi0C,KACJ,IAAI9jB,EACJ,KAAK,GAAI1wB,GAAW,EAAGA,EAAI8xC,EAAMvxC,SAAUP,EAAG,CAC7C0wB,EAAMgY,WAAWoJ,EAAM9xC,GACvB,KAAKoyB,MAAM1B,GACV8jB,EAAO3wC,KAAK6sB,GAEd1vB,KAAK+gC,KAAKl+B,KAAK,GAAI6wC,GAAGF,EAAO,GAAI,EAAIA,EAAO,SAEtC,CACNxzC,KAAK+gC,KAAKl+B,KAAK,GAAI6wC,GAAGhM,WAAWoJ,EAAM,IAAK,EAAIpJ,WAAWoJ,EAAM,OAS3DlB,GAAA9vC,UAAAgyC,kBAAR,SAA0BhB,GAEzB,GAAIA,EAAMvxC,OAAS,EAAG,CACrB,GAAIi0C,KACJ,IAAI9jB,EACJ,KAAK,GAAI1wB,GAAW,EAAGA,EAAI8xC,EAAMvxC,SAAUP,EAAG,CAC7C0wB,EAAMgY,WAAWoJ,EAAM9xC,GACvB,KAAKoyB,MAAM1B,GACV8jB,EAAO3wC,KAAK6sB,GAEd1vB,KAAKgxC,eAAenuC,KAAK,GAAI4wC,GAAOD,EAAO,GAAIA,EAAO,IAAKA,EAAO,SAE5D,CACNxzC,KAAKgxC,eAAenuC,KAAK,GAAI4wC,GAAO/L,WAAWoJ,EAAM,IAAKpJ,WAAWoJ,EAAM,KAAMpJ,WAAWoJ,EAAM,OAQ5FlB,GAAA9vC,UAAAiyC,UAAR,SAAkBjB,GAEjB,GAAIniB,GAAamiB,EAAMvxC,MACvB,IAAI0vC,GAAgB,GAAI0E,EAExB,KAAK3zC,KAAK6xC,cAAe,CACxB7xC,KAAK2xC,YAAY,MAGlB,GAAI/jC,EACJ,KAAK,GAAI5O,GAAW,EAAGA,EAAI2vB,IAAO3vB,EAAG,CAEpC,GAAI8xC,EAAM9xC,IAAM,GAAI,CACnB,SAGD4O,EAAUkjC,EAAM9xC,GAAGw6B,MAAM,IACzByV,GAAK8D,cAAclwC,KAAK7C,KAAK4zC,WAAW7e,SAASnnB,EAAQ,IAAK5N,KAAK+wC,UAAUxxC,QAE7E,IAAIqO,EAAQ,IAAM+0B,OAAO/0B,EAAQ,IAAIrO,OAAS,EAC7C0vC,EAAKgE,UAAUpwC,KAAK7C,KAAK4zC,WAAW7e,SAASnnB,EAAQ,IAAK5N,KAAK+gC,KAAKxhC,QAErE,IAAIqO,EAAQ,IAAM+0B,OAAO/0B,EAAQ,IAAIrO,OAAS,EAC7C0vC,EAAK+D,cAAcnwC,KAAK7C,KAAK4zC,WAAW7e,SAASnnB,EAAQ,IAAK5N,KAAKgxC,eAAezxC,QAEnF0vC,GAAK0D,SAAS9vC,KAAKiuC,EAAM9xC,IAG1BgB,KAAKkzC,sBAAsBlF,MAAMnrC,KAAKosC,GAM/BW,GAAA9vC,UAAA8zC,WAAR,SAAmBlS,EAAcniC,GAEhC,GAAImiC,EAAQ,EACX,MAAOA,GAAQniC,EAAS,MACxB,OAAOmiC,GAGDkO,GAAA9vC,UAAAswC,SAAR,SAAiBhpC,GAEhB,GAAIysC,GAAsBzsC,EAAKoyB,MAAM,SACrC,IAAIsa,EACJ,IAAIhD,EACJ,IAAIj2B,EAEJ,IAAIk5B,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAI/9B,EACJ,IAAI9E,EACJ,IAAIgF,EACJ,IAAI/E,EACJ,IAAIgE,EACJ,IAAI6+B,EAEJ,KAAK,GAAIl1C,GAAW,EAAGA,EAAI60C,EAAoBt0C,SAAUP,EAAG,CAG3D80C,EAASD,EAAoB70C,GAAGw6B,MAAM,MAAO+X,KAAK,IAAI/X,MAAM,KAG5D,IAAIsa,EAAMv0C,QAAU,EACnBu0C,EAAQD,EAAoB70C,GAAGw6B,MAAMmJ,OAAOC,aAAa,IAE1D1sB,GAAe9E,EAAQgF,EAAgB,QACvC/E,GAAW,CACX2iC,GAAc,KACdC,GAAW,KACX5+B,GAAQ,CACR6+B,GAAQ,EAER,KAAKr5B,EAAI,EAAGA,EAAIi5B,EAAMv0C,SAAUsb,EAAG,CAElCi5B,EAAMj5B,GAAKi5B,EAAMj5B,GAAG6lB,QAAQ,OAAQ,GAEpC,IAAIoT,EAAMj5B,GAAGgmB,UAAU,EAAG,IAAM,MAAQhmB,GAAK,GAAKi5B,EAAMj5B,IAAM,IAAK,CAClEi2B,EAAQgD,EAAMj5B,GAAG2e,MAAM,IAEvB,IAAImJ,OAAOmO,EAAM,IAAIqD,WAAW,IAAM,GAAKxR,OAAOmO,EAAM,IAAIqD,WAAW,IAAM,GAC5ErD,EAAM,GAAKA,EAAM,GAAGjQ,UAAU,EAAGiQ,EAAM,GAAGvxC,OAE3C,IAAIsb,GAAK,EAAG,CACX7a,KAAKuyC,WAAazB,EAAMS,KAAK,GAC7BvxC,MAAKuyC,WAAcvyC,KAAKuyC,YAAc,GAAK,SAAWvyC,KAAKuyC,eAErD,CAEN,OAAQzB,EAAM,IAEb,IAAK,KACJ,GAAIA,EAAM,KAAO1f,MAAMqb,OAAOqE,EAAM,MAAQA,EAAM,KAAO1f,MAAMqb,OAAOqE,EAAM,MAAQA,EAAM,KAAO1f,MAAMqb,OAAOqE,EAAM,KACnH1/B,EAAQ0/B,EAAM,GAAG,KAAO,GAAKA,EAAM,GAAG,KAAO,EAAIA,EAAM,GAAG,GAC3D,MAED,KAAK,KACJ,GAAIA,EAAM,KAAO1f,MAAMqb,OAAOqE,EAAM,MAAQA,EAAM,KAAO1f,MAAMqb,OAAOqE,EAAM,MAAQA,EAAM,KAAO1f,MAAMqb,OAAOqE,EAAM,KAAM,CACzH16B,EAAgB06B,EAAM,GAAG,KAAO,GAAKA,EAAM,GAAG,KAAO,EAAIA,EAAM,GAAG,GAClEkD,GAAc,KAEf,KAED,KAAK,KACJ,GAAIlD,EAAM,KAAO1f,MAAMqb,OAAOqE,EAAM,KACnCz/B,EAAWo7B,OAAOqE,EAAM,IAAI,IAC7B,IAAIz/B,GAAY,EACf2iC,EAAc,KACf,MAED,KAAK,KACJ,GAAIlD,EAAM,KAAO1f,MAAMqb,OAAOqE,EAAM,MAAQA,EAAM,KAAO1f,MAAMqb,OAAOqE,EAAM,MAAQA,EAAM,KAAO1f,MAAMqb,OAAOqE,EAAM,KAAM,CACzH56B,EAAe46B,EAAM,GAAG,KAAO,GAAKA,EAAM,GAAG,KAAO,EAAIA,EAAM,GAAG,GACjEmD,GAAW,KAEZ,KAED,KAAK,KACL,IAAK,IACJ,GAAInD,EAAM,KAAO1f,MAAMqb,OAAOqE,EAAM,KACnCz7B,EAAQo3B,OAAOqE,EAAM,GACtB,MAED,KAAK,SACJoD,EAAQl0C,KAAKo0C,iBAAiBtD,EAC9BoD,GAAQA,EAAMxT,QAAQ,MAAO,QAMlC,GAAIwT,GAAS,GAAI,CAEhB,GAAIF,EAAa,CAEhBD,EAAsB,GAAIpE,EAC1BoE,GAAoB39B,cAAgBA,CACpC29B,GAAoB1iC,SAAWA,CAE/B,IAAIgjC,GAA4B,GAAIC,EACpCD,GAAah/B,MAAQA,CACrBg/B,GAAaN,oBAAsBA,CACnCM,GAAa9D,WAAavwC,KAAKuyC,UAE/B,KAAKvyC,KAAKu0C,sBACTv0C,KAAKu0C,sBAAwB,GAAI9xC,MAElCzC,MAAKu0C,sBAAsB1xC,KAAKwxC,GAIjCr0C,KAAK23B,gBAAgB33B,KAAKuyC,WAAY,GAAI/e,GAAW0gB,QAE/C,IAAID,IAAa7iB,MAAMhgB,GAAQ,CAErC,GAAIi/B,GAAoB,GAAIC,EAC5BD,GAAGE,WAAavwC,KAAKuyC,UAErB,IAAIl9B,GAAS,EACZ/N,QAAQC,IAAI,yEAA2EvH,KAAKuyC,WAAa,yCAE1G,IAAIiC,EAEJ,IAAIx0C,KAAK+8B,aAAe,EAAG,CAC1ByX,EAAK,GAAI5hC,GAAexB,EAExB,IAAIqjC,GAA2CD,CAE/CC,GAASp/B,MAAQA,CACjBo/B,GAASv+B,aAAeA,CACxBu+B,GAASjgC,OAAS,IAElB,IAAIw/B,EAAa,CAChBS,EAASr+B,cAAgBA,CACzBq+B,GAASpjC,SAAWA,OAGf,CACNmjC,EAAK,GAAI5hC,GAAexB,EACxBojC,GAAGv/B,KAAOtC,EAAmBuC,UAE7B,IAAIw/B,GAAgDF,CAGpDE,GAAcx+B,aAAeA,CAC7Bw+B,GAAclgC,OAAS,IAEvB,IAAIw/B,EAAa,CAChBU,EAAct+B,cAAgBA,CAC9Bs+B,GAAcrjC,SAAWA,GAI3Bg/B,EAAGmE,GAAKA,CAERx0C,MAAKwwC,gBAAgB3tC,KAAKwtC,EAE1B,IAAIrwC,KAAKywC,QAAQlxC,OAAS,EACzBS,KAAK0wC,cAAcL,IAKtBrwC,KAAK8vC,cAAgB,KAGdF,GAAA9vC,UAAAs0C,iBAAR,SAAyBtD,GAExB,GAAIjpC,GAAa,EACjB,IAAI7I,EACJ,IAAI21C,EAEJ,KAAK31C,EAAI,EAAGA,EAAI8xC,EAAMvxC,QAAS,CAC9B,OAAQuxC,EAAM9xC,IACb,IAAK,UACL,IAAK,UACL,IAAK,MACL,IAAK,SACL,IAAK,UACJA,GAAK,CACL,MACD,KAAK,MACJA,GAAK,CACL,MACD,KAAK,KACL,IAAK,KACL,IAAK,KACJA,GAAK,CACL,SACD,SACC21C,EAAY,IACZ,OAGF,GAAIA,EACH,MAIF,IAAK31C,EAAGA,EAAI8xC,EAAMvxC,OAAQP,IAAK,CAC9B6I,GAAOipC,EAAM9xC,EACb6I,IAAO,IAIRA,EAAMA,EAAI64B,QAAQ,OAAQ,GAE1B,OAAO74B,GAGA+nC,GAAA9vC,UAAA4xC,QAAR,SAAgBkD,GAIf50C,KAAK23B,gBAAgB,MAAO,GAAInE,GAAWohB,GAAS,KACpD50C,MAAK63B,iCAGE+X,GAAA9vC,UAAA4wC,cAAR,SAAsBL,GAErB,GAAIwE,EACJ,IAAIr7B,EACJ,IAAIs7B,EACJ,IAAIj6B,EACJ,IAAIw5B,EAEJ,KAAK,GAAIr1C,GAAW,EAAGA,EAAIgB,KAAKywC,QAAQlxC,SAAUP,EAAG,CACpDwa,EAAOxZ,KAAKywC,QAAQzxC,EACpB61C,GAAcr7B,EAAKE,SAAS5T,KAAK0zB,MAAM,IAEvC,IAAIqb,EAAY,IAAMxE,EAAGE,WAAY,CAEpC,GAAIF,EAAGmE,GAAI,CACV,GAAIh7B,EAAKE,SACRF,EAAKE,SAAW,IACjBF,GAAKE,SAAW22B,EAAGmE,OAEb,IAAInE,EAAGh8B,QAAS,CACtB,GAAIrU,KAAK+8B,aAAe,EAAG,CAC1B+X,EAAuBt7B,EAAKE,QAE5Bo7B,GAAGzgC,QAAUg8B,EAAGh8B,OAChBygC,GAAG1jC,MAAQi/B,EAAGj/B,KACd0jC,GAAGz/B,MAAQg7B,EAAGh7B,KACdy/B,GAAGtgC,OAAS,IAEZ,IAAI67B,EAAG14B,eAAgB,CAMtBm9B,EAAGn9B,eAAiB,IACpBm9B,GAAGn9B,eAAiB04B,EAAG14B,mBAEjB,IAAI3X,KAAKu0C,sBAAuB,CAEtC,IAAK15B,EAAI,EAAGA,EAAI7a,KAAKu0C,sBAAsBh1C,SAAUsb,EAAG,CACvDw5B,EAAer0C,KAAKu0C,sBAAsB15B,EAE1C,IAAIw5B,EAAa9D,YAAcF,EAAGE,WAAY,CAC7CuE,EAAGn9B,eAAiB,IACpBm9B,GAAGn9B,eAAiB08B,EAAaN,mBACjCe,GAAG1jC,MAAQijC,EAAajjC,KACxB0jC,GAAGz/B,MAAQg/B,EAAah/B,KACxB,cAIG,CACNy/B,EAAsBt7B,EAAKE,QAC3Bo7B,GAAG7/B,KAAOtC,EAAmBuC,UAE7B4/B,GAAGzgC,QAAUg8B,EAAGh8B,OAChBygC,GAAG1jC,MAAQi/B,EAAGj/B,KACd0jC,GAAGtgC,OAAS,IAEZ,IAAI67B,EAAG14B,eAAgB,CAKtBm9B,EAAGn9B,eAAiB,IACpBm9B,GAAGn9B,eAAiB04B,EAAG14B,mBACjB,IAAI3X,KAAKu0C,sBAAuB,CACtC,IAAK15B,EAAI,EAAGA,EAAI7a,KAAKu0C,sBAAsBh1C,SAAUsb,EAAG,CACvDw5B,EAAer0C,KAAKu0C,sBAAsB15B,EAE1C,IAAIw5B,EAAa9D,YAAcF,EAAGE,WAAY,CAC7CuE,EAAGn9B,eAAiB,IACpBm9B,GAAGn9B,eAAiB08B,EAAaN,mBACjCe,GAAG1jC,MAAQijC,EAAajjC,KAExB,WAQLoI,EAAKE,SAAS5T,KAAO+uC,EAAY,GAAIA,EAAY,GAAKA,EAAY,EAClE70C,MAAKywC,QAAQrB,OAAOpwC,EAAG,KACrBA,GAIJ,GAAIqxC,EAAGmE,IAAMM,EACZ90C,KAAKi1B,gBAAgBob,EAAGmE,IAAMM,GAGxBlF,GAAA9vC,UAAA2xC,eAAR,WAEC,GAAIzxC,KAAKwwC,gBAAgBjxC,QAAU,EAClC,MAED,KAAK,GAAIP,GAAW,EAAGA,EAAIgB,KAAKwwC,gBAAgBjxC,SAAUP,EACzDgB,KAAK0wC,cAAc1wC,KAAKwwC,gBAAgBxxC,IAE3C,OAAA4wC,IAh6BwBnc,EAo6BxB,IAAM2f,GAAW,WAAjB,QAAMA,KAGEpzC,KAAAkvC,OAAiB,GAAIzsC,OAC7B,MAAA2wC,KAEA,IAAMC,GAAK,WAAX,QAAMA,KAIErzC,KAAAkyC,eAAiC,GAAIzvC,OAC7C,MAAA4wC,KAEA,IAAME,GAAa,WAAnB,QAAMA,KAGEvzC,KAAAguC,MAAmB,GAAIvrC,OAC/B,MAAA8wC,KAEA,IAAMe,GAAY,WAAlB,QAAMA,KAIEt0C,KAAAoR,MAAe,QACfpR,MAAAqV,MAAe,EACvB,MAAAi/B,KAEA,IAAMhE,GAAc,WAApB,QAAMA,KAMEtwC,KAAAoR,MAAe,QACfpR,MAAAqV,MAAe,EACvB,MAAAi7B,KAEA,IAAMqD,GAAQ,WAAd,QAAMA,KAEE3zC,KAAA+yC,cAAuC,GAAItwC,MAC3CzC,MAAAizC,UAAmC,GAAIxwC,MACvCzC,MAAAgzC,cAAuC,GAAIvwC,MAC3CzC,MAAA2yC,SAAoB,GAAIlwC,OAChC,MAAAkxC,KzCyjQA,IyCpjQMD,GAAE,WAWP,QAXKA,GAWO50C,EAAcwvC,GAAd,GAAAxvC,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAwvC,QAAA,GAAY,CAAZA,EAAA,EAEzBtuC,KAAK+0C,GAAKj2C,CACVkB,MAAKg1C,GAAK1G,EAMX1uC,OAAAC,eAAW6zC,EAAA5zC,UAAA,KzCijQJC,IyCjjQP,WAEC,MAAOC,MAAKg1C,IzCkjQN90C,IyC/iQP,SAAakzB,GAEZpzB,KAAKg1C,GAAK5hB,GzCgjQJhzB,WAAY,KACZC,aAAc,MyC3iQrBT,QAAAC,eAAW6zC,EAAA5zC,UAAA,KzCijQJC,IyCjjQP,WAEC,MAAOC,MAAK+0C,IzCkjQN70C,IyC/iQP,SAAakzB,GAEZpzB,KAAK+0C,GAAK3hB,GzCgjQJhzB,WAAY,KACZC,aAAc,MyC3iQdqzC,GAAA5zC,UAAAy/B,MAAP,WAEC,MAAO,IAAImU,GAAG1zC,KAAK+0C,GAAI/0C,KAAKg1C,IAMtBtB,GAAA5zC,UAAA2S,SAAP,WAEC,MAAOzS,MAAK+0C,GAAK,IAAM/0C,KAAKg1C,GAE9B,OAAAtB,KAEA,IAAMD,GAAM,WAeX,QAfKA,GAeOnmC,EAAcC,EAAcC,EAAck0B,GAA1C,GAAAp0B,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAk0B,QAAA,GAAgB,CAAhBA,EAAA,EAErD1hC,KAAKi1C,GAAK3nC,CACVtN,MAAKk1C,GAAK3nC,CACVvN,MAAKm1C,GAAK3nC,CACVxN,MAAKo1C,OAAS1T,EAOf9hC,OAAAC,eAAW4zC,EAAA3zC,UAAA,SzCsiQJC,IyCjiQP,WAEC,MAAOC,MAAKo1C,QzCsiQNl1C,IyC7iQP,SAAiBm1C,GAEhBr1C,KAAKo1C,OAASC,GzC8iQRj1C,WAAY,KACZC,aAAc,MyCniQrBT,QAAAC,eAAW4zC,EAAA3zC,UAAA,KzC0iQJC,IyC1iQP,WAEC,MAAOC,MAAKi1C,IzC2iQN/0C,IyCxiQP,SAAakzB,GAEZpzB,KAAKi1C,GAAK7hB,GzCyiQJhzB,WAAY,KACZC,aAAc,MyCniQrBT,QAAAC,eAAW4zC,EAAA3zC,UAAA,KzC0iQJC,IyC1iQP,WAEC,MAAOC,MAAKk1C,IzC2iQNh1C,IyCxiQP,SAAakzB,GAEZpzB,KAAKk1C,GAAK9hB,GzCyiQJhzB,WAAY,KACZC,aAAc,MyCniQrBT,QAAAC,eAAW4zC,EAAA3zC,UAAA,KzC0iQJC,IyC1iQP,WAEC,MAAOC,MAAKm1C,IzC2iQNj1C,IyCxiQP,SAAakzB,GAEZpzB,KAAKm1C,GAAK/hB,GzCyiQJhzB,WAAY,KACZC,aAAc,MyCpiQdozC,GAAA3zC,UAAAy/B,MAAP,WAEC,MAAO,IAAIkU,GAAOzzC,KAAKi1C,GAAIj1C,KAAKk1C,GAAIl1C,KAAKm1C,IAE3C,OAAA1B,KApMAh0C,GAAAJ,QAASuwC,IzCgvQNpgC,gCAAgChP,UAAUiP,2CAA2CjP,UAAU03B,0CAA0C13B,UAAU23B,iCAAiC33B,UAAU43B,qCAAqC53B,UAAU63B,sCAAsC73B,UAAU+wB,uCAAuC/wB,UAAUwL,uDAAuDxL,UAAUqZ,mCAAmCrZ,UAAUyX,qDAAqDzX,UAAU2X,4CAA4C3X,UAAU4X,gDAAgD5X,UAAU80C,yDAAyD90C,YAAY+0C,8BAA8B,SAASh3C,EAAQkB,EAAOJ,G0C5qSzuB,GAAOm2C,GAAWj3C,EAAgB,sCAElC,IAAO66B,GAAS76B,EAAgB,+BAChC,IAAOotC,GAAYptC,EAAgB,kCACnC,IAAO2/B,GAAS3/B,EAAgB,+BAChC,IAAOqxC,GAASrxC,EAAgB,+B1CgrShC,I0C3qSMk3C,GAAO,WAAb,QAAMA,MA8CSA,EAAAC,iBAAd,WAECF,EAAYG,cAAcF,EAAQG,aAbrBH,GAAAG,YAA4BnzC,MAAc22B,EAAWuS,EAAczN,EAAW0R,EAe7F,OAAA6F,KAEAh2C,GAAiBJ,QAARo2C,I1C4qSNI,sCAAsCr1C,UAAUg4B,+BAA+B,+BAA+ByF,+BAA+B,+BAA+ByN,kCAAkC,kCAAkCgE,+BAA+B",
  "file": "awayjs-parsers.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3FileData\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\r\n\r\n\r\nclass AWDAssetParserBase\r\n{\r\n\r\n\tprivate _awd_file_data:AWD3FileData;\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\r\n\tpublic get awd_file_data():AWD3FileData\r\n\t{\r\n\t\treturn this._awd_file_data;\r\n\t}\r\n\tpublic set awd_file_data(awd_file_data:AWD3FileData)\r\n\t{\r\n\t\tthis._awd_file_data=awd_file_data;\r\n\t}\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = AWDAssetParserBase;\r\n\r\n",
    null,
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport AWDAssetParserBase\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWD3FileData \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\r\n\r\nimport GeometryAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser\");\r\nimport PrefabAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser\");\r\nimport DisplayObjectContainerAWDParser \t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser\");\r\nimport MeshAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser\");\r\nimport BillboardAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser\");\r\nimport BitmapTextureAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/BitmapTextureAWDParser\");\r\nimport CameraAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser\");\r\nimport CubeTextureAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/CubeTextureAWDParser\");\r\nimport LightAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser\");\r\nimport LightPickerAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser\");\r\nimport MaterialAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser\");\r\nimport MovieClipAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser\");\r\nimport ShadowMethodAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser\");\r\nimport SharedMethodAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser\");\r\nimport SkeletonAnimClipAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser\");\r\nimport SkeletonAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser\");\r\nimport SkeletonPoseAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser\");\r\nimport SkyboxAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser\");\r\nimport TesselatedFontAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser\");\r\nimport TextfieldAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser\");\r\nimport TextformatAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser\");\r\nimport VertexAnimationSetAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser\");\r\nimport VertexAnimClipAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser\");\r\nimport CommandAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser\");\r\nimport MetadataAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser\");\r\nimport BlockNameSpaceAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser\");\r\nimport AnimatorAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser\");\r\nimport AudioAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser\");\r\n\r\n\r\n\r\nclass AWDBlockParsers\r\n{\r\n\r\n\tprivate _supported_asset_blocks:Object = {};\r\n\tprivate _all_block_parsers:Array<AWDAssetParserBase>;\r\n\tconstructor()\r\n\t{\r\n\t\tthis._all_block_parsers=new Array<AWDAssetParserBase>();\r\n\r\n\t\tthis.add_block_parser(new GeometryAWDParser(), [1]);\r\n\t\tthis.add_block_parser(new PrefabAWDParser(), [11]);\r\n\t\tthis.add_block_parser(new DisplayObjectContainerAWDParser(), [22]);\r\n\t\tthis.add_block_parser(new MeshAWDParser(), [23, 24]);\r\n\r\n\t\tthis.add_block_parser(new BillboardAWDParser(), [25]);\r\n\t\tthis.add_block_parser(new SkyboxAWDParser(), [31]);\r\n\t\tthis.add_block_parser(new LightAWDParser(), [41]);\r\n\t\tthis.add_block_parser(new CameraAWDParser(), [42]);\r\n\t\t//this.add_block_parser(new TextureprojectorAWDParser(), [43]);\r\n\t\tthis.add_block_parser(new AudioAWDParser(), [44]);\r\n\t\tthis.add_block_parser(new LightPickerAWDParser(), [51]);\r\n\t\tthis.add_block_parser(new MaterialAWDParser(), [81]);\r\n\t\tthis.add_block_parser(new BitmapTextureAWDParser(), [82]);\r\n\t\tthis.add_block_parser(new CubeTextureAWDParser(), [83]);\r\n\t\tthis.add_block_parser(new SharedMethodAWDParser(), [91]);\r\n\t\tthis.add_block_parser(new ShadowMethodAWDParser(), [92]);\r\n\t\tthis.add_block_parser(new SkeletonAWDParser(), [101]);\r\n\t\tthis.add_block_parser(new SkeletonPoseAWDParser(), [102]);\r\n\t\tthis.add_block_parser(new SkeletonAnimClipAWDParser(), [103]);\r\n\t\tthis.add_block_parser(new VertexAnimClipAWDParser(), [111, 112]);\r\n\t\tthis.add_block_parser(new VertexAnimationSetAWDParser(), [113]);\r\n\t\t//this.add_block_parser(new UVAnimationClipAWDParser(), [121]);\r\n\t\tthis.add_block_parser(new AnimatorAWDParser(), [122]);\r\n\t\tthis.add_block_parser(new MovieClipAWDParser(), [133]);\r\n\t\tthis.add_block_parser(new TextfieldAWDParser(), [134]);\r\n\t\tthis.add_block_parser(new TesselatedFontAWDParser(), [135]);\r\n\t\tthis.add_block_parser(new TextformatAWDParser(), [136]);\r\n\r\n\r\n\t\tthis.add_block_parser(new CommandAWDParser(), [253]);\r\n\t\tthis.add_block_parser(new BlockNameSpaceAWDParser(), [254]);\r\n\t\tthis.add_block_parser(new MetadataAWDParser(), [255]);\r\n\r\n\r\n\t}\r\n\r\n\tpublic add_block_parser(block_parser:AWDAssetParserBase, block_types:Array<number>):void\r\n\t{\r\n\t\tfor(var i:number=0; i<block_types.length;i++){\r\n\t\t\tthis._supported_asset_blocks[block_types[i]]  = block_parser;\r\n\t\t}\r\n\t\tthis._all_block_parsers.push(block_parser);\r\n\r\n\t}\r\n\r\n\tpublic init_parser(file_data:AWD3FileData):void\r\n\t{\r\n\t\tfor(var i:number=0; i<this._all_block_parsers.length;i++){\r\n\t\t\tthis._all_block_parsers[i].awd_file_data=file_data;\r\n\t\t}\r\n\r\n\t}\r\n\tpublic parseAsset(type:number):boolean\r\n\t{\r\n\r\n\t\tvar this_parser:AWDAssetParserBase=this._supported_asset_blocks[type];\r\n\t\tif(this_parser!=undefined){\r\n\t\t\tthis_parser.parseFromBytes();\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\nexport = AWDBlockParsers;",
    "/**\r\n * Created by 80prozent on 4/18/2015.\r\n */\r\n\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass AnimatorAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar animSetBlockAdress:number; /*int*/\r\n\t\tvar targetAnimationSet:AnimationSetBase;\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar type:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR});\r\n\r\n\t\tanimSetBlockAdress = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar targetMeshLength:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar meshAdresses:Array<number> /*uint*/ = new Array<number>() /*uint*/;\r\n\t\tfor (var i:number /*int*/ = 0; i < targetMeshLength; i++)\r\n\t\t\tmeshAdresses.push(this.awd_file_data.newBlockBytes.readUnsignedInt());\r\n\r\n\t\tvar activeState:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar autoplay:boolean = ( this.awd_file_data.newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\r\n\t\tvar returnedArray:Array<any>;\r\n\t\tvar targetMeshes:Array<Mesh> = new Array<Mesh>();\r\n\r\n\t\tfor (i = 0; i < meshAdresses.length; i++) {\r\n\t\t\tvar targetMesh:Mesh = <Mesh>this.awd_file_data.getAssetByID(meshAdresses[i]);\r\n\t\t\tif (targetMesh!=undefined)\r\n\t\t\t\ttargetMeshes.push(targetMesh);\r\n\t\t}\r\n\t\tvar targetAnimationSet:AnimationSetBase = <AnimationSetBase>this.awd_file_data.getAssetByID(animSetBlockAdress);\r\n\t\tif (targetAnimationSet==undefined) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the AnimationSet ( \" + animSetBlockAdress + \" ) for this.awd_file_data Animator\");\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tvar thisAnimator:AnimatorBase;\r\n\t\tif (type == 1) {\r\n\r\n\t\t\tvar skeleton:Skeleton = <Skeleton>this.awd_file_data.getAssetByID(props.get(1, 0));\r\n\t\t\tif (skeleton==undefined) {\r\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the Skeleton ( \" + props.get(1, 0) + \" ) for this.awd_file_data Animator\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, skeleton);\r\n\r\n\t\t} else if (type == 2)\r\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\r\n\r\n\t\tfor (i = 0; i < targetMeshes.length; i++) {\r\n\t\t\tif (type == 1)\r\n\t\t\t\ttargetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\r\n\t\t\tif (type == 2)\r\n\t\t\t\ttargetMeshes[i].animator = (<VertexAnimator> thisAnimator);\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.data = thisAnimator;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + this.awd_file_data.cur_block.name);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = AnimatorAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nclass AudioAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\t//this.awd_file_data._texture_users[this.awd_file_data._cur_block_id.toString()] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\r\n\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\r\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block.id.toString(), new URLRequest(url), false, null, true);\r\n\r\n\t\t} else {\r\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray;\r\n\t\t\tdata = new ByteArray();\r\n\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\r\n\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\r\n\r\n\t\t\t//\r\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\r\n\t\t\t//\r\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\r\n\t\t\t// This gives the browser time to initialise image width / height.\r\n\r\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\r\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\r\n\t\t// Ignore for now\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t//this.awd_file_data._pPauseAndRetrieveDependencies();\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tvar audioStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing a \" + audioStylesNames[type] + \" AudioFile\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = AudioAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\n\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nclass BillboardAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar mat:MaterialBase= <MaterialBase> this.awd_file_data.getAssetByID(data_id);\r\n\r\n\t\tif (mat==undefined) {\r\n\t\t\tmat = new BasicMaterial();\r\n\t\t}\r\n\t\tmat.bothSides=true;\r\n\t\tvar billboard:Billboard = new Billboard(mat);\r\n\t\tthis.awd_file_data.cur_block.data = billboard;\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\r\n\t\tbillboard.extra = this.awd_file_data.parseUserAttributes();\r\n\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a Library-Billboard: Name = '\" + billboard.name + \"| Material-Name = \" + mat.name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = BillboardAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nclass BitmapTextureAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tvar asset:Texture2DBase;\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\t//this.awd_file_data._texture_users[this.awd_file_data._cur_block_id.toString()] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\r\n\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\r\n\r\n\t\t} else {\r\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray;\r\n\t\t\tdata = new ByteArray();\r\n\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\r\n\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\r\n\r\n\t\t\t//\r\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\r\n\t\t\t//\r\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\r\n\t\t\t// This gives the browser time to initialise image width / height.\r\n\r\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\r\n\t\t// Ignore for now\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Bitmap for Texture\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = BitmapTextureAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass BlockNameSpaceAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\r\n\t\tvar id:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar nameSpaceString:string = this.awd_file_data.parseVarStr();\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = BlockNameSpaceAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Parser\t\t\t\t= require(\"awayjs-parsers/lib/AWD3Parser\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\r\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass CameraAWD3Parser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void {\r\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar projection:ProjectionBase;\r\n\r\n\t\tthis.awd_file_data.newBlockBytes.readUnsignedByte(); //set as active camera\r\n\t\tthis.awd_file_data.newBlockBytes.readShort(); //lengthof lenses - not used yet\r\n\r\n\t\tvar projectiontype:number = this.awd_file_data.newBlockBytes.readShort();\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({\r\n\t\t\t101: this.awd_file_data.propsNrType,\r\n\t\t\t102: this.awd_file_data.propsNrType,\r\n\t\t\t103: this.awd_file_data.propsNrType,\r\n\t\t\t104: this.awd_file_data.propsNrType\r\n\t\t});\r\n\r\n\t\tswitch (projectiontype) {\r\n\t\t\tcase 5001:\r\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5002:\r\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5003:\r\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar camera:Camera = new Camera(projection);\r\n\t\tcamera.transform.matrix3D = mtx;\r\n\t\tif (par_id > 0) {\r\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id);\r\n\t\t\tif (parent != undefined) {\r\n\t\t\t\tparent.addChild(camera);\r\n\t\t\t\tparentName = parent.name;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcamera.name = name;\r\n\t\tprops = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\r\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\tcamera.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = camera;\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + camera.name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = CameraAWD3Parser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass CommandAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\r\n\t\tvar hasBlocks:boolean = ( this.awd_file_data.newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\r\n\t\tvar name:string = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar parentObject:DisplayObjectContainer;\r\n\t\tvar targetObject:DisplayObject;\r\n\r\n\t\tif(par_id>0)\r\n\t\t\tparentObject = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id); //for no only light is requested!!!!\r\n\r\n\t\tvar numCommands:number = this.awd_file_data.newBlockBytes.readShort();\r\n\t\tvar typeCommand:number = this.awd_file_data.newBlockBytes.readShort();\r\n\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR});\r\n\r\n\t\tswitch (typeCommand) {\r\n\t\t\tcase 1:\r\n\r\n\t\t\t\tvar targetID:number = props.get(1, 0);\r\n\t\t\t\t//var returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [LightBase.assetType, TextureProjector.assetType]); //for no only light is requested!!!!\r\n\t\t\t\ttargetObject = <DisplayObject>this.awd_file_data.getAssetByID(targetID); //for no only light is requested!!!!\r\n\t\t\t\tif(targetObject==undefined){\r\n\t\t\t\t\t//this._awd_data._blocks[blockID].addError(\"Could not find the light (ID = \" + targetID + \" ( for this CommandBock!\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (parentObject) {\r\n\t\t\t\t\tparentObject.addChild(targetObject);\r\n\t\t\t\t}\r\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (targetObject) {\r\n\t\t\tprops = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\r\n\r\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t\ttargetObject.extra = this.awd_file_data.parseUserAttributes();\r\n\r\n\t\t}\r\n\t\t//this._awd_data._blocks[blockID].data = targetObject\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = CommandAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\n\r\nclass CubeTextureAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar data_len:number;\r\n\t\tvar i:number;\r\n\r\n\t\t//this.awd_file_data._cubeTextures = new Array<any>();\r\n\t\t//this.awd_file_data._texture_users[ this.awd_file_data._cur_block_id.toString() ] = [];\r\n\r\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\r\n\t\t//this.awd_file_data._blocks[blockID].name =\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\t//this.awd_file_data.texture_users[this.awd_file_data.cur_block_id.toString()] = [];\r\n\t\t\t//this.awd_file_data.cubeTextures.push(null);\r\n\r\n\t\t\t// External\r\n\t\t\tif (type == 0) {\r\n\t\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar url:string;\r\n\t\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\r\n\r\n\t\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\r\n\t\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block_id.toString() + \"#\" + i, new URLRequest(url), false, null, true);\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar data:ByteArray;\r\n\t\t\t\tdata = new ByteArray();\r\n\r\n\t\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\r\n\t\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block_id.toString() + \"#\" + i, null, false, ParserUtils.byteArrayToImage(data), true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\r\n\t\t// Ignore for now\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t//this.awd_file_data._pPauseAndRetrieveDependencies();\r\n\t\t//this.awd_file_data._blocks[blockID].data = asset;\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing 6 \" + textureStylesNames[type] + \" Bitmaps for CubeTexture\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = CubeTextureAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AWDProperties\t\t\t= require(\"../AWD3ParserUtils/AWDProperties\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nclass DisplayObjectContainerAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tvar par_id:number;\r\n\t\tvar mtx:Matrix3D;\r\n\t\tvar ctr:DisplayObjectContainer;\r\n\t\tvar parent:DisplayObjectContainer;\r\n\r\n\t\tctr = new DisplayObjectContainer();\r\n\t\tpar_id = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tmtx = this.awd_file_data.parseMatrix3D();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tctr.transform.matrix3D = mtx;\r\n\r\n\r\n\t\tif (par_id > 0) {\r\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id);\r\n\t\t\tif (parent != undefined) {\r\n\t\t\t\tparent.addChild(ctr);\r\n\t\t\t\tparentName = parent.name;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// in AWD version 2.1 we read the Container properties\r\n\t\tif ((this.awd_file_data.major_version > 2)||((this.awd_file_data.major_version >= 2) && (this.awd_file_data.minor_version == 1))) {\r\n\t\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\r\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t}\r\n\t\t// in other versions we do not read the Container properties\r\n\t\telse {\r\n\t\t\tthis.awd_file_data.parseProperties(null);\r\n\t\t}\r\n\r\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\r\n\t\tctr.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data=ctr;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + ctr.name + \"' | Parent-Name = \" + parentName);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = DisplayObjectContainerAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\n\r\nclass GeometryAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar geom:Geometry = new Geometry();\r\n\r\n\t\t// Read name and sub count\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_subs:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\t// Read optional properties\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.geoNrType, 2:this.awd_file_data.geoNrType});\r\n\t\tvar geoScaleU:number = props.get(1, 1);\r\n\t\tvar geoScaleV:number = props.get(2, 1);\r\n\r\n\t\t// Loop through sub meshes\r\n\t\tvar subs_parsed:number = 0;\r\n\t\twhile (subs_parsed < num_subs) {\r\n\t\t\tvar is_curve_geom:boolean=false;\r\n\t\t\tvar i:number;\r\n\t\t\tvar sm_len:number, sm_end:number;\r\n\t\t\tvar w_indices:Array<number>;\r\n\t\t\tvar weights:Array<number>;\r\n\r\n\t\t\tsm_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tsm_end = this.awd_file_data.newBlockBytes.position + sm_len;\r\n\r\n\t\t\tvar subProps:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.geoNrType, 2:this.awd_file_data.geoNrType});\r\n\t\t\t// Loop through data streams\r\n\t\t\twhile (this.awd_file_data.newBlockBytes.position < sm_end) {\r\n\t\t\t\tvar idx:number = 0;\r\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n\t\t\t\t// Type, field type, length\r\n\t\t\t\tstr_type = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_ftype = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\r\n\r\n\t\t\t\tvar x:number, y:number, z:number;\r\n\r\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\r\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\tx = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t\ty = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t\tz = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\r\n\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\r\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tindices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 3) {\r\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tuvs[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 4) {\r\n\r\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tnormals[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 6) {\r\n\t\t\t\t\tw_indices = Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tw_indices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort()*3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 7) {\r\n\r\n\t\t\t\t\tweights = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tweights[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\r\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\r\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\r\n\t\t\t\t\tis_curve_geom=true;\r\n\t\t\t\t\tvar idx_pos:number = 0;\r\n\t\t\t\t\tvar idx_curves:number = 0;\r\n\t\t\t\t\tvar idx_uvs:number = 0;\r\n\r\n\t\t\t\t\tvar positions:Array<number> = new Array<number>();\r\n\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\r\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// x\r\n\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// y\r\n\t\t\t\t\t\tpositions[idx_pos++] =  this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// type\r\n\r\n\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 2\r\n\r\n\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.awd_file_data.parseUserAttributes(); // Ignore sub-mesh attributes for now\r\n\t\t\tif(is_curve_geom){\r\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\r\n\t\t\t\tcurve_sub_geom.updateIndices(indices);\r\n\t\t\t\tcurve_sub_geom.updatePositions(positions);\r\n\t\t\t\tcurve_sub_geom.updateCurves(curveData);\r\n\t\t\t\tcurve_sub_geom.updateUVs(uvs);\r\n\t\t\t\tgeom.addSubGeometry(curve_sub_geom);\r\n\t\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a CurveSubGeometry\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar triangle_sub_geom = new TriangleSubGeometry(true);\r\n\t\t\t\tif (weights)\r\n\t\t\t\t\ttriangle_sub_geom.jointsPerVertex = weights.length / (verts.length / 3);\r\n\t\t\t\tif (normals)\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveNormals = false;\r\n\t\t\t\tif (uvs)\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveUVs = false;\r\n\t\t\t\t//triangle_sub_geom.autoDeriveNormals = false;\r\n\t\t\t\tif (true) {\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveTangents = true;\r\n\t\t\t\t}\r\n\t\t\t\ttriangle_sub_geom.updateIndices(indices);\r\n\t\t\t\ttriangle_sub_geom.updatePositions(verts);\r\n\t\t\t\ttriangle_sub_geom.updateVertexNormals(normals);\r\n\t\t\t\ttriangle_sub_geom.updateUVs(uvs);\r\n\t\t\t\ttriangle_sub_geom.updateVertexTangents(null);\r\n\t\t\t\ttriangle_sub_geom.updateJointWeights(weights);\r\n\t\t\t\ttriangle_sub_geom.updateJointIndices(w_indices);\r\n\r\n\t\t\t\tvar scaleU:number = subProps.get(1, 1);\r\n\t\t\t\tvar scaleV:number = subProps.get(2, 1);\r\n\t\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\r\n\r\n\t\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\r\n\t\t\t\t\tsetSubUVs = true;\r\n\t\t\t\t\tscaleU = geoScaleU / scaleU;\r\n\t\t\t\t\tscaleV = geoScaleV / scaleV;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (setSubUVs)\r\n\t\t\t\t\ttriangle_sub_geom.scaleUV(scaleU, scaleV);\r\n\t\t\t\tgeom.addSubGeometry(triangle_sub_geom);\r\n\t\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a TriangleSubGeometry\");\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\r\n\t\t\t// when creating meshes (and their material assignments.)\r\n\r\n\t\t\tsubs_parsed++;\r\n\t\t}\r\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\r\n\t\t\tgeom.scaleUV(geoScaleU, geoScaleV);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data=geom;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a TriangleGeometry: Name = \" + name);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = GeometryAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass LightAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\t\r\n\t\tvar light:LightBase;\r\n\t\tvar newShadowMapper:ShadowMapperBase;\r\n\r\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar lightType:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.propsNrType, 2:this.awd_file_data.propsNrType, 3:AWD3Utils.COLOR, 4:this.awd_file_data.propsNrType, 5:this.awd_file_data.propsNrType, 6:AWD3Utils.BOOL, 7:AWD3Utils.COLOR, 8:this.awd_file_data.propsNrType, 9:AWD3Utils.UINT8, 10:AWD3Utils.UINT8, 11:this.awd_file_data.propsNrType, 12:AWD3Utils.UINT16, 21:this.awd_file_data.matrixNrType, 22:this.awd_file_data.matrixNrType, 23:this.awd_file_data.matrixNrType});\r\n\t\tvar shadowMapperType:number = props.get(9, 0);\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\r\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\r\n\r\n\t\tif (lightType == 1) {\r\n\t\t\tlight = new PointLight();\r\n\r\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\r\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 4) {\r\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.transform.matrix3D = mtx;\r\n\r\n\t\t}\r\n\r\n\t\tif (lightType == 2) {\r\n\r\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 1) {\r\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//if (shadowMapperType == 2)\r\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\r\n\t\t\t\t//if (shadowMapperType == 3)\r\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tlight.name=name;\r\n\t\tlight.color = props.get(3, 0xffffff);\r\n\t\tlight.specular = props.get(4, 1.0);\r\n\t\tlight.diffuse = props.get(5, 1.0);\r\n\t\tlight.ambientColor = props.get(7, 0xffffff);\r\n\t\tlight.ambient = props.get(8, 0.0);\r\n\r\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\r\n\t\tif (newShadowMapper) {\r\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\r\n\t\t\t\tif (props.get(10, 1) != 1) {\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this.awd_file_data.getDepthSizeFromEnum(props.get(10, 1));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (props.get(10, 2) != 2) {\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this.awd_file_data.getDepthSizeFromEnum(props.get(10, 2));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.shadowMapper = newShadowMapper;\r\n\t\t\tlight.castsShadows = true;\r\n\t\t}\r\n\r\n\t\tif (par_id != 0) {\r\n\r\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id)\r\n\r\n\t\t\tif (parent!=undefined){\r\n\t\t\t\tparent.addChild(light);\r\n\t\t\t\tparentName = parent.name;\r\n\t\t\t} else {\r\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find a parent for this.awd_file_data Light\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t//(<DisplayObjectContainer> this.awd_file_data._pContent).addChild(light);\r\n\t\t}\r\n\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = light;\r\n\r\n\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + this.awd_file_data.cur_block.name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = LightAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\n\r\nclass LightPickerAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar numLights:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\r\n\t\tvar k:number = 0;\r\n\t\tvar lightID:number = 0;\r\n\r\n\t\tvar returnedArrayLight:Array<any>;\r\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\r\n\r\n\t\tfor (k = 0; k < numLights; k++) {\r\n\t\t\tlightID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar light:LightBase = <LightBase>this.awd_file_data.getAssetByID(lightID)\r\n\r\n\t\t\tif (light!=undefined) {\r\n\t\t\t\tlightsArray.push(<LightBase> light);\r\n\t\t\t\tlightsArrayNames.push(( <LightBase> light).name);\r\n\r\n\t\t\t} else {\r\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find a Light Nr \" + k + \" (ID = \" + lightID + \" ) for this.awd_file_data LightPicker\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lightsArray.length == 0) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not create this.awd_file_data LightPicker, cause no Light was found.\");\r\n\t\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t\treturn undefined; //return without any more parsing for this.awd_file_data block\r\n\t\t}\r\n\r\n\t\tvar lightPicker:LightPickerBase = new StaticLightPicker(lightsArray);\r\n\t\tthis.awd_file_data.cur_block.data = lightPicker;\r\n\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + lightsArrayNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = LightPickerAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\nimport CurveMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/CurveMaterial\")\r\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\n\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\r\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\r\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\r\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\r\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\r\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\r\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\r\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\r\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\r\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\r\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\r\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass MaterialAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\t// version 2.0\r\n\t\t////blockLength = block.len;\r\n\t\tvar name:string;\r\n\t\tvar type:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar attributes:Object;\r\n\t\tvar finalize:boolean;\r\n\t\tvar num_methods:number;\r\n\t\tvar methods_parsed:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar normalTexture:Texture2DBase;\r\n\t\tvar specTexture:Texture2DBase;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\ttype = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tnum_methods = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\r\n\t\tif((this.awd_file_data.major_version==2)&&(this.awd_file_data.major_version==0)) {\r\n\r\n\t\t\t// Read material numerical properties\r\n\t\t\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\r\n\t\t\tprops = this.awd_file_data.parseProperties({\r\n\t\t\t\t1: AWD3Utils.INT32,\r\n\t\t\t\t2: AWD3Utils.BADDR,\r\n\t\t\t\t10: this.awd_file_data.propsNrType,\r\n\t\t\t\t11: AWD3Utils.BOOL,\r\n\t\t\t\t12: this.awd_file_data.propsNrType,\r\n\t\t\t\t13: AWD3Utils.BOOL\r\n\t\t\t});\r\n\t\t\tmethods_parsed = 0;\r\n\t\t\twhile (methods_parsed < num_methods) {\r\n\t\t\t\tvar method_type:number;\r\n\r\n\t\t\t\tmethod_type = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\tthis.awd_file_data.parseProperties(null);\r\n\t\t\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t\t\tmethods_parsed += 1;\r\n\t\t\t}\r\n\t\t\tvar debugString:string = \"\";\r\n\t\t\tattributes = this.awd_file_data.parseUserAttributes();\r\n\t\t\tif (type === 1) { // Color material\r\n\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\t\tvar color:number;\r\n\t\t\t\tcolor = props.get(1, 0xffffff);\r\n\t\t\t\t/*if (this.awd_file_data.materialMode < 2) {\r\n\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t}*/\r\n\t\t\t} else if (type === 2) {\r\n\t\t\t\tvar tex_addr:number = props.get(2, 0);\r\n\t\t\t\tvar texture:TextureBase=undefined;\r\n\t\t\t\tif (tex_addr > 0) {\r\n\t\t\t\t\tvar texture:TextureBase = <TextureBase> this.awd_file_data.getAssetByID(tex_addr);\r\n\t\t\t\t}\r\n\t\t\t\tif (texture==undefined) {\r\n\t\t\t\t\ttexture= DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmat = new MethodMaterial(<Texture2DBase>texture);\r\n\t\t\t\t/*\r\n\t\t\t\tif (this.awd_file_data.materialMode < 2) {\r\n\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t}\r\n\r\n\t\t\tmat.extra = attributes;\r\n\t\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\t\tmat.repeat = props.get(13, false);\r\n\t\t\tmat.name=name;\r\n\t\t\tif (this.awd_file_data.debug) {\r\n\t\t\t\tconsole.log(debugString);\r\n\r\n\t\t\t}\r\n\t\t\tthis.awd_file_data.cur_block.data=mat;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// version 2.1+\r\n\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT32, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 4:AWD3Utils.UINT8, 5:AWD3Utils.BOOL, 6:AWD3Utils.BOOL, 7:AWD3Utils.BOOL, 8:AWD3Utils.BOOL, 9:AWD3Utils.UINT8, 10:this.awd_file_data.propsNrType, 11:AWD3Utils.BOOL, 12:this.awd_file_data.propsNrType, 13:AWD3Utils.BOOL, 15:this.awd_file_data.propsNrType, 16:AWD3Utils.UINT32, 17:AWD3Utils.BADDR, 18:this.awd_file_data.propsNrType, 19:this.awd_file_data.propsNrType, 20:AWD3Utils.UINT32, 21:AWD3Utils.BADDR, 22:AWD3Utils.BADDR});\r\n\t\tvar spezialType:number = props.get(4, 0);\r\n\t\tvar debugString:string = \"Parsed Material \";\r\n\r\n\t\tif (spezialType >= 2) {//this.awd_file_data is no supported material\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (type <= 2) {// Color material\r\n\t\t\t/*\r\n\t\t\tif (this.awd_file_data.materialMode == 1)\r\n\t\t\t\tspezialType = 0;\r\n\t\t\telse if (this.awd_file_data.materialMode == 2)\r\n\t\t\t\tspezialType = 1;\r\n\t\t\t\t*/\r\n\r\n\t\t\tif (spezialType < 2) {//this.awd_file_data is SinglePass or MultiPass\r\n\r\n\t\t\t\tif (type == 1) {// Color material\r\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\r\n\r\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\r\n\r\n\t\t\t\t\t} else { //\tSinglePassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (type == 2) {// texture material\r\n\t\t\t\t\tvar tex_addr:number = props.get(2, 0);//TODO temporarily swapped so that diffuse texture goes to ambient\r\n\t\t\t\t\tvar diftexture:TextureBase=undefined;\r\n\t\t\t\t\tif (tex_addr > 0) {\r\n\t\t\t\t\t\tdiftexture = <TextureBase> this.awd_file_data.getAssetByID(tex_addr);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (diftexture==undefined) {\r\n\t\t\t\t\t\tdiftexture= DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmat = new MethodMaterial(<Texture2DBase>diftexture);\r\n\r\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + diftexture.name;\r\n\t\t\t\t\t} else {//\tSinglePassMaterial\r\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + diftexture.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tvar diffuseTex_addr:number = props.get(17, 0);\r\n\r\n\t\t\t\tdiffuseTexture=undefined;\r\n\t\t\t\tif (diffuseTex_addr > 0) {\r\n\t\t\t\t\tdiffuseTexture = <Texture2DBase> this.awd_file_data.getAssetByID(diffuseTex_addr);\r\n\t\t\t\t}\r\n\t\t\t\tif (diffuseTexture) {\r\n\t\t\t\t\tmat.diffuseTexture = <Texture2DBase>diffuseTexture;\r\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normalTex_addr:number = props.get(3, 0);\r\n\r\n\r\n\t\t\t\tnormalTexture = undefined;\r\n\t\t\t\tif (normalTex_addr > 0) {\r\n\t\t\t\t\tnormalTexture = <Texture2DBase> this.awd_file_data.getAssetByID(normalTex_addr);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar specTex_addr:number = props.get(21, 0);\r\n\t\t\t\tspecTexture=undefined;\r\n\t\t\t\tif (specTex_addr > 0) {\r\n\t\t\t\t\tspecTexture = <Texture2DBase> this.awd_file_data.getAssetByID(specTex_addr);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar lightPickerAddr:number = props.get(22, 0);\r\n\t\t\t\tif(lightPickerAddr>0) {\r\n\t\t\t\t\tmat.lightPicker = <LightPickerBase> this.awd_file_data.getAssetByID(lightPickerAddr);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmat.smooth = props.get(5, true);\r\n\t\t\t\tmat.mipmap = props.get(6, true);\r\n\t\t\t\tmat.bothSides = props.get(7, false);\r\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\r\n\t\t\t\tmat.blendMode = this.awd_file_data.getBlendModeStringFromEnum(props.get(9, 0));\r\n\t\t\t\tmat.repeat = props.get(13, false);\r\n\r\n\t\t\t\tif (normalTexture)\r\n\t\t\t\t\tmat.normalMap = normalTexture;\r\n\r\n\t\t\t\tif (specTexture)\r\n\t\t\t\t\tmat.specularMap = specTexture;\r\n\r\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\t\t\tmat.ambient = props.get(15, 1.0);\r\n\t\t\t\tmat.diffuseColor = props.get(16, 0xffffff);\r\n\t\t\t\tmat.specular = props.get(18, 1.0);\r\n\t\t\t\tmat.gloss = props.get(19, 50);\r\n\t\t\t\tmat.specularColor = props.get(20, 0xffffff);\r\n\r\n\t\t\t\tvar methods_parsed:number = 0;\r\n\t\t\t\tvar targetID:number;\r\n\r\n\t\t\t\twhile (methods_parsed < num_methods) {\r\n\t\t\t\t\tvar method_type:number;\r\n\t\t\t\t\tmethod_type = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\t\t\t\tprops = this.awd_file_data.parseProperties({\r\n\t\t\t\t\t\t1: AWD3Utils.BADDR,\r\n\t\t\t\t\t\t2: AWD3Utils.BADDR,\r\n\t\t\t\t\t\t3: AWD3Utils.BADDR,\r\n\t\t\t\t\t\t101: this.awd_file_data.propsNrType,\r\n\t\t\t\t\t\t102: this.awd_file_data.propsNrType,\r\n\t\t\t\t\t\t103: this.awd_file_data.propsNrType,\r\n\t\t\t\t\t\t201: AWD3Utils.UINT32,\r\n\t\t\t\t\t\t202: AWD3Utils.UINT32,\r\n\t\t\t\t\t\t301: AWD3Utils.UINT16,\r\n\t\t\t\t\t\t302: AWD3Utils.UINT16,\r\n\t\t\t\t\t\t401: AWD3Utils.UINT8,\r\n\t\t\t\t\t\t402: AWD3Utils.UINT8,\r\n\t\t\t\t\t\t601: AWD3Utils.COLOR,\r\n\t\t\t\t\t\t602: AWD3Utils.COLOR,\r\n\t\t\t\t\t\t701: AWD3Utils.BOOL,\r\n\t\t\t\t\t\t702: AWD3Utils.BOOL,\r\n\t\t\t\t\t\t801: AWD3Utils.MTX4x4\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tswitch (method_type) {\r\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffectMethod\r\n\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tvar fx_method:EffectMethodBase = <EffectMethodBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t\tmat.addEffectMethod(fx_method);\r\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<EffectMethodBase> fx_method).name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\r\n\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tvar shadow_method:ShadowMethodBase = <ShadowMethodBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t\tmat.shadowMethod=shadow_method;\r\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<ShadowMethodBase> shadow_method).name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tvar cubeTex:CubeTextureBase=undefined;\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tcubeTex = <CubeTextureBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(cubeTex==undefined){\r\n\t\t\t\t\t\t\t\tcubeTex=<CubeTextureBase>this.awd_file_data.getDefaultCubeTexture();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data EnvMapAmbientMethodMaterial\");\r\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod(cubeTex);\r\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + (<CubeTextureBase> cubeTex).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(thisTex==undefined){\r\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the GradientDiffuseTexture (ID = \" + targetID + \" ) for this.awd_file_data GradientDiffuseMethod\");\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(<Texture2DBase>thisTex);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + (<Texture2DBase>thisTex).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(thisTex==undefined){\r\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this.awd_file_data LightMapDiffuseMethod\");\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(<Texture2DBase>thisTex, this.awd_file_data.getBlendModeStringFromEnum(props.get(401, 10)), false, mat.diffuseMethod);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + (<Texture2DBase> thisTex).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\r\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(thisTex==undefined){\r\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the SecoundNormalMap (ID = \" + targetID + \" ) for this.awd_file_data SimpleWaterNormalMethod\");\r\n\t\t\t\t\t\t\t//if (!mat.normalMap)\r\n\t\t\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find a normal Map on this.awd_file_data Material to use with this.awd_file_data SimpleWaterNormalMethod\");\r\n\t\t\t\t\t\t\tif(mat.normalMap==undefined)\r\n\t\t\t\t\t\t\t\tmat.normalMap = <Texture2DBase>thisTex;\r\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(<Texture2DBase>mat.normalMap, <Texture2DBase>thisTex);\r\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + (<Texture2DBase> thisTex).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t\t\t\tmethods_parsed += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// todo: we should not need this.awd_file_data anymore (if using texture-atlas)\r\n\t\telse if ((type>=3)&&(type<=7)){\r\n\t\t\t// if this.awd_file_data is a curve material, we create it, finalize it, assign it to block-cache and return and return.\r\n\t\t\tvar color:number = props.get(1, 0xcccccc);\r\n\t\t\tdebugString+=color;\r\n\r\n\t\t\tvar diffuseTex_addr:number = props.get(2, 0);\r\n\r\n\t\t\tvar diffuseTexture:TextureBase=undefined;\r\n\t\t\tif (diffuseTex_addr>0) {\r\n\t\t\t\tdiffuseTexture = <TextureBase>this.awd_file_data.getAssetByID(diffuseTex_addr);\r\n\t\t\t}\r\n\t\t\tif(diffuseTex_addr==undefined){\r\n\t\t\t\tdiffuseTexture=DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t}\r\n\r\n\t\t\tvar curve_mat:CurveMaterial = new CurveMaterial(<Texture2DBase>diffuseTexture);\r\n\t\t\t//debugString+= \" alpha = \"+props.get(10, 1.0)+\" \";\r\n\t\t\tdebugString+= \" texture = \"+diffuseTex_addr+\" \";\r\n\t\t\tcurve_mat.bothSides = true;\r\n\t\t\tcurve_mat.preserveAlpha = true;\r\n\t\t\tcurve_mat.alphaBlending = true;\r\n\t\t\tcurve_mat.extra = this.awd_file_data.parseUserAttributes();\r\n\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\tconsole.log(debugString);\r\n\t\t\tthis.awd_file_data.cur_block.data=curve_mat;\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\t\tmat.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data=mat;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(debugString);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = MaterialAWDParser;",
    "/**\r\n * Created by 80prozent on 4/18/2015.\r\n */\r\n\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AWD3Utils\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass MeshAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar num_materials:number;\r\n\t\tvar materials_parsed:number;\r\n\t\tif(this.awd_file_data.cur_block.type==23) {\r\n\t\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar geom:Geometry = <Geometry>this.awd_file_data.getAssetByID(data_id)\r\n\r\n\t\tif (geom==undefined) {\r\n\t\t\tgeom = new Geometry();\r\n\t\t}\r\n\r\n\t\tthis.awd_file_data.cur_block.geoID = data_id;\r\n\t\tvar materials:Array<MaterialBase> = new Array<MaterialBase>();\r\n\t\tnum_materials = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar materialNames:Array<string> = new Array<string>();\r\n\t\tmaterials_parsed = 0;\r\n\r\n\r\n\t\twhile (materials_parsed < num_materials) {\r\n\t\t\tvar mat_id:number;\r\n\t\t\tmat_id = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar m:MaterialBase = <MaterialBase> this.awd_file_data.getAssetByID(mat_id);\r\n\t\t\tif(m!=undefined) {\r\n\t\t\t\tmaterials.push(m);\r\n\t\t\t\tmaterialNames.push(m.name);\r\n\t\t\t}\r\n\t\t\tmaterials_parsed++;\r\n\t\t}\r\n\r\n\t\tvar mesh:Mesh = new Mesh(geom, null);\r\n\r\n\t\tif(this.awd_file_data.cur_block.type==23) {\r\n\r\n\t\t\tmesh.transform.matrix3D = mtx;\r\n\t\t\tif(par_id>0) {\r\n\t\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id)\r\n\r\n\t\t\t\tif (parent != undefined) {\r\n\t\t\t\t\tparent.addChild(mesh);\r\n\t\t\t\t\tparentName = parent.name;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\r\n\t\t\tmesh.material = materials[0];\r\n\t\t} else if (materials.length > 1) {\r\n\t\t\tvar i:number;\r\n\r\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\r\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\r\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\r\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ((this.awd_file_data.major_version > 2)||((this.awd_file_data.major_version >= 2) && (this.awd_file_data.minor_version == 1))) {\r\n\t\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8, 5:AWD3Utils.BOOL});\r\n\t\t\tmesh.pivot = new Vector3D(<number>props.get(1, 0), <number>props.get(2, 0), <number> props.get(3, 0));\r\n\t\t\tmesh.castsShadows = props.get(5, true);\r\n\t\t} else {\r\n\t\t\tthis.awd_file_data.parseProperties(null);\r\n\t\t}\r\n\r\n\t\tmesh.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = mesh;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a Mesh: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = MeshAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass MetadataAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT32, 2:AWD3Utils.AWDSTRING, 3:AWD3Utils.AWDSTRING, 4:AWD3Utils.AWDSTRING, 5:AWD3Utils.AWDSTRING});\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\r\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\r\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = MetadataAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDBitFlags\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport MovieClip \t\t\t\t\t= require(\"awayjs-player/lib/display/MovieClip\");\r\nimport TimelineKeyFrame \t\t\t= require(\"awayjs-player/lib/timeline/TimelineKeyFrame\");\r\nimport AddChildCommand \t\t\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildCommand\");\r\nimport AddChildAtDepthCommand\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildAtDepthCommand\");\r\nimport ApplyAS2DepthsCommand\t\t= require(\"awayjs-player/lib/timeline/commands/ApplyAS2DepthsCommand\");\r\nimport ExecuteScriptCommand \t\t= require(\"awayjs-player/lib/timeline/commands/ExecuteScriptCommand\");\r\nimport RemoveChildCommand \t\t\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildCommand\");\r\nimport RemoveChildrenAtDepthCommand\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildrenAtDepthCommand\");\r\nimport SetInstanceNameCommand \t\t= require(\"awayjs-player/lib/timeline/commands/SetInstanceNameCommand\");\r\nimport UpdatePropertyCommand \t\t= require(\"awayjs-player/lib/timeline/commands/UpdatePropertyCommand\");\r\nimport SetMaskCommand \t\t        = require(\"awayjs-player/lib/timeline/commands/SetMaskCommand\");\r\n\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\r\n\r\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\r\n\r\nclass MovieClipAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tprivate factory:AS2SceneGraphFactory;\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.factory = new AS2SceneGraphFactory();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar c:number;\r\n\t\tvar new_mc = this.factory.createMovieClip();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar isScene = !!this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar sceneID = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar fps:number = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t//console.log(\"fps = \"+fps);\r\n\t\t//new_mc.fps=fps;\r\n\t\tvar ms_per_frame = 1000 / fps;\r\n\t\tvar num_instances:number=0;\r\n\t\tvar num_all_display_instances:number=0;\r\n\r\n\r\n\t\t// register list of potential childs\r\n\t\t// a potential child can be reused on a timeline (added / removed / added)\r\n\t\t// However, for each potential child, we need to register the max-number of instances that a frame contains\r\n\t\t// we parse 2 lists of potential-childs:\r\n\t\t// -\tthe first list contains potential-childs that are only ever instanced once per frame.\r\n\t\t// -\tthe second list contains potential-childs that are instanced multiple times on some frames.\r\n\r\n\t\t// on registering a child, the child gets a incremental-id assigned. This is the id, that the commands are using to access the childs.\r\n\t\t// hence we need to be careful to register all objects in correct order.\r\n\r\n\t\tvar num_potential_childs:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_childs; i++) {\r\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\tnew_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tnum_all_display_instances+=num_potential_childs;\r\n\t\tvar num_potential_childs_multi_instanced = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tnum_potential_childs+=num_potential_childs_multi_instanced;\r\n\t\tfor (i = 0; i < num_potential_childs_multi_instanced; i++) {\r\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tnum_instances = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\tnum_all_display_instances+=num_instances;\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\r\n\t\t\t\t\tnew_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\r\n\t\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(\"Parsed \"+num_potential_childs+\" potential childs. They will be used by \"+num_all_display_instances+\" instances.\");\r\n\r\n\t\t// register list of potential sounds\r\n\t\t// a potential child can be reused on a timeline (added / removed / added)\r\n\t\tvar num_potential_sounds = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_sounds; i++) {\r\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\t//todo: register sound objects on movieclip\r\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//todo: this.awd_file_data is a error that might break complete timeline, because all sound obj-id shift\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(\"Parsed \"+num_potential_sounds+\" potential sounds\");\r\n\r\n\t\tvar numFrames = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\t//console.log(\"numFrames \"+numFrames);\r\n\r\n\t\tvar totalDuration:number;\r\n\t\tvar frameDuration:number;\r\n\t\tvar numLabels:number;\r\n\t\tvar numCommands:number;\r\n\t\tvar objectID:number;\r\n\t\tvar target_depth:number;\r\n\t\tvar resourceID:number;\r\n\t\tvar number_of_obj:number;\r\n\t\tvar commandType:number;\r\n\t\tvar frame:TimelineKeyFrame;\r\n\t\tvar label:string;\r\n\t\tvar hasDepthChanges:boolean;\r\n\t\ttotalDuration=0;\r\n\t\tfor (i = 0; i < numFrames; i++) {\r\n\t\t\tframe = new TimelineKeyFrame();\r\n\t\t\t// todo: remove the ms_per_frame to set the duration in frames\r\n\t\t\tframeDuration = this.awd_file_data.newBlockBytes.readUnsignedInt()*ms_per_frame;\r\n\t\t\tframe.setFrameTime(totalDuration, frameDuration);\r\n\t\t\ttotalDuration += frameDuration;\r\n\t\t\t//console.log(\"duration = \" + frameDuration);\r\n\r\n\t\t\tnumLabels = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\tfor (j = 0; j < numLabels; j++) {\r\n\t\t\t\tlabel = this.awd_file_data.parseVarStr();\r\n\t\t\t\t//console.log(\"label \"+label);\r\n\t\t\t}\r\n\r\n\t\t\tnumCommands = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t//console.log(\"numCommands \"+numCommands);\r\n\t\t\t//traceString += \"\\n      Commands \" + numCommands;\r\n\t\t\thasDepthChanges = false;\r\n\t\t\tfor (j = 0; j < numCommands; j++) {\r\n\t\t\t\tcommandType = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\r\n\t\t\t\t// 1 = remove a number of objects by depth\r\n\t\t\t\t// 2 = add a object by child-id at specific depth\r\n\t\t\t\t// 3 = update a object by child-id\r\n\t\t\t\t// 4 = add / update sound - (not finished)\r\n\r\n\t\t\t\tswitch (commandType) {\r\n\r\n\t\t\t\t\tcase 1:// remove a number of objects at specific depth\r\n\t\t\t\t\t\tnumber_of_obj = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t//console.log(\"number_of_obj \", number_of_obj);\r\n\t\t\t\t\t\tvar remove_depths:Array<number>=new Array<number>();\r\n\t\t\t\t\t\tfor (c = 0; c < number_of_obj; c++) {\r\n\t\t\t\t\t\t\t// Remove Object Command\r\n\t\t\t\t\t\t\ttarget_depth = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\tremove_depths.push(target_depth);\r\n\t\t\t\t\t\t\t//console.log(\"\\n       - Remove object at depth: \" + target_depth);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tframe.addConstructCommand(new RemoveChildrenAtDepthCommand(remove_depths));\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2:// add a of object by child-id at specific depth\r\n\t\t\t\t\tcase 3:// update a object by child-id\r\n\t\t\t\t\t\tobjectID = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t//console.log(\"add / update objectID \", objectID);\r\n\t\t\t\t\t\tif (commandType == 2) {\r\n\t\t\t\t\t\t\thasDepthChanges=true;\r\n\t\t\t\t\t\t\ttarget_depth = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t//console.log(\"target_depth \", target_depth);\r\n\t\t\t\t\t\t\tvar potChild = new_mc.getPotentialChild(objectID);\r\n\t\t\t\t\t\t\tif (potChild != undefined) {\r\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new AddChildAtDepthCommand(objectID, target_depth));\r\n\t\t\t\t\t\t\t\t// if the object is a tetfield, we set the textfield-name as instancename\r\n\t\t\t\t\t\t\t\tif(potChild.isAsset(TextField)) {\r\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetInstanceNameCommand(objectID, potChild.name));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tconsole.log(\"ERROR: could not find the objectID \", objectID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar props_flag = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t/*\tProps_flags\r\n\t\t\t\t\t\t 1: read display matrix - 6 x float,\r\n\t\t\t\t\t\t 2: read display matrix - read another UINT8-bitflag that determinates what matrix components to parse\r\n\t\t\t\t\t\t 3: read color matrix - 4 x float, 4 x uint16\r\n\t\t\t\t\t\t 4: read color matrix - read another UINT8-bitflag that determinates what matrix components to parse\r\n\t\t\t\t\t\t 5: blendmode - uint8\r\n\t\t\t\t\t\t 6: visible - boolean\r\n\t\t\t\t\t\t 7: AWD3Parser.UINT8\r\n\t\t\t\t\t\t });*/\r\n\t\t\t\t\t\t// read display matrix\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG1)) {\r\n\t\t\t\t\t\t\tvar thisMatrix = new Matrix3D();\r\n\t\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG2)) {\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[0] = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[1] = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[4] = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[5] = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.position = new Vector3D(this.awd_file_data.newBlockBytes.readFloat(), this.awd_file_data.newBlockBytes.readFloat(), 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"_iMatrix3D\", thisMatrix));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// read colortransforms\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG3)) {\r\n\t\t\t\t\t\t\tvar thisColorTransform = new ColorTransform();\r\n\t\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG4)) {\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthisColorTransform.redMultiplier = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.greenMultiplier = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.blueMultiplier = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.alphaMultiplier = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.redOffset = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.greenOffset = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.blueOffset = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.alphaOffset = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG5)) {\r\n\t\t\t\t\t\t\tvar blendmode_int = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\t\t\tvar blendmode_string = this.awd_file_data.getBlendModeStringFromEnum(blendmode_int);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG6)) {\r\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"visible\", this.awd_file_data.newBlockBytes.readByte()));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG7)) {\r\n\t\t\t\t\t\t\tvar instanceName = this.awd_file_data.parseVarStr();\r\n\t\t\t\t\t\t\tif (instanceName.length) {\r\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetInstanceNameCommand(objectID, instanceName));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG8)) {\r\n\t\t\t\t\t\t\tvar mask_id_nums = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t\tvar mask_ids = new Array();\r\n\t\t\t\t\t\t\tfor (var mi_cnt = 0; mi_cnt < mask_id_nums; mi_cnt++) {\r\n\t\t\t\t\t\t\t\tmask_ids.push(this.awd_file_data.newBlockBytes.readShort());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (mask_ids.length > 0) {\r\n\t\t\t\t\t\t\t\tif ((mask_ids.length == 1) && (mask_ids[0] == -1)) {\r\n\t\t\t\t\t\t\t\t\t// TODO: this.awd_file_data object is used as mask\r\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"_iMaskID\", objectID));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetMaskCommand(objectID, mask_ids));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 4:\r\n\r\n\t\t\t\t\t\t// Add Sound Command\r\n\t\t\t\t\t\t// TODO: create CommandPropsSound and check which asset to use\r\n\t\t\t\t\t\tobjectID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\t// TODO: implement sound in timeline\r\n\t\t\t\t\t\t//commandString += \"\\n      - Add new Sound AWD-ID = \" + resourceID.toString() + \" as object_id = \" + objectID.toString();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t//commandString += \"\\n       - Unknown Command Type = \" + commandType;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (hasDepthChanges) {\r\n\t\t\t\t// only want to do this.awd_file_data once after all children's depth values are updated\r\n\t\t\t\tframe.addConstructCommand(new ApplyAS2DepthsCommand());\r\n\t\t\t\thasDepthChanges = false;\r\n\t\t\t}\r\n\r\n\t\t\tvar length_code = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tif (length_code > 0) {\r\n\t\t\t\t// TODO: Script should probably not be attached to keyframes?\r\n\t\t\t\tvar frame_code = this.awd_file_data.newBlockBytes.readUTFBytes(length_code);\r\n\t\t\t\tframe.addConstructCommand(new ExecuteScriptCommand(frame_code));\r\n\t\t\t\t//traceString += \"\\nframe-code = \" + frame_code;\r\n\t\t\t}\r\n\t\t\t//traceString += commandString;\r\n\t\t\t//trace(\"length_code = \"+length_code+\" frame_code = \"+frame_code);\r\n\t\t\tthis.awd_file_data.newBlockBytes.readUnsignedInt();// user attributes - skip for now\r\n\t\t\t//console.log(traceString);\r\n\t\t\tnew_mc.addFrame(frame);\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = new_mc;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| isScene = \" + isScene + \"| sceneID = \" + sceneID + \"| numFrames = \" + numFrames);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = MovieClipAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\r\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\r\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\r\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nclass PrefabAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar name:string;\r\n\t\tvar prefab:PrefabBase;\r\n\t\tvar primType:number;\r\n\t\tvar subs_parsed:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar bsm:Matrix3D;\r\n\r\n\t\t// Read name and sub count\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tprimType = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tprops = this.awd_file_data.parseProperties({101:this.awd_file_data.geoNrType, 102:this.awd_file_data.geoNrType, 103:this.awd_file_data.geoNrType, 110:this.awd_file_data.geoNrType, 111:this.awd_file_data.geoNrType, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 303:AWD3Utils.UINT16, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL, 703:AWD3Utils.BOOL, 704:AWD3Utils.BOOL});\r\n\r\n\t\tvar primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"]\r\n\r\n\t\tswitch (primType) {\r\n\t\t\t// to do, not all properties are set on all primitives\r\n\r\n\t\t\tcase 1:\r\n\t\t\t\tprefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tprefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\tprefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\r\n\t\t\t\tif (!props.get(701, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\r\n\t\t\t\tif (!props.get(702, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\r\n\t\t\t\tif (!props.get(703, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 5:\r\n\t\t\t\tprefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 7:\r\n\t\t\t\tprefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tprefab = new PrefabBase();\r\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\r\n\t\t\t//geom.subGeometries;\r\n\t\t\t//geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\r\n\t\t}\r\n\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = prefab;\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tif ((primType < 0) || (primType > 7)) {\r\n\t\t\t\tprimType = 0;\r\n\t\t\t}\r\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + this.awd_file_data.cur_block.name + \"| type = \" + primitiveTypes[primType]);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = PrefabAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\r\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\r\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\r\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\r\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\r\n\r\nclass ShadowMethodAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar type:number;\r\n\t\tvar data_len:number;\r\n\t\tvar asset:ShadowMethodBase;\r\n\t\tvar shadowLightID:number;\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tshadowLightID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar light:LightBase=<LightBase> this.awd_file_data.getAssetByID(shadowLightID);\r\n\r\n\t\tif (light==undefined) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the TargetLight (ID = \" + shadowLightID + \" ) for this.awd_file_data ShadowMethod - ShadowMethod not created\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tasset = this.parseShadowMethodList(light);\r\n\r\n\t\tif (!asset)\r\n\t\t\treturn;\r\n\t\tthis.awd_file_data.parseUserAttributes(); // Ignore for now\r\n\t\tthis.awd_file_data.cur_block.data = asset;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", light.name);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// this.awd_file_data functions reads and creates a ShadowMethodMethod\r\n\tprivate parseShadowMethodList(light:LightBase):ShadowMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar shadowMethod:ShadowMethodBase;\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 101:this.awd_file_data.propsNrType, 102:this.awd_file_data.propsNrType, 103:this.awd_file_data.propsNrType, 201:AWD3Utils.UINT32, 202:AWD3Utils.UINT32, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 401:AWD3Utils.UINT8, 402:AWD3Utils.UINT8, 601:AWD3Utils.COLOR, 602:AWD3Utils.COLOR, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL, 801:AWD3Utils.MTX4x4});\r\n\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>\r\n\t\tswitch (methodType) {\r\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this.awd_file_data CascadeShadowMapMethod - ShadowMethod not created\");\r\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\r\n\t\t\t//\t\t\t\t\t}\r\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 1002: //ShadowNearMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\tvar shadow_meth:ShadowMapMethodBase = <ShadowMapMethodBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\tif (shadow_meth==undefined) {\r\n\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this.awd_file_data ShadowNearMethod - ShadowMethod not created\");\r\n\t\t\t\t\treturn shadowMethod;\r\n\t\t\t\t}\r\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> shadow_meth);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1101: //ShadowFilteredMethod\r\n\r\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 1102: //ShadowDitheredMethod\r\n\r\n\r\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1103: //ShadowSoftMethod\r\n\r\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1104: //ShadowHardMethod\r\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\treturn shadowMethod;\r\n\t}\r\n}\r\n\r\nexport = ShadowMethodAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\r\nimport CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\n\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\r\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\r\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\r\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\r\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\r\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\r\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\r\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\r\n\r\nclass SharedMethodAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tvar asset:EffectMethodBase;\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tasset = this.parseSharedMethodList();\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = asset;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\r\n\t\t}\r\n\t}\r\n\r\n\t// this.awd_file_data functions reads and creates a EffectMethod\r\n\tprivate parseSharedMethodList():EffectMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar effectMethodReturn:EffectMethodBase;\r\n\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 101:this.awd_file_data.propsNrType, 102:this.awd_file_data.propsNrType, 103:this.awd_file_data.propsNrType, 104:this.awd_file_data.propsNrType, 105:this.awd_file_data.propsNrType, 106:this.awd_file_data.propsNrType, 107:this.awd_file_data.propsNrType, 201:AWD3Utils.UINT32, 202:AWD3Utils.UINT32, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 401:AWD3Utils.UINT8, 402:AWD3Utils.UINT8, 601:AWD3Utils.COLOR, 602:AWD3Utils.COLOR, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL});\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tswitch (methodType) {\r\n\t\t\t// Effect Methods\r\n\t\t\tcase 401: //ColorMatrix\r\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 402: //ColorTransform\r\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\r\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\r\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 403: //EnvMap\r\n\r\n\t\t\t\t/*\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\tconsole.log('ENV MAP', targetID);\r\n\r\n\r\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [ TextureBase.assetType ], \"CubeTexture\");\r\n\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data EnvMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(<CubeTextureBase> returnedArray[1], <number> props.get(101, 1));\r\n\t\t\t\ttargetID = props.get(2, 0);\r\n\t\t\t\tif (targetID > 0) {\r\n\t\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the Mask-texture (ID = \" + targetID + \" ) for this.awd_file_data EnvMapMethod\");\r\n\r\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\r\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <Texture2DBase> returnedArray[1];\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t\tcase 404: //LightMapMethod\r\n\t\t\t\t/*\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this.awd_file_data LightMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(returnedArray[1], this.awd_file_data.getBlendModeStringFromEnum(props.get(401, 10))); //usesecondaryUV not set\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureProjector.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this.awd_file_data ProjectiveTextureMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 406: //RimLightMethod\r\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\r\n\t\t\t\tbreak;\r\n\t\t\tcase 407: //AlphaMaskMethod\r\n\t\t\t\t/*\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the Alpha-texture (ID = \" + targetID + \" ) for this.awd_file_data AlphaMaskMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(returnedArray[1], props.get(701, false));\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data RefractionEnvMapMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\r\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 410: //FresnelEnvMapMethod\r\n\t\t\t\t/*\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\r\n\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data FresnelEnvMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(returnedArray[1], props.get(101, 1));\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t\tcase 411: //FogMethod\r\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\treturn effectMethodReturn;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport = SharedMethodAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nclass SkeletonAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar skeleton:Skeleton = new Skeleton();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tthis.awd_file_data.parseProperties(null); // Discard properties for now\r\n\r\n\t\tvar joints_parsed:number /*uint*/ = 0;\r\n\t\twhile (joints_parsed < num_joints) {\r\n\t\t\tvar joint:SkeletonJoint;\r\n\t\t\tvar ibp:Matrix3D;\r\n\t\t\t// Ignore joint id\r\n\t\t\tthis.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\tjoint = new SkeletonJoint();\r\n\t\t\tjoint.parentIndex = this.awd_file_data.newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\r\n\t\t\tjoint.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\t\tibp = this.awd_file_data.parseMatrix3D();\r\n\t\t\tjoint.inverseBindPose = ibp.rawData;\r\n\t\t\t// Ignore joint props/attributes for now\r\n\t\t\tthis.awd_file_data.parseProperties(null);\r\n\t\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t\tskeleton.joints.push(joint);\r\n\t\t\tjoints_parsed++;\r\n\t\t}\r\n\r\n\t\t// Discard attributes for now\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = skeleton;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SkeletonAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\n\r\nclass SkeletonAnimClipAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar frame_dur:number;\r\n\t\tvar pose_addr:number /*uint*/;\r\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_frames:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tthis.awd_file_data.parseProperties(null); // Ignore properties for now\r\n\r\n\t\tvar frames_parsed:number /*uint*/ = 0;\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tpose_addr = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tframe_dur = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\tvar skel_pose:SkeletonPose = <SkeletonPose>this.awd_file_data.getAssetByID(pose_addr);\r\n\t\t\tif (skel_pose!=undefined) {\r\n\t\t\t\tclip.addFrame(skel_pose, frame_dur);\r\n\t\t\t}\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\t// Ignore attributes for now\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = clip;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SkeletonAnimClipAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nclass SkeletonPoseAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar pose:SkeletonPose = new SkeletonPose();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tthis.awd_file_data.parseProperties(null); // Ignore properties for now\r\n\r\n\r\n\t\tvar joints_parsed:number /*uint*/ = 0;\r\n\t\twhile (joints_parsed < num_joints) {\r\n\t\t\tvar joint_pose:JointPose;\r\n\t\t\tvar has_transform:number /*uint*/;\r\n\t\t\tjoint_pose = new JointPose();\r\n\t\t\thas_transform = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\tif (has_transform == 1) {\r\n\t\t\t\tvar mtx_data:Array<number> = this.awd_file_data.parseMatrix43RawData();\r\n\r\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\r\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\r\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\r\n\r\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\r\n\t\t\t}\r\n\t\t\tjoints_parsed++;\r\n\t\t}\r\n\t\t// Skip attributes for now\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = pose;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SkeletonPoseAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\r\nimport ImageCubeTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageCubeTexture\");\r\n\r\nclass SkyboxAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar cubeTexAddr:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\r\n\t\tvar cube_tex:ImageCubeTexture = undefined;\r\n\t\tif(cubeTexAddr>0) {\r\n\t\t\tcube_tex = <ImageCubeTexture> this.awd_file_data.getAssetByID(cubeTexAddr);\r\n\t\t}\r\n\t\tif(cube_tex==undefined){\r\n\t\t\tcube_tex=<ImageCubeTexture>this.awd_file_data.getDefaultCubeTexture();\r\n\t\t}\r\n\t\t//if ((!returnedArrayCubeTex[0]) && (cubeTexAddr != 0))\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the Cubetexture (ID = \" + cubeTexAddr + \" ) for this.awd_file_data Skybox\");\r\n\t\tvar new_skybox:Skybox = new Skybox(<ImageCubeTexture> cube_tex);\r\n\r\n\t\tthis.awd_file_data.parseProperties(null)\r\n\t\tnew_skybox.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = new_skybox;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + this.awd_file_data.cur_block.name + \"' | CubeTexture-Name = \" + cube_tex.name);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SkyboxAWDParser;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\n\r\nclass TesselatedFontAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar new_font:Font=new Font();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar font_style_cnt:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"Font font_style_cnt = \"+font_style_cnt);\r\n\t\tfor (var i:number = 0; i < font_style_cnt; ++i) {\r\n\t\t\tvar font_style_name:string = this.awd_file_data.parseVarStr();\r\n\t\t\t//console.log(\"Font font_style_name = \"+font_style_name);\r\n\t\t\tvar new_font_style:TesselatedFontTable=new_font.get_font_table(font_style_name);\r\n\t\t\tnew_font_style.set_font_em_size(this.awd_file_data.newBlockBytes.readUnsignedInt());\r\n\t\t\t//console.log(\"Font new_font_style.font_em_size = \"+new_font_style.get_font_em_size);\r\n\t\t\tvar font_style_char_cnt:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t//console.log(\"Font font_style_char_cnt = \"+font_style_char_cnt);\r\n\t\t\tfor (var i:number = 0; i < font_style_char_cnt; ++i) {\r\n\r\n\t\t\t\tvar font_style_char:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"Font font_style_char = \"+font_style_char);\r\n\t\t\t\t// todo: this.awd_file_data is basically a simplified version of the subgeom-parsing done in parseTriangleGeometry. Make a parseSubGeom() instead (?)\r\n\t\t\t\tvar sm_len:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar sm_end:number = this.awd_file_data.newBlockBytes.position + sm_len;\r\n\t\t\t\t//console.log(\"Font sm_len = \"+sm_len);\r\n\r\n\t\t\t\t//this.awd_file_data.parseProperties(null); // no properties for font-table subgeos\r\n\t\t\t\t// Loop through data streams\r\n\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < sm_end) {\r\n\t\t\t\t\tvar idx:number = 0;\r\n\t\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n\t\t\t\t\t// Type, field type, length\r\n\t\t\t\t\tstr_type = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_ftype = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\r\n\r\n\t\t\t\t\tif (str_type == 2) {//face indicies positions\r\n\t\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\t\tindices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\r\n\t\t\t\t\t\tvar idx_pos:number = 0;\r\n\t\t\t\t\t\tvar idx_curves:number = 0;\r\n\t\t\t\t\t\tvar idx_uvs:number = 0;\r\n\r\n\t\t\t\t\t\tvar positions:Array<number> = new Array<number>();\r\n\t\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\r\n\t\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// x\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// y\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// type\r\n\r\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 2\r\n\r\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.awd_file_data.parseProperties(null);// no attributes for font-table subgeos\r\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\r\n\t\t\t\tcurve_sub_geom.updateIndices(indices);\r\n\t\t\t\tcurve_sub_geom.updatePositions(positions);\r\n\t\t\t\tcurve_sub_geom.updateCurves(curveData);\r\n\t\t\t\tcurve_sub_geom.updateUVs(uvs);\r\n\t\t\t\tnew_font_style.set_subgeo_for_char(font_style_char.toString(), curve_sub_geom);\r\n\t\t\t}\r\n\t\t\t//console.log(\"Parsed a font-table\");\r\n\r\n\t\t}\r\n\t\t//console.log(\"Parsed a font\");\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = new_font;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a font: Name = '\" + this.awd_file_data.cur_block.name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\n\r\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\r\n\r\nclass TextfieldAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tprivate factory:AS2SceneGraphFactory;\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.factory = new AS2SceneGraphFactory();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar newTextField = this.factory.createTextField();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar text_field_type:number=this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tif(text_field_type==0) {\r\n\t\t\tnewTextField.type = \"static\";\r\n\t\t}\r\n\t\telse if(text_field_type==1) {\r\n\t\t\tnewTextField.type = \"dynamic\";\r\n\t\t}\r\n\t\telse if(text_field_type==2) {\r\n\t\t\tnewTextField.type = \"input\";\r\n\t\t}\r\n\t\telse if(text_field_type==3) {\r\n\t\t\tnewTextField.type =\"input\";\r\n\t\t\tnewTextField.displayAsPassword=true;\r\n\t\t}\r\n\r\n\t\tnewTextField.width=this.awd_file_data.newBlockBytes.readFloat();\r\n\t\tnewTextField.height=this.awd_file_data.newBlockBytes.readFloat();\r\n\t\tvar num_paragraphs:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar complete_text:string = \"\";\r\n\t\t//console.log(\"num_paragraphs  '\" + num_paragraphs);\r\n\t\tvar text_format:TextFormat;\r\n\t\tfor(var paracnt:number=0; paracnt<num_paragraphs; paracnt++){\r\n\r\n\t\t\tvar num_textruns:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t//console.log(\"num_textruns  '\" + num_textruns);\r\n\t\t\tfor(var textrun_cnt:number=0; textrun_cnt<num_textruns; textrun_cnt++) {\r\n\r\n\t\t\t\tvar format_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"format_id  '\" + format_id);\r\n\t\t\t\tvar textFormat:TextFormat = <TextFormat>this.awd_file_data.getAssetByID(format_id);\r\n\t\t\t\tif (textFormat==undefined) {\r\n\t\t\t\t\ttext_format = new TextFormat();\r\n\t\t\t\t}\r\n\t\t\t\t//console.log(\"text_format  '\" + text_format.name);\r\n\t\t\t\tvar txt_length = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"txt_length  '\" + txt_length);\r\n\t\t\t\tif (txt_length > 0) {\r\n\t\t\t\t\tvar this_txt:string = this.awd_file_data.newBlockBytes.readUTFBytes(txt_length);\r\n\t\t\t\t\t//newTextField.appendText(this_txt, text_format);\r\n\t\t\t\t\tcomplete_text+=this_txt;\r\n\t\t\t\t\t//console.log(\"this_txt  '\" + this_txt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//newTextField.closeParagraph();\r\n\t\t}\r\n\t\tnewTextField.textFormat=text_format;\r\n\t\tnewTextField.text=complete_text;\r\n\r\n\t\t//newTextField.construct_geometry();\r\n\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BOOL, 3:AWD3Utils.BOOL, 4:AWD3Utils.BOOL, 5:AWD3Utils.BOOL, 7:AWD3Utils.UINT8, 8:AWD3Utils.UINT8, 9:AWD3Utils.UINT8});\r\n\t\tnewTextField.selectable = props.get(1, false);\r\n\t\tnewTextField.border =  props.get(3, false);\r\n\t\t//newTextField.renderHTML =  props.get(4, false);\r\n\t\t//newTextField.scrollable =  props.get(5, false);\r\n\t\t//newTextField.text_flow =  props.get(7, 0);\r\n\t\t//newTextField.orientationMode =  props.get(8, 0);\r\n\t\t//newTextField.line_mode =  props.get(9, 0);\r\n\r\n\t\tnewTextField.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = newTextField;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a TextField: Name = '\" + newTextField.name + \"| text  = \" + complete_text);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = TextfieldAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\r\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TextformatAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar newTextFormat:TextFormat = new TextFormat();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\t//console.log(\"this.awd_file_data._blocks[blockID].name  '\" + this.awd_file_data._blocks[blockID].name );\r\n\t\tvar font_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"font_id  '\" + font_id);\r\n\t\tvar font_style_name:string = this.awd_file_data.parseVarStr();\r\n\t\t//console.log(\"font_style_name  '\" + font_style_name);\r\n\t\tvar font:Font = <Font>this.awd_file_data.getAssetByID(font_id);\r\n\t\tif (font==undefined) {\r\n\t\t\tfont = new Font();\r\n\t\t}\r\n\t\tnewTextFormat.font_name = font.name;\r\n\t\tvar font_table:TesselatedFontTable = font.get_font_table(font_style_name);\r\n\t\tif(font_table!=null){\r\n\t\t\tnewTextFormat.font_style = font_style_name;\r\n\t\t\tnewTextFormat.font_table = font_table;\r\n\t\t}\r\n\r\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"mat  '\" + data_id);\r\n\t\tvar mat:BasicMaterial = <BasicMaterial> this.awd_file_data.getAssetByID(data_id);\r\n\r\n\t\tif (mat==undefined) {\r\n\t\t\tmat = new BasicMaterial();\r\n\t\t}\r\n\t\tmat.bothSides=true;\r\n\r\n\t\tvar num_uv_values:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t//console.log(\"num_uv_values  '\" + num_uv_values);\r\n\t\tvar uv_values:Array<number>=[];\r\n\t\tfor(var uvcnt:number=0; uvcnt<num_uv_values; uvcnt++){\r\n\t\t\tvar uv_value:number=this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\tuv_values.push(uv_value);\r\n\t\t\t//console.log(\"uv_value  '\" + uv_value);\r\n\t\t}\r\n\t\tnewTextFormat.uv_values=uv_values;\r\n\t\tvar format_props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT16, 2:AWD3Utils.UINT16, 3:AWD3Utils.UINT8,4:AWD3Utils.UINT8,5:AWD3Utils.UINT8,6:AWD3Utils.UINT8, 7:AWD3Utils.UINT16, 8:AWD3Utils.UINT16, 9:AWD3Utils.UINT16, 10:AWD3Utils.UINT16});\r\n\r\n\t\tnewTextFormat.size = format_props.get(1,12);\r\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\r\n\t\t//newTextFormat.rotated = format_props.get(3,false);\r\n\t\tnewTextFormat.kerning = format_props.get(4,true);\r\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\r\n\t\t//newTextFormat.align = format_props.get(6,0);\r\n\t\tnewTextFormat.indent = format_props.get(7,0);\r\n\t\tnewTextFormat.leftMargin = format_props.get(8,0);\r\n\t\tnewTextFormat.rightMargin = format_props.get(9,0);\r\n\t\t//newTextFormat.linespacing = format_props.get(10,0);\r\n\t\tnewTextFormat.size = format_props.get(1,12);\r\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\r\n\t\t//newTextFormat.rotated = format_props.get(3,false);\r\n\t\tnewTextFormat.kerning = format_props.get(4,true);\r\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\r\n\t\tnewTextFormat.material = mat;\r\n\t\tthis.awd_file_data.parseUserAttributes();// textformat has no extra-properties\r\n\t\t//newTextFormat.extra =\r\n\r\n\t\tthis.awd_file_data.cur_block.data = newTextFormat;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a TextFormat: Name = '\" + name + \" font: \"+font.name);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = TextformatAWDParser;/**\r\n * Created by 80prozent on 4/18/2015.\r\n */\r\n",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\n\r\nclass VertexAnimClipAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar poseOnly:boolean=false;\r\n\t\tif(this.awd_file_data.cur_block.type==111){\r\n\t\t\tposeOnly=true\r\n\t\t}\r\n\t\tvar num_frames:number /*uint*/ = 1;\r\n\t\tvar num_submeshes:number /*uint*/;\r\n\t\tvar frames_parsed:number /*uint*/;\r\n\t\tvar subMeshParsed:number /*uint*/;\r\n\t\tvar frame_dur:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar str_len:number;\r\n\t\tvar str_end:number;\r\n\t\tvar geometry:Geometry;\r\n\t\tvar subGeom:TriangleSubGeometry;\r\n\t\tvar idx:number /*int*/ = 0;\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar verts:Array<number>;\r\n\t\tvar num_Streams:number /*int*/ = 0;\r\n\t\tvar streamsParsed:number /*int*/ = 0;\r\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar thisGeo:Geometry;\r\n\t\tvar clip:VertexClipNode = new VertexClipNode();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar geoAdress:number /*int*/ = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar geom:Geometry = <Geometry>this.awd_file_data.getAssetByID(geoAdress);\r\n\t\tif (geom==undefined) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the target-Geometry-Object \" + geoAdress + \" ) for this.awd_file_data VertexClipNode\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar uvs:Array<Array<number>> = this.awd_file_data.getUVForVertexAnimation(geoAdress);\r\n\t\tif (!poseOnly)\r\n\t\t\tnum_frames = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\tnum_submeshes = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tnum_Streams = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tstreamsParsed = 0;\r\n\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\tstreamtypes.push(this.awd_file_data.newBlockBytes.readUnsignedShort());\r\n\t\t\tstreamsParsed++;\r\n\t\t}\r\n\t\tprops = this.awd_file_data.parseProperties({1:AWD3Utils.BOOL, 2:AWD3Utils.BOOL});\r\n\r\n\t\tclip.looping = props.get(1, true);\r\n\t\tclip.stitchFinalFrame = props.get(2, false);\r\n\r\n\t\tframes_parsed = 0;\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tframe_dur = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\tgeometry = new Geometry();\r\n\t\t\tsubMeshParsed = 0;\r\n\t\t\twhile (subMeshParsed < num_submeshes) {\r\n\t\t\t\tstreamsParsed = 0;\r\n\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\r\n\t\t\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\r\n\t\t\t\t\t\tindices = geom.subGeometries[subMeshParsed].indices;\r\n\t\t\t\t\t\tverts = new Array<number>();\r\n\t\t\t\t\t\tidx = 0;\r\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\t\tx = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo)\r\n\t\t\t\t\t\t\ty = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo)\r\n\t\t\t\t\t\t\tz = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo)\r\n\t\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsubGeom = new TriangleSubGeometry(true);\r\n\t\t\t\t\t\tsubGeom.updateIndices(indices);\r\n\t\t\t\t\t\tsubGeom.updatePositions(verts);\r\n\t\t\t\t\t\tsubGeom.updateUVs(uvs[subMeshParsed]);\r\n\t\t\t\t\t\tsubGeom.updateVertexNormals(null);\r\n\t\t\t\t\t\tsubGeom.updateVertexTangents(null);\r\n\t\t\t\t\t\tsubGeom.autoDeriveNormals = false;\r\n\t\t\t\t\t\tsubGeom.autoDeriveTangents = false;\r\n\t\t\t\t\t\tsubMeshParsed++;\r\n\t\t\t\t\t\tgeometry.addSubGeometry(subGeom)\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t\tstreamsParsed++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tclip.addFrame(geometry, frame_dur);\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data=clip;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + geom.name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = VertexAnimClipAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\n\r\nclass VertexAnimationSetAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar poseBlockAdress:number /*int*/\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_frames:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT16});\r\n\t\tvar frames_parsed:number /*uint*/ = 0;\r\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\r\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tposeBlockAdress = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar animNode:AnimationNodeBase = <AnimationNodeBase>this.awd_file_data.getAssetByID(poseBlockAdress);\r\n\t\t\tif (animNode==undefined) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the AnimationClipNode Nr \" + frames_parsed + \" ( \" + poseBlockAdress + \" ) for this.awd_file_data AnimationSet\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (animNode instanceof VertexClipNode)\r\n\t\t\t\t\tvertexFrames.push(<VertexClipNode>animNode)\r\n\t\t\t\tif (animNode instanceof SkeletonClipNode)\r\n\t\t\t\t\tskeletonFrames.push(<SkeletonClipNode>animNode)\r\n\t\t\t}\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not create this.awd_file_data AnimationSet, because it contains no animations\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tif (vertexFrames.length > 0) {\r\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\r\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\r\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\r\n\t\t\tthis.awd_file_data.cur_block.data = newVertexAnimationSet;\r\n\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + newVertexAnimationSet.name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames.toString());\r\n\t\t\treturn;\r\n\t\t} else if (skeletonFrames.length > 0) {\r\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\r\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\r\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\r\n\t\t\tthis.awd_file_data.cur_block.data = newSkeletonAnimationSet;\r\n\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + newSkeletonAnimationSet.name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = VertexAnimationSetAWDParser;",
    "\r\n\r\n\r\nimport BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\r\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\n\r\nimport BitmapCubeTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapCubeTexture\");\r\nimport BitmapTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\r\n\r\nimport CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\nimport ImageCubeTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageCubeTexture\");\r\nimport ImageTexture\t\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\n\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\n\r\n\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\n\r\n\r\n\r\nimport AWDBitFlags\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport AWDBlock\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\r\nimport AWD3Utils\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\n\r\n/**\r\n * AWD3FileData stores the data loaded for a AWD-file. It also gives access to some helper functions.\r\n */\r\nclass AWD3FileData\r\n{\r\n\t//set to \"true\" to have some console.logs in the Console\r\n\tprivate _debug:boolean = false;\r\n\r\n\tprivate _cur_block:AWDBlock;\r\n\tprivate _blocks:Array<AWDBlock>;\r\n\tprivate _newBlockBytes:ByteArray;\r\n\r\n\tpublic  major_version:number;\r\n\tpublic  minor_version:number;\r\n\r\n\tprivate _accuracyOnBlocks:boolean = false;\r\n\r\n\tprivate _accuracyMatrix:boolean;\r\n\tprivate _accuracyGeo:boolean;\r\n\tprivate _accuracyProps:boolean;\r\n\tprivate _matrixNrType:number;\r\n\tprivate _geoNrType:number;\r\n\tprivate _propsNrType:number;\r\n\r\n\tprivate blendModeDic:Array<string>;\r\n\tprivate _depthSizeDic:Array<number>;\r\n\r\n\tprivate _defaultCubeTexture:BitmapCubeTexture;\r\n\t/**\r\n\t * Creates a new AWD3FileData object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.major_version=0;\r\n\t\tthis.minor_version=0;\r\n\r\n\t\tthis._blocks = new Array<AWDBlock>();\r\n\t\tthis._blocks.push(new AWDBlock(255, 0));\r\n\t\tthis._cur_block=this._blocks[0];\r\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.ADD);\r\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\r\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\r\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\r\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\r\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\r\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\r\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\r\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\r\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\r\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\r\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\r\n\t\tthis._depthSizeDic.push(256);\r\n\t\tthis._depthSizeDic.push(512);\r\n\t\tthis._depthSizeDic.push(2048);\r\n\t\tthis._depthSizeDic.push(1024);\r\n\t}\r\n\r\n\tpublic getDepthSizeFromEnum(depthSize:number):number\r\n\t{\r\n\t\treturn this._depthSizeDic[depthSize];\r\n\t}\r\n\tpublic getBlendModeStringFromEnum(blendmode:number):string\r\n\t{\r\n\t\treturn this.blendModeDic[blendmode];\r\n\t}\r\n\r\n\tpublic dispose():void\r\n\t{\r\n\r\n\t\tfor (var c in this._blocks) {\r\n\r\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[ c ];\r\n\t\t\tb.dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tpublic get accuracyOnBlocks():boolean\r\n\t{\r\n\t\treturn this._accuracyOnBlocks;\r\n\t}\r\n\tpublic get accuracyMatrix():boolean\r\n\t{\r\n\t\treturn this._accuracyMatrix;\r\n\t}\r\n\tpublic set accuracyMatrix(new_accuracyMatrix:boolean)\r\n\t{\r\n\t\tthis._accuracyMatrix = new_accuracyMatrix;\r\n\t}\r\n\tpublic get accuracyProps():boolean\r\n\t{\r\n\t\treturn this._accuracyProps;\r\n\t}\r\n\tpublic set accuracyProps(new_accuracyProps:boolean)\r\n\t{\r\n\t\tthis._accuracyProps = new_accuracyProps;\r\n\t}\r\n\tpublic set accuracyGeo(new_accuracyGeo:boolean)\r\n\t{\r\n\t\tthis._accuracyGeo = new_accuracyGeo;\r\n\t}\r\n\tpublic get accuracyGeo():boolean\r\n\t{\r\n\t\treturn this._accuracyGeo;\r\n\t}\r\n\tpublic get debug():boolean\r\n\t{\r\n\t\treturn this._debug;\r\n\t}\r\n\r\n\tpublic get matrixNrType():number\r\n\t{\r\n\t\treturn this._matrixNrType;\r\n\t}\r\n\tpublic set matrixNrType(newmatrixNrType:number)\r\n\t{\r\n\t\tthis._matrixNrType = newmatrixNrType;\r\n\t}\r\n\r\n\tpublic get propsNrType():number\r\n\t{\r\n\t\treturn this._propsNrType;\r\n\t}\r\n\tpublic set propsNrType(new_props_nr:number)\r\n\t{\r\n\t\tthis._propsNrType = new_props_nr;\r\n\t}\r\n\r\n\tpublic get geoNrType():number\r\n\t{\r\n\t\treturn this._geoNrType;\r\n\t}\r\n\tpublic set geoNrType(new_geoNrType:number)\r\n\t{\r\n\t\tthis._geoNrType = new_geoNrType;\r\n\t}\r\n\r\n\r\n\tpublic set newBlockBytes(new_newBlockBytes:ByteArray)\r\n\t{\r\n\t\tthis._newBlockBytes = new_newBlockBytes;\r\n\t}\r\n\tpublic get newBlockBytes():ByteArray\r\n\t{\r\n\t\treturn this._newBlockBytes;\r\n\t}\r\n\tpublic create_new_block(type:number, id:number)\r\n\t{\r\n\t\tvar new_block:AWDBlock= new AWDBlock(this._blocks.length, type);\r\n\t\tthis._cur_block=new_block;\r\n\t\tthis._blocks[id]=new_block;\r\n\t}\r\n\tpublic get cur_block():AWDBlock\r\n\t{\r\n\t\treturn this._cur_block;\r\n\t}\r\n\tpublic block_cnt():number\r\n\t{\r\n\t\treturn this._blocks.length;\r\n\t}\r\n\r\n\t//--Parser UTILS---------------------------------------------------------------------------\r\n\r\n\tpublic parseUserAttributes():Object\r\n\t{\r\n\t\tvar attributes:Object;\r\n\t\tvar list_len:number;\r\n\t\tvar attibuteCnt:number;\r\n\r\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\tif (list_len > 0) {\r\n\r\n\t\t\tvar list_end:number;\r\n\r\n\t\t\tattributes = {};\r\n\r\n\t\t\tlist_end = this._newBlockBytes.position + list_len;\r\n\r\n\t\t\twhile (this._newBlockBytes.position < list_end) {\r\n\t\t\t\tvar ns_id:number;\r\n\t\t\t\tvar attr_key:string;\r\n\t\t\t\tvar attr_type:number;\r\n\t\t\t\tvar attr_len:number;\r\n\t\t\t\tvar attr_val:any;\r\n\r\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\r\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_key = this.parseVarStr();\r\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn attributes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (attr_type) {\r\n\t\t\t\t\tcase AWD3Utils.AWDSTRING:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.INT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.INT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.INT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.BOOL:\r\n\t\t\t\t\tcase AWD3Utils.UINT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.UINT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.UINT32:\r\n\t\t\t\t\tcase AWD3Utils.BADDR:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.FLOAT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.FLOAT64:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\r\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattributes[attr_key] = attr_val;\r\n\t\t\t\tattibuteCnt += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\t}\r\n\r\n\tpublic parseProperties(expected:Object):AWDProperties\r\n\t{\r\n\t\tvar list_end:number;\r\n\t\tvar list_len:number;\r\n\t\tvar propertyCnt:number = 0;\r\n\t\tvar props:AWDProperties = new AWDProperties();\r\n\r\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\r\n\t\tlist_end = this._newBlockBytes.position + list_len;\r\n\r\n\t\tif (expected) {\r\n\r\n\t\t\twhile (this._newBlockBytes.position < list_end) {\r\n\t\t\t\tvar len:number;\r\n\t\t\t\tvar key:number;\r\n\t\t\t\tvar type:number;\r\n\r\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn props;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (expected.hasOwnProperty(key.toString())) {\r\n\t\t\t\t\ttype = expected[key];\r\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newBlockBytes.position += len;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpropertyCnt += 1;\r\n\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t}\r\n\r\n\t\treturn props;\r\n\r\n\t}\r\n\r\n\tprivate parseAttrValue(type:number, len:number):any\r\n\t{\r\n\t\tvar elem_len:number;\r\n\t\tvar read_func:Function;\r\n\r\n\t\tswitch (type) {\r\n\r\n\t\t\tcase AWD3Utils.BOOL:\r\n\t\t\tcase AWD3Utils.INT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.INT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.INT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.UINT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.UINT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.UINT32:\r\n\t\t\tcase AWD3Utils.COLOR:\r\n\t\t\tcase AWD3Utils.BADDR:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.FLOAT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.FLOAT64:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.AWDSTRING:\r\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\r\n\t\t\tcase AWD3Utils.VECTOR2x1:\r\n\t\t\tcase AWD3Utils.VECTOR3x1:\r\n\t\t\tcase AWD3Utils.VECTOR4x1:\r\n\t\t\tcase AWD3Utils.MTX3x2:\r\n\t\t\tcase AWD3Utils.MTX3x3:\r\n\t\t\tcase AWD3Utils.MTX4x3:\r\n\t\t\tcase AWD3Utils.MTX4x4:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif (elem_len < len) {\r\n\t\t\tvar list:Array<any> = [];\r\n\t\t\tvar num_read:number = 0;\r\n\t\t\tvar num_elems:number = len/elem_len;\r\n\r\n\t\t\twhile (num_read < num_elems) {\r\n\t\t\t\tlist.push(read_func.apply(this._newBlockBytes)); // list.push(read_func());\r\n\t\t\t\tnum_read++;\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\t\t} else {\r\n\r\n\t\t\tvar val:any = read_func.apply(this._newBlockBytes);//read_func();\r\n\t\t\treturn val;\r\n\t\t}\r\n\t}\r\n\r\n\t// Helper - functions\r\n\tpublic getUVForVertexAnimation(meshID:number /*uint*/):Array<Array<number>>\r\n\t{\r\n\t\tif (this._blocks[meshID].data instanceof Mesh)\r\n\t\t\tmeshID = this._blocks[meshID].geoID;\r\n\t\tif (this._blocks[meshID].uvsForVertexAnimation)\r\n\t\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\t\tvar geometry:Geometry = (<Geometry> this._blocks[meshID].data);\r\n\t\tvar geoCnt:number /*int*/ = 0;\r\n\t\tvar ud:Array<number>;\r\n\t\tvar uStride:number /*uint*/;\r\n\t\tvar uOffs:number /*uint*/;\r\n\t\tvar numPoints:number /*uint*/;\r\n\t\tvar i:number /*int*/;\r\n\t\tvar newUvs:Array<number>;\r\n\t\tvar sub_geom:TriangleSubGeometry;\r\n\t\tthis._blocks[meshID].uvsForVertexAnimation = new Array<Array<number>>();\r\n\t\twhile (geoCnt < geometry.subGeometries.length) {\r\n\t\t\tnewUvs = new Array<number>();\r\n\t\t\tsub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\r\n\t\t\tnumPoints = sub_geom.numVertices;\r\n\t\t\tud = sub_geom.uvs;\r\n\t\t\tuStride = sub_geom.getStride(TriangleSubGeometry.UV_DATA);\r\n\t\t\tuOffs = sub_geom.getOffset(TriangleSubGeometry.UV_DATA);\r\n\t\t\tfor (i = 0; i < numPoints; i++) {\r\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 0]);\r\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 1]);\r\n\t\t\t}\r\n\t\t\tthis._blocks[meshID].uvsForVertexAnimation.push(newUvs);\r\n\t\t\tgeoCnt++;\r\n\t\t}\r\n\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\t}\r\n\r\n\tpublic parseVarStr():string\r\n\t{\r\n\r\n\t\tvar len:number = this._newBlockBytes.readUnsignedShort();\r\n\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\t}\r\n\r\n\tpublic getBlockByID(assetID:number):AWDBlock\r\n\t{\r\n\t\treturn this._blocks[assetID];\r\n\t}\r\n\tpublic getAssetByID(assetID:number):IAsset\r\n\t{\r\n\t\treturn this._blocks[assetID].data;\r\n\t}\r\n\tprivate getDefaultAsset(assetType:string, extraTypeInfo:string):IAsset\r\n\t{\r\n\t\tswitch (true) {\r\n\t\t\tcase (assetType == TextureBase.assetType):\r\n\t\t\t\tif (extraTypeInfo == \"CubeTexture\")\r\n\t\t\t\t\treturn this.getDefaultCubeTexture();\r\n\t\t\t\tif (extraTypeInfo == \"SingleTexture\")\r\n\t\t\t\t\treturn DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\tbreak;\r\n\t\t\tcase (assetType == MaterialBase.assetType):\r\n\t\t\t\treturn DefaultMaterialManager.getDefaultMaterial();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic getDefaultCubeTexture():IAsset\r\n\t{\r\n\t\tif (!this._defaultCubeTexture) {\r\n\t\t\tvar defaultBitmap:BitmapData = DefaultMaterialManager.createCheckeredBitmapData();\r\n\r\n\t\t\tthis._defaultCubeTexture = new BitmapCubeTexture(defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap);\r\n\t\t\tthis._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t\t}\r\n\r\n\t\treturn <IAsset> this._defaultCubeTexture;\r\n\t}\r\n\r\n\tpublic  readNumber(precision:boolean = false):number\r\n\t{\r\n\t\tif (precision)\r\n\t\t\treturn this._newBlockBytes.readDouble();\r\n\t\treturn this._newBlockBytes.readFloat();\r\n\r\n\t}\r\n\r\n\tpublic parseMatrix3D():Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\r\n\t}\r\n\r\n\tprivate parseMatrix32RawData():Array<number>\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n\tpublic parseMatrix43RawData():Array<number>\r\n\t{\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(16);\r\n\r\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[3] = 0.0;\r\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[7] = 0.0;\r\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[11] = 0.0;\r\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[15] = 1.0;\r\n\r\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\r\n\r\n\t\tif (isNaN(mtx_raw[0])) {\r\n\t\t\tmtx_raw[0] = 1;\r\n\t\t\tmtx_raw[1] = 0;\r\n\t\t\tmtx_raw[2] = 0;\r\n\t\t\tmtx_raw[4] = 0;\r\n\t\t\tmtx_raw[5] = 1;\r\n\t\t\tmtx_raw[6] = 0;\r\n\t\t\tmtx_raw[8] = 0;\r\n\t\t\tmtx_raw[9] = 0;\r\n\t\t\tmtx_raw[10] = 1;\r\n\t\t\tmtx_raw[12] = 0;\r\n\t\t\tmtx_raw[13] = 0;\r\n\t\t\tmtx_raw[14] = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n}\r\n\r\nexport = AWD3FileData;\r\n\r\n\r\n\r\n",
    "\r\nclass AWD3Utils {\r\n\tpublic static BLOCKSTATE_FINALIZE:number = 0;\r\n\tpublic static BLOCKSTATE_INVALID:number = 1;\r\n\tpublic static BLOCKSTATE_LOAD_DEPENDENICES:number = 2;\r\n\tpublic static BLOCKSTATE_NO_ASSET:number = 3;\r\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\r\n\tpublic static UNCOMPRESSED:number = 0;\r\n\tpublic static DEFLATE:number = 1;\r\n\tpublic static LZMA:number = 2;\r\n\tpublic static INT8:number = 1;\r\n\tpublic static INT16:number = 2;\r\n\tpublic static INT32:number = 3;\r\n\tpublic static UINT8:number = 4;\r\n\tpublic static UINT16:number = 5;\r\n\tpublic static UINT32:number = 6;\r\n\tpublic static FLOAT32:number = 7;\r\n\tpublic static FLOAT64:number = 8;\r\n\tpublic static BOOL:number = 21;\r\n\tpublic static COLOR:number = 22;\r\n\tpublic static BADDR:number = 23;\r\n\tpublic static AWDSTRING:number = 31;\r\n\tpublic static AWDBYTEARRAY:number = 32;\r\n\tpublic static VECTOR2x1:number = 41;\r\n\tpublic static VECTOR3x1:number = 42;\r\n\tpublic static VECTOR4x1:number = 43;\r\n\tpublic static MTX3x2:number = 44;\r\n\tpublic static MTX3x3:number = 45;\r\n\tpublic static MTX4x3:number = 46;\r\n\tpublic static MTX4x4:number = 47;\r\n}\r\nexport = AWD3Utils;",
    "\r\n/**\r\n *\r\n */\r\nclass AWDBitFlags\r\n{\r\n\tpublic static FLAG1:number = 1;\r\n\tpublic static FLAG2:number = 2;\r\n\tpublic static FLAG3:number = 4;\r\n\tpublic static FLAG4:number = 8;\r\n\tpublic static FLAG5:number = 16;\r\n\tpublic static FLAG6:number = 32;\r\n\tpublic static FLAG7:number = 64;\r\n\tpublic static FLAG8:number = 128;\r\n\tpublic static FLAG9:number = 256;\r\n\tpublic static FLAG10:number = 512;\r\n\tpublic static FLAG11:number = 1024;\r\n\tpublic static FLAG12:number = 2048;\r\n\tpublic static FLAG13:number = 4096;\r\n\tpublic static FLAG14:number = 8192;\r\n\tpublic static FLAG15:number = 16384;\r\n\tpublic static FLAG16:number = 32768;\r\n\r\n\tpublic static test(flags:number, testFlag:number):boolean\r\n\t{\r\n\t\treturn (flags & testFlag) == testFlag;\r\n\t}\r\n}\r\nexport = AWDBitFlags;",
    "import ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nclass AWDBlock\r\n{\r\n\tpublic id:number;\r\n\tpublic name:string;\r\n\tpublic type:number;\r\n\tpublic data:any;\r\n\tpublic dependencies_data:Array<ByteArray>;\r\n\tpublic dependencies_urls:Array<string>;\r\n\tpublic loaded_dependencies:Array<any>;\r\n\tpublic loaded_dependencies_cnt:number;\r\n\tpublic len:number;\r\n\tpublic geoID:number;\r\n\tpublic state:number;\r\n\tpublic extras:Object;\r\n\tpublic bytes:ByteArray;\r\n\tpublic errorMessages:Array<string>;\r\n\tpublic uvsForVertexAnimation:Array<Array<number>>;\r\n\r\n\tconstructor(this_id:number, this_type:number)\r\n\t{\r\n\t\tthis.type=this_type;\r\n\t\tthis.id=this_id;\r\n\t\tthis.state = AWD3Utils.BLOCKSTATE_FINALIZE;\r\n\t\tthis.dependencies_data=Array<any>();\r\n\t\tthis.dependencies_urls=Array<string>();\r\n\t\tif(this_type==83){\r\n\t\t\tthis.loaded_dependencies=Array<any>(6);\r\n\t\t}\r\n\t\tthis.loaded_dependencies_cnt=0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t\tthis.id = null;\r\n\t\tthis.bytes = null;\r\n\t\tthis.errorMessages = null;\r\n\t\tthis.uvsForVertexAnimation = null;\r\n\r\n\t}\r\n\r\n\tpublic addError(errorMsg:string):void\r\n\t{\r\n\t\tif (!this.errorMessages)\r\n\t\t\tthis.errorMessages = new Array<string>();\r\n\r\n\t\tthis.errorMessages.push(errorMsg);\r\n\t}\r\n}\r\nexport = AWDBlock;",
    "\r\nclass AWDProperties\r\n{\r\n\tpublic set(key:number, value:any):void\r\n\t{\r\n\t\tthis[ key.toString() ] = value;\r\n\t}\r\n\r\n\tpublic get(key:number, fallback:any):any\r\n\t{\r\n\t\tif (this.hasOwnProperty(key.toString())) {\r\n\t\t\treturn this[key.toString()];\r\n\t\t} else {\r\n\t\t\treturn fallback;\r\n\t\t}\r\n\t}\r\n}\r\nexport = AWDProperties;",
    "\r\n\r\nimport BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\r\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\n\r\nimport BitmapCubeTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapCubeTexture\");\r\nimport BitmapTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\r\n\r\nimport CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\nimport ImageCubeTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageCubeTexture\");\r\nimport ImageTexture\t\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\n\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\n\r\n\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\n\r\n\r\n\r\nimport AWDBitFlags\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport AWDAssetParsers\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers\");\r\nimport AWDBlock\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\r\nimport AWD3FileData\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\n\r\n/**\r\n * AWD3Utils provides a parser for the AWD data type.\r\n */\r\nclass AWD3Parser extends ParserBase\r\n{\r\n\t//set to \"true\" to have some console.logs in the Console\r\n\tprivate _debug:boolean = false;\r\n\tprivate _byteData:ByteArray;\r\n\tprivate _startedParsing:boolean = false;\r\n\tprivate _compression:number;\r\n\tprivate _streaming:boolean;\r\n\tprivate _parsed_header:boolean = false;\r\n\tprivate _body:ByteArray;\r\n\tprivate _awd_data:AWD3FileData;\r\n\tprivate _block_parser:AWDAssetParsers;\r\n\r\n\t// temp for checking stats\r\n\tpublic total_time:number = 0;\r\n\tpublic geom_time:number = 0;\r\n\tpublic timeline_time:number = 0;\r\n\r\n\t/**\r\n\t * Creates a new AWD3Utils object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(block_parser:AWDAssetParsers = undefined)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n\t\tthis._block_parser=block_parser;\r\n\t\tif(this._block_parser==undefined){\r\n\t\t\tthis._block_parser=new AWDAssetParsers();\r\n\t\t}\r\n\t\tthis._awd_data=new AWD3FileData();\r\n\t\tthis._block_parser.init_parser(this._awd_data);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"awd\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t// this will be called when Dependency has finished loading.\r\n\t\t// the ressource dependecniy has a id that point to the awd_block waiting for it.\r\n\t\tif (resourceDependency.assets.length == 1) {\r\n\t\t\tvar this_block:AWDBlock = this._awd_data.getBlockByID(parseInt(resourceDependency.id));\r\n\t\t\tif(this_block.type==82){\r\n\t\t\t\tvar testure_asset:Texture2DBase = <Texture2DBase> resourceDependency.assets[0];\r\n\t\t\t\tthis_block.data = testure_asset; // Store finished asset\r\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> testure_asset, this_block.name);\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap for texture\");\r\n\t\t\t\t\tconsole.log(\"Parsed texture: Name = \" + this_block.name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(this_block.type==44){\r\n\t\t\t\t// todo: implement parsing of Audio block data\r\n\t\t\t\t/*asset = <Texture2DBase> resourceDependency.assets[0];\r\n\t\t\t\tthis_block.data = asset; // Store finished asset\r\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this_block.name);\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap for texture\");\r\n\t\t\t\t\tconsole.log(\"Parsed texture: Name = \" + this_block.name);\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t\telse if(this_block.type==83){\r\n\t\t\t\tthis_block.loaded_dependencies[resourceDependency.sub_id]=<Texture2DBase> resourceDependency.assets[0];\r\n\t\t\t\tthis_block.loaded_dependencies_cnt++;\r\n\t\t\t\tif(this_block.loaded_dependencies_cnt==6){\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + resourceDependency.sub_id + \" / 6 for Cubetexture\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar posX:any = this_block.loaded_dependencies[0];\r\n\t\t\t\t\tvar negX:any = this_block.loaded_dependencies[1];\r\n\t\t\t\t\tvar posY:any = this_block.loaded_dependencies[2];\r\n\t\t\t\t\tvar negY:any = this_block.loaded_dependencies[3];\r\n\t\t\t\t\tvar posZ:any = this_block.loaded_dependencies[4];\r\n\t\t\t\t\tvar negZ:any = this_block.loaded_dependencies[5];\r\n\r\n\t\t\t\t\tvar cube_tex_asset = <TextureBase> new ImageCubeTexture(posX, negX, posY, negY, posZ, negZ);\r\n\t\t\t\t\tthis_block.data = cube_tex_asset; // Store finished asset\r\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> cube_tex_asset, this_block.name);\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + this_block.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t//\tnot used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\r\n\t\t// \tthis means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency name\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\r\n\t{\r\n\t\tvar oldName:string = asset.name;\r\n\r\n\t\tif (asset) {\r\n\t\t\tvar block:AWDBlock = this._awd_data.getBlockByID(parseInt(resourceDependency.id));\r\n\t\t\t// Reset name of texture to the one defined in the AWD file,\r\n\t\t\t// as opposed to whatever the image parser came up with.\r\n\t\t\tasset.resetAssetPath(block.name, null, true);\r\n\t\t}\r\n\r\n\t\tvar newName:string = asset.name;\r\n\r\n\t\tasset.name = oldName;\r\n\r\n\t\treturn newName;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\tif (!this._parsed_header) {\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Parse header and decompress body if needed\r\n\t\t\tthis.parseHeader();\r\n\r\n\t\t\tswitch (this._compression) {\r\n\r\n\t\t\t\tcase AWD3Utils.DEFLATE:\r\n\t\t\t\tcase AWD3Utils.LZMA:\r\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase AWD3Utils.UNCOMPRESSED:\r\n\t\t\t\t\tthis._body = this._byteData;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t// Compressed AWD Formats not yet supported\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t case AWD3Parserutils.DEFLATE:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress();\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t case AWD3Parserutils.LZMA:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t //*/\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._parsed_header = true;\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t}\r\n\r\n\t\tif (this._body) {\r\n\r\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\r\n\t\t\t{\r\n\t\t\t\tthis.parseNextBlock();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Return complete status\r\n\t\t\tif (this._body.getBytesAvailable() == 0) {\r\n\t\t\t\tthis.dispose();\r\n\t\t\t\treturn  ParserBase.PARSING_DONE;\r\n\t\t\t} else {\r\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\tswitch (this._compression) {\r\n\r\n\t\t\t\tcase AWD3Utils.DEFLATE:\r\n\t\t\t\tcase AWD3Utils.LZMA:\r\n\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"(!) AWD3Utils Error: Compressed AWD formats not yet supported (!)\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\t\t\t// Error - most likely _body not set because we do not support compression.\r\n\t\t\treturn  ParserBase.PARSING_DONE;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate dispose():void\r\n\t{\r\n\t\tthis._awd_data.dispose();\r\n\t}\r\n\r\n\tprivate parseNextBlock():void\r\n\t{\r\n\t\tvar block_id:number = this._body.readUnsignedInt();\r\n\r\n\t\tvar ns:number = this._body.readUnsignedByte();\r\n\t\tvar block_type:number = this._body.readUnsignedByte();\r\n\t\tvar flags:number = this._body.readUnsignedByte();\r\n\t\tvar len:number = this._body.readUnsignedInt();\r\n\r\n\t\tvar blockCompression:boolean = AWDBitFlags.test(flags, AWDBitFlags.FLAG4);\r\n\t\tvar blockCompressionLZMA:boolean = AWDBitFlags.test(flags, AWDBitFlags.FLAG5);\r\n\r\n\t\tif (this._awd_data.accuracyOnBlocks) {\r\n\t\t\tthis._awd_data.accuracyMatrix = AWDBitFlags.test(flags, AWDBitFlags.FLAG1);\r\n\t\t\tthis._awd_data.accuracyGeo = AWDBitFlags.test(flags, AWDBitFlags.FLAG2);\r\n\t\t\tthis._awd_data.accuracyProps = AWDBitFlags.test(flags, AWDBitFlags.FLAG3);\r\n\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\t\tif (this._awd_data.accuracyGeo) {\r\n\t\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT64;\r\n\t\t\t}\r\n\r\n\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\t\tif (this._awd_data.accuracyMatrix) {\r\n\t\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT64;\r\n\t\t\t}\r\n\r\n\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\t\tif (this._awd_data.accuracyProps) {\r\n\t\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT64;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar blockEndAll:number = this._body.position + len;\r\n\r\n\t\tif (len > this._body.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\r\n\t\t\tthis._body.position += this._body.getBytesAvailable();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar newBlockBytes:ByteArray = new ByteArray();\r\n\t\tthis._body.readBytes(newBlockBytes, 0, len);\r\n\t\tthis._awd_data.newBlockBytes = newBlockBytes;\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// Compressed AWD Formats not yet supported\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\r\n\t\t\t/*\r\n\t\t\t if (blockCompressionLZMA)\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress(AWD3Parserutils.COMPRESSIONMODE_LZMA);\r\n\t\t\t }\r\n\t\t\t else\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress();\r\n\t\t\t }\r\n\t\t\t */\r\n\r\n\t\t}\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\r\n\t\t//----------------------------------------------------------------------------\r\n\r\n\t\tthis._awd_data.newBlockBytes.position = 0;\r\n\r\n\t\t// we create AWDBlock for all exept the metadata. the metadata block has is the first awdblock in the list by default.\r\n\t\t//if(block_type!=255)\r\n\t\tthis._awd_data.create_new_block(block_type, block_id);\r\n\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\r\n\t\t\t//block.len       = blockEndBlock;\r\n\t\t}\r\n\r\n\t\t//if (this._debug) {\r\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + block_id + \" | TypeID = \" + block_type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._awd_data.accuracyMatrix + \" | Geometry-Precision = \" + this._awd_data.accuracyGeo + \" | Properties-Precision = \" + this._awd_data.accuracyProps);\r\n\t\t//}\r\n\r\n\t\tvar time_start = performance.now();\r\n\r\n\t\t// first check if the block is any of the 3 blocks that does not produce a asset.\r\n\t\t\t// this block contains a asset.\r\n\t\tif(this._block_parser.parseAsset(block_type)){\r\n\t\t\tif(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_FINALIZE){\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset>this._awd_data.cur_block.data, this._awd_data.cur_block.name);\r\n\t\t\t\tif(this._awd_data.cur_block.data instanceof DisplayObject){\r\n\t\t\t\t\tif((<DisplayObjectContainer> this._awd_data.cur_block.data).parent==undefined){\r\n\t\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild((<DisplayObjectContainer> this._awd_data.cur_block.data));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_INVALID){\r\n\t\t\t\tconsole.log(\"ERROR while parsing block - type = \", block_type, \" id = \", block_id);\r\n\t\t\t}\r\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES){\r\n\t\t\t\t// trigger No asset created yet, because the block has dependencies. load the dependencies:.\r\n\t\t\t\tfor(var r:number=0; r<this._awd_data.cur_block.dependencies_urls.length;r++){\r\n\t\t\t\t\t// load dependencies by url. let the parser system decide how to parse it\r\n\t\t\t\t\tthis._pAddDependency(this._awd_data.cur_block.id.toString(), new URLRequest(this._awd_data.cur_block.dependencies_urls[r]), false, null, true, r);\r\n\t\t\t\t}\r\n\t\t\t\tfor(var r:number=0; r<this._awd_data.cur_block.dependencies_data.length;r++) {\r\n\t\t\t\t\t// load dependencies from data. need to prepare the data based on block_type (image vs audio).\r\n\t\t\t\t\tif ((block_type == 82) || (block_type == 83)) {\r\n\t\t\t\t\t\tthis._pAddDependency(this._awd_data.cur_block.id.toString(), null, false, ParserUtils.byteArrayToImage(this._awd_data.cur_block.dependencies_data[r]), true, r);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (block_type == 44) {\r\n\t\t\t\t\t\t// todo: parse audio data\r\n\t\t\t\t\t\t// this._pAddDependency(this._awd_data.cur_block.id.toString(), null, false, this._awd_data.cur_block.dependencies_data[r], true, r);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t}\r\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_NO_ASSET){\r\n\t\t\t\t// this block does not produce any asset (metadata, namespace, command)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Encountered unknown blocktype - type = \", block_type, \" id = \", block_id);\r\n\t\t}\r\n\r\n\t\tvar time_end = performance.now();\r\n\t\tvar thisTime:number=time_end-time_start;\r\n\t\tthis.total_time+=thisTime;\r\n\t\tif(block_type==1){\r\n\t\t\tthis.geom_time+=thisTime;\r\n\t\t}\r\n\t\telse if(block_type==133){\r\n\t\t\tthis.timeline_time+=thisTime;\r\n\t\t}\r\n\t\tconsole.log(\"'parsed '\"+block_type+\"'  block in \"+thisTime+ \" ms\", \" total: \",this.total_time,\" geom: \",this.geom_time,\"timelines:\",this.timeline_time);\r\n\r\n\t\tthis._body.position = blockEndAll;\r\n\t\tthis._awd_data.newBlockBytes = null;\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\tprivate parseHeader():void\r\n\t{\r\n\t\tvar flags:number;\r\n\t\tvar body_len:number;\r\n\r\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\r\n\r\n\t\tthis._awd_data.major_version = this._byteData.readUnsignedByte();\r\n\t\tthis._awd_data.minor_version = this._byteData.readUnsignedByte();\r\n\r\n\t\tflags = this._byteData.readUnsignedShort(); // Parse bit flags\r\n\r\n\t\tthis._streaming = AWDBitFlags.test(flags, AWDBitFlags.FLAG1);\r\n\r\n\t\tif ((this._awd_data.major_version == 2) && (this._awd_data.minor_version == 1)) {\r\n\t\t\tthis._awd_data.accuracyMatrix = AWDBitFlags.test(flags, AWDBitFlags.FLAG2);\r\n\t\t\tthis._awd_data.accuracyGeo = AWDBitFlags.test(flags, AWDBitFlags.FLAG3);\r\n\t\t\tthis._awd_data.accuracyProps = AWDBitFlags.test(flags, AWDBitFlags.FLAG4);\r\n\t\t}\r\n\r\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\r\n\r\n\t\t// set storagePrecision types\r\n\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\tif (this._awd_data.accuracyGeo) {\r\n\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\tif (this._awd_data.accuracyMatrix) {\r\n\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\tif (this._awd_data.accuracyProps) {\r\n\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._awd_data.major_version + \" - \" + this._awd_data.minor_version );\r\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._awd_data.accuracyMatrix + \" | Geometry-Precision = \" + this._awd_data.accuracyGeo + \" | Properties-Precision = \" + this._awd_data.accuracyProps);\r\n\t\t}\r\n\r\n\t\t// Check file integrity\r\n\t\tbody_len = this._byteData.readUnsignedInt();\r\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = AWD3Parser;\r\n\r\n",
    "import BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\r\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\r\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\r\nimport BitmapCubeTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapCubeTexture\");\r\nimport BitmapTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\r\nimport CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\nimport ImageCubeTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageCubeTexture\");\r\nimport ImageTexture\t\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport TextField\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\r\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\r\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\r\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\r\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\r\n\r\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\n\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\r\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\r\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\r\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\r\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\r\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\r\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\r\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\r\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\r\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\r\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\r\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\r\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\r\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\r\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\r\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\r\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\r\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\r\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\r\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\r\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\r\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\r\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\r\n\r\nimport CurveMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/CurveMaterial\")\r\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nimport TimelineSceneGraphFactory \t= require(\"awayjs-player/lib/factories/TimelineSceneGraphFactory\");\r\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\r\nimport MovieClip \t\t\t\t\t= require(\"awayjs-player/lib/display/MovieClip\");\r\nimport TimelineKeyFrame \t\t\t= require(\"awayjs-player/lib/timeline/TimelineKeyFrame\");\r\nimport AddChildCommand \t\t\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildCommand\");\r\nimport AddChildAtDepthCommand\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildAtDepthCommand\");\r\nimport ApplyAS2DepthsCommand\t\t= require(\"awayjs-player/lib/timeline/commands/ApplyAS2DepthsCommand\");\r\nimport ExecuteScriptCommand \t\t= require(\"awayjs-player/lib/timeline/commands/ExecuteScriptCommand\");\r\nimport RemoveChildCommand \t\t\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildCommand\");\r\nimport RemoveChildrenAtDepthCommand\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildrenAtDepthCommand\");\r\nimport SetInstanceNameCommand \t\t= require(\"awayjs-player/lib/timeline/commands/SetInstanceNameCommand\");\r\nimport UpdatePropertyCommand \t\t= require(\"awayjs-player/lib/timeline/commands/UpdatePropertyCommand\");\r\nimport SetMaskCommand \t\t        = require(\"awayjs-player/lib/timeline/commands/SetMaskCommand\");\r\n\r\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport TextFormat\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextFieldType\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\n\r\n/**\r\n * AWDParser provides a parser for the AWD data type.\r\n */\r\nclass AWDParser extends ParserBase\r\n{\r\n\t//set to \"true\" to have some console.logs in the Console\r\n\tprivate _debug:boolean = false;\r\n\tprivate _byteData:ByteArray;\r\n\tprivate _startedParsing:boolean = false;\r\n\tprivate _cur_block_id:number;\r\n\tprivate _blocks:Array<AWDBlock>;\r\n\tprivate _newBlockBytes:ByteArray;\r\n\tprivate _version:Array<number>;\r\n\tprivate _compression:number;\r\n\tprivate _accuracyOnBlocks:boolean;\r\n\tprivate _accuracyMatrix:boolean;\r\n\tprivate _accuracyGeo:boolean;\r\n\tprivate _accuracyProps:boolean;\r\n\tprivate _matrixNrType:number;\r\n\tprivate _geoNrType:number;\r\n\tprivate _propsNrType:number;\r\n\tprivate _streaming:boolean;\r\n\tprivate _texture_users:Object = {};\r\n\tprivate _parsed_header:boolean = false;\r\n\tprivate _body:ByteArray;\r\n\tprivate _defaultTexture:BitmapTexture;     // HTML IMAGE TEXTURE >? !\r\n\tprivate _cubeTextures:Array<any>;\r\n\tprivate _defaultBitmapMaterial:MethodMaterial;\r\n\tprivate _defaultCubeTexture:BitmapCubeTexture;\r\n\r\n\r\n\t// temp for checking stats\r\n\tpublic total_time:number = 0;\r\n\tpublic geom_time:number = 0;\r\n\tpublic timeline_time:number = 0;\r\n\r\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\r\n\tpublic static UNCOMPRESSED:number = 0;\r\n\tpublic static DEFLATE:number = 1;\r\n\tpublic static LZMA:number = 2;\r\n\tpublic static INT8:number = 1;\r\n\tpublic static INT16:number = 2;\r\n\tpublic static INT32:number = 3;\r\n\tpublic static UINT8:number = 4;\r\n\tpublic static UINT16:number = 5;\r\n\tpublic static UINT32:number = 6;\r\n\tpublic static FLOAT32:number = 7;\r\n\tpublic static FLOAT64:number = 8;\r\n\tpublic static BOOL:number = 21;\r\n\tpublic static COLOR:number = 22;\r\n\tpublic static BADDR:number = 23;\r\n\tpublic static AWDSTRING:number = 31;\r\n\tpublic static AWDBYTEARRAY:number = 32;\r\n\tpublic static VECTOR2x1:number = 41;\r\n\tpublic static VECTOR3x1:number = 42;\r\n\tpublic static VECTOR4x1:number = 43;\r\n\tpublic static MTX3x2:number = 44;\r\n\tpublic static MTX3x3:number = 45;\r\n\tpublic static MTX4x3:number = 46;\r\n\tpublic static MTX4x4:number = 47;\r\n\r\n\tprivate blendModeDic:Array<string>;\r\n\tprivate _depthSizeDic:Array<number>;\r\n\tprivate _allFontTables:Array<TesselatedFontTable>;\r\n\r\n\t/**\r\n\t * Creates a new AWD3Parserutils object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n\t\tthis._blocks = new Array<AWDBlock>();\r\n\t\tthis._blocks[0] = new AWDBlock();\r\n\t\tthis._blocks[0].data = null; // Zero address means null in AWD\r\n\r\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.ADD);\r\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\r\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\r\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\r\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\r\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\r\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\r\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\r\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\r\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\r\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\r\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\r\n\t\tthis._depthSizeDic.push(256);\r\n\t\tthis._depthSizeDic.push(512);\r\n\t\tthis._depthSizeDic.push(2048);\r\n\t\tthis._depthSizeDic.push(1024);\r\n\t\tthis._version = Array<number>(); // will contain 2 int (major-version, minor-version) for awd-version-check\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"awd\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t// this will be called when Dependency has finished loading.\r\n\t\t// the Assets waiting for this Bitmap, can be Texture or CubeTexture.\r\n\t\t// if the Bitmap is awaited by a CubeTexture, we need to check if its the last Bitmap of the CubeTexture,\r\n\t\t// so we know if we have to finalize the Asset (CubeTexture) or not.\r\n\t\tif (resourceDependency.assets.length == 1) {\r\n\t\t\tvar isCubeTextureArray:Array<string> = resourceDependency.id.split(\"#\");\r\n\t\t\tvar ressourceID:string = isCubeTextureArray[0];\r\n\t\t\tvar asset:TextureBase;\r\n\t\t\tvar thisBitmapTexture:Texture2DBase;\r\n\t\t\tvar block:AWDBlock;\r\n\r\n\t\t\tif (isCubeTextureArray.length == 1) // Not a cube texture\r\n\t\t\t{\r\n\t\t\t\tasset = <Texture2DBase> resourceDependency.assets[0];\r\n\t\t\t\tif (asset) {\r\n\t\t\t\t\tvar mat:MethodMaterial;\r\n\t\t\t\t\tvar users:Array<string>;\r\n\r\n\t\t\t\t\tblock = this._blocks[ resourceDependency.id ];\r\n\t\t\t\t\tblock.data = asset; // Store finished asset\r\n\r\n\t\t\t\t\t// Reset name of texture to the one defined in the AWD file,\r\n\t\t\t\t\t// as opposed to whatever the image parser came up with.\r\n\t\t\t\t\tasset.resetAssetPath(block.name, null, true);\r\n\t\t\t\t\tblock.name = asset.name;\r\n\t\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> asset);\r\n\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap for texture\");\r\n\t\t\t\t\t\tconsole.log(\"Parsed texture: Name = \" + block.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (isCubeTextureArray.length > 1) // Cube Texture\r\n\t\t\t{\r\n\t\t\t\tthisBitmapTexture = <BitmapTexture> resourceDependency.assets[0];\r\n\r\n\t\t\t\tvar tx:ImageTexture = <ImageTexture> thisBitmapTexture;\r\n\r\n\t\t\t\tthis._cubeTextures[ isCubeTextureArray[1] ] = tx.htmlImageElement; // ?\r\n\t\t\t\tthis._texture_users[ressourceID].push(1);\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + this._texture_users[ressourceID].length + \" / 6 for Cubetexture\");\r\n\t\t\t\t}\r\n\t\t\t\tif (this._texture_users[ressourceID].length == this._cubeTextures.length) {\r\n\r\n\t\t\t\t\tvar posX:any = this._cubeTextures[0];\r\n\t\t\t\t\tvar negX:any = this._cubeTextures[1];\r\n\t\t\t\t\tvar posY:any = this._cubeTextures[2];\r\n\t\t\t\t\tvar negY:any = this._cubeTextures[3];\r\n\t\t\t\t\tvar posZ:any = this._cubeTextures[4];\r\n\t\t\t\t\tvar negZ:any = this._cubeTextures[5];\r\n\r\n\t\t\t\t\tasset = <TextureBase> new ImageCubeTexture(posX, negX, posY, negY, posZ, negZ);\r\n\t\t\t\t\tblock = this._blocks[ressourceID];\r\n\t\t\t\t\tblock.data = asset; // Store finished asset\r\n\r\n\t\t\t\t\t// Reset name of texture to the one defined in the AWD file,\r\n\t\t\t\t\t// as opposed to whatever the image parser came up with.\r\n\t\t\t\t\tasset.resetAssetPath(block.name, null, true);\r\n\t\t\t\t\tblock.name = asset.name;\r\n\t\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> asset);\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + block.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t//not used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\r\n\t\t// this means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency name\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\r\n\t{\r\n\t\tvar oldName:string = asset.name;\r\n\r\n\t\tif (asset) {\r\n\t\t\tvar block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\r\n\t\t\t// Reset name of texture to the one defined in the AWD file,\r\n\t\t\t// as opposed to whatever the image parser came up with.\r\n\t\t\tasset.resetAssetPath(block.name, null, true);\r\n\t\t}\r\n\r\n\t\tvar newName:string = asset.name;\r\n\r\n\t\tasset.name = oldName;\r\n\r\n\t\treturn newName;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\tif (!this._parsed_header) {\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Parse header and decompress body if needed\r\n\t\t\tthis.parseHeader();\r\n\r\n\t\t\tswitch (this._compression) {\r\n\r\n\t\t\t\tcase AWDParser.DEFLATE:\r\n\t\t\t\tcase AWDParser.LZMA:\r\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase AWDParser.UNCOMPRESSED:\r\n\t\t\t\t\tthis._body = this._byteData;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t// Compressed AWD Formats not yet supported\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t case AWD3Parserutils.DEFLATE:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress();\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t case AWD3Parserutils.LZMA:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t //*/\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._parsed_header = true;\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t}\r\n\r\n\t\tif (this._body) {\r\n\r\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\r\n\t\t\t{\r\n\t\t\t\tthis.parseNextBlock();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Return complete status\r\n\t\t\tif (this._body.getBytesAvailable() == 0) {\r\n\t\t\t\tthis.dispose();\r\n\t\t\t\treturn  ParserBase.PARSING_DONE;\r\n\t\t\t} else {\r\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\tswitch (this._compression) {\r\n\r\n\t\t\t\tcase AWDParser.DEFLATE:\r\n\t\t\t\tcase AWDParser.LZMA:\r\n\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"(!) AWDParser Error: Compressed AWD formats not yet supported (!)\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\t\t\t// Error - most likely _body not set because we do not support compression.\r\n\t\t\treturn  ParserBase.PARSING_DONE;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate dispose():void\r\n\t{\r\n\r\n\t\tfor (var c in this._blocks) {\r\n\r\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[ c ];\r\n\t\t\tb.dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate parseNextBlock():void\r\n\t{\r\n\t\tvar block:AWDBlock;\r\n\t\tvar assetData:IAsset;\r\n\t\tvar isParsed:boolean = false;\r\n\t\tvar ns:number;\r\n\t\tvar type:number;\r\n\t\tvar flags:number;\r\n\t\tvar len:number;\r\n\r\n\t\tthis._cur_block_id = this._body.readUnsignedInt();\r\n\r\n\t\tns = this._body.readUnsignedByte();\r\n\t\ttype = this._body.readUnsignedByte();\r\n\t\tflags = this._body.readUnsignedByte();\r\n\t\tlen = this._body.readUnsignedInt();\r\n\r\n\t\tvar blockCompression:boolean = BitFlags.test(flags, BitFlags.FLAG4);\r\n\t\tvar blockCompressionLZMA:boolean = BitFlags.test(flags, BitFlags.FLAG5);\r\n\r\n\t\tif (this._accuracyOnBlocks) {\r\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG1);\r\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG2);\r\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG3);\r\n\t\t\tthis._geoNrType = AWDParser.FLOAT32;\r\n\r\n\t\t\tif (this._accuracyGeo) {\r\n\t\t\t\tthis._geoNrType = AWDParser.FLOAT64;\r\n\t\t\t}\r\n\r\n\t\t\tthis._matrixNrType = AWDParser.FLOAT32;\r\n\r\n\t\t\tif (this._accuracyMatrix) {\r\n\t\t\t\tthis._matrixNrType = AWDParser.FLOAT64;\r\n\t\t\t}\r\n\r\n\t\t\tthis._propsNrType = AWDParser.FLOAT32;\r\n\r\n\t\t\tif (this._accuracyProps) {\r\n\t\t\t\tthis._propsNrType = AWDParser.FLOAT64;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar blockEndAll:number = this._body.position + len;\r\n\r\n\t\tif (len > this._body.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\r\n\t\t\tthis._body.position += this._body.getBytesAvailable();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._newBlockBytes = new ByteArray();\r\n\r\n\r\n\t\tthis._body.readBytes(this._newBlockBytes, 0, len);\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// Compressed AWD Formats not yet supported\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\r\n\t\t\t/*\r\n\t\t\t if (blockCompressionLZMA)\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress(AWD3Parserutils.COMPRESSIONMODE_LZMA);\r\n\t\t\t }\r\n\t\t\t else\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress();\r\n\t\t\t }\r\n\t\t\t */\r\n\r\n\t\t}\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\r\n\t\t//----------------------------------------------------------------------------\r\n\r\n\t\tthis._newBlockBytes.position = 0;\r\n\t\tblock = new AWDBlock();\r\n\t\tblock.len = this._newBlockBytes.position + len;\r\n\t\tblock.id = this._cur_block_id;\r\n\r\n\t\tvar blockEndBlock:number = this._newBlockBytes.position + len;\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\r\n\t\t\t//block.len       = blockEndBlock;\r\n\t\t}\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + this._cur_block_id + \" | TypeID = \" + type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\r\n\t\t}\r\n\r\n\t\tthis._blocks[this._cur_block_id] = block;\r\n\r\n\t\t//var time_start = performance.now();\r\n\t\tif ((this._version[0] == 3) && (this._version[1] == 0)) {\r\n\t\t\t// probably should contain some info about the type of animation\r\n\t\t\tvar factory = new AS2SceneGraphFactory();\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 24:\r\n\t\t\t\t\tthis.parseMeshLibraryBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 25:\r\n\t\t\t\t\tthis.parseBillBoardLibraryBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 44:\r\n\t\t\t\t\tthis.parseAudioBlock(this._cur_block_id, factory);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 133:\r\n\t\t\t\t\tthis.parseTimeLine(this._cur_block_id, factory);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 134:\r\n\t\t\t\t\tthis.paresTextField(this._cur_block_id, factory);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 135:\r\n\t\t\t\t\tthis.parseTesselatedFont(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 136:\r\n\t\t\t\t\tthis.parseTextFormat(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ((this._version[0] > 2)||((this._version[0] >= 2) && (this._version[1] >= 1))) {\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 11:\r\n\t\t\t\t\tthis.parsePrimitves(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 31:\r\n\t\t\t\t\tthis.parseSkyboxInstance(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 41:\r\n\t\t\t\t\tthis.parseLight(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 42:\r\n\t\t\t\t\tthis.parseCamera(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//  case 43:\r\n\t\t\t\t//      parseTextureProjector(_cur_block_id);\r\n\t\t\t\t//      isParsed = true;\r\n\t\t\t\t//      break;\r\n\r\n\t\t\t\tcase 51:\r\n\t\t\t\t\tthis.parseLightPicker(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 81:\r\n\t\t\t\t\tthis.parseMaterial_v1(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 83:\r\n\t\t\t\t\tthis.parseCubeTexture(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 91:\r\n\t\t\t\t\tthis.parseSharedMethodBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 92:\r\n\t\t\t\t\tthis.parseShadowMethodBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 111:\r\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id, true);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 112:\r\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 113:\r\n\t\t\t\t\tthis.parseVertexAnimationSet(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 122:\r\n\t\t\t\t\tthis.parseAnimatorSet(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 253:\r\n\t\t\t\t\tthis.parseCommand(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t//*/\r\n\t\t}\r\n\t\t//*\r\n\t\tif (isParsed == false) {\r\n\t\t\tswitch (type) {\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.parseTriangleGeometrieBlock(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 22:\r\n\t\t\t\t\tthis.parseContainer(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 23:\r\n\t\t\t\t\tthis.parseMeshInstance(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 81:\r\n\t\t\t\t\tthis.parseMaterial(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 82:\r\n\t\t\t\t\tthis.parseTexture(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 101:\r\n\t\t\t\t\tthis.parseSkeleton(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 102:\r\n\t\t\t\t\tthis.parseSkeletonPose(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 103:\r\n\t\t\t\t\tthis.parseSkeletonAnimation(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 121:\r\n\t\t\t\t//this.parseUVAnimation(this._cur_block_id);\r\n\t\t\t\t//break;\r\n\t\t\t\tcase 254:\r\n\t\t\t\t\tthis.parseNameSpace(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 255:\r\n\t\t\t\t\tthis.parseMetaData(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"AWDBlock:   Unknown BlockType  (BlockID = \" + this._cur_block_id + \") - Skip \" + len + \" bytes\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._newBlockBytes.position += len;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//*/\r\n\r\n\t\tvar msgCnt:number = 0;\r\n\t\tif (this._newBlockBytes.position == blockEndBlock) {\r\n\t\t\tif (this._debug) {\r\n\t\t\t\tif (block.errorMessages) {\r\n\t\t\t\t\twhile (msgCnt < block.errorMessages.length) {\r\n\t\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\r\n\t\t\t\t\t\tmsgCnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this._debug) {\r\n\t\t\t\tconsole.log(\"\\n\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._debug) {\r\n\r\n\t\t\t\tconsole.log(\"  (!)(!)(!) Error while reading AWDBlock ID \" + this._cur_block_id + \" = skip to next block\");\r\n\r\n\t\t\t\tif (block.errorMessages) {\r\n\t\t\t\t\twhile (msgCnt < block.errorMessages.length) {\r\n\t\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\r\n\t\t\t\t\t\tmsgCnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n/*\r\n\t\tvar time_end = performance.now();\r\n\t\tvar thisTime:number=time_end-time_start;\r\n\t\tthis.total_time+=thisTime;\r\n\t\tif(type==1){\r\n\t\t\tthis.geom_time+=thisTime;\r\n\t\t}\r\n\t\telse if(type==133){\r\n\t\t\tthis.timeline_time+=thisTime;\r\n\t\t}\r\n\t\tconsole.log(\"'parsed '\"+type+\"'  block in \"+thisTime+ \" ms\", \" total: \",this.total_time,\" geom: \",this.geom_time,\"timelines:\",this.timeline_time);\r\n*/\r\n\t\tthis._body.position = blockEndAll;\r\n\t\tthis._newBlockBytes = null;\r\n\r\n\t}\r\n\r\n\r\n\t//--Parser Blocks---------------------------------------------------------------------------\r\n\r\n\r\n\tprivate parseTesselatedFont(blockID:number):void {\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tthis._blocks[blockID].name = name;\r\n\t\t//console.log(\"Font name = \"+this._blocks[blockID].name);\r\n\t\tvar font_style_cnt:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"Font font_style_cnt = \"+font_style_cnt);\r\n\t\tvar new_font:Font=new Font();\r\n\t\tfor (var i:number = 0; i < font_style_cnt; ++i) {\r\n\t\t\tvar font_style_name:string = this.parseVarStr();\r\n\t\t\t//console.log(\"Font font_style_name = \"+font_style_name);\r\n\t\t\tvar new_font_style:TesselatedFontTable=new_font.get_font_table(font_style_name);\r\n\t\t\tnew_font_style.set_font_em_size(this._newBlockBytes.readUnsignedInt());\r\n\t\t\t//console.log(\"Font new_font_style.font_em_size = \"+new_font_style.get_font_em_size);\r\n\t\t\tvar font_style_char_cnt:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t//console.log(\"Font font_style_char_cnt = \"+font_style_char_cnt);\r\n\t\t\tfor (var i:number = 0; i < font_style_char_cnt; ++i) {\r\n\r\n\t\t\t\tvar font_style_char:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"Font font_style_char = \"+font_style_char);\r\n\t\t\t\t// todo: this is basically a simplified version of the subgeom-parsing done in parseTriangleGeometry. Make a parseSubGeom() instead (?)\r\n\t\t\t\tvar sm_len:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar sm_end:number = this._newBlockBytes.position + sm_len;\r\n\t\t\t\t//console.log(\"Font sm_len = \"+sm_len);\r\n\r\n\t\t\t\t//this.parseProperties(null); // no properties for font-table subgeos\r\n\t\t\t\t// Loop through data streams\r\n\t\t\t\twhile (this._newBlockBytes.position < sm_end) {\r\n\t\t\t\t\tvar idx:number = 0;\r\n\t\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n\t\t\t\t\t// Type, field type, length\r\n\t\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\r\n\r\n\t\t\t\t\tif (str_type == 2) {//face indicies positions\r\n\t\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\t\tindices[idx++] = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\r\n\t\t\t\t\t\tvar idx_pos:number = 0;\r\n\t\t\t\t\t\tvar idx_curves:number = 0;\r\n\t\t\t\t\t\tvar idx_uvs:number = 0;\r\n\r\n\t\t\t\t\t\tvar positions:Array<number> = new Array<number>();\r\n\t\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\r\n\t\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// x\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// y\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// type\r\n\r\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.readNumber(this._accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.readNumber(this._accuracyGeo);// curve value 2\r\n\r\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.readNumber(this._accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.readNumber(this._accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.parseProperties(null);// no attributes for font-table subgeos\r\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\r\n\t\t\t\tcurve_sub_geom.updateIndices(indices);\r\n\t\t\t\tcurve_sub_geom.updatePositions(positions);\r\n\t\t\t\tcurve_sub_geom.updateCurves(curveData);\r\n\t\t\t\tcurve_sub_geom.updateUVs(uvs);\r\n\t\t\t\tnew_font_style.set_subgeo_for_char(font_style_char.toString(), curve_sub_geom);\r\n\t\t\t}\r\n\t\t\t//console.log(\"Parsed a font-table\");\r\n\r\n\t\t}\r\n\t\t//console.log(\"Parsed a font\");\r\n\t\tthis.parseProperties(null);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset>new_font, name);\r\n\t\tthis._blocks[blockID].data = new_font;\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a font: Name = '\" + name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate parseTextFormat(blockID:number):void {\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tthis._blocks[blockID].name = name;\r\n\t\t//console.log(\"this._blocks[blockID].name  '\" + this._blocks[blockID].name );\r\n\t\tvar font_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"font_id  '\" + font_id);\r\n\t\tvar font_style_name:string = this.parseVarStr();\r\n\t\t//console.log(\"font_style_name  '\" + font_style_name);\r\n\t\tvar returnArrayFont:Array<any> = this.getAssetByID(font_id, [Font.assetType]);\r\n\t\tvar font:Font;\r\n\t\tif (returnArrayFont[0]) {\r\n\t\t\tfont = <Font> returnArrayFont[1];\r\n\t\t} else {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Font for this TextFormat. A empty Font is created!\");\r\n\t\t\tfont = new Font();\r\n\t\t}\r\n\t\tvar newTextFormat:TextFormat = new TextFormat();\r\n\t\tnewTextFormat.font_name = font.name;\r\n\t\tvar font_table:TesselatedFontTable = font.get_font_table(font_style_name);\r\n\t\tif(font_table!=null){\r\n\t\t\tnewTextFormat.font_style = font_style_name;\r\n\t\t\tnewTextFormat.font_table = font_table;\r\n\t\t}\r\n\r\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"mat  '\" + data_id);\r\n\t\tvar mat:BasicMaterial;\r\n\t\tvar returnedArrayMaterial:Array<any> = this.getAssetByID(data_id, [MaterialBase.assetType]);\r\n\r\n\t\tif (returnedArrayMaterial[0]) {\r\n\t\t\tmat = <BasicMaterial> returnedArrayMaterial[1];\r\n\t\t} else {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Material for this TextFormat. Default Material will be used!\");\r\n\t\t\tmat = new BasicMaterial();\r\n\t\t}\r\n\t\tmat.bothSides=true;\r\n\r\n\t\tvar num_uv_values:number = this._newBlockBytes.readUnsignedByte();\r\n\t\t//console.log(\"num_uv_values  '\" + num_uv_values);\r\n\t\tvar uv_values:Array<number>=[];\r\n\t\tfor(var uvcnt:number=0; uvcnt<num_uv_values; uvcnt++){\r\n\t\t\tvar uv_value:number=this._newBlockBytes.readFloat();\r\n\t\t\tuv_values.push(uv_value);\r\n\t\t\t//console.log(\"uv_value  '\" + uv_value);\r\n\t\t}\r\n\t\tnewTextFormat.uv_values=uv_values;\r\n\t\tvar format_props:AWDProperties = this.parseProperties({1:AWDParser.UINT16, 2:AWDParser.UINT16, 3:AWDParser.UINT8,4:AWDParser.UINT8,5:AWDParser.UINT8,6:AWDParser.UINT8, 7:AWDParser.UINT16, 8:AWDParser.UINT16, 9:AWDParser.UINT16, 10:AWDParser.UINT16});\r\n\r\n\t\tnewTextFormat.size = format_props.get(1,12);\r\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\r\n\t\t//newTextFormat.rotated = format_props.get(3,false);\r\n\t\tnewTextFormat.kerning = format_props.get(4,true);\r\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\r\n\t\t//newTextFormat.align = format_props.get(6,0);\r\n\t\tnewTextFormat.indent = format_props.get(7,0);\r\n\t\tnewTextFormat.leftMargin = format_props.get(8,0);\r\n\t\tnewTextFormat.rightMargin = format_props.get(9,0);\r\n\t\t//newTextFormat.linespacing = format_props.get(10,0);\r\n\t\tnewTextFormat.material = mat;\r\n\t\tthis.parseUserAttributes();// textformat has no extra-properties\r\n\t\t//newTextFormat.extra =\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> newTextFormat, name);\r\n\t\tthis._blocks[blockID].data = newTextFormat;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a TextFormat: Name = '\" + name + \" font: \"+font.name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate paresTextField(blockID:number, factory:TimelineSceneGraphFactory):void {\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tthis._blocks[blockID].name = name;\r\n\t\t//console.log(\"name  '\" + name);\r\n        var newTextField = factory.createTextField();\r\n\t\tvar text_field_type:number=this._newBlockBytes.readUnsignedByte();\r\n\t\tif(text_field_type==0) {\r\n\t\t\tnewTextField.type = \"static\";\r\n\t\t}\r\n\t\telse if(text_field_type==1) {\r\n\t\t\tnewTextField.type = \"dynamic\";\r\n\t\t}\r\n\t\telse if(text_field_type==2) {\r\n\t\t\tnewTextField.type = \"input\";\r\n\t\t}\r\n\t\telse if(text_field_type==3) {\r\n\t\t\tnewTextField.type =\"input\";\r\n\t\t\tnewTextField.displayAsPassword=true;\r\n\t\t}\r\n\r\n\t\tnewTextField.width=this._newBlockBytes.readFloat();\r\n\t\tnewTextField.height=this._newBlockBytes.readFloat();\r\n\t\tvar num_paragraphs:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar complete_text:string = \"\";\r\n\t\t//console.log(\"num_paragraphs  '\" + num_paragraphs);\r\n\t\tvar text_format:TextFormat;\r\n\t\tfor(var paracnt:number=0; paracnt<num_paragraphs; paracnt++){\r\n\r\n\t\t\tvar num_textruns:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t//console.log(\"num_textruns  '\" + num_textruns);\r\n\t\t\tfor(var textrun_cnt:number=0; textrun_cnt<num_textruns; textrun_cnt++) {\r\n\r\n\t\t\t\tvar format_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"format_id  '\" + format_id);\r\n\t\t\t\tvar textFormatArray:Array<any> = this.getAssetByID(format_id, [TextFormat.assetType]);\r\n\t\t\t\tif (textFormatArray[0]) {\r\n\t\t\t\t\ttext_format = <TextFormat> textFormatArray[1];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find a Material for this Billboard. A empty material is created!\");\r\n\t\t\t\t\ttext_format = new TextFormat();\r\n\t\t\t\t}\r\n\t\t\t\t//console.log(\"text_format  '\" + text_format.name);\r\n\t\t\t\tvar txt_length = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"txt_length  '\" + txt_length);\r\n\t\t\t\tif (txt_length > 0) {\r\n\t\t\t\t\tvar this_txt:string = this._newBlockBytes.readUTFBytes(txt_length);\r\n\t\t\t\t\t//newTextField.appendText(this_txt, text_format);\r\n\t\t\t\t\tcomplete_text+=this_txt;\r\n\t\t\t\t\t//console.log(\"this_txt  '\" + this_txt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//newTextField.closeParagraph();\r\n\t\t}\r\n\t\tnewTextField.textFormat=text_format;\r\n\t\tnewTextField.text=complete_text;\r\n\t\t//newTextField.construct_geometry();\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BOOL, 3:AWDParser.BOOL, 4:AWDParser.BOOL, 5:AWDParser.BOOL, 7:AWDParser.UINT8, 8:AWDParser.UINT8, 9:AWDParser.UINT8});\r\n\t\tnewTextField.selectable = props.get(1, false);\r\n\t\tnewTextField.border =  props.get(3, false);\r\n\t\t//newTextField.renderHTML =  props.get(4, false);\r\n\t\t//newTextField.scrollable =  props.get(5, false);\r\n\t\t//newTextField.text_flow =  props.get(7, 0);\r\n\t\t//newTextField.orientationMode =  props.get(8, 0);\r\n\t\t//newTextField.line_mode =  props.get(9, 0);\r\n\t\tnewTextField.extra = this.parseUserAttributes();\r\n\r\n\t\t//console.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\r\n\t\tthis._pFinalizeAsset(<IAsset> newTextField, name);\r\n\t\tthis._blocks[blockID].data = newTextField;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Block ID = 25\r\n\tprivate parseBillBoardLibraryBlock(blockID:number):void {\r\n\r\n\t\tvar name:string = this.parseVarStr();\r\n\r\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mat:BasicMaterial;\r\n\t\tvar returnedArrayMaterial:Array<any> = this.getAssetByID(data_id, [MaterialBase.assetType]);\r\n\r\n\t\tif (returnedArrayMaterial[0]) {\r\n\t\t\tmat = <BasicMaterial> returnedArrayMaterial[1];\r\n\t\t} else {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Material for this Billboard. A empty material is created!\");\r\n\t\t\tmat = new BasicMaterial();\r\n\t\t}\r\n\t\tmat.bothSides=true;\r\n\t\tvar billboard:Billboard = new Billboard(mat);\r\n\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\t\tthis.parseProperties(null);\r\n\r\n\t\tbillboard.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> billboard, name);\r\n\t\tthis._blocks[blockID].data = billboard;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a Library-Billboard: Name = '\" + name + \"| Material-Name = \" + mat.name);\r\n\t\t}\r\n\t}\r\n\t// Block ID = 24\r\n\tprivate parseMeshLibraryBlock(blockID:number):void {\r\n\t\tvar num_materials:number;\r\n\t\tvar materials_parsed:number;\r\n\r\n\t\tvar name:string = this.parseVarStr();\r\n\r\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar geom:Geometry;\r\n\t\tvar returnedArrayGeometry:Array<any> = this.getAssetByID(data_id, [Geometry.assetType])\r\n\r\n\t\tif (returnedArrayGeometry[0]) {\r\n\t\t\tgeom = <Geometry> returnedArrayGeometry[1];\r\n\t\t} else {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Geometry for this Mesh. A empty Geometry is created!\");\r\n\t\t\tgeom = new Geometry();\r\n\t\t}\r\n\r\n\t\tthis._blocks[blockID].geoID = data_id;\r\n\t\tvar materials:Array<MaterialBase> = new Array<MaterialBase>();\r\n\t\tnum_materials = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar materialNames:Array<string> = new Array<string>();\r\n\t\tmaterials_parsed = 0;\r\n\r\n\t\tvar returnedArrayMaterial:Array<any>;\r\n\r\n\t\twhile (materials_parsed < num_materials) {\r\n\t\t\tvar mat_id:number;\r\n\t\t\tmat_id = this._newBlockBytes.readUnsignedInt();\r\n\t\t\treturnedArrayMaterial = this.getAssetByID(mat_id, [MaterialBase.assetType])\r\n\t\t\tif ((!returnedArrayMaterial[0]) && (mat_id > 0)) {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find Material Nr \" + materials_parsed + \" (ID = \" + mat_id + \" ) for this Mesh\");\r\n\t\t\t}\r\n\r\n\t\t\tvar m:MaterialBase = <MaterialBase> returnedArrayMaterial[1];\r\n\r\n\t\t\tmaterials.push(m);\r\n\t\t\tmaterialNames.push(m.name);\r\n\r\n\t\t\tmaterials_parsed++;\r\n\t\t}\r\n\r\n\t\tvar mesh:Mesh = new Mesh(geom, null);\r\n\r\n\r\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\r\n\t\t\tmesh.material = materials[0];\r\n\t\t} else if (materials.length > 1) {\r\n\t\t\tvar i:number;\r\n\r\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\r\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\r\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\r\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.parseProperties(null);\r\n\t\tmesh.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\r\n\t\tthis._blocks[blockID].data = mesh;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a Library-Mesh: Name = '\" + name + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\r\n\t\t}\r\n\t}\r\n\tprivate parseAudioBlock(blockID:number, factory:TimelineSceneGraphFactory):void {\r\n\r\n\t\t//var asset:Audio;todo create asset for audio\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\t//this._texture_users[this._cur_block_id.toString()] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\r\n\t\t\t// todo parser needs to be able to handle mp3 and wav files if we trigger the loading of external ressource\r\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\r\n\t\t\tconsole.log(\"Audio url = \"+url);\r\n\r\n\t\t} else {\r\n\t\t\t// todo: exporter does not export embed sounds yet\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray;\r\n\t\t\tdata = new ByteArray();\r\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t// todo parse sound from bytes\r\n\t\t\t// this._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.by(data), true);\r\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t//this._blocks[blockID].data = asset;todo\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Audio file\");\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 4\r\n\tprivate parseTimeLine(blockID:number, factory:TimelineSceneGraphFactory):void {\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar c:number;\r\n\t\tvar timeLineContainer = factory.createMovieClip();\r\n\t\tvar name = this.parseVarStr();\r\n\t\tvar isScene = !!this._newBlockBytes.readUnsignedByte();\r\n\t\tvar sceneID = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar fps:number = this._newBlockBytes.readFloat();\r\n\t\t//console.log(\"fps = \"+fps);\r\n\t\t//timeLineContainer.fps=fps;\r\n\t\tvar ms_per_frame = 1000 / fps;\r\n\t\tvar num_instances:number=0;\r\n\t\tvar num_all_display_instances:number=0;\r\n\r\n\r\n\t\t// register list of potential childs\r\n\t\t// a potential child can be reused on a timeline (added / removed / added)\r\n\t\t// However, for each potential child, we need to register the max-number of instances that a frame contains\r\n\t\t// we parse 2 lists of potential-childs:\r\n\t\t// -\tthe first list contains potential-childs that are only ever instanced once per frame.\r\n\t\t// -\tthe second list contains potential-childs that are instanced multiple times on some frames.\r\n\r\n\t\t// on registering a child, the child gets a incremental-id assigned. This is the id, that the commands are using to access the childs.\r\n\t\t// hence we need to be careful to register all objects in correct order.\r\n\r\n\t\tvar num_potential_childs:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_childs; i++) {\r\n\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this._blocks[resourceID].data;\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\ttimeLineContainer.registerPotentialChild(cmd_asset);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\r\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tnum_all_display_instances+=num_potential_childs;\r\n\t\tvar num_potential_childs_multi_instanced = this._newBlockBytes.readUnsignedShort();\r\n\t\tnum_potential_childs+=num_potential_childs_multi_instanced;\r\n\t\tfor (i = 0; i < num_potential_childs_multi_instanced; i++) {\r\n\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tnum_instances = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tnum_all_display_instances+=num_instances;\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this._blocks[resourceID].data;\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\r\n\t\t\t\t\ttimeLineContainer.registerPotentialChild(cmd_asset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\r\n\t\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\r\n\t\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(\"Parsed \"+num_potential_childs+\" potential childs. They will be used by \"+num_all_display_instances+\" instances.\");\r\n\r\n\t\t// register list of potential sounds\r\n\t\t// a potential child can be reused on a timeline (added / removed / added)\r\n\t\tvar num_potential_sounds = this._newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_sounds; i++) {\r\n\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this._blocks[resourceID].data;\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\t//todo: register sound objects on movieclip\r\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//todo: this is a error that might break complete timeline, because all sound obj-id shift\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(\"Parsed \"+num_potential_sounds+\" potential sounds\");\r\n\r\n\t\tvar numFrames = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t//console.log(\"numFrames \"+numFrames);\r\n\t\t// var previousTimeLine:TimeLineFrame;\r\n\t\t// var fill_props:AWDProperties = this.parseProperties({1:AWD3Parserutils.UINT32});// { 1:UINT32, 6:AWDSTRING }  ); //; , 2:UINT32, 3:UINT32, 5:BOOL } );\r\n\r\n\r\n\t\tvar totalDuration:number;\r\n\t\tvar frameDuration:number;\r\n\t\tvar numLabels:number;\r\n\t\tvar numCommands:number;\r\n\t\tvar objectID:number;\r\n\t\tvar target_depth:number;\r\n\t\tvar resourceID:number;\r\n\t\tvar number_of_obj:number;\r\n\t\tvar commandType:number;\r\n\t\tvar frame:TimelineKeyFrame;\r\n\t\tvar label:string;\r\n\t\tvar hasDepthChanges:boolean;\r\n\t\ttotalDuration=0;\r\n\t\tfor (i = 0; i < numFrames; i++) {\r\n\t\t\tframe = new TimelineKeyFrame();\r\n\t\t\t// todo: remove the ms_per_frame to set the duration in frames\r\n\t\t\tframeDuration = this._newBlockBytes.readUnsignedInt()*ms_per_frame;\r\n\t\t\tframe.setFrameTime(totalDuration, frameDuration);\r\n\t\t\ttotalDuration += frameDuration;\r\n\t\t\t//console.log(\"duration = \" + frameDuration);\r\n\r\n\t\t\tnumLabels = this._newBlockBytes.readUnsignedByte();\r\n\t\t\tfor (j = 0; j < numLabels; j++) {\r\n\t\t\t\tlabel = this.parseVarStr();\r\n\t\t\t\t//console.log(\"label \"+label);\r\n\t\t\t}\r\n\r\n\t\t\tnumCommands = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t//console.log(\"numCommands \"+numCommands);\r\n\t\t\t//traceString += \"\\n      Commands \" + numCommands;\r\n\t\t\thasDepthChanges = false;\r\n\t\t\tfor (j = 0; j < numCommands; j++) {\r\n\t\t\t\tcommandType = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\t\t\t// 1 = remove a number of objects by depth\r\n\t\t\t\t// 2 = add a object by child-id at specific depth\r\n\t\t\t\t// 3 = update a object by child-id\r\n\t\t\t\t// 4 = add / update sound - (not finished)\r\n\r\n\t\t\t\tswitch (commandType) {\r\n\r\n\t\t\t\t\tcase 1:// remove a number of objects at specific depth\r\n\t\t\t\t\t\tnumber_of_obj = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t//console.log(\"number_of_obj \", number_of_obj);\r\n\t\t\t\t\t\tvar remove_depths:Array<number>=new Array<number>();\r\n\t\t\t\t\t\tfor (c = 0; c < number_of_obj; c++) {\r\n\t\t\t\t\t\t\t// Remove Object Command\r\n\t\t\t\t\t\t\ttarget_depth = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\tremove_depths.push(target_depth);\r\n\t\t\t\t\t\t\t//console.log(\"\\n       - Remove object at depth: \" + target_depth);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tframe.addConstructCommand(new RemoveChildrenAtDepthCommand(remove_depths));\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2:// add a of object by child-id at specific depth\r\n\t\t\t\t\tcase 3:// update a object by child-id\r\n\t\t\t\t\t\tobjectID = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t//console.log(\"add / update objectID \", objectID);\r\n\t\t\t\t\t\tif (commandType == 2) {\r\n\t\t\t\t\t\t\thasDepthChanges=true;\r\n\t\t\t\t\t\t\ttarget_depth = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t//console.log(\"target_depth \", target_depth);\r\n                            var potChild = timeLineContainer.getPotentialChild(objectID);\r\n\t\t\t\t\t\t\tif (potChild != undefined) {\r\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new AddChildAtDepthCommand(objectID, target_depth));\r\n\t\t\t\t\t\t\t\t// if the object is a tetfield, we set the textfield-name as instancename\r\n                                if(potChild.isAsset(TextField)) {\r\n                                    frame.addConstructCommand(new SetInstanceNameCommand(objectID, potChild.name));\r\n                                }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tconsole.log(\"ERROR: could not find the objectID \", objectID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar props_flag = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t/*\tProps_flags\r\n\t\t\t\t\t\t 1: read display matrix - 6 x float,\r\n\t\t\t\t\t\t 2: read display matrix - read another UINT8-bitflag that determinates what matrix components to parse\r\n\t\t\t\t\t\t 3: read color matrix - 4 x float, 4 x uint16\r\n\t\t\t\t\t\t 4: read color matrix - read another UINT8-bitflag that determinates what matrix components to parse\r\n\t\t\t\t\t\t 5: blendmode - uint8\r\n\t\t\t\t\t\t 6: visible - boolean\r\n\t\t\t\t\t\t 7: AWD3Parserutils.UINT8\r\n\t\t\t\t\t\t });*/\r\n\t\t\t\t\t\t// read display matrix\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG1)) {\r\n\t\t\t\t\t\t\tvar thisMatrix = new Matrix3D();\r\n\t\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG2)) {\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[0] = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[1] = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[4] = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[5] = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.position = new Vector3D(this._newBlockBytes.readFloat(), this._newBlockBytes.readFloat(), 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"_iMatrix3D\", thisMatrix));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// read colortransforms\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG3)) {\r\n\t\t\t\t\t\t\tvar thisColorTransform = new ColorTransform();\r\n\t\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG4)) {\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthisColorTransform.redMultiplier = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.greenMultiplier = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.blueMultiplier = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.alphaMultiplier = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.redOffset = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.greenOffset = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.blueOffset = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.alphaOffset = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG5)) {\r\n\t\t\t\t\t\t\tvar blendmode_int = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\t\t\tvar blendmode_string = this.blendModeDic[blendmode_int];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG6)) {\r\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"visible\", this._newBlockBytes.readByte()));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG7)) {\r\n\t\t\t\t\t\t\tvar instanceName = this.parseVarStr();\r\n\t\t\t\t\t\t\tif (instanceName.length) {\r\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetInstanceNameCommand(objectID, instanceName));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG8)) {\r\n\t\t\t\t\t\t\tvar mask_id_nums = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t\tvar mask_ids = new Array();\r\n\t\t\t\t\t\t\tfor (var mi_cnt = 0; mi_cnt < mask_id_nums; mi_cnt++) {\r\n\t\t\t\t\t\t\t\tmask_ids.push(this._newBlockBytes.readShort());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (mask_ids.length > 0) {\r\n\t\t\t\t\t\t\t\tif ((mask_ids.length == 1) && (mask_ids[0] == -1)) {\r\n\t\t\t\t\t\t\t\t\t// TODO: this object is used as mask\r\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"_iMaskID\", objectID));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetMaskCommand(objectID, mask_ids));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 4:\r\n\r\n\t\t\t\t\t\t// Add Sound Command\r\n\t\t\t\t\t\t// TODO: create CommandPropsSound and check which asset to use\r\n\t\t\t\t\t\tobjectID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\t// TODO: implement sound in timeline\r\n\t\t\t\t\t\t//commandString += \"\\n      - Add new Sound AWD-ID = \" + resourceID.toString() + \" as object_id = \" + objectID.toString();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t//commandString += \"\\n       - Unknown Command Type = \" + commandType;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (hasDepthChanges) {\r\n\t\t\t\t// only want to do this once after all children's depth values are updated\r\n\t\t\t\tframe.addConstructCommand(new ApplyAS2DepthsCommand());\r\n\t\t\t\thasDepthChanges = false;\r\n\t\t\t}\r\n\r\n\t\t\tvar length_code = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tif (length_code > 0) {\r\n\t\t\t\t// TODO: Script should probably not be attached to keyframes?\r\n\t\t\t\tvar frame_code = this._newBlockBytes.readUTFBytes(length_code);\r\n\t\t\t\tframe.addConstructCommand(new ExecuteScriptCommand(frame_code));\r\n\t\t\t\t//traceString += \"\\nframe-code = \" + frame_code;\r\n\t\t\t}\r\n\t\t\t//traceString += commandString;\r\n\t\t\t//trace(\"length_code = \"+length_code+\" frame_code = \"+frame_code);\r\n\t\t\tthis._newBlockBytes.readUnsignedInt();// user attributes - skip for now\r\n\t\t\t//console.log(traceString);\r\n\t\t\ttimeLineContainer.addFrame(frame);\r\n\r\n\t\t}\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset>timeLineContainer, name);\r\n\t\tthis._blocks[blockID].data = timeLineContainer;\r\n\t\tthis.parseProperties(null);\r\n\t\tthis.parseUserAttributes();\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| isScene = \" + isScene + \"| sceneID = \" + sceneID + \"| numFrames = \" + numFrames);\r\n\t}\r\n\t//Block ID = 1\r\n\tprivate parseTriangleGeometrieBlock(blockID:number):void\r\n\t{\r\n\r\n\t\tvar geom:Geometry = new Geometry();\r\n\r\n\t\t// Read name and sub count\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_subs:number = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t// Read optional properties\r\n\t\tvar props:AWDProperties = this.parseProperties({1:this._geoNrType, 2:this._geoNrType});\r\n\t\tvar geoScaleU:number = props.get(1, 1);\r\n\t\tvar geoScaleV:number = props.get(2, 1);\r\n\r\n\t\t// Loop through sub meshes\r\n\t\tvar subs_parsed:number = 0;\r\n\t\twhile (subs_parsed < num_subs) {\r\n\t\t\tvar is_curve_geom:boolean=false;\r\n\t\t\tvar i:number;\r\n\t\t\tvar sm_len:number, sm_end:number;\r\n\t\t\tvar w_indices:Array<number>;\r\n\t\t\tvar weights:Array<number>;\r\n\r\n\t\t\tsm_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tsm_end = this._newBlockBytes.position + sm_len;\r\n\r\n\t\t\tvar subProps:AWDProperties = this.parseProperties({1:this._geoNrType, 2:this._geoNrType});\r\n\t\t\t// Loop through data streams\r\n\t\t\twhile (this._newBlockBytes.position < sm_end) {\r\n\t\t\t\tvar idx:number = 0;\r\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n\t\t\t\t// Type, field type, length\r\n\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\r\n\r\n\t\t\t\tvar x:number, y:number, z:number;\r\n\r\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\r\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo);\r\n\r\n\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\r\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tindices[idx++] = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 3) {\r\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tuvs[idx++] = this.readNumber(this._accuracyGeo);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 4) {\r\n\r\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tnormals[idx++] = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 6) {\r\n\t\t\t\t\tw_indices = Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tw_indices[idx++] = this._newBlockBytes.readUnsignedShort()*3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 7) {\r\n\r\n\t\t\t\t\tweights = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tweights[idx++] = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\r\n\t\t\t\t\tis_curve_geom=true;\r\n\t\t\t\t\tvar idx_pos:number = 0;\r\n\t\t\t\t\tvar idx_curves:number = 0;\r\n\t\t\t\t\tvar idx_uvs:number = 0;\r\n\r\n\t\t\t\t\tvar positions:Array<number> = new Array<number>();\r\n\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\r\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// x\r\n\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// y\r\n\t\t\t\t\t\tpositions[idx_pos++] =  this.readNumber(this._accuracyGeo);// type\r\n\r\n\t\t\t\t\t\tcurveData[idx_curves++] = this.readNumber(this._accuracyGeo);// curve value 1\r\n\t\t\t\t\t\tcurveData[idx_curves++] = this.readNumber(this._accuracyGeo);// curve value 2\r\n\r\n\t\t\t\t\t\tuvs[idx_uvs++] = this.readNumber(this._accuracyGeo);// curve value 1\r\n\t\t\t\t\t\tuvs[idx_uvs++] = this.readNumber(this._accuracyGeo);// curve value 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.parseUserAttributes(); // Ignore sub-mesh attributes for now\r\n\t\t\tif(is_curve_geom){\r\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\r\n\t\t\t\tcurve_sub_geom.updateIndices(indices);\r\n\t\t\t\tcurve_sub_geom.updatePositions(positions);\r\n\t\t\t\tcurve_sub_geom.updateCurves(curveData);\r\n\t\t\t\tcurve_sub_geom.updateUVs(uvs);\r\n\t\t\t\tgeom.addSubGeometry(curve_sub_geom);\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a CurveSubGeometry\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar triangle_sub_geom = new TriangleSubGeometry(true);\r\n\t\t\t\tif (weights)\r\n\t\t\t\t\ttriangle_sub_geom.jointsPerVertex = weights.length / (verts.length / 3);\r\n\t\t\t\tif (normals)\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveNormals = false;\r\n\t\t\t\tif (uvs)\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveUVs = false;\r\n\t\t\t\t//triangle_sub_geom.autoDeriveNormals = false;\r\n\t\t\t\tif (true) {\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveTangents = true;\r\n\t\t\t\t}\r\n\t\t\t\ttriangle_sub_geom.updateIndices(indices);\r\n\t\t\t\ttriangle_sub_geom.updatePositions(verts);\r\n\t\t\t\ttriangle_sub_geom.updateVertexNormals(normals);\r\n\t\t\t\ttriangle_sub_geom.updateUVs(uvs);\r\n\t\t\t\ttriangle_sub_geom.updateVertexTangents(null);\r\n\t\t\t\ttriangle_sub_geom.updateJointWeights(weights);\r\n\t\t\t\ttriangle_sub_geom.updateJointIndices(w_indices);\r\n\r\n\t\t\t\tvar scaleU:number = subProps.get(1, 1);\r\n\t\t\t\tvar scaleV:number = subProps.get(2, 1);\r\n\t\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\r\n\r\n\t\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\r\n\t\t\t\t\tsetSubUVs = true;\r\n\t\t\t\t\tscaleU = geoScaleU / scaleU;\r\n\t\t\t\t\tscaleV = geoScaleV / scaleV;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (setSubUVs)\r\n\t\t\t\t\ttriangle_sub_geom.scaleUV(scaleU, scaleV);\r\n\t\t\t\tgeom.addSubGeometry(triangle_sub_geom);\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a TriangleSubGeometry\");\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\r\n\t\t\t// when creating meshes (and their material assignments.)\r\n\r\n\t\t\tsubs_parsed++;\r\n\t\t}\r\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\r\n\t\t\tgeom.scaleUV(geoScaleU, geoScaleV);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> geom, name);\r\n\t\tthis._blocks[blockID].data = geom;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a TriangleGeometry: Name = \" + name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t//Block ID = 11\r\n\tprivate parsePrimitves(blockID:number):void\r\n\t{\r\n\t\tvar name:string;\r\n\t\tvar prefab:PrefabBase;\r\n\t\tvar primType:number;\r\n\t\tvar subs_parsed:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar bsm:Matrix3D;\r\n\r\n\t\t// Read name and sub count\r\n\t\tname = this.parseVarStr();\r\n\t\tprimType = this._newBlockBytes.readUnsignedByte();\r\n\t\tprops = this.parseProperties({101:this._geoNrType, 102:this._geoNrType, 103:this._geoNrType, 110:this._geoNrType, 111:this._geoNrType, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 303:AWDParser.UINT16, 701:AWDParser.BOOL, 702:AWDParser.BOOL, 703:AWDParser.BOOL, 704:AWDParser.BOOL});\r\n\r\n\t\tvar primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"]\r\n\r\n\t\tswitch (primType) {\r\n\t\t\t// to do, not all properties are set on all primitives\r\n\r\n\t\t\tcase 1:\r\n\t\t\t\tprefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tprefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\tprefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\r\n\t\t\t\tif (!props.get(701, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\r\n\t\t\t\tif (!props.get(702, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\r\n\t\t\t\tif (!props.get(703, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 5:\r\n\t\t\t\tprefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 7:\r\n\t\t\t\tprefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tprefab = new PrefabBase();\r\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\r\n\t\t\t//geom.subGeometries;\r\n\t\t\t//geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\r\n\t\t}\r\n\r\n\t\tthis.parseUserAttributes();\r\n\t\tprefab.name = name;\r\n\t\tthis._pFinalizeAsset(prefab, name);\r\n\t\tthis._blocks[blockID].data = prefab;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tif ((primType < 0) || (primType > 7)) {\r\n\t\t\t\tprimType = 0;\r\n\t\t\t}\r\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + name + \"| type = \" + primitiveTypes[primType]);\r\n\t\t}\r\n\t}\r\n\r\n\t// Block ID = 22\r\n\tprivate parseContainer(blockID:number):void\r\n\t{\r\n\t\tvar name:string;\r\n\t\tvar par_id:number;\r\n\t\tvar mtx:Matrix3D;\r\n\t\tvar ctr:DisplayObjectContainer;\r\n\t\tvar parent:DisplayObjectContainer;\r\n\r\n\t\tpar_id = this._newBlockBytes.readUnsignedInt();\r\n\t\tmtx = this.parseMatrix3D();\r\n\t\tname = this.parseVarStr();\r\n\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tctr = new DisplayObjectContainer();\r\n\t\tctr.transform.matrix3D = mtx;\r\n\r\n\t\tvar returnedArray:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType]);\r\n\r\n\t\tif (returnedArray[0]) {\r\n\t\t\tvar obj:DisplayObject = (<DisplayObjectContainer> returnedArray[1]).addChild(ctr);\r\n\t\t\tparentName = (<DisplayObjectContainer> returnedArray[1]).name;\r\n\t\t} else if (par_id > 0) {\r\n\t\t\tthis._blocks[ blockID ].addError(\"Could not find a parent for this ObjectContainer3D\");\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(ctr);\r\n\t\t}\r\n\r\n\t\t// in AWD version 2.1 we read the Container properties\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tvar props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\r\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t}\r\n\t\t// in other versions we do not read the Container properties\r\n\t\telse {\r\n\t\t\tthis.parseProperties(null);\r\n\t\t}\r\n\r\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\r\n\t\tctr.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> ctr, name);\r\n\t\tthis._blocks[blockID].data = ctr;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + name + \"' | Parent-Name = \" + parentName);\r\n\t\t}\r\n\t}\r\n\r\n\t// Block ID = 23\r\n\tprivate parseMeshInstance(blockID:number):void\r\n\t{\r\n\t\tvar num_materials:number;\r\n\t\tvar materials_parsed:number;\r\n\t\tvar parent:DisplayObjectContainer;\r\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar geom:Geometry;\r\n\t\tvar returnedArrayGeometry:Array<any> = this.getAssetByID(data_id, [Geometry.assetType])\r\n\r\n\t\tif (returnedArrayGeometry[0]) {\r\n\t\t\tgeom = <Geometry> returnedArrayGeometry[1];\r\n\t\t} else {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Geometry for this Mesh. A empty Geometry is created!\");\r\n\t\t\tgeom = new Geometry();\r\n\t\t}\r\n\r\n\t\tthis._blocks[blockID].geoID = data_id;\r\n\t\tvar materials:Array<MaterialBase> = new Array<MaterialBase>();\r\n\t\tnum_materials = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar materialNames:Array<string> = new Array<string>();\r\n\t\tmaterials_parsed = 0;\r\n\r\n\t\tvar returnedArrayMaterial:Array<any>;\r\n\r\n\t\twhile (materials_parsed < num_materials) {\r\n\t\t\tvar mat_id:number;\r\n\t\t\tmat_id = this._newBlockBytes.readUnsignedInt();\r\n\t\t\treturnedArrayMaterial = this.getAssetByID(mat_id, [MaterialBase.assetType])\r\n\t\t\tif ((!returnedArrayMaterial[0]) && (mat_id > 0)) {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find Material Nr \" + materials_parsed + \" (ID = \" + mat_id + \" ) for this Mesh\");\r\n\t\t\t}\r\n\r\n\t\t\tvar m:MaterialBase = <MaterialBase> returnedArrayMaterial[1];\r\n\r\n\t\t\tmaterials.push(m);\r\n\t\t\tmaterialNames.push(m.name);\r\n\r\n\t\t\tmaterials_parsed++;\r\n\t\t}\r\n\r\n\t\tvar mesh:Mesh = new Mesh(geom, null);\r\n\t\tmesh.transform.matrix3D = mtx;\r\n\r\n\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType])\r\n\r\n\t\tif (returnedArrayParent[0]) {\r\n\t\t\tvar objC:DisplayObjectContainer = <DisplayObjectContainer> returnedArrayParent[1];\r\n\t\t\tobjC.addChild(mesh);\r\n\t\t\tparentName = objC.name;\r\n\t\t} else if (par_id > 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Mesh\");\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\r\n\t\t}\r\n\r\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\r\n\t\t\tmesh.material = materials[0];\r\n\t\t} else if (materials.length > 1) {\r\n\t\t\tvar i:number;\r\n\r\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\r\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\r\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\r\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tvar props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8, 5:AWDParser.BOOL});\r\n\t\t\tmesh.pivot = new Vector3D(<number>props.get(1, 0), <number>props.get(2, 0), <number> props.get(3, 0));\r\n\t\t\tmesh.castsShadows = props.get(5, true);\r\n\t\t} else {\r\n\t\t\tthis.parseProperties(null);\r\n\t\t}\r\n\r\n\t\tmesh.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\r\n\t\tthis._blocks[blockID].data = mesh;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a Mesh: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//Block ID 31\r\n\tprivate parseSkyboxInstance(blockID:number):void\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar cubeTexAddr:number = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\tvar returnedArrayCubeTex:Array<any> = this.getAssetByID(cubeTexAddr, [TextureBase.assetType], \"CubeTexture\");\r\n\t\tif ((!returnedArrayCubeTex[0]) && (cubeTexAddr != 0))\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find the Cubetexture (ID = \" + cubeTexAddr + \" ) for this Skybox\");\r\n\t\tvar asset:Skybox = new Skybox(<ImageCubeTexture> returnedArrayCubeTex[1]);\r\n\r\n\t\tthis.parseProperties(null)\r\n\t\tasset.extra = this.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(asset, name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + name + \"' | CubeTexture-Name = \" + (<ImageCubeTexture> returnedArrayCubeTex[1]).name);\r\n\r\n\t}\r\n\r\n\t//Block ID = 41\r\n\tprivate parseLight(blockID:number):void\r\n\t{\r\n\t\tvar light:LightBase;\r\n\t\tvar newShadowMapper:ShadowMapperBase;\r\n\r\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar lightType:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar props:AWDProperties = this.parseProperties({1:this._propsNrType, 2:this._propsNrType, 3:AWDParser.COLOR, 4:this._propsNrType, 5:this._propsNrType, 6:AWDParser.BOOL, 7:AWDParser.COLOR, 8:this._propsNrType, 9:AWDParser.UINT8, 10:AWDParser.UINT8, 11:this._propsNrType, 12:AWDParser.UINT16, 21:this._matrixNrType, 22:this._matrixNrType, 23:this._matrixNrType});\r\n\t\tvar shadowMapperType:number = props.get(9, 0);\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\r\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\r\n\r\n\t\tif (lightType == 1) {\r\n\t\t\tlight = new PointLight();\r\n\r\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\r\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 4) {\r\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.transform.matrix3D = mtx;\r\n\r\n\t\t}\r\n\r\n\t\tif (lightType == 2) {\r\n\r\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 1) {\r\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//if (shadowMapperType == 2)\r\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\r\n\t\t\t\t//if (shadowMapperType == 3)\r\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tlight.color = props.get(3, 0xffffff);\r\n\t\tlight.specular = props.get(4, 1.0);\r\n\t\tlight.diffuse = props.get(5, 1.0);\r\n\t\tlight.ambientColor = props.get(7, 0xffffff);\r\n\t\tlight.ambient = props.get(8, 0.0);\r\n\r\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\r\n\t\tif (newShadowMapper) {\r\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\r\n\t\t\t\tif (props.get(10, 1) != 1) {\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 1)];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (props.get(10, 2) != 2) {\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 2)];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.shadowMapper = newShadowMapper;\r\n\t\t\tlight.castsShadows = true;\r\n\t\t}\r\n\r\n\t\tif (par_id != 0) {\r\n\r\n\t\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType])\r\n\r\n\t\t\tif (returnedArrayParent[0]) {\r\n\t\t\t\t(<DisplayObjectContainer> returnedArrayParent[1]).addChild(light);\r\n\t\t\t\tparentName = (<DisplayObjectContainer> returnedArrayParent[1]).name;\r\n\t\t\t} else {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Light\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(light);\r\n\t\t}\r\n\r\n\t\tthis.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(< IAsset> light, name);\r\n\r\n\t\tthis._blocks[blockID].data = light;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\r\n\r\n\t}\r\n\r\n\t//Block ID = 43\r\n\tprivate parseCamera(blockID:number):void\r\n\t{\r\n\r\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar projection:ProjectionBase;\r\n\r\n\t\tthis._newBlockBytes.readUnsignedByte(); //set as active camera\r\n\t\tthis._newBlockBytes.readShort(); //lengthof lenses - not used yet\r\n\r\n\t\tvar projectiontype:number = this._newBlockBytes.readShort();\r\n\t\tvar props:AWDProperties = this.parseProperties({101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 104:this._propsNrType});\r\n\r\n\t\tswitch (projectiontype) {\r\n\t\t\tcase 5001:\r\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5002:\r\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5003:\r\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar camera:Camera = new Camera(projection);\r\n\t\tcamera.transform.matrix3D = mtx;\r\n\r\n\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType])\r\n\r\n\t\tif (returnedArrayParent[0]) {\r\n\r\n\t\t\tvar objC:DisplayObjectContainer = <DisplayObjectContainer> returnedArrayParent[1];\r\n\t\t\tobjC.addChild(camera);\r\n\r\n\t\t\tparentName = objC.name;\r\n\r\n\t\t} else if (par_id > 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Camera\");\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(camera);\r\n\t\t}\r\n\r\n\t\tcamera.name = name;\r\n\t\tprops = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\r\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\tcamera.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(camera, name);\r\n\r\n\t\tthis._blocks[blockID].data = camera\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//Block ID = 51\r\n\tprivate parseLightPicker(blockID:number):void\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar numLights:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\r\n\t\tvar k:number = 0;\r\n\t\tvar lightID:number = 0;\r\n\r\n\t\tvar returnedArrayLight:Array<any>;\r\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\r\n\r\n\t\tfor (k = 0; k < numLights; k++) {\r\n\t\t\tlightID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\treturnedArrayLight = this.getAssetByID(lightID, [LightBase.assetType])\r\n\r\n\t\t\tif (returnedArrayLight[0]) {\r\n\t\t\t\tlightsArray.push(<LightBase> returnedArrayLight[1]);\r\n\t\t\t\tlightsArrayNames.push(( <LightBase> returnedArrayLight[1]).name);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find a Light Nr \" + k + \" (ID = \" + lightID + \" ) for this LightPicker\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lightsArray.length == 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not create this LightPicker, cause no Light was found.\");\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\treturn; //return without any more parsing for this block\r\n\t\t}\r\n\r\n\t\tvar lightPick:LightPickerBase = new StaticLightPicker(lightsArray);\r\n\t\tlightPick.name = name;\r\n\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> lightPick, name);\r\n\r\n\t\tthis._blocks[blockID].data = lightPick\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + name + \"' | Texture-Name = \" + lightsArrayNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 81\r\n\tprivate parseMaterial(blockID:number):void\r\n\t{\r\n\t\t// TODO: not used\r\n\t\t////blockLength = block.len;\r\n\t\tvar name:string;\r\n\t\tvar type:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar attributes:Object;\r\n\t\tvar finalize:boolean;\r\n\t\tvar num_methods:number;\r\n\t\tvar methods_parsed:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tname = this.parseVarStr();\r\n\t\ttype = this._newBlockBytes.readUnsignedByte();\r\n\t\tnum_methods = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\t// Read material numerical properties\r\n\t\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\r\n\t\tprops = this.parseProperties({ 1:AWDParser.INT32, 2:AWDParser.BADDR, 10:this._propsNrType, 11:AWDParser.BOOL, 12:this._propsNrType, 13:AWDParser.BOOL});\r\n\r\n\t\tmethods_parsed = 0;\r\n\t\twhile (methods_parsed < num_methods) {\r\n\t\t\tvar method_type:number;\r\n\r\n\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tthis.parseProperties(null);\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\tmethods_parsed += 1;\r\n\t\t}\r\n\t\tvar debugString:string = \"\";\r\n\t\tattributes = this.parseUserAttributes();\r\n\t\tif (type === 1) { // Color material\r\n\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\tvar color:number;\r\n\t\t\tcolor = props.get(1, 0xffffff);\r\n\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t} else {\r\n\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t}\r\n\t\t} else if (type === 2) {\r\n\t\t\tvar tex_addr:number = props.get(2, 0);\r\n\r\n\t\t\treturnedArray = this.getAssetByID(tex_addr, [TextureBase.assetType]);\r\n\r\n\t\t\tif ((!returnedArray[0]) && (tex_addr > 0))\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffsueTexture (ID = \" + tex_addr + \" ) for this Material\");\r\n\r\n\t\t\tmat = new MethodMaterial(<Texture2DBase> returnedArray[1]);\r\n\r\n\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n\t\t\t} else {\r\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmat.extra = attributes;\r\n\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\tmat.repeat = props.get(13, false);\r\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\r\n\t\tthis._blocks[blockID].data = mat;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(debugString);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t// Block ID = 81 AWD2.1\r\n\tprivate parseMaterial_v1(blockID:number):void\r\n\t{\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar normalTexture:Texture2DBase;\r\n\t\tvar specTexture:Texture2DBase;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar num_methods:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT32, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 4:AWDParser.UINT8, 5:AWDParser.BOOL, 6:AWDParser.BOOL, 7:AWDParser.BOOL, 8:AWDParser.BOOL, 9:AWDParser.UINT8, 10:this._propsNrType, 11:AWDParser.BOOL, 12:this._propsNrType, 13:AWDParser.BOOL, 15:this._propsNrType, 16:AWDParser.UINT32, 17:AWDParser.BADDR, 18:this._propsNrType, 19:this._propsNrType, 20:AWDParser.UINT32, 21:AWDParser.BADDR, 22:AWDParser.BADDR});\r\n\t\tvar spezialType:number = props.get(4, 0);\r\n\t\tvar debugString:string = \"Parsed Material \";\r\n\r\n\t\tif (spezialType >= 2) {//this is no supported material\r\n\t\t\tthis._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (type <= 2) {// Color material\r\n\t\t\tif (this.materialMode == 1)\r\n\t\t\t\tspezialType = 0;\r\n\t\t\telse if (this.materialMode == 2)\r\n\t\t\t\tspezialType = 1;\r\n\r\n\t\t\tif (spezialType < 2) {//this is SinglePass or MultiPass\r\n\r\n\t\t\t\tif (type == 1) {// Color material\r\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\r\n\r\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\r\n\r\n\t\t\t\t\t} else { //\tSinglePassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (type == 2) {// texture material\r\n\t\t\t\t\tvar tex_addr:number = props.get(2, 0);//TODO temporarily swapped so that diffuse texture goes to ambient\r\n\t\t\t\t\treturnedArray = this.getAssetByID(tex_addr, [TextureBase.assetType]);\r\n\r\n\t\t\t\t\tif ((!returnedArray[0]) && (tex_addr > 0))\r\n\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the AmbientTexture (ID = \" + tex_addr + \" ) for this MethodMaterial\");\r\n\r\n\t\t\t\t\tvar texture:Texture2DBase = returnedArray[1];\r\n\r\n\t\t\t\t\tmat = new MethodMaterial(texture);\r\n\r\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + texture.name;\r\n\t\t\t\t\t} else {//\tSinglePassMaterial\r\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + texture.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar diffuseTexture:Texture2DBase;\r\n\t\t\t\tvar diffuseTex_addr:number = props.get(17, 0);\r\n\r\n\t\t\t\treturnedArray = this.getAssetByID(diffuseTex_addr, [TextureBase.assetType]);\r\n\r\n\t\t\t\tif ((!returnedArray[0]) && (diffuseTex_addr != 0)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffuseTexture (ID = \" + diffuseTex_addr + \" ) for this MethodMaterial\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (returnedArray[0])\r\n\t\t\t\t\tdiffuseTexture = returnedArray[1];\r\n\r\n\t\t\t\tif (diffuseTexture) {\r\n\t\t\t\t\tmat.diffuseTexture = diffuseTexture;\r\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normalTex_addr:number = props.get(3, 0);\r\n\r\n\t\t\t\treturnedArray = this.getAssetByID(normalTex_addr, [TextureBase.assetType]);\r\n\r\n\t\t\t\tif ((!returnedArray[0]) && (normalTex_addr != 0)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the NormalTexture (ID = \" + normalTex_addr + \" ) for this MethodMaterial\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (returnedArray[0]) {\r\n\t\t\t\t\tnormalTexture = returnedArray[1];\r\n\t\t\t\t\tdebugString += \" | NormalTexture-Name = \" + normalTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar specTex_addr:number = props.get(21, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(specTex_addr, [TextureBase.assetType]);\r\n\r\n\t\t\t\tif ((!returnedArray[0]) && (specTex_addr != 0)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SpecularTexture (ID = \" + specTex_addr + \" ) for this MethodMaterial\");\r\n\t\t\t\t}\r\n\t\t\t\tif (returnedArray[0]) {\r\n\t\t\t\t\tspecTexture = returnedArray[1];\r\n\t\t\t\t\tdebugString += \" | SpecularTexture-Name = \" + specTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar lightPickerAddr:number = props.get(22, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(lightPickerAddr, [LightPickerBase.assetType])\r\n\r\n\t\t\t\tif ((!returnedArray[0]) && (lightPickerAddr)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightPicker (ID = \" + lightPickerAddr + \" ) for this MethodMaterial\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmat.lightPicker = <LightPickerBase> returnedArray[1];\r\n\t\t\t\t\t//debugString+=\" | Lightpicker-Name = \"+LightPickerBase(returnedArray[1]).name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmat.smooth = props.get(5, true);\r\n\t\t\t\tmat.mipmap = props.get(6, true);\r\n\t\t\t\tmat.bothSides = props.get(7, false);\r\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\r\n\t\t\t\tmat.blendMode = this.blendModeDic[props.get(9, 0)];\r\n\t\t\t\tmat.repeat = props.get(13, false);\r\n\r\n\t\t\t\tif (normalTexture)\r\n\t\t\t\t\tmat.normalMap = normalTexture;\r\n\r\n\t\t\t\tif (specTexture)\r\n\t\t\t\t\tmat.specularMap = specTexture;\r\n\r\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\t\t\tmat.ambient = props.get(15, 1.0);\r\n\t\t\t\tmat.diffuseColor = props.get(16, 0xffffff);\r\n\t\t\t\tmat.specular = props.get(18, 1.0);\r\n\t\t\t\tmat.gloss = props.get(19, 50);\r\n\t\t\t\tmat.specularColor = props.get(20, 0xffffff);\r\n\r\n\t\t\t\tvar methods_parsed:number = 0;\r\n\t\t\t\tvar targetID:number;\r\n\r\n\t\t\t\twhile (methods_parsed < num_methods) {\r\n\t\t\t\t\tvar method_type:number;\r\n\t\t\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t\t\t\tprops = this.parseProperties({\r\n\t\t\t\t\t\t1: AWDParser.BADDR,\r\n\t\t\t\t\t\t2: AWDParser.BADDR,\r\n\t\t\t\t\t\t3: AWDParser.BADDR,\r\n\t\t\t\t\t\t101: this._propsNrType,\r\n\t\t\t\t\t\t102: this._propsNrType,\r\n\t\t\t\t\t\t103: this._propsNrType,\r\n\t\t\t\t\t\t201: AWDParser.UINT32,\r\n\t\t\t\t\t\t202: AWDParser.UINT32,\r\n\t\t\t\t\t\t301: AWDParser.UINT16,\r\n\t\t\t\t\t\t302: AWDParser.UINT16,\r\n\t\t\t\t\t\t401: AWDParser.UINT8,\r\n\t\t\t\t\t\t402: AWDParser.UINT8,\r\n\t\t\t\t\t\t601: AWDParser.COLOR,\r\n\t\t\t\t\t\t602: AWDParser.COLOR,\r\n\t\t\t\t\t\t701: AWDParser.BOOL,\r\n\t\t\t\t\t\t702: AWDParser.BOOL,\r\n\t\t\t\t\t\t801: AWDParser.MTX4x4\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tswitch (method_type) {\r\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffektMethod returned\r\n\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [EffectMethodBase.assetType]);\r\n\r\n\t\t\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EffectMethod (ID = \" + targetID + \" ) for this Material\");\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tmat.addEffectMethod(returnedArray[1]);\r\n\r\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<EffectMethodBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\r\n\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\r\n\r\n\t\t\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the ShadowMethod (ID = \" + targetID + \" ) for this Material\");\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tmat.shadowMethod = returnedArray[1];\r\n\t\t\t\t\t\t\t\tdebugString += \" | ShadowMethod-Name = \" + (<ShadowMethodBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\r\n\t\t\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this EnvMapAmbientMethodMaterial\");\r\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod(returnedArray[1]);\r\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + (<CubeTextureBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the GradientDiffuseTexture (ID = \" + targetID + \" ) for this GradientDiffuseMethod\");\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(returnedArray[1]);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + (<Texture2DBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this LightMapDiffuseMethod\");\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(returnedArray[1], this.blendModeDic[props.get(401, 10)], false, mat.diffuseMethod);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + (<Texture2DBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\r\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SecoundNormalMap (ID = \" + targetID + \" ) for this SimpleWaterNormalMethod\");\r\n\t\t\t\t\t\t\tif (!mat.normalMap)\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find a normal Map on this Material to use with this SimpleWaterNormalMethod\");\r\n\r\n\t\t\t\t\t\t\tmat.normalMap = returnedArray[1];\r\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(mat.normalMap, returnedArray[1]);\r\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + (<Texture2DBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.parseUserAttributes();\r\n\t\t\t\t\tmethods_parsed += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// todo: we should not need this anymore (if using texture-atlas)\r\n\t\telse if ((type>=3)&&(type<=7)){\r\n\t\t\t// if this is a curve material, we create it, finalize it, assign it to block-cache and return and return.\r\n\t\t\tvar color:number = props.get(1, 0xcccccc);\r\n\t\t\tdebugString+=color;\r\n\r\n\t\t\tvar diffuseTexture:Texture2DBase;\r\n\t\t\tvar diffuseTex_addr:number = props.get(2, 0);\r\n\r\n\t\t\treturnedArray = this.getAssetByID(diffuseTex_addr, [TextureBase.assetType]);\r\n\r\n\t\t\tif ((!returnedArray[0]) && (diffuseTex_addr != 0)) {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffuseTexture (ID = \" + diffuseTex_addr + \" ) for this MethodMaterial\");\r\n\t\t\t\tdiffuseTexture = DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t}\r\n\r\n\t\t\tif (returnedArray[0])\r\n\t\t\t\tdiffuseTexture = returnedArray[1];\r\n\t\t\tvar curve_mat:CurveMaterial = new CurveMaterial(diffuseTexture);\r\n\t\t\t//debugString+= \" alpha = \"+props.get(10, 1.0)+\" \";\r\n\t\t\tdebugString+= \" texture = \"+diffuseTex_addr+\" \";\r\n\t\t\tcurve_mat.bothSides = true;\r\n\t\t\tcurve_mat.preserveAlpha = true;\r\n\t\t\tcurve_mat.alphaBlending = true;\r\n\t\t\tcurve_mat.extra = this.parseUserAttributes();\r\n\t\t\tthis._pFinalizeAsset(<IAsset> curve_mat, name);\r\n\t\t\tthis._blocks[blockID].data = curve_mat;\r\n\t\t\tif (this._debug)\r\n\t\t\t\tconsole.log(debugString);\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\t\tmat.extra = this.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\r\n\r\n\t\tthis._blocks[blockID].data = mat;\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(debugString);\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 82\r\n\tprivate parseTexture(blockID:number):void\r\n\t{\r\n\r\n\t\tvar asset:Texture2DBase;\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\tthis._texture_users[this._cur_block_id.toString()] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\r\n\r\n\t\t} else {\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray;\r\n\t\t\tdata = new ByteArray();\r\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t//\r\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\r\n\t\t\t//\r\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\r\n\t\t\t// This gives the browser time to initialise image width / height.\r\n\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\r\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Bitmap for Texture\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//Block ID = 83\r\n\tprivate parseCubeTexture(blockID:number):void\r\n\t{\r\n\t\t//blockLength = block.len;\r\n\t\tvar data_len:number;\r\n\t\tvar asset:CubeTextureBase;\r\n\t\tvar i:number;\r\n\r\n\t\tthis._cubeTextures = new Array<any>();\r\n\t\tthis._texture_users[ this._cur_block_id.toString() ] = [];\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\tthis._texture_users[this._cur_block_id.toString()] = [];\r\n\t\t\tthis._cubeTextures.push(null);\r\n\r\n\t\t\t// External\r\n\t\t\tif (type == 0) {\r\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar url:string;\r\n\t\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\r\n\r\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString() + \"#\" + i, new URLRequest(url), false, null, true);\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar data:ByteArray;\r\n\t\t\t\tdata = new ByteArray();\r\n\r\n\t\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString() + \"#\" + i, null, false, ParserUtils.byteArrayToImage(data), true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing 6 \" + textureStylesNames[type] + \" Bitmaps for CubeTexture\");\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 91\r\n\tprivate parseSharedMethodBlock(blockID:number):void\r\n\t{\r\n\t\tvar asset:EffectMethodBase;\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\t\tasset = this.parseSharedMethodList(blockID);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._blocks[blockID].data = asset;\r\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 92\r\n\tprivate parseShadowMethodBlock(blockID:number):void\r\n\t{\r\n\t\tvar type:number;\r\n\t\tvar data_len:number;\r\n\t\tvar asset:ShadowMethodBase;\r\n\t\tvar shadowLightID:number;\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tshadowLightID = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar returnedArray:Array<any> = this.getAssetByID(shadowLightID, [LightBase.assetType]);\r\n\r\n\t\tif (!returnedArray[0]) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find the TargetLight (ID = \" + shadowLightID + \" ) for this ShadowMethod - ShadowMethod not created\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tasset = this.parseShadowMethodList(<LightBase> returnedArray[1], blockID);\r\n\r\n\t\tif (!asset)\r\n\t\t\treturn;\r\n\r\n\t\tthis.parseUserAttributes(); // Ignore for now\r\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", ( <LightBase> returnedArray[1] ).name);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//Block ID = 253\r\n\tprivate parseCommand(blockID:number):void\r\n\t{\r\n\t\tvar hasBlocks:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\r\n\t\tvar parentObject:DisplayObjectContainer;\r\n\t\tvar targetObject:DisplayObjectContainer;\r\n\r\n\t\tvar returnedArray:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType]);\r\n\r\n\t\tif (returnedArray[0]) {\r\n\t\t\tparentObject = <DisplayObjectContainer> returnedArray[1];\r\n\t\t}\r\n\r\n\t\tvar numCommands:number = this._newBlockBytes.readShort();\r\n\t\tvar typeCommand:number = this._newBlockBytes.readShort();\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR});\r\n\r\n\t\tswitch (typeCommand) {\r\n\t\t\tcase 1:\r\n\r\n\t\t\t\tvar targetID:number = props.get(1, 0);\r\n\t\t\t\t//var returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [LightBase.assetType, TextureProjector.assetType]); //for no only light is requested!!!!\r\n\t\t\t\tvar returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [LightBase.assetType]); //for no only light is requested!!!!\r\n\r\n\t\t\t\tif ((!returnedArrayTarget[0]) && (targetID != 0)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the light (ID = \" + targetID + \" ( for this CommandBock!\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetObject = returnedArrayTarget[1];\r\n\r\n\t\t\t\tif (parentObject) {\r\n\t\t\t\t\tparentObject.addChild(targetObject);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (targetObject) {\r\n\t\t\tprops = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\r\n\r\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t\ttargetObject.extra = this.parseUserAttributes();\r\n\r\n\t\t}\r\n\t\tthis._blocks[blockID].data = targetObject\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//blockID 255\r\n\tprivate parseMetaData(blockID:number):void\r\n\t{\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT32, 2:AWDParser.AWDSTRING, 3:AWDParser.AWDSTRING, 4:AWDParser.AWDSTRING, 5:AWDParser.AWDSTRING});\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\r\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\r\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\r\n\t\t}\r\n\t}\r\n\r\n\t//blockID 254\r\n\tprivate parseNameSpace(blockID:number):void\r\n\t{\r\n\t\tvar id:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar nameSpaceString:string = this.parseVarStr();\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\r\n\t}\r\n\r\n\t//--Parser UTILS---------------------------------------------------------------------------\r\n\r\n\t// this functions reads and creates a ShadowMethodMethod\r\n\tprivate parseShadowMethodList(light:LightBase, blockID:number):ShadowMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar shadowMethod:ShadowMethodBase;\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 201:AWDParser.UINT32, 202:AWDParser.UINT32, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 401:AWDParser.UINT8, 402:AWDParser.UINT8, 601:AWDParser.COLOR, 602:AWDParser.COLOR, 701:AWDParser.BOOL, 702:AWDParser.BOOL, 801:AWDParser.MTX4x4});\r\n\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>\r\n\t\tswitch (methodType) {\r\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this CascadeShadowMapMethod - ShadowMethod not created\");\r\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\r\n\t\t\t//\t\t\t\t\t}\r\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 1002: //ShadowNearMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\r\n\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this ShadowNearMethod - ShadowMethod not created\");\r\n\t\t\t\t\treturn shadowMethod;\r\n\t\t\t\t}\r\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> returnedArray[1]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1101: //ShadowFilteredMethod\r\n\r\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 1102: //ShadowDitheredMethod\r\n\r\n\r\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1103: //ShadowSoftMethod\r\n\r\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1104: //ShadowHardMethod\r\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\treturn shadowMethod;\r\n\t}\r\n\r\n\t//Block ID 101\r\n\tprivate parseSkeleton(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar skeleton:Skeleton = new Skeleton();\r\n\t\tthis.parseProperties(null); // Discard properties for now\r\n\r\n\t\tvar joints_parsed:number /*uint*/ = 0;\r\n\t\twhile (joints_parsed < num_joints) {\r\n\t\t\tvar joint:SkeletonJoint;\r\n\t\t\tvar ibp:Matrix3D;\r\n\t\t\t// Ignore joint id\r\n\t\t\tthis._newBlockBytes.readUnsignedShort();\r\n\t\t\tjoint = new SkeletonJoint();\r\n\t\t\tjoint.parentIndex = this._newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\r\n\t\t\tjoint.name = this.parseVarStr();\r\n\r\n\t\t\tibp = this.parseMatrix3D();\r\n\t\t\tjoint.inverseBindPose = ibp.rawData;\r\n\t\t\t// Ignore joint props/attributes for now\r\n\t\t\tthis.parseProperties(null);\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\tskeleton.joints.push(joint);\r\n\t\t\tjoints_parsed++;\r\n\t\t}\r\n\r\n\t\t// Discard attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(skeleton, name);\r\n\t\tthis._blocks[blockID].data = skeleton;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + skeleton.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\t//Block ID = 102\r\n\tprivate parseSkeletonPose(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tthis.parseProperties(null); // Ignore properties for now\r\n\r\n\t\tvar pose:SkeletonPose = new SkeletonPose();\r\n\r\n\t\tvar joints_parsed:number /*uint*/ = 0;\r\n\t\twhile (joints_parsed < num_joints) {\r\n\t\t\tvar joint_pose:JointPose;\r\n\t\t\tvar has_transform:number /*uint*/;\r\n\t\t\tjoint_pose = new JointPose();\r\n\t\t\thas_transform = this._newBlockBytes.readUnsignedByte();\r\n\t\t\tif (has_transform == 1) {\r\n\t\t\t\tvar mtx_data:Array<number> = this.parseMatrix43RawData();\r\n\r\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\r\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\r\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\r\n\r\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\r\n\t\t\t}\r\n\t\t\tjoints_parsed++;\r\n\t\t}\r\n\t\t// Skip attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(pose, name);\r\n\t\tthis._blocks[blockID].data = pose;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + pose.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\t//blockID 103\r\n\tprivate parseSkeletonAnimation(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar frame_dur:number;\r\n\t\tvar pose_addr:number /*uint*/;\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\r\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tthis.parseProperties(null); // Ignore properties for now\r\n\r\n\t\tvar frames_parsed:number /*uint*/ = 0;\r\n\t\tvar returnedArray:Array<any>;\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tpose_addr = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\r\n\t\t\treturnedArray = this.getAssetByID(pose_addr, [SkeletonPose.assetType]);\r\n\t\t\tif (!returnedArray[0])\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SkeletonPose Frame # \" + frames_parsed + \" (ID = \" + pose_addr + \" ) for this SkeletonClipNode\");\r\n\t\t\telse\r\n\t\t\t\tclip.addFrame(<SkeletonPose> this._blocks[pose_addr].data, frame_dur);\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tif (clip.frames.length == 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not this SkeletonClipNode, because no Frames where set.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Ignore attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(clip, name);\r\n\t\tthis._blocks[blockID].data = clip;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + clip.name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\t//Block ID = 111 /  Block ID = 112\r\n\tprivate parseMeshPoseAnimation(blockID:number /*uint*/, poseOnly:boolean = false):void\r\n\t{\r\n\t\tvar num_frames:number /*uint*/ = 1;\r\n\t\tvar num_submeshes:number /*uint*/;\r\n\t\tvar frames_parsed:number /*uint*/;\r\n\t\tvar subMeshParsed:number /*uint*/;\r\n\t\tvar frame_dur:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar str_len:number;\r\n\t\tvar str_end:number;\r\n\t\tvar geometry:Geometry;\r\n\t\tvar subGeom:TriangleSubGeometry;\r\n\t\tvar idx:number /*int*/ = 0;\r\n\t\tvar clip:VertexClipNode = new VertexClipNode();\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar verts:Array<number>;\r\n\t\tvar num_Streams:number /*int*/ = 0;\r\n\t\tvar streamsParsed:number /*int*/ = 0;\r\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar thisGeo:Geometry;\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar geoAdress:number /*int*/ = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar returnedArray:Array<any> = this.getAssetByID(geoAdress, [Geometry.assetType]);\r\n\t\tif (!returnedArray[0]) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find the target-Geometry-Object \" + geoAdress + \" ) for this VertexClipNode\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar uvs:Array<Array<number>> = this.getUVForVertexAnimation(geoAdress);\r\n\t\tif (!poseOnly)\r\n\t\t\tnum_frames = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\tnum_submeshes = this._newBlockBytes.readUnsignedShort();\r\n\t\tnum_Streams = this._newBlockBytes.readUnsignedShort();\r\n\t\tstreamsParsed = 0;\r\n\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\tstreamtypes.push(this._newBlockBytes.readUnsignedShort());\r\n\t\t\tstreamsParsed++;\r\n\t\t}\r\n\t\tprops = this.parseProperties({1:AWDParser.BOOL, 2:AWDParser.BOOL});\r\n\r\n\t\tclip.looping = props.get(1, true);\r\n\t\tclip.stitchFinalFrame = props.get(2, false);\r\n\r\n\t\tframes_parsed = 0;\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tgeometry = new Geometry();\r\n\t\t\tsubMeshParsed = 0;\r\n\t\t\twhile (subMeshParsed < num_submeshes) {\r\n\t\t\t\tstreamsParsed = 0;\r\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\r\n\t\t\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\r\n\t\t\t\t\t\tindices = (<Geometry> returnedArray[1]).subGeometries[subMeshParsed].indices;\r\n\t\t\t\t\t\tverts = new Array<number>();\r\n\t\t\t\t\t\tidx = 0;\r\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo)\r\n\t\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo)\r\n\t\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo)\r\n\t\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsubGeom = new TriangleSubGeometry(true);\r\n\t\t\t\t\t\tsubGeom.updateIndices(indices);\r\n\t\t\t\t\t\tsubGeom.updatePositions(verts);\r\n\t\t\t\t\t\tsubGeom.updateUVs(uvs[subMeshParsed]);\r\n\t\t\t\t\t\tsubGeom.updateVertexNormals(null);\r\n\t\t\t\t\t\tsubGeom.updateVertexTangents(null);\r\n\t\t\t\t\t\tsubGeom.autoDeriveNormals = false;\r\n\t\t\t\t\t\tsubGeom.autoDeriveTangents = false;\r\n\t\t\t\t\t\tsubMeshParsed++;\r\n\t\t\t\t\t\tgeometry.addSubGeometry(subGeom)\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t\tstreamsParsed++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tclip.addFrame(geometry, frame_dur);\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(clip, name);\r\n\r\n\t\tthis._blocks[blockID].data = clip;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + (<Geometry> returnedArray[1]).name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\t//BlockID 113\r\n\tprivate parseVertexAnimationSet(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar poseBlockAdress:number /*int*/\r\n\t\tvar outputString:string = \"\";\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT16});\r\n\t\tvar frames_parsed:number /*uint*/ = 0;\r\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\r\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tposeBlockAdress = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar returnedArray:Array<any> = this.getAssetByID(poseBlockAdress, [AnimationNodeBase.assetType]);\r\n\t\t\tif (!returnedArray[0])\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the AnimationClipNode Nr \" + frames_parsed + \" ( \" + poseBlockAdress + \" ) for this AnimationSet\");\r\n\t\t\telse {\r\n\t\t\t\tif (returnedArray[1] instanceof VertexClipNode)\r\n\t\t\t\t\tvertexFrames.push(returnedArray[1])\r\n\t\t\t\tif (returnedArray[1] instanceof SkeletonClipNode)\r\n\t\t\t\t\tskeletonFrames.push(returnedArray[1])\r\n\t\t\t}\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not create this AnimationSet, because it contains no animations\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\tif (vertexFrames.length > 0) {\r\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\r\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\r\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\r\n\t\t\tthis._pFinalizeAsset(newVertexAnimationSet, name);\r\n\t\t\tthis._blocks[blockID].data = newVertexAnimationSet;\r\n\t\t\tif (this._debug)\r\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames.toString());\r\n\r\n\t\t} else if (skeletonFrames.length > 0) {\r\n\t\t\treturnedArray = this.getAssetByID(poseBlockAdress, [AnimationNodeBase.assetType]);\r\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\r\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\r\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\r\n\t\t\tthis._pFinalizeAsset(newSkeletonAnimationSet, name);\r\n\t\t\tthis._blocks[blockID].data = newSkeletonAnimationSet;\r\n\t\t\tif (this._debug)\r\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames.toString());\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t//BlockID 122\r\n\tprivate parseAnimatorSet(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar targetMesh:Mesh;\r\n\t\tvar animSetBlockAdress:number /*int*/\r\n\t\tvar targetAnimationSet:AnimationSetBase;\r\n\t\tvar outputString:string = \"\";\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar type:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR});\r\n\r\n\t\tanimSetBlockAdress = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar targetMeshLength:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar meshAdresses:Array<number> /*uint*/ = new Array<number>() /*uint*/;\r\n\t\tfor (var i:number /*int*/ = 0; i < targetMeshLength; i++)\r\n\t\t\tmeshAdresses.push(this._newBlockBytes.readUnsignedInt());\r\n\r\n\t\tvar activeState:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar autoplay:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis.parseUserAttributes();\r\n\r\n\t\tvar returnedArray:Array<any>;\r\n\t\tvar targetMeshes:Array<Mesh> = new Array<Mesh>();\r\n\r\n\t\tfor (i = 0; i < meshAdresses.length; i++) {\r\n\t\t\treturnedArray = this.getAssetByID(meshAdresses[i], [Mesh.assetType]);\r\n\t\t\tif (returnedArray[0])\r\n\t\t\t\ttargetMeshes.push(<Mesh> returnedArray[1]);\r\n\t\t}\r\n\t\treturnedArray = this.getAssetByID(animSetBlockAdress, [AnimationSetBase.assetType]);\r\n\t\tif (!returnedArray[0]) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find the AnimationSet ( \" + animSetBlockAdress + \" ) for this Animator\");;\r\n\t\t\treturn\r\n\t\t}\r\n\t\ttargetAnimationSet = <AnimationSetBase> returnedArray[1];\r\n\t\tvar thisAnimator:AnimatorBase;\r\n\t\tif (type == 1) {\r\n\r\n\t\t\treturnedArray = this.getAssetByID(props.get(1, 0), [Skeleton.assetType]);\r\n\t\t\tif (!returnedArray[0]) {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Skeleton ( \" + props.get(1, 0) + \" ) for this Animator\");\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, <Skeleton> returnedArray[1]);\r\n\r\n\t\t} else if (type == 2)\r\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\r\n\r\n\t\tthis._pFinalizeAsset(thisAnimator, name);\r\n\t\tthis._blocks[blockID].data = thisAnimator;\r\n\t\tfor (i = 0; i < targetMeshes.length; i++) {\r\n\t\t\tif (type == 1)\r\n\t\t\t\ttargetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\r\n\t\t\tif (type == 2)\r\n\t\t\t\ttargetMeshes[i].animator = (<VertexAnimator> thisAnimator);\r\n\r\n\t\t}\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + name);\r\n\t}\r\n\r\n\t// this functions reads and creates a EffectMethod\r\n\tprivate parseSharedMethodList(blockID:number):EffectMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar effectMethodReturn:EffectMethodBase;\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 104:this._propsNrType, 105:this._propsNrType, 106:this._propsNrType, 107:this._propsNrType, 201:AWDParser.UINT32, 202:AWDParser.UINT32, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 401:AWDParser.UINT8, 402:AWDParser.UINT8, 601:AWDParser.COLOR, 602:AWDParser.COLOR, 701:AWDParser.BOOL, 702:AWDParser.BOOL});\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tswitch (methodType) {\r\n\t\t\t// Effect Methods\r\n\t\t\tcase 401: //ColorMatrix\r\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 402: //ColorTransform\r\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\r\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\r\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 403: //EnvMap\r\n\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\tconsole.log('ENV MAP', targetID);\r\n\r\n\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [ TextureBase.assetType ], \"CubeTexture\");\r\n\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this EnvMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(<CubeTextureBase> returnedArray[1], <number> props.get(101, 1));\r\n\t\t\t\ttargetID = props.get(2, 0);\r\n\t\t\t\tif (targetID > 0) {\r\n\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Mask-texture (ID = \" + targetID + \" ) for this EnvMapMethod\");\r\n\r\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\r\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <Texture2DBase> returnedArray[1];\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 404: //LightMapMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this LightMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(returnedArray[1], this.blendModeDic[props.get(401, 10)]); //usesecondaryUV not set\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureProjector.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this ProjectiveTextureMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 406: //RimLightMethod\r\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\r\n\t\t\t\tbreak;\r\n\t\t\tcase 407: //AlphaMaskMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Alpha-texture (ID = \" + targetID + \" ) for this AlphaMaskMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(returnedArray[1], props.get(701, false));\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this RefractionEnvMapMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\r\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 410: //FresnelEnvMapMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\r\n\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this FresnelEnvMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(returnedArray[1], props.get(101, 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 411: //FogMethod\r\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\treturn effectMethodReturn;\r\n\r\n\t}\r\n\r\n\tprivate parseUserAttributes():Object\r\n\t{\r\n\t\tvar attributes:Object;\r\n\t\tvar list_len:number;\r\n\t\tvar attibuteCnt:number;\r\n\r\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\tif (list_len > 0) {\r\n\r\n\t\t\tvar list_end:number;\r\n\r\n\t\t\tattributes = {};\r\n\r\n\t\t\tlist_end = this._newBlockBytes.position + list_len;\r\n\r\n\t\t\twhile (this._newBlockBytes.position < list_end) {\r\n\t\t\t\tvar ns_id:number;\r\n\t\t\t\tvar attr_key:string;\r\n\t\t\t\tvar attr_type:number;\r\n\t\t\t\tvar attr_len:number;\r\n\t\t\t\tvar attr_val:any;\r\n\r\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\r\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_key = this.parseVarStr();\r\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn attributes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (attr_type) {\r\n\t\t\t\t\tcase AWDParser.AWDSTRING:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.BOOL:\r\n\t\t\t\t\tcase AWDParser.UINT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.UINT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.UINT32:\r\n\t\t\t\t\tcase AWDParser.BADDR:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.FLOAT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.FLOAT64:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\r\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattributes[attr_key] = attr_val;\r\n\t\t\t\tattibuteCnt += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\t}\r\n\r\n\tprivate parseProperties(expected:Object):AWDProperties\r\n\t{\r\n\t\tvar list_end:number;\r\n\t\tvar list_len:number;\r\n\t\tvar propertyCnt:number = 0;\r\n\t\tvar props:AWDProperties = new AWDProperties();\r\n\r\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\r\n\t\tlist_end = this._newBlockBytes.position + list_len;\r\n\r\n\t\tif (expected) {\r\n\r\n\t\t\twhile (this._newBlockBytes.position < list_end) {\r\n\t\t\t\tvar len:number;\r\n\t\t\t\tvar key:number;\r\n\t\t\t\tvar type:number;\r\n\r\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn props;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (expected.hasOwnProperty(key.toString())) {\r\n\t\t\t\t\ttype = expected[key];\r\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newBlockBytes.position += len;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpropertyCnt += 1;\r\n\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t}\r\n\r\n\t\treturn props;\r\n\r\n\t}\r\n\r\n\tprivate parseAttrValue(type:number, len:number):any\r\n\t{\r\n\t\tvar elem_len:number;\r\n\t\tvar read_func:Function;\r\n\r\n\t\tswitch (type) {\r\n\r\n\t\t\tcase AWDParser.BOOL:\r\n\t\t\tcase AWDParser.INT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.INT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.INT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT32:\r\n\t\t\tcase AWDParser.COLOR:\r\n\t\t\tcase AWDParser.BADDR:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.FLOAT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.FLOAT64:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.AWDSTRING:\r\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\r\n\t\t\tcase AWDParser.VECTOR2x1:\r\n\t\t\tcase AWDParser.VECTOR3x1:\r\n\t\t\tcase AWDParser.VECTOR4x1:\r\n\t\t\tcase AWDParser.MTX3x2:\r\n\t\t\tcase AWDParser.MTX3x3:\r\n\t\t\tcase AWDParser.MTX4x3:\r\n\t\t\tcase AWDParser.MTX4x4:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif (elem_len < len) {\r\n\t\t\tvar list:Array<any> = [];\r\n\t\t\tvar num_read:number = 0;\r\n\t\t\tvar num_elems:number = len/elem_len;\r\n\r\n\t\t\twhile (num_read < num_elems) {\r\n\t\t\t\tlist.push(read_func.apply(this._newBlockBytes)); // list.push(read_func());\r\n\t\t\t\tnum_read++;\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\t\t} else {\r\n\r\n\t\t\tvar val:any = read_func.apply(this._newBlockBytes);//read_func();\r\n\t\t\treturn val;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseHeader():void\r\n\t{\r\n\t\tvar flags:number;\r\n\t\tvar body_len:number;\r\n\r\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\r\n\r\n\t\tthis._version[0] = this._byteData.readUnsignedByte();\r\n\t\tthis._version[1] = this._byteData.readUnsignedByte();\r\n\r\n\t\tflags = this._byteData.readUnsignedShort(); // Parse bit flags\r\n\r\n\t\tthis._streaming = BitFlags.test(flags, BitFlags.FLAG1);\r\n\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG2);\r\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG3);\r\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG4);\r\n\t\t}\r\n\r\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\r\n\r\n\t\t// set storagePrecision types\r\n\t\tthis._geoNrType = AWDParser.FLOAT32;\r\n\r\n\t\tif (this._accuracyGeo) {\r\n\t\t\tthis._geoNrType = AWDParser.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._matrixNrType = AWDParser.FLOAT32;\r\n\r\n\t\tif (this._accuracyMatrix) {\r\n\t\t\tthis._matrixNrType = AWDParser.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._propsNrType = AWDParser.FLOAT32;\r\n\r\n\t\tif (this._accuracyProps) {\r\n\t\t\tthis._propsNrType = AWDParser.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._version[0] + \" - \" + this._version[1]);\r\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\r\n\t\t}\r\n\r\n\t\t// Check file integrity\r\n\t\tbody_len = this._byteData.readUnsignedInt();\r\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\r\n\t\t}\r\n\r\n\t}\r\n\t// Helper - functions\r\n\tprivate getUVForVertexAnimation(meshID:number /*uint*/):Array<Array<number>>\r\n\t{\r\n\t\tif (this._blocks[meshID].data instanceof Mesh)\r\n\t\t\tmeshID = this._blocks[meshID].geoID;\r\n\t\tif (this._blocks[meshID].uvsForVertexAnimation)\r\n\t\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\t\tvar geometry:Geometry = (<Geometry> this._blocks[meshID].data);\r\n\t\tvar geoCnt:number /*int*/ = 0;\r\n\t\tvar ud:Array<number>;\r\n\t\tvar uStride:number /*uint*/;\r\n\t\tvar uOffs:number /*uint*/;\r\n\t\tvar numPoints:number /*uint*/;\r\n\t\tvar i:number /*int*/;\r\n\t\tvar newUvs:Array<number>;\r\n\t\tvar sub_geom:TriangleSubGeometry;\r\n\t\tthis._blocks[meshID].uvsForVertexAnimation = new Array<Array<number>>();\r\n\t\twhile (geoCnt < geometry.subGeometries.length) {\r\n\t\t\tnewUvs = new Array<number>();\r\n\t\t\tsub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\r\n\t\t\tnumPoints = sub_geom.numVertices;\r\n\t\t\tud = sub_geom.uvs;\r\n\t\t\tuStride = sub_geom.getStride(TriangleSubGeometry.UV_DATA);\r\n\t\t\tuOffs = sub_geom.getOffset(TriangleSubGeometry.UV_DATA);\r\n\t\t\tfor (i = 0; i < numPoints; i++) {\r\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 0]);\r\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 1]);\r\n\t\t\t}\r\n\t\t\tthis._blocks[meshID].uvsForVertexAnimation.push(newUvs);\r\n\t\t\tgeoCnt++;\r\n\t\t}\r\n\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\t}\r\n\r\n\tprivate parseVarStr():string\r\n\t{\r\n\r\n\t\tvar len:number = this._newBlockBytes.readUnsignedShort();\r\n\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\t}\r\n\r\n\tprivate getAssetByID(assetID:number, assetTypesToGet:Array<string>, extraTypeInfo:string = \"SingleTexture\"):Array<any>\r\n\t{\r\n\t\tvar returnArray:Array<any> = new Array<any>();\r\n\t\tvar typeCnt:number = 0;\r\n\t\tif (assetID > 0) {\r\n\t\t\tif (this._blocks[assetID]) {\r\n\t\t\t\tif (this._blocks[assetID].data) {\r\n\t\t\t\t\twhile (typeCnt < assetTypesToGet.length) {\r\n\r\n\t\t\t\t\t\tvar iasset:IAsset = <IAsset> this._blocks[assetID].data;\r\n\r\n\t\t\t\t\t\tif (iasset.assetType == assetTypesToGet[typeCnt]) {\r\n\t\t\t\t\t\t\t//if the right assetType was found\r\n\t\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == TextureBase.assetType) && (extraTypeInfo == \"CubeTexture\")) {\r\n\t\t\t\t\t\t\t\tif (this._blocks[assetID].data instanceof ImageCubeTexture) {\r\n\t\t\t\t\t\t\t\t\treturnArray.push(true);\r\n\t\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\r\n\t\t\t\t\t\t\t\t\treturn returnArray;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == TextureBase.assetType) && (extraTypeInfo == \"SingleTexture\")) {\r\n\t\t\t\t\t\t\t\tif (this._blocks[assetID].data instanceof ImageTexture) {\r\n\t\t\t\t\t\t\t\t\treturnArray.push(true);\r\n\t\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\r\n\t\t\t\t\t\t\t\t\treturn returnArray;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturnArray.push(true);\r\n\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\r\n\t\t\t\t\t\t\t\treturn returnArray;\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//if ((assetTypesToGet[typeCnt] == Geometry.assetType) && (IAsset(_blocks[assetID].data).assetType == Mesh.assetType)) {\r\n\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == Geometry.assetType) && (iasset.assetType == Mesh.assetType)) {\r\n\r\n\t\t\t\t\t\t\tvar mesh:Mesh = <Mesh> this._blocks[assetID].data\r\n\r\n\t\t\t\t\t\t\treturnArray.push(true);\r\n\t\t\t\t\t\t\treturnArray.push(mesh.geometry);\r\n\t\t\t\t\t\t\treturn returnArray;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttypeCnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// if the has not returned anything yet, the asset is not found, or the found asset is not the right type.\r\n\t\treturnArray.push(false);\r\n\t\treturnArray.push(this.getDefaultAsset(assetTypesToGet[0], extraTypeInfo));\r\n\t\treturn returnArray;\r\n\t}\r\n\tprivate getDefaultAsset(assetType:string, extraTypeInfo:string):IAsset\r\n\t{\r\n\t\tswitch (true) {\r\n\t\t\tcase (assetType == TextureBase.assetType):\r\n\t\t\t\tif (extraTypeInfo == \"CubeTexture\")\r\n\t\t\t\t\treturn this.getDefaultCubeTexture();\r\n\t\t\t\tif (extraTypeInfo == \"SingleTexture\")\r\n\t\t\t\t\treturn DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\tbreak;\r\n\t\t\tcase (assetType == MaterialBase.assetType):\r\n\t\t\t\treturn DefaultMaterialManager.getDefaultMaterial();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate getDefaultCubeTexture():IAsset\r\n\t{\r\n\t\tif (!this._defaultCubeTexture) {\r\n\t\t\tvar defaultBitmap:BitmapData = DefaultMaterialManager.createCheckeredBitmapData();\r\n\r\n\t\t\tthis._defaultCubeTexture = new BitmapCubeTexture(defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap);\r\n\t\t\tthis._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t\t}\r\n\r\n\t\treturn <IAsset> this._defaultCubeTexture;\r\n\t}\r\n\r\n\tprivate readNumber(precision:boolean = false):number\r\n\t{\r\n\t\tif (precision)\r\n\t\t\treturn this._newBlockBytes.readDouble();\r\n\t\treturn this._newBlockBytes.readFloat();\r\n\r\n\t}\r\n\r\n\tprivate parseMatrix3D():Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\r\n\t}\r\n\r\n\tprivate parseMatrix32RawData():Array<number>\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n\tprivate parseMatrix43RawData():Array<number>\r\n\t{\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(16);\r\n\r\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[3] = 0.0;\r\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[7] = 0.0;\r\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[11] = 0.0;\r\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[15] = 1.0;\r\n\r\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\r\n\r\n\t\tif (isNaN(mtx_raw[0])) {\r\n\t\t\tmtx_raw[0] = 1;\r\n\t\t\tmtx_raw[1] = 0;\r\n\t\t\tmtx_raw[2] = 0;\r\n\t\t\tmtx_raw[4] = 0;\r\n\t\t\tmtx_raw[5] = 1;\r\n\t\t\tmtx_raw[6] = 0;\r\n\t\t\tmtx_raw[8] = 0;\r\n\t\t\tmtx_raw[9] = 0;\r\n\t\t\tmtx_raw[10] = 1;\r\n\t\t\tmtx_raw[12] = 0;\r\n\t\t\tmtx_raw[13] = 0;\r\n\t\t\tmtx_raw[14] = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n}\r\n\r\nexport = AWDParser;\r\n\r\nclass AWDBlock\r\n{\r\n\tpublic id:number;\r\n\tpublic name:string;\r\n\tpublic data:any;\r\n\tpublic len:any;\r\n\tpublic geoID:number;\r\n\tpublic extras:Object;\r\n\tpublic bytes:ByteArray;\r\n\tpublic errorMessages:Array<string>;\r\n\tpublic uvsForVertexAnimation:Array<Array<number>>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t\tthis.id = null;\r\n\t\tthis.bytes = null;\r\n\t\tthis.errorMessages = null;\r\n\t\tthis.uvsForVertexAnimation = null;\r\n\r\n\t}\r\n\r\n\tpublic addError(errorMsg:string):void\r\n\t{\r\n\t\tif (!this.errorMessages)\r\n\t\t\tthis.errorMessages = new Array<string>();\r\n\r\n\t\tthis.errorMessages.push(errorMsg);\r\n\t}\r\n}\r\n\r\nclass AWDProperties\r\n{\r\n\tpublic set(key:number, value:any):void\r\n\t{\r\n\t\tthis[ key.toString() ] = value;\r\n\t}\r\n\r\n\tpublic get(key:number, fallback:any):any\r\n\t{\r\n\t\tif (this.hasOwnProperty(key.toString())) {\r\n\t\t\treturn this[key.toString()];\r\n\t\t} else {\r\n\t\t\treturn fallback;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass BitFlags\r\n{\r\n\tpublic static FLAG1:number = 1;\r\n\tpublic static FLAG2:number = 2;\r\n\tpublic static FLAG3:number = 4;\r\n\tpublic static FLAG4:number = 8;\r\n\tpublic static FLAG5:number = 16;\r\n\tpublic static FLAG6:number = 32;\r\n\tpublic static FLAG7:number = 64;\r\n\tpublic static FLAG8:number = 128;\r\n\tpublic static FLAG9:number = 256;\r\n\tpublic static FLAG10:number = 512;\r\n\tpublic static FLAG11:number = 1024;\r\n\tpublic static FLAG12:number = 2048;\r\n\tpublic static FLAG13:number = 4096;\r\n\tpublic static FLAG14:number = 8192;\r\n\tpublic static FLAG15:number = 16384;\r\n\tpublic static FLAG16:number = 32768;\r\n\r\n\tpublic static test(flags:number, testFlag:number):boolean\r\n\t{\r\n\t\treturn (flags & testFlag) == testFlag;\r\n\t}\r\n}\r\n",
    "import BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\n\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\n\r\n/**\r\n * MD2Parser provides a parser for the MD2 data type.\r\n */\r\nclass MD2Parser extends ParserBase\r\n{\r\n\tpublic static FPS:number /*int*/ = 6;\r\n\r\n\tprivate _clipNodes:Object = new Object();\r\n\tprivate _byteData:ByteArray;\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _parsedHeader:boolean;\r\n\tprivate _parsedUV:boolean;\r\n\tprivate _parsedFaces:boolean;\r\n\tprivate _parsedFrames:boolean;\r\n\r\n\tprivate _ident:number /*uint*/;\r\n\tprivate _version:number /*uint*/;\r\n\tprivate _skinWidth:number /*uint*/;\r\n\tprivate _skinHeight:number /*uint*/;\r\n\t//private _frameSize : number /*uint*/;\r\n\tprivate _numSkins:number /*uint*/;\r\n\tprivate _numVertices:number /*uint*/;\r\n\tprivate _numST:number /*uint*/;\r\n\tprivate _numTris:number /*uint*/;\r\n\t//private _numGlCmds : number /*uint*/;\r\n\tprivate _numFrames:number /*uint*/;\r\n\tprivate _offsetSkins:number /*uint*/;\r\n\tprivate _offsetST:number /*uint*/;\r\n\tprivate _offsetTris:number /*uint*/;\r\n\tprivate _offsetFrames:number /*uint*/;\r\n\t//private _offsetGlCmds : number /*uint*/;\r\n\tprivate _offsetEnd:number /*uint*/;\r\n\r\n\tprivate _uvIndices:Array<number>;\r\n\tprivate _indices:Array<number> /*uint*/;\r\n\tprivate _vertIndices:Array<number>;\r\n\r\n\t// the current subgeom being built\r\n\tprivate _animationSet:VertexAnimationSet = new VertexAnimationSet();\r\n\tprivate _firstSubGeom:TriangleSubGeometry;\r\n\tprivate _uvs:Array<number>;\r\n\tprivate _finalUV:Array<number>;\r\n\r\n\tprivate _materialNames:Array<string>;\r\n\tprivate _textureType:string;\r\n\tprivate _ignoreTexturePath:boolean;\r\n\tprivate _mesh:Mesh;\r\n\tprivate _geometry:Geometry;\r\n\r\n\tprivate materialFinal:boolean = false;\r\n\tprivate geoCreated:boolean = false;\r\n\r\n\t/**\r\n\t * Creates a new MD2Parser object.\r\n\t * @param textureType The extension of the texture (e.g. jpg/png/...)\r\n\t * @param ignoreTexturePath If true, the path of the texture is ignored\r\n\t */\r\n\tconstructor(textureType:string = \"jpg\", ignoreTexturePath:boolean = true)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\t\tthis._textureType = textureType;\r\n\t\tthis._ignoreTexturePath = ignoreTexturePath;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md2\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn (ParserUtils.toString(data, 4) == 'IDP2');\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.assets.length != 1)\r\n\t\t\treturn;\r\n\r\n\t\tvar asset:Texture2DBase = <Texture2DBase> resourceDependency.assets[0];\r\n\r\n\t\tif (asset) {\r\n\t\t\tvar material:MethodMaterial = new MethodMaterial(asset);\r\n\r\n\t\t\tif (this.materialMode >= 2)\r\n\t\t\t\tmaterial.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\tmaterial.name = this._mesh.material.name;\r\n\t\t\tthis._mesh.material = material;\r\n\t\t\tthis._pFinalizeAsset(material);\r\n\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t}\r\n\t\tthis.materialFinal = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t// apply system default\r\n\t\tif (this.materialMode < 2) {\r\n\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\r\n\t\t} else {\r\n\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t}\r\n\r\n\t\t//add to the content property\r\n\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\tthis.materialFinal = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._byteData = this._pGetByteData();\r\n\t\t\tthis._startedParsing = true;\r\n\r\n\t\t\t// Reset bytearray read position (which may have been\r\n\t\t\t// moved forward by the supportsData() function.)\r\n\t\t\tthis._byteData.position = 0;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\tif (!this._parsedHeader) {\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n\r\n\t\t\t\t// TODO: Create a mesh only when encountered (if it makes sense\r\n\t\t\t\t// for this file format) and return it using this._pFinalizeAsset()\r\n\t\t\t\tthis._geometry = new Geometry();\r\n\t\t\t\tthis._mesh = new Mesh(this._geometry, null);\r\n\t\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\t\t\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//_geometry.animation = new VertexAnimation(2, VertexAnimationMode.ABSOLUTE);\r\n\t\t\t\t//_animator = new VertexAnimator(VertexAnimationState(_mesh.animationState));\r\n\r\n\t\t\t\t// Parse header and decompress body\r\n\t\t\t\tthis.parseHeader();\r\n\t\t\t\tthis.parseMaterialNames();\r\n\t\t\t} else if (!this._parsedUV) {\r\n\t\t\t\tthis.parseUV();\r\n\t\t\t} else if (!this._parsedFaces) {\r\n\t\t\t\tthis.parseFaces();\r\n\t\t\t} else if (!this._parsedFrames) {\r\n\t\t\t\tthis.parseFrames();\r\n\t\t\t} else if ((this.geoCreated) && (this.materialFinal)) {\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t} else if (!this.geoCreated) {\r\n\t\t\t\tthis.geoCreated = true;\r\n\t\t\t\t//create default subgeometry\r\n\t\t\t\tthis._geometry.addSubGeometry(this._firstSubGeom.clone());\r\n\t\t\t\t// Force name to be chosen by this._pFinalizeAsset()\r\n\t\t\t\tthis._mesh.name = \"\";\r\n\t\t\t\tif (this.materialFinal) {\r\n\t\t\t\t\t//add to the content property\r\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\t/**\r\n\t * Reads in all that MD2 Header data that is declared as private variables.\r\n\t * I know its a lot, and it looks ugly, but only way to do it in Flash\r\n\t */\r\n\tprivate parseHeader()\r\n\t{\r\n\t\tthis._ident = this._byteData.readInt();\r\n\t\tthis._version = this._byteData.readInt();\r\n\t\tthis._skinWidth = this._byteData.readInt();\r\n\t\tthis._skinHeight = this._byteData.readInt();\r\n\t\t//skip this._frameSize\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._numSkins = this._byteData.readInt();\r\n\t\tthis._numVertices = this._byteData.readInt();\r\n\t\tthis._numST = this._byteData.readInt();\r\n\t\tthis._numTris = this._byteData.readInt();\r\n\t\t//skip this._numGlCmds\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._numFrames = this._byteData.readInt();\r\n\t\tthis._offsetSkins = this._byteData.readInt();\r\n\t\tthis._offsetST = this._byteData.readInt();\r\n\t\tthis._offsetTris = this._byteData.readInt();\r\n\t\tthis._offsetFrames = this._byteData.readInt();\r\n\t\t//skip this._offsetGlCmds\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._offsetEnd = this._byteData.readInt();\r\n\r\n\t\tthis._parsedHeader = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the file names for the materials.\r\n\t */\r\n\tprivate parseMaterialNames()\r\n\t{\r\n\t\tvar url:string;\r\n\t\tvar name:string;\r\n\t\tvar extIndex:number /*int*/;\r\n\t\tvar slashIndex:number /*int*/;\r\n\t\tthis._materialNames = new Array<string>();\r\n\t\tthis._byteData.position = this._offsetSkins;\r\n\r\n\t\tvar regExp:RegExp = new RegExp(\"[^a-zA-Z0-9\\\\_\\/.]\", \"g\");\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numSkins; ++i) {\r\n\t\t\tname = this._byteData.readUTFBytes(64);\r\n\t\t\tname = name.replace(regExp, \"\");\r\n\t\t\textIndex = name.lastIndexOf(\".\");\r\n\t\t\tif (this._ignoreTexturePath)\r\n\t\t\t\tslashIndex = name.lastIndexOf(\"/\");\r\n\t\t\tif (name.toLowerCase().indexOf(\".jpg\") == -1 && name.toLowerCase().indexOf(\".png\") == -1) {\r\n\t\t\t\tname = name.substring(slashIndex + 1, extIndex);\r\n\t\t\t\turl = name + \".\" + this._textureType;\r\n\t\t\t} else {\r\n\t\t\t\turl = name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._materialNames[i] = name;\r\n\r\n\t\t\t// only support 1 skin TODO: really?\r\n\t\t\tif (this.dependencies.length == 0)\r\n\t\t\t\tthis._pAddDependency(name, new URLRequest(url));\r\n\t\t}\r\n\r\n\t\tif (this._materialNames.length > 0)\r\n\t\t\tthis._mesh.material.name = this._materialNames[0]; else\r\n\t\t\tthis.materialFinal = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the uv data for the mesh.\r\n\t */\r\n\tprivate parseUV()\r\n\t{\r\n\t\tvar j:number /*uint*/ = 0;\r\n\r\n\t\tthis._uvs = new Array<number>(this._numST*2);\r\n\t\tthis._byteData.position = this._offsetST;\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numST; i++) {\r\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinWidth;\r\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinHeight;\r\n\t\t}\r\n\r\n\t\tthis._parsedUV = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses unique indices for the faces.\r\n\t */\r\n\tprivate parseFaces()\r\n\t{\r\n\t\tvar a:number /*uint*/, b:number /*uint*/, c:number /*uint*/, ta:number /*uint*/, tb:number /*uint*/, tc:number /*uint*/;\r\n\t\tvar i:number /*uint*/;\r\n\r\n\t\tthis._vertIndices = new Array<number>();\r\n\t\tthis._uvIndices = new Array<number>();\r\n\t\tthis._indices = new Array<number>() /*uint*/;\r\n\r\n\t\tthis._byteData.position = this._offsetTris;\r\n\r\n\t\tfor (i = 0; i < this._numTris; i++) {\r\n\t\t\t//collect vertex indices\r\n\t\t\ta = this._byteData.readUnsignedShort();\r\n\t\t\tb = this._byteData.readUnsignedShort();\r\n\t\t\tc = this._byteData.readUnsignedShort();\r\n\r\n\t\t\t//collect uv indices\r\n\t\t\tta = this._byteData.readUnsignedShort();\r\n\t\t\ttb = this._byteData.readUnsignedShort();\r\n\t\t\ttc = this._byteData.readUnsignedShort();\r\n\r\n\t\t\tthis.addIndex(a, ta);\r\n\t\t\tthis.addIndex(b, tb);\r\n\t\t\tthis.addIndex(c, tc);\r\n\t\t}\r\n\r\n\t\tvar len:number /*uint*/ = this._uvIndices.length;\r\n\t\tthis._finalUV = new Array<number>(len*2);\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tthis._finalUV[i << 1] = this._uvs[this._uvIndices[i] << 1];\r\n\t\t\tthis._finalUV[(i << 1) + 1] = this._uvs[(this._uvIndices[i] << 1) + 1];\r\n\t\t}\r\n\r\n\t\tthis._parsedFaces = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a face index to the list if it doesn't exist yet, based on vertexIndex and uvIndex, and adds the\r\n\t * corresponding vertex and uv data in the correct location.\r\n\t * @param vertexIndex The original index in the vertex list.\r\n\t * @param uvIndex The original index in the uv list.\r\n\t */\r\n\tprivate addIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/)\r\n\t{\r\n\t\tvar index:number /*int*/ = this.findIndex(vertexIndex, uvIndex);\r\n\r\n\t\tif (index == -1) {\r\n\t\t\tthis._indices.push(this._vertIndices.length);\r\n\t\t\tthis._vertIndices.push(vertexIndex);\r\n\t\t\tthis._uvIndices.push(uvIndex);\r\n\t\t} else\r\n\t\t\tthis._indices.push(index);\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the final index corresponding to the original MD2's vertex and uv indices. Returns -1 if it wasn't added yet.\r\n\t * @param vertexIndex The original index in the vertex list.\r\n\t * @param uvIndex The original index in the uv list.\r\n\t * @return The index of the final mesh corresponding to the original vertex and uv index. -1 if it doesn't exist yet.\r\n\t */\r\n\tprivate findIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/):number /*int*/\r\n\t{\r\n\t\tvar len:number /*uint*/ = this._vertIndices.length;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\r\n\t\t\tif (this._vertIndices[i] == vertexIndex && this._uvIndices[i] == uvIndex)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses all the frame geometries.\r\n\t */\r\n\tprivate parseFrames()\r\n\t{\r\n\t\tvar sx:number, sy:number, sz:number;\r\n\t\tvar tx:number, ty:number, tz:number;\r\n\t\tvar geometry:Geometry;\r\n\t\tvar subGeom:TriangleSubGeometry;\r\n\t\tvar vertLen:number /*uint*/ = this._vertIndices.length;\r\n\t\tvar fvertices:Array<number>;\r\n\t\tvar tvertices:Array<number>;\r\n\t\tvar i:number /*uint*/, j:number /*int*/, k:number /*uint*/;\r\n\t\t//var ch : number /*uint*/;\r\n\t\tvar name:string = \"\";\r\n\t\tvar prevClip:VertexClipNode = null;\r\n\r\n\t\tthis._byteData.position = this._offsetFrames;\r\n\r\n\t\tfor (i = 0; i < this._numFrames; i++) {\r\n\r\n\t\t\ttvertices = new Array<number>();\r\n\t\t\tfvertices = new Array<number>(vertLen*3);\r\n\r\n\t\t\tsx = this._byteData.readFloat();\r\n\t\t\tsy = this._byteData.readFloat();\r\n\t\t\tsz = this._byteData.readFloat();\r\n\r\n\t\t\ttx = this._byteData.readFloat();\r\n\t\t\tty = this._byteData.readFloat();\r\n\t\t\ttz = this._byteData.readFloat();\r\n\r\n\t\t\tname = this.readFrameName();\r\n\r\n\t\t\t// Note, the extra data.position++ in the for loop is there\r\n\t\t\t// to skip over a byte that holds the \"vertex normal index\"\r\n\t\t\tfor (j = 0; j < this._numVertices; j++, this._byteData.position++)\r\n\t\t\t\ttvertices.push(sx*this._byteData.readUnsignedByte() + tx, sy*this._byteData.readUnsignedByte() + ty, sz*this._byteData.readUnsignedByte() + tz);\r\n\r\n\t\t\tk = 0;\r\n\t\t\tfor (j = 0; j < vertLen; j++) {\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3];\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 2];\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 1];\r\n\t\t\t}\r\n\r\n\t\t\tsubGeom = new TriangleSubGeometry(true);\r\n\r\n\t\t\tif (this._firstSubGeom == null)\r\n\t\t\t\tthis._firstSubGeom = subGeom;\r\n\r\n\t\t\tgeometry = new Geometry();\r\n\t\t\tgeometry.addSubGeometry(subGeom);\r\n\r\n\t\t\tsubGeom.updateIndices(this._indices);\r\n\t\t\tsubGeom.updatePositions(fvertices);\r\n\t\t\tsubGeom.updateUVs(this._finalUV);\r\n\t\t\tsubGeom.vertexNormals;\r\n\t\t\tsubGeom.vertexTangents;\r\n\t\t\tsubGeom.autoDeriveNormals = false;\r\n\t\t\tsubGeom.autoDeriveTangents = false;\r\n\r\n\t\t\tvar clip:VertexClipNode = this._clipNodes[name];\r\n\r\n\t\t\tif (!clip) {\r\n\t\t\t\t// If another sequence was parsed before this one, starting\r\n\t\t\t\t// a new state means the previous one is complete and can\r\n\t\t\t\t// hence be finalized.\r\n\t\t\t\tif (prevClip) {\r\n\t\t\t\t\tthis._pFinalizeAsset(prevClip);\r\n\t\t\t\t\tthis._animationSet.addAnimation(prevClip);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tclip = new VertexClipNode();\r\n\t\t\t\tclip.name = name;\r\n\t\t\t\tclip.stitchFinalFrame = true;\r\n\r\n\t\t\t\tthis._clipNodes[name] = clip;\r\n\r\n\t\t\t\tprevClip = clip;\r\n\t\t\t}\r\n\t\t\tclip.addFrame(geometry, 1000/MD2Parser.FPS);\r\n\t\t}\r\n\r\n\t\t// Finalize the last state\r\n\t\tif (prevClip) {\r\n\t\t\tthis._pFinalizeAsset(prevClip);\r\n\t\t\tthis._animationSet.addAnimation(prevClip);\r\n\t\t}\r\n\r\n\t\t// Force this._pFinalizeAsset() to decide name\r\n\t\tthis._pFinalizeAsset(this._animationSet);\r\n\r\n\t\tthis._parsedFrames = true;\r\n\t}\r\n\r\n\tprivate readFrameName():string\r\n\t{\r\n\t\tvar name:string = \"\";\r\n\t\tvar k:number /*uint*/ = 0;\r\n\t\tfor (var j:number /*uint*/ = 0; j < 16; j++) {\r\n\t\t\tvar ch:number /*uint*/ = this._byteData.readUnsignedByte();\r\n\r\n\t\t\tif (Math.floor(ch) > 0x39 && Math.floor(ch) <= 0x7A && k == 0)\r\n\t\t\t\tname += String.fromCharCode(ch);\r\n\r\n\t\t\tif (Math.floor(ch) >= 0x30 && Math.floor(ch) <= 0x39)\r\n\t\t\t\tk++;\r\n\t\t}\r\n\t\treturn name;\r\n\t}\r\n}\r\n\r\nexport = MD2Parser;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\n\r\n/**\r\n * MD5AnimParser provides a parser for the md5anim data type, providing an animation sequence for the md5 format.\r\n *\r\n * todo: optimize\r\n */\r\nclass MD5AnimParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\r\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\r\n\tpublic static NUM_FRAMES_TOKEN:string = \"numFrames\";\r\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\r\n\tpublic static FRAME_RATE_TOKEN:string = \"frameRate\";\r\n\tpublic static NUM_ANIMATED_COMPONENTS_TOKEN:string = \"numAnimatedComponents\";\r\n\r\n\tpublic static HIERARCHY_TOKEN:string = \"hierarchy\";\r\n\tpublic static BOUNDS_TOKEN:string = \"bounds\";\r\n\tpublic static BASE_FRAME_TOKEN:string = \"baseframe\";\r\n\tpublic static FRAME_TOKEN:string = \"frame\";\r\n\r\n\tpublic static COMMENT_TOKEN:string = \"//\";\r\n\r\n\tprivate _parseIndex:number /*int*/ = 0;\r\n\tprivate _reachedEOF:boolean;\r\n\tprivate _line:number /*int*/ = 0;\r\n\tprivate _charLineIndex:number /*int*/ = 0;\r\n\tprivate _version:number /*int*/;\r\n\tprivate _frameRate:number /*int*/;\r\n\tprivate _numFrames:number /*int*/;\r\n\tprivate _numJoints:number /*int*/;\r\n\tprivate _numAnimatedComponents:number /*int*/;\r\n\r\n\tprivate _hierarchy:Array<HierarchyData>;\r\n\tprivate _bounds:Array<BoundsData>;\r\n\tprivate _frameData:Array<FrameData>;\r\n\tprivate _baseFrameData:Array<BaseFrameData>;\r\n\r\n\tprivate _rotationQuat:Quaternion;\r\n\tprivate _clip:SkeletonClipNode;\r\n\r\n\t/**\r\n\t * Creates a new MD5AnimParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._rotationQuat = new Quaternion();\r\n\t\tvar t1:Quaternion = new Quaternion();\r\n\t\tvar t2:Quaternion = new Quaternion();\r\n\r\n\t\tt1.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\r\n\t\tt2.fromAxisAngle(Vector3D.Y_AXIS, -Math.PI*.5);\r\n\r\n\t\tthis._rotationQuat.multiply(t2, t1);\r\n\r\n\t\tif (additionalRotationAxis) {\r\n\t\t\tthis._rotationQuat.multiply(t2, t1);\r\n\t\t\tt1.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\r\n\t\t\tthis._rotationQuat.multiply(t1, this._rotationQuat);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md5anim\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar token:string;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\ttoken = this.getNextToken();\r\n\t\t\tswitch (token) {\r\n\t\t\t\tcase MD5AnimParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"\":\r\n\t\t\t\t\t// can occur at the end of a file\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.VERSION_TOKEN:\r\n\t\t\t\t\tthis._version = this.getNextInt();\r\n\t\t\t\t\tif (this._version != 10)\r\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.COMMAND_LINE_TOKEN:\r\n\t\t\t\t\tthis.parseCMD();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_FRAMES_TOKEN:\r\n\t\t\t\t\tthis._numFrames = this.getNextInt();\r\n\t\t\t\t\tthis._bounds = new Array<BoundsData>();\r\n\t\t\t\t\tthis._frameData = new Array<FrameData>();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_JOINTS_TOKEN:\r\n\t\t\t\t\tthis._numJoints = this.getNextInt();\r\n\t\t\t\t\tthis._hierarchy = new Array<HierarchyData>(this._numJoints);\r\n\t\t\t\t\tthis._baseFrameData = new Array<BaseFrameData>(this._numJoints);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.FRAME_RATE_TOKEN:\r\n\t\t\t\t\tthis._frameRate = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_ANIMATED_COMPONENTS_TOKEN:\r\n\t\t\t\t\tthis._numAnimatedComponents = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.HIERARCHY_TOKEN:\r\n\t\t\t\t\tthis.parseHierarchy();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.BOUNDS_TOKEN:\r\n\t\t\t\t\tthis.parseBounds();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.BASE_FRAME_TOKEN:\r\n\t\t\t\t\tthis.parseBaseFrame();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.FRAME_TOKEN:\r\n\t\t\t\t\tthis.parseFrame();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (!this._reachedEOF)\r\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._reachedEOF) {\r\n\t\t\t\tthis._clip = new SkeletonClipNode();\r\n\t\t\t\tthis.translateClip();\r\n\t\t\t\tthis._pFinalizeAsset(this._clip);\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts all key frame data to an SkinnedAnimationSequence.\r\n\t */\r\n\tprivate translateClip():void\r\n\t{\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numFrames; ++i)\r\n\t\t\tthis._clip.addFrame(this.translatePose(this._frameData[i]), 1000/this._frameRate);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a single key frame data to a SkeletonPose.\r\n\t * @param frameData The actual frame data.\r\n\t * @return A SkeletonPose containing the frame data's pose.\r\n\t */\r\n\tprivate translatePose(frameData:FrameData):SkeletonPose\r\n\t{\r\n\t\tvar hierarchy:HierarchyData;\r\n\t\tvar pose:JointPose;\r\n\t\tvar base:BaseFrameData;\r\n\t\tvar flags:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar translate:Vector3D = new Vector3D();\r\n\t\tvar orientation:Quaternion = new Quaternion();\r\n\t\tvar components:Array<number> = frameData.components;\r\n\t\tvar skelPose:SkeletonPose = new SkeletonPose();\r\n\t\tvar jointPoses:Array<JointPose> = skelPose.jointPoses;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numJoints; ++i) {\r\n\t\t\tj = 0;\r\n\t\t\tpose = new JointPose();\r\n\t\t\thierarchy = this._hierarchy[i];\r\n\t\t\tbase = this._baseFrameData[i];\r\n\t\t\tflags = hierarchy.flags;\r\n\t\t\ttranslate.x = base.position.x;\r\n\t\t\ttranslate.y = base.position.y;\r\n\t\t\ttranslate.z = base.position.z;\r\n\t\t\torientation.x = base.orientation.x;\r\n\t\t\torientation.y = base.orientation.y;\r\n\t\t\torientation.z = base.orientation.z;\r\n\r\n\t\t\tif (flags & 1)\r\n\t\t\t\ttranslate.x = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 2)\r\n\t\t\t\ttranslate.y = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 4)\r\n\t\t\t\ttranslate.z = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 8)\r\n\t\t\t\torientation.x = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 16)\r\n\t\t\t\torientation.y = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 32)\r\n\t\t\t\torientation.z = components[hierarchy.startIndex + (j++)];\r\n\r\n\t\t\tvar w:number = 1 - orientation.x*orientation.x - orientation.y*orientation.y - orientation.z*orientation.z;\r\n\t\t\torientation.w = w < 0? 0 : -Math.sqrt(w);\r\n\r\n\t\t\tif (hierarchy.parentIndex < 0) {\r\n\t\t\t\tpose.orientation.multiply(this._rotationQuat, orientation);\r\n\t\t\t\tpose.translation = this._rotationQuat.rotatePoint(translate);\r\n\t\t\t} else {\r\n\t\t\t\tpose.orientation.copyFrom(orientation);\r\n\t\t\t\tpose.translation.x = translate.x;\r\n\t\t\t\tpose.translation.y = translate.y;\r\n\t\t\t\tpose.translation.z = translate.z;\r\n\t\t\t}\r\n\t\t\tpose.orientation.y = -pose.orientation.y;\r\n\t\t\tpose.orientation.z = -pose.orientation.z;\r\n\t\t\tpose.translation.x = -pose.translation.x;\r\n\r\n\t\t\tjointPoses[i] = pose;\r\n\t\t}\r\n\r\n\t\treturn skelPose;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the skeleton's hierarchy data.\r\n\t */\r\n\tprivate parseHierarchy():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:HierarchyData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new HierarchyData();\r\n\t\t\tdata.name = this.parseLiteralstring();\r\n\t\t\tdata.parentIndex = this.getNextInt();\r\n\t\t\tdata.flags = this.getNextInt();\r\n\t\t\tdata.startIndex = this.getNextInt();\r\n\t\t\tthis._hierarchy[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses frame bounds.\r\n\t */\r\n\tprivate parseBounds():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:BoundsData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new BoundsData();\r\n\t\t\tdata.min = this.parseVector3D();\r\n\t\t\tdata.max = this.parseVector3D();\r\n\t\t\tthis._bounds[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the base frame.\r\n\t */\r\n\tprivate parseBaseFrame():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:BaseFrameData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new BaseFrameData();\r\n\t\t\tdata.position = this.parseVector3D();\r\n\t\t\tdata.orientation = this.parseQuaternion();\r\n\t\t\tthis._baseFrameData[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a single frame.\r\n\t */\r\n\tprivate parseFrame():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:FrameData;\r\n\t\tvar token:string;\r\n\t\tvar frameIndex:number /*int*/;\r\n\r\n\t\tframeIndex = this.getNextInt();\r\n\r\n\t\ttoken = this.getNextToken();\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new FrameData();\r\n\t\t\tdata.components = new Array<number>(this._numAnimatedComponents);\r\n\r\n\t\t\tfor (var i:number /*int*/ = 0; i < this._numAnimatedComponents; ++i)\r\n\t\t\t\tdata.components[i] = this.getNextNumber();\r\n\r\n\t\t\tthis._frameData[frameIndex] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Puts back the last read character into the data stream.\r\n\t */\r\n\tprivate putBack():void\r\n\t{\r\n\t\tthis._parseIndex--;\r\n\t\tthis._charLineIndex--;\r\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the next token in the data stream.\r\n\t */\r\n\tprivate getNextToken():string\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar token:string = \"\";\r\n\r\n\t\twhile (!this._reachedEOF) {\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\r\n\t\t\t\tif (token != MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.skipWhiteSpace();\r\n\t\t\t\tif (token != \"\")\r\n\t\t\t\t\treturn token;\r\n\t\t\t} else\r\n\t\t\t\ttoken += ch;\r\n\r\n\t\t\tif (token == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\treturn token;\r\n\t\t}\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Skips all whitespace in the data stream.\r\n\t */\r\n\tprivate skipWhiteSpace():void\r\n\t{\r\n\t\tvar ch:string;\r\n\r\n\t\tdo\r\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\r\n\r\n\t\tthis.putBack();\r\n\t}\r\n\r\n\t/**\r\n\t * Skips to the next line.\r\n\t */\r\n\tprivate ignoreLine():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\r\n\t\t\tch = this.getNextChar();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next single character in the data stream.\r\n\t */\r\n\tprivate getNextChar():string\r\n\t{\r\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\r\n\r\n\t\tif (ch == \"\\n\") {\r\n\t\t\t++this._line;\r\n\t\t\tthis._charLineIndex = 0;\r\n\t\t} else if (ch != \"\\r\")\r\n\t\t\t++this._charLineIndex;\r\n\r\n\t\tif (this._parseIndex == this._textData.length)\r\n\t\t\tthis._reachedEOF = true;\r\n\r\n\t\treturn ch;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next integer in the data stream.\r\n\t */\r\n\tprivate getNextInt():number /*int*/\r\n\t{\r\n\t\tvar i:number = parseInt(this.getNextToken());\r\n\t\tif (isNaN(i))\r\n\t\t\tthis.sendParseError(\"int type\");\r\n\t\treturn i;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next floating point number in the data stream.\r\n\t */\r\n\tprivate getNextNumber():number\r\n\t{\r\n\t\tvar f:number = parseFloat(this.getNextToken());\r\n\t\tif (isNaN(f))\r\n\t\t\tthis.sendParseError(\"float type\");\r\n\t\treturn f;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next 3d vector in the data stream.\r\n\t */\r\n\tprivate parseVector3D():Vector3D\r\n\t{\r\n\t\tvar vec:Vector3D = new Vector3D();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvec.x = this.getNextNumber();\r\n\t\tvec.y = this.getNextNumber();\r\n\t\tvec.z = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next quaternion in the data stream.\r\n\t */\r\n\tprivate parseQuaternion():Quaternion\r\n\t{\r\n\t\tvar quat:Quaternion = new Quaternion();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tquat.x = this.getNextNumber();\r\n\t\tquat.y = this.getNextNumber();\r\n\t\tquat.z = this.getNextNumber();\r\n\r\n\t\t// quat supposed to be unit length\r\n\t\tvar t:number = 1 - (quat.x*quat.x) - (quat.y*quat.y) - (quat.z*quat.z);\r\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn quat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the command line data.\r\n\t */\r\n\tprivate parseCMD():void\r\n\t{\r\n\t\t// just ignore the command line property\r\n\t\tthis.parseLiteralstring();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\r\n\t * by double quotes.\r\n\t */\r\n\tprivate parseLiteralstring():string\r\n\t{\r\n\t\tthis.skipWhiteSpace();\r\n\r\n\t\tvar ch:string = this.getNextChar();\r\n\t\tvar str:string = \"\";\r\n\r\n\t\tif (ch != \"\\\"\")\r\n\t\t\tthis.sendParseError(\"\\\"\");\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch != \"\\\"\")\r\n\t\t\t\tstr += ch;\r\n\t\t} while (ch != \"\\\"\");\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an end-of-file error when a premature end of file was encountered.\r\n\t */\r\n\tprivate sendEOFError():void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected end of file\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unexpected token was encountered.\r\n\t * @param expected The token type that was actually expected.\r\n\t */\r\n\tprivate sendParseError(expected:string):void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unknown keyword was encountered.\r\n\t */\r\n\tprivate sendUnknownKeywordError():void\r\n\t{\r\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\r\n\t}\r\n}\r\n\r\nexport = MD5AnimParser;\r\n\r\n\r\n/**\r\n *\r\n */\r\nclass BaseFrameData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic position:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientation:Quaternion;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass BoundsData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic min:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic max:Vector3D;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass FrameData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic index:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic components:Array<number>;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass HierarchyData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic name:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic parentIndex:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic flags:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic startIndex:number /*int*/;\r\n}",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\n\r\n// todo: create animation system, parse skeleton\r\n\r\n/**\r\n * MD5MeshParser provides a parser for the md5mesh data type, providing the geometry of the md5 format.\r\n *\r\n * todo: optimize\r\n */\r\nclass MD5MeshParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\r\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\r\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\r\n\tpublic static NUM_MESHES_TOKEN:string = \"numMeshes\";\r\n\tpublic static COMMENT_TOKEN:string = \"//\";\r\n\tpublic static JOINTS_TOKEN:string = \"joints\";\r\n\tpublic static MESH_TOKEN:string = \"mesh\";\r\n\r\n\tpublic static MESH_SHADER_TOKEN:string = \"shader\";\r\n\tpublic static MESH_NUM_VERTS_TOKEN:string = \"numverts\";\r\n\tpublic static MESH_VERT_TOKEN:string = \"vert\";\r\n\tpublic static MESH_NUM_TRIS_TOKEN:string = \"numtris\";\r\n\tpublic static MESH_TRI_TOKEN:string = \"tri\";\r\n\tpublic static MESH_NUM_WEIGHTS_TOKEN:string = \"numweights\";\r\n\tpublic static MESH_WEIGHT_TOKEN:string = \"weight\";\r\n\r\n\tprivate _parseIndex:number /*int*/ = 0;\r\n\tprivate _reachedEOF:boolean;\r\n\tprivate _line:number /*int*/ = 0;\r\n\tprivate _charLineIndex:number /*int*/ = 0;\r\n\tprivate _version:number /*int*/;\r\n\tprivate _numJoints:number /*int*/;\r\n\tprivate _numMeshes:number /*int*/;\r\n\r\n\tprivate _mesh:Mesh;\r\n\tprivate _shaders:Array<string>;\r\n\r\n\tprivate _maxJointCount:number /*int*/;\r\n\tprivate _meshData:Array<MeshData>;\r\n\tprivate _bindPoses:Array<Matrix3D>;\r\n\tprivate _geometry:Geometry;\r\n\r\n\tprivate _skeleton:Skeleton;\r\n\tprivate _animationSet:SkeletonAnimationSet;\r\n\r\n\tprivate _rotationQuat:Quaternion;\r\n\r\n\t/**\r\n\t * Creates a new MD5MeshParser object.\r\n\t */\r\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._rotationQuat = new Quaternion();\r\n\r\n\t\tthis._rotationQuat.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\r\n\r\n\t\tif (additionalRotationAxis) {\r\n\t\t\tvar quat:Quaternion = new Quaternion();\r\n\t\t\tquat.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\r\n\t\t\tthis._rotationQuat.multiply(this._rotationQuat, quat);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md5mesh\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar token:string;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\ttoken = this.getNextToken();\r\n\t\t\tswitch (token) {\r\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.VERSION_TOKEN:\r\n\t\t\t\t\tthis._version = this.getNextInt();\r\n\t\t\t\t\tif (this._version != 10)\r\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.COMMAND_LINE_TOKEN:\r\n\t\t\t\t\tthis.parseCMD();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.NUM_JOINTS_TOKEN:\r\n\t\t\t\t\tthis._numJoints = this.getNextInt();\r\n\t\t\t\t\tthis._bindPoses = new Array<Matrix3D>(this._numJoints);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.NUM_MESHES_TOKEN:\r\n\t\t\t\t\tthis._numMeshes = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.JOINTS_TOKEN:\r\n\t\t\t\t\tthis.parseJoints();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_TOKEN:\r\n\t\t\t\t\tthis.parseMesh();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (!this._reachedEOF)\r\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._reachedEOF) {\r\n\t\t\t\tthis.calculateMaxJointCount();\r\n\t\t\t\tthis._animationSet = new SkeletonAnimationSet(this._maxJointCount);\r\n\r\n\t\t\t\tthis._mesh = new Mesh(new Geometry(), null);\r\n\t\t\t\tthis._geometry = this._mesh.geometry;\r\n\r\n\t\t\t\tfor (var i:number /*int*/ = 0; i < this._meshData.length; ++i)\r\n\t\t\t\t\tthis._geometry.addSubGeometry(this.translateGeom(this._meshData[i].vertexData, this._meshData[i].weightData, this._meshData[i].indices));\r\n\r\n\t\t\t\t//_geometry.animation = _animation;\r\n\t\t\t\t//\t\t\t\t\t_mesh.animationController = _animationController;\r\n\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(this._geometry);\r\n\t\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t\t\tthis._pFinalizeAsset(this._skeleton);\r\n\t\t\t\tthis._pFinalizeAsset(this._animationSet);\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate calculateMaxJointCount():void\r\n\t{\r\n\t\tthis._maxJointCount = 0;\r\n\r\n\t\tvar numMeshData:number /*int*/ = this._meshData.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < numMeshData; ++i) {\r\n\t\t\tvar meshData:MeshData = this._meshData[i];\r\n\t\t\tvar vertexData:Array<VertexData> = meshData.vertexData;\r\n\t\t\tvar numVerts:number /*int*/ = vertexData.length;\r\n\r\n\t\t\tfor (var j:number /*int*/ = 0; j < numVerts; ++j) {\r\n\t\t\t\tvar zeroWeights:number /*int*/ = this.countZeroWeightJoints(vertexData[j], meshData.weightData);\r\n\t\t\t\tvar totalJoints:number /*int*/ = vertexData[j].countWeight - zeroWeights;\r\n\t\t\t\tif (totalJoints > this._maxJointCount)\r\n\t\t\t\t\tthis._maxJointCount = totalJoints;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate countZeroWeightJoints(vertex:VertexData, weights:Array<JointData>):number /*int*/\r\n\t{\r\n\t\tvar start:number /*int*/ = vertex.startWeight;\r\n\t\tvar end:number /*int*/ = vertex.startWeight + vertex.countWeight;\r\n\t\tvar count:number /*int*/ = 0;\r\n\t\tvar weight:number;\r\n\r\n\t\tfor (var i:number /*int*/ = start; i < end; ++i) {\r\n\t\t\tweight = weights[i].bias;\r\n\t\t\tif (weight == 0)\r\n\t\t\t\t++count;\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the skeleton's joints.\r\n\t */\r\n\tprivate parseJoints():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar joint:SkeletonJoint;\r\n\t\tvar pos:Vector3D;\r\n\t\tvar quat:Quaternion;\r\n\t\tvar i:number /*int*/ = 0;\r\n\t\tvar token:string = this.getNextToken();\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tthis._skeleton = new Skeleton();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tjoint = new SkeletonJoint();\r\n\t\t\tjoint.name = this.parseLiteralstring();\r\n\t\t\tjoint.parentIndex = this.getNextInt();\r\n\t\t\tpos = this.parseVector3D();\r\n\t\t\tpos = this._rotationQuat.rotatePoint(pos);\r\n\t\t\tquat = this.parseQuaternion();\r\n\r\n\t\t\t// todo: check if this is correct, or maybe we want to actually store it as quats?\r\n\t\t\tthis._bindPoses[i] = quat.toMatrix3D();\r\n\t\t\tthis._bindPoses[i].appendTranslation(pos.x, pos.y, pos.z);\r\n\t\t\tvar inv:Matrix3D = this._bindPoses[i].clone();\r\n\t\t\tinv.invert();\r\n\t\t\tjoint.inverseBindPose = inv.rawData;\r\n\r\n\t\t\tthis._skeleton.joints[i++] = joint;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Puts back the last read character into the data stream.\r\n\t */\r\n\tprivate putBack():void\r\n\t{\r\n\t\tthis._parseIndex--;\r\n\t\tthis._charLineIndex--;\r\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the mesh geometry.\r\n\t */\r\n\tprivate parseMesh():void\r\n\t{\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar ch:string;\r\n\t\tvar vertexData:Array<VertexData>;\r\n\t\tvar weights:Array<JointData>;\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tif (this._shaders == null)\r\n\t\t\tthis._shaders = new Array<string>();\r\n\r\n\t\twhile (ch != \"}\") {\r\n\t\t\tch = this.getNextToken();\r\n\t\t\tswitch (ch) {\r\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_SHADER_TOKEN:\r\n\t\t\t\t\tthis._shaders.push(this.parseLiteralstring());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_VERTS_TOKEN:\r\n\t\t\t\t\tvertexData = new Array<VertexData>(this.getNextInt());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_TRIS_TOKEN:\r\n\t\t\t\t\tindices = new Array<number>(this.getNextInt()*3) /*uint*/;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_WEIGHTS_TOKEN:\r\n\t\t\t\t\tweights = new Array<JointData>(this.getNextInt());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_VERT_TOKEN:\r\n\t\t\t\t\tthis.parseVertex(vertexData);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_TRI_TOKEN:\r\n\t\t\t\t\tthis.parseTri(indices);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_WEIGHT_TOKEN:\r\n\t\t\t\t\tthis.parseJoint(weights);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._meshData == null)\r\n\t\t\tthis._meshData = new Array<MeshData>();\r\n\r\n\t\tvar i:number /*uint*/ = this._meshData.length;\r\n\t\tthis._meshData[i] = new MeshData();\r\n\t\tthis._meshData[i].vertexData = vertexData;\r\n\t\tthis._meshData[i].weightData = weights;\r\n\t\tthis._meshData[i].indices = indices;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the mesh data to a SkinnedSub instance.\r\n\t * @param vertexData The mesh's vertices.\r\n\t * @param weights The joint weights per vertex.\r\n\t * @param indices The indices for the faces.\r\n\t * @return A SubGeometry instance containing all geometrical data for the current mesh.\r\n\t */\r\n\tprivate translateGeom(vertexData:Array<VertexData>, weights:Array<JointData>, indices:Array<number> /*uint*/):TriangleSubGeometry\r\n\t{\r\n\t\tvar len:number /*int*/ = vertexData.length;\r\n\t\tvar v1:number /*int*/, v2:number /*int*/, v3:number /*int*/;\r\n\t\tvar vertex:VertexData;\r\n\t\tvar weight:JointData;\r\n\t\tvar bindPose:Matrix3D;\r\n\t\tvar pos:Vector3D;\r\n\t\tvar subGeom:TriangleSubGeometry = new TriangleSubGeometry(true);\r\n\t\tvar uvs:Array<number> = new Array<number>(len*2);\r\n\t\tvar vertices:Array<number> = new Array<number>(len*3);\r\n\t\tvar jointIndices:Array<number> = new Array<number>(len*this._maxJointCount);\r\n\t\tvar jointWeights:Array<number> = new Array<number>(len*this._maxJointCount);\r\n\t\tvar l:number /*int*/ = 0;\r\n\t\tvar nonZeroWeights:number /*int*/;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i) {\r\n\t\t\tvertex = vertexData[i];\r\n\t\t\tv1 = vertex.index*3;\r\n\t\t\tv2 = v1 + 1;\r\n\t\t\tv3 = v1 + 2;\r\n\t\t\tvertices[v1] = vertices[v2] = vertices[v3] = 0;\r\n\r\n\t\t\tnonZeroWeights = 0;\r\n\t\t\tfor (var j:number /*int*/ = 0; j < vertex.countWeight; ++j) {\r\n\t\t\t\tweight = weights[vertex.startWeight + j];\r\n\t\t\t\tif (weight.bias > 0) {\r\n\t\t\t\t\tbindPose = this._bindPoses[weight.joint];\r\n\t\t\t\t\tpos = bindPose.transformVector(weight.pos);\r\n\t\t\t\t\tvertices[v1] += pos.x*weight.bias;\r\n\t\t\t\t\tvertices[v2] += pos.y*weight.bias;\r\n\t\t\t\t\tvertices[v3] += pos.z*weight.bias;\r\n\r\n\t\t\t\t\t// indices need to be multiplied by 3 (amount of matrix registers)\r\n\t\t\t\t\tjointIndices[l] = weight.joint*3;\r\n\t\t\t\t\tjointWeights[l++] = weight.bias;\r\n\t\t\t\t\t++nonZeroWeights;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = nonZeroWeights; j < this._maxJointCount; ++j) {\r\n\t\t\t\tjointIndices[l] = 0;\r\n\t\t\t\tjointWeights[l++] = 0;\r\n\t\t\t}\r\n\r\n\t\t\tv1 = vertex.index << 1;\r\n\t\t\tuvs[v1++] = vertex.s;\r\n\t\t\tuvs[v1] = vertex.t;\r\n\t\t}\r\n\r\n\t\tsubGeom.jointsPerVertex = this._maxJointCount;\r\n\t\tsubGeom.updateIndices(indices);\r\n\t\tsubGeom.updatePositions(vertices);\r\n\t\tsubGeom.updateUVs(uvs);\r\n\t\tsubGeom.updateJointIndices(jointIndices);\r\n\t\tsubGeom.updateJointWeights(jointWeights);\r\n\t\t// cause explicit updates\r\n\t\tsubGeom.vertexNormals;\r\n\t\tsubGeom.vertexTangents;\r\n\t\t// turn auto updates off because they may be animated and set explicitly\r\n\t\tsubGeom.autoDeriveTangents = false;\r\n\t\tsubGeom.autoDeriveNormals = false;\r\n\r\n\t\treturn subGeom;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve the next triplet of vertex indices that form a face.\r\n\t * @param indices The index list in which to store the read data.\r\n\t */\r\n\tprivate parseTri(indices:Array<number> /*uint*/):void\r\n\t{\r\n\t\tvar index:number /*int*/ = this.getNextInt()*3;\r\n\t\tindices[index] = this.getNextInt();\r\n\t\tindices[index + 1] = this.getNextInt();\r\n\t\tindices[index + 2] = this.getNextInt();\r\n\t}\r\n\r\n\t/**\r\n\t * Reads a new joint data set for a single joint.\r\n\t * @param weights the target list to contain the weight data.\r\n\t */\r\n\tprivate parseJoint(weights:Array<JointData>):void\r\n\t{\r\n\t\tvar weight:JointData = new JointData();\r\n\t\tweight.index = this.getNextInt();\r\n\t\tweight.joint = this.getNextInt();\r\n\t\tweight.bias = this.getNextNumber();\r\n\t\tweight.pos = this.parseVector3D();\r\n\t\tweights[weight.index] = weight;\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the data for a single vertex.\r\n\t * @param vertexData The list to contain the vertex data.\r\n\t */\r\n\tprivate parseVertex(vertexData:Array<VertexData>):void\r\n\t{\r\n\t\tvar vertex:VertexData = new VertexData();\r\n\t\tvertex.index = this.getNextInt();\r\n\t\tthis.parseUV(vertex);\r\n\t\tvertex.startWeight = this.getNextInt();\r\n\t\tvertex.countWeight = this.getNextInt();\r\n\t\t//\t\t\tif (vertex.countWeight > _maxJointCount) _maxJointCount = vertex.countWeight;\r\n\t\tvertexData[vertex.index] = vertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next uv coordinate.\r\n\t * @param vertexData The vertexData to contain the UV coordinates.\r\n\t */\r\n\tprivate parseUV(vertexData:VertexData):void\r\n\t{\r\n\t\tvar ch:string = this.getNextToken();\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvertexData.s = this.getNextNumber();\r\n\t\tvertexData.t = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the next token in the data stream.\r\n\t */\r\n\tprivate getNextToken():string\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar token:string = \"\";\r\n\r\n\t\twhile (!this._reachedEOF) {\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\r\n\t\t\t\tif (token != MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.skipWhiteSpace();\r\n\t\t\t\tif (token != \"\")\r\n\t\t\t\t\treturn token;\r\n\t\t\t} else\r\n\t\t\t\ttoken += ch;\r\n\r\n\t\t\tif (token == MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\treturn token;\r\n\t\t}\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Skips all whitespace in the data stream.\r\n\t */\r\n\tprivate skipWhiteSpace():void\r\n\t{\r\n\t\tvar ch:string;\r\n\r\n\t\tdo\r\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\r\n\r\n\t\tthis.putBack();\r\n\t}\r\n\r\n\t/**\r\n\t * Skips to the next line.\r\n\t */\r\n\tprivate ignoreLine():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\r\n\t\t\tch = this.getNextChar();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next single character in the data stream.\r\n\t */\r\n\tprivate getNextChar():string\r\n\t{\r\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\r\n\r\n\t\tif (ch == \"\\n\") {\r\n\t\t\t++this._line;\r\n\t\t\tthis._charLineIndex = 0;\r\n\t\t} else if (ch != \"\\r\")\r\n\t\t\t++this._charLineIndex;\r\n\r\n\t\tif (this._parseIndex >= this._textData.length)\r\n\t\t\tthis._reachedEOF = true;\r\n\r\n\t\treturn ch;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next integer in the data stream.\r\n\t */\r\n\tprivate getNextInt():number /*int*/\r\n\t{\r\n\t\tvar i:number = parseInt(this.getNextToken());\r\n\t\tif (isNaN(i))\r\n\t\t\tthis.sendParseError(\"int type\");\r\n\t\treturn i;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next floating point number in the data stream.\r\n\t */\r\n\tprivate getNextNumber():number\r\n\t{\r\n\t\tvar f:number = parseFloat(this.getNextToken());\r\n\t\tif (isNaN(f))\r\n\t\t\tthis.sendParseError(\"float type\");\r\n\t\treturn f;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next 3d vector in the data stream.\r\n\t */\r\n\tprivate parseVector3D():Vector3D\r\n\t{\r\n\t\tvar vec:Vector3D = new Vector3D();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvec.x = -this.getNextNumber();\r\n\t\tvec.y = this.getNextNumber();\r\n\t\tvec.z = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next quaternion in the data stream.\r\n\t */\r\n\tprivate parseQuaternion():Quaternion\r\n\t{\r\n\t\tvar quat:Quaternion = new Quaternion();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tquat.x = this.getNextNumber();\r\n\t\tquat.y = -this.getNextNumber();\r\n\t\tquat.z = -this.getNextNumber();\r\n\r\n\t\t// quat supposed to be unit length\r\n\t\tvar t:number = 1 - quat.x*quat.x - quat.y*quat.y - quat.z*quat.z;\r\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\tvar rotQuat:Quaternion = new Quaternion();\r\n\t\trotQuat.multiply(this._rotationQuat, quat);\r\n\t\treturn rotQuat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the command line data.\r\n\t */\r\n\tprivate parseCMD():void\r\n\t{\r\n\t\t// just ignore the command line property\r\n\t\tthis.parseLiteralstring();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\r\n\t * by double quotes.\r\n\t */\r\n\tprivate parseLiteralstring():string\r\n\t{\r\n\t\tthis.skipWhiteSpace();\r\n\r\n\t\tvar ch:string = this.getNextChar();\r\n\t\tvar str:string = \"\";\r\n\r\n\t\tif (ch != \"\\\"\")\r\n\t\t\tthis.sendParseError(\"\\\"\");\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch != \"\\\"\")\r\n\t\t\t\tstr += ch;\r\n\t\t} while (ch != \"\\\"\");\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an end-of-file error when a premature end of file was encountered.\r\n\t */\r\n\tprivate sendEOFError():void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected end of file\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unexpected token was encountered.\r\n\t * @param expected The token type that was actually expected.\r\n\t */\r\n\tprivate sendParseError(expected:string):void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unknown keyword was encountered.\r\n\t */\r\n\tprivate sendUnknownKeywordError():void\r\n\t{\r\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\r\n\t}\r\n}\r\n\r\nexport = MD5MeshParser;\r\n\r\n\r\nclass VertexData\r\n{\r\n\tpublic index:number /*int*/;\r\n\tpublic s:number;\r\n\tpublic t:number;\r\n\tpublic startWeight:number /*int*/;\r\n\tpublic countWeight:number /*int*/;\r\n}\r\n\r\nclass JointData\r\n{\r\n\tpublic index:number /*int*/;\r\n\tpublic joint:number /*int*/;\r\n\tpublic bias:number;\r\n\tpublic pos:Vector3D;\r\n}\r\n\r\nclass MeshData\r\n{\r\n\tpublic vertexData:Array<VertexData>;\r\n\tpublic weightData:Array<JointData>;\r\n\tpublic indices:Array<number> /*uint*/;\r\n}",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\n\r\n/**\r\n * Max3DSParser provides a parser for the 3ds data type.\r\n */\r\nclass Max3DSParser extends ParserBase\r\n{\r\n\tprivate _byteData:ByteArray;\r\n\r\n\tprivate _textures:Object;\r\n\tprivate _materials:Object;\r\n\tprivate _unfinalized_objects:Object;\r\n\r\n\tprivate _cur_obj_end:number;\r\n\tprivate _cur_obj:ObjectVO;\r\n\r\n\tprivate _cur_mat_end:number;\r\n\tprivate _cur_mat:MaterialVO;\r\n\tprivate _useSmoothingGroups:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>Max3DSParser</code> object.\r\n\t *\r\n\t * @param useSmoothingGroups Determines whether the parser looks for smoothing groups in the 3ds file or assumes uniform smoothing. Defaults to true.\r\n\t */\r\n\tconstructor(useSmoothingGroups:boolean = true)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n\t\tthis._useSmoothingGroups = useSmoothingGroups;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"3ds\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\tvar ba:ByteArray;\r\n\r\n\t\tba = ParserUtils.toByteArray(data);\r\n\t\tif (ba) {\r\n\t\t\tba.position = 0;\r\n\t\t\tif (ba.readShort() == 0x4d4d)\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\tif (resourceDependency.assets.length == 1) {\r\n\t\t\tvar asset:IAsset;\r\n\r\n\t\t\tasset = resourceDependency.assets[0];\r\n\t\t\tif (asset.isAsset(TextureBase)) {\r\n\t\t\t\tvar tex:TextureVO;\r\n\r\n\t\t\t\ttex = this._textures[resourceDependency.id];\r\n\t\t\t\ttex.texture = <Texture2DBase> asset;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\t// TODO: Implement\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (!this._byteData) {\r\n\t\t\tthis._byteData = this._pGetByteData();\r\n\t\t\tthis._byteData.position = 0;\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\tthis._textures = {};\r\n\t\t\tthis._materials = {};\r\n\t\t\tthis._unfinalized_objects = {};\r\n\t\t}\r\n\r\n\t\t// TODO: With this construct, the loop will run no-op for as long\r\n\t\t// as there is time once file has finished reading. Consider a nice\r\n\t\t// way to stop loop when byte array is empty, without putting it in\r\n\t\t// the while-conditional, which will prevent finalizations from\r\n\t\t// happening after the last chunk.\r\n\t\twhile (this._pHasTime()) {\r\n\r\n\t\t\t// If we are currently working on an object, and the most recent chunk was\r\n\t\t\t// the last one in that object, finalize the current object.\r\n\t\t\tif (this._cur_mat && this._byteData.position >= this._cur_mat_end)\r\n\t\t\t\tthis.finalizeCurrentMaterial();\r\n\t\t\telse if (this._cur_obj && this._byteData.position >= this._cur_obj_end) {\r\n\t\t\t\t// Can't finalize at this point, because we have to wait until the full\r\n\t\t\t\t// animation section has been parsed for any potential pivot definitions\r\n\t\t\t\tthis._unfinalized_objects[this._cur_obj.name] = this._cur_obj;\r\n\t\t\t\tthis._cur_obj_end = Number.MAX_VALUE /*uint*/;\r\n\t\t\t\tthis._cur_obj = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._byteData.getBytesAvailable() > 0) {\r\n\t\t\t\tvar cid:number /*uint*/;\r\n\t\t\t\tvar len:number /*uint*/;\r\n\t\t\t\tvar end:number /*uint*/;\r\n\r\n\t\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\t\tlen = this._byteData.readUnsignedInt();\r\n\t\t\t\tend = this._byteData.position + (len - 6);\r\n\r\n\t\t\t\tswitch (cid) {\r\n\t\t\t\t\tcase 0x4D4D: // MAIN3DS\r\n\t\t\t\t\tcase 0x3D3D: // EDIT3DS\r\n\t\t\t\t\tcase 0xB000: // KEYF3DS\r\n\t\t\t\t\t\t// This types are \"container chunks\" and contain only\r\n\t\t\t\t\t\t// sub-chunks (no data on their own.) This means that\r\n\t\t\t\t\t\t// there is nothing more to parse at this point, and\r\n\t\t\t\t\t\t// instead we should progress to the next chunk, which\r\n\t\t\t\t\t\t// will be the first sub-chunk of this one.\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0xAFFF: // MATERIAL\r\n\t\t\t\t\t\tthis._cur_mat_end = end;\r\n\t\t\t\t\t\tthis._cur_mat = this.parseMaterial();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4000: // EDIT_OBJECT\r\n\t\t\t\t\t\tthis._cur_obj_end = end;\r\n\t\t\t\t\t\tthis._cur_obj = new ObjectVO();\r\n\t\t\t\t\t\tthis._cur_obj.name = this.readNulTermstring();\r\n\t\t\t\t\t\tthis._cur_obj.materials = new Array<string>();\r\n\t\t\t\t\t\tthis._cur_obj.materialFaces = {};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4100: // OBJ_TRIMESH\r\n\t\t\t\t\t\tthis._cur_obj.type = Mesh.assetType;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4110: // TRI_VERTEXL\r\n\t\t\t\t\t\tthis.parseVertexList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4120: // TRI_FACELIST\r\n\t\t\t\t\t\tthis.parseFaceList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4140: // TRI_MAPPINGCOORDS\r\n\t\t\t\t\t\tthis.parseUVList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4130: // Face materials\r\n\t\t\t\t\t\tthis.parseFaceMaterialList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4160: // Transform\r\n\t\t\t\t\t\tthis._cur_obj.transform = this.readTransform();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0xB002: // Object animation (including pivot)\r\n\t\t\t\t\t\tthis.parseObjectAnimation(end);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4150: // Smoothing groups\r\n\t\t\t\t\t\tthis.parseSmoothingGroups();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// Skip this (unknown) chunk\r\n\t\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Pause parsing if there were any dependencies found during this\r\n\t\t\t\t// iteration (i.e. if there are any dependencies that need to be\r\n\t\t\t\t// retrieved at this time.)\r\n\t\t\t\tif (this.dependencies.length) {\r\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// More parsing is required if the entire byte array has not yet\r\n\t\t// been read, or if there is a currently non-finalized object in\r\n\t\t// the pipeline.\r\n\t\tif (this._byteData.getBytesAvailable() || this._cur_obj || this._cur_mat) {\r\n\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t} else {\r\n\t\t\tvar name:string;\r\n\r\n\t\t\t// Finalize any remaining objects before ending.\r\n\t\t\tfor (name in this._unfinalized_objects) {\r\n\t\t\t\tvar obj:DisplayObjectContainer;\r\n\t\t\t\tobj = this.constructObject(this._unfinalized_objects[name]);\r\n\t\t\t\tif (obj) {\r\n\t\t\t\t\t//add to the content property\r\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(obj, name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate parseMaterial():MaterialVO\r\n\t{\r\n\t\tvar mat:MaterialVO;\r\n\r\n\t\tmat = new MaterialVO();\r\n\r\n\t\twhile (this._byteData.position < this._cur_mat_end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\t\t\tvar end:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\t\t\tend = this._byteData.position + (len - 6);\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xA000: // Material name\r\n\t\t\t\t\tmat.name = this.readNulTermstring();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA010: // Ambient color\r\n\t\t\t\t\tmat.ambientColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA020: // Diffuse color\r\n\t\t\t\t\tmat.diffuseColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA030: // Specular color\r\n\t\t\t\t\tmat.specularColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA081: // Two-sided, existence indicates \"true\"\r\n\t\t\t\t\tmat.twoSided = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA200: // Main (color) texture\r\n\t\t\t\t\tmat.colorMap = this.parseTexture(end);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA204: // Specular map\r\n\t\t\t\t\tmat.specularMap = this.parseTexture(end);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._byteData.position = end;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn mat;\r\n\t}\r\n\r\n\tprivate parseTexture(end:number /*uint*/):TextureVO\r\n\t{\r\n\t\tvar tex:TextureVO;\r\n\r\n\t\ttex = new TextureVO();\r\n\r\n\t\twhile (this._byteData.position < end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xA300:\r\n\t\t\t\t\ttex.url = this.readNulTermstring();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// Skip this unknown texture sub-chunk\r\n\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._textures[tex.url] = tex;\r\n\t\tthis._pAddDependency(tex.url, new URLRequest(tex.url));\r\n\r\n\t\treturn tex;\r\n\t}\r\n\r\n\tprivate parseVertexList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.verts = new Array<number>(count*3);\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.verts.length;\r\n\t\twhile (i < len) {\r\n\t\t\tvar x:number, y:number, z:number;\r\n\r\n\t\t\tx = this._byteData.readFloat();\r\n\t\t\ty = this._byteData.readFloat();\r\n\t\t\tz = this._byteData.readFloat();\r\n\r\n\t\t\tthis._cur_obj.verts[i++] = x;\r\n\t\t\tthis._cur_obj.verts[i++] = z;\r\n\t\t\tthis._cur_obj.verts[i++] = y;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseFaceList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.indices = new Array<number>(count*3) /*uint*/;\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.indices.length;\r\n\t\twhile (i < len) {\r\n\t\t\tvar i0:number /*uint*/, i1:number /*uint*/, i2:number /*uint*/;\r\n\r\n\t\t\ti0 = this._byteData.readUnsignedShort();\r\n\t\t\ti1 = this._byteData.readUnsignedShort();\r\n\t\t\ti2 = this._byteData.readUnsignedShort();\r\n\r\n\t\t\tthis._cur_obj.indices[i++] = i0;\r\n\t\t\tthis._cur_obj.indices[i++] = i2;\r\n\t\t\tthis._cur_obj.indices[i++] = i1;\r\n\r\n\t\t\t// Skip \"face info\", irrelevant in Away3D\r\n\t\t\tthis._byteData.position += 2;\r\n\t\t}\r\n\r\n\t\tthis._cur_obj.smoothingGroups = new Array<number>(count) /*uint*/;\r\n\t}\r\n\r\n\tprivate parseSmoothingGroups():void\r\n\t{\r\n\t\tvar len:number /*uint*/ = this._cur_obj.indices.length/3;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\t\twhile (i < len) {\r\n\t\t\tthis._cur_obj.smoothingGroups[i] = this._byteData.readUnsignedInt();\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseUVList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.uvs = new Array<number>(count*2);\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.uvs.length;\r\n\t\twhile (i < len) {\r\n\t\t\tthis._cur_obj.uvs[i++] = this._byteData.readFloat();\r\n\t\t\tthis._cur_obj.uvs[i++] = 1.0 - this._byteData.readFloat();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseFaceMaterialList():void\r\n\t{\r\n\t\tvar mat:string;\r\n\t\tvar count:number /*uint*/;\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar faces:Array<number> /*uint*/;\r\n\r\n\t\tmat = this.readNulTermstring();\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\r\n\t\tfaces = new Array<number>(count) /*uint*/;\r\n\t\ti = 0;\r\n\t\twhile (i < faces.length)\r\n\t\t\tfaces[i++] = this._byteData.readUnsignedShort();\r\n\r\n\t\tthis._cur_obj.materials.push(mat);\r\n\t\tthis._cur_obj.materialFaces[mat] = faces;\r\n\t}\r\n\r\n\tprivate parseObjectAnimation(end:number):void\r\n\t{\r\n\t\tvar vo:ObjectVO;\r\n\t\tvar obj:DisplayObjectContainer;\r\n\t\tvar pivot:Vector3D;\r\n\t\tvar name:string;\r\n\t\tvar hier:number /*uint*/;\r\n\r\n\t\t// Pivot defaults to origin\r\n\t\tpivot = new Vector3D;\r\n\r\n\t\twhile (this._byteData.position < end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xb010: // Name/hierarchy\r\n\t\t\t\t\tname = this.readNulTermstring();\r\n\t\t\t\t\tthis._byteData.position += 4;\r\n\t\t\t\t\thier = this._byteData.readShort();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xb013: // Pivot\r\n\t\t\t\t\tpivot.x = this._byteData.readFloat();\r\n\t\t\t\t\tpivot.z = this._byteData.readFloat();\r\n\t\t\t\t\tpivot.y = this._byteData.readFloat();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If name is \"$$$DUMMY\" this is an empty object (e.g. a container)\r\n\t\t// and will be ignored in this version of the parser\r\n\t\t// TODO: Implement containers in 3DS parser.\r\n\t\tif (name != '$$$DUMMY' && this._unfinalized_objects.hasOwnProperty(name)) {\r\n\t\t\tvo = this._unfinalized_objects[name];\r\n\t\t\tobj = this.constructObject(vo, pivot);\r\n\r\n\t\t\tif (obj) {\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(obj, vo.name);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tdelete this._unfinalized_objects[name];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate constructObject(obj:ObjectVO, pivot:Vector3D = null):DisplayObjectContainer\r\n\t{\r\n\t\tif (obj.type == Mesh.assetType) {\r\n\t\t\tvar i:number /*uint*/;\r\n\t\t\tvar sub:TriangleSubGeometry;\r\n\t\t\tvar geom:Geometry;\r\n\t\t\tvar mat:MaterialBase;\r\n\t\t\tvar mesh:Mesh;\r\n\t\t\tvar mtx:Matrix3D;\r\n\t\t\tvar vertices:Array<VertexVO>;\r\n\t\t\tvar faces:Array<FaceVO>;\r\n\r\n\t\t\tif (obj.materials.length > 1)\r\n\t\t\t\tconsole.log(\"The Away3D 3DS parser does not support multiple materials per mesh at this point.\");\r\n\r\n\t\t\t// Ignore empty objects\r\n\t\t\tif (!obj.indices || obj.indices.length == 0)\r\n\t\t\t\treturn null;\r\n\r\n\t\t\tvertices = new Array<VertexVO>(obj.verts.length/3);\r\n\t\t\tfaces = new Array<FaceVO>(obj.indices.length/3);\r\n\r\n\t\t\tthis.prepareData(vertices, faces, obj);\r\n\r\n\t\t\tif (this._useSmoothingGroups)\r\n\t\t\t\tthis.applySmoothGroups(vertices, faces);\r\n\r\n\t\t\tobj.verts = new Array<number>(vertices.length*3);\r\n\t\t\tfor (i = 0; i < vertices.length; i++) {\r\n\t\t\t\tobj.verts[i*3] = vertices[i].x;\r\n\t\t\t\tobj.verts[i*3 + 1] = vertices[i].y;\r\n\t\t\t\tobj.verts[i*3 + 2] = vertices[i].z;\r\n\t\t\t}\r\n\t\t\tobj.indices = new Array<number>(faces.length*3) /*uint*/;\r\n\r\n\t\t\tfor (i = 0; i < faces.length; i++) {\r\n\t\t\t\tobj.indices[i*3] = faces[i].a;\r\n\t\t\t\tobj.indices[i*3 + 1] = faces[i].b;\r\n\t\t\t\tobj.indices[i*3 + 2] = faces[i].c;\r\n\t\t\t}\r\n\r\n\t\t\tif (obj.uvs) {\r\n\t\t\t\t// If the object had UVs to start with, use UVs generated by\r\n\t\t\t\t// smoothing group splitting algorithm. Otherwise those UVs\r\n\t\t\t\t// will be nonsense and should be skipped.\r\n\t\t\t\tobj.uvs = new Array<number>(vertices.length*2);\r\n\t\t\t\tfor (i = 0; i < vertices.length; i++) {\r\n\t\t\t\t\tobj.uvs[i*2] = vertices[i].u;\r\n\t\t\t\t\tobj.uvs[i*2 + 1] = vertices[i].v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tgeom = new Geometry();\r\n\r\n\t\t\t// Construct sub-geometries (potentially splitting buffers)\r\n\t\t\t// and add them to geometry.\r\n\t\t\tsub = new TriangleSubGeometry(true);\r\n\t\t\tsub.updateIndices(obj.indices);\r\n\t\t\tsub.updatePositions(obj.verts);\r\n\t\t\tsub.updateUVs(obj.uvs);\r\n\r\n\t\t\tgeom.addSubGeometry(sub);\r\n\r\n\t\t\tif (obj.materials.length > 0) {\r\n\t\t\t\tvar mname:string;\r\n\t\t\t\tmname = obj.materials[0];\r\n\t\t\t\tmat = this._materials[mname].material;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply pivot translation to geometry if a pivot was\r\n\t\t\t// found while parsing the keyframe chunk earlier.\r\n\t\t\tif (pivot) {\r\n\t\t\t\tif (obj.transform) {\r\n\t\t\t\t\t// If a transform was found while parsing the\r\n\t\t\t\t\t// object chunk, use it to find the local pivot vector\r\n\t\t\t\t\tvar dat:Array<number> = obj.transform.concat();\r\n\t\t\t\t\tdat[12] = 0;\r\n\t\t\t\t\tdat[13] = 0;\r\n\t\t\t\t\tdat[14] = 0;\r\n\t\t\t\t\tmtx = new Matrix3D(dat);\r\n\t\t\t\t\tpivot = mtx.transformVector(pivot);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpivot.scaleBy(-1);\r\n\r\n\t\t\t\tmtx = new Matrix3D();\r\n\t\t\t\tmtx.appendTranslation(pivot.x, pivot.y, pivot.z);\r\n\t\t\t\tgeom.applyTransformation(mtx);\r\n\t\t\t}\r\n\r\n\t\t\t// Apply transformation to geometry if a transformation\r\n\t\t\t// was found while parsing the object chunk earlier.\r\n\t\t\tif (obj.transform) {\r\n\t\t\t\tmtx = new Matrix3D(obj.transform);\r\n\t\t\t\tmtx.invert();\r\n\t\t\t\tgeom.applyTransformation(mtx);\r\n\t\t\t}\r\n\r\n\t\t\t// Final transform applied to geometry. Finalize the geometry,\r\n\t\t\t// which will no longer be modified after this point.\r\n\t\t\tthis._pFinalizeAsset(geom, obj.name.concat('_geom'));\r\n\r\n\t\t\t// Build mesh and return it\r\n\t\t\tmesh = new Mesh(geom, mat);\r\n\t\t\tmesh.transform.matrix3D = new Matrix3D(obj.transform);\r\n\t\t\treturn mesh;\r\n\t\t}\r\n\r\n\t\t// If reached, unknown\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate prepareData(vertices:Array<VertexVO>, faces:Array<FaceVO>, obj:ObjectVO):void\r\n\t{\r\n\t\t// convert raw ObjectVO's data to structured VertexVO and FaceVO\r\n\t\tvar i:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar k:number /*int*/;\r\n\t\tvar len:number /*int*/ = obj.verts.length;\r\n\t\tfor (i = 0, j = 0, k = 0; i < len;) {\r\n\t\t\tvar v:VertexVO = new VertexVO;\r\n\t\t\tv.x = obj.verts[i++];\r\n\t\t\tv.y = obj.verts[i++];\r\n\t\t\tv.z = obj.verts[i++];\r\n\t\t\tif (obj.uvs) {\r\n\t\t\t\tv.u = obj.uvs[j++];\r\n\t\t\t\tv.v = obj.uvs[j++];\r\n\t\t\t}\r\n\t\t\tvertices[k++] = v;\r\n\t\t}\r\n\t\tlen = obj.indices.length;\r\n\t\tfor (i = 0, k = 0; i < len;) {\r\n\t\t\tvar f:FaceVO = new FaceVO();\r\n\t\t\tf.a = obj.indices[i++];\r\n\t\t\tf.b = obj.indices[i++];\r\n\t\t\tf.c = obj.indices[i++];\r\n\t\t\tf.smoothGroup = obj.smoothingGroups[k] || 0;\r\n\t\t\tfaces[k++] = f;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate applySmoothGroups(vertices:Array<VertexVO>, faces:Array<FaceVO>):void\r\n\t{\r\n\t\t// clone vertices according to following rule:\r\n\t\t// clone if vertex's in faces from groups 1+2 and 3\r\n\t\t// don't clone if vertex's in faces from groups 1+2, 3 and 1+3\r\n\r\n\t\tvar i:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar k:number /*int*/;\r\n\t\tvar l:number /*int*/;\r\n\t\tvar len:number /*int*/;\r\n\t\tvar numVerts:number /*uint*/ = vertices.length;\r\n\t\tvar numFaces:number /*uint*/ = faces.length;\r\n\r\n\t\t// extract groups data for vertices\r\n\t\tvar vGroups:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\r\n\t\tfor (i = 0; i < numVerts; i++)\r\n\t\t\tvGroups[i] = new Array<number>() /*uint*/;\r\n\t\tfor (i = 0; i < numFaces; i++) {\r\n\t\t\tvar face:FaceVO = faces[i];\r\n\t\t\tfor (j = 0; j < 3; j++) {\r\n\t\t\t\tvar groups:Array<number> /*uint*/ = vGroups[(j == 0)? face.a : ((j == 1)? face.b : face.c)];\r\n\t\t\t\tvar group:number /*uint*/ = face.smoothGroup;\r\n\t\t\t\tfor (k = groups.length - 1; k >= 0; k--) {\r\n\t\t\t\t\tif ((group & groups[k]) > 0) {\r\n\t\t\t\t\t\tgroup |= groups[k];\r\n\t\t\t\t\t\tgroups.splice(k, 1);\r\n\t\t\t\t\t\tk = groups.length - 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tgroups.push(group);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// clone vertices\r\n\t\tvar vClones:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\r\n\t\tfor (i = 0; i < numVerts; i++) {\r\n\t\t\tif ((len = vGroups[i].length) < 1)\r\n\t\t\t\tcontinue;\r\n\t\t\tvar clones:Array<number> /*uint*/ = new Array<number>(len) /*uint*/;\r\n\t\t\tvClones[i] = clones;\r\n\t\t\tclones[0] = i;\r\n\t\t\tvar v0:VertexVO = vertices[i];\r\n\t\t\tfor (j = 1; j < len; j++) {\r\n\t\t\t\tvar v1:VertexVO = new VertexVO;\r\n\t\t\t\tv1.x = v0.x;\r\n\t\t\t\tv1.y = v0.y;\r\n\t\t\t\tv1.z = v0.z;\r\n\t\t\t\tv1.u = v0.u;\r\n\t\t\t\tv1.v = v0.v;\r\n\t\t\t\tclones[j] = vertices.length;\r\n\t\t\t\tvertices.push(v1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tnumVerts = vertices.length;\r\n\r\n\t\tfor (i = 0; i < numFaces; i++) {\r\n\t\t\tface = faces[i];\r\n\t\t\tgroup = face.smoothGroup;\r\n\t\t\tfor (j = 0; j < 3; j++) {\r\n\t\t\t\tk = (j == 0)? face.a : ((j == 1)? face.b : face.c);\r\n\t\t\t\tgroups = vGroups[k];\r\n\t\t\t\tlen = groups.length;\r\n\t\t\t\tclones = vClones[k];\r\n\t\t\t\tfor (l = 0; l < len; l++) {\r\n\t\t\t\t\tif (((group == 0) && (groups[l] == 0)) || ((group & groups[l]) > 0)) {\r\n\t\t\t\t\t\tvar index:number /*uint*/ = clones[l];\r\n\t\t\t\t\t\tif (group == 0) {\r\n\t\t\t\t\t\t\t// vertex is unique if no smoothGroup found\r\n\t\t\t\t\t\t\tgroups.splice(l, 1);\r\n\t\t\t\t\t\t\tclones.splice(l, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (j == 0)\r\n\t\t\t\t\t\t\tface.a = index; else if (j == 1)\r\n\t\t\t\t\t\t\tface.b = index; else\r\n\t\t\t\t\t\t\tface.c = index;\r\n\t\t\t\t\t\tl = len;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate finalizeCurrentMaterial():void\r\n\t{\r\n\t\tvar mat:MethodMaterial;\r\n\r\n\t\tif (this._cur_mat.colorMap)\r\n\t\t\tmat = new MethodMaterial(this._cur_mat.colorMap.texture || DefaultMaterialManager.getDefaultTexture());\r\n\t\telse\r\n\t\t\tmat = new MethodMaterial(this._cur_mat.ambientColor);\r\n\r\n\t\tmat.diffuseColor = this._cur_mat.diffuseColor;\r\n\t\tmat.specularColor = this._cur_mat.specularColor;\r\n\r\n\t\tif (this.materialMode >= 2)\r\n\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS\r\n\r\n\t\tmat.bothSides = this._cur_mat.twoSided;\r\n\r\n\t\tthis._pFinalizeAsset(mat, this._cur_mat.name);\r\n\r\n\t\tthis._materials[this._cur_mat.name] = this._cur_mat;\r\n\t\tthis._cur_mat.material = mat;\r\n\r\n\t\tthis._cur_mat = null;\r\n\t}\r\n\r\n\tprivate readNulTermstring():string\r\n\t{\r\n\t\tvar chr:number /*int*/;\r\n\t\tvar str:string = \"\";\r\n\r\n\t\twhile ((chr = this._byteData.readUnsignedByte()) > 0)\r\n\t\t\tstr += String.fromCharCode(chr);\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\tprivate readTransform():Array<number>\r\n\t{\r\n\t\tvar data:Array<number>;\r\n\r\n\t\tdata = new Array<number>(16);\r\n\r\n\t\t// X axis\r\n\t\tdata[0] = this._byteData.readFloat(); // X\r\n\t\tdata[2] = this._byteData.readFloat(); // Z\r\n\t\tdata[1] = this._byteData.readFloat(); // Y\r\n\t\tdata[3] = 0;\r\n\r\n\t\t// Z axis\r\n\t\tdata[8] = this._byteData.readFloat(); // X\r\n\t\tdata[10] = this._byteData.readFloat(); // Z\r\n\t\tdata[9] = this._byteData.readFloat(); // Y\r\n\t\tdata[11] = 0;\r\n\r\n\t\t// Y Axis\r\n\t\tdata[4] = this._byteData.readFloat(); // X\r\n\t\tdata[6] = this._byteData.readFloat(); // Z\r\n\t\tdata[5] = this._byteData.readFloat(); // Y\r\n\t\tdata[7] = 0;\r\n\r\n\t\t// Translation\r\n\t\tdata[12] = this._byteData.readFloat(); // X\r\n\t\tdata[14] = this._byteData.readFloat(); // Z\r\n\t\tdata[13] = this._byteData.readFloat(); // Y\r\n\t\tdata[15] = 1;\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tprivate readColor():number /*int*/\r\n\t{\r\n\t\tvar cid:number /*int*/;\r\n\t\tvar len:number /*int*/;\r\n\t\tvar r:number /*int*/, g:number /*int*/, b:number /*int*/;\r\n\r\n\t\tcid = this._byteData.readUnsignedShort();\r\n\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\tswitch (cid) {\r\n\t\t\tcase 0x0010: // Floats\r\n\t\t\t\tr = this._byteData.readFloat()*255;\r\n\t\t\t\tg = this._byteData.readFloat()*255;\r\n\t\t\t\tb = this._byteData.readFloat()*255;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0x0011: // 24-bit color\r\n\t\t\t\tr = this._byteData.readUnsignedByte();\r\n\t\t\t\tg = this._byteData.readUnsignedByte();\r\n\t\t\t\tb = this._byteData.readUnsignedByte();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn (r << 16) | (g << 8) | b;\r\n\t}\r\n}\r\n\r\nexport = Max3DSParser;\r\n\r\n/**\r\n *\r\n */\r\nclass FaceVO\r\n{\r\n\tpublic a:number /*int*/;\r\n\tpublic b:number /*int*/;\r\n\tpublic c:number /*int*/;\r\n\tpublic smoothGroup:number /*int*/;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass MaterialVO\r\n{\r\n\tpublic name:string;\r\n\tpublic ambientColor:number /*int*/;\r\n\tpublic diffuseColor:number /*int*/;\r\n\tpublic specularColor:number /*int*/;\r\n\tpublic twoSided:boolean;\r\n\tpublic colorMap:TextureVO;\r\n\tpublic specularMap:TextureVO;\r\n\tpublic material:MaterialBase;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass ObjectVO\r\n{\r\n\tpublic name:string;\r\n\tpublic type:string;\r\n\tpublic pivotX:number;\r\n\tpublic pivotY:number;\r\n\tpublic pivotZ:number;\r\n\tpublic transform:Array<number>;\r\n\tpublic verts:Array<number>;\r\n\tpublic indices:Array<number> /*int*/;\r\n\tpublic uvs:Array<number>;\r\n\tpublic materialFaces:Object;\r\n\tpublic materials:Array<string>;\r\n\tpublic smoothingGroups:Array<number> /*int*/;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass TextureVO\r\n{\r\n\tpublic url:string;\r\n\tpublic texture:Texture2DBase;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass VertexVO\r\n{\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n\tpublic z:number;\r\n\tpublic u:number;\r\n\tpublic v:number;\r\n\tpublic normal:Vector3D;\r\n\tpublic tangent:Vector3D;\r\n}",
    "import TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\r\n\r\n/**\r\n * OBJParser provides a parser for the OBJ data type.\r\n */\r\nclass OBJParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _charIndex:number;\r\n\tprivate _oldIndex:number;\r\n\tprivate _stringLength:number;\r\n\tprivate _currentObject:ObjectGroup;\r\n\tprivate _currentGroup:Group;\r\n\tprivate _currentMaterialGroup:MaterialGroup;\r\n\tprivate _objects:Array<ObjectGroup>;\r\n\tprivate _materialIDs:string[];\r\n\tprivate _materialLoaded:Array<LoadedMaterial>;\r\n\tprivate _materialSpecularData:Array<SpecularData>;\r\n\tprivate _meshes:Array<Mesh>;\r\n\tprivate _lastMtlID:string;\r\n\tprivate _objectIndex:number;\r\n\tprivate _realIndices;\r\n\tprivate _vertexIndex:number;\r\n\tprivate _vertices:Array<Vertex>;\r\n\tprivate _vertexNormals:Array<Vertex>;\r\n\tprivate _uvs:Array<UV>;\r\n\tprivate _scale:number;\r\n\tprivate _mtlLib:boolean;\r\n\tprivate _mtlLibLoaded:boolean = true;\r\n\tprivate _activeMaterialID:string = \"\";\r\n\r\n\t/**\r\n\t * Creates a new OBJParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(scale:number = 1)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._scale = scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Scaling factor applied directly to vertices data\r\n\t * @param value The scaling factor.\r\n\t */\r\n\tpublic set scale(value:number)\r\n\t{\r\n\t\tthis._scale = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"obj\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\tvar content:string = ParserUtils.toString(data);\r\n\t\tvar hasV:boolean = false;\r\n\t\tvar hasF:boolean = false;\r\n\r\n\t\tif (content) {\r\n\t\t\thasV = content.indexOf(\"\\nv \") != -1;\r\n\t\t\thasF = content.indexOf(\"\\nf \") != -1;\r\n\t\t}\r\n\r\n\t\treturn hasV && hasF;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.id == 'mtl') {\r\n\t\t\tvar str:string = ParserUtils.toString(resourceDependency.data);\r\n\t\t\tthis.parseMtl(str);\r\n\r\n\t\t} else {\r\n\t\t\tvar asset:IAsset;\r\n\r\n\t\t\tif (resourceDependency.assets.length != 1) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tasset = resourceDependency.assets[0];\r\n\r\n\t\t\tif (asset.isAsset(TextureBase)) {\r\n\r\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\t\tlm.materialID = resourceDependency.id;\r\n\t\t\t\tlm.texture = <Texture2DBase> asset;\r\n\r\n\t\t\t\tthis._materialLoaded.push(lm);\r\n\r\n\t\t\t\tif (this._meshes.length > 0) {\r\n\t\t\t\t\tthis.applyMaterial(lm);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.id == \"mtl\") {\r\n\t\t\tthis._mtlLib = false;\r\n\t\t\tthis._mtlLibLoaded = false;\r\n\t\t} else {\r\n\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\tlm.materialID = resourceDependency.id;\r\n\t\t\tthis._materialLoaded.push(lm);\r\n\t\t}\r\n\r\n\t\tif (this._meshes.length > 0)\r\n\t\t\tthis.applyMaterial(lm);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar line:string;\r\n\t\tvar creturn:string = String.fromCharCode(10);\r\n\t\tvar trunk;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\t// Merge linebreaks that are immediately preceeded by\r\n\t\t\t// the \"escape\" backward slash into single lines.\r\n\t\t\tthis._textData = this._textData.replace(/\\\\[\\r\\n]+\\s*/gm, ' ');\r\n\t\t}\r\n\r\n\t\tif (this._textData.indexOf(creturn) == -1)\r\n\t\t\tcreturn = String.fromCharCode(13);\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._startedParsing = true;\r\n\t\t\tthis._vertices = new Array<Vertex>();\r\n\t\t\tthis._vertexNormals = new Array<Vertex>();\r\n\t\t\tthis._materialIDs = new Array<string>();\r\n\t\t\tthis._materialLoaded = new Array<LoadedMaterial>();\r\n\t\t\tthis._meshes = new Array<Mesh>();\r\n\t\t\tthis._uvs = new Array<UV>();\r\n\t\t\tthis._stringLength = this._textData.length;\r\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, 0);\r\n\t\t\tthis._oldIndex = 0;\r\n\t\t\tthis._objects = new Array<ObjectGroup>();\r\n\t\t\tthis._objectIndex = 0;\r\n\t\t}\r\n\r\n\t\twhile (this._charIndex < this._stringLength && this._pHasTime()) {\r\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, this._oldIndex);\r\n\r\n\t\t\tif (this._charIndex == -1)\r\n\t\t\t\tthis._charIndex = this._stringLength;\r\n\r\n\t\t\tline = this._textData.substring(this._oldIndex, this._charIndex);\r\n\t\t\tline = line.split('\\r').join(\"\");\r\n\t\t\tline = line.replace(\"  \", \" \");\r\n\t\t\ttrunk = line.split(\" \");\r\n\t\t\tthis._oldIndex = this._charIndex + 1;\r\n\t\t\tthis.parseLine(trunk);\r\n\r\n\t\t\t// If whatever was parsed on this line resulted in the\r\n\t\t\t// parsing being paused to retrieve dependencies, break\r\n\t\t\t// here and do not continue parsing until un-paused.\r\n\t\t\tif (this.parsingPaused) {\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._charIndex >= this._stringLength) {\r\n\r\n\t\t\tif (this._mtlLib && !this._mtlLibLoaded) {\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\r\n\t\t\tthis.translate();\r\n\t\t\tthis.applyMaterials();\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a single line in the OBJ file.\r\n\t */\r\n\tprivate parseLine(trunk)\r\n\t{\r\n\t\tswitch (trunk[0]) {\r\n\r\n\t\t\tcase \"mtllib\":\r\n\r\n\t\t\t\tthis._mtlLib = true;\r\n\t\t\t\tthis._mtlLibLoaded = false;\r\n\t\t\t\tthis.loadMtl(trunk[1]);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"g\":\r\n\r\n\t\t\t\tthis.createGroup(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"o\":\r\n\r\n\t\t\t\tthis.createObject(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"usemtl\":\r\n\r\n\t\t\t\tif (this._mtlLib) {\r\n\r\n\t\t\t\t\tif (!trunk[1])\r\n\t\t\t\t\t\ttrunk[1] = \"def000\";\r\n\r\n\t\t\t\t\tthis._materialIDs.push(trunk[1]);\r\n\t\t\t\t\tthis._activeMaterialID = trunk[1];\r\n\r\n\t\t\t\t\tif (this._currentGroup)\r\n\t\t\t\t\t\tthis._currentGroup.materialID = this._activeMaterialID;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"v\":\r\n\r\n\t\t\t\tthis.parseVertex(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"vt\":\r\n\r\n\t\t\t\tthis.parseUV(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"vn\":\r\n\r\n\t\t\t\tthis.parseVertexNormal(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"f\":\r\n\r\n\t\t\t\tthis.parseFace(trunk);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the parsed data into an Away3D scenegraph structure\r\n\t */\r\n\tprivate translate()\r\n\t{\r\n\t\tfor (var objIndex:number = 0; objIndex < this._objects.length; ++objIndex) {\r\n\t\t\tvar groups:Array<Group> = this._objects[objIndex].groups;\r\n\t\t\tvar numGroups:number = groups.length;\r\n\t\t\tvar materialGroups:Array<MaterialGroup>;\r\n\t\t\tvar numMaterialGroups:number;\r\n\t\t\tvar geometry:Geometry;\r\n\t\t\tvar mesh:Mesh;\r\n\r\n\t\t\tvar m:number;\r\n\t\t\tvar sm:number;\r\n\t\t\tvar bmMaterial:MethodMaterial;\r\n\r\n\t\t\tfor (var g:number = 0; g < numGroups; ++g) {\r\n\t\t\t\tgeometry = new Geometry();\r\n\t\t\t\tmaterialGroups = groups[g].materialGroups;\r\n\t\t\t\tnumMaterialGroups = materialGroups.length;\r\n\r\n\t\t\t\tfor (m = 0; m < numMaterialGroups; ++m)\r\n\t\t\t\t\tthis.translateMaterialGroup(materialGroups[m], geometry);\r\n\r\n\t\t\t\tif (geometry.subGeometries.length == 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Finalize and force type-based name\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> geometry);//, \"\");\r\n\r\n\t\t\t\tbmMaterial = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\r\n\t\t\t\t//check for multipass\r\n\t\t\t\tif (this.materialMode >= 2)\r\n\t\t\t\t\tbmMaterial.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\tmesh = new Mesh(geometry, bmMaterial);\r\n\r\n\t\t\t\tif (this._objects[objIndex].name) {\r\n\t\t\t\t\t// this is a full independent object ('o' tag in OBJ file)\r\n\t\t\t\t\tmesh.name = this._objects[objIndex].name;\r\n\r\n\t\t\t\t} else if (groups[g].name) {\r\n\r\n\t\t\t\t\t// this is a group so the sub groups contain the actual mesh object names ('g' tag in OBJ file)\r\n\t\t\t\t\tmesh.name = groups[g].name;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// No name stored. Use empty string which will force it\r\n\t\t\t\t\t// to be overridden by finalizeAsset() to type default.\r\n\t\t\t\t\tmesh.name = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._meshes.push(mesh);\r\n\r\n\t\t\t\tif (groups[g].materialID != \"\")\r\n\t\t\t\t\tbmMaterial.name = groups[g].materialID + \"~\" + mesh.name; else\r\n\t\t\t\t\tbmMaterial.name = this._lastMtlID + \"~\" + mesh.name;\r\n\r\n\t\t\t\tif (mesh.subMeshes.length > 1) {\r\n\t\t\t\t\tfor (sm = 1; sm < mesh.subMeshes.length; ++sm)\r\n\t\t\t\t\t\tmesh.subMeshes[sm].material = bmMaterial;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> mesh);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Translates an obj's material group to a subgeometry.\r\n\t * @param materialGroup The material group data to convert.\r\n\t * @param geometry The Geometry to contain the converted SubGeometry.\r\n\t */\r\n\tprivate translateMaterialGroup(materialGroup:MaterialGroup, geometry:Geometry)\r\n\t{\r\n\t\tvar faces:Array<FaceData> = materialGroup.faces;\r\n\t\tvar face:FaceData;\r\n\t\tvar numFaces:number = faces.length;\r\n\t\tvar numVerts:number;\r\n\t\tvar sub:TriangleSubGeometry;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\tvar normals:Array<number> = new Array<number>();\r\n\t\tvar indices:Array<number> /*uint*/ = new Array<number>();\r\n\r\n\t\tthis._realIndices = [];\r\n\t\tthis._vertexIndex = 0;\r\n\r\n\t\tvar j:number;\r\n\t\tfor (var i:number = 0; i < numFaces; ++i) {\r\n\r\n\t\t\tface = faces[i];\r\n\t\t\tnumVerts = face.indexIds.length - 1;\r\n\r\n\t\t\tfor (j = 1; j < numVerts; ++j) {\r\n\r\n\t\t\t\tthis.translateVertexData(face, j, vertices, uvs, indices, normals);\r\n\t\t\t\tthis.translateVertexData(face, 0, vertices, uvs, indices, normals);\r\n\t\t\t\tthis.translateVertexData(face, j + 1, vertices, uvs, indices, normals);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (vertices.length > 0) {\r\n\t\t\tsub = new TriangleSubGeometry(true);\r\n\t\t\tsub.autoDeriveNormals = normals.length? false : true;\r\n\t\t\tsub.updateIndices(indices);\r\n\t\t\tsub.updatePositions(vertices);\r\n\t\t\tsub.updateVertexNormals(normals);\r\n\t\t\tsub.updateUVs(uvs);\r\n\r\n\t\t\tgeometry.addSubGeometry(sub);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate translateVertexData(face:FaceData, vertexIndex:number, vertices:Array<number>, uvs:Array<number>, indices:Array<number> /*uint*/, normals:Array<number>)\r\n\t{\r\n\t\tvar index:number;\r\n\t\tvar vertex:Vertex;\r\n\t\tvar vertexNormal:Vertex;\r\n\t\tvar uv:UV;\r\n\r\n\t\tif (!this._realIndices[face.indexIds[vertexIndex]]) {\r\n\r\n\t\t\tindex = this._vertexIndex;\r\n\t\t\tthis._realIndices[face.indexIds[vertexIndex]] = ++this._vertexIndex;\r\n\t\t\tvertex = this._vertices[face.vertexIndices[vertexIndex] - 1];\r\n\t\t\tvertices.push(vertex.x*this._scale, vertex.y*this._scale, vertex.z*this._scale);\r\n\r\n\t\t\tif (face.normalIndices.length > 0) {\r\n\t\t\t\tvertexNormal = this._vertexNormals[face.normalIndices[vertexIndex] - 1];\r\n\t\t\t\tnormals.push(vertexNormal.x, vertexNormal.y, vertexNormal.z);\r\n\t\t\t}\r\n\r\n\t\t\tif (face.uvIndices.length > 0) {\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tuv = this._uvs[face.uvIndices[vertexIndex] - 1];\r\n\t\t\t\t\tuvs.push(uv.u, uv.v);\r\n\r\n\t\t\t\t} catch (e) {\r\n\r\n\t\t\t\t\tswitch (vertexIndex) {\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\tuvs.push(0, 1);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\tuvs.push(.5, 0);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\tuvs.push(1, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tindex = this._realIndices[face.indexIds[vertexIndex]] - 1;\r\n\t\t}\r\n\r\n\t\tindices.push(index);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new object group.\r\n\t * @param trunk The data block containing the object tag and its parameters\r\n\t */\r\n\tprivate createObject(trunk)\r\n\t{\r\n\t\tthis._currentGroup = null;\r\n\t\tthis._currentMaterialGroup = null;\r\n\t\tthis._objects.push(this._currentObject = new ObjectGroup());\r\n\r\n\t\tif (trunk)\r\n\t\t\tthis._currentObject.name = trunk[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new group.\r\n\t * @param trunk The data block containing the group tag and its parameters\r\n\t */\r\n\tprivate createGroup(trunk)\r\n\t{\r\n\t\tif (!this._currentObject)\r\n\t\t\tthis.createObject(null);\r\n\t\tthis._currentGroup = new Group();\r\n\r\n\t\tthis._currentGroup.materialID = this._activeMaterialID;\r\n\r\n\t\tif (trunk)\r\n\t\t\tthis._currentGroup.name = trunk[1];\r\n\t\tthis._currentObject.groups.push(this._currentGroup);\r\n\r\n\t\tthis.createMaterialGroup(null);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new material group.\r\n\t * @param trunk The data block containing the material tag and its parameters\r\n\t */\r\n\tprivate createMaterialGroup(trunk)\r\n\t{\r\n\t\tthis._currentMaterialGroup = new MaterialGroup();\r\n\t\tif (trunk)\r\n\t\t\tthis._currentMaterialGroup.url = trunk[1];\r\n\t\tthis._currentGroup.materialGroups.push(this._currentMaterialGroup);\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next vertex coordinates.\r\n\t * @param trunk The data block containing the vertex tag and its parameters\r\n\t */\r\n\tprivate parseVertex(trunk)\r\n\t{\r\n\t\t//for the very rare cases of other delimiters/charcodes seen in some obj files\r\n\r\n\t\tvar v1:number, v2:number , v3:number;\r\n\t\tif (trunk.length > 4) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\r\n\t\t\tv1 = <number> nTrunk[0];\r\n\t\t\tv2 = <number> nTrunk[1];\r\n\t\t\tv3 = <number> -nTrunk[2];\r\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\r\n\r\n\t\t} else {\r\n\t\t\tv1 = <number> parseFloat(trunk[1]);\r\n\t\t\tv2 = <number> parseFloat(trunk[2]);\r\n\t\t\tv3 = <number> -parseFloat(trunk[3]);\r\n\r\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next uv coordinates.\r\n\t * @param trunk The data block containing the uv tag and its parameters\r\n\t */\r\n\tprivate parseUV(trunk)\r\n\t{\r\n\t\tif (trunk.length > 3) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\t\t\tthis._uvs.push(new UV(nTrunk[0], 1 - nTrunk[1]));\r\n\r\n\t\t} else {\r\n\t\t\tthis._uvs.push(new UV(parseFloat(trunk[1]), 1 - parseFloat(trunk[2])));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next vertex normal coordinates.\r\n\t * @param trunk The data block containing the vertex normal tag and its parameters\r\n\t */\r\n\tprivate parseVertexNormal(trunk)\r\n\t{\r\n\t\tif (trunk.length > 4) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\t\t\tthis._vertexNormals.push(new Vertex(nTrunk[0], nTrunk[1], -nTrunk[2]));\r\n\r\n\t\t} else {\r\n\t\t\tthis._vertexNormals.push(new Vertex(parseFloat(trunk[1]), parseFloat(trunk[2]), -parseFloat(trunk[3])));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next face's indices.\r\n\t * @param trunk The data block containing the face tag and its parameters\r\n\t */\r\n\tprivate parseFace(trunk)\r\n\t{\r\n\t\tvar len:number = trunk.length;\r\n\t\tvar face:FaceData = new FaceData();\r\n\r\n\t\tif (!this._currentGroup) {\r\n\t\t\tthis.createGroup(null);\r\n\t\t}\r\n\r\n\t\tvar indices;\r\n\t\tfor (var i:number = 1; i < len; ++i) {\r\n\r\n\t\t\tif (trunk[i] == \"\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tindices = trunk[i].split(\"/\");\r\n\t\t\tface.vertexIndices.push(this.parseIndex(parseInt(indices[0]), this._vertices.length));\r\n\r\n\t\t\tif (indices[1] && String(indices[1]).length > 0)\r\n\t\t\t\tface.uvIndices.push(this.parseIndex(parseInt(indices[1]), this._uvs.length));\r\n\r\n\t\t\tif (indices[2] && String(indices[2]).length > 0)\r\n\t\t\t\tface.normalIndices.push(this.parseIndex(parseInt(indices[2]), this._vertexNormals.length));\r\n\r\n\t\t\tface.indexIds.push(trunk[i]);\r\n\t\t}\r\n\r\n\t\tthis._currentMaterialGroup.faces.push(face);\r\n\t}\r\n\r\n\t/**\r\n\t * This is a hack around negative face coords\r\n\t */\r\n\tprivate parseIndex(index:number, length:number):number\r\n\t{\r\n\t\tif (index < 0)\r\n\t\t\treturn index + length + 1; else\r\n\t\t\treturn index;\r\n\t}\r\n\r\n\tprivate parseMtl(data:string)\r\n\t{\r\n\t\tvar materialDefinitions = data.split('newmtl');\r\n\t\tvar lines;\r\n\t\tvar trunk;\r\n\t\tvar j:number;\r\n\r\n\t\tvar basicSpecularMethod:SpecularBasicMethod;\r\n\t\tvar useSpecular:boolean;\r\n\t\tvar useColor:boolean;\r\n\t\tvar diffuseColor:number;\r\n\t\tvar color:number;\r\n\t\tvar specularColor:number;\r\n\t\tvar specular:number;\r\n\t\tvar alpha:number;\r\n\t\tvar mapkd:string;\r\n\r\n\t\tfor (var i:number = 0; i < materialDefinitions.length; ++i) {\r\n\r\n\r\n\t\t\tlines = (materialDefinitions[i].split('\\r')).join(\"\").split('\\n');\r\n\t\t\t//lines = (materialDefinitions[i].split('\\r') as Array).join(\"\").split('\\n');\r\n\r\n\t\t\tif (lines.length == 1)\r\n\t\t\t\tlines = materialDefinitions[i].split(String.fromCharCode(13));\r\n\r\n\t\t\tdiffuseColor = color = specularColor = 0xFFFFFF;\r\n\t\t\tspecular = 0;\r\n\t\t\tuseSpecular = false;\r\n\t\t\tuseColor = false;\r\n\t\t\talpha = 1;\r\n\t\t\tmapkd = \"\";\r\n\r\n\t\t\tfor (j = 0; j < lines.length; ++j) {\r\n\r\n\t\t\t\tlines[j] = lines[j].replace(/\\s+$/, \"\");\r\n\r\n\t\t\t\tif (lines[j].substring(0, 1) != \"#\" && (j == 0 || lines[j] != \"\")) {\r\n\t\t\t\t\ttrunk = lines[j].split(\" \");\r\n\r\n\t\t\t\t\tif (String(trunk[0]).charCodeAt(0) == 9 || String(trunk[0]).charCodeAt(0) == 32)\r\n\t\t\t\t\t\ttrunk[0] = trunk[0].substring(1, trunk[0].length);\r\n\r\n\t\t\t\t\tif (j == 0) {\r\n\t\t\t\t\t\tthis._lastMtlID = trunk.join(\"\");\r\n\t\t\t\t\t\tthis._lastMtlID = (this._lastMtlID == \"\")? \"def000\" : this._lastMtlID;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tswitch (trunk[0]) {\r\n\r\n\t\t\t\t\t\t\tcase \"Ka\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3])))\r\n\t\t\t\t\t\t\t\t\tcolor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Ks\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\r\n\t\t\t\t\t\t\t\t\tspecularColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\t\tuseSpecular = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Ns\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\r\n\t\t\t\t\t\t\t\t\tspecular = Number(trunk[1])*0.001;\r\n\t\t\t\t\t\t\t\tif (specular == 0)\r\n\t\t\t\t\t\t\t\t\tuseSpecular = false;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Kd\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\r\n\t\t\t\t\t\t\t\t\tdiffuseColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\t\tuseColor = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"tr\":\r\n\t\t\t\t\t\t\tcase \"d\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\r\n\t\t\t\t\t\t\t\t\talpha = Number(trunk[1]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"map_Kd\":\r\n\t\t\t\t\t\t\t\tmapkd = this.parseMapKdString(trunk);\r\n\t\t\t\t\t\t\t\tmapkd = mapkd.replace(/\\\\/g, \"/\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (mapkd != \"\") {\r\n\r\n\t\t\t\tif (useSpecular) {\r\n\r\n\t\t\t\t\tbasicSpecularMethod = new SpecularBasicMethod();\r\n\t\t\t\t\tbasicSpecularMethod.specularColor = specularColor;\r\n\t\t\t\t\tbasicSpecularMethod.specular = specular;\r\n\r\n\t\t\t\t\tvar specularData:SpecularData = new SpecularData();\r\n\t\t\t\t\tspecularData.alpha = alpha;\r\n\t\t\t\t\tspecularData.basicSpecularMethod = basicSpecularMethod;\r\n\t\t\t\t\tspecularData.materialID = this._lastMtlID;\r\n\r\n\t\t\t\t\tif (!this._materialSpecularData)\r\n\t\t\t\t\t\tthis._materialSpecularData = new Array<SpecularData>();\r\n\r\n\t\t\t\t\tthis._materialSpecularData.push(specularData);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pAddDependency(this._lastMtlID, new URLRequest(mapkd));\r\n\r\n\t\t\t} else if (useColor && !isNaN(color)) {\r\n\r\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\t\tlm.materialID = this._lastMtlID;\r\n\r\n\t\t\t\tif (alpha == 0)\r\n\t\t\t\t\tconsole.log(\"Warning: an alpha value of 0 was found in mtl color tag (Tr or d) ref:\" + this._lastMtlID + \", mesh(es) using it will be invisible!\");\r\n\r\n\t\t\t\tvar cm:MethodMaterial;\r\n\r\n\t\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\t\tcm = new MethodMaterial(color);\r\n\r\n\t\t\t\t\tvar colorMat:MethodMaterial = <MethodMaterial> cm;\r\n\r\n\t\t\t\t\tcolorMat.alpha = alpha;\r\n\t\t\t\t\tcolorMat.diffuseColor = diffuseColor;\r\n\t\t\t\t\tcolorMat.repeat = true;\r\n\r\n\t\t\t\t\tif (useSpecular) {\r\n\t\t\t\t\t\tcolorMat.specularColor = specularColor;\r\n\t\t\t\t\t\tcolorMat.specular = specular;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcm = new MethodMaterial(color);\r\n\t\t\t\t\tcm.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\tvar colorMultiMat:MethodMaterial = <MethodMaterial> cm;\r\n\r\n\r\n\t\t\t\t\tcolorMultiMat.diffuseColor = diffuseColor;\r\n\t\t\t\t\tcolorMultiMat.repeat = true;\r\n\r\n\t\t\t\t\tif (useSpecular) {\r\n\t\t\t\t\t\tcolorMultiMat.specularColor = specularColor;\r\n\t\t\t\t\t\tcolorMultiMat.specular = specular;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlm.cm = cm;\r\n\r\n\t\t\t\tthis._materialLoaded.push(lm);\r\n\r\n\t\t\t\tif (this._meshes.length > 0)\r\n\t\t\t\t\tthis.applyMaterial(lm);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._mtlLibLoaded = true;\r\n\t}\r\n\r\n\tprivate parseMapKdString(trunk):string\r\n\t{\r\n\t\tvar url:string = \"\";\r\n\t\tvar i:number;\r\n\t\tvar breakflag:boolean;\r\n\r\n\t\tfor (i = 1; i < trunk.length;) {\r\n\t\t\tswitch (trunk[i]) {\r\n\t\t\t\tcase \"-blendu\":\r\n\t\t\t\tcase \"-blendv\":\r\n\t\t\t\tcase \"-cc\":\r\n\t\t\t\tcase \"-clamp\":\r\n\t\t\t\tcase \"-texres\":\r\n\t\t\t\t\ti += 2; //Skip ahead 1 attribute\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"-mm\":\r\n\t\t\t\t\ti += 3; //Skip ahead 2 attributes\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"-o\":\r\n\t\t\t\tcase \"-s\":\r\n\t\t\t\tcase \"-t\":\r\n\t\t\t\t\ti += 4; //Skip ahead 3 attributes\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreakflag = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (breakflag)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t//Reconstruct URL/filename\r\n\t\tfor (i; i < trunk.length; i++) {\r\n\t\t\turl += trunk[i];\r\n\t\t\turl += \" \";\r\n\t\t}\r\n\r\n\t\t//Remove the extraneous space and/or newline from the right side\r\n\t\turl = url.replace(/\\s+$/, \"\");\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\tprivate loadMtl(mtlurl:string)\r\n\t{\r\n\t\t// Add raw-data dependency to queue and load dependencies now,\r\n\t\t// which will pause the parsing in the meantime.\r\n\t\tthis._pAddDependency('mtl', new URLRequest(mtlurl), true);\r\n\t\tthis._pPauseAndRetrieveDependencies();//\r\n\t}\r\n\r\n\tprivate applyMaterial(lm:LoadedMaterial)\r\n\t{\r\n\t\tvar decomposeID;\r\n\t\tvar mesh:Mesh;\r\n\t\tvar tm:MethodMaterial;\r\n\t\tvar j:number;\r\n\t\tvar specularData:SpecularData;\r\n\r\n\t\tfor (var i:number = 0; i < this._meshes.length; ++i) {\r\n\t\t\tmesh = this._meshes[i];\r\n\t\t\tdecomposeID = mesh.material.name.split(\"~\");\r\n\r\n\t\t\tif (decomposeID[0] == lm.materialID) {\r\n\r\n\t\t\t\tif (lm.cm) {\r\n\t\t\t\t\tif (mesh.material)\r\n\t\t\t\t\t\tmesh.material = null;\r\n\t\t\t\t\tmesh.material = lm.cm;\r\n\r\n\t\t\t\t} else if (lm.texture) {\r\n\t\t\t\t\tif (this.materialMode < 2) { // if materialMode is 0 or 1, we create a SinglePass\r\n\t\t\t\t\t\ttm = <MethodMaterial > mesh.material;\r\n\r\n\t\t\t\t\t\ttm.texture = lm.texture;\r\n\t\t\t\t\t\ttm.color = lm.color;\r\n\t\t\t\t\t\ttm.alpha = lm.alpha;\r\n\t\t\t\t\t\ttm.repeat = true;\r\n\r\n\t\t\t\t\t\tif (lm.specularMethod) {\r\n\r\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\r\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\r\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\r\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\r\n\t\t\t\t\t\t\ttm.specularMethod = null;\r\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\r\n\r\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\r\n\r\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\r\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\r\n\r\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\r\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\r\n\t\t\t\t\t\t\t\t\ttm.alpha = specularData.alpha;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else { //if materialMode==2 this is a MultiPassTexture\r\n\t\t\t\t\t\ttm = <MethodMaterial> mesh.material;\r\n\t\t\t\t\t\ttm.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\t\ttm.texture = lm.texture;\r\n\t\t\t\t\t\ttm.color = lm.color;\r\n\t\t\t\t\t\ttm.repeat = true;\r\n\r\n\t\t\t\t\t\tif (lm.specularMethod) {\r\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\r\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\r\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\r\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\r\n\t\t\t\t\t\t\ttm.specularMethod = null;\r\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\r\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\r\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\r\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\r\n\r\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\r\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmesh.material.name = decomposeID[1]? decomposeID[1] : decomposeID[0];\r\n\t\t\t\tthis._meshes.splice(i, 1);\r\n\t\t\t\t--i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lm.cm || tm)\r\n\t\t\tthis._pFinalizeAsset(lm.cm || tm);\r\n\t}\r\n\r\n\tprivate applyMaterials()\r\n\t{\r\n\t\tif (this._materialLoaded.length == 0)\r\n\t\t\treturn;\r\n\r\n\t\tfor (var i:number = 0; i < this._materialLoaded.length; ++i)\r\n\t\t\tthis.applyMaterial(this._materialLoaded[i]);\r\n\t}\r\n}\r\n\r\nexport = OBJParser;\r\n\r\nclass ObjectGroup\r\n{\r\n\tpublic name:string;\r\n\tpublic groups:Group[] = new Array<Group>();\r\n}\r\n\r\nclass Group\r\n{\r\n\tpublic name:string;\r\n\tpublic materialID:string;\r\n\tpublic materialGroups:MaterialGroup[] = new Array<MaterialGroup>();\r\n}\r\n\r\nclass MaterialGroup\r\n{\r\n\tpublic url:string;\r\n\tpublic faces:FaceData[] = new Array<FaceData>();\r\n}\r\n\r\nclass SpecularData\r\n{\r\n\tpublic materialID:string;\r\n\tpublic basicSpecularMethod:SpecularBasicMethod;\r\n\tpublic color:number = 0xFFFFFF;\r\n\tpublic alpha:number = 1;\r\n}\r\n\r\nclass LoadedMaterial\r\n{\r\n\tpublic materialID:string;\r\n\tpublic texture:Texture2DBase;\r\n\tpublic cm:MaterialBase;\r\n\tpublic specularMethod:SpecularBasicMethod;\r\n\tpublic color:number = 0xFFFFFF;\r\n\tpublic alpha:number = 1;\r\n}\r\n\r\nclass FaceData\r\n{\r\n\tpublic vertexIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic uvIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic normalIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic indexIds:string[] = new Array<string>(); // used for real index lookups\r\n}\r\n\r\n/**\r\n* Texture coordinates value object.\r\n*/\r\nclass UV\r\n{\r\n\tprivate _u:number;\r\n\tprivate _v:number;\r\n\r\n\t/**\r\n\t * Creates a new <code>UV</code> object.\r\n\t *\r\n\t * @param    u        [optional]    The horizontal coordinate of the texture value. Defaults to 0.\r\n\t * @param    v        [optional]    The vertical coordinate of the texture value. Defaults to 0.\r\n\t */\r\n\tconstructor(u:number = 0, v:number = 0)\r\n\t{\r\n\t\tthis._u = u;\r\n\t\tthis._v = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the vertical coordinate of the texture value.\r\n\t */\r\n\tpublic get v():number\r\n\t{\r\n\t\treturn this._v;\r\n\t}\r\n\r\n\tpublic set v(value:number)\r\n\t{\r\n\t\tthis._v = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the horizontal coordinate of the texture value.\r\n\t */\r\n\tpublic get u():number\r\n\t{\r\n\t\treturn this._u;\r\n\t}\r\n\r\n\tpublic set u(value:number)\r\n\t{\r\n\t\tthis._u = value;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new UV value Object\r\n\t */\r\n\tpublic clone():UV\r\n\t{\r\n\t\treturn new UV(this._u, this._v);\r\n\t}\r\n\r\n\t/**\r\n\t * returns the value object as a string for trace/debug purpose\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn this._u + \",\" + this._v;\r\n\t}\r\n}\r\n\r\nclass Vertex\r\n{\r\n\tprivate _x:number;\r\n\tprivate _y:number;\r\n\tprivate _z:number;\r\n\tprivate _index:number;\r\n\r\n\t/**\r\n\t * Creates a new <code>Vertex</code> value object.\r\n\t *\r\n\t * @param    x            [optional]    The x value. Defaults to 0.\r\n\t * @param    y            [optional]    The y value. Defaults to 0.\r\n\t * @param    z            [optional]    The z value. Defaults to 0.\r\n\t * @param    index        [optional]    The index value. Defaults is NaN.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, index:number = 0)\r\n\t{\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._index = index;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the index of value object\r\n\t * @param    ind        The index\r\n\t */\r\n\tpublic set index(ind:number)\r\n\t{\r\n\t\tthis._index = ind;\r\n\t}\r\n\r\n\tpublic get index():number\r\n\t{\r\n\t\treturn this._index;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the x value of the value object\r\n\t * @param    value        The x value\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tthis._x = value;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the y value of the value object\r\n\t * @param    value        The y value\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tthis._y = value;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the z value of the value object\r\n\t * @param    value        The z value\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(value:number)\r\n\t{\r\n\t\tthis._z = value;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new Vertex value Object\r\n\t */\r\n\tpublic clone():Vertex\r\n\t{\r\n\t\treturn new Vertex(this._x, this._y, this._z);\r\n\t}\r\n}",
    "import AssetLoader\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\n\r\nimport AWDParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWDParser\");\r\nimport Max3DSParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/Max3DSParser\");\r\nimport MD2Parser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/MD2Parser\");\r\nimport OBJParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/OBJParser\");\r\n\r\n/**\r\n *\r\n */\r\nclass Parsers\r\n{\r\n\t/**\r\n\t * A list of all parsers that come bundled with Away3D. Use this to quickly\r\n\t * enable support for all bundled parsers to the file format auto-detection\r\n\t * feature, using any of the enableParsers() methods on loaders, e.g.:\r\n\t *\r\n\t * <code>AssetLibrary.enableParsers(Parsers.ALL_BUNDLED);</code>\r\n\t *\r\n\t * Beware however that this requires all parser classes to be included in the\r\n\t * SWF file, which will add 50-100 kb to the file. When only a limited set of\r\n\t * file formats are used, SWF file size can be saved by adding the parsers\r\n\t * individually using AssetLibrary.enableParser()\r\n\t *\r\n\t * A third way is to specify a parser for each loaded file, thereby bypassing\r\n\t * the auto-detection mechanisms altogether, while at the same time allowing\r\n\t * any properties that are unique to that parser to be set for that load.\r\n\t *\r\n\t * The bundled parsers are:\r\n\t *\r\n\t * <ul>\r\n\t * <li>AC3D (.ac)</li>\r\n\t * <li>Away Data version 1 ASCII and version 2 binary (.awd). AWD1 BSP unsupported</li>\r\n\t * <li>3DMax (.3ds)</li>\r\n\t * <li>DXF (.dxf)</li>\r\n\t * <li>Quake 2 MD2 models (.md2)</li>\r\n\t * <li>Doom 3 MD5 animation clips (.md5anim)</li>\r\n\t * <li>Doom 3 MD5 meshes (.md5mesh)</li>\r\n\t * <li>Wavefront OBJ (.obj)</li>\r\n\t * <li>Collada (.dae)</li>\r\n\t * <li>Images (.jpg, .png)</li>\r\n\t * </ul>\r\n\t *\r\n\t * @see away.library.AssetLibrary.enableParser\r\n\t */\r\n\tpublic static ALL_BUNDLED:Array<Object> = Array<Object>(AWDParser, Max3DSParser, MD2Parser, OBJParser);\r\n\r\n\t/**\r\n\t * Short-hand function to enable all bundled parsers for auto-detection. In practice,\r\n\t * this is the same as invoking enableParsers(Parsers.ALL_BUNDLED) on any of the\r\n\t * loader classes SingleFileLoader, AssetLoader, AssetLibrary or Loader3D.\r\n\t *\r\n\t * See notes about file size in the documentation for the ALL_BUNDLED constant.\r\n\t *\r\n\t * @see away.parsers.Parsers.ALL_BUNDLED\r\n\t */\r\n\tpublic static enableAllBundled():void\r\n\t{\r\n\t\tAssetLoader.enableParsers(Parsers.ALL_BUNDLED);\r\n\t}\r\n}\r\n\r\nexport = Parsers;"
  ],
  "sourceRoot": ""
}