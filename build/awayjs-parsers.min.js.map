{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase.ts",
    "awayjs-parsers.js",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBlock.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDProperties.ts",
    "awayjs-parsers/lib/AWD3Parser.ts",
    "awayjs-parsers/lib/AWDParser.ts",
    "awayjs-parsers/lib/MD2Parser.ts",
    "awayjs-parsers/lib/MD5AnimParser.ts",
    "awayjs-parsers/lib/MD5MeshParser.ts",
    "awayjs-parsers/lib/Max3DSParser.ts",
    "awayjs-parsers/lib/OBJParser.ts",
    "awayjs-parsers/lib/Parsers.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase",
    "module",
    "AbstractMethodError",
    "AWDAssetParserBase",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "this",
    "_awd_file_data",
    "set",
    "awd_file_data",
    "enumerable",
    "configurable",
    "parseFromBytes",
    "awayjs-core/lib/errors/AbstractMethodError",
    "undefined",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers",
    "GeometryAWDParser",
    "PrefabAWDParser",
    "DisplayObjectContainerAWDParser",
    "MeshAWDParser",
    "BillboardAWDParser",
    "Single2DTextureAWDParser",
    "CameraAWDParser",
    "SingleCubeTextureAWDParser",
    "LightAWDParser",
    "LightPickerAWDParser",
    "MaterialAWDParser",
    "MovieClipAWDParser",
    "ShadowMethodAWDParser",
    "SharedMethodAWDParser",
    "SkeletonAnimClipAWDParser",
    "SkeletonAWDParser",
    "SkeletonPoseAWDParser",
    "SkyboxAWDParser",
    "TesselatedFontAWDParser",
    "TextfieldAWDParser",
    "TextformatAWDParser",
    "VertexAnimationSetAWDParser",
    "VertexAnimClipAWDParser",
    "CommandAWDParser",
    "MetadataAWDParser",
    "BlockNameSpaceAWDParser",
    "AnimatorAWDParser",
    "AudioAWDParser",
    "AWDBlockParsers",
    "_supported_asset_blocks",
    "_all_block_parsers",
    "Array",
    "add_block_parser",
    "block_parser",
    "block_types",
    "push",
    "init_parser",
    "file_data",
    "parseAsset",
    "type",
    "this_parser",
    "awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser",
    "__extends",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "AWDBlockParserBase",
    "VertexAnimator",
    "SkeletonAnimator",
    "AWD3Utils",
    "_super",
    "animSetBlockAdress",
    "targetAnimationSet",
    "cur_block",
    "name",
    "parseVarStr",
    "newBlockBytes",
    "readUnsignedShort",
    "props",
    "parseProperties",
    1,
    "BADDR",
    "readUnsignedInt",
    "targetMeshLength",
    "meshAdresses",
    "activeState",
    "autoplay",
    "readUnsignedByte",
    "parseUserAttributes",
    "returnedArray",
    "targetMeshes",
    "targetMesh",
    "getAssetByID",
    "thisAnimator",
    "skeleton",
    "animator",
    "data",
    "debug",
    "console",
    "log",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "ByteArray",
    "data_len",
    "url",
    "readUTFBytes",
    "dependencies_urls",
    "readBytes",
    "dependencies_data",
    "state",
    "BLOCKSTATE_LOAD_DEPENDENICES",
    "audioStylesNames",
    "awayjs-core/lib/utils/ByteArray",
    "Billboard",
    "BasicMaterial",
    "data_id",
    "mat",
    "bothSides",
    "billboard",
    "extra",
    "awayjs-display/lib/entities/Billboard",
    "awayjs-display/lib/materials/BasicMaterial",
    "BLOCKSTATE_NO_ASSET",
    "id",
    "nameSpaceString",
    "Camera",
    "PerspectiveProjection",
    "OrthographicProjection",
    "OrthographicOffCenterProjection",
    "Vector3D",
    "CameraAWD3Parser",
    "par_id",
    "mtx",
    "parseMatrix3D",
    "parentName",
    "projection",
    "readShort",
    "projectiontype",
    101,
    "propsNrType",
    102,
    103,
    104,
    "camera",
    "transform",
    "matrix3D",
    "parent",
    "addChild",
    "matrixNrType",
    2,
    3,
    4,
    "UINT8",
    "pivot",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "awayjs-core/lib/projections/OrthographicProjection",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/Camera",
    "hasBlocks",
    "parentObject",
    "targetObject",
    "numCommands",
    "typeCommand",
    "targetID",
    "DisplayObjectContainer",
    "ctr",
    "major_version",
    "minor_version",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "AttributesBuffer",
    "Geometry",
    "CurveSubGeometry",
    "TriangleSubGeometry",
    "geom",
    "num_subs",
    "geoNrType",
    "geoScaleU",
    "geoScaleV",
    "subs_parsed",
    "is_curve_geom",
    "sm_len",
    "sm_end",
    "w_indices",
    "weights",
    "position",
    "subProps",
    "idx",
    "str_ftype",
    "str_type",
    "str_len",
    "str_end",
    "x",
    "y",
    "z",
    "verts",
    "readNumber",
    "accuracyGeo",
    "indices",
    "uvs",
    "normals",
    "idx_pos",
    "idx_curves",
    "idx_uvs",
    "positions",
    "curveData",
    "curve_sub_geom",
    "setIndices",
    "setPositions",
    "setCurves",
    "setUVs",
    "addSubGeometry",
    "triangle_sub_geom",
    "jointsPerVertex",
    "autoDeriveNormals",
    "autoDeriveUVs",
    "autoDeriveTangents",
    "setNormals",
    "setTangents",
    "setJointWeights",
    "setJointIndices",
    "scaleU",
    "scaleV",
    "setSubUVs",
    "scaleUV",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/base/CurveSubGeometry",
    "awayjs-display/lib/base/Geometry",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "CubeMapShadowMapper",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "PointLight",
    "light",
    "newShadowMapper",
    "lightType",
    "COLOR",
    5,
    6,
    "BOOL",
    7,
    8,
    9,
    10,
    11,
    12,
    "UINT16",
    21,
    22,
    23,
    "shadowMapperType",
    "lightTypes",
    "shadowMapperTypes",
    "radius",
    "fallOff",
    "color",
    "specular",
    "diffuse",
    "ambientColor",
    "ambient",
    "depthMapSize",
    "getDepthSizeFromEnum",
    "shadowMapper",
    "castsShadows",
    "awayjs-display/lib/entities/DirectionalLight",
    "awayjs-display/lib/entities/PointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "StaticLightPicker",
    "numLights",
    "lightsArray",
    "k",
    "lightID",
    "returnedArrayLight",
    "lightsArrayNames",
    "lightPicker",
    "toString",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "MethodMaterialMode",
    "MethodMaterial",
    "DefaultMaterialManager",
    "AmbientEnvMapMethod",
    "DiffuseDepthMethod",
    "DiffuseCelMethod",
    "DiffuseGradientMethod",
    "DiffuseLightMapMethod",
    "DiffuseWrapMethod",
    "NormalSimpleWaterMethod",
    "SpecularFresnelMethod",
    "SpecularAnisotropicMethod",
    "SpecularCelMethod",
    "SpecularPhongMethod",
    "attributes",
    "finalize",
    "num_methods",
    "methods_parsed",
    "normalTexture",
    "specTexture",
    "INT32",
    13,
    "method_type",
    "debugString",
    "tex_addr",
    "texture",
    "getDefaultTexture",
    "alphaThreshold",
    "repeat",
    "UINT32",
    15,
    16,
    17,
    18,
    19,
    20,
    "spezialType",
    "mode",
    "MULTI_PASS",
    "alphaBlending",
    "diftexture",
    "alpha",
    "diffuseTex_addr",
    "diffuseTexture",
    "normalTex_addr",
    "specTex_addr",
    "lightPickerAddr",
    "smooth",
    "mipmap",
    "alphaPremultiplied",
    "blendMode",
    "getBlendModeStringFromEnum",
    "normalMap",
    "specularMap",
    "diffuseColor",
    "gloss",
    "specularColor",
    201,
    202,
    301,
    302,
    401,
    402,
    601,
    602,
    701,
    702,
    801,
    "MTX4x4",
    "fx_method",
    "addEffectMethod",
    "shadow_method",
    "shadowMethod",
    "cubeTex",
    "getDefaultCubeTexture",
    "ambientMethod",
    "diffuseMethod",
    "thisTex",
    "smoothness",
    "specularMethod",
    "fresnelPower",
    "normalReflectance",
    "normalMethod",
    "basic_mat",
    "preserveAlpha",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-methodmaterials/lib/MethodMaterial",
    "awayjs-methodmaterials/lib/MethodMaterialMode",
    "awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseCelMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseDepthMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseGradientMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseWrapMethod",
    "awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod",
    "awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod",
    "awayjs-methodmaterials/lib/methods/SpecularCelMethod",
    "awayjs-methodmaterials/lib/methods/SpecularFresnelMethod",
    "awayjs-methodmaterials/lib/methods/SpecularPhongMethod",
    "Mesh",
    "num_materials",
    "materials_parsed",
    "geoID",
    "materials",
    "materialNames",
    "mat_id",
    "m",
    "mesh",
    "subMeshes",
    "material",
    "Math",
    "min",
    "awayjs-display/lib/entities/Mesh",
    "AWDSTRING",
    "AWDBitFlags",
    "ColorTransform",
    "Matrix3D",
    "TimelineKeyFrame",
    "AddChildAtDepthCommand",
    "ApplyAS2DepthsCommand",
    "ExecuteScriptCommand",
    "RemoveChildrenAtDepthCommand",
    "SetInstanceNameCommand",
    "UpdatePropertyCommand",
    "SetMaskCommand",
    "TextField",
    "AS2SceneGraphFactory",
    "view",
    "factory",
    "j",
    "c",
    "new_mc",
    "createMovieClip",
    "isScene",
    "sceneID",
    "fps",
    "readFloat",
    "ms_per_frame",
    "num_instances",
    "num_all_display_instances",
    "num_potential_childs",
    "resourceID",
    "cmd_asset",
    "registerPotentialChild",
    "num_potential_childs_multi_instanced",
    "num_potential_sounds",
    "numFrames",
    "totalDuration",
    "frameDuration",
    "numLabels",
    "objectID",
    "target_depth",
    "number_of_obj",
    "commandType",
    "frame",
    "hasDepthChanges",
    "label",
    "remove_depths",
    "frameConstructCommands",
    "potChild",
    "getPotentialChildPrototype",
    "isAsset",
    "props_flag",
    "test",
    "FLAG1",
    "thisMatrix",
    "FLAG2",
    "rawData",
    "FLAG3",
    "thisColorTransform",
    "FLAG4",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "FLAG5",
    "blendmode_int",
    "blendmode_string",
    "FLAG6",
    "readByte",
    "FLAG7",
    "instanceName",
    "FLAG8",
    "mask_id_nums",
    "mask_ids",
    "mi_cnt",
    "length_code",
    "frame_code",
    "framePostConstructCommands",
    "addFrame",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-display/lib/entities/TextField",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags",
    "awayjs-player/lib/factories/AS2SceneGraphFactory",
    "awayjs-player/lib/timeline/TimelineKeyFrame",
    "awayjs-player/lib/timeline/commands/AddChildAtDepthCommand",
    "awayjs-player/lib/timeline/commands/ApplyAS2DepthsCommand",
    "awayjs-player/lib/timeline/commands/ExecuteScriptCommand",
    "awayjs-player/lib/timeline/commands/RemoveChildrenAtDepthCommand",
    "awayjs-player/lib/timeline/commands/SetInstanceNameCommand",
    "awayjs-player/lib/timeline/commands/SetMaskCommand",
    "awayjs-player/lib/timeline/commands/UpdatePropertyCommand",
    "PrefabBase",
    "PrimitiveCapsulePrefab",
    "PrimitiveConePrefab",
    "PrimitiveCubePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitivePlanePrefab",
    "PrimitiveSpherePrefab",
    "PrimitiveTorusPrefab",
    "prefab",
    "primType",
    "bsm",
    110,
    111,
    303,
    703,
    704,
    "primitiveTypes",
    "topClosed",
    "bottomClosed",
    "yUp",
    "awayjs-display/lib/prefabs/PrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "ShadowDitheredMethod",
    "ShadowFilteredMethod",
    "ShadowHardMethod",
    "ShadowNearMethod",
    "ShadowSoftMethod",
    "asset",
    "shadowLightID",
    "parseShadowMethodList",
    "methodType",
    "shadow_meth",
    "epsilon",
    "range",
    "awayjs-methodmaterials/lib/methods/ShadowDitheredMethod",
    "awayjs-methodmaterials/lib/methods/ShadowFilteredMethod",
    "awayjs-methodmaterials/lib/methods/ShadowHardMethod",
    "awayjs-methodmaterials/lib/methods/ShadowNearMethod",
    "awayjs-methodmaterials/lib/methods/ShadowSoftMethod",
    "EffectColorMatrixMethod",
    "EffectColorTransformMethod",
    "EffectFogMethod",
    "EffectRimLightMethod",
    "parseSharedMethodList",
    "effectMethodReturn",
    105,
    106,
    107,
    "offCol",
    "colorTransform",
    "awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod",
    "awayjs-methodmaterials/lib/methods/EffectColorTransformMethod",
    "awayjs-methodmaterials/lib/methods/EffectFogMethod",
    "awayjs-methodmaterials/lib/methods/EffectRimLightMethod",
    "textureStylesNames",
    "Skeleton",
    "SkeletonJoint",
    "num_joints",
    "joints_parsed",
    "joint",
    "ibp",
    "parentIndex",
    "inverseBindPose",
    "joints",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonClipNode",
    "frame_dur",
    "pose_addr",
    "clip",
    "num_frames",
    "frames_parsed",
    "skel_pose",
    "frames",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "SkeletonPose",
    "JointPose",
    "pose",
    "joint_pose",
    "has_transform",
    "mtx_data",
    "parseMatrix43RawData",
    "orientation",
    "fromMatrix",
    "translation",
    "copyFrom",
    "jointPoses",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "Skybox",
    "cubeTexAddr",
    "cube_tex",
    "new_skybox",
    "awayjs-display/lib/entities/Skybox",
    "Font",
    "new_font",
    "font_style_cnt",
    "font_style_name",
    "new_font_style",
    "get_font_table",
    "set_font_em_size",
    "font_style_char_cnt",
    "font_style_char",
    "set_subgeo_for_char",
    "awayjs-display/lib/text/Font",
    "TextFormat",
    "newTextField",
    "createTextField",
    "text_field_type",
    "displayAsPassword",
    "width",
    "height",
    "num_paragraphs",
    "complete_text",
    "text_format",
    "paracnt",
    "num_textruns",
    "textrun_cnt",
    "format_id",
    "textFormat",
    "txt_length",
    "this_txt",
    "text",
    "selectable",
    "border",
    "awayjs-display/lib/text/TextFormat",
    "newTextFormat",
    "font_id",
    "font",
    "font_name",
    "font_table",
    "font_style",
    "num_uv_values",
    "uv_values",
    "uvcnt",
    "uv_value",
    "format_props",
    "size",
    "letterSpacing",
    "kerning",
    "indent",
    "leftMargin",
    "rightMargin",
    "VertexClipNode",
    "poseOnly",
    "num_submeshes",
    "subMeshParsed",
    "geometry",
    "subGeom",
    "num_Streams",
    "streamsParsed",
    "streamtypes",
    "thisGeo",
    "geoAdress",
    "getUVForVertexAnimation",
    "looping",
    "stitchFinalFrame",
    "subGeometries",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexAnimationSet",
    "SkeletonAnimationSet",
    "poseBlockAdress",
    "skeletonFrames",
    "vertexFrames",
    "animNode",
    "newVertexAnimationSet",
    "addAnimation",
    "animations",
    "animationNames",
    "newSkeletonAnimationSet",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData",
    "BitmapImageCube",
    "BlendMode",
    "SingleCubeTexture",
    "Single2DTexture",
    "AWDProperties",
    "AWDBlock",
    "AWD3FileData",
    "_debug",
    "_accuracyOnBlocks",
    "_blocks",
    "_cur_block",
    "blendModeDic",
    "NORMAL",
    "ADD",
    "ALPHA",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "_depthSizeDic",
    "depthSize",
    "blendmode",
    "dispose",
    "_accuracyMatrix",
    "new_accuracyMatrix",
    "_accuracyProps",
    "new_accuracyProps",
    "_accuracyGeo",
    "new_accuracyGeo",
    "_matrixNrType",
    "newmatrixNrType",
    "_propsNrType",
    "new_props_nr",
    "_geoNrType",
    "new_geoNrType",
    "_newBlockBytes",
    "new_newBlockBytes",
    "create_new_block",
    "new_block",
    "block_cnt",
    "list_len",
    "attibuteCnt",
    "list_end",
    "ns_id",
    "attr_key",
    "attr_type",
    "attr_len",
    "attr_val",
    "INT8",
    "INT16",
    "readInt",
    "FLOAT32",
    "FLOAT64",
    "readDouble",
    "expected",
    "propertyCnt",
    "len",
    "key",
    "parseAttrValue",
    "elem_len",
    "read_func",
    "VECTOR2x1",
    "VECTOR3x1",
    "VECTOR4x1",
    "MTX3x2",
    "MTX3x3",
    "MTX4x3",
    "list",
    "num_read",
    "num_elems",
    "apply",
    "val",
    "meshID",
    "uvsForVertexAnimation",
    "geoCnt",
    "sub_geom",
    "numVertices",
    "getBlockByID",
    "assetID",
    "getDefaultAsset",
    "assetType",
    "getDefaultMaterial",
    "_defaultCubeTexture",
    "defaultBitmap",
    "createCheckeredBitmapImage2D",
    "bitmapImageCube",
    "draw",
    "precision",
    "parseMatrix32RawData",
    "mtx_raw",
    "isNaN",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBlock",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDProperties",
    "BLOCKSTATE_FINALIZE",
    "BLOCKSTATE_INVALID",
    "COMPRESSIONMODE_LZMA",
    "UNCOMPRESSED",
    "DEFLATE",
    "LZMA",
    "AWDBYTEARRAY",
    "flags",
    "testFlag",
    "FLAG9",
    "FLAG10",
    "FLAG11",
    "FLAG12",
    "FLAG13",
    "FLAG14",
    "FLAG15",
    "FLAG16",
    "this_id",
    "this_type",
    "loaded_dependencies",
    "loaded_dependencies_cnt",
    "bytes",
    "errorMessages",
    "addError",
    "errorMsg",
    "value",
    "fallback",
    "awayjs-parsers/lib/AWD3Parser",
    "URLLoaderDataFormat",
    "URLRequest",
    "ParserBase",
    "ParserUtils",
    "DisplayObject",
    "AWDAssetParsers",
    "AWD3Parser",
    "ARRAY_BUFFER",
    "_startedParsing",
    "_parsed_header",
    "total_time",
    "geom_time",
    "timeline_time",
    "_block_parser",
    "_awd_data",
    "supportsType",
    "extension",
    "toLowerCase",
    "supportsData",
    "_iResolveDependency",
    "resourceDependency",
    "assets",
    "this_block",
    "parseInt",
    "testure_asset",
    "_pFinalizeAsset",
    "sub_id",
    "cube_image_asset",
    "cube_tex_asset",
    "_iResolveDependencyFailure",
    "_iResolveDependencyName",
    "oldName",
    "block",
    "resetAssetPath",
    "newName",
    "_pProceedParsing",
    "_byteData",
    "_pGetByteData",
    "parseHeader",
    "_compression",
    "_pDieWithError",
    "_body",
    "getBytesAvailable",
    "parsingPaused",
    "parseNextBlock",
    "PARSING_DONE",
    "MORE_TO_PARSE",
    "_pStartParsing",
    "frameLimit",
    "_pContent",
    "block_id",
    "ns",
    "block_type",
    "blockCompression",
    "blockCompressionLZMA",
    "accuracyOnBlocks",
    "accuracyMatrix",
    "accuracyProps",
    "blockEndAll",
    "time_start",
    "performance",
    "now",
    "_pAddDependency",
    "byteArrayToImage",
    "_pPauseAndRetrieveDependencies",
    "time_end",
    "thisTime",
    "body_len",
    "_streaming",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/net/URLRequest",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-display/lib/base/DisplayObject",
    "awayjs-parsers/lib/AWDParser",
    "Float2Attributes",
    "EffectAlphaMaskMethod",
    "EffectEnvMapMethod",
    "EffectFresnelEnvMapMethod",
    "EffectLightMapMethod",
    "SetButtonCommand",
    "AWDParser",
    "_debugTimers",
    "_texture_users",
    "_time_all",
    "_time_geom",
    "_time_timeline",
    "_time_fonts",
    "_time_textfields",
    "_time_sounds",
    "_time_textures",
    "_time_materials",
    "_time_meshes",
    "_num_geom",
    "_num_timeline",
    "_num_fonts",
    "_num_textfields",
    "_num_sounds",
    "_num_textures",
    "_num_materials",
    "_num_meshes",
    "shadowMethodListProperties",
    "PROPERTY_NUMBER",
    "meshPoseAnimationProperties",
    "sharedMethodListProperties",
    "_view",
    "_version",
    "texture_asset",
    "audio_asset",
    "_isParsing",
    "updateTimers",
    "isParsed",
    "start_timeing",
    "_cur_block_id",
    "BitFlags",
    "blockEndBlock",
    "parseMeshLibraryBlock",
    "parseBillBoardLibraryBlock",
    "parseAudioBlock",
    "parseTimeLine",
    "paresTextField",
    "parseTesselatedFont",
    "parseTextFormat",
    "parsePrimitves",
    "parseSkyboxInstance",
    "parseLight",
    "parseCamera",
    "parseLightPicker",
    "parseMaterial_v1",
    "parseCubeTexture",
    "parseSharedMethodBlock",
    "parseShadowMethodBlock",
    "parseMeshPoseAnimation",
    "parseVertexAnimationSet",
    "parseAnimatorSet",
    "parseCommand",
    "parseGeometry",
    "parseContainer",
    "parseMeshInstance",
    "parseMaterial",
    "parseTexture",
    "parseSkeleton",
    "parseSkeletonPose",
    "parseSkeletonAnimation",
    "parseNameSpace",
    "parseMetaData",
    "msgCnt",
    "end_timing",
    "time_delta",
    "blockID",
    "vertexBuffer",
    "bufferView",
    "Uint8Array",
    "arraybytes",
    "textFormatProperties",
    "tf_align_int",
    "align",
    "textFieldTypes",
    "textWidth",
    "abs",
    "textHeight",
    "textFieldProperties",
    "useColorTransform",
    "extras",
    "timeLineContainer",
    "commandCount",
    "geometryProperties",
    "subGeometryProperties",
    "primitiveProperties",
    "containerProperties",
    "isPrefab",
    "getNewObject",
    "meshInstanceProperties",
    "tex",
    "cubeMap",
    "lightProperties",
    "cameraProperties",
    "cameraPivotProperties",
    "lightPick",
    "materialProperties",
    "materialMode",
    "material_v1Properties",
    "method_v1Properties",
    "effectMethod",
    "shadowMapMethod",
    "cubeTexture",
    "commandProperties",
    "targetProperties",
    "metaDataProperties",
    "pose_id",
    "geo_id",
    "vertexAnimationSetProperties",
    "clipNode",
    "animatorSetProperties",
    "accuracy",
    "GEO_NUMBER",
    "MATRIX_NUMBER",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod",
    "awayjs-methodmaterials/lib/methods/EffectEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectLightMapMethod",
    "awayjs-player/lib/timeline/commands/SetButtonCommand",
    "awayjs-parsers/lib/MD2Parser",
    "MD2Parser",
    "textureType",
    "ignoreTexturePath",
    "_clipNodes",
    "_animationSet",
    "materialFinal",
    "geoCreated",
    "_textureType",
    "_ignoreTexturePath",
    "_mesh",
    "_pHasTime",
    "_parsedHeader",
    "_geometry",
    "parseMaterialNames",
    "_parsedUV",
    "parseUV",
    "_parsedFaces",
    "parseFaces",
    "_parsedFrames",
    "parseFrames",
    "_firstSubGeom",
    "clone",
    "_ident",
    "_skinWidth",
    "_skinHeight",
    "_numSkins",
    "_numVertices",
    "_numST",
    "_numTris",
    "_numFrames",
    "_offsetSkins",
    "_offsetST",
    "_offsetTris",
    "_offsetFrames",
    "_offsetEnd",
    "extIndex",
    "slashIndex",
    "_materialNames",
    "regExp",
    "RegExp",
    "replace",
    "lastIndexOf",
    "indexOf",
    "substring",
    "dependencies",
    "_uvs",
    "ta",
    "tb",
    "tc",
    "_vertIndices",
    "_uvIndices",
    "_indices",
    "addIndex",
    "_finalUV",
    "vertexIndex",
    "uvIndex",
    "index",
    "findIndex",
    "sx",
    "sy",
    "sz",
    "tx",
    "ty",
    "tz",
    "vertLen",
    "fvertices",
    "tvertices",
    "prevClip",
    "readFrameName",
    "FPS",
    "ch",
    "floor",
    "String",
    "fromCharCode",
    "awayjs-parsers/lib/MD5AnimParser",
    "Quaternion",
    "MD5AnimParser",
    "additionalRotationAxis",
    "additionalRotationRadians",
    "TEXT",
    "_parseIndex",
    "_line",
    "_charLineIndex",
    "_rotationQuat",
    "t1",
    "t2",
    "fromAxisAngle",
    "X_AXIS",
    "PI",
    "Y_AXIS",
    "multiply",
    "token",
    "_textData",
    "_pGetTextData",
    "getNextToken",
    "COMMENT_TOKEN",
    "ignoreLine",
    "VERSION_TOKEN",
    "getNextInt",
    "COMMAND_LINE_TOKEN",
    "parseCMD",
    "NUM_FRAMES_TOKEN",
    "_bounds",
    "_frameData",
    "NUM_JOINTS_TOKEN",
    "_numJoints",
    "_hierarchy",
    "_baseFrameData",
    "FRAME_RATE_TOKEN",
    "_frameRate",
    "NUM_ANIMATED_COMPONENTS_TOKEN",
    "_numAnimatedComponents",
    "HIERARCHY_TOKEN",
    "parseHierarchy",
    "BOUNDS_TOKEN",
    "parseBounds",
    "BASE_FRAME_TOKEN",
    "parseBaseFrame",
    "FRAME_TOKEN",
    "parseFrame",
    "_reachedEOF",
    "sendUnknownKeywordError",
    "_clip",
    "translateClip",
    "translatePose",
    "frameData",
    "hierarchy",
    "base",
    "translate",
    "components",
    "skelPose",
    "startIndex",
    "w",
    "sqrt",
    "rotatePoint",
    "sendEOFError",
    "HierarchyData",
    "parseLiteralstring",
    "getNextChar",
    "putBack",
    "BoundsData",
    "parseVector3D",
    "max",
    "BaseFrameData",
    "parseQuaternion",
    "frameIndex",
    "FrameData",
    "getNextNumber",
    "skipWhiteSpace",
    "charAt",
    "sendParseError",
    "parseFloat",
    "vec",
    "quat",
    "str",
    "awayjs-core/lib/geom/Quaternion",
    "awayjs-parsers/lib/MD5MeshParser",
    "MD5MeshParser",
    "_bindPoses",
    "NUM_MESHES_TOKEN",
    "_numMeshes",
    "JOINTS_TOKEN",
    "parseJoints",
    "MESH_TOKEN",
    "parseMesh",
    "calculateMaxJointCount",
    "_maxJointCount",
    "_meshData",
    "translateGeom",
    "vertexData",
    "weightData",
    "_skeleton",
    "numMeshData",
    "meshData",
    "numVerts",
    "zeroWeights",
    "countZeroWeightJoints",
    "totalJoints",
    "countWeight",
    "vertex",
    "start",
    "startWeight",
    "end",
    "count",
    "weight",
    "bias",
    "pos",
    "toMatrix3D",
    "appendTranslation",
    "inv",
    "invert",
    "_shaders",
    "MESH_SHADER_TOKEN",
    "MESH_NUM_VERTS_TOKEN",
    "MESH_NUM_TRIS_TOKEN",
    "MESH_NUM_WEIGHTS_TOKEN",
    "MESH_VERT_TOKEN",
    "parseVertex",
    "MESH_TRI_TOKEN",
    "parseTri",
    "MESH_WEIGHT_TOKEN",
    "parseJoint",
    "MeshData",
    "v1",
    "v2",
    "v3",
    "bindPose",
    "vertices",
    "jointIndices",
    "jointWeights",
    "nonZeroWeights",
    "transformVector",
    "JointData",
    "VertexData",
    "rotQuat",
    "awayjs-parsers/lib/Max3DSParser",
    "BitmapImage2D",
    "Max3DSParser",
    "useSmoothingGroups",
    "_useSmoothingGroups",
    "ba",
    "toByteArray",
    "_textures",
    "_materials",
    "_unfinalized_objects",
    "_cur_mat",
    "_cur_mat_end",
    "finalizeCurrentMaterial",
    "_cur_obj",
    "_cur_obj_end",
    "Number",
    "MAX_VALUE",
    "cid",
    "ObjectVO",
    "readNulTermstring",
    "materialFaces",
    "parseVertexList",
    "parseFaceList",
    "parseUVList",
    "parseFaceMaterialList",
    "readTransform",
    "parseObjectAnimation",
    "parseSmoothingGroups",
    "obj",
    "constructObject",
    "MaterialVO",
    "readColor",
    "twoSided",
    "colorMap",
    "TextureVO",
    "i0",
    "i1",
    "i2",
    "smoothingGroups",
    "faces",
    "vo",
    "hier",
    "sub",
    "prepareData",
    "applySmoothGroups",
    "v",
    "mname",
    "dat",
    "concat",
    "scaleBy",
    "applyTransformation",
    "VertexVO",
    "FaceVO",
    "smoothGroup",
    "numFaces",
    "vGroups",
    "face",
    "groups",
    "group",
    "splice",
    "vClones",
    "clones",
    "v0",
    "chr",
    "g",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-parsers/lib/OBJParser",
    "SpecularBasicMethod",
    "OBJParser",
    "scale",
    "_mtlLibLoaded",
    "_activeMaterialID",
    "_scale",
    "content",
    "hasV",
    "hasF",
    "parseMtl",
    "lm",
    "LoadedMaterial",
    "materialID",
    "_materialLoaded",
    "_meshes",
    "applyMaterial",
    "_mtlLib",
    "line",
    "creturn",
    "trunk",
    "_vertices",
    "_vertexNormals",
    "_materialIDs",
    "_stringLength",
    "_charIndex",
    "_oldIndex",
    "_objects",
    "_objectIndex",
    "split",
    "join",
    "parseLine",
    "applyMaterials",
    "loadMtl",
    "createGroup",
    "createObject",
    "_currentGroup",
    "parseVertexNormal",
    "parseFace",
    "objIndex",
    "numGroups",
    "materialGroups",
    "numMaterialGroups",
    "sm",
    "bmMaterial",
    "translateMaterialGroup",
    "_lastMtlID",
    "materialGroup",
    "_realIndices",
    "_vertexIndex",
    "indexIds",
    "translateVertexData",
    "vertexNormal",
    "uv",
    "vertexIndices",
    "normalIndices",
    "uvIndices",
    "_currentMaterialGroup",
    "_currentObject",
    "ObjectGroup",
    "Group",
    "createMaterialGroup",
    "MaterialGroup",
    "nTrunk",
    "Vertex",
    "UV",
    "FaceData",
    "parseIndex",
    "materialDefinitions",
    "lines",
    "basicSpecularMethod",
    "useSpecular",
    "useColor",
    "mapkd",
    "charCodeAt",
    "parseMapKdString",
    "specularData",
    "SpecularData",
    "_materialSpecularData",
    "cm",
    "colorMat",
    "colorMultiMat",
    "breakflag",
    "mtlurl",
    "decomposeID",
    "tm",
    "_u",
    "_v",
    "_x",
    "_y",
    "_z",
    "_index",
    "ind",
    "awayjs-methodmaterials/lib/methods/SpecularBasicMethod",
    "awayjs-parsers/lib/Parsers",
    "AssetLoader",
    "Parsers",
    "enableAllBundled",
    "enableParsers",
    "ALL_BUNDLED",
    "awayjs-core/lib/library/AssetLoader"
  ],
  "mappings": "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",
  "file": "awayjs-parsers.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3FileData\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\n\n\nclass AWDAssetParserBase\n{\n\n\tprivate _awd_file_data:AWD3FileData;\n\tconstructor()\n\t{\n\t}\n\n\n\tpublic get awd_file_data():AWD3FileData\n\t{\n\t\treturn this._awd_file_data;\n\t}\n\tpublic set awd_file_data(awd_file_data:AWD3FileData)\n\t{\n\t\tthis._awd_file_data=awd_file_data;\n\t}\n\tpublic parseFromBytes():void\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\n}\n\nexport = AWDAssetParserBase;\n\n",
    null,
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport AWDAssetParserBase\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWD3FileData \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\n\nimport GeometryAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser\");\nimport PrefabAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser\");\nimport DisplayObjectContainerAWDParser \t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser\");\nimport MeshAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser\");\nimport BillboardAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser\");\nimport Single2DTextureAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser\");\nimport CameraAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser\");\nimport SingleCubeTextureAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser\");\nimport LightAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser\");\nimport LightPickerAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser\");\nimport MaterialAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser\");\nimport MovieClipAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser\");\nimport ShadowMethodAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser\");\nimport SharedMethodAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser\");\nimport SkeletonAnimClipAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser\");\nimport SkeletonAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser\");\nimport SkeletonPoseAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser\");\nimport SkyboxAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser\");\nimport TesselatedFontAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser\");\nimport TextfieldAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser\");\nimport TextformatAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser\");\nimport VertexAnimationSetAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser\");\nimport VertexAnimClipAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser\");\nimport CommandAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser\");\nimport MetadataAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser\");\nimport BlockNameSpaceAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser\");\nimport AnimatorAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser\");\nimport AudioAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser\");\n\n\n\nclass AWDBlockParsers\n{\n\n\tprivate _supported_asset_blocks:Object = {};\n\tprivate _all_block_parsers:Array<AWDAssetParserBase>;\n\tconstructor()\n\t{\n\t\tthis._all_block_parsers=new Array<AWDAssetParserBase>();\n\n\t\tthis.add_block_parser(new GeometryAWDParser(), [1]);\n\t\tthis.add_block_parser(new PrefabAWDParser(), [11]);\n\t\tthis.add_block_parser(new DisplayObjectContainerAWDParser(), [22]);\n\t\tthis.add_block_parser(new MeshAWDParser(), [23, 24]);\n\n\t\tthis.add_block_parser(new BillboardAWDParser(), [25]);\n\t\tthis.add_block_parser(new SkyboxAWDParser(), [31]);\n\t\tthis.add_block_parser(new LightAWDParser(), [41]);\n\t\tthis.add_block_parser(new CameraAWDParser(), [42]);\n\t\t//this.add_block_parser(new TextureprojectorAWDParser(), [43]);\n\t\tthis.add_block_parser(new AudioAWDParser(), [44]);\n\t\tthis.add_block_parser(new LightPickerAWDParser(), [51]);\n\t\tthis.add_block_parser(new MaterialAWDParser(), [81]);\n\t\tthis.add_block_parser(new Single2DTextureAWDParser(), [82]);\n\t\tthis.add_block_parser(new SingleCubeTextureAWDParser(), [83]);\n\t\tthis.add_block_parser(new SharedMethodAWDParser(), [91]);\n\t\tthis.add_block_parser(new ShadowMethodAWDParser(), [92]);\n\t\tthis.add_block_parser(new SkeletonAWDParser(), [101]);\n\t\tthis.add_block_parser(new SkeletonPoseAWDParser(), [102]);\n\t\tthis.add_block_parser(new SkeletonAnimClipAWDParser(), [103]);\n\t\tthis.add_block_parser(new VertexAnimClipAWDParser(), [111, 112]);\n\t\tthis.add_block_parser(new VertexAnimationSetAWDParser(), [113]);\n\t\t//this.add_block_parser(new UVAnimationClipAWDParser(), [121]);\n\t\tthis.add_block_parser(new AnimatorAWDParser(), [122]);\n\t\tthis.add_block_parser(new MovieClipAWDParser(), [133]);\n\t\tthis.add_block_parser(new TextfieldAWDParser(), [134]);\n\t\tthis.add_block_parser(new TesselatedFontAWDParser(), [135]);\n\t\tthis.add_block_parser(new TextformatAWDParser(), [136]);\n\n\n\t\tthis.add_block_parser(new CommandAWDParser(), [253]);\n\t\tthis.add_block_parser(new BlockNameSpaceAWDParser(), [254]);\n\t\tthis.add_block_parser(new MetadataAWDParser(), [255]);\n\n\n\t}\n\n\tpublic add_block_parser(block_parser:AWDAssetParserBase, block_types:Array<number>):void\n\t{\n\t\tfor(var i:number=0; i<block_types.length;i++){\n\t\t\tthis._supported_asset_blocks[block_types[i]]  = block_parser;\n\t\t}\n\t\tthis._all_block_parsers.push(block_parser);\n\n\t}\n\n\tpublic init_parser(file_data:AWD3FileData):void\n\t{\n\t\tfor(var i:number=0; i<this._all_block_parsers.length;i++){\n\t\t\tthis._all_block_parsers[i].awd_file_data=file_data;\n\t\t}\n\n\t}\n\tpublic parseAsset(type:number):boolean\n\t{\n\n\t\tvar this_parser:AWDAssetParserBase=this._supported_asset_blocks[type];\n\t\tif(this_parser!=undefined){\n\t\t\tthis_parser.parseFromBytes();\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n}\n\nexport = AWDBlockParsers;",
    "/**\n * Created by 80prozent on 4/18/2015.\n */\n\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass AnimatorAWDParser extends AWDBlockParserBase\n{\n\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar animSetBlockAdress:number; /*int*/\n\t\tvar targetAnimationSet:AnimationSetBase;\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar type:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR});\n\n\t\tanimSetBlockAdress = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar targetMeshLength:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar meshAdresses:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tfor (var i:number /*int*/ = 0; i < targetMeshLength; i++)\n\t\t\tmeshAdresses.push(this.awd_file_data.newBlockBytes.readUnsignedInt());\n\n\t\tvar activeState:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar autoplay:boolean = ( this.awd_file_data.newBlockBytes.readUnsignedByte() == 1 );\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.parseUserAttributes();\n\n\t\tvar returnedArray:Array<any>;\n\t\tvar targetMeshes:Array<Mesh> = new Array<Mesh>();\n\n\t\tfor (i = 0; i < meshAdresses.length; i++) {\n\t\t\tvar targetMesh:Mesh = <Mesh>this.awd_file_data.getAssetByID(meshAdresses[i]);\n\t\t\tif (targetMesh!=undefined)\n\t\t\t\ttargetMeshes.push(targetMesh);\n\t\t}\n\t\tvar targetAnimationSet:AnimationSetBase = <AnimationSetBase>this.awd_file_data.getAssetByID(animSetBlockAdress);\n\t\tif (targetAnimationSet==undefined) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the AnimationSet ( \" + animSetBlockAdress + \" ) for this.awd_file_data Animator\");\n\t\t\treturn undefined;\n\t\t}\n\t\tvar thisAnimator:AnimatorBase;\n\t\tif (type == 1) {\n\n\t\t\tvar skeleton:Skeleton = <Skeleton>this.awd_file_data.getAssetByID(props.get(1, 0));\n\t\t\tif (skeleton==undefined) {\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the Skeleton ( \" + props.get(1, 0) + \" ) for this.awd_file_data Animator\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, skeleton);\n\n\t\t} else if (type == 2)\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\n\n\t\tfor (i = 0; i < targetMeshes.length; i++) {\n\t\t\tif (type == 1)\n\t\t\t\ttargetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\n\t\t\tif (type == 2)\n\t\t\t\ttargetMeshes[i].animator = (<VertexAnimator> thisAnimator);\n\t\t}\n\t\tthis.awd_file_data.cur_block.data = thisAnimator;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + this.awd_file_data.cur_block.name);\n\t}\n\n\n}\n\nexport = AnimatorAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\nclass AudioAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar data_len:number;\n\n\t\t//this.awd_file_data._texture_users[this.awd_file_data._cur_block_id.toString()] = [];\n\n\t\t// External\n\t\tif (type == 0) {\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar url:string;\n\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\n\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block.id.toString(), new URLRequest(url), false, null, true);\n\n\t\t} else {\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\n\t\t\tvar data:ByteArray;\n\t\t\tdata = new ByteArray();\n\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\n\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\n\n\t\t\t//\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\n\t\t\t//\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\n\t\t\t// This gives the browser time to initialise image width / height.\n\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, data, true);\n\n\t\t}\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\n\t\t// Ignore for now\n\t\tthis.awd_file_data.parseProperties(null);\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\t//this.awd_file_data._pPauseAndRetrieveDependencies();\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tvar audioStylesNames:Array<string> = [\"external\", \"embed\"]\n\t\t\tconsole.log(\"Start parsing a \" + audioStylesNames[type] + \" AudioFile\");\n\t\t}\n\t}\n\n\n}\n\nexport = AudioAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\n\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nclass BillboardAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar mat:MaterialBase= <MaterialBase> this.awd_file_data.getAssetByID(data_id);\n\n\t\tif (mat==undefined) {\n\t\t\tmat = new BasicMaterial();\n\t\t}\n\t\tmat.bothSides=true;\n\t\tvar billboard:Billboard = new Billboard(mat);\n\t\tthis.awd_file_data.cur_block.data = billboard;\n\t\t// todo: optional matrix etc can be put in properties.\n\t\tthis.awd_file_data.parseProperties(null);\n\n\t\tbillboard.extra = this.awd_file_data.parseUserAttributes();\n\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a Library-Billboard: Name = '\" + billboard.name + \"| Material-Name = \" + mat.name);\n\t\t}\n\n\t}\n\n\n}\n\nexport = BillboardAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass BlockNameSpaceAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\n\t\tvar id:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar nameSpaceString:string = this.awd_file_data.parseVarStr();\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\n\t}\n\n\n}\n\nexport = BlockNameSpaceAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Parser\t\t\t\t= require(\"awayjs-parsers/lib/AWD3Parser\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass CameraAWD3Parser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void {\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar projection:ProjectionBase;\n\n\t\tthis.awd_file_data.newBlockBytes.readUnsignedByte(); //set as active camera\n\t\tthis.awd_file_data.newBlockBytes.readShort(); //lengthof lenses - not used yet\n\n\t\tvar projectiontype:number = this.awd_file_data.newBlockBytes.readShort();\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({\n\t\t\t101: this.awd_file_data.propsNrType,\n\t\t\t102: this.awd_file_data.propsNrType,\n\t\t\t103: this.awd_file_data.propsNrType,\n\t\t\t104: this.awd_file_data.propsNrType\n\t\t});\n\n\t\tswitch (projectiontype) {\n\t\t\tcase 5001:\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\n\t\t\t\tbreak;\n\t\t\tcase 5002:\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\n\t\t\t\tbreak;\n\t\t\tcase 5003:\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\n\t\t\t\treturn;\n\t\t}\n\n\t\tvar camera:Camera = new Camera(projection);\n\t\tcamera.transform.matrix3D = mtx;\n\t\tif (par_id > 0) {\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id);\n\t\t\tif (parent != undefined) {\n\t\t\t\tparent.addChild(camera);\n\t\t\t\tparentName = parent.name;\n\t\t\t}\n\t\t}\n\n\t\tcamera.name = name;\n\t\tprops = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\tcamera.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = camera;\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + camera.name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\n\t\t}\n\n\t}\n\n\n}\n\nexport = CameraAWD3Parser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass CommandAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\n\t\tvar hasBlocks:boolean = ( this.awd_file_data.newBlockBytes.readUnsignedByte() == 1 );\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\n\t\tvar name:string = this.awd_file_data.parseVarStr();\n\n\t\tvar parentObject:DisplayObjectContainer;\n\t\tvar targetObject:DisplayObject;\n\n\t\tif(par_id>0)\n\t\t\tparentObject = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id); //for no only light is requested!!!!\n\n\t\tvar numCommands:number = this.awd_file_data.newBlockBytes.readShort();\n\t\tvar typeCommand:number = this.awd_file_data.newBlockBytes.readShort();\n\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR});\n\n\t\tswitch (typeCommand) {\n\t\t\tcase 1:\n\n\t\t\t\tvar targetID:number = props.get(1, 0);\n\t\t\t\t//var returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [LightBase.assetType, TextureProjector.assetType]); //for no only light is requested!!!!\n\t\t\t\ttargetObject = <DisplayObject>this.awd_file_data.getAssetByID(targetID); //for no only light is requested!!!!\n\t\t\t\tif(targetObject==undefined){\n\t\t\t\t\t//this._awd_data._blocks[blockID].addError(\"Could not find the light (ID = \" + targetID + \" ( for this CommandBock!\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (parentObject) {\n\t\t\t\t\tparentObject.addChild(targetObject);\n\t\t\t\t}\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (targetObject) {\n\t\t\tprops = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\n\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t\ttargetObject.extra = this.awd_file_data.parseUserAttributes();\n\n\t\t}\n\t\t//this._awd_data._blocks[blockID].data = targetObject\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\n\t\t}\n\t}\n\n\n}\n\nexport = CommandAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AWDProperties\t\t\t= require(\"../AWD3ParserUtils/AWDProperties\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\nclass DisplayObjectContainerAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\n\t\tvar par_id:number;\n\t\tvar mtx:Matrix3D;\n\t\tvar ctr:DisplayObjectContainer;\n\t\tvar parent:DisplayObjectContainer;\n\n\t\tctr = new DisplayObjectContainer();\n\t\tpar_id = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tmtx = this.awd_file_data.parseMatrix3D();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tctr.transform.matrix3D = mtx;\n\n\n\t\tif (par_id > 0) {\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id);\n\t\t\tif (parent != undefined) {\n\t\t\t\tparent.addChild(ctr);\n\t\t\t\tparentName = parent.name;\n\t\t\t}\n\t\t}\n\n\t\t// in AWD version 2.1 we read the Container properties\n\t\tif ((this.awd_file_data.major_version > 2)||((this.awd_file_data.major_version >= 2) && (this.awd_file_data.minor_version == 1))) {\n\t\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t}\n\t\t// in other versions we do not read the Container properties\n\t\telse {\n\t\t\tthis.awd_file_data.parseProperties(null);\n\t\t}\n\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\n\t\tctr.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data=ctr;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + ctr.name + \"' | Parent-Name = \" + parentName);\n\t\t}\n\t}\n\n\n}\n\nexport = DisplayObjectContainerAWDParser;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\n\nclass GeometryAWDParser extends AWDBlockParserBase\n{\n\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar geom:Geometry = new Geometry();\n\n\t\t// Read name and sub count\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar num_subs:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\t// Read optional properties\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.geoNrType, 2:this.awd_file_data.geoNrType});\n\t\tvar geoScaleU:number = props.get(1, 1);\n\t\tvar geoScaleV:number = props.get(2, 1);\n\n\t\t// Loop through sub meshes\n\t\tvar subs_parsed:number = 0;\n\t\twhile (subs_parsed < num_subs) {\n\t\t\tvar is_curve_geom:boolean=false;\n\t\t\tvar i:number;\n\t\t\tvar sm_len:number, sm_end:number;\n\t\t\tvar w_indices:Array<number>;\n\t\t\tvar weights:Array<number>;\n\n\t\t\tsm_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tsm_end = this.awd_file_data.newBlockBytes.position + sm_len;\n\n\t\t\tvar subProps:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.geoNrType, 2:this.awd_file_data.geoNrType});\n\t\t\t// Loop through data streams\n\t\t\twhile (this.awd_file_data.newBlockBytes.position < sm_end) {\n\t\t\t\tvar idx:number = 0;\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\n\n\t\t\t\t// Type, field type, length\n\t\t\t\tstr_type = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_ftype = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\n\n\t\t\t\tvar x:number, y:number, z:number;\n\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\tx = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t\ty = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t\tz = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\n\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\tindices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 3) {\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\tuvs[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 4) {\n\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\tnormals[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 6) {\n\t\t\t\t\tw_indices = Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\tw_indices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort()*3;\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 7) {\n\n\t\t\t\t\tweights = new Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\tweights[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\n\t\t\t\t\tis_curve_geom=true;\n\t\t\t\t\tvar idx_pos:number = 0;\n\t\t\t\t\tvar idx_curves:number = 0;\n\t\t\t\t\tvar idx_uvs:number = 0;\n\n\t\t\t\t\tvar positions:Array<number> = new Array<number>();\n\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// x\n\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// y\n\t\t\t\t\t\tpositions[idx_pos++] =  this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// type\n\n\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 2\n\n\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.awd_file_data.parseUserAttributes(); // Ignore sub-mesh attributes for now\n\t\t\tif(is_curve_geom){\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(new AttributesBuffer());\n\t\t\t\tcurve_sub_geom.setIndices(indices);\n\t\t\t\tcurve_sub_geom.setPositions(positions);\n\t\t\t\tcurve_sub_geom.setCurves(curveData);\n\t\t\t\tcurve_sub_geom.setUVs(uvs);\n\t\t\t\tgeom.addSubGeometry(curve_sub_geom);\n\t\t\t\tif (this.awd_file_data.debug)\n\t\t\t\t\tconsole.log(\"Parsed a CurveSubGeometry\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar triangle_sub_geom = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\t\tif (weights)\n\t\t\t\t\ttriangle_sub_geom.jointsPerVertex = weights.length / (verts.length / 3);\n\t\t\t\tif (normals)\n\t\t\t\t\ttriangle_sub_geom.autoDeriveNormals = false;\n\t\t\t\tif (uvs)\n\t\t\t\t\ttriangle_sub_geom.autoDeriveUVs = false;\n\t\t\t\t//triangle_sub_geom.autoDeriveNormals = false;\n\t\t\t\tif (true) {\n\t\t\t\t\ttriangle_sub_geom.autoDeriveTangents = true;\n\t\t\t\t}\n\t\t\t\ttriangle_sub_geom.setIndices(indices);\n\t\t\t\ttriangle_sub_geom.setPositions(verts);\n\t\t\t\ttriangle_sub_geom.setNormals(normals);\n\t\t\t\ttriangle_sub_geom.setUVs(uvs);\n\t\t\t\ttriangle_sub_geom.setTangents(null);\n\t\t\t\ttriangle_sub_geom.setJointWeights(weights);\n\t\t\t\ttriangle_sub_geom.setJointIndices(w_indices);\n\n\t\t\t\tvar scaleU:number = subProps.get(1, 1);\n\t\t\t\tvar scaleV:number = subProps.get(2, 1);\n\t\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\n\n\t\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\n\t\t\t\t\tsetSubUVs = true;\n\t\t\t\t\tscaleU = geoScaleU / scaleU;\n\t\t\t\t\tscaleV = geoScaleV / scaleV;\n\t\t\t\t}\n\n\t\t\t\tif (setSubUVs)\n\t\t\t\t\ttriangle_sub_geom.scaleUV(scaleU, scaleV);\n\t\t\t\tgeom.addSubGeometry(triangle_sub_geom);\n\t\t\t\tif (this.awd_file_data.debug)\n\t\t\t\t\tconsole.log(\"Parsed a TriangleSubGeometry\");\n\t\t\t}\n\n\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\n\t\t\t// when creating meshes (and their material assignments.)\n\n\t\t\tsubs_parsed++;\n\t\t}\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\n\t\t\tgeom.scaleUV(geoScaleU, geoScaleV);\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data=geom;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a TriangleGeometry: Name = \" + name);\n\t\t}\n\t}\n\n}\n\nexport = GeometryAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass LightAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\t\n\t\tvar light:LightBase;\n\t\tvar newShadowMapper:ShadowMapperBase;\n\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar lightType:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.propsNrType, 2:this.awd_file_data.propsNrType, 3:AWD3Utils.COLOR, 4:this.awd_file_data.propsNrType, 5:this.awd_file_data.propsNrType, 6:AWD3Utils.BOOL, 7:AWD3Utils.COLOR, 8:this.awd_file_data.propsNrType, 9:AWD3Utils.UINT8, 10:AWD3Utils.UINT8, 11:this.awd_file_data.propsNrType, 12:AWD3Utils.UINT16, 21:this.awd_file_data.matrixNrType, 22:this.awd_file_data.matrixNrType, 23:this.awd_file_data.matrixNrType});\n\t\tvar shadowMapperType:number = props.get(9, 0);\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\n\n\t\tif (lightType == 1) {\n\t\t\tlight = new PointLight();\n\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 4) {\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlight.transform.matrix3D = mtx;\n\n\t\t}\n\n\t\tif (lightType == 2) {\n\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 1) {\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\n\t\t\t\t}\n\n\t\t\t\t//if (shadowMapperType == 2)\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\n\t\t\t\t//if (shadowMapperType == 3)\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\n\n\t\t\t}\n\n\t\t}\n\t\tlight.name=name;\n\t\tlight.color = props.get(3, 0xffffff);\n\t\tlight.specular = props.get(4, 1.0);\n\t\tlight.diffuse = props.get(5, 1.0);\n\t\tlight.ambientColor = props.get(7, 0xffffff);\n\t\tlight.ambient = props.get(8, 0.0);\n\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\n\t\tif (newShadowMapper) {\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\n\t\t\t\tif (props.get(10, 1) != 1) {\n\t\t\t\t\tnewShadowMapper.depthMapSize = this.awd_file_data.getDepthSizeFromEnum(props.get(10, 1));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (props.get(10, 2) != 2) {\n\t\t\t\t\tnewShadowMapper.depthMapSize = this.awd_file_data.getDepthSizeFromEnum(props.get(10, 2));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlight.shadowMapper = newShadowMapper;\n\t\t\tlight.castsShadows = true;\n\t\t}\n\n\t\tif (par_id != 0) {\n\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id)\n\n\t\t\tif (parent!=undefined){\n\t\t\t\tparent.addChild(light);\n\t\t\t\tparentName = parent.name;\n\t\t\t} else {\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find a parent for this.awd_file_data Light\");\n\t\t\t}\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t//(<DisplayObjectContainer> this.awd_file_data._pContent).addChild(light);\n\t\t}\n\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = light;\n\n\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + this.awd_file_data.cur_block.name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\n\t}\n\n\n}\n\nexport = LightAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\n\nclass LightPickerAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar numLights:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\n\t\tvar k:number = 0;\n\t\tvar lightID:number = 0;\n\n\t\tvar returnedArrayLight:Array<any>;\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\n\n\t\tfor (k = 0; k < numLights; k++) {\n\t\t\tlightID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar light:LightBase = <LightBase>this.awd_file_data.getAssetByID(lightID)\n\n\t\t\tif (light!=undefined) {\n\t\t\t\tlightsArray.push(<LightBase> light);\n\t\t\t\tlightsArrayNames.push(( <LightBase> light).name);\n\n\t\t\t} else {\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find a Light Nr \" + k + \" (ID = \" + lightID + \" ) for this.awd_file_data LightPicker\");\n\t\t\t}\n\t\t}\n\n\t\tif (lightsArray.length == 0) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not create this.awd_file_data LightPicker, cause no Light was found.\");\n\t\t\tthis.awd_file_data.parseUserAttributes();\n\t\t\treturn undefined; //return without any more parsing for this.awd_file_data block\n\t\t}\n\n\t\tvar lightPicker:LightPickerBase = new StaticLightPicker(lightsArray);\n\t\tthis.awd_file_data.cur_block.data = lightPicker;\n\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + lightsArrayNames.toString());\n\t\t}\n\t}\n\n\n}\n\nexport = LightPickerAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\n\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\")\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass MaterialAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\t// version 2.0\n\t\t////blockLength = block.len;\n\t\tvar name:string;\n\t\tvar type:number;\n\t\tvar props:AWDProperties;\n\t\tvar mat:MethodMaterial;\n\t\tvar attributes:Object;\n\t\tvar finalize:boolean;\n\t\tvar num_methods:number;\n\t\tvar methods_parsed:number;\n\t\tvar returnedArray:Array<any>;\n\t\tvar mat:MethodMaterial;\n\t\tvar normalTexture:Single2DTexture;\n\t\tvar specTexture:Single2DTexture;\n\t\tvar returnedArray:Array<any>;\n\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\ttype = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tnum_methods = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\n\t\tif((this.awd_file_data.major_version==2)&&(this.awd_file_data.major_version==0)) {\n\n\t\t\t// Read material numerical properties\n\t\t\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\n\t\t\tprops = this.awd_file_data.parseProperties({\n\t\t\t\t1: AWD3Utils.INT32,\n\t\t\t\t2: AWD3Utils.BADDR,\n\t\t\t\t10: this.awd_file_data.propsNrType,\n\t\t\t\t11: AWD3Utils.BOOL,\n\t\t\t\t12: this.awd_file_data.propsNrType,\n\t\t\t\t13: AWD3Utils.BOOL\n\t\t\t});\n\t\t\tmethods_parsed = 0;\n\t\t\twhile (methods_parsed < num_methods) {\n\t\t\t\tvar method_type:number;\n\n\t\t\t\tmethod_type = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\tthis.awd_file_data.parseProperties(null);\n\t\t\t\tthis.awd_file_data.parseUserAttributes();\n\t\t\t\tmethods_parsed += 1;\n\t\t\t}\n\t\t\tvar debugString:string = \"\";\n\t\t\tattributes = this.awd_file_data.parseUserAttributes();\n\t\t\tif (type === 1) { // Color material\n\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\t\tvar color:number;\n\t\t\t\tcolor = props.get(1, 0xffffff);\n\t\t\t\t/*if (this.awd_file_data.materialMode < 2) {\n\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\n\t\t\t\t} else {\n\t\t\t\t\tmat = new MethodMaterial(color);\n\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t}*/\n\t\t\t} else if (type === 2) {\n\t\t\t\tvar tex_addr:number = props.get(2, 0);\n\t\t\t\tvar texture:TextureBase=undefined;\n\t\t\t\tif (tex_addr > 0) {\n\t\t\t\t\tvar texture:TextureBase = <TextureBase> this.awd_file_data.getAssetByID(tex_addr);\n\t\t\t\t}\n\t\t\t\tif (texture==undefined) {\n\t\t\t\t\ttexture= DefaultMaterialManager.getDefaultTexture();\n\t\t\t\t}\n\n\t\t\t\tmat = new MethodMaterial(<Single2DTexture>texture);\n\t\t\t\t/*\n\t\t\t\tif (this.awd_file_data.materialMode < 2) {\n\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\n\t\t\t\t} else {\n\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t}\n\n\t\t\tmat.extra = attributes;\n\t\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\t\tmat.repeat = props.get(13, false);\n\t\t\tmat.name=name;\n\t\t\tif (this.awd_file_data.debug) {\n\t\t\t\tconsole.log(debugString);\n\n\t\t\t}\n\t\t\tthis.awd_file_data.cur_block.data=mat;\n\t\t\treturn;\n\t\t}\n\n\t\t// version 2.1+\n\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT32, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 4:AWD3Utils.UINT8, 5:AWD3Utils.BOOL, 6:AWD3Utils.BOOL, 7:AWD3Utils.BOOL, 8:AWD3Utils.BOOL, 9:AWD3Utils.UINT8, 10:this.awd_file_data.propsNrType, 11:AWD3Utils.BOOL, 12:this.awd_file_data.propsNrType, 13:AWD3Utils.BOOL, 15:this.awd_file_data.propsNrType, 16:AWD3Utils.UINT32, 17:AWD3Utils.BADDR, 18:this.awd_file_data.propsNrType, 19:this.awd_file_data.propsNrType, 20:AWD3Utils.UINT32, 21:AWD3Utils.BADDR, 22:AWD3Utils.BADDR});\n\t\tvar spezialType:number = props.get(4, 0);\n\t\tvar debugString:string = \"Parsed Material \";\n\n\t\tif (spezialType >= 2) {//this.awd_file_data is no supported material\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (type <= 2) {// Color material\n\t\t\t/*\n\t\t\tif (this.awd_file_data.materialMode == 1)\n\t\t\t\tspezialType = 0;\n\t\t\telse if (this.awd_file_data.materialMode == 2)\n\t\t\t\tspezialType = 1;\n\t\t\t\t*/\n\n\t\t\tif (spezialType < 2) {//this.awd_file_data is SinglePass or MultiPass\n\n\t\t\t\tif (type == 1) {// Color material\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\n\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\n\t\t\t\t\t\tmat = new MethodMaterial(color);\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\n\n\t\t\t\t\t} else { //\tSinglePassMaterial\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\t\t\t}\n\n\t\t\t\t} else if (type == 2) {// texture material\n\t\t\t\t\tvar tex_addr:number = props.get(2, 0);//TODO temporarily swapped so that diffuse texture goes to ambient\n\t\t\t\t\tvar diftexture:TextureBase=undefined;\n\t\t\t\t\tif (tex_addr > 0) {\n\t\t\t\t\t\tdiftexture = <TextureBase> this.awd_file_data.getAssetByID(tex_addr);\n\t\t\t\t\t}\n\t\t\t\t\tif (diftexture==undefined) {\n\t\t\t\t\t\tdiftexture= DefaultMaterialManager.getDefaultTexture();\n\t\t\t\t\t}\n\t\t\t\t\tmat = new MethodMaterial(<Single2DTexture>diftexture);\n\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + diftexture.name;\n\t\t\t\t\t} else {//\tSinglePassMaterial\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + diftexture.name;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tvar diffuseTex_addr:number = props.get(17, 0);\n\n\t\t\t\tvar diffuseTexture:TextureBase = undefined;\n\t\t\t\tif (diffuseTex_addr > 0) {\n\t\t\t\t\tdiffuseTexture = <Single2DTexture> this.awd_file_data.getAssetByID(diffuseTex_addr);\n\t\t\t\t}\n\t\t\t\tif (diffuseTexture) {\n\t\t\t\t\tmat.diffuseTexture = <Single2DTexture>diffuseTexture;\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\n\t\t\t\t}\n\n\t\t\t\tvar normalTex_addr:number = props.get(3, 0);\n\n\n\t\t\t\tnormalTexture = undefined;\n\t\t\t\tif (normalTex_addr > 0) {\n\t\t\t\t\tnormalTexture = <Single2DTexture> this.awd_file_data.getAssetByID(normalTex_addr);\n\t\t\t\t}\n\n\t\t\t\tvar specTex_addr:number = props.get(21, 0);\n\t\t\t\tspecTexture=undefined;\n\t\t\t\tif (specTex_addr > 0) {\n\t\t\t\t\tspecTexture = <Single2DTexture> this.awd_file_data.getAssetByID(specTex_addr);\n\t\t\t\t}\n\n\t\t\t\tvar lightPickerAddr:number = props.get(22, 0);\n\t\t\t\tif(lightPickerAddr>0) {\n\t\t\t\t\tmat.lightPicker = <LightPickerBase> this.awd_file_data.getAssetByID(lightPickerAddr);\n\t\t\t\t}\n\n\t\t\t\tmat.smooth = props.get(5, true);\n\t\t\t\tmat.mipmap = props.get(6, true);\n\t\t\t\tmat.bothSides = props.get(7, false);\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\n\t\t\t\tmat.blendMode = this.awd_file_data.getBlendModeStringFromEnum(props.get(9, 0));\n\t\t\t\tmat.repeat = props.get(13, false);\n\n\t\t\t\tif (normalTexture)\n\t\t\t\t\tmat.normalMap = normalTexture;\n\n\t\t\t\tif (specTexture)\n\t\t\t\t\tmat.specularMap = specTexture;\n\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\t\t\tmat.ambient = props.get(15, 1.0);\n\t\t\t\tmat.diffuseColor = props.get(16, 0xffffff);\n\t\t\t\tmat.specular = props.get(18, 1.0);\n\t\t\t\tmat.gloss = props.get(19, 50);\n\t\t\t\tmat.specularColor = props.get(20, 0xffffff);\n\n\t\t\t\tvar methods_parsed:number = 0;\n\t\t\t\tvar targetID:number;\n\n\t\t\t\twhile (methods_parsed < num_methods) {\n\t\t\t\t\tvar method_type:number;\n\t\t\t\t\tmethod_type = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\t\t\t\tprops = this.awd_file_data.parseProperties({\n\t\t\t\t\t\t1: AWD3Utils.BADDR,\n\t\t\t\t\t\t2: AWD3Utils.BADDR,\n\t\t\t\t\t\t3: AWD3Utils.BADDR,\n\t\t\t\t\t\t101: this.awd_file_data.propsNrType,\n\t\t\t\t\t\t102: this.awd_file_data.propsNrType,\n\t\t\t\t\t\t103: this.awd_file_data.propsNrType,\n\t\t\t\t\t\t201: AWD3Utils.UINT32,\n\t\t\t\t\t\t202: AWD3Utils.UINT32,\n\t\t\t\t\t\t301: AWD3Utils.UINT16,\n\t\t\t\t\t\t302: AWD3Utils.UINT16,\n\t\t\t\t\t\t401: AWD3Utils.UINT8,\n\t\t\t\t\t\t402: AWD3Utils.UINT8,\n\t\t\t\t\t\t601: AWD3Utils.COLOR,\n\t\t\t\t\t\t602: AWD3Utils.COLOR,\n\t\t\t\t\t\t701: AWD3Utils.BOOL,\n\t\t\t\t\t\t702: AWD3Utils.BOOL,\n\t\t\t\t\t\t801: AWD3Utils.MTX4x4\n\t\t\t\t\t});\n\n\t\t\t\t\tswitch (method_type) {\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffectMethod\n\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tvar fx_method:EffectMethodBase = <EffectMethodBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t\tmat.addEffectMethod(fx_method);\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<EffectMethodBase> fx_method).name;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\n\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tvar shadow_method:ShadowMethodBase = <ShadowMethodBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t\tmat.shadowMethod=shadow_method;\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<ShadowMethodBase> shadow_method).name;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tvar cubeTex:SingleCubeTexture=undefined;\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tcubeTex = <SingleCubeTexture>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(cubeTex==undefined){\n\t\t\t\t\t\t\t\tcubeTex=<SingleCubeTexture>this.awd_file_data.getDefaultCubeTexture();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data EnvMapAmbientMethodMaterial\");\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod();\n\t\t\t\t\t\t\tmat.texture = cubeTex;\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + (<SingleCubeTexture> cubeTex).name;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(thisTex==undefined){\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the GradientDiffuseTexture (ID = \" + targetID + \" ) for this.awd_file_data GradientDiffuseMethod\");\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(<Single2DTexture>thisTex);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + (<Single2DTexture>thisTex).name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(thisTex==undefined){\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this.awd_file_data LightMapDiffuseMethod\");\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(<Single2DTexture>thisTex, this.awd_file_data.getBlendModeStringFromEnum(props.get(401, 10)), false, mat.diffuseMethod);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + (<Single2DTexture> thisTex).name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\n\t\t\t\t\t\t\tif (targetID>0) {\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(thisTex==undefined){\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the SecoundNormalMap (ID = \" + targetID + \" ) for this.awd_file_data SimpleWaterNormalMethod\");\n\t\t\t\t\t\t\t//if (!mat.normalMap)\n\t\t\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find a normal Map on this.awd_file_data Material to use with this.awd_file_data SimpleWaterNormalMethod\");\n\t\t\t\t\t\t\tif(mat.normalMap==undefined)\n\t\t\t\t\t\t\t\tmat.normalMap = <Single2DTexture>thisTex;\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(<Single2DTexture>mat.normalMap, <Single2DTexture>thisTex);\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + (<Single2DTexture> thisTex).name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tthis.awd_file_data.parseUserAttributes();\n\t\t\t\t\tmethods_parsed += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// todo: we should not need this.awd_file_data anymore (if using texture-atlas)\n\t\telse if ((type>=3)&&(type<=7)){\n\t\t\t// if this.awd_file_data is a curve material, we create it, finalize it, assign it to block-cache and return and return.\n\t\t\tvar color:number = props.get(1, 0xcccccc);\n\t\t\tdebugString+=color;\n\t\t\n\t\t\tvar diffuseTex_addr:number = props.get(2, 0);\n\t\t\n\t\t\tvar diffuseTexture:TextureBase=undefined;\n\t\t\tif (diffuseTex_addr>0) {\n\t\t\t\tdiffuseTexture = <TextureBase>this.awd_file_data.getAssetByID(diffuseTex_addr);\n\t\t\t}\n\t\t\tif(diffuseTex_addr==undefined){\n\t\t\t\tdiffuseTexture=DefaultMaterialManager.getDefaultTexture();\n\t\t\t}\n\t\t\n\t\t\tvar basic_mat:BasicMaterial = new BasicMaterial(<Single2DTexture>diffuseTexture);\n\t\t\t//debugString+= \" alpha = \"+props.get(10, 1.0)+\" \";\n\t\t\tdebugString+= \" texture = \"+diffuseTex_addr+\" \";\n\t\t\tbasic_mat.bothSides = true;\n\t\t\tbasic_mat.preserveAlpha = true;\n\t\t\tbasic_mat.alphaBlending = true;\n\t\t\tbasic_mat.extra = this.awd_file_data.parseUserAttributes();\n\t\t\tif (this.awd_file_data.debug)\n\t\t\t\tconsole.log(debugString);\n\t\t\tthis.awd_file_data.cur_block.data=basic_mat;\n\t\t\treturn;\n\t\t\n\t\t}\n\t\tmat.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data=mat;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(debugString);\n\t\t}\n\t}\n\n}\n\nexport = MaterialAWDParser;",
    "/**\n * Created by 80prozent on 4/18/2015.\n */\n\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AWD3Utils\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass MeshAWDParser extends AWDBlockParserBase\n{\n\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar num_materials:number;\n\t\tvar materials_parsed:number;\n\t\tif(this.awd_file_data.cur_block.type==23) {\n\t\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\n\t\t}\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar geom:Geometry = <Geometry>this.awd_file_data.getAssetByID(data_id)\n\n\t\tif (geom==undefined) {\n\t\t\tgeom = new Geometry();\n\t\t}\n\n\t\tthis.awd_file_data.cur_block.geoID = data_id;\n\t\tvar materials:Array<MaterialBase> = new Array<MaterialBase>();\n\t\tnum_materials = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\tvar materialNames:Array<string> = new Array<string>();\n\t\tmaterials_parsed = 0;\n\n\n\t\twhile (materials_parsed < num_materials) {\n\t\t\tvar mat_id:number;\n\t\t\tmat_id = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar m:MaterialBase = <MaterialBase> this.awd_file_data.getAssetByID(mat_id);\n\t\t\tif(m!=undefined) {\n\t\t\t\tmaterials.push(m);\n\t\t\t\tmaterialNames.push(m.name);\n\t\t\t}\n\t\t\tmaterials_parsed++;\n\t\t}\n\n\t\tvar mesh:Mesh = new Mesh(geom, null);\n\n\t\tif(this.awd_file_data.cur_block.type==23) {\n\n\t\t\tmesh.transform.matrix3D = mtx;\n\t\t\tif(par_id>0) {\n\t\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id)\n\n\t\t\t\tif (parent != undefined) {\n\t\t\t\t\tparent.addChild(mesh);\n\t\t\t\t\tparentName = parent.name;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\n\t\t\tmesh.material = materials[0];\n\t\t} else if (materials.length > 1) {\n\t\t\tvar i:number;\n\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\n\t\t\t}\n\t\t}\n\t\tif ((this.awd_file_data.major_version > 2)||((this.awd_file_data.major_version >= 2) && (this.awd_file_data.minor_version == 1))) {\n\t\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8, 5:AWD3Utils.BOOL});\n\t\t\tmesh.pivot = new Vector3D(<number>props.get(1, 0), <number>props.get(2, 0), <number> props.get(3, 0));\n\t\t\tmesh.castsShadows = props.get(5, true);\n\t\t} else {\n\t\t\tthis.awd_file_data.parseProperties(null);\n\t\t}\n\n\t\tmesh.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = mesh;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a Mesh: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\n\t\t}\n\t}\n\n\n}\n\nexport = MeshAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass MetadataAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT32, 2:AWD3Utils.AWDSTRING, 3:AWD3Utils.AWDSTRING, 4:AWD3Utils.AWDSTRING, 5:AWD3Utils.AWDSTRING});\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\n\t\t}\n\t}\n\n\n}\n\nexport = MetadataAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDBitFlags\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport MovieClip \t\t\t\t\t= require(\"awayjs-player/lib/display/MovieClip\");\nimport TimelineKeyFrame \t\t\t= require(\"awayjs-player/lib/timeline/TimelineKeyFrame\");\nimport AddChildCommand \t\t\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildCommand\");\nimport AddChildAtDepthCommand\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildAtDepthCommand\");\nimport ApplyAS2DepthsCommand\t\t= require(\"awayjs-player/lib/timeline/commands/ApplyAS2DepthsCommand\");\nimport ExecuteScriptCommand \t\t= require(\"awayjs-player/lib/timeline/commands/ExecuteScriptCommand\");\nimport RemoveChildCommand \t\t\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildCommand\");\nimport RemoveChildrenAtDepthCommand\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildrenAtDepthCommand\");\nimport SetInstanceNameCommand \t\t= require(\"awayjs-player/lib/timeline/commands/SetInstanceNameCommand\");\nimport UpdatePropertyCommand \t\t= require(\"awayjs-player/lib/timeline/commands/UpdatePropertyCommand\");\nimport SetMaskCommand \t\t        = require(\"awayjs-player/lib/timeline/commands/SetMaskCommand\");\n\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport View\t\t\t= require(\"awayjs-display/lib/containers/View\");\n\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\n\nclass MovieClipAWDParser extends AWDBlockParserBase\n{\n\n\tprivate factory:AS2SceneGraphFactory;\n\tconstructor(view:View = null)\n\t{\n\t\tsuper();\n\t\tthis.factory = new AS2SceneGraphFactory(view);\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar c:number;\n\t\tvar new_mc = this.factory.createMovieClip();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar isScene = !!this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar sceneID = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar fps:number = this.awd_file_data.newBlockBytes.readFloat();\n\t\t//console.log(\"fps = \"+fps);\n\t\t//new_mc.fps=fps;\n\t\tvar ms_per_frame = 1000 / fps;\n\t\tvar num_instances:number=0;\n\t\tvar num_all_display_instances:number=0;\n\n\n\t\t// register list of potential childs\n\t\t// a potential child can be reused on a timeline (added / removed / added)\n\t\t// However, for each potential child, we need to register the max-number of instances that a frame contains\n\t\t// we parse 2 lists of potential-childs:\n\t\t// -\tthe first list contains potential-childs that are only ever instanced once per frame.\n\t\t// -\tthe second list contains potential-childs that are instanced multiple times on some frames.\n\n\t\t// on registering a child, the child gets a incremental-id assigned. This is the id, that the commands are using to access the childs.\n\t\t// hence we need to be careful to register all objects in correct order.\n\n\t\tvar num_potential_childs:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tfor (i = 0; i < num_potential_childs; i++) {\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\n\t\t\tif (cmd_asset != null) {\n\t\t\t\tnew_mc.registerPotentialChild(cmd_asset);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\n\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t}\n\t\t}\n\t\tnum_all_display_instances+=num_potential_childs;\n\t\tvar num_potential_childs_multi_instanced = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tnum_potential_childs+=num_potential_childs_multi_instanced;\n\t\tfor (i = 0; i < num_potential_childs_multi_instanced; i++) {\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tnum_instances = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\tnum_all_display_instances+=num_instances;\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\n\t\t\tif (cmd_asset != null) {\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\n\t\t\t\t\tnew_mc.registerPotentialChild(cmd_asset);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\n\t\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\n\t\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\n\t\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//console.log(\"Parsed \"+num_potential_childs+\" potential childs. They will be used by \"+num_all_display_instances+\" instances.\");\n\n\t\t// register list of potential sounds\n\t\t// a potential child can be reused on a timeline (added / removed / added)\n\t\tvar num_potential_sounds = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tfor (i = 0; i < num_potential_sounds; i++) {\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\n\t\t\tif (cmd_asset != null) {\n\t\t\t\t//todo: register sound objects on movieclip\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//todo: this.awd_file_data is a error that might break complete timeline, because all sound obj-id shift\n\t\t\t}\n\t\t}\n\t\t//console.log(\"Parsed \"+num_potential_sounds+\" potential sounds\");\n\n\t\tvar numFrames = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\t//console.log(\"numFrames \"+numFrames);\n\n\t\tvar totalDuration:number = 0;\n\t\tvar frameDuration:number;\n\t\tvar numLabels:number;\n\t\tvar numCommands:number;\n\t\tvar objectID:number;\n\t\tvar target_depth:number;\n\t\tvar resourceID:number;\n\t\tvar number_of_obj:number;\n\t\tvar commandType:number;\n\t\tvar frame:TimelineKeyFrame;\n\t\tvar hasDepthChanges:boolean;\n\t\tfor (i = 0; i < numFrames; i++) {\n\t\t\t// todo: remove the ms_per_frame to set the duration in frames\n\t\t\tframeDuration = this.awd_file_data.newBlockBytes.readUnsignedInt()*ms_per_frame;\n\t\t\tframe = new TimelineKeyFrame(totalDuration, frameDuration);\n\t\t\ttotalDuration += frameDuration;\n\n\t\t\tnumLabels = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\tfor (j = 0; j < numLabels; j++)\n\t\t\t\tframe.label = this.awd_file_data.parseVarStr();\n\n\t\t\tnumCommands = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t//console.log(\"numCommands \"+numCommands);\n\t\t\t//traceString += \"\\n      Commands \" + numCommands;\n\t\t\thasDepthChanges = false;\n\t\t\tfor (j = 0; j < numCommands; j++) {\n\t\t\t\tcommandType = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\n\t\t\t\t// 1 = remove a number of objects by depth\n\t\t\t\t// 2 = add a object by child-id at specific depth\n\t\t\t\t// 3 = update a object by child-id\n\t\t\t\t// 4 = add / update sound - (not finished)\n\n\t\t\t\tswitch (commandType) {\n\n\t\t\t\t\tcase 1:// remove a number of objects at specific depth\n\t\t\t\t\t\tnumber_of_obj = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t//console.log(\"number_of_obj \", number_of_obj);\n\t\t\t\t\t\tvar remove_depths:Array<number>=new Array<number>();\n\t\t\t\t\t\tfor (c = 0; c < number_of_obj; c++) {\n\t\t\t\t\t\t\t// Remove Object Command\n\t\t\t\t\t\t\ttarget_depth = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\tremove_depths.push(target_depth);\n\t\t\t\t\t\t\t//console.log(\"\\n       - Remove object at depth: \" + target_depth);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tframe.frameConstructCommands.push(new RemoveChildrenAtDepthCommand(remove_depths));\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2:// add a of object by child-id at specific depth\n\t\t\t\t\tcase 3:// update a object by child-id\n\t\t\t\t\t\tobjectID = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t//console.log(\"add / update objectID \", objectID);\n\t\t\t\t\t\tif (commandType == 2) {\n\t\t\t\t\t\t\thasDepthChanges=true;\n\t\t\t\t\t\t\ttarget_depth = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\t//console.log(\"target_depth \", target_depth);\n\t\t\t\t\t\t\tvar potChild = new_mc.getPotentialChildPrototype(objectID);\n\t\t\t\t\t\t\tif (potChild != undefined) {\n\t\t\t\t\t\t\t\tframe.frameConstructCommands.push(new AddChildAtDepthCommand(objectID, target_depth));\n\t\t\t\t\t\t\t\t// if the object is a tetfield, we set the textfield-name as instancename\n\t\t\t\t\t\t\t\tif(potChild.isAsset(TextField)) {\n\t\t\t\t\t\t\t\t\tframe.frameConstructCommands.push(new SetInstanceNameCommand(objectID, potChild.name));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tconsole.log(\"ERROR: could not find the objectID \", objectID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar props_flag = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t/*\tProps_flags\n\t\t\t\t\t\t 1: read display matrix - 6 x float,\n\t\t\t\t\t\t 2: read display matrix - read another UINT8-bitflag that determinates what matrix components to parse\n\t\t\t\t\t\t 3: read color matrix - 4 x float, 4 x uint16\n\t\t\t\t\t\t 4: read color matrix - read another UINT8-bitflag that determinates what matrix components to parse\n\t\t\t\t\t\t 5: blendmode - uint8\n\t\t\t\t\t\t 6: visible - boolean\n\t\t\t\t\t\t 7: AWD3Parser.UINT8\n\t\t\t\t\t\t });*/\n\t\t\t\t\t\t// read display matrix\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG1)) {\n\t\t\t\t\t\t\tvar thisMatrix = new Matrix3D();\n\t\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG2)) {\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthisMatrix.rawData[0] = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.rawData[1] = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.rawData[4] = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.rawData[5] = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.position = new Vector3D(this.awd_file_data.newBlockBytes.readFloat(), this.awd_file_data.newBlockBytes.readFloat(), 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tframe.frameConstructCommands.push(new UpdatePropertyCommand(objectID, \"_iMatrix3D\", thisMatrix));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// read colortransforms\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG3)) {\n\t\t\t\t\t\t\tvar thisColorTransform = new ColorTransform();\n\t\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG4)) {\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthisColorTransform.redMultiplier = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.greenMultiplier = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.blueMultiplier = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.alphaMultiplier = this.awd_file_data.newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.redOffset = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\t\tthisColorTransform.greenOffset = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\t\tthisColorTransform.blueOffset = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\t\tthisColorTransform.alphaOffset = this.awd_file_data.newBlockBytes.readShort();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG5)) {\n\t\t\t\t\t\t\tvar blendmode_int = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\t\t\t\t\tvar blendmode_string = this.awd_file_data.getBlendModeStringFromEnum(blendmode_int);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG6)) {\n\t\t\t\t\t\t\tframe.frameConstructCommands.push(new UpdatePropertyCommand(objectID, \"visible\", this.awd_file_data.newBlockBytes.readByte()));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG7)) {\n\t\t\t\t\t\t\tvar instanceName = this.awd_file_data.parseVarStr();\n\t\t\t\t\t\t\tif (instanceName.length) {\n\t\t\t\t\t\t\t\tframe.frameConstructCommands.push(new SetInstanceNameCommand(objectID, instanceName));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG8)) {\n\t\t\t\t\t\t\tvar mask_id_nums = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t\tvar mask_ids = new Array();\n\t\t\t\t\t\t\tfor (var mi_cnt = 0; mi_cnt < mask_id_nums; mi_cnt++) {\n\t\t\t\t\t\t\t\tmask_ids.push(this.awd_file_data.newBlockBytes.readShort());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (mask_ids.length > 0) {\n\t\t\t\t\t\t\t\tif ((mask_ids.length == 1) && (mask_ids[0] == -1)) {\n\t\t\t\t\t\t\t\t\t// TODO: this.awd_file_data object is used as mask\n\t\t\t\t\t\t\t\t\tframe.frameConstructCommands.push(new UpdatePropertyCommand(objectID, \"_iMaskID\", objectID));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tframe.frameConstructCommands.push(new SetMaskCommand(objectID, mask_ids));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 4:\n\n\t\t\t\t\t\t// Add Sound Command\n\t\t\t\t\t\t// TODO: create CommandPropsSound and check which asset to use\n\t\t\t\t\t\tobjectID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\t// TODO: implement sound in timeline\n\t\t\t\t\t\t//commandString += \"\\n      - Add new Sound AWD-ID = \" + resourceID.toString() + \" as object_id = \" + objectID.toString();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t//commandString += \"\\n       - Unknown Command Type = \" + commandType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasDepthChanges) {\n\t\t\t\t// only want to do this.awd_file_data once after all children's depth values are updated\n\t\t\t\tframe.frameConstructCommands.push(new ApplyAS2DepthsCommand());\n\t\t\t\thasDepthChanges = false;\n\t\t\t}\n\n\t\t\tvar length_code = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tif (length_code > 0) {\n\t\t\t\t// TODO: Script should probably not be attached to keyframes?\n\t\t\t\tvar frame_code = this.awd_file_data.newBlockBytes.readUTFBytes(length_code);\n\t\t\t\tframe.framePostConstructCommands.push(new ExecuteScriptCommand(frame_code));\n\t\t\t\t//traceString += \"\\nframe-code = \" + frame_code;\n\t\t\t}\n\t\t\t//traceString += commandString;\n\t\t\t//trace(\"length_code = \"+length_code+\" frame_code = \"+frame_code);\n\t\t\tthis.awd_file_data.newBlockBytes.readUnsignedInt();// user attributes - skip for now\n\t\t\t//console.log(traceString);\n\t\t\tnew_mc.addFrame(frame);\n\n\t\t}\n\t\tthis.awd_file_data.parseProperties(null);\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = new_mc;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| isScene = \" + isScene + \"| sceneID = \" + sceneID + \"| numFrames = \" + numFrames);\n\t}\n\n\n}\n\nexport = MovieClipAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nclass PrefabAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar name:string;\n\t\tvar prefab:PrefabBase;\n\t\tvar primType:number;\n\t\tvar subs_parsed:number;\n\t\tvar props:AWDProperties;\n\t\tvar bsm:Matrix3D;\n\n\t\t// Read name and sub count\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tprimType = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tprops = this.awd_file_data.parseProperties({101:this.awd_file_data.geoNrType, 102:this.awd_file_data.geoNrType, 103:this.awd_file_data.geoNrType, 110:this.awd_file_data.geoNrType, 111:this.awd_file_data.geoNrType, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 303:AWD3Utils.UINT16, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL, 703:AWD3Utils.BOOL, 704:AWD3Utils.BOOL});\n\n\t\tvar primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"]\n\n\t\tswitch (primType) {\n\t\t\t// to do, not all properties are set on all primitives\n\n\t\t\tcase 1:\n\t\t\t\tprefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tprefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\tprefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 4:\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\n\t\t\t\tif (!props.get(701, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\n\t\t\t\tif (!props.get(702, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\n\t\t\t\tif (!props.get(703, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\t\tprefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 6:\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 7:\n\t\t\t\tprefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tprefab = new PrefabBase();\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\n\t\t\t//geom.subGeometries;\n\t\t\t//geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\n\t\t}\n\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = prefab;\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tif ((primType < 0) || (primType > 7)) {\n\t\t\t\tprimType = 0;\n\t\t\t}\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + this.awd_file_data.cur_block.name + \"| type = \" + primitiveTypes[primType]);\n\t\t}\n\t}\n\n\n}\n\nexport = PrefabAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\n\nclass ShadowMethodAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar type:number;\n\t\tvar data_len:number;\n\t\tvar asset:ShadowMethodBase;\n\t\tvar shadowLightID:number;\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tshadowLightID = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar light:LightBase=<LightBase> this.awd_file_data.getAssetByID(shadowLightID);\n\n\t\tif (light==undefined) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the TargetLight (ID = \" + shadowLightID + \" ) for this.awd_file_data ShadowMethod - ShadowMethod not created\");\n\t\t\treturn;\n\t\t}\n\n\t\tasset = this.parseShadowMethodList(light);\n\n\t\tif (!asset)\n\t\t\treturn;\n\t\tthis.awd_file_data.parseUserAttributes(); // Ignore for now\n\t\tthis.awd_file_data.cur_block.data = asset;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", light.name);\n\t\t}\n\t}\n\n\n\t// this.awd_file_data functions reads and creates a ShadowMethodMethod\n\tprivate parseShadowMethodList(light:LightBase):ShadowMethodBase\n\t{\n\n\t\tvar methodType:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar shadowMethod:ShadowMethodBase;\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 101:this.awd_file_data.propsNrType, 102:this.awd_file_data.propsNrType, 103:this.awd_file_data.propsNrType, 201:AWD3Utils.UINT32, 202:AWD3Utils.UINT32, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 401:AWD3Utils.UINT8, 402:AWD3Utils.UINT8, 601:AWD3Utils.COLOR, 602:AWD3Utils.COLOR, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL, 801:AWD3Utils.MTX4x4});\n\n\t\tvar targetID:number;\n\t\tvar returnedArray:Array<any>\n\t\tswitch (methodType) {\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this.awd_file_data CascadeShadowMapMethod - ShadowMethod not created\");\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\n\t\t\t//\t\t\t\t\t}\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 1002: //ShadowNearMethod\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\tvar shadow_meth:ShadowMapMethodBase = <ShadowMapMethodBase>this.awd_file_data.getAssetByID(targetID);\n\t\t\t\tif (shadow_meth==undefined) {\n\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this.awd_file_data ShadowNearMethod - ShadowMethod not created\");\n\t\t\t\t\treturn shadowMethod;\n\t\t\t\t}\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> shadow_meth);\n\t\t\t\tbreak;\n\t\t\tcase 1101: //ShadowFilteredMethod\n\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t\tcase 1102: //ShadowDitheredMethod\n\n\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1103: //ShadowSoftMethod\n\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1104: //ShadowHardMethod\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\treturn shadowMethod;\n\t}\n}\n\nexport = ShadowMethodAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\n\nclass SharedMethodAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\n\t\tvar asset:EffectMethodBase;\n\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tasset = this.parseSharedMethodList();\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = asset;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\n\t\t}\n\t}\n\n\t// this.awd_file_data functions reads and creates a EffectMethod\n\tprivate parseSharedMethodList():EffectMethodBase\n\t{\n\n\t\tvar methodType:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar effectMethodReturn:EffectMethodBase;\n\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 101:this.awd_file_data.propsNrType, 102:this.awd_file_data.propsNrType, 103:this.awd_file_data.propsNrType, 104:this.awd_file_data.propsNrType, 105:this.awd_file_data.propsNrType, 106:this.awd_file_data.propsNrType, 107:this.awd_file_data.propsNrType, 201:AWD3Utils.UINT32, 202:AWD3Utils.UINT32, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 401:AWD3Utils.UINT8, 402:AWD3Utils.UINT8, 601:AWD3Utils.COLOR, 602:AWD3Utils.COLOR, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL});\n\t\tvar targetID:number;\n\t\tvar returnedArray:Array<any>;\n\n\t\tswitch (methodType) {\n\t\t\t// Effect Methods\n\t\t\tcase 401: //ColorMatrix\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\n\t\t\t\tbreak;\n\t\t\tcase 402: //ColorTransform\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\n\t\t\t\tbreak;\n\t\t\tcase 403: //EnvMap\n\n\t\t\t\t/*\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\tconsole.log('ENV MAP', targetID);\n\n\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [ TextureBase.assetType ], \"CubeTexture\");\n\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data EnvMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(<SingleCubeTexture> returnedArray[1], <number> props.get(101, 1));\n\t\t\t\ttargetID = props.get(2, 0);\n\t\t\t\tif (targetID > 0) {\n\t\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\n\t\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the Mask-texture (ID = \" + targetID + \" ) for this.awd_file_data EnvMapMethod\");\n\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <Texture2DBase> returnedArray[1];\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tbreak;\n\t\t\tcase 404: //LightMapMethod\n\t\t\t\t/*\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\n\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this.awd_file_data LightMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(returnedArray[1], this.awd_file_data.getBlendModeStringFromEnum(props.get(401, 10))); //usesecondaryUV not set\n\t\t\t\t*/\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureProjector.assetType]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this.awd_file_data ProjectiveTextureMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 406: //RimLightMethod\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\n\t\t\t\tbreak;\n\t\t\tcase 407: //AlphaMaskMethod\n\t\t\t\t/*\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\n\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the Alpha-texture (ID = \" + targetID + \" ) for this.awd_file_data AlphaMaskMethod\");\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(returnedArray[1], props.get(701, false));\n\t\t\t\t*/\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data RefractionEnvMapMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 410: //FresnelEnvMapMethod\n\t\t\t\t/*\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\n\t\t\t\t//if (!returnedArray[0])\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data FresnelEnvMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(returnedArray[1], props.get(101, 1));\n\t\t\t\t*/\n\t\t\t\tbreak;\n\t\t\tcase 411: //FogMethod\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\treturn effectMethodReturn;\n\n\t}\n\n}\n\nexport = SharedMethodAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass Single2DTextureAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\n\t\tvar asset:Single2DTexture;\n\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tvar data_len:number;\n\n\t\t//this.awd_file_data._texture_users[this.awd_file_data._cur_block_id.toString()] = [];\n\n\t\t// External\n\t\tif (type == 0) {\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar url:string;\n\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\n\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\n\n\t\t} else {\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\n\t\t\tvar data:ByteArray;\n\t\t\tdata = new ByteArray();\n\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\n\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\n\n\t\t\t//\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\n\t\t\t//\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\n\t\t\t// This gives the browser time to initialise image width / height.\n\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, data, true);\n\n\t\t}\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\n\t\t// Ignore for now\n\t\tthis.awd_file_data.parseProperties(null);\n\t\tthis.awd_file_data.parseUserAttributes();\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Bitmap for Texture\");\n\t\t}\n\t}\n\n\n}\n\nexport = Single2DTextureAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\n\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\nclass SingleCubeTextureAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar data_len:number;\n\t\tvar i:number;\n\n\t\t//this.awd_file_data._cubeTextures = new Array<any>();\n\t\t//this.awd_file_data._texture_users[ this.awd_file_data._cur_block_id.toString() ] = [];\n\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\n\t\t//this.awd_file_data._blocks[blockID].name =\n\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\n\t\tfor (i = 0; i < 6; i++) {\n\t\t\t//this.awd_file_data.texture_users[this.awd_file_data.cur_block_id.toString()] = [];\n\t\t\t//this.awd_file_data.cubeTextures.push(null);\n\n\t\t\t// External\n\t\t\tif (type == 0) {\n\t\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\tvar url:string;\n\t\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\n\n\t\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\n\t\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block_id.toString() + \"#\" + i, new URLRequest(url), false, null, true);\n\t\t\t} else {\n\n\t\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\tvar data:ByteArray;\n\t\t\t\tdata = new ByteArray();\n\n\t\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\n\t\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block_id.toString() + \"#\" + i, null, false, ParserUtils.byteArrayToImage(data), true);\n\t\t\t}\n\t\t}\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\n\t\t// Ignore for now\n\t\tthis.awd_file_data.parseProperties(null);\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\t//this.awd_file_data._pPauseAndRetrieveDependencies();\n\t\t//this.awd_file_data._blocks[blockID].data = asset;\n\n\t\tif (this.awd_file_data.debug) {\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\n\t\t\tconsole.log(\"Start parsing 6 \" + textureStylesNames[type] + \" Bitmaps for CubeTexture\");\n\t\t}\n\t}\n\n\n}\n\nexport = SingleCubeTextureAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nclass SkeletonAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar skeleton:Skeleton = new Skeleton();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tthis.awd_file_data.parseProperties(null); // Discard properties for now\n\n\t\tvar joints_parsed:number /*uint*/ = 0;\n\t\twhile (joints_parsed < num_joints) {\n\t\t\tvar joint:SkeletonJoint;\n\t\t\tvar ibp:Matrix3D;\n\t\t\t// Ignore joint id\n\t\t\tthis.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\tjoint = new SkeletonJoint();\n\t\t\tjoint.parentIndex = this.awd_file_data.newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\n\t\t\tjoint.name = this.awd_file_data.parseVarStr();\n\n\t\t\tibp = this.awd_file_data.parseMatrix3D();\n\t\t\tjoint.inverseBindPose = ibp.rawData;\n\t\t\t// Ignore joint props/attributes for now\n\t\t\tthis.awd_file_data.parseProperties(null);\n\t\t\tthis.awd_file_data.parseUserAttributes();\n\t\t\tskeleton.joints.push(joint);\n\t\t\tjoints_parsed++;\n\t\t}\n\n\t\t// Discard attributes for now\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = skeleton;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\n}\n\nexport = SkeletonAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\n\nclass SkeletonAnimClipAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar frame_dur:number;\n\t\tvar pose_addr:number /*uint*/;\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar num_frames:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tthis.awd_file_data.parseProperties(null); // Ignore properties for now\n\n\t\tvar frames_parsed:number /*uint*/ = 0;\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tpose_addr = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tframe_dur = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\tvar skel_pose:SkeletonPose = <SkeletonPose>this.awd_file_data.getAssetByID(pose_addr);\n\t\t\tif (skel_pose!=undefined) {\n\t\t\t\tclip.addFrame(skel_pose, frame_dur);\n\t\t\t}\n\t\t\tframes_parsed++;\n\t\t}\n\t\t// Ignore attributes for now\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = clip;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\n\n}\n\nexport = SkeletonAnimClipAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nclass SkeletonPoseAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar pose:SkeletonPose = new SkeletonPose();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tthis.awd_file_data.parseProperties(null); // Ignore properties for now\n\n\n\t\tvar joints_parsed:number /*uint*/ = 0;\n\t\twhile (joints_parsed < num_joints) {\n\t\t\tvar joint_pose:JointPose;\n\t\t\tvar has_transform:number /*uint*/;\n\t\t\tjoint_pose = new JointPose();\n\t\t\thas_transform = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\tif (has_transform == 1) {\n\t\t\t\tvar mtx_data:Array<number> = this.awd_file_data.parseMatrix43RawData();\n\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\n\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\n\t\t\t}\n\t\t\tjoints_parsed++;\n\t\t}\n\t\t// Skip attributes for now\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = pose;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\n}\n\nexport = SkeletonPoseAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nclass SkyboxAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar cubeTexAddr:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\n\t\tvar cube_tex:SingleCubeTexture = undefined;\n\t\tif(cubeTexAddr>0) {\n\t\t\tcube_tex = <SingleCubeTexture> this.awd_file_data.getAssetByID(cubeTexAddr);\n\t\t}\n\t\tif(cube_tex==undefined){\n\t\t\tcube_tex=<SingleCubeTexture>this.awd_file_data.getDefaultCubeTexture();\n\t\t}\n\t\t//if ((!returnedArrayCubeTex[0]) && (cubeTexAddr != 0))\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the Cubetexture (ID = \" + cubeTexAddr + \" ) for this.awd_file_data Skybox\");\n\t\tvar new_skybox:Skybox = new Skybox(<SingleCubeTexture> cube_tex);\n\n\t\tthis.awd_file_data.parseProperties(null)\n\t\tnew_skybox.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = new_skybox;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + this.awd_file_data.cur_block.name + \"' | CubeTexture-Name = \" + cube_tex.name);\n\t}\n\n\n}\n\nexport = SkyboxAWDParser;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport Font\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\nimport TesselatedFontTable\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nclass TesselatedFontAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar new_font:Font=new Font();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar font_style_cnt:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t//console.log(\"Font font_style_cnt = \"+font_style_cnt);\n\t\tfor (var i:number = 0; i < font_style_cnt; ++i) {\n\t\t\tvar font_style_name:string = this.awd_file_data.parseVarStr();\n\t\t\t//console.log(\"Font font_style_name = \"+font_style_name);\n\t\t\tvar new_font_style:TesselatedFontTable=new_font.get_font_table(font_style_name);\n\t\t\tnew_font_style.set_font_em_size(this.awd_file_data.newBlockBytes.readUnsignedInt());\n\t\t\t//console.log(\"Font new_font_style.font_em_size = \"+new_font_style.get_font_em_size);\n\t\t\tvar font_style_char_cnt:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t//console.log(\"Font font_style_char_cnt = \"+font_style_char_cnt);\n\t\t\tfor (var i:number = 0; i < font_style_char_cnt; ++i) {\n\n\t\t\t\tvar font_style_char:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"Font font_style_char = \"+font_style_char);\n\t\t\t\t// todo: this.awd_file_data is basically a simplified version of the subgeom-parsing done in parseTriangleGeometry. Make a parseSubGeom() instead (?)\n\t\t\t\tvar sm_len:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\tvar sm_end:number = this.awd_file_data.newBlockBytes.position + sm_len;\n\t\t\t\t//console.log(\"Font sm_len = \"+sm_len);\n\n\t\t\t\t//this.awd_file_data.parseProperties(null); // no properties for font-table subgeos\n\t\t\t\t// Loop through data streams\n\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < sm_end) {\n\t\t\t\t\tvar idx:number = 0;\n\t\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\n\n\t\t\t\t\t// Type, field type, length\n\t\t\t\t\tstr_type = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\t\t\tstr_ftype = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\n\n\t\t\t\t\tif (str_type == 2) {//face indicies positions\n\t\t\t\t\t\tvar indices:Array<number> = new Array<number>();\n\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\t\tindices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\n\t\t\t\t\t\tvar idx_pos:number = 0;\n\t\t\t\t\t\tvar idx_curves:number = 0;\n\t\t\t\t\t\tvar idx_uvs:number = 0;\n\n\t\t\t\t\t\tvar positions:Array<number> = new Array<number>();\n\t\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\n\t\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// x\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// y\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// type\n\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 2\n\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//this.awd_file_data.parseProperties(null);// no attributes for font-table subgeos\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(new AttributesBuffer());\n\t\t\t\tcurve_sub_geom.setIndices(indices);\n\t\t\t\tcurve_sub_geom.setPositions(positions);\n\t\t\t\tcurve_sub_geom.setCurves(curveData);\n\t\t\t\tcurve_sub_geom.setUVs(uvs);\n\t\t\t\tnew_font_style.set_subgeo_for_char(font_style_char.toString(), curve_sub_geom);\n\t\t\t}\n\t\t\t//console.log(\"Parsed a font-table\");\n\n\t\t}\n\t\t//console.log(\"Parsed a font\");\n\t\tthis.awd_file_data.parseProperties(null);\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = new_font;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a font: Name = '\" + this.awd_file_data.cur_block.name);\n\t\t}\n\n\t}\n\n}\n\nexport = TesselatedFontAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport View\t\t\t= require(\"awayjs-display/lib/containers/View\");\n\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\n\nclass TextfieldAWDParser extends AWDBlockParserBase\n{\n\n\tprivate factory:AS2SceneGraphFactory;\n\tconstructor(view:View = null)\n\t{\n\t\tsuper();\n\t\tthis.factory = new AS2SceneGraphFactory(view);\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar newTextField = this.factory.createTextField();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar text_field_type:number=this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\tif(text_field_type==0) {\n\t\t\tnewTextField.type = \"static\";\n\t\t}\n\t\telse if(text_field_type==1) {\n\t\t\tnewTextField.type = \"dynamic\";\n\t\t}\n\t\telse if(text_field_type==2) {\n\t\t\tnewTextField.type = \"input\";\n\t\t}\n\t\telse if(text_field_type==3) {\n\t\t\tnewTextField.type =\"input\";\n\t\t\tnewTextField.displayAsPassword=true;\n\t\t}\n\n\t\tnewTextField.width=this.awd_file_data.newBlockBytes.readFloat();\n\t\tnewTextField.height=this.awd_file_data.newBlockBytes.readFloat();\n\t\tvar num_paragraphs:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar complete_text:string = \"\";\n\t\t//console.log(\"num_paragraphs  '\" + num_paragraphs);\n\t\tvar text_format:TextFormat;\n\t\tfor(var paracnt:number=0; paracnt<num_paragraphs; paracnt++){\n\n\t\t\tvar num_textruns:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t//console.log(\"num_textruns  '\" + num_textruns);\n\t\t\tfor(var textrun_cnt:number=0; textrun_cnt<num_textruns; textrun_cnt++) {\n\n\t\t\t\tvar format_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"format_id  '\" + format_id);\n\t\t\t\tvar textFormat:TextFormat = <TextFormat>this.awd_file_data.getAssetByID(format_id);\n\t\t\t\tif (textFormat==undefined) {\n\t\t\t\t\ttext_format = new TextFormat();\n\t\t\t\t}\n\t\t\t\t//console.log(\"text_format  '\" + text_format.name);\n\t\t\t\tvar txt_length = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"txt_length  '\" + txt_length);\n\t\t\t\tif (txt_length > 0) {\n\t\t\t\t\tvar this_txt:string = this.awd_file_data.newBlockBytes.readUTFBytes(txt_length);\n\t\t\t\t\t//newTextField.appendText(this_txt, text_format);\n\t\t\t\t\tcomplete_text+=this_txt;\n\t\t\t\t\t//console.log(\"this_txt  '\" + this_txt);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//newTextField.closeParagraph();\n\t\t}\n\t\tnewTextField.textFormat=text_format;\n\t\tnewTextField.text=complete_text;\n\n\t\t//newTextField.construct_geometry();\n\n\t\t// todo: optional matrix etc can be put in properties.\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BOOL, 3:AWD3Utils.BOOL, 4:AWD3Utils.BOOL, 5:AWD3Utils.BOOL, 7:AWD3Utils.UINT8, 8:AWD3Utils.UINT8, 9:AWD3Utils.UINT8});\n\t\tnewTextField.selectable = props.get(1, false);\n\t\tnewTextField.border =  props.get(3, false);\n\t\t//newTextField.renderHTML =  props.get(4, false);\n\t\t//newTextField.scrollable =  props.get(5, false);\n\t\t//newTextField.text_flow =  props.get(7, 0);\n\t\t//newTextField.orientationMode =  props.get(8, 0);\n\t\t//newTextField.line_mode =  props.get(9, 0);\n\n\t\tnewTextField.extra = this.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data = newTextField;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a TextField: Name = '\" + newTextField.name + \"| text  = \" + complete_text);\n\t\t}\n\n\t}\n\n\n}\n\nexport = TextfieldAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TextformatAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar newTextFormat:TextFormat = new TextFormat();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\t//console.log(\"this.awd_file_data._blocks[blockID].name  '\" + this.awd_file_data._blocks[blockID].name );\n\t\tvar font_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t//console.log(\"font_id  '\" + font_id);\n\t\tvar font_style_name:string = this.awd_file_data.parseVarStr();\n\t\t//console.log(\"font_style_name  '\" + font_style_name);\n\t\tvar font:Font = <Font>this.awd_file_data.getAssetByID(font_id);\n\t\tif (font==undefined) {\n\t\t\tfont = new Font();\n\t\t}\n\t\tnewTextFormat.font_name = font.name;\n\t\tvar font_table:TesselatedFontTable = font.get_font_table(font_style_name);\n\t\tif(font_table!=null){\n\t\t\tnewTextFormat.font_style = font_style_name;\n\t\t\tnewTextFormat.font_table = font_table;\n\t\t}\n\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t//console.log(\"mat  '\" + data_id);\n\t\tvar mat:BasicMaterial = <BasicMaterial> this.awd_file_data.getAssetByID(data_id);\n\n\t\tif (mat==undefined) {\n\t\t\tmat = new BasicMaterial();\n\t\t}\n\t\tmat.bothSides=true;\n\n\t\tvar num_uv_values:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\n\t\t//console.log(\"num_uv_values  '\" + num_uv_values);\n\t\tvar uv_values:Array<number>=[];\n\t\tfor(var uvcnt:number=0; uvcnt<num_uv_values; uvcnt++){\n\t\t\tvar uv_value:number=this.awd_file_data.newBlockBytes.readFloat();\n\t\t\tuv_values.push(uv_value);\n\t\t\t//console.log(\"uv_value  '\" + uv_value);\n\t\t}\n\t\tnewTextFormat.uv_values=uv_values;\n\t\tvar format_props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT16, 2:AWD3Utils.UINT16, 3:AWD3Utils.UINT8,4:AWD3Utils.UINT8,5:AWD3Utils.UINT8,6:AWD3Utils.UINT8, 7:AWD3Utils.UINT16, 8:AWD3Utils.UINT16, 9:AWD3Utils.UINT16, 10:AWD3Utils.UINT16});\n\n\t\tnewTextFormat.size = format_props.get(1,12);\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\n\t\t//newTextFormat.rotated = format_props.get(3,false);\n\t\tnewTextFormat.kerning = format_props.get(4,true);\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\n\t\t//newTextFormat.align = format_props.get(6,0);\n\t\tnewTextFormat.indent = format_props.get(7,0);\n\t\tnewTextFormat.leftMargin = format_props.get(8,0);\n\t\tnewTextFormat.rightMargin = format_props.get(9,0);\n\t\t//newTextFormat.linespacing = format_props.get(10,0);\n\t\tnewTextFormat.size = format_props.get(1,12);\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\n\t\t//newTextFormat.rotated = format_props.get(3,false);\n\t\tnewTextFormat.kerning = format_props.get(4,true);\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\n\t\tnewTextFormat.material = mat;\n\t\tthis.awd_file_data.parseUserAttributes();// textformat has no extra-properties\n\t\t//newTextFormat.extra =\n\n\t\tthis.awd_file_data.cur_block.data = newTextFormat;\n\t\tif (this.awd_file_data.debug) {\n\t\t\tconsole.log(\"Parsed a TextFormat: Name = '\" + name + \" font: \"+font.name);\n\t\t}\n\t}\n\n\n}\n\nexport = TextformatAWDParser;/**\n * Created by 80prozent on 4/18/2015.\n */\n",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Short3Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\n\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\n\nclass VertexAnimClipAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar poseOnly:boolean=false;\n\t\tif(this.awd_file_data.cur_block.type==111){\n\t\t\tposeOnly=true\n\t\t}\n\t\tvar num_frames:number /*uint*/ = 1;\n\t\tvar num_submeshes:number /*uint*/;\n\t\tvar frames_parsed:number /*uint*/;\n\t\tvar subMeshParsed:number /*uint*/;\n\t\tvar frame_dur:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar str_len:number;\n\t\tvar str_end:number;\n\t\tvar geometry:Geometry;\n\t\tvar subGeom:TriangleSubGeometry;\n\t\tvar idx:number /*int*/ = 0;\n\t\tvar indices:Short3Attributes;\n\t\tvar verts:Array<number>;\n\t\tvar num_Streams:number /*int*/ = 0;\n\t\tvar streamsParsed:number /*int*/ = 0;\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\n\t\tvar props:AWDProperties;\n\t\tvar thisGeo:Geometry;\n\t\tvar clip:VertexClipNode = new VertexClipNode();\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar geoAdress:number /*int*/ = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\tvar geom:Geometry = <Geometry>this.awd_file_data.getAssetByID(geoAdress);\n\t\tif (geom==undefined) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the target-Geometry-Object \" + geoAdress + \" ) for this.awd_file_data VertexClipNode\");\n\t\t\treturn;\n\t\t}\n\t\tvar uvs:Array<Float32Array> = this.awd_file_data.getUVForVertexAnimation(geoAdress);\n\t\tif (!poseOnly)\n\t\t\tnum_frames = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\n\t\tnum_submeshes = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tnum_Streams = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tstreamsParsed = 0;\n\t\twhile (streamsParsed < num_Streams) {\n\t\t\tstreamtypes.push(this.awd_file_data.newBlockBytes.readUnsignedShort());\n\t\t\tstreamsParsed++;\n\t\t}\n\t\tprops = this.awd_file_data.parseProperties({1:AWD3Utils.BOOL, 2:AWD3Utils.BOOL});\n\n\t\tclip.looping = props.get(1, true);\n\t\tclip.stitchFinalFrame = props.get(2, false);\n\n\t\tframes_parsed = 0;\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tframe_dur = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\t\tgeometry = new Geometry();\n\t\t\tsubMeshParsed = 0;\n\t\t\twhile (subMeshParsed < num_submeshes) {\n\t\t\t\tstreamsParsed = 0;\n\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\n\t\t\t\twhile (streamsParsed < num_Streams) {\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\n\t\t\t\t\t\tindices = geom.subGeometries[subMeshParsed].indices;\n\t\t\t\t\t\tverts = new Array<number>();\n\t\t\t\t\t\tidx = 0;\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\n\t\t\t\t\t\t\tx = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t\t\ty = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t\t\tz = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\n\t\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsubGeom = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\t\t\t\tsubGeom.setIndices(indices);\n\t\t\t\t\t\tsubGeom.setPositions(verts);\n\t\t\t\t\t\tsubGeom.setUVs(uvs[subMeshParsed]);\n\t\t\t\t\t\tsubGeom.setNormals(null);\n\t\t\t\t\t\tsubGeom.setTangents(null);\n\t\t\t\t\t\tsubGeom.autoDeriveNormals = false;\n\t\t\t\t\t\tsubGeom.autoDeriveTangents = false;\n\t\t\t\t\t\tsubMeshParsed++;\n\t\t\t\t\t\tgeometry.addSubGeometry(subGeom)\n\t\t\t\t\t} else\n\t\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\n\t\t\t\t\tstreamsParsed++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tclip.addFrame(geometry, frame_dur);\n\t\t\tframes_parsed++;\n\t\t}\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tthis.awd_file_data.cur_block.data=clip;\n\t\tif (this.awd_file_data.debug)\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + geom.name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\n\n}\n\nexport = VertexAnimClipAWDParser;",
    "\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\n\nclass VertexAnimationSetAWDParser extends AWDBlockParserBase\n{\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic parseFromBytes():void\n\t{\n\t\tvar poseBlockAdress:number /*int*/\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\n\t\tvar num_frames:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT16});\n\t\tvar frames_parsed:number /*uint*/ = 0;\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tposeBlockAdress = this.awd_file_data.newBlockBytes.readUnsignedInt();\n\t\t\tvar animNode:AnimationNodeBase = <AnimationNodeBase>this.awd_file_data.getAssetByID(poseBlockAdress);\n\t\t\tif (animNode==undefined) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the AnimationClipNode Nr \" + frames_parsed + \" ( \" + poseBlockAdress + \" ) for this.awd_file_data AnimationSet\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (animNode instanceof VertexClipNode)\n\t\t\t\t\tvertexFrames.push(<VertexClipNode>animNode)\n\t\t\t\tif (animNode instanceof SkeletonClipNode)\n\t\t\t\t\tskeletonFrames.push(<SkeletonClipNode>animNode)\n\t\t\t}\n\t\t\tframes_parsed++;\n\t\t}\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not create this.awd_file_data AnimationSet, because it contains no animations\");\n\t\t\treturn;\n\t\t}\n\t\tthis.awd_file_data.parseUserAttributes();\n\t\tif (vertexFrames.length > 0) {\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\n\t\t\tthis.awd_file_data.cur_block.data = newVertexAnimationSet;\n\t\t\tif (this.awd_file_data.debug)\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + newVertexAnimationSet.name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames.toString());\n\t\t\treturn;\n\t\t} else if (skeletonFrames.length > 0) {\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\n\t\t\tthis.awd_file_data.cur_block.data = newSkeletonAnimationSet;\n\t\t\tif (this.awd_file_data.debug)\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + newSkeletonAnimationSet.name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames.toString());\n\t\t}\n\t}\n\n\n}\n\nexport = VertexAnimationSetAWDParser;",
    "import BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\n\nimport AWDBitFlags\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\nimport AWDBlock\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\n\n/**\n * AWD3FileData stores the data loaded for a AWD-file. It also gives access to some helper functions.\n */\nclass AWD3FileData\n{\n\t//set to \"true\" to have some console.logs in the Console\n\tprivate _debug:boolean = false;\n\n\tprivate _cur_block:AWDBlock;\n\tprivate _blocks:Array<AWDBlock>;\n\tprivate _newBlockBytes:ByteArray;\n\n\tpublic  major_version:number;\n\tpublic  minor_version:number;\n\n\tprivate _accuracyOnBlocks:boolean = false;\n\n\tprivate _accuracyMatrix:boolean;\n\tprivate _accuracyGeo:boolean;\n\tprivate _accuracyProps:boolean;\n\tprivate _matrixNrType:number;\n\tprivate _geoNrType:number;\n\tprivate _propsNrType:number;\n\n\tprivate blendModeDic:Array<string>;\n\tprivate _depthSizeDic:Array<number>;\n\n\tprivate _defaultCubeTexture:SingleCubeTexture;\n\t/**\n\t * Creates a new AWD3FileData object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.major_version=0;\n\t\tthis.minor_version=0;\n\n\t\tthis._blocks = new Array<AWDBlock>();\n\t\tthis._blocks.push(new AWDBlock(255, 0));\n\t\tthis._cur_block=this._blocks[0];\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.ADD);\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\n\t\tthis._depthSizeDic.push(256);\n\t\tthis._depthSizeDic.push(512);\n\t\tthis._depthSizeDic.push(2048);\n\t\tthis._depthSizeDic.push(1024);\n\t}\n\n\tpublic getDepthSizeFromEnum(depthSize:number):number\n\t{\n\t\treturn this._depthSizeDic[depthSize];\n\t}\n\tpublic getBlendModeStringFromEnum(blendmode:number):string\n\t{\n\t\treturn this.blendModeDic[blendmode];\n\t}\n\n\tpublic dispose():void\n\t{\n\n\t\tfor (var c in this._blocks) {\n\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[ c ];\n\t\t\tb.dispose();\n\n\t\t}\n\n\t}\n\tpublic get accuracyOnBlocks():boolean\n\t{\n\t\treturn this._accuracyOnBlocks;\n\t}\n\tpublic get accuracyMatrix():boolean\n\t{\n\t\treturn this._accuracyMatrix;\n\t}\n\tpublic set accuracyMatrix(new_accuracyMatrix:boolean)\n\t{\n\t\tthis._accuracyMatrix = new_accuracyMatrix;\n\t}\n\tpublic get accuracyProps():boolean\n\t{\n\t\treturn this._accuracyProps;\n\t}\n\tpublic set accuracyProps(new_accuracyProps:boolean)\n\t{\n\t\tthis._accuracyProps = new_accuracyProps;\n\t}\n\tpublic set accuracyGeo(new_accuracyGeo:boolean)\n\t{\n\t\tthis._accuracyGeo = new_accuracyGeo;\n\t}\n\tpublic get accuracyGeo():boolean\n\t{\n\t\treturn this._accuracyGeo;\n\t}\n\tpublic get debug():boolean\n\t{\n\t\treturn this._debug;\n\t}\n\n\tpublic get matrixNrType():number\n\t{\n\t\treturn this._matrixNrType;\n\t}\n\tpublic set matrixNrType(newmatrixNrType:number)\n\t{\n\t\tthis._matrixNrType = newmatrixNrType;\n\t}\n\n\tpublic get propsNrType():number\n\t{\n\t\treturn this._propsNrType;\n\t}\n\tpublic set propsNrType(new_props_nr:number)\n\t{\n\t\tthis._propsNrType = new_props_nr;\n\t}\n\n\tpublic get geoNrType():number\n\t{\n\t\treturn this._geoNrType;\n\t}\n\tpublic set geoNrType(new_geoNrType:number)\n\t{\n\t\tthis._geoNrType = new_geoNrType;\n\t}\n\n\n\tpublic set newBlockBytes(new_newBlockBytes:ByteArray)\n\t{\n\t\tthis._newBlockBytes = new_newBlockBytes;\n\t}\n\tpublic get newBlockBytes():ByteArray\n\t{\n\t\treturn this._newBlockBytes;\n\t}\n\tpublic create_new_block(type:number, id:number)\n\t{\n\t\tvar new_block:AWDBlock= new AWDBlock(this._blocks.length, type);\n\t\tthis._cur_block=new_block;\n\t\tthis._blocks[id]=new_block;\n\t}\n\tpublic get cur_block():AWDBlock\n\t{\n\t\treturn this._cur_block;\n\t}\n\tpublic block_cnt():number\n\t{\n\t\treturn this._blocks.length;\n\t}\n\n\t//--Parser UTILS---------------------------------------------------------------------------\n\n\tpublic parseUserAttributes():Object\n\t{\n\t\tvar attributes:Object;\n\t\tvar list_len:number;\n\t\tvar attibuteCnt:number;\n\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\n\n\t\tif (list_len > 0) {\n\n\t\t\tvar list_end:number;\n\n\t\t\tattributes = {};\n\n\t\t\tlist_end = this._newBlockBytes.position + list_len;\n\n\t\t\twhile (this._newBlockBytes.position < list_end) {\n\t\t\t\tvar ns_id:number;\n\t\t\t\tvar attr_key:string;\n\t\t\t\tvar attr_type:number;\n\t\t\t\tvar attr_len:number;\n\t\t\t\tvar attr_val:any;\n\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_key = this.parseVarStr();\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn attributes;\n\t\t\t\t}\n\n\t\t\t\tswitch (attr_type) {\n\t\t\t\t\tcase AWD3Utils.AWDSTRING:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.INT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.INT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.INT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.BOOL:\n\t\t\t\t\tcase AWD3Utils.UINT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.UINT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.UINT32:\n\t\t\t\t\tcase AWD3Utils.BADDR:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.FLOAT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWD3Utils.FLOAT64:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\n\t\t\t\t}\n\n\t\t\t\tattributes[attr_key] = attr_val;\n\t\t\t\tattibuteCnt += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\tpublic parseProperties(expected:Object):AWDProperties\n\t{\n\t\tvar list_end:number;\n\t\tvar list_len:number;\n\t\tvar propertyCnt:number = 0;\n\t\tvar props:AWDProperties = new AWDProperties();\n\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\n\t\tlist_end = this._newBlockBytes.position + list_len;\n\n\t\tif (expected) {\n\n\t\t\twhile (this._newBlockBytes.position < list_end) {\n\t\t\t\tvar len:number;\n\t\t\t\tvar key:number;\n\t\t\t\tvar type:number;\n\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn props;\n\t\t\t\t}\n\n\t\t\t\tif (expected.hasOwnProperty(key.toString())) {\n\t\t\t\t\ttype = expected[key];\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\n\t\t\t\t} else {\n\t\t\t\t\tthis._newBlockBytes.position += len;\n\t\t\t\t}\n\n\t\t\t\tpropertyCnt += 1;\n\n\t\t\t}\n\t\t} else {\n\t\t\tthis._newBlockBytes.position = list_end;\n\t\t}\n\n\t\treturn props;\n\n\t}\n\n\tprivate parseAttrValue(type:number, len:number):any\n\t{\n\t\tvar elem_len:number;\n\t\tvar read_func:Function;\n\n\t\tswitch (type) {\n\n\t\t\tcase AWD3Utils.BOOL:\n\t\t\tcase AWD3Utils.INT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.INT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.INT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.UINT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.UINT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.UINT32:\n\t\t\tcase AWD3Utils.COLOR:\n\t\t\tcase AWD3Utils.BADDR:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.FLOAT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.FLOAT64:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\n\t\t\tcase AWD3Utils.AWDSTRING:\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\n\n\t\t\tcase AWD3Utils.VECTOR2x1:\n\t\t\tcase AWD3Utils.VECTOR3x1:\n\t\t\tcase AWD3Utils.VECTOR4x1:\n\t\t\tcase AWD3Utils.MTX3x2:\n\t\t\tcase AWD3Utils.MTX3x3:\n\t\t\tcase AWD3Utils.MTX4x3:\n\t\t\tcase AWD3Utils.MTX4x4:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif (elem_len < len) {\n\t\t\tvar list:Array<any> = [];\n\t\t\tvar num_read:number = 0;\n\t\t\tvar num_elems:number = len/elem_len;\n\n\t\t\twhile (num_read < num_elems) {\n\t\t\t\tlist.push(read_func.apply(this._newBlockBytes)); // list.push(read_func());\n\t\t\t\tnum_read++;\n\t\t\t}\n\n\t\t\treturn list;\n\t\t} else {\n\n\t\t\tvar val:any = read_func.apply(this._newBlockBytes);//read_func();\n\t\t\treturn val;\n\t\t}\n\t}\n\n\t// Helper - functions\n\tpublic getUVForVertexAnimation(meshID:number /*uint*/):Array<Float32Array>\n\t{\n\t\tif (this._blocks[meshID].data instanceof Mesh)\n\t\t\tmeshID = this._blocks[meshID].geoID;\n\t\tif (this._blocks[meshID].uvsForVertexAnimation)\n\t\t\treturn this._blocks[meshID].uvsForVertexAnimation;\n\t\tvar geometry:Geometry = (<Geometry> this._blocks[meshID].data);\n\t\tvar geoCnt:number /*int*/ = 0;\n\t\tvar sub_geom:TriangleSubGeometry;\n\t\tthis._blocks[meshID].uvsForVertexAnimation = new Array<Float32Array>();\n\t\twhile (geoCnt < geometry.subGeometries.length) {\n\t\t\tsub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\n\t\t\tthis._blocks[meshID].uvsForVertexAnimation.push(sub_geom.uvs.get(sub_geom.numVertices));\n\t\t\tgeoCnt++;\n\t\t}\n\t\treturn this._blocks[meshID].uvsForVertexAnimation;\n\t}\n\n\tpublic parseVarStr():string\n\t{\n\n\t\tvar len:number = this._newBlockBytes.readUnsignedShort();\n\t\treturn this._newBlockBytes.readUTFBytes(len);\n\t}\n\n\tpublic getBlockByID(assetID:number):AWDBlock\n\t{\n\t\treturn this._blocks[assetID];\n\t}\n\tpublic getAssetByID(assetID:number):IAsset\n\t{\n\t\treturn this._blocks[assetID].data;\n\t}\n\tprivate getDefaultAsset(assetType:string):IAsset\n\t{\n\t\tswitch (true) {\n\t\t\tcase (assetType == SingleCubeTexture.assetType):\n\t\t\t\treturn this.getDefaultCubeTexture();\n\t\t\t\tbreak;\n\t\t\tcase (assetType == Single2DTexture.assetType):\n\t\t\t\treturn DefaultMaterialManager.getDefaultTexture();\n\t\t\t\tbreak;\n\t\t\tcase (assetType == MethodMaterial.assetType):\n\t\t\t\treturn DefaultMaterialManager.getDefaultMaterial();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getDefaultCubeTexture():IAsset\n\t{\n\t\tif (!this._defaultCubeTexture) {\n\t\t\tvar defaultBitmap:BitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\t\tvar bitmapImageCube = new BitmapImageCube(defaultBitmap.width);\n\n\t\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\t\tbitmapImageCube.draw(i, defaultBitmap);\n\n\n\t\t\tthis._defaultCubeTexture = new SingleCubeTexture(bitmapImageCube);\n\t\t\tthis._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t\t}\n\n\t\treturn <IAsset> this._defaultCubeTexture;\n\t}\n\n\tpublic  readNumber(precision:boolean = false):number\n\t{\n\t\tif (precision)\n\t\t\treturn this._newBlockBytes.readDouble();\n\t\treturn this._newBlockBytes.readFloat();\n\n\t}\n\n\tpublic parseMatrix3D():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\n\t}\n\n\tprivate parseMatrix32RawData():Array<number>\n\t{\n\t\tvar i:number;\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\n\t\tfor (i = 0; i < 6; i++) {\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\n\t\t}\n\n\t\treturn mtx_raw;\n\t}\n\n\tpublic parseMatrix43RawData():Array<number>\n\t{\n\t\tvar mtx_raw:Array<number> = new Array<number>(16);\n\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[3] = 0.0;\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[7] = 0.0;\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[11] = 0.0;\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[15] = 1.0;\n\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\n\n\t\tif (isNaN(mtx_raw[0])) {\n\t\t\tmtx_raw[0] = 1;\n\t\t\tmtx_raw[1] = 0;\n\t\t\tmtx_raw[2] = 0;\n\t\t\tmtx_raw[4] = 0;\n\t\t\tmtx_raw[5] = 1;\n\t\t\tmtx_raw[6] = 0;\n\t\t\tmtx_raw[8] = 0;\n\t\t\tmtx_raw[9] = 0;\n\t\t\tmtx_raw[10] = 1;\n\t\t\tmtx_raw[12] = 0;\n\t\t\tmtx_raw[13] = 0;\n\t\t\tmtx_raw[14] = 0;\n\n\t\t}\n\n\t\treturn mtx_raw;\n\t}\n\n}\n\nexport = AWD3FileData;\n\n\n\n",
    "\nclass AWD3Utils {\n\tpublic static BLOCKSTATE_FINALIZE:number = 0;\n\tpublic static BLOCKSTATE_INVALID:number = 1;\n\tpublic static BLOCKSTATE_LOAD_DEPENDENICES:number = 2;\n\tpublic static BLOCKSTATE_NO_ASSET:number = 3;\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\n\tpublic static UNCOMPRESSED:number = 0;\n\tpublic static DEFLATE:number = 1;\n\tpublic static LZMA:number = 2;\n\tpublic static INT8:number = 1;\n\tpublic static INT16:number = 2;\n\tpublic static INT32:number = 3;\n\tpublic static UINT8:number = 4;\n\tpublic static UINT16:number = 5;\n\tpublic static UINT32:number = 6;\n\tpublic static FLOAT32:number = 7;\n\tpublic static FLOAT64:number = 8;\n\tpublic static BOOL:number = 21;\n\tpublic static COLOR:number = 22;\n\tpublic static BADDR:number = 23;\n\tpublic static AWDSTRING:number = 31;\n\tpublic static AWDBYTEARRAY:number = 32;\n\tpublic static VECTOR2x1:number = 41;\n\tpublic static VECTOR3x1:number = 42;\n\tpublic static VECTOR4x1:number = 43;\n\tpublic static MTX3x2:number = 44;\n\tpublic static MTX3x3:number = 45;\n\tpublic static MTX4x3:number = 46;\n\tpublic static MTX4x4:number = 47;\n}\nexport = AWD3Utils;",
    "\n/**\n *\n */\nclass AWDBitFlags\n{\n\tpublic static FLAG1:number = 1;\n\tpublic static FLAG2:number = 2;\n\tpublic static FLAG3:number = 4;\n\tpublic static FLAG4:number = 8;\n\tpublic static FLAG5:number = 16;\n\tpublic static FLAG6:number = 32;\n\tpublic static FLAG7:number = 64;\n\tpublic static FLAG8:number = 128;\n\tpublic static FLAG9:number = 256;\n\tpublic static FLAG10:number = 512;\n\tpublic static FLAG11:number = 1024;\n\tpublic static FLAG12:number = 2048;\n\tpublic static FLAG13:number = 4096;\n\tpublic static FLAG14:number = 8192;\n\tpublic static FLAG15:number = 16384;\n\tpublic static FLAG16:number = 32768;\n\n\tpublic static test(flags:number, testFlag:number):boolean\n\t{\n\t\treturn (flags & testFlag) == testFlag;\n\t}\n}\nexport = AWDBitFlags;",
    "import ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\nclass AWDBlock\n{\n\tpublic id:number;\n\tpublic name:string;\n\tpublic type:number;\n\tpublic data:any;\n\tpublic dependencies_data:Array<ByteArray>;\n\tpublic dependencies_urls:Array<string>;\n\tpublic loaded_dependencies:Array<any>;\n\tpublic loaded_dependencies_cnt:number;\n\tpublic len:number;\n\tpublic geoID:number;\n\tpublic state:number;\n\tpublic extras:Object;\n\tpublic bytes:ByteArray;\n\tpublic errorMessages:Array<string>;\n\tpublic uvsForVertexAnimation:Array<Float32Array>;\n\n\tconstructor(this_id:number, this_type:number)\n\t{\n\t\tthis.type=this_type;\n\t\tthis.id=this_id;\n\t\tthis.state = AWD3Utils.BLOCKSTATE_FINALIZE;\n\t\tthis.dependencies_data=Array<any>();\n\t\tthis.dependencies_urls=Array<string>();\n\t\tif(this_type==83){\n\t\t\tthis.loaded_dependencies=Array<any>(6);\n\t\t}\n\t\tthis.loaded_dependencies_cnt=0;\n\t}\n\n\tpublic dispose()\n\t{\n\n\t\tthis.id = null;\n\t\tthis.bytes = null;\n\t\tthis.errorMessages = null;\n\t\tthis.uvsForVertexAnimation = null;\n\n\t}\n\n\tpublic addError(errorMsg:string):void\n\t{\n\t\tif (!this.errorMessages)\n\t\t\tthis.errorMessages = new Array<string>();\n\n\t\tthis.errorMessages.push(errorMsg);\n\t}\n}\nexport = AWDBlock;",
    "\nclass AWDProperties\n{\n\tpublic set(key:number, value:any):void\n\t{\n\t\tthis[ key.toString() ] = value;\n\t}\n\n\tpublic get(key:number, fallback:any):any\n\t{\n\t\tif (this.hasOwnProperty(key.toString())) {\n\t\t\treturn this[key.toString()];\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n}\nexport = AWDProperties;",
    "import BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\n\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\n\n\n\nimport AWDBitFlags\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\n\nimport AWDAssetParsers\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers\");\nimport AWDBlock\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\nimport AWD3FileData\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\n\n/**\n * AWD3Utils provides a parser for the AWD data type.\n */\nclass AWD3Parser extends ParserBase\n{\n\t//set to \"true\" to have some console.logs in the Console\n\tprivate _debug:boolean = false;\n\tprivate _byteData:ByteArray;\n\tprivate _startedParsing:boolean = false;\n\tprivate _compression:number;\n\tprivate _streaming:boolean;\n\tprivate _parsed_header:boolean = false;\n\tprivate _body:ByteArray;\n\tprivate _awd_data:AWD3FileData;\n\tprivate _block_parser:AWDAssetParsers;\n\n\t// temp for checking stats\n\tpublic total_time:number = 0;\n\tpublic geom_time:number = 0;\n\tpublic timeline_time:number = 0;\n\n\t/**\n\t * Creates a new AWD3Utils object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(block_parser:AWDAssetParsers = undefined)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\n\t\tthis._block_parser=block_parser;\n\t\tif(this._block_parser==undefined){\n\t\t\tthis._block_parser=new AWDAssetParsers();\n\t\t}\n\t\tthis._awd_data=new AWD3FileData();\n\t\tthis._block_parser.init_parser(this._awd_data);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"awd\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\t// this will be called when Dependency has finished loading.\n\t\t// the ressource dependecniy has a id that point to the awd_block waiting for it.\n\t\tif (resourceDependency.assets.length == 1) {\n\t\t\tvar this_block:AWDBlock = this._awd_data.getBlockByID(parseInt(resourceDependency.id));\n\t\t\tif(this_block.type==82){\n\t\t\t\tvar testure_asset:Single2DTexture = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\n\t\t\t\tthis_block.data = testure_asset; // Store finished asset\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\n\t\t\t\t// previously suppressed while the dependency was loaded.\n\t\t\t\tthis._pFinalizeAsset(<IAsset> testure_asset, this_block.name);\n\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap for texture\");\n\t\t\t\t\tconsole.log(\"Parsed texture: Name = \" + this_block.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(this_block.type==44){\n\t\t\t\t// todo: implement parsing of Audio block data\n\t\t\t\t/*\n\t\t\t\t var audio_asset:AudioAsset = <AudioAsset> resourceDependency.assets[0];\n\t\t\t\t this_block.data = audio_asset; // Store finished asset\n\t\t\t\t // Finalize texture asset to dispatch texture event, which was\n\t\t\t\t // previously suppressed while the dependency was loaded.\n\t\t\t\t this._pFinalizeAsset(<IAsset> audio_asset, this_block.name);\n\t\t\t\t */\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tconsole.log(\"Successfully loaded Sound into AudioAsset\");\n\t\t\t\t\tconsole.log(\"Loaded Sound: Name = \" + this_block.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(this_block.type==83){\n\t\t\t\tthis_block.loaded_dependencies[resourceDependency.sub_id]= resourceDependency.assets[0];\n\t\t\t\tthis_block.loaded_dependencies_cnt++;\n\t\t\t\tif(this_block.loaded_dependencies_cnt==6){\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + resourceDependency.sub_id + \" / 6 for Cubetexture\");\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cube_image_asset = new BitmapImageCube(this_block.loaded_dependencies[0].width);\n\n\t\t\t\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\t\t\t\tcube_image_asset.draw(i, this_block.loaded_dependencies[i]);\n\n\n\t\t\t\t\tvar cube_tex_asset = new SingleCubeTexture(cube_image_asset);\n\t\t\t\t\tthis_block.data = cube_tex_asset; // Store finished asset\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> cube_tex_asset, this_block.name);\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + this_block.name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\t//\tnot used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\n\t\t// \tthis means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\tvar oldName:string = asset.name;\n\n\t\tif (asset) {\n\t\t\tvar block:AWDBlock = this._awd_data.getBlockByID(parseInt(resourceDependency.id));\n\t\t\t// Reset name of texture to the one defined in the AWD file,\n\t\t\t// as opposed to whatever the image parser came up with.\n\t\t\tasset.resetAssetPath(block.name, null, true);\n\t\t}\n\n\t\tvar newName:string = asset.name;\n\n\t\tasset.name = oldName;\n\n\t\treturn newName;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\tif (!this._parsed_header) {\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Parse header and decompress body if needed\n\t\t\tthis.parseHeader();\n\n\t\t\tswitch (this._compression) {\n\n\t\t\t\tcase AWD3Utils.DEFLATE:\n\t\t\t\tcase AWD3Utils.LZMA:\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AWD3Utils.UNCOMPRESSED:\n\t\t\t\t\tthis._body = this._byteData;\n\t\t\t\t\tbreak;\n\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t// Compressed AWD Formats not yet supported\n\t\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t\t/*\n\t\t\t\t case AWD3Parserutils.DEFLATE:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress();\n\n\t\t\t\t break;\n\t\t\t\t case AWD3Parserutils.LZMA:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\n\n\t\t\t\t break;\n\t\t\t\t //*/\n\n\t\t\t}\n\n\t\t\tthis._parsed_header = true;\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t}\n\n\t\tif (this._body) {\n\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\n\t\t\t{\n\t\t\t\tthis.parseNextBlock();\n\n\t\t\t}\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Return complete status\n\t\t\tif (this._body.getBytesAvailable() == 0) {\n\t\t\t\tthis.dispose();\n\t\t\t\treturn  ParserBase.PARSING_DONE;\n\t\t\t} else {\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} else {\n\n\t\t\tswitch (this._compression) {\n\n\t\t\t\tcase AWD3Utils.DEFLATE:\n\t\t\t\tcase AWD3Utils.LZMA:\n\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"(!) AWD3Utils Error: Compressed AWD formats not yet supported (!)\");\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t\t// Error - most likely _body not set because we do not support compression.\n\t\t\treturn  ParserBase.PARSING_DONE;\n\n\t\t}\n\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\tprivate dispose():void\n\t{\n\t\tthis._awd_data.dispose();\n\t}\n\n\tprivate parseNextBlock():void\n\t{\n\t\tvar block_id:number = this._body.readUnsignedInt();\n\n\t\tvar ns:number = this._body.readUnsignedByte();\n\t\tvar block_type:number = this._body.readUnsignedByte();\n\t\tvar flags:number = this._body.readUnsignedByte();\n\t\tvar len:number = this._body.readUnsignedInt();\n\n\t\tvar blockCompression:boolean = AWDBitFlags.test(flags, AWDBitFlags.FLAG4);\n\t\tvar blockCompressionLZMA:boolean = AWDBitFlags.test(flags, AWDBitFlags.FLAG5);\n\n\t\tif (this._awd_data.accuracyOnBlocks) {\n\t\t\tthis._awd_data.accuracyMatrix = AWDBitFlags.test(flags, AWDBitFlags.FLAG1);\n\t\t\tthis._awd_data.accuracyGeo = AWDBitFlags.test(flags, AWDBitFlags.FLAG2);\n\t\t\tthis._awd_data.accuracyProps = AWDBitFlags.test(flags, AWDBitFlags.FLAG3);\n\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT32;\n\n\t\t\tif (this._awd_data.accuracyGeo) {\n\t\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT64;\n\t\t\t}\n\n\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT32;\n\n\t\t\tif (this._awd_data.accuracyMatrix) {\n\t\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT64;\n\t\t\t}\n\n\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT32;\n\n\t\t\tif (this._awd_data.accuracyProps) {\n\t\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT64;\n\t\t\t}\n\t\t}\n\n\t\tvar blockEndAll:number = this._body.position + len;\n\n\t\tif (len > this._body.getBytesAvailable()) {\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\n\t\t\tthis._body.position += this._body.getBytesAvailable();\n\t\t\treturn;\n\t\t}\n\n\t\tvar newBlockBytes:ByteArray = new ByteArray();\n\t\tthis._body.readBytes(newBlockBytes, 0, len);\n\t\tthis._awd_data.newBlockBytes = newBlockBytes;\n\n\t\t//----------------------------------------------------------------------------\n\t\t// Compressed AWD Formats not yet supported\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\n\t\t\t/*\n\t\t\t if (blockCompressionLZMA)\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress(AWD3Parserutils.COMPRESSIONMODE_LZMA);\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress();\n\t\t\t }\n\t\t\t */\n\n\t\t}\n\n\t\t//----------------------------------------------------------------------------\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t//----------------------------------------------------------------------------\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\n\t\t//----------------------------------------------------------------------------\n\n\t\tthis._awd_data.newBlockBytes.position = 0;\n\n\t\t// we create AWDBlock for all exept the metadata. the metadata block has is the first awdblock in the list by default.\n\t\t//if(block_type!=255)\n\t\tthis._awd_data.create_new_block(block_type, block_id);\n\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\n\t\t\t//block.len       = blockEndBlock;\n\t\t}\n\n\t\t//if (this._debug) {\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + block_id + \" | TypeID = \" + block_type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._awd_data.accuracyMatrix + \" | Geometry-Precision = \" + this._awd_data.accuracyGeo + \" | Properties-Precision = \" + this._awd_data.accuracyProps);\n\t\t//}\n\n\t\tvar time_start = performance.now();\n\n\t\t// first check if the block is any of the 3 blocks that does not produce a asset.\n\t\t\t// this block contains a asset.\n\t\tif(this._block_parser.parseAsset(block_type)){\n\t\t\tif(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_FINALIZE){\n\t\t\t\tthis._pFinalizeAsset(<IAsset>this._awd_data.cur_block.data, this._awd_data.cur_block.name);\n\t\t\t\tif(this._awd_data.cur_block.data instanceof DisplayObject){\n\t\t\t\t\tif((<DisplayObjectContainer> this._awd_data.cur_block.data).parent==undefined){\n\t\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild((<DisplayObjectContainer> this._awd_data.cur_block.data));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_INVALID){\n\t\t\t\tconsole.log(\"ERROR while parsing block - type = \", block_type, \" id = \", block_id);\n\t\t\t}\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES){\n\t\t\t\t// trigger No asset created yet, because the block has dependencies. load the dependencies:.\n\t\t\t\tfor(var r:number=0; r<this._awd_data.cur_block.dependencies_urls.length;r++){\n\t\t\t\t\t// load dependencies by url. let the parser system decide how to parse it\n\t\t\t\t\tthis._pAddDependency(this._awd_data.cur_block.id.toString(), new URLRequest(this._awd_data.cur_block.dependencies_urls[r]), false, null, true, r);\n\t\t\t\t}\n\t\t\t\tfor(var r:number=0; r<this._awd_data.cur_block.dependencies_data.length;r++) {\n\t\t\t\t\t// load dependencies from data. need to prepare the data based on block_type (image vs audio).\n\t\t\t\t\tif ((block_type == 82) || (block_type == 83)) {\n\t\t\t\t\t\tthis._pAddDependency(this._awd_data.cur_block.id.toString(), null, false, ParserUtils.byteArrayToImage(this._awd_data.cur_block.dependencies_data[r]), true, r);\n\t\t\t\t\t}\n\t\t\t\t\telse if (block_type == 44) {\n\t\t\t\t\t\t// todo: parse audio data\n\t\t\t\t\t\t// this._pAddDependency(this._awd_data.cur_block.id.toString(), null, false, this._awd_data.cur_block.dependencies_data[r], true, r);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t}\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_NO_ASSET){\n\t\t\t\t// this block does not produce any asset (metadata, namespace, command)\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.log(\"Encountered unknown blocktype - type = \", block_type, \" id = \", block_id);\n\t\t}\n\n\t\tvar time_end = performance.now();\n\t\tvar thisTime:number=time_end-time_start;\n\t\tthis.total_time+=thisTime;\n\t\tif(block_type==1){\n\t\t\tthis.geom_time+=thisTime;\n\t\t}\n\t\telse if(block_type==133){\n\t\t\tthis.timeline_time+=thisTime;\n\t\t}\n\t\tconsole.log(\"'parsed '\"+block_type+\"'  block in \"+thisTime+ \" ms\", \" total: \",this.total_time,\" geom: \",this.geom_time,\"timelines:\",this.timeline_time);\n\n\t\tthis._body.position = blockEndAll;\n\t\tthis._awd_data.newBlockBytes = null;\n\n\t}\n\n\n\n\n\tprivate parseHeader():void\n\t{\n\t\tvar flags:number;\n\t\tvar body_len:number;\n\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\n\n\t\tthis._awd_data.major_version = this._byteData.readUnsignedByte();\n\t\tthis._awd_data.minor_version = this._byteData.readUnsignedByte();\n\n\t\tflags = this._byteData.readUnsignedShort(); // Parse bit flags\n\n\t\tthis._streaming = AWDBitFlags.test(flags, AWDBitFlags.FLAG1);\n\n\t\tif ((this._awd_data.major_version == 2) && (this._awd_data.minor_version == 1)) {\n\t\t\tthis._awd_data.accuracyMatrix = AWDBitFlags.test(flags, AWDBitFlags.FLAG2);\n\t\t\tthis._awd_data.accuracyGeo = AWDBitFlags.test(flags, AWDBitFlags.FLAG3);\n\t\t\tthis._awd_data.accuracyProps = AWDBitFlags.test(flags, AWDBitFlags.FLAG4);\n\t\t}\n\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\n\n\t\t// set storagePrecision types\n\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT32;\n\n\t\tif (this._awd_data.accuracyGeo) {\n\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT64;\n\t\t}\n\n\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT32;\n\n\t\tif (this._awd_data.accuracyMatrix) {\n\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT64;\n\t\t}\n\n\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT32;\n\n\t\tif (this._awd_data.accuracyProps) {\n\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT64;\n\t\t}\n\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._awd_data.major_version + \" - \" + this._awd_data.minor_version );\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._awd_data.accuracyMatrix + \" | Geometry-Precision = \" + this._awd_data.accuracyGeo + \" | Properties-Precision = \" + this._awd_data.accuracyProps);\n\t\t}\n\n\t\t// Check file integrity\n\t\tbody_len = this._byteData.readUnsignedInt();\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable()) {\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\n\t\t}\n\t}\n}\n\nexport = AWD3Parser;\n\n",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Short3Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float3Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport WaveAudio\t\t\t\t\t\t= require(\"awayjs-core/lib/data/WaveAudio\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport View\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport TextField\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\nimport PrimitivePrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\n\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\n\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport TimelineSceneGraphFactory \t= require(\"awayjs-player/lib/factories/TimelineSceneGraphFactory\");\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\nimport MovieClip \t\t\t\t\t= require(\"awayjs-player/lib/display/MovieClip\");\nimport TimelineKeyFrame \t\t\t= require(\"awayjs-player/lib/timeline/TimelineKeyFrame\");\nimport AddChildCommand \t\t\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildCommand\");\nimport SetButtonCommand \t\t\t\t= require(\"awayjs-player/lib/timeline/commands/SetButtonCommand\");\n\nimport AddChildAtDepthCommand\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildAtDepthCommand\");\nimport ApplyAS2DepthsCommand\t\t= require(\"awayjs-player/lib/timeline/commands/ApplyAS2DepthsCommand\");\nimport ExecuteScriptCommand \t\t= require(\"awayjs-player/lib/timeline/commands/ExecuteScriptCommand\");\nimport RemoveChildCommand \t\t\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildCommand\");\nimport RemoveChildrenAtDepthCommand\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildrenAtDepthCommand\");\nimport SetInstanceNameCommand \t\t= require(\"awayjs-player/lib/timeline/commands/SetInstanceNameCommand\");\nimport UpdatePropertyCommand \t\t= require(\"awayjs-player/lib/timeline/commands/UpdatePropertyCommand\");\nimport SetMaskCommand \t\t        = require(\"awayjs-player/lib/timeline/commands/SetMaskCommand\");\n\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport TextFormat\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextFieldType\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\n\nimport AWDBlock\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\n/**\n * AWDParser provides a parser for the AWD data type.\n */\nclass AWDParser extends ParserBase\n{\n\tprivate _view:View;\n\n\t//set to \"true\" to have some console.logs in the Console\n\tprivate _debug:boolean = false;\n\tprivate _debugTimers:boolean = false;\n\tprivate _byteData:ByteArray;\n\tprivate _startedParsing:boolean = false;\n\tprivate _cur_block_id:number;\n\tprivate _blocks:Array<AWDBlock>;\n\tprivate _newBlockBytes:ByteArray;\n\tprivate _version:Array<number>;\n\tprivate _compression:number;\n\tprivate _accuracyOnBlocks:boolean;\n\tprivate _accuracyMatrix:boolean;\n\tprivate _accuracyGeo:boolean;\n\tprivate _accuracyProps:boolean;\n\tprivate _streaming:boolean;\n\tprivate _texture_users:Object = {};\n\tprivate _parsed_header:boolean = false;\n\tprivate _body:ByteArray;\n\n\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\n\tpublic static UNCOMPRESSED:number = 0;\n\tpublic static DEFLATE:number = 1;\n\tpublic static LZMA:number = 2;\n\tpublic static INT8:number = 1;\n\tpublic static INT16:number = 2;\n\tpublic static INT32:number = 3;\n\tpublic static UINT8:number = 4;\n\tpublic static UINT16:number = 5;\n\tpublic static UINT32:number = 6;\n\tpublic static FLOAT32:number = 7;\n\tpublic static FLOAT64:number = 8;\n\tpublic static BOOL:number = 21;\n\tpublic static COLOR:number = 22;\n\tpublic static BADDR:number = 23;\n\tpublic static AWDSTRING:number = 31;\n\tpublic static AWDBYTEARRAY:number = 32;\n\tpublic static VECTOR2x1:number = 41;\n\tpublic static VECTOR3x1:number = 42;\n\tpublic static VECTOR4x1:number = 43;\n\tpublic static MTX3x2:number = 44;\n\tpublic static MTX3x3:number = 45;\n\tpublic static MTX4x3:number = 46;\n\tpublic static MTX4x4:number = 47;\n\tpublic static GEO_NUMBER:number = 48;\n\tpublic static MATRIX_NUMBER:number = 49;\n\tpublic static PROPERTY_NUMBER:number = 50;\n\t\n\n\tprivate blendModeDic:Array<string>;\n\tprivate _depthSizeDic:Array<number>;\n\n\tprivate start_timeing:number;\n\tprivate _time_all:number=0;\n\tprivate _time_geom:number=0;\n\tprivate _time_timeline:number=0;\n\tprivate _time_fonts:number=0;\n\tprivate _time_textfields:number=0;\n\tprivate _time_sounds:number=0;\n\tprivate _time_textures:number=0;\n\tprivate _time_materials:number=0;\n\tprivate _time_meshes:number=0;\n\tprivate _num_geom:number=0;\n\tprivate _num_timeline:number=0;\n\tprivate _num_fonts:number=0;\n\tprivate _num_textfields:number=0;\n\tprivate _num_sounds:number=0;\n\tprivate _num_textures:number=0;\n\tprivate _num_materials:number=0;\n\tprivate _num_meshes:number=0;\n\n\n\t/**\n\t * Creates a new AWD3Parserutils object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(view:View = null)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\n\t\tthis._view = view;\n\t\tthis._blocks = new Array<AWDBlock>();\n\t\tthis._blocks[0] = new AWDBlock(0,255);\n\t\tthis._blocks[0].data = null; // Zero address means null in AWD\n\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.ADD);\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\n\t\tthis._depthSizeDic.push(256);\n\t\tthis._depthSizeDic.push(512);\n\t\tthis._depthSizeDic.push(2048);\n\t\tthis._depthSizeDic.push(1024);\n\t\tthis._version = Array<number>(); // will contain 2 int (major-version, minor-version) for awd-version-check\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"awd\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\t// this will be called when Dependency has finished loading.\n\t\t// the ressource dependecniy has a id that point to the awd_block waiting for it.\n\t\t//console.log(\"AWDParser resolve dependencies\");\n\t\tif (resourceDependency.assets.length == 1) {\n\t\t\tvar this_block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\n\t\t\tif(this_block.type==82){\n\t\t\t\tvar texture_asset:Single2DTexture = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\n\t\t\t\tthis_block.data = texture_asset; // Store finished asset\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\n\t\t\t\t// previously suppressed while the dependency was loaded.\n\t\t\t\tthis._pFinalizeAsset(<IAsset> texture_asset, this_block.name);\n\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Parsed Texture: Name = \" + this_block.name);\n\t\t\t}\n\t\t\telse if(this_block.type==44){\n\t\t\t\tvar audio_asset:WaveAudio = <WaveAudio> resourceDependency.assets[0];\n\t\t\t\tthis_block.data = audio_asset; // Store finished asset\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\n\t\t\t\t// previously suppressed while the dependency was loaded.\n\t\t\t\t//console.log(\"Parsing audio \" + this_block.name);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> audio_asset, this_block.name);\n\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Parsed WaveAudio: Name = \" + this_block.name);\n\t\t\t}\n\t\t\telse if(this_block.type==83){\n\t\t\t\tthis_block.loaded_dependencies[resourceDependency.sub_id]= resourceDependency.assets[0];\n\t\t\t\tthis_block.loaded_dependencies_cnt++;\n\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + resourceDependency.sub_id + \" / 6 for Cubetexture\");\n\n\t\t\t\tif(this_block.loaded_dependencies_cnt==6){\n\t\t\t\t\tvar cube_image_asset = new BitmapImageCube(this_block.loaded_dependencies[0].width);\n\n\t\t\t\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\t\t\t\tcube_image_asset.draw(i, this_block.loaded_dependencies[i]);\n\n\t\t\t\t\tvar cube_tex_asset = new SingleCubeTexture(cube_image_asset);\n\t\t\t\t\tthis_block.data = cube_tex_asset; // Store finished asset\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> cube_tex_asset, this_block.name);\n\n\t\t\t\t\tif (this._debug)\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + this_block.name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._debugTimers && !this._isParsing)\n\t\t\t\tthis.updateTimers(this_block.type);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\t//not used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\n\t\t// this means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\tvar oldName:string = asset.name;\n\n\t\tif (asset) {\n\t\t\tvar block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\n\t\t\t// Reset name of texture to the one defined in the AWD file,\n\t\t\t// as opposed to whatever the image parser came up with.\n\t\t\tasset.resetAssetPath(block.name, null, true);\n\t\t}\n\n\t\tvar newName:string = asset.name;\n\n\t\tasset.name = oldName;\n\n\t\treturn newName;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (!this._startedParsing) {\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\tif (!this._parsed_header) {\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Parse header and decompress body if needed\n\t\t\tthis.parseHeader();\n\n\t\t\tswitch (this._compression) {\n\t\t\t\tcase AWDParser.DEFLATE:\n\t\t\t\tcase AWDParser.LZMA:\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AWDParser.UNCOMPRESSED:\n\t\t\t\t\tthis._body = this._byteData;\n\t\t\t\t\tbreak;\n\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t// Compressed AWD Formats not yet supported\n\t\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t\t/*\n\t\t\t\t case AWD3Parserutils.DEFLATE:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress();\n\n\t\t\t\t break;\n\t\t\t\t case AWD3Parserutils.LZMA:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\n\n\t\t\t\t break;\n\t\t\t\t //*/\n\n\t\t\t}\n\n\t\t\tthis._parsed_header = true;\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t}\n\n\t\tif (this._body) {\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\n\t\t\t\tthis.parseNextBlock();\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Return complete status\n\t\t\tif (this._body.getBytesAvailable() == 0) {\n\t\t\t\tthis.dispose();\n\n\t\t\t\tif (this._debugTimers)\n\t\t\t\t\tconsole.log(\"Parsing total: \"+(this._time_all | 0)+\"ms\",\n\t\t\t\t\t\t\" | geoms: \"+this._num_geom+\", \"+(this._time_geom | 0)+\"ms\",\n\t\t\t\t\t\t\" | timelines: \"+this._num_timeline+\", \"+(this._time_timeline | 0)+\"ms\",\n\t\t\t\t\t\t\" | fonts: \"+this._num_fonts+\", \"+(this._time_fonts | 0)+\"ms\",\n\t\t\t\t\t\t\" | sounds: \"+this._num_sounds+\", \"+(this._time_sounds | 0)+\"ms\",\n\t\t\t\t\t\t\" | mats: \"+this._num_materials+\", \"+(this._time_materials | 0)+\"ms\",\n\t\t\t\t\t\t\" | textures: \"+this._num_textures+\", \"+(this._time_textures | 0)+\"ms\",\n\t\t\t\t\t\t\" | meshes: \"+this._num_meshes+\", \"+(this._time_meshes | 0)+\"ms\");\n\n\t\t\t\treturn  ParserBase.PARSING_DONE;\n\t\t\t} else {\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} else {\n\n\t\t\tswitch (this._compression) {\n\t\t\t\tcase AWDParser.DEFLATE:\n\t\t\t\tcase AWDParser.LZMA:\n\t\t\t\t\tif (this._debug)\n\t\t\t\t\t\tconsole.log(\"(!) AWDParser Error: Compressed AWD formats not yet supported (!)\");\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Error - most likely _body not set because we do not support compression.\n\t\t\treturn  ParserBase.PARSING_DONE;\n\t\t}\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\tprivate dispose()\n\t{\n\t\tfor (var c in this._blocks) {\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[c];\n\t\t\tb.dispose();\n\t\t}\n\t}\n\n\tprivate parseNextBlock()\n\t{\n\t\tvar block:AWDBlock;\n\t\tvar isParsed:boolean = false;\n\t\tvar ns:number;\n\t\tvar type:number;\n\t\tvar flags:number;\n\t\tvar len:number;\n//*\n\t\tif (this._debugTimers)\n\t\t\tthis.start_timeing = performance.now();\n//*/\n\t\tthis._cur_block_id = this._body.readUnsignedInt();\n\n\t\tns = this._body.readUnsignedByte();\n\t\ttype = this._body.readUnsignedByte();\n\t\tflags = this._body.readUnsignedByte();\n\t\tlen = this._body.readUnsignedInt();\n\n\t\tvar blockCompression:boolean = BitFlags.test(flags, BitFlags.FLAG4);\n\t\tvar blockCompressionLZMA:boolean = BitFlags.test(flags, BitFlags.FLAG5);\n\n\t\tif (this._accuracyOnBlocks) {\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG1);\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG2);\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG3);\n\t\t}\n\n\t\tvar blockEndAll:number = this._body.position + len;\n\n\t\tif (len > this._body.getBytesAvailable()) {\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\n\t\t\tthis._body.position += this._body.getBytesAvailable();\n\t\t\treturn;\n\t\t}\n\n\t\t//----------------------------------------------------------------------------\n\t\t// Compressed AWD Formats not yet supported\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\tthis._newBlockBytes = new ByteArray();\n\t\t\tthis._body.readBytes(this._newBlockBytes, 0, len);\n\t\t\tthis._newBlockBytes.position = 0;\n\t\t\t/*\n\t\t\t if (blockCompressionLZMA)\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress(AWD3Parserutils.COMPRESSIONMODE_LZMA);\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress();\n\t\t\t }\n\t\t\t */\n\n\t\t} else {\n\t\t\tthis._newBlockBytes = this._body;\n\t\t}\n\n\t\t//----------------------------------------------------------------------------\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t//----------------------------------------------------------------------------\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\n\t\t//----------------------------------------------------------------------------\n\n\t\tblock = new AWDBlock(this._cur_block_id, type);\n\t\tblock.len = len;\n\t\tvar blockEndBlock:number = this._newBlockBytes.position + len;\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\n\t\t\t//block.len       = blockEndBlock;\n\t\t}\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + this._cur_block_id + \" | TypeID = \" + type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\n\n\t\tthis._blocks[this._cur_block_id] = block;\n\n\t\tif ((this._version[0] == 3) && (this._version[1] == 0)) {\n\t\t\t// probably should contain some info about the type of animation\n\t\t\tvar factory = new AS2SceneGraphFactory(this._view);\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 24:\n\t\t\t\t\tthis.parseMeshLibraryBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 25:\n\t\t\t\t\tthis.parseBillBoardLibraryBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 44:\n\t\t\t\t\tthis.parseAudioBlock(this._cur_block_id, factory);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 133:\n\t\t\t\t\tthis.parseTimeLine(this._cur_block_id, factory);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 134:\n\t\t\t\t\tthis.paresTextField(this._cur_block_id, factory);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 135:\n\t\t\t\t\tthis.parseTesselatedFont(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 136:\n\t\t\t\t\tthis.parseTextFormat(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ((this._version[0] > 2)||((this._version[0] >= 2) && (this._version[1] >= 1))) {\n\t\t\tswitch (type) {\n\t\t\t\tcase 11:\n\t\t\t\t\tthis.parsePrimitves(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 31:\n\t\t\t\t\tthis.parseSkyboxInstance(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 41:\n\t\t\t\t\tthis.parseLight(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 42:\n\t\t\t\t\tthis.parseCamera(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t//  case 43:\n\t\t\t\t//      parseTextureProjector(_cur_block_id);\n\t\t\t\t//      isParsed = true;\n\t\t\t\t//      break;\n\n\t\t\t\tcase 51:\n\t\t\t\t\tthis.parseLightPicker(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 81:\n\t\t\t\t\tthis.parseMaterial_v1(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 83:\n\t\t\t\t\tthis.parseCubeTexture(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 91:\n\t\t\t\t\tthis.parseSharedMethodBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 92:\n\t\t\t\t\tthis.parseShadowMethodBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 111:\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id, true);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 112:\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 113:\n\t\t\t\t\tthis.parseVertexAnimationSet(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 122:\n\t\t\t\t\tthis.parseAnimatorSet(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 253:\n\t\t\t\t\tthis.parseCommand(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isParsed == false) {\n\t\t\tswitch (type) {\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.parseGeometry(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 22:\n\t\t\t\t\tthis.parseContainer(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 23:\n\t\t\t\t\tthis.parseMeshInstance(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 81:\n\t\t\t\t\tthis.parseMaterial(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 82:\n\t\t\t\t\tthis.parseTexture(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 101:\n\t\t\t\t\tthis.parseSkeleton(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 102:\n\t\t\t\t\tthis.parseSkeletonPose(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 103:\n\t\t\t\t\tthis.parseSkeletonAnimation(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 121:\n\t\t\t\t//this.parseUVAnimation(this._cur_block_id);\n\t\t\t\t//break;\n\t\t\t\tcase 254:\n\t\t\t\t\tthis.parseNameSpace(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 255:\n\t\t\t\t\tthis.parseMetaData(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (this._debug)\n\t\t\t\t\t\tconsole.log(\"AWDBlock:   Unknown BlockType  (BlockID = \" + this._cur_block_id + \") - Skip \" + len + \" bytes\");\n\n\t\t\t\t\tthis._newBlockBytes.position += len;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this._debug) {\n\t\t\tif (this._newBlockBytes.position != blockEndBlock)\n\t\t\t\tconsole.log(\"  (!)(!)(!) Error while reading AWDBlock ID \" + this._cur_block_id + \" = skip to next block\");\n\n\t\t\tif (block.errorMessages) {\n\t\t\t\tvar len:number = block.errorMessages.length;\n\t\t\t\tfor (var msgCnt:number = 0; msgCnt < len; msgCnt++)\n\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\n\t\t\t}\n\n\t\t\tconsole.log(\"\\n\");\n\t\t}\n\n\t\tif (this._debugTimers && !this.parsingPaused)\n\t\t\tthis.updateTimers(type);\n\n\t\tthis._body.position = blockEndAll;\n\t\tthis._newBlockBytes = null;\n\t}\n\n\tprivate updateTimers(type:number)\n\t{\n\t\tvar end_timing = performance.now();\n\t\tvar time_delta = end_timing - this.start_timeing;\n\t\tthis._time_all += time_delta;\n\n\t\tif (type == 1) {\n\t\t\tthis._time_geom += time_delta;\n\t\t\tthis._num_geom++;\n\t\t} else if (type == 133) {\n\t\t\tthis._time_timeline += time_delta;\n\t\t\tthis._num_timeline++;\n\t\t} else if (type == 135) {\n\t\t\tthis._time_fonts += time_delta;\n\t\t\tthis._num_fonts++;\n\t\t} else if (type == 134) {\n\t\t\tthis._time_textfields += time_delta;\n\t\t\tthis._num_textfields++;\n\t\t} else if (type == 44) {\n\t\t\tthis._time_sounds += time_delta;\n\t\t\tthis._num_sounds++;\n\t\t} else if (type == 82) {\n\t\t\tthis._time_textures += time_delta;\n\t\t\tthis._num_textures++;\n\t\t} else if (type == 81) {\n\t\t\tthis._time_materials += time_delta;\n\t\t\tthis._num_materials++;\n\t\t} else if(type==24) {\n\t\t\tthis._time_meshes += time_delta;\n\t\t\tthis._num_meshes++;\n\t\t}\n\t}\n\n\n\t//--Parser Blocks---------------------------------------------------------------------------\n\n\n\tprivate parseTesselatedFont(blockID:number)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tthis._blocks[blockID].name = name;\n\t\tvar font_style_cnt:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar font_style_char_cnt:number;\n\t\tvar font_style_name:string;\n\t\tvar new_font_style:TesselatedFontTable;\n\t\tvar new_font:Font=new Font();\n\t\tvar font_style_char:number;\n\t\tvar sm_len:number;\n\t\tvar sm_end:number;\n\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\n\t\tfor (var i:number = 0; i < font_style_cnt; ++i) {\n\t\t\tfont_style_name = this.parseVarStr();\n\t\t\tnew_font_style = new_font.get_font_table(font_style_name);\n\t\t\tnew_font_style.set_font_em_size(this._newBlockBytes.readUnsignedInt());\n\t\t\tfont_style_char_cnt = this._newBlockBytes.readUnsignedInt();\n\t\t\tfor (var j:number = 0; j < font_style_char_cnt; ++j) {\n\t\t\t\t// todo: this is basically a simplified version of the subgeom-parsing done in parseGeometry. Make a parseSubGeom() instead (?)\n\t\t\t\tfont_style_char = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tsm_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tsm_end = this._newBlockBytes.position + sm_len;\n\n\t\t\t\t// Loop through data streams\n\t\t\t\twhile (this._newBlockBytes.position < sm_end) {\n\t\t\t\t\t// Type, field type, length\n\t\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\n\n\t\t\t\t\tif (str_type == 2) {//face indices positions\n\t\t\t\t\t\tvar indices:Array<number> = new Array<number>();\n\t\t\t\t\t\tfor(var idx:number = 0; this._newBlockBytes.position < str_end; idx++)\n\t\t\t\t\t\t\tindices[idx] = this._newBlockBytes.readUnsignedShort();\n\n\t\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\n\t\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\n\t\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar vertexBuffer:AttributesBuffer = new AttributesBuffer(28, str_len/28);\n\t\t\t\tvertexBuffer.bufferView = new Uint8Array(<ArrayBuffer> curveData.arraybytes);\n\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(vertexBuffer);\n\t\t\t\tcurve_sub_geom.setUVs(new Float2Attributes(vertexBuffer));\n\t\t\t\tnew_font_style.set_subgeo_for_char(font_style_char.toString(), curve_sub_geom);\n\t\t\t}\n\t\t}\n\n\t\tthis.parseProperties(null);\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset>new_font, name);\n\n\t\tthis._blocks[blockID].data = new_font;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a font: Name = '\" + name);\n\t}\n\n\tprivate static textFormatProperties:Object = {\n\t\t1:AWDParser.UINT16,\n\t\t2:AWDParser.UINT16,\n\t\t3:AWDParser.UINT8,\n\t\t4:AWDParser.UINT8,\n\t\t5:AWDParser.UINT8,\n\t\t6:AWDParser.UINT8,\n\t\t7:AWDParser.UINT16,\n\t\t8:AWDParser.UINT16,\n\t\t9:AWDParser.UINT16,\n\t\t10:AWDParser.UINT16};\n\n\tprivate parseTextFormat(blockID:number)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tthis._blocks[blockID].name = name;\n\n\t\tvar font:Font = <Font> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar font_style_name:string = this.parseVarStr();\n\n\t\tvar newTextFormat:TextFormat = new TextFormat();\n\t\tnewTextFormat.font_name = font.name;\n\n\t\tvar font_table:TesselatedFontTable = font.get_font_table(font_style_name);\n\t\tif (font_table!=null) {\n\t\t\tnewTextFormat.font_style = font_style_name;\n\t\t\tnewTextFormat.font_table = font_table;\n\t\t}\n\n\t\tvar mat:BasicMaterial = <BasicMaterial> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tmat.bothSides = true;\n\n\t\tvar num_uv_values:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar uv_values:Array<number> = [];\n\t\tfor(var uvcnt:number = 0; uvcnt < num_uv_values; uvcnt++)\n\t\t\tuv_values[uvcnt] = this._newBlockBytes.readFloat();\n\n\t\tnewTextFormat.uv_values = uv_values;\n\t\tvar format_props:AWDProperties = this.parseProperties(AWDParser.textFormatProperties);\n\n\t\tnewTextFormat.size = format_props.get(1,12);\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\n\t\t//newTextFormat.rotated = format_props.get(3,false);\n\t\tnewTextFormat.kerning = format_props.get(4,true);\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\n\t\tvar tf_align_int:number = format_props.get(6,0);\n\t\tif(tf_align_int==1){\n\t\t\tnewTextFormat.align=\"right\";\n\t\t}\n\t\telse if(tf_align_int==2){\n\t\t\tnewTextFormat.align=\"center\";\n\t\t}\n\t\tnewTextFormat.indent = format_props.get(7,0);\n\t\tnewTextFormat.leftMargin = format_props.get(8,0);\n\t\tnewTextFormat.rightMargin = format_props.get(9,0);\n\t\t//newTextFormat.linespacing = format_props.get(10,0);\n\t\tnewTextFormat.material = mat;\n\t\tthis.parseUserAttributes();// textformat has no extra-properties\n\t\t//newTextFormat.extra =\n\n\t\tthis._pFinalizeAsset(<IAsset> newTextFormat, name);\n\t\tthis._blocks[blockID].data = newTextFormat;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a TextFormat: Name = '\" + name + \" font: \"+font.name);\n\t}\n\n\tprivate static textFieldProperties:Object = {\n\t\t1:AWDParser.BOOL,\n\t\t3:AWDParser.BOOL,\n\t\t4:AWDParser.BOOL,\n\t\t5:AWDParser.BOOL,\n\t\t7:AWDParser.UINT8,\n\t\t8:AWDParser.UINT8,\n\t\t9:AWDParser.UINT8};\n\n\tprivate static textFieldTypes:Array<string> = [\"static\", \"dynamic\", \"input\", \"input\"];\n\n\n\tprivate paresTextField(blockID:number, factory:TimelineSceneGraphFactory)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tthis._blocks[blockID].name = name;\n        var newTextField = factory.createTextField();\n\t\tvar text_field_type:number=this._newBlockBytes.readUnsignedByte();\n\n\t\tnewTextField.type = AWDParser.textFieldTypes[text_field_type];\n\n\t\tif(text_field_type == 3)\n\t\t\tnewTextField.displayAsPassword = true;\n\n\t\t//\n\t\tnewTextField.textWidth = Math.abs(this._newBlockBytes.readFloat());\n\t\tnewTextField.textHeight = Math.abs(this._newBlockBytes.readFloat());\n\t\tvar num_paragraphs:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar complete_text:string = \"\";\n\t\t//console.log(\"num_paragraphs  '\" + num_paragraphs);\n\t\tfor(var paracnt:number=0; paracnt<num_paragraphs; paracnt++){\n\n\t\t\tvar num_textruns:number = this._newBlockBytes.readUnsignedInt();\n\t\t\t//console.log(\"num_textruns  '\" + num_textruns);\n\t\t\tfor(var textrun_cnt:number=0; textrun_cnt<num_textruns; textrun_cnt++) {\n\t\t\t\tvar text_format:TextFormat = <TextFormat> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\t\t\tvar txt_length = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"txt_length  '\" + txt_length);\n\t\t\t\tif (txt_length > 0) {\n\t\t\t\t\tvar this_txt:string = this._newBlockBytes.readUTFBytes(txt_length);\n\t\t\t\t\t//newTextField.appendText(this_txt, text_format);\n\t\t\t\t\tcomplete_text += this_txt;\n\t\t\t\t\t//console.log(\"this_txt  '\" + this_txt);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//newTextField.closeParagraph();\n\t\t}\n\t\tnewTextField.textFormat=text_format;\n\t\tnewTextField.text=complete_text;\n\t\t//newTextField.construct_geometry();\n\t\t// todo: optional matrix etc can be put in properties.\n\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.textFieldProperties);\n\t\tnewTextField.selectable = props.get(1, false);\n\t\tnewTextField.border =  props.get(3, false);\n\t\t//newTextField.renderHTML =  props.get(4, false);\n\t\t//newTextField.scrollable =  props.get(5, false);\n\t\t//newTextField.text_flow =  props.get(7, 0);\n\t\t//newTextField.orientationMode =  props.get(8, 0);\n\t\t//newTextField.line_mode =  props.get(9, 0);\n\t\tnewTextField.extra = this.parseUserAttributes();\n\n\t\t//console.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\n\t\tthis._pFinalizeAsset(<IAsset> newTextField, name);\n\t\tthis._blocks[blockID].data = newTextField;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\n\t}\n\n\t// Block ID = 25\n\tprivate parseBillBoardLibraryBlock(blockID:number)\n\t{\n\n\t\tvar name:string = this.parseVarStr();\n\t\tvar mat:BasicMaterial = <BasicMaterial> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tmat.bothSides=true;\n\t\tvar billboard:Billboard = new Billboard(mat);\n\n\t\t// todo: optional matrix etc can be put in properties.\n\t\tthis.parseProperties(null);\n\n\t\tbillboard.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> billboard, name);\n\n\t\tthis._blocks[blockID].data = billboard;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Library-Billboard: Name = '\" + name + \"| Material-Name = \" + mat.name);\n\t}\n\t// Block ID = 24\n\tprivate parseMeshLibraryBlock(blockID:number)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar geom:Geometry = <Geometry> this._blocks[data_id].data;\n\t\tthis._blocks[blockID].geoID = data_id;\n\n\t\tvar num_materials:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar materials:Array<MethodMaterial> = new Array<MethodMaterial>();\n\t\tvar materialNames:Array<string> = new Array<string>();\n\t\tvar mat:MethodMaterial;\n\t\tfor (var materials_parsed:number = 0; materials_parsed < num_materials; materials_parsed++) {\n\t\t\tmat = <MethodMaterial> (this._blocks[this._newBlockBytes.readUnsignedInt()].data || DefaultMaterialManager.getDefaultMaterial());\n\t\t\t//mat.preserveAlpha = true;\n\t\t\tmat.alphaBlending = true;\n\t\t\tmat.useColorTransform = true;\n\t\t\tmaterials[materials_parsed] = mat;\n\t\t\tmaterialNames[materials_parsed] = mat.name;\n\t\t}\n\n\t\tvar mesh:Mesh = new Mesh(geom, null);\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\n\t\t\tmesh.material = materials[0];\n\t\t} else if (materials.length > 1) {\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\n\t\t\tfor (var i:number = 0; i < mesh.subMeshes.length; i++)\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\n\t\t}\n\n\t\tthis.parseProperties(null);\n\t\tmesh.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\n\n\t\tthis._blocks[blockID].data = mesh;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Library-Mesh: Name = '\" + name + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames);\n\t}\n\n\tprivate parseAudioBlock(blockID:number, factory:TimelineSceneGraphFactory)\n\t{\n\t\t//var asset:Audio;todo create asset for audio\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar data_len:number;\n\n\t\t// External\n\t\tif (type == 0) {\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\tvar url:string;\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\n\t\t\t// todo parser needs to be able to handle mp3 and wav files if we trigger the loading of external ressource\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\n\t\t} else {\n\t\t\t// todo: exporter does not export embed sounds yet\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\n\t\t\tvar data:ByteArray = new ByteArray(data_len);\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t// todo parse sound from bytes\n\t\t\t// this._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.by(data), true);\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\n\t\t}\n\n\t\t// Ignore for now\n\t\tthis.parseProperties(null);\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\n\t\tthis._pPauseAndRetrieveDependencies();\n\t\t//this._blocks[blockID].data = asset;todo\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Start parsing a \" + [\"external\", \"embed\"][type] + \" Audio file\");\n\t}\n\n\t//Block ID = 4\n\tprivate parseTimeLine(blockID:number, factory:TimelineSceneGraphFactory)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar cmd_asset:DisplayObject;\n\t\tvar timeLineContainer = factory.createMovieClip();\n\t\tvar name = this.parseVarStr();\n\t\tvar isScene = !!this._newBlockBytes.readUnsignedByte();\n\t\tvar sceneID = this._newBlockBytes.readUnsignedByte();\n\t\ttimeLineContainer.fps = this._newBlockBytes.readFloat();\n\n\t\t// register list of potential childs\n\t\t// a potential child can be reused on a timeline (added / removed / added)\n\t\t// However, for each potential child, we need to register the max-number of instances that a frame contains\n\t\t// we parse 2 lists of potential-childs:\n\t\t// -\tthe first list contains potential-childs that are only ever instanced once per frame.\n\t\t// -\tthe second list contains potential-childs that are instanced multiple times on some frames.\n\n\t\t// on registering a child, the child gets a incremental-id assigned. This is the id, that the commands are using to access the childs.\n\t\t// hence we need to be careful to register all objects in correct order.\n\n\t\tvar num_potential_childs:number = this._newBlockBytes.readUnsignedShort();\n\t\tfor (i = 0; i < num_potential_childs; i++) {\n\t\t\tcmd_asset = <DisplayObject> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\t\tif (cmd_asset != null) {\n\t\t\t\ttimeLineContainer.registerPotentialChild(cmd_asset);\n\t\t\t} else {\n\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\n\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t}\n\t\t}\n\n\t\tvar num_all_display_instances:number = num_potential_childs;\n\n\t\tvar num_potential_childs_multi_instanced = this._newBlockBytes.readUnsignedShort();\n\t\tfor (i = 0; i < num_potential_childs_multi_instanced; i++) {\n\t\t\tcmd_asset = <DisplayObject> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\t\tvar num_instances:number = this._newBlockBytes.readUnsignedShort();\n\t\t\tnum_all_display_instances += num_instances;\n\t\t\tif (cmd_asset != null) {\n\t\t\t\tfor (j = 0; j < num_instances; j++)\n\t\t\t\t\ttimeLineContainer.registerPotentialChild(cmd_asset);\n\t\t\t} else {\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\n\t\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\n\t\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\n\t\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed \" + (num_potential_childs + num_potential_childs_multi_instanced) + \" potential childs. They will be used by \" + num_all_display_instances + \" instances.\");\n\n\t\t// register list of potential sounds\n\t\t// a potential child can be reused on a timeline (added / removed / added)\n\t\tvar num_potential_sounds = this._newBlockBytes.readUnsignedShort();\n\t\tfor (i = 0; i < num_potential_sounds; i++) {\n\t\t\tcmd_asset = <DisplayObject> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\t\tif (cmd_asset != null) {\n\t\t\t\t//todo: register sound objects on movieclip\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\n\t\t\t} else {\n\t\t\t\t//todo: this is a error that might break complete timeline, because all sound obj-id shift\n\t\t\t}\n\t\t}\n\n\t\t//console.log(\"numFrames \"+numFrames);\n\t\t// var previousTimeLine:TimeLineFrame;\n\t\t// var fill_props:AWDProperties = this.parseProperties({1:AWD3Parserutils.UINT32});// { 1:UINT32, 6:AWDSTRING }  ); //; , 2:UINT32, 3:UINT32, 5:BOOL } );\n\n\n\t\tvar totalDuration:number = 0;\n\t\tvar frameDuration:number;\n\t\tvar numLabels:number;\n\t\tvar numCommands:number;\n\t\tvar objectID:number;\n\t\tvar target_depth:number;\n\t\tvar number_of_obj:number;\n\t\tvar commandType:number;\n\t\tvar frame:TimelineKeyFrame;\n\t\tvar hasDepthChanges:boolean;\n\n\t\tvar numFrames:number = this._newBlockBytes.readUnsignedShort();\n\t\tfor (i = 0; i < numFrames; i++) {\n\t\t\tvar commandCount:number = 0;\n\t\t\t// todo: remove the ms_per_frame to set the duration in frames\n\t\t\tframeDuration = this._newBlockBytes.readUnsignedInt();\n\t\t\tframe = new TimelineKeyFrame(totalDuration, frameDuration);\n\t\t\ttotalDuration += frameDuration;\n\n\t\t\tnumLabels = this._newBlockBytes.readUnsignedByte();\n\n\t\t\t// TODO: Temporary way to handle labels\n\t\t\tfor (j = 0; j < numLabels; j++)\n\t\t\t\tframe.label = this.parseVarStr();\n\n\t\t\tnumCommands = this._newBlockBytes.readUnsignedShort();\n\t\t\thasDepthChanges = false;\n\t\t\tfor (j = 0; j < numCommands; j++) {\n\t\t\t\tcommandType = this._newBlockBytes.readUnsignedByte();\n\n\t\t\t\t// 1 = remove a number of objects by depth\n\t\t\t\t// 2 = add a object by child-id at specific depth\n\t\t\t\t// 3 = update a object by child-id\n\t\t\t\t// 4 = add / update sound - (not finished)\n\n\t\t\t\tswitch (commandType) {\n\t\t\t\t\tcase 1:// remove a number of objects at specific depth\n\t\t\t\t\t\tnumber_of_obj = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t//console.log(\"number_of_obj \", number_of_obj);\n\t\t\t\t\t\tvar remove_depths:Array<number>=new Array<number>();\n\t\t\t\t\t\tfor (var c:number = 0; c < number_of_obj; c++) {\n\t\t\t\t\t\t\t// Remove Object Command\n\t\t\t\t\t\t\ttarget_depth = this._newBlockBytes.readShort();\n\t\t\t\t\t\t\tremove_depths.push(target_depth);\n\t\t\t\t\t\t\t//console.log(\"\\n       - Remove object at depth: \" + target_depth);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tframe.frameConstructCommands[commandCount++] = new RemoveChildrenAtDepthCommand(remove_depths);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2:// add a of object by child-id at specific depth\n\t\t\t\t\tcase 3:// update a object by child-id\n\t\t\t\t\tcase 6:// add a of button_instance\n\t\t\t\t\t\tobjectID = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t//console.log(\"add / update objectID \", objectID);\n\t\t\t\t\t\tif (commandType != 3) {\n\t\t\t\t\t\t\thasDepthChanges = true;\n\t\t\t\t\t\t\ttarget_depth = this._newBlockBytes.readShort();\n\t\t\t\t\t\t\t//console.log(\"target_depth \", target_depth);\n                            var potChild = timeLineContainer.getPotentialChildPrototype(objectID);\n\t\t\t\t\t\t\tif (potChild != undefined) {\n\t\t\t\t\t\t\t\tframe.frameConstructCommands[commandCount++] = new AddChildAtDepthCommand(objectID, target_depth);\n\t\t\t\t\t\t\t\tif(commandType == 6) {\n\t\t\t\t\t\t\t\t\tframe.frameConstructCommands[commandCount++] = new SetButtonCommand(objectID);\n\t\t\t\t\t\t\t\t} else if (potChild.isAsset(TextField)) {\n\t\t\t\t\t\t\t\t\t// if the object is a tetfield, we set the textfield-name as instancename\n\t\t\t\t\t\t\t\t\tframe.frameConstructCommands[commandCount++] = new SetInstanceNameCommand(objectID, potChild.name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tconsole.log(\"ERROR: could not find the objectID \", objectID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar props_flag = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t/*\tProps_flags\n\t\t\t\t\t\t 1: read display matrix - 6 x float,\n\t\t\t\t\t\t 2: read display matrix - read another UINT8-bitflag that determinates what matrix components to parse\n\t\t\t\t\t\t 3: read color matrix - 4 x float, 4 x uint16\n\t\t\t\t\t\t 4: read color matrix - read another UINT8-bitflag that determinates what matrix components to parse\n\t\t\t\t\t\t 5: blendmode - uint8\n\t\t\t\t\t\t 6: visible - boolean\n\t\t\t\t\t\t 7: AWD3Parserutils.UINT8\n\t\t\t\t\t\t });*/\n\t\t\t\t\t\t// read display matrix\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG1)) {\n\t\t\t\t\t\t\tvar thisMatrix:Matrix3D = new Matrix3D();\n\t\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG2)) {\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthisMatrix.rawData[0] = this._newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.rawData[1] = this._newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.rawData[4] = this._newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.rawData[5] = this._newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisMatrix.position = new Vector3D(this._newBlockBytes.readFloat(), this._newBlockBytes.readFloat(), 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tframe.frameConstructCommands[commandCount++] = new UpdatePropertyCommand(objectID, \"_iMatrix3D\", thisMatrix);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// read colortransforms\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG3)) {\n\t\t\t\t\t\t\tvar thisColorTransform:ColorTransform = new ColorTransform();\n\t\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG4)) {\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthisColorTransform.redMultiplier = this._newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.greenMultiplier = this._newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.blueMultiplier = this._newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.alphaMultiplier = this._newBlockBytes.readFloat();\n\t\t\t\t\t\t\t\tthisColorTransform.redOffset = this._newBlockBytes.readShort();\n\t\t\t\t\t\t\t\tthisColorTransform.greenOffset = this._newBlockBytes.readShort();\n\t\t\t\t\t\t\t\tthisColorTransform.blueOffset = this._newBlockBytes.readShort();\n\t\t\t\t\t\t\t\tthisColorTransform.alphaOffset = this._newBlockBytes.readShort();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tframe.frameConstructCommands[commandCount++] = new UpdatePropertyCommand(objectID, \"colorTransform\", thisColorTransform);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG5)) {\n\t\t\t\t\t\t\tvar blendmode_int = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\t\t\tvar blendmode_string = this.blendModeDic[blendmode_int];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG6)) {\n\t\t\t\t\t\t\tframe.frameConstructCommands[commandCount++] = new UpdatePropertyCommand(objectID, \"visible\", this._newBlockBytes.readByte());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG7)) {\n\t\t\t\t\t\t\tvar instanceName:string = this.parseVarStr();\n\t\t\t\t\t\t\tif (instanceName.length)\n\t\t\t\t\t\t\t\tframe.frameConstructCommands[commandCount++] = new SetInstanceNameCommand(objectID, instanceName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG8)) {\n\t\t\t\t\t\t\tvar mask_id_nums:number = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\t\tvar mask_ids:Array<number> = new Array<number>();\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < mask_id_nums; mi_cnt++)\n\t\t\t\t\t\t\t\tmask_ids[mi_cnt] = this._newBlockBytes.readShort();\n\n\t\t\t\t\t\t\tif (mask_ids.length > 0) {\n\t\t\t\t\t\t\t\t// TODO: this object is used as mask\n\t\t\t\t\t\t\t\tif ((mask_ids.length == 1) && (mask_ids[0] == -1))\n\t\t\t\t\t\t\t\t\tframe.frameConstructCommands[commandCount++] = new UpdatePropertyCommand(objectID, \"_iMaskID\", objectID);\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tframe.frameConstructCommands[commandCount++] = new SetMaskCommand(objectID, mask_ids);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 4:\n\n\t\t\t\t\t\t// Add Sound Command\n\t\t\t\t\t\t// TODO: create CommandPropsSound and check which asset to use\n\t\t\t\t\t\tobjectID = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\tthis._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\t// TODO: implement sound in timeline\n\t\t\t\t\t\t//commandString += \"\\n      - Add new Sound AWD-ID = \" + resourceID.toString() + \" as object_id = \" + objectID.toString();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t//commandString += \"\\n       - Un\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// known Command Type = \" + commandType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasDepthChanges) {\n\t\t\t\t// only want to do this once after all children's depth values are updated\n\t\t\t\tframe.frameConstructCommands[commandCount++] = new ApplyAS2DepthsCommand();\n\t\t\t\thasDepthChanges = false;\n\t\t\t}\n\n\t\t\tvar length_code:number = this._newBlockBytes.readUnsignedInt();\n\t\t\tif (length_code > 0) {\n\t\t\t\t// TODO: Script should probably not be attached to keyframes?\n\t\t\t\tframe.framePostConstructCommands.push(new ExecuteScriptCommand(this._newBlockBytes.readUTFBytes(length_code)));\n\t\t\t}\n\n\t\t\tthis._newBlockBytes.readUnsignedInt();// user attributes - skip for now\n\n\t\t\ttimeLineContainer.addFrame(frame);\n\t\t}\n\n\t\tthis.parseProperties(null);\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset>timeLineContainer, name);\n\n\t\tthis._blocks[blockID].data = timeLineContainer;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| isScene = \" + isScene + \"| sceneID = \" + sceneID + \"| numFrames = \" + numFrames);\n\t}\n\n\tprivate static geometryProperties:Object = {\n\t\t1:AWDParser.GEO_NUMBER,\n\t\t2:AWDParser.GEO_NUMBER};\n\n\tprivate static subGeometryProperties:Object = {\n\t\t1:AWDParser.GEO_NUMBER,\n\t\t2:AWDParser.GEO_NUMBER};\n\n\t//Block ID = 1\n\tprivate parseGeometry(blockID:number)\n\t{\n\t\tvar geom:Geometry = new Geometry();\n\n\t\t// Read name and sub count\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_subs:number = this._newBlockBytes.readUnsignedShort();\n\n\t\t// Read optional properties\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.geometryProperties);\n\t\tvar geoScaleU:number = props.get(1, 1);\n\t\tvar geoScaleV:number = props.get(2, 1);\n\n\t\t// Loop through sub meshes\n\t\tfor (var subs_parsed:number = 0;  subs_parsed < num_subs; subs_parsed++) {\n\t\t\tvar is_curve_geom:boolean=false;\n\t\t\tvar sm_len:number, sm_end:number;\n\t\t\tvar w_indices:Array<number>;\n\t\t\tvar weights:Array<number>;\n\n\t\t\tsm_len = this._newBlockBytes.readUnsignedInt();\n\t\t\tsm_end = this._newBlockBytes.position + sm_len;\n\n\t\t\tvar subProps:AWDProperties = this.parseProperties(AWDParser.subGeometryProperties);\n\t\t\t// Loop through data streams\n\t\t\twhile (this._newBlockBytes.position < sm_end) {\n\t\t\t\tvar idx:number = 0;\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\n\n\t\t\t\t// Type, field type, length\n\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\n\n\t\t\t\tvar x:number, y:number, z:number;\n\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo);\n\n\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\n\t\t\t\t\t\tindices[idx++] = this._newBlockBytes.readUnsignedShort();\n\n\t\t\t\t} else if (str_type == 3) {\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\n\t\t\t\t\t\tuvs[idx++] = this.readNumber(this._accuracyGeo);\n\t\t\t\t} else if (str_type == 4) {\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\n\t\t\t\t\t\tnormals[idx++] = this.readNumber(this._accuracyGeo);\n\t\t\t\t} else if (str_type == 6) {\n\t\t\t\t\tw_indices = Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\n\t\t\t\t\t\tw_indices[idx++] = this._newBlockBytes.readUnsignedShort()*3;\n\t\t\t\t} else if (str_type == 7) {\n\t\t\t\t\tweights = new Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\n\t\t\t\t\t\tweights[idx++] = this.readNumber(this._accuracyGeo);\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\n\t\t\t\t\tis_curve_geom = true;\n\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\n\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\n\t\t\t\t} else {\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.parseUserAttributes(); // Ignore sub-mesh attributes for now\n\n\t\t\tif(is_curve_geom){\n\t\t\t\tvar vertexBuffer:AttributesBuffer = new AttributesBuffer(28, str_len/28);\n\t\t\t\tvertexBuffer.bufferView = new Uint8Array(<ArrayBuffer> curveData.arraybytes);\n\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(vertexBuffer);\n\t\t\t\tcurve_sub_geom.setUVs(new Float2Attributes(vertexBuffer));\n\t\t\t\tgeom.addSubGeometry(curve_sub_geom);\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Parsed a CurveSubGeometry\");\n\t\t\t} else {\n\t\t\t\tvar triangle_sub_geom = new TriangleSubGeometry(new AttributesBuffer());\n\n\t\t\t\tif (weights)\n\t\t\t\t\ttriangle_sub_geom.jointsPerVertex = weights.length / (verts.length / 3);\n\n\t\t\t\tif (normals)\n\t\t\t\t\ttriangle_sub_geom.autoDeriveNormals = false;\n\n\t\t\t\tif (uvs)\n\t\t\t\t\ttriangle_sub_geom.autoDeriveUVs = false;\n\n\t\t\t\ttriangle_sub_geom.autoDeriveTangents = true;\n\n\t\t\t\ttriangle_sub_geom.setIndices(indices);\n\t\t\t\ttriangle_sub_geom.setPositions(verts);\n\t\t\t\ttriangle_sub_geom.setNormals(normals);\n\t\t\t\ttriangle_sub_geom.setUVs(uvs);\n\t\t\t\ttriangle_sub_geom.setTangents(null);\n\t\t\t\ttriangle_sub_geom.setJointWeights(weights);\n\t\t\t\ttriangle_sub_geom.setJointIndices(w_indices);\n\n\t\t\t\tvar scaleU:number = subProps.get(1, 1);\n\t\t\t\tvar scaleV:number = subProps.get(2, 1);\n\t\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\n\n\t\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\n\t\t\t\t\tsetSubUVs = true;\n\t\t\t\t\tscaleU = geoScaleU / scaleU;\n\t\t\t\t\tscaleV = geoScaleV / scaleV;\n\t\t\t\t}\n\n\t\t\t\tif (setSubUVs)\n\t\t\t\t\ttriangle_sub_geom.scaleUV(scaleU, scaleV);\n\n\t\t\t\tgeom.addSubGeometry(triangle_sub_geom);\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Parsed a TriangleSubGeometry\");\n\t\t\t}\n\n\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\n\t\t\t// when creating meshes (and their material assignments.)\n\t\t}\n\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\n\t\t\tgeom.scaleUV(geoScaleU, geoScaleV);\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> geom, name);\n\t\tthis._blocks[blockID].data = geom;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a TriangleGeometry: Name = \" + name);\n\t}\n\n\tprivate static primitiveProperties:Object = {\n\t\t101:AWDParser.GEO_NUMBER,\n\t\t102:AWDParser.GEO_NUMBER,\n\t\t103:AWDParser.GEO_NUMBER,\n\t\t110:AWDParser.GEO_NUMBER,\n\t\t111:AWDParser.GEO_NUMBER,\n\t\t301:AWDParser.UINT16,\n\t\t302:AWDParser.UINT16,\n\t\t303:AWDParser.UINT16,\n\t\t701:AWDParser.BOOL,\n\t\t702:AWDParser.BOOL,\n\t\t703:AWDParser.BOOL,\n\t\t704:AWDParser.BOOL};\n\n\tprivate static primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"];\n\n\t//Block ID = 11\n\tprivate parsePrimitves(blockID:number)\n\t{\n\t\tvar name:string;\n\t\tvar prefab:PrefabBase;\n\t\tvar primType:number;\n\t\tvar subs_parsed:number;\n\t\tvar props:AWDProperties;\n\t\tvar bsm:Matrix3D;\n\n\t\t// Read name and sub count\n\t\tname = this.parseVarStr();\n\t\tprimType = this._newBlockBytes.readUnsignedByte();\n\t\tprops = this.parseProperties(AWDParser.primitiveProperties);\n\n\t\t// to do, not all properties are set on all primitives\n\t\tswitch (primType) {\n\t\t\tcase 1:\n\t\t\t\tprefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tprefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\tprefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 4:\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\n\t\t\t\tif (!props.get(701, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\n\t\t\t\tif (!props.get(702, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\n\t\t\t\tif (!props.get(703, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\t\tprefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 6:\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 7:\n\t\t\t\tprefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tprefab = new PrefabBase();\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\n\t\t\t//geom.subGeometries;\n\t\t\t//geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\n\t\t}\n\n\t\tthis.parseUserAttributes();\n\t\tprefab.name = name;\n\t\tthis._pFinalizeAsset(prefab, name);\n\t\tthis._blocks[blockID].data = prefab;\n\n\t\tif (this._debug) {\n\t\t\tif ((primType < 0) || (primType > 7))\n\t\t\t\tprimType = 0;\n\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + name + \"| type = \" + AWDParser.primitiveTypes[primType]);\n\t\t}\n\t}\n\n\tprivate static containerProperties:Object = {\n\t\t1:AWDParser.MATRIX_NUMBER,\n\t\t2:AWDParser.MATRIX_NUMBER,\n\t\t3:AWDParser.MATRIX_NUMBER,\n\t\t4:AWDParser.UINT8};\n\n\t// Block ID = 22\n\tprivate parseContainer(blockID:number)\n\t{\n\t\tvar name:string;\n\t\tvar mtx:Matrix3D;\n\t\tvar ctr:DisplayObjectContainer;\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\n\t\tmtx = this.parseMatrix3D();\n\t\tname = this.parseVarStr();\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tctr = new DisplayObjectContainer();\n\t\tctr.transform.matrix3D = mtx;\n\n\t\tif (parent) {\n\t\t\tparent.addChild(ctr);\n\t\t\tparentName = parent.name;\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(ctr);\n\t\t}\n\n\t\t// in AWD version 2.1 we read the Container properties\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tvar props:AWDProperties = this.parseProperties(AWDParser.containerProperties);\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t} else {// in other versions we do not read the Container properties\n\t\t\tthis.parseProperties(null);\n\t\t}\n\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\n\t\tctr.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> ctr, name);\n\t\tthis._blocks[blockID].data = ctr;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + name + \"' | Parent-Name = \" + parentName);\n\t}\n\n\tprivate static meshInstanceProperties:Object = {\n\t\t1:AWDParser.MATRIX_NUMBER,\n\t\t2:AWDParser.MATRIX_NUMBER,\n\t\t3:AWDParser.MATRIX_NUMBER,\n\t\t4:AWDParser.UINT8,\n\t\t5:AWDParser.BOOL};\n\n\t// Block ID = 23\n\tprivate parseMeshInstance(blockID:number)\n\t{\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar asset:IAsset = <IAsset> this._blocks[data_id].data;\n\t\tvar geom:Geometry;\n\t\tvar prefab:PrefabBase;\n\t\tvar isPrefab:boolean=false;\n\t\tif (asset.isAsset(Geometry)) {\n\t\t\tgeom = <Geometry> asset;\n\t\t} else {\n\t\t\tisPrefab = true;\n\t\t\tprefab = <PrefabBase> asset;\n\t\t}\n\n\t\tthis._blocks[blockID].geoID = data_id;\n\t\tvar num_materials:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar materials:Array<MethodMaterial> = new Array<MethodMaterial>();\n\t\tvar materialNames:Array<string> = new Array<string>();\n\t\tvar mat:MethodMaterial;\n\t\tfor (var materials_parsed:number = 0; materials_parsed < num_materials; materials_parsed++) {\n\t\t\tmat = <MethodMaterial> (this._blocks[this._newBlockBytes.readUnsignedInt()].data || DefaultMaterialManager.getDefaultMaterial());\n\t\t\tmaterials[materials_parsed] = mat;\n\t\t\tmaterialNames[materials_parsed] = mat.name;\n\t\t}\n\n\t\tvar mesh:Mesh = isPrefab? <Mesh> prefab.getNewObject() : new Mesh(geom, null);\n\t\tmesh.transform.matrix3D = mtx;\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tif (parent) {\n\t\t\tparent.addChild(mesh);\n\t\t\tparentName = parent.name;\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\n\t\t}\n\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\n\t\t\tmesh.material = materials[0];\n\t\t} else if (materials.length > 1) {\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\n\t\t\tfor (var i:number = 0; i < mesh.subMeshes.length; i++)\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\n\t\t}\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tvar props:AWDProperties = this.parseProperties(AWDParser.meshInstanceProperties);\n\t\t\tmesh.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t\tmesh.castsShadows = props.get(5, true);\n\t\t} else {\n\t\t\tthis.parseProperties(null);\n\t\t}\n\n\t\tmesh.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\n\t\tthis._blocks[blockID].data = mesh;\n\n\t\tif (this._debug) {\n\t\t\tif (isPrefab)\n\t\t\t\tconsole.log(\"Parsed a Mesh for Prefab: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Prefab-Name = \" + prefab.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames);\n\t\t\telse\n\t\t\t\tconsole.log(\"Parsed a Mesh for Geometry: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames);\n\t\t}\n\t}\n\n\n\t//Block ID 31\n\tprivate parseSkyboxInstance(blockID:number)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar asset:Skybox = new Skybox();\n\t\tvar tex:SingleCubeTexture = <SingleCubeTexture> (this._blocks[this._newBlockBytes.readUnsignedInt()].data || DefaultMaterialManager.getDefaultTexture(asset));\n\t\tasset.cubeMap = tex;\n\n\t\tthis.parseProperties(null);\n\t\tasset.extra = this.parseUserAttributes();\n\t\tthis._pFinalizeAsset(asset, name);\n\t\tthis._blocks[blockID].data = asset;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + name + \"' | CubeTexture-Name = \" + tex.name);\n\t}\n\n\tprivate static lightProperties:Object = {\n\t\t1:AWDParser.PROPERTY_NUMBER,\n\t\t2:AWDParser.PROPERTY_NUMBER,\n\t\t3:AWDParser.COLOR,\n\t\t4:AWDParser.PROPERTY_NUMBER,\n\t\t5:AWDParser.PROPERTY_NUMBER,\n\t\t6:AWDParser.BOOL,\n\t\t7:AWDParser.COLOR,\n\t\t8:AWDParser.PROPERTY_NUMBER,\n\t\t9:AWDParser.UINT8,\n\t\t10:AWDParser.UINT8,\n\t\t11:AWDParser.PROPERTY_NUMBER,\n\t\t12:AWDParser.UINT16,\n\t\t21:AWDParser.MATRIX_NUMBER,\n\t\t22:AWDParser.MATRIX_NUMBER,\n\t\t23:AWDParser.MATRIX_NUMBER};\n\n\t//Block ID = 41\n\tprivate parseLight(blockID:number)\n\t{\n\t\tvar light:LightBase;\n\t\tvar newShadowMapper:ShadowMapperBase;\n\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\t\tvar lightType:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.lightProperties);\n\t\tvar shadowMapperType:number = props.get(9, 0);\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\n\n\t\tif (lightType == 1) {\n\t\t\tlight = new PointLight();\n\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 4) {\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlight.transform.matrix3D = mtx;\n\t\t}\n\n\t\tif (lightType == 2) {\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 1) {\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\n\t\t\t\t}\n\n\t\t\t\t//if (shadowMapperType == 2)\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\n\t\t\t\t//if (shadowMapperType == 3)\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\n\n\t\t\t}\n\t\t}\n\n\t\tlight.color = props.get(3, 0xffffff);\n\t\tlight.specular = props.get(4, 1.0);\n\t\tlight.diffuse = props.get(5, 1.0);\n\t\tlight.ambientColor = props.get(7, 0xffffff);\n\t\tlight.ambient = props.get(8, 0.0);\n\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\n\t\tif (newShadowMapper) {\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\n\t\t\t\tif (props.get(10, 1) != 1)\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 1)];\n\t\t\t} else {\n\t\t\t\tif (props.get(10, 2) != 2)\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 2)];\n\t\t\t}\n\n\t\t\tlight.shadowMapper = newShadowMapper;\n\t\t\tlight.castsShadows = true;\n\t\t}\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tif (parent) {\n\t\t\tparent.addChild(light);\n\t\t\tparentName = parent.name;\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(light);\n\t\t}\n\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(< IAsset> light, name);\n\n\t\tthis._blocks[blockID].data = light;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\n\t}\n\n\tprivate static cameraProperties:Object = {\n\t\t101:AWDParser.PROPERTY_NUMBER,\n\t\t102:AWDParser.PROPERTY_NUMBER,\n\t\t103:AWDParser.PROPERTY_NUMBER,\n\t\t104:AWDParser.PROPERTY_NUMBER};\n\n\tprivate static cameraPivotProperties:Object = {\n\t\t1:AWDParser.MATRIX_NUMBER,\n\t\t2:AWDParser.MATRIX_NUMBER,\n\t\t3:AWDParser.MATRIX_NUMBER,\n\t\t4:AWDParser.UINT8};\n\n\t//Block ID = 43\n\tprivate parseCamera(blockID:number)\n\t{\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\t\tvar projection:ProjectionBase;\n\n\t\tthis._newBlockBytes.readUnsignedByte(); //set as active camera\n\t\tthis._newBlockBytes.readShort(); //lengthof lenses - not used yet\n\n\t\tvar projectiontype:number = this._newBlockBytes.readShort();\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.cameraProperties);\n\n\t\tswitch (projectiontype) {\n\t\t\tcase 5001:\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\n\t\t\t\tbreak;\n\t\t\tcase 5002:\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\n\t\t\t\tbreak;\n\t\t\tcase 5003:\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\n\t\t\t\treturn;\n\t\t}\n\n\t\tvar camera:Camera = new Camera(projection);\n\t\tcamera.transform.matrix3D = mtx;\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tif (parent) {\n\t\t\tparent.addChild(camera);\n\t\t\tparentName = parent.name;\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(camera);\n\t\t}\n\n\t\tcamera.name = name;\n\t\tprops = this.parseProperties(AWDParser.cameraPivotProperties);\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\tcamera.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(camera, name);\n\n\t\tthis._blocks[blockID].data = camera;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\n\t}\n\n\t//Block ID = 51\n\tprivate parseLightPicker(blockID:number)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar numLights:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\n\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\n\n\t\tfor (var k:number = 0; k < numLights; k++) {\n\t\t\tvar light:LightBase = <LightBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\t\tlightsArray.push(light);\n\t\t\tlightsArrayNames.push(light.name);\n\t\t}\n\n\t\tif (lightsArray.length == 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not create this LightPicker, cause no Light was found.\");\n\t\t\tthis.parseUserAttributes();\n\t\t\treturn; //return without any more parsing for this block\n\t\t}\n\n\t\tvar lightPick:LightPickerBase = new StaticLightPicker(lightsArray);\n\t\tlightPick.name = name;\n\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> lightPick, name);\n\n\t\tthis._blocks[blockID].data = lightPick;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + name + \"' | Texture-Name = \" + lightsArrayNames);\n\t}\n\n\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\n\tprivate static materialProperties:Object = {\n\t\t1:AWDParser.INT32,\n\t\t2:AWDParser.BADDR,\n\t\t10:AWDParser.PROPERTY_NUMBER,\n\t\t11:AWDParser.BOOL,\n\t\t12:AWDParser.PROPERTY_NUMBER,\n\t\t13:AWDParser.BOOL};\n\n\t//Block ID = 81\n\tprivate parseMaterial(blockID:number)\n\t{\n\t\t// TODO: not used\n\t\t////blockLength = block.len;\n\t\tvar name:string;\n\t\tvar type:number;\n\t\tvar props:AWDProperties;\n\t\tvar mat:MethodMaterial;\n\t\tvar finalize:boolean;\n\t\tvar num_methods:number;\n\t\tvar methods_parsed:number;\n\t\tvar returnedArray:Array<any>;\n\n\t\tname = this.parseVarStr();\n\t\ttype = this._newBlockBytes.readUnsignedByte();\n\t\tnum_methods = this._newBlockBytes.readUnsignedByte();\n\n\t\t// Read material numerical properties\n\t\tprops = this.parseProperties(AWDParser.materialProperties);\n\n\t\tmethods_parsed = 0;\n\t\twhile (methods_parsed < num_methods) {\n\t\t\tvar method_type:number;\n\n\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\n\t\t\tthis.parseProperties(null);\n\t\t\tthis.parseUserAttributes();\n\t\t\tmethods_parsed += 1;\n\t\t}\n\n\t\tvar debugString:string = \"\";\n\t\tif (type === 1) { // Color material\n\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\tvar color:number = props.get(1, 0xffffff);\n\t\t\tif (this.materialMode < 2) {\n\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\n\t\t\t} else {\n\t\t\t\tmat = new MethodMaterial(color);\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t}\n\t\t} else if (type === 2) {\n\t\t\tvar texture:Single2DTexture = <Single2DTexture> this._blocks[props.get(2, 0)].data;\n\n\t\t\tmat = new MethodMaterial(texture);\n\n\t\t\tif (this.materialMode < 2) {\n\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\n\t\t\t} else {\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\n\t\t\t}\n\t\t}\n\n\t\tmat.extra = this.parseUserAttributes();\n\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\tmat.repeat = props.get(13, false);\n\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\n\n\t\tthis._blocks[blockID].data = mat;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(debugString);\n\t}\n\t\n\tprivate static material_v1Properties:Object = {1:AWDParser.UINT32,\n\t\t2:AWDParser.BADDR,\n\t\t3:AWDParser.BADDR,\n\t\t4:AWDParser.UINT8,\n\t\t5:AWDParser.BOOL,\n\t\t6:AWDParser.BOOL,\n\t\t7:AWDParser.BOOL,\n\t\t8:AWDParser.BOOL,\n\t\t9:AWDParser.UINT8,\n\t\t10:AWDParser.PROPERTY_NUMBER,\n\t\t11:AWDParser.BOOL,\n\t\t12:AWDParser.PROPERTY_NUMBER,\n\t\t13:AWDParser.BOOL,\n\t\t15:AWDParser.PROPERTY_NUMBER,\n\t\t16:AWDParser.UINT32,\n\t\t17:AWDParser.BADDR,\n\t\t18:AWDParser.PROPERTY_NUMBER,\n\t\t19:AWDParser.PROPERTY_NUMBER,\n\t\t20:AWDParser.UINT32,\n\t\t21:AWDParser.BADDR,\n\t\t22:AWDParser.BADDR};\n\n\tprivate static method_v1Properties:Object = {\n\t\t1:AWDParser.BADDR,\n\t\t2:AWDParser.BADDR,\n\t\t3:AWDParser.BADDR,\n\t\t101:AWDParser.PROPERTY_NUMBER,\n\t\t102:AWDParser.PROPERTY_NUMBER,\n\t\t103:AWDParser.PROPERTY_NUMBER,\n\t\t201:AWDParser.UINT32,\n\t\t202:AWDParser.UINT32,\n\t\t301:AWDParser.UINT16,\n\t\t302:AWDParser.UINT16,\n\t\t401:AWDParser.UINT8,\n\t\t402:AWDParser.UINT8,\n\t\t601:AWDParser.COLOR,\n\t\t602:AWDParser.COLOR,\n\t\t701:AWDParser.BOOL,\n\t\t702:AWDParser.BOOL,\n\t\t801:AWDParser.MTX4x4};\n\n\t// Block ID = 81 AWD2.1\n\tprivate parseMaterial_v1(blockID:number)\n\t{\n\t\tvar mat:MethodMaterial;\n\t\tvar diffuseTexture:Single2DTexture;\n\t\tvar normalTexture:TextureBase;\n\t\tvar specTexture:TextureBase;\n\n\t\tvar name:string = this.parseVarStr();\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar num_methods:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.material_v1Properties);\n\t\tvar spezialType:number = props.get(4, 0);\n\t\tvar debugString:string = \"Parsed Material \";\n\n\t\tif (spezialType >= 2) {//this is no supported material\n\t\t\tthis._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (type <= 2) {// Color material\n\t\t\tif (this.materialMode == 1)\n\t\t\t\tspezialType = 0;\n\t\t\telse if (this.materialMode == 2)\n\t\t\t\tspezialType = 1;\n\n\t\t\tif (spezialType < 2) {//this is SinglePass or MultiPass\n\n\t\t\t\tif (type == 1) {// Color material\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\n\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\n\t\t\t\t\t\tmat = new MethodMaterial(color);\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\n\n\t\t\t\t\t} else { //\tSinglePassMaterial\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\t\t\t}\n\n\t\t\t\t} else if (type == 2) {// texture material\n\t\t\t\t\tvar texture:Single2DTexture = <Single2DTexture> this._blocks[props.get(2, 0)].data;\n\n\t\t\t\t\tmat = new MethodMaterial(texture);\n\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\n\t\t\t\t\t} else {//\tSinglePassMaterial\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdiffuseTexture = <Single2DTexture> this._blocks[props.get(17, 0)].data;\n\t\t\t\tnormalTexture = <TextureBase> this._blocks[props.get(3, 0)].data;\n\t\t\t\tspecTexture = <TextureBase> this._blocks[props.get(21, 0)].data;\n\t\t\t\tmat.lightPicker = <LightPickerBase> this._blocks[props.get(22, 0)].data;\n\t\t\t\tmat.smooth = props.get(5, true);\n\t\t\t\tmat.mipmap = props.get(6, true);\n\t\t\t\tmat.bothSides = props.get(7, false);\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\n\t\t\t\tmat.blendMode = this.blendModeDic[props.get(9, 0)];\n\t\t\t\tmat.repeat = props.get(13, false);\n\n\t\t\t\tif (diffuseTexture) {\n\t\t\t\t\tmat.diffuseTexture = diffuseTexture;\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\n\t\t\t\t}\n\n\t\t\t\tif (normalTexture) {\n\t\t\t\t\tmat.normalMap = normalTexture;\n\t\t\t\t\tdebugString += \" | NormalTexture-Name = \" + normalTexture.name;\n\t\t\t\t}\n\n\t\t\t\tif (specTexture) {\n\t\t\t\t\tmat.specularMap = specTexture;\n\t\t\t\t\tdebugString += \" | SpecularTexture-Name = \" + specTexture.name;\n\t\t\t\t}\n\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\t\t\tmat.ambient = props.get(15, 1.0);\n\t\t\t\tmat.diffuseColor = props.get(16, 0xffffff);\n\t\t\t\tmat.specular = props.get(18, 1.0);\n\t\t\t\tmat.gloss = props.get(19, 50);\n\t\t\t\tmat.specularColor = props.get(20, 0xffffff);\n\n\t\t\t\tfor (var methods_parsed:number = 0; methods_parsed < num_methods; methods_parsed++) {\n\t\t\t\t\tvar method_type:number;\n\t\t\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\n\n\t\t\t\t\tprops = this.parseProperties(AWDParser.method_v1Properties);\n\n\t\t\t\t\tswitch (method_type) {\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffektMethod returned\n\t\t\t\t\t\t\tvar effectMethod:EffectMethodBase = <EffectMethodBase> this._blocks[props.get(1, 0)].data;\n\t\t\t\t\t\t\tmat.addEffectMethod(effectMethod);\n\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + effectMethod.name;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\n\t\t\t\t\t\t\tvar shadowMapMethod:ShadowMapMethodBase = <ShadowMapMethodBase> this._blocks[props.get(1, 0)].data;\n\t\t\t\t\t\t\tmat.shadowMethod = shadowMapMethod;\n\t\t\t\t\t\t\tdebugString += \" | ShadowMethod-Name = \" + shadowMapMethod.name;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\n\t\t\t\t\t\t\tvar cubeTexture:SingleCubeTexture = <SingleCubeTexture> this._blocks[props.get(1, 0)].data;\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod();\n\t\t\t\t\t\t\tmat.texture = cubeTexture;\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + cubeTexture.name;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\n\t\t\t\t\t\t\tvar texture:Single2DTexture = <Single2DTexture> this._blocks[props.get(1, 0)].data;\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(texture);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + texture.name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\n\t\t\t\t\t\t\tvar texture:Single2DTexture = <Single2DTexture> this._blocks[props.get(1, 0)].data;\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(texture, this.blendModeDic[props.get(401, 10)], false, mat.diffuseMethod);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + texture.name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\n\t\t\t\t\t\t\tvar texture:Single2DTexture = <Single2DTexture> this._blocks[props.get(1, 0)].data;\n\t\t\t\t\t\t\tmat.normalMap = texture;\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(mat.normalMap, texture);\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + texture.name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tthis.parseUserAttributes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// todo: we should not need this anymore (if using texture-atlas)\n\t\telse if ((type>=3)&&(type<=7)){\n\t\t\t// if this is a basic material, we create it, finalize it, assign it to block-cache and return and return.\n\t\t\tvar color:number = props.get(1, 0xcccccc);\n\t\t\tdebugString+=color;\n\t\t\n\t\t\tvar diffuseTexture:Single2DTexture = <Single2DTexture> this._blocks[props.get(2, 0)].data;\n\t\t\tvar basic_mat:BasicMaterial = new BasicMaterial(diffuseTexture);\n\t\t\tbasic_mat.bothSides = true;\n\t\t\tbasic_mat.preserveAlpha = true;\n\t\t\tbasic_mat.alphaBlending = true;\n\t\t\tbasic_mat.extra = this.parseUserAttributes();\n\t\t\tthis._pFinalizeAsset(<IAsset> basic_mat, name);\n\t\t\tthis._blocks[blockID].data = basic_mat;\n\t\t\tif (this._debug)\n\t\t\t\tconsole.log(debugString);\n\t\t\treturn;\n\t\t\n\t\t}\n\t\tmat.extra = this.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\n\n\t\tthis._blocks[blockID].data = mat;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(debugString);\n\t}\n\n\t//Block ID = 82\n\tprivate parseTexture(blockID:number)\n\t{\n\n\t\tvar asset:TextureBase;\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\n\t\tthis._texture_users[this._cur_block_id] = [];\n\n\t\t// External\n\t\tif (type == 0) {\n\t\t\tvar url:string = this._newBlockBytes.readUTFBytes(this._newBlockBytes.readUnsignedInt());\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\n\n\t\t} else {\n\t\t\tvar data_len:number = this._newBlockBytes.readUnsignedInt();\n\t\t\tvar data:ByteArray = new ByteArray(data_len);\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t//\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\n\t\t\t//\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\n\t\t\t// This gives the browser time to initialise image width / height.\n\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\n\n\t\t}\n\n\t\t// Ignore for now\n\t\tthis.parseProperties(null);\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tthis._pPauseAndRetrieveDependencies();\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Start parsing a \" + [\"external\", \"embed\"][type] + \" Bitmap for Texture\");\n\t}\n\n\t//Block ID = 83\n\tprivate parseCubeTexture(blockID:number)\n\t{\n\t\t//blockLength = block.len;\n\t\tvar data_len:number;\n\t\tvar asset:SingleCubeTexture;\n\t\tvar i:number;\n\n\t\tthis._texture_users[ this._cur_block_id ] = [];\n\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tfor (i = 0; i < 6; i++) {\n\t\t\tthis._texture_users[this._cur_block_id] = [];\n\n\t\t\t// External\n\t\t\tif (type == 0) {\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tvar url:string;\n\t\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true, i);\n\t\t\t} else {\n\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tvar data:ByteArray = new ByteArray(data_len);\n\t\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true, i);\n\t\t\t}\n\t\t}\n\n\t\t// Ignore for now\n\t\tthis.parseProperties(null);\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\n\t\tthis._pPauseAndRetrieveDependencies();\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Start parsing 6 \" + [\"external\", \"embed\"][type] + \" Bitmaps for CubeTexture\");\n\t}\n\n\t//Block ID = 91\n\tprivate parseSharedMethodBlock(blockID:number)\n\t{\n\t\tvar asset:EffectMethodBase;\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\t\tasset = this.parseSharedMethodList(blockID);\n\t\tthis.parseUserAttributes();\n\t\tthis._blocks[blockID].data = asset;\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\n\t}\n\n\t//Block ID = 92\n\tprivate parseShadowMethodBlock(blockID:number)\n\t{\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\t\tvar light:LightBase = <LightBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar asset:ShadowMethodBase = this.parseShadowMethodList(light, blockID);\n\n\t\tif (!asset)\n\t\t\treturn;\n\n\t\tthis.parseUserAttributes(); // Ignore for now\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", light.name);\n\t}\n\n\tprivate static commandProperties:Object = {\n\t\t1:AWDParser.BADDR};\n\n\tprivate static targetProperties:Object = {\n\t\t1:AWDParser.MATRIX_NUMBER,\n\t\t2:AWDParser.MATRIX_NUMBER,\n\t\t3:AWDParser.MATRIX_NUMBER,\n\t\t4:AWDParser.UINT8};\n\t\n\t//Block ID = 253\n\tprivate parseCommand(blockID:number)\n\t{\n\t\tvar hasBlocks:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\n\t\tvar parentObject:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar targetObject:DisplayObjectContainer;\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\n\t\tvar numCommands:number = this._newBlockBytes.readShort();\n\t\tvar typeCommand:number = this._newBlockBytes.readShort();\n\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.commandProperties);\n\n\t\tswitch (typeCommand) {\n\t\t\tcase 1:\n\t\t\t\ttargetObject = this._blocks[props.get(1, 0)].data;\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\n\n\t\t\t\tif (parentObject)\n\t\t\t\t\tparentObject.addChild(targetObject);\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (targetObject) {\n\t\t\tprops = this.parseProperties(AWDParser.targetProperties);\n\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t\ttargetObject.extra = this.parseUserAttributes();\n\t\t}\n\n\t\tthis._blocks[blockID].data = targetObject;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\n\t}\n\t\n\tprivate static metaDataProperties:Object = {\n\t\t1:AWDParser.UINT32,\n\t\t2:AWDParser.AWDSTRING,\n\t\t3:AWDParser.AWDSTRING,\n\t\t4:AWDParser.AWDSTRING,\n\t\t5:AWDParser.AWDSTRING};\n\n\t//blockID 255\n\tprivate parseMetaData(blockID:number)\n\t{\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.metaDataProperties);\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\n\t\t}\n\t}\n\n\t//blockID 254\n\tprivate parseNameSpace(blockID:number)\n\t{\n\t\tvar id:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar nameSpaceString:string = this.parseVarStr();\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\n\t}\n\n\t//--Parser UTILS---------------------------------------------------------------------------\n\n\tprivate shadowMethodListProperties:Object = {\n\t\t1:AWDParser.BADDR,\n\t\t2:AWDParser.BADDR,\n\t\t3:AWDParser.BADDR,\n\t\t101:AWDParser.PROPERTY_NUMBER,\n\t\t102:AWDParser.PROPERTY_NUMBER,\n\t\t103:AWDParser.PROPERTY_NUMBER,\n\t\t201:AWDParser.UINT32,\n\t\t202:AWDParser.UINT32,\n\t\t301:AWDParser.UINT16,\n\t\t302:AWDParser.UINT16,\n\t\t401:AWDParser.UINT8,\n\t\t402:AWDParser.UINT8,\n\t\t601:AWDParser.COLOR,\n\t\t602:AWDParser.COLOR,\n\t\t701:AWDParser.BOOL,\n\t\t702:AWDParser.BOOL,\n\t\t801:AWDParser.MTX4x4}\n\t\n\t// this functions reads and creates a ShadowMethodMethod\n\tprivate parseShadowMethodList(light:LightBase, blockID:number):ShadowMethodBase\n\t{\n\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar shadowMethod:ShadowMethodBase;\n\t\tvar props:AWDProperties = this.parseProperties(this.shadowMethodListProperties);\n\n\t\tvar targetID:number;\n\t\tvar returnedArray:Array<any>\n\t\tswitch (methodType) {\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this CascadeShadowMapMethod - ShadowMethod not created\");\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\n\t\t\t//\t\t\t\t\t}\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 1002: //ShadowNearMethod\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> this._blocks[props.get(1, 0)].data);\n\t\t\t\tbreak;\n\t\t\tcase 1101: //ShadowFilteredMethod\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t\tcase 1102: //ShadowDitheredMethod\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1103: //ShadowSoftMethod\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1104: //ShadowHardMethod\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\treturn shadowMethod;\n\t}\n\n\t//Block ID 101\n\tprivate parseSkeleton(blockID:number /*uint*/)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar skeleton:Skeleton = new Skeleton();\n\t\tthis.parseProperties(null); // Discard properties for now\n\n\t\tfor (var joints_parsed:number = 0; joints_parsed < num_joints; joints_parsed++) {\n\t\t\tvar joint:SkeletonJoint;\n\t\t\tvar ibp:Matrix3D;\n\t\t\t// Ignore joint id\n\t\t\tthis._newBlockBytes.readUnsignedShort();\n\t\t\tjoint = new SkeletonJoint();\n\t\t\tjoint.parentIndex = this._newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\n\t\t\tjoint.name = this.parseVarStr();\n\n\t\t\tibp = this.parseMatrix3D();\n\t\t\tjoint.inverseBindPose = ibp.rawData;\n\t\t\t// Ignore joint props/attributes for now\n\t\t\tthis.parseProperties(null);\n\t\t\tthis.parseUserAttributes();\n\t\t\tskeleton.joints.push(joint);\n\t\t}\n\n\t\t// Discard attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(skeleton, name);\n\n\t\tthis._blocks[blockID].data = skeleton;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + skeleton.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\t//Block ID = 102\n\tprivate parseSkeletonPose(blockID:number /*uint*/)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tthis.parseProperties(null); // Ignore properties for now\n\n\t\tvar pose:SkeletonPose = new SkeletonPose();\n\n\t\tfor (var joints_parsed:number = 0; joints_parsed < num_joints; joints_parsed++) {\n\t\t\tvar joint_pose:JointPose;\n\t\t\tvar has_transform:number /*uint*/;\n\t\t\tjoint_pose = new JointPose();\n\t\t\thas_transform = this._newBlockBytes.readUnsignedByte();\n\t\t\tif (has_transform == 1) {\n\t\t\t\tvar mtx_data:Array<number> = this.parseMatrix43RawData();\n\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\n\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\n\t\t\t}\n\t\t}\n\n\t\t// Skip attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(pose, name);\n\n\t\tthis._blocks[blockID].data = pose;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + pose.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\t//blockID 103\n\tprivate parseSkeletonAnimation(blockID:number /*uint*/)\n\t{\n\t\tvar frame_dur:number;\n\t\tvar pose_id:number;\n\t\tvar name:string = this.parseVarStr();\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tthis.parseProperties(null); // Ignore properties for now\n\n\t\tfor (var frames_parsed:number = 0; frames_parsed < num_frames; frames_parsed++) {\n\t\t\tpose_id = this._newBlockBytes.readUnsignedInt();\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\n\t\t\tclip.addFrame(<SkeletonPose> this._blocks[pose_id].data, frame_dur);\n\t\t}\n\t\tif (clip.frames.length == 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not this SkeletonClipNode, because no Frames where set.\");\n\t\t\treturn;\n\t\t}\n\t\t// Ignore attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(clip, name);\n\t\tthis._blocks[blockID].data = clip;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + clip.name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\t\n\tprivate meshPoseAnimationProperties:Object = {\n\t\t1:AWDParser.BOOL,\n\t\t2:AWDParser.BOOL};\n\n\t//Block ID = 111 /  Block ID = 112\n\tprivate parseMeshPoseAnimation(blockID:number /*uint*/, poseOnly:boolean = false)\n\t{\n\t\tvar subMeshParsed:number /*uint*/;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar str_len:number;\n\t\tvar str_end:number;\n\t\tvar subGeom:TriangleSubGeometry;\n\t\tvar idx:number /*int*/ = 0;\n\t\tvar clip:VertexClipNode = new VertexClipNode();\n\t\tvar indices:Short3Attributes;\n\t\tvar verts:Array<number>;\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\n\t\tvar props:AWDProperties;\n\t\tvar name:string = this.parseVarStr();\n\t\tvar geo_id:number /*int*/ = this._newBlockBytes.readUnsignedInt();\n\t\tvar geometry:Geometry = <Geometry> this._blocks[geo_id].data;\n\n\t\tvar uvs:Array<Float32Array> = this.getUVForVertexAnimation(geo_id);\n\n\t\tvar num_frames:number = (!poseOnly)? this._newBlockBytes.readUnsignedShort() : 1;\n\n\t\tvar num_submeshes:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar num_Streams:number = this._newBlockBytes.readUnsignedShort();\n\t\tfor (var streamsParsed:number = 0; streamsParsed < num_Streams; streamsParsed++)\n\t\t\tstreamtypes.push(this._newBlockBytes.readUnsignedShort());\n\n\t\tprops = this.parseProperties(this.meshPoseAnimationProperties);\n\n\t\tclip.looping = props.get(1, true);\n\t\tclip.stitchFinalFrame = props.get(2, false);\n\n\t\tvar frame_dur:number;\n\t\tfor (var frames_parsed:number = 0; frames_parsed < num_frames; frames_parsed++) {\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\n\t\t\tgeometry = new Geometry();\n\t\t\tsubMeshParsed = 0;\n\t\t\twhile (subMeshParsed < num_submeshes) {\n\t\t\t\tstreamsParsed = 0;\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\n\t\t\t\twhile (streamsParsed < num_Streams) {\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\n\t\t\t\t\t\tindices = geometry.subGeometries[subMeshParsed].indices;\n\t\t\t\t\t\tverts = new Array<number>();\n\t\t\t\t\t\tidx = 0;\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsubGeom = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\t\t\t\tsubGeom.setIndices(indices);\n\t\t\t\t\t\tsubGeom.setPositions(verts);\n\t\t\t\t\t\tsubGeom.setUVs(uvs[subMeshParsed]);\n\t\t\t\t\t\tsubGeom.setNormals(null);\n\t\t\t\t\t\tsubGeom.setTangents(null);\n\t\t\t\t\t\tsubGeom.autoDeriveNormals = false;\n\t\t\t\t\t\tsubGeom.autoDeriveTangents = false;\n\t\t\t\t\t\tsubMeshParsed++;\n\t\t\t\t\t\tgeometry.addSubGeometry(subGeom)\n\t\t\t\t\t} else\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t\tstreamsParsed++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tclip.addFrame(geometry, frame_dur);\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(clip, name);\n\n\t\tthis._blocks[blockID].data = clip;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + geometry.name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\n\tprivate static vertexAnimationSetProperties:Object = {\n\t\t1:AWDParser.UINT16};\n\t\n\t//BlockID 113\n\tprivate parseVertexAnimationSet(blockID:number /*uint*/)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.vertexAnimationSetProperties);\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\n\t\tvar clipNode:AnimationClipNodeBase;\n\t\tfor (var frames_parsed:number = 0; frames_parsed < num_frames; frames_parsed++) {\n\t\t\tclipNode = <AnimationClipNodeBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\t\tif (clipNode instanceof VertexClipNode)\n\t\t\t\tvertexFrames.push(<VertexClipNode> clipNode);\n\t\t\telse if (clipNode instanceof SkeletonClipNode)\n\t\t\t\tskeletonFrames.push(<SkeletonClipNode> clipNode);\n\t\t}\n\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\n\t\t\tthis._blocks[blockID].addError(\"Could not create this AnimationSet, because it contains no animations\");\n\t\t\treturn;\n\t\t}\n\n\t\tthis.parseUserAttributes();\n\n\t\tif (vertexFrames.length > 0) {\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\n\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\n\n\t\t\tthis._pFinalizeAsset(newVertexAnimationSet, name);\n\n\t\t\tthis._blocks[blockID].data = newVertexAnimationSet;\n\n\t\t\tif (this._debug)\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames);\n\n\t\t} else if (skeletonFrames.length > 0) {\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\n\t\t\tthis._pFinalizeAsset(newSkeletonAnimationSet, name);\n\n\t\t\tthis._blocks[blockID].data = newSkeletonAnimationSet;\n\n\t\t\tif (this._debug)\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames);\n\t\t}\n\t}\n\n\tprivate static animatorSetProperties:Object = {1:AWDParser.BADDR};\n\t\n\t//BlockID 122\n\tprivate parseAnimatorSet(blockID:number /*uint*/)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar type:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.animatorSetProperties);\n\t\tvar targetAnimationSet:AnimationSetBase = <AnimationSetBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\n\t\tvar targetMeshes:Array<Mesh> = new Array<Mesh>();\n\t\tvar targetMeshLength:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tfor (var i:number /*int*/ = 0; i < targetMeshLength; i++)\n\t\t\ttargetMeshes.push(<Mesh> this._blocks[this._newBlockBytes.readUnsignedInt()].data);\n\n\t\tvar activeState:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar autoplay:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\n\t\tthis.parseUserAttributes();\n\t\tthis.parseUserAttributes();\n\n\t\tvar thisAnimator:AnimatorBase;\n\t\tif (type == 1)\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, <Skeleton> this._blocks[props.get(1, 0)].data);\n\t\telse if (type == 2)\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\n\n\t\tthis._pFinalizeAsset(thisAnimator, name);\n\t\tthis._blocks[blockID].data = thisAnimator;\n\n\t\tfor (i = 0; i < targetMeshes.length; i++) {\n\t\t\tif (type == 1)\n\t\t\t\ttargetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\n\t\t\telse if (type == 2)\n\t\t\t\ttargetMeshes[i].animator = (<VertexAnimator> thisAnimator);\n\t\t}\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + name);\n\t}\n\n\tprivate sharedMethodListProperties:Object = {\n\t\t1:AWDParser.BADDR,\n\t\t2:AWDParser.BADDR,\n\t\t3:AWDParser.BADDR,\n\t\t101:AWDParser.PROPERTY_NUMBER,\n\t\t102:AWDParser.PROPERTY_NUMBER,\n\t\t103:AWDParser.PROPERTY_NUMBER,\n\t\t104:AWDParser.PROPERTY_NUMBER,\n\t\t105:AWDParser.PROPERTY_NUMBER,\n\t\t106:AWDParser.PROPERTY_NUMBER,\n\t\t107:AWDParser.PROPERTY_NUMBER,\n\t\t201:AWDParser.UINT32,\n\t\t202:AWDParser.UINT32,\n\t\t301:AWDParser.UINT16,\n\t\t302:AWDParser.UINT16,\n\t\t401:AWDParser.UINT8,\n\t\t402:AWDParser.UINT8,\n\t\t601:AWDParser.COLOR,\n\t\t602:AWDParser.COLOR,\n\t\t701:AWDParser.BOOL,\n\t\t702:AWDParser.BOOL};\n\n\t// this functions reads and creates a EffectMethod\n\tprivate parseSharedMethodList(blockID:number):EffectMethodBase\n\t{\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar effectMethodReturn:EffectMethodBase;\n\n\t\tvar props:AWDProperties = this.parseProperties(this.sharedMethodListProperties);\n\n\t\tswitch (methodType) {\n\t\t\t// Effect Methods\n\t\t\tcase 401: //ColorMatrix\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\n\t\t\t\tbreak;\n\t\t\tcase 402: //ColorTransform\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\n\t\t\t\tbreak;\n\t\t\tcase 403: //EnvMap\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(<SingleCubeTexture> this._blocks[props.get(1, 0)].data, <number> props.get(101, 1));\n\t\t\t\tvar targetID:number = props.get(2, 0);\n\t\t\t\tif (targetID > 0) {\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <TextureBase> this._blocks[targetID].data;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 404: //LightMapMethod\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(this._blocks[props.get(1, 0)].data, this.blendModeDic[props.get(401, 10)]); //usesecondaryUV not set\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureProjector.assetType]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this ProjectiveTextureMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 406: //RimLightMethod\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\n\t\t\t\tbreak;\n\t\t\tcase 407: //AlphaMaskMethod\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(this._blocks[props.get(1, 0)].data, props.get(701, false));\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this RefractionEnvMapMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 410: //FresnelEnvMapMethod\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(this._blocks[props.get(1, 0)].data, props.get(101, 1));\n\t\t\t\tbreak;\n\t\t\tcase 411: //FogMethod\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\treturn effectMethodReturn;\n\n\t}\n\n\tprivate parseUserAttributes():Object\n\t{\n\t\tvar list_len:number = this._newBlockBytes.readUnsignedInt();\n\n\t\tif (list_len > 0) {\n\t\t\tvar list_end:number = this._newBlockBytes.position + list_len;\n\t\t\tvar attributes:Object = {};\n\n\t\t\tfor (var attibuteCnt:number = 0; this._newBlockBytes.position < list_end; attibuteCnt++) {\n\t\t\t\tvar ns_id:number;\n\t\t\t\tvar attr_key:string;\n\t\t\t\tvar attr_type:number;\n\t\t\t\tvar attr_len:number;\n\t\t\t\tvar attr_val:any;\n\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_key = this.parseVarStr();\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn attributes;\n\t\t\t\t}\n\n\t\t\t\tswitch (attr_type) {\n\t\t\t\t\tcase AWDParser.AWDSTRING:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.BOOL:\n\t\t\t\t\tcase AWDParser.UINT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.UINT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.UINT32:\n\t\t\t\t\tcase AWDParser.BADDR:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.FLOAT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.FLOAT64:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tattributes[attr_key] = attr_val;\n\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\n\t\t\t}\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\tprivate parseProperties(expected:Object):AWDProperties\n\t{\n\t\tvar list_len:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar props:AWDProperties = new AWDProperties();\n\t\tvar list_end:number = this._newBlockBytes.position + list_len;\n\n\t\tif (expected) {\n\t\t\tvar len:number;\n\t\t\tvar key:number;\n\t\t\tvar type:number;\n\n\t\t\tfor (var propertyCnt:number = 0; this._newBlockBytes.position < list_end; propertyCnt++) {\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn props;\n\t\t\t\t}\n\n\t\t\t\tif (expected[key]) {\n\t\t\t\t\ttype = expected[key];\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\n\t\t\t\t} else {\n\t\t\t\t\tthis._newBlockBytes.position += len;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis._newBlockBytes.position = list_end;\n\t\t}\n\n\t\treturn props;\n\t}\n\n\tprivate parseAttrValue(type:number, len:number):any\n\t{\n\t\tvar elem_len:number;\n\t\tvar read_func:Function;\n\t\tvar accuracy:boolean;\n\n\t\tswitch (type) {\n\t\t\tcase AWDParser.BOOL:\n\t\t\tcase AWDParser.INT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.INT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.INT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT32:\n\t\t\tcase AWDParser.COLOR:\n\t\t\tcase AWDParser.BADDR:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.FLOAT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.FLOAT64:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.AWDSTRING:\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\n\n\t\t\tcase AWDParser.VECTOR2x1:\n\t\t\tcase AWDParser.VECTOR3x1:\n\t\t\tcase AWDParser.VECTOR4x1:\n\t\t\tcase AWDParser.MTX3x2:\n\t\t\tcase AWDParser.MTX3x3:\n\t\t\tcase AWDParser.MTX4x3:\n\t\t\tcase AWDParser.MTX4x4:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\t\t\tcase AWDParser.GEO_NUMBER:\n\t\t\t\taccuracy = this._accuracyGeo;\n\t\t\tcase AWDParser.MATRIX_NUMBER:\n\t\t\t\taccuracy = this._accuracyMatrix;\n\t\t\tcase AWDParser.PROPERTY_NUMBER:\n\t\t\t\taccuracy = this._accuracyProps;\n\t\t\tdefault:\n\t\t\t\tif (accuracy) {\n\t\t\t\t\telem_len = 8;\n\t\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\t} else {\n\t\t\t\t\telem_len = 4;\n\t\t\t\t\tread_func = this._newBlockBytes.readFloat;\n\t\t\t\t}\n\t\t}\n\n\t\tif (elem_len < len) {\n\t\t\tvar list:Array<any> = [];\n\t\t\tvar num_elems:number = len/elem_len;\n\n\t\t\tfor (var num_read:number = 0; num_read < num_elems; num_read++)\n\t\t\t\tlist[num_read] = read_func.call(this._newBlockBytes);\n\n\t\t\treturn list;\n\t\t} else {\n\t\t\treturn read_func.call(this._newBlockBytes);\n\t\t}\n\t}\n\n\tprivate parseHeader()\n\t{\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\n\n\t\tthis._version[0] = this._byteData.readUnsignedByte();\n\t\tthis._version[1] = this._byteData.readUnsignedByte();\n\n\t\tvar flags:number = this._byteData.readUnsignedShort(); // Parse bit flags\n\n\t\tthis._streaming = BitFlags.test(flags, BitFlags.FLAG1);\n\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG2);\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG3);\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG4);\n\t\t}\n\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._version[0] + \" - \" + this._version[1]);\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\n\t\t}\n\n\t\t// Check file integrity\n\t\tvar body_len:number = this._byteData.readUnsignedInt();\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable())\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\n\n\t}\n\t// Helper - functions\n\tprivate getUVForVertexAnimation(meshID:number /*uint*/):Array<Float32Array>\n\t{\n\t\tif (this._blocks[meshID].data instanceof Mesh)\n\t\t\tmeshID = this._blocks[meshID].geoID;\n\n\t\tif (this._blocks[meshID].uvsForVertexAnimation)\n\t\t\treturn this._blocks[meshID].uvsForVertexAnimation;\n\n\t\tvar geometry:Geometry = (<Geometry> this._blocks[meshID].data);\n\t\tvar sub_geom:TriangleSubGeometry;\n\t\tvar uvsForVertexAnimation:Array<Float32Array> = this._blocks[meshID].uvsForVertexAnimation = new Array<Float32Array>();\n\n\t\tvar len:number = geometry.subGeometries.length;\n\t\tfor (var geoCnt:number= 0; geoCnt < len; geoCnt++) {\n\t\t\tsub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\n\t\t\tuvsForVertexAnimation[geoCnt] = sub_geom.uvs.get(sub_geom.numVertices);\n\t\t}\n\n\t\treturn this._blocks[meshID].uvsForVertexAnimation;\n\t}\n\n\tprivate parseVarStr():string\n\t{\n\t\treturn this._newBlockBytes.readUTFBytes(this._newBlockBytes.readUnsignedShort());\n\t}\n\n\tprivate readNumber(precision:boolean = false):number\n\t{\n\t\tif (precision)\n\t\t\treturn this._newBlockBytes.readDouble();\n\n\t\treturn this._newBlockBytes.readFloat();\n\t}\n\n\tprivate parseMatrix3D():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\n\t}\n\n\tprivate parseMatrix32RawData():Array<number>\n\t{\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\n\n\t\treturn mtx_raw;\n\t}\n\n\tprivate parseMatrix43RawData():Array<number>\n\t{\n\t\tvar mtx_raw:Array<number> = new Array<number>(16);\n\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[3] = 0.0;\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[7] = 0.0;\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[11] = 0.0;\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[15] = 1.0;\n\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\n\n\t\tif (isNaN(mtx_raw[0])) {\n\t\t\tmtx_raw[0] = 1;\n\t\t\tmtx_raw[1] = 0;\n\t\t\tmtx_raw[2] = 0;\n\t\t\tmtx_raw[4] = 0;\n\t\t\tmtx_raw[5] = 1;\n\t\t\tmtx_raw[6] = 0;\n\t\t\tmtx_raw[8] = 0;\n\t\t\tmtx_raw[9] = 0;\n\t\t\tmtx_raw[10] = 1;\n\t\t\tmtx_raw[12] = 0;\n\t\t\tmtx_raw[13] = 0;\n\t\t\tmtx_raw[14] = 0;\n\t\t}\n\n\t\treturn mtx_raw;\n\t}\n}\n\nexport = AWDParser;\n\n\nclass AWDProperties\n{\n\tpublic set(key:number, value:any)\n\t{\n\t\tthis[key] = value;\n\t}\n\n\tpublic get(key:number, fallback:any):any\n\t{\n\t\treturn (this[key] || fallback);\n\t}\n}\n\n/**\n *\n */\nclass BitFlags\n{\n\tpublic static FLAG1:number = 1;\n\tpublic static FLAG2:number = 2;\n\tpublic static FLAG3:number = 4;\n\tpublic static FLAG4:number = 8;\n\tpublic static FLAG5:number = 16;\n\tpublic static FLAG6:number = 32;\n\tpublic static FLAG7:number = 64;\n\tpublic static FLAG8:number = 128;\n\tpublic static FLAG9:number = 256;\n\tpublic static FLAG10:number = 512;\n\tpublic static FLAG11:number = 1024;\n\tpublic static FLAG12:number = 2048;\n\tpublic static FLAG13:number = 4096;\n\tpublic static FLAG14:number = 8192;\n\tpublic static FLAG15:number = 16384;\n\tpublic static FLAG16:number = 32768;\n\n\tpublic static test(flags:number, testFlag:number):boolean\n\t{\n\t\treturn (flags & testFlag) == testFlag;\n\t}\n}\n",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\n\n/**\n * MD2Parser provides a parser for the MD2 data type.\n */\nclass MD2Parser extends ParserBase\n{\n\tpublic static FPS:number /*int*/ = 6;\n\n\tprivate _clipNodes:Object = new Object();\n\tprivate _byteData:ByteArray;\n\tprivate _startedParsing:boolean;\n\tprivate _parsedHeader:boolean;\n\tprivate _parsedUV:boolean;\n\tprivate _parsedFaces:boolean;\n\tprivate _parsedFrames:boolean;\n\n\tprivate _ident:number /*uint*/;\n\tprivate _version:number /*uint*/;\n\tprivate _skinWidth:number /*uint*/;\n\tprivate _skinHeight:number /*uint*/;\n\t//private _frameSize : number /*uint*/;\n\tprivate _numSkins:number /*uint*/;\n\tprivate _numVertices:number /*uint*/;\n\tprivate _numST:number /*uint*/;\n\tprivate _numTris:number /*uint*/;\n\t//private _numGlCmds : number /*uint*/;\n\tprivate _numFrames:number /*uint*/;\n\tprivate _offsetSkins:number /*uint*/;\n\tprivate _offsetST:number /*uint*/;\n\tprivate _offsetTris:number /*uint*/;\n\tprivate _offsetFrames:number /*uint*/;\n\t//private _offsetGlCmds : number /*uint*/;\n\tprivate _offsetEnd:number /*uint*/;\n\n\tprivate _uvIndices:Array<number>;\n\tprivate _indices:Array<number> /*uint*/;\n\tprivate _vertIndices:Array<number>;\n\n\t// the current subgeom being built\n\tprivate _animationSet:VertexAnimationSet = new VertexAnimationSet();\n\tprivate _firstSubGeom:TriangleSubGeometry;\n\tprivate _uvs:Array<number>;\n\tprivate _finalUV:Array<number>;\n\n\tprivate _materialNames:Array<string>;\n\tprivate _textureType:string;\n\tprivate _ignoreTexturePath:boolean;\n\tprivate _mesh:Mesh;\n\tprivate _geometry:Geometry;\n\n\tprivate materialFinal:boolean = false;\n\tprivate geoCreated:boolean = false;\n\n\t/**\n\t * Creates a new MD2Parser object.\n\t * @param textureType The extension of the texture (e.g. jpg/png/...)\n\t * @param ignoreTexturePath If true, the path of the texture is ignored\n\t */\n\tconstructor(textureType:string = \"jpg\", ignoreTexturePath:boolean = true)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\t\tthis._textureType = textureType;\n\t\tthis._ignoreTexturePath = ignoreTexturePath;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md2\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn (ParserUtils.toString(data, 4) == 'IDP2');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif (resourceDependency.assets.length != 1)\n\t\t\treturn;\n\n\t\tvar asset:Single2DTexture = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\n\n\t\tif (asset) {\n\t\t\tvar material:MethodMaterial = new MethodMaterial(asset);\n\n\t\t\tif (this.materialMode >= 2)\n\t\t\t\tmaterial.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\t\tmaterial.name = this._mesh.material.name;\n\t\t\tthis._mesh.material = material;\n\t\t\tthis._pFinalizeAsset(material);\n\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\n\t\t\tthis._pFinalizeAsset(this._mesh);\n\t\t}\n\t\tthis.materialFinal = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\t// apply system default\n\t\tif (this.materialMode < 2) {\n\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\n\t\t} else {\n\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\n\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\n\t\t}\n\n\t\t//add to the content property\n\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\tthis._pFinalizeAsset(this._mesh.geometry);\n\t\tthis._pFinalizeAsset(this._mesh);\n\t\tthis.materialFinal = true;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (!this._startedParsing) {\n\t\t\tthis._byteData = this._pGetByteData();\n\t\t\tthis._startedParsing = true;\n\n\t\t\t// Reset bytearray read position (which may have been\n\t\t\t// moved forward by the supportsData() function.)\n\t\t\tthis._byteData.position = 0;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\tif (!this._parsedHeader) {\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\n\n\t\t\t\t// TODO: Create a mesh only when encountered (if it makes sense\n\t\t\t\t// for this file format) and return it using this._pFinalizeAsset()\n\t\t\t\tthis._geometry = new Geometry();\n\t\t\t\tthis._mesh = new Mesh(this._geometry, null);\n\t\t\t\tif (this.materialMode < 2) {\n\t\t\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\n\t\t\t\t} else {\n\t\t\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\n\t\t\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t}\n\n\t\t\t\t//_geometry.animation = new VertexAnimation(2, VertexAnimationMode.ABSOLUTE);\n\t\t\t\t//_animator = new VertexAnimator(VertexAnimationState(_mesh.animationState));\n\n\t\t\t\t// Parse header and decompress body\n\t\t\t\tthis.parseHeader();\n\t\t\t\tthis.parseMaterialNames();\n\t\t\t} else if (!this._parsedUV) {\n\t\t\t\tthis.parseUV();\n\t\t\t} else if (!this._parsedFaces) {\n\t\t\t\tthis.parseFaces();\n\t\t\t} else if (!this._parsedFrames) {\n\t\t\t\tthis.parseFrames();\n\t\t\t} else if ((this.geoCreated) && (this.materialFinal)) {\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t} else if (!this.geoCreated) {\n\t\t\t\tthis.geoCreated = true;\n\t\t\t\t//create default subgeometry\n\t\t\t\tthis._geometry.addSubGeometry(this._firstSubGeom.clone());\n\t\t\t\t// Force name to be chosen by this._pFinalizeAsset()\n\t\t\t\tthis._mesh.name = \"\";\n\t\t\t\tif (this.materialFinal) {\n\t\t\t\t\t//add to the content property\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh);\n\t\t\t\t}\n\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t}\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\t/**\n\t * Reads in all that MD2 Header data that is declared as private variables.\n\t * I know its a lot, and it looks ugly, but only way to do it in Flash\n\t */\n\tprivate parseHeader()\n\t{\n\t\tthis._ident = this._byteData.readInt();\n\t\tthis._version = this._byteData.readInt();\n\t\tthis._skinWidth = this._byteData.readInt();\n\t\tthis._skinHeight = this._byteData.readInt();\n\t\t//skip this._frameSize\n\t\tthis._byteData.readInt();\n\t\tthis._numSkins = this._byteData.readInt();\n\t\tthis._numVertices = this._byteData.readInt();\n\t\tthis._numST = this._byteData.readInt();\n\t\tthis._numTris = this._byteData.readInt();\n\t\t//skip this._numGlCmds\n\t\tthis._byteData.readInt();\n\t\tthis._numFrames = this._byteData.readInt();\n\t\tthis._offsetSkins = this._byteData.readInt();\n\t\tthis._offsetST = this._byteData.readInt();\n\t\tthis._offsetTris = this._byteData.readInt();\n\t\tthis._offsetFrames = this._byteData.readInt();\n\t\t//skip this._offsetGlCmds\n\t\tthis._byteData.readInt();\n\t\tthis._offsetEnd = this._byteData.readInt();\n\n\t\tthis._parsedHeader = true;\n\t}\n\n\t/**\n\t * Parses the file names for the materials.\n\t */\n\tprivate parseMaterialNames()\n\t{\n\t\tvar url:string;\n\t\tvar name:string;\n\t\tvar extIndex:number /*int*/;\n\t\tvar slashIndex:number /*int*/;\n\t\tthis._materialNames = new Array<string>();\n\t\tthis._byteData.position = this._offsetSkins;\n\n\t\tvar regExp:RegExp = new RegExp(\"[^a-zA-Z0-9\\\\_\\/.]\", \"g\");\n\t\tfor (var i:number /*uint*/ = 0; i < this._numSkins; ++i) {\n\t\t\tname = this._byteData.readUTFBytes(64);\n\t\t\tname = name.replace(regExp, \"\");\n\t\t\textIndex = name.lastIndexOf(\".\");\n\t\t\tif (this._ignoreTexturePath)\n\t\t\t\tslashIndex = name.lastIndexOf(\"/\");\n\t\t\tif (name.toLowerCase().indexOf(\".jpg\") == -1 && name.toLowerCase().indexOf(\".png\") == -1) {\n\t\t\t\tname = name.substring(slashIndex + 1, extIndex);\n\t\t\t\turl = name + \".\" + this._textureType;\n\t\t\t} else {\n\t\t\t\turl = name;\n\t\t\t}\n\n\t\t\tthis._materialNames[i] = name;\n\n\t\t\t// only support 1 skin TODO: really?\n\t\t\tif (this.dependencies.length == 0)\n\t\t\t\tthis._pAddDependency(name, new URLRequest(url));\n\t\t}\n\n\t\tif (this._materialNames.length > 0)\n\t\t\tthis._mesh.material.name = this._materialNames[0]; else\n\t\t\tthis.materialFinal = true;\n\t}\n\n\t/**\n\t * Parses the uv data for the mesh.\n\t */\n\tprivate parseUV()\n\t{\n\t\tvar j:number /*uint*/ = 0;\n\n\t\tthis._uvs = new Array<number>(this._numST*2);\n\t\tthis._byteData.position = this._offsetST;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numST; i++) {\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinWidth;\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinHeight;\n\t\t}\n\n\t\tthis._parsedUV = true;\n\t}\n\n\t/**\n\t * Parses unique indices for the faces.\n\t */\n\tprivate parseFaces()\n\t{\n\t\tvar a:number /*uint*/, b:number /*uint*/, c:number /*uint*/, ta:number /*uint*/, tb:number /*uint*/, tc:number /*uint*/;\n\t\tvar i:number /*uint*/;\n\n\t\tthis._vertIndices = new Array<number>();\n\t\tthis._uvIndices = new Array<number>();\n\t\tthis._indices = new Array<number>() /*uint*/;\n\n\t\tthis._byteData.position = this._offsetTris;\n\n\t\tfor (i = 0; i < this._numTris; i++) {\n\t\t\t//collect vertex indices\n\t\t\ta = this._byteData.readUnsignedShort();\n\t\t\tb = this._byteData.readUnsignedShort();\n\t\t\tc = this._byteData.readUnsignedShort();\n\n\t\t\t//collect uv indices\n\t\t\tta = this._byteData.readUnsignedShort();\n\t\t\ttb = this._byteData.readUnsignedShort();\n\t\t\ttc = this._byteData.readUnsignedShort();\n\n\t\t\tthis.addIndex(a, ta);\n\t\t\tthis.addIndex(b, tb);\n\t\t\tthis.addIndex(c, tc);\n\t\t}\n\n\t\tvar len:number /*uint*/ = this._uvIndices.length;\n\t\tthis._finalUV = new Array<number>(len*2);\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._finalUV[i << 1] = this._uvs[this._uvIndices[i] << 1];\n\t\t\tthis._finalUV[(i << 1) + 1] = this._uvs[(this._uvIndices[i] << 1) + 1];\n\t\t}\n\n\t\tthis._parsedFaces = true;\n\t}\n\n\t/**\n\t * Adds a face index to the list if it doesn't exist yet, based on vertexIndex and uvIndex, and adds the\n\t * corresponding vertex and uv data in the correct location.\n\t * @param vertexIndex The original index in the vertex list.\n\t * @param uvIndex The original index in the uv list.\n\t */\n\tprivate addIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/)\n\t{\n\t\tvar index:number /*int*/ = this.findIndex(vertexIndex, uvIndex);\n\n\t\tif (index == -1) {\n\t\t\tthis._indices.push(this._vertIndices.length);\n\t\t\tthis._vertIndices.push(vertexIndex);\n\t\t\tthis._uvIndices.push(uvIndex);\n\t\t} else\n\t\t\tthis._indices.push(index);\n\t}\n\n\t/**\n\t * Finds the final index corresponding to the original MD2's vertex and uv indices. Returns -1 if it wasn't added yet.\n\t * @param vertexIndex The original index in the vertex list.\n\t * @param uvIndex The original index in the uv list.\n\t * @return The index of the final mesh corresponding to the original vertex and uv index. -1 if it doesn't exist yet.\n\t */\n\tprivate findIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/):number /*int*/\n\t{\n\t\tvar len:number /*uint*/ = this._vertIndices.length;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tif (this._vertIndices[i] == vertexIndex && this._uvIndices[i] == uvIndex)\n\t\t\t\treturn i;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Parses all the frame geometries.\n\t */\n\tprivate parseFrames()\n\t{\n\t\tvar sx:number, sy:number, sz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar geometry:Geometry;\n\t\tvar subGeom:TriangleSubGeometry;\n\t\tvar vertLen:number /*uint*/ = this._vertIndices.length;\n\t\tvar fvertices:Array<number>;\n\t\tvar tvertices:Array<number>;\n\t\tvar i:number /*uint*/, j:number /*int*/, k:number /*uint*/;\n\t\t//var ch : number /*uint*/;\n\t\tvar name:string = \"\";\n\t\tvar prevClip:VertexClipNode = null;\n\n\t\tthis._byteData.position = this._offsetFrames;\n\n\t\tfor (i = 0; i < this._numFrames; i++) {\n\n\t\t\ttvertices = new Array<number>();\n\t\t\tfvertices = new Array<number>(vertLen*3);\n\n\t\t\tsx = this._byteData.readFloat();\n\t\t\tsy = this._byteData.readFloat();\n\t\t\tsz = this._byteData.readFloat();\n\n\t\t\ttx = this._byteData.readFloat();\n\t\t\tty = this._byteData.readFloat();\n\t\t\ttz = this._byteData.readFloat();\n\n\t\t\tname = this.readFrameName();\n\n\t\t\t// Note, the extra data.position++ in the for loop is there\n\t\t\t// to skip over a byte that holds the \"vertex normal index\"\n\t\t\tfor (j = 0; j < this._numVertices; j++, this._byteData.position++)\n\t\t\t\ttvertices.push(sx*this._byteData.readUnsignedByte() + tx, sy*this._byteData.readUnsignedByte() + ty, sz*this._byteData.readUnsignedByte() + tz);\n\n\t\t\tk = 0;\n\t\t\tfor (j = 0; j < vertLen; j++) {\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3];\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 2];\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 1];\n\t\t\t}\n\n\t\t\tsubGeom = new TriangleSubGeometry(new AttributesBuffer());\n\n\t\t\tif (this._firstSubGeom == null)\n\t\t\t\tthis._firstSubGeom = subGeom;\n\n\t\t\tgeometry = new Geometry();\n\t\t\tgeometry.addSubGeometry(subGeom);\n\n\t\t\tsubGeom.setIndices(this._indices);\n\t\t\tsubGeom.setPositions(fvertices);\n\t\t\tsubGeom.setUVs(this._finalUV);\n\t\t\t// cause explicit updates\n\t\t\tsubGeom.setNormals(null);\n\t\t\tsubGeom.setTangents(null);\n\t\t\t// turn auto updates off because they may be animated and set explicitly\n\t\t\tsubGeom.autoDeriveNormals = false;\n\t\t\tsubGeom.autoDeriveTangents = false;\n\n\t\t\tvar clip:VertexClipNode = this._clipNodes[name];\n\n\t\t\tif (!clip) {\n\t\t\t\t// If another sequence was parsed before this one, starting\n\t\t\t\t// a new state means the previous one is complete and can\n\t\t\t\t// hence be finalized.\n\t\t\t\tif (prevClip) {\n\t\t\t\t\tthis._pFinalizeAsset(prevClip);\n\t\t\t\t\tthis._animationSet.addAnimation(prevClip);\n\t\t\t\t}\n\n\t\t\t\tclip = new VertexClipNode();\n\t\t\t\tclip.name = name;\n\t\t\t\tclip.stitchFinalFrame = true;\n\n\t\t\t\tthis._clipNodes[name] = clip;\n\n\t\t\t\tprevClip = clip;\n\t\t\t}\n\t\t\tclip.addFrame(geometry, 1000/MD2Parser.FPS);\n\t\t}\n\n\t\t// Finalize the last state\n\t\tif (prevClip) {\n\t\t\tthis._pFinalizeAsset(prevClip);\n\t\t\tthis._animationSet.addAnimation(prevClip);\n\t\t}\n\n\t\t// Force this._pFinalizeAsset() to decide name\n\t\tthis._pFinalizeAsset(this._animationSet);\n\n\t\tthis._parsedFrames = true;\n\t}\n\n\tprivate readFrameName():string\n\t{\n\t\tvar name:string = \"\";\n\t\tvar k:number /*uint*/ = 0;\n\t\tfor (var j:number /*uint*/ = 0; j < 16; j++) {\n\t\t\tvar ch:number /*uint*/ = this._byteData.readUnsignedByte();\n\n\t\t\tif (Math.floor(ch) > 0x39 && Math.floor(ch) <= 0x7A && k == 0)\n\t\t\t\tname += String.fromCharCode(ch);\n\n\t\t\tif (Math.floor(ch) >= 0x30 && Math.floor(ch) <= 0x39)\n\t\t\t\tk++;\n\t\t}\n\t\treturn name;\n\t}\n}\n\nexport = MD2Parser;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\n\n/**\n * MD5AnimParser provides a parser for the md5anim data type, providing an animation sequence for the md5 format.\n *\n * todo: optimize\n */\nclass MD5AnimParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\n\tpublic static NUM_FRAMES_TOKEN:string = \"numFrames\";\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\n\tpublic static FRAME_RATE_TOKEN:string = \"frameRate\";\n\tpublic static NUM_ANIMATED_COMPONENTS_TOKEN:string = \"numAnimatedComponents\";\n\n\tpublic static HIERARCHY_TOKEN:string = \"hierarchy\";\n\tpublic static BOUNDS_TOKEN:string = \"bounds\";\n\tpublic static BASE_FRAME_TOKEN:string = \"baseframe\";\n\tpublic static FRAME_TOKEN:string = \"frame\";\n\n\tpublic static COMMENT_TOKEN:string = \"//\";\n\n\tprivate _parseIndex:number /*int*/ = 0;\n\tprivate _reachedEOF:boolean;\n\tprivate _line:number /*int*/ = 0;\n\tprivate _charLineIndex:number /*int*/ = 0;\n\tprivate _version:number /*int*/;\n\tprivate _frameRate:number /*int*/;\n\tprivate _numFrames:number /*int*/;\n\tprivate _numJoints:number /*int*/;\n\tprivate _numAnimatedComponents:number /*int*/;\n\n\tprivate _hierarchy:Array<HierarchyData>;\n\tprivate _bounds:Array<BoundsData>;\n\tprivate _frameData:Array<FrameData>;\n\tprivate _baseFrameData:Array<BaseFrameData>;\n\n\tprivate _rotationQuat:Quaternion;\n\tprivate _clip:SkeletonClipNode;\n\n\t/**\n\t * Creates a new MD5AnimParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._rotationQuat = new Quaternion();\n\t\tvar t1:Quaternion = new Quaternion();\n\t\tvar t2:Quaternion = new Quaternion();\n\n\t\tt1.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\n\t\tt2.fromAxisAngle(Vector3D.Y_AXIS, -Math.PI*.5);\n\n\t\tthis._rotationQuat.multiply(t2, t1);\n\n\t\tif (additionalRotationAxis) {\n\t\t\tthis._rotationQuat.multiply(t2, t1);\n\t\t\tt1.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\n\t\t\tthis._rotationQuat.multiply(t1, this._rotationQuat);\n\t\t}\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md5anim\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar token:string;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\ttoken = this.getNextToken();\n\t\t\tswitch (token) {\n\t\t\t\tcase MD5AnimParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"\":\n\t\t\t\t\t// can occur at the end of a file\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.VERSION_TOKEN:\n\t\t\t\t\tthis._version = this.getNextInt();\n\t\t\t\t\tif (this._version != 10)\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.COMMAND_LINE_TOKEN:\n\t\t\t\t\tthis.parseCMD();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_FRAMES_TOKEN:\n\t\t\t\t\tthis._numFrames = this.getNextInt();\n\t\t\t\t\tthis._bounds = new Array<BoundsData>();\n\t\t\t\t\tthis._frameData = new Array<FrameData>();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_JOINTS_TOKEN:\n\t\t\t\t\tthis._numJoints = this.getNextInt();\n\t\t\t\t\tthis._hierarchy = new Array<HierarchyData>(this._numJoints);\n\t\t\t\t\tthis._baseFrameData = new Array<BaseFrameData>(this._numJoints);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.FRAME_RATE_TOKEN:\n\t\t\t\t\tthis._frameRate = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_ANIMATED_COMPONENTS_TOKEN:\n\t\t\t\t\tthis._numAnimatedComponents = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.HIERARCHY_TOKEN:\n\t\t\t\t\tthis.parseHierarchy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.BOUNDS_TOKEN:\n\t\t\t\t\tthis.parseBounds();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.BASE_FRAME_TOKEN:\n\t\t\t\t\tthis.parseBaseFrame();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.FRAME_TOKEN:\n\t\t\t\t\tthis.parseFrame();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (!this._reachedEOF)\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\n\t\t\t}\n\n\t\t\tif (this._reachedEOF) {\n\t\t\t\tthis._clip = new SkeletonClipNode();\n\t\t\t\tthis.translateClip();\n\t\t\t\tthis._pFinalizeAsset(this._clip);\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t}\n\t\t}\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\t/**\n\t * Converts all key frame data to an SkinnedAnimationSequence.\n\t */\n\tprivate translateClip():void\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < this._numFrames; ++i)\n\t\t\tthis._clip.addFrame(this.translatePose(this._frameData[i]), 1000/this._frameRate);\n\t}\n\n\t/**\n\t * Converts a single key frame data to a SkeletonPose.\n\t * @param frameData The actual frame data.\n\t * @return A SkeletonPose containing the frame data's pose.\n\t */\n\tprivate translatePose(frameData:FrameData):SkeletonPose\n\t{\n\t\tvar hierarchy:HierarchyData;\n\t\tvar pose:JointPose;\n\t\tvar base:BaseFrameData;\n\t\tvar flags:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar translate:Vector3D = new Vector3D();\n\t\tvar orientation:Quaternion = new Quaternion();\n\t\tvar components:Array<number> = frameData.components;\n\t\tvar skelPose:SkeletonPose = new SkeletonPose();\n\t\tvar jointPoses:Array<JointPose> = skelPose.jointPoses;\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numJoints; ++i) {\n\t\t\tj = 0;\n\t\t\tpose = new JointPose();\n\t\t\thierarchy = this._hierarchy[i];\n\t\t\tbase = this._baseFrameData[i];\n\t\t\tflags = hierarchy.flags;\n\t\t\ttranslate.x = base.position.x;\n\t\t\ttranslate.y = base.position.y;\n\t\t\ttranslate.z = base.position.z;\n\t\t\torientation.x = base.orientation.x;\n\t\t\torientation.y = base.orientation.y;\n\t\t\torientation.z = base.orientation.z;\n\n\t\t\tif (flags & 1)\n\t\t\t\ttranslate.x = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 2)\n\t\t\t\ttranslate.y = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 4)\n\t\t\t\ttranslate.z = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 8)\n\t\t\t\torientation.x = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 16)\n\t\t\t\torientation.y = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 32)\n\t\t\t\torientation.z = components[hierarchy.startIndex + (j++)];\n\n\t\t\tvar w:number = 1 - orientation.x*orientation.x - orientation.y*orientation.y - orientation.z*orientation.z;\n\t\t\torientation.w = w < 0? 0 : -Math.sqrt(w);\n\n\t\t\tif (hierarchy.parentIndex < 0) {\n\t\t\t\tpose.orientation.multiply(this._rotationQuat, orientation);\n\t\t\t\tpose.translation = this._rotationQuat.rotatePoint(translate);\n\t\t\t} else {\n\t\t\t\tpose.orientation.copyFrom(orientation);\n\t\t\t\tpose.translation.x = translate.x;\n\t\t\t\tpose.translation.y = translate.y;\n\t\t\t\tpose.translation.z = translate.z;\n\t\t\t}\n\t\t\tpose.orientation.y = -pose.orientation.y;\n\t\t\tpose.orientation.z = -pose.orientation.z;\n\t\t\tpose.translation.x = -pose.translation.x;\n\n\t\t\tjointPoses[i] = pose;\n\t\t}\n\n\t\treturn skelPose;\n\t}\n\n\t/**\n\t * Parses the skeleton's hierarchy data.\n\t */\n\tprivate parseHierarchy():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:HierarchyData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new HierarchyData();\n\t\t\tdata.name = this.parseLiteralstring();\n\t\t\tdata.parentIndex = this.getNextInt();\n\t\t\tdata.flags = this.getNextInt();\n\t\t\tdata.startIndex = this.getNextInt();\n\t\t\tthis._hierarchy[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses frame bounds.\n\t */\n\tprivate parseBounds():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:BoundsData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new BoundsData();\n\t\t\tdata.min = this.parseVector3D();\n\t\t\tdata.max = this.parseVector3D();\n\t\t\tthis._bounds[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses the base frame.\n\t */\n\tprivate parseBaseFrame():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:BaseFrameData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new BaseFrameData();\n\t\t\tdata.position = this.parseVector3D();\n\t\t\tdata.orientation = this.parseQuaternion();\n\t\t\tthis._baseFrameData[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses a single frame.\n\t */\n\tprivate parseFrame():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:FrameData;\n\t\tvar token:string;\n\t\tvar frameIndex:number /*int*/;\n\n\t\tframeIndex = this.getNextInt();\n\n\t\ttoken = this.getNextToken();\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new FrameData();\n\t\t\tdata.components = new Array<number>(this._numAnimatedComponents);\n\n\t\t\tfor (var i:number /*int*/ = 0; i < this._numAnimatedComponents; ++i)\n\t\t\t\tdata.components[i] = this.getNextNumber();\n\n\t\t\tthis._frameData[frameIndex] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Puts back the last read character into the data stream.\n\t */\n\tprivate putBack():void\n\t{\n\t\tthis._parseIndex--;\n\t\tthis._charLineIndex--;\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\n\t}\n\n\t/**\n\t * Gets the next token in the data stream.\n\t */\n\tprivate getNextToken():string\n\t{\n\t\tvar ch:string;\n\t\tvar token:string = \"\";\n\n\t\twhile (!this._reachedEOF) {\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\n\t\t\t\tif (token != MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.skipWhiteSpace();\n\t\t\t\tif (token != \"\")\n\t\t\t\t\treturn token;\n\t\t\t} else\n\t\t\t\ttoken += ch;\n\n\t\t\tif (token == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\treturn token;\n\t\t}\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Skips all whitespace in the data stream.\n\t */\n\tprivate skipWhiteSpace():void\n\t{\n\t\tvar ch:string;\n\n\t\tdo\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\n\n\t\tthis.putBack();\n\t}\n\n\t/**\n\t * Skips to the next line.\n\t */\n\tprivate ignoreLine():void\n\t{\n\t\tvar ch:string;\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\n\t\t\tch = this.getNextChar();\n\t}\n\n\t/**\n\t * Retrieves the next single character in the data stream.\n\t */\n\tprivate getNextChar():string\n\t{\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\n\n\t\tif (ch == \"\\n\") {\n\t\t\t++this._line;\n\t\t\tthis._charLineIndex = 0;\n\t\t} else if (ch != \"\\r\")\n\t\t\t++this._charLineIndex;\n\n\t\tif (this._parseIndex == this._textData.length)\n\t\t\tthis._reachedEOF = true;\n\n\t\treturn ch;\n\t}\n\n\t/**\n\t * Retrieves the next integer in the data stream.\n\t */\n\tprivate getNextInt():number /*int*/\n\t{\n\t\tvar i:number = parseInt(this.getNextToken());\n\t\tif (isNaN(i))\n\t\t\tthis.sendParseError(\"int type\");\n\t\treturn i;\n\t}\n\n\t/**\n\t * Retrieves the next floating point number in the data stream.\n\t */\n\tprivate getNextNumber():number\n\t{\n\t\tvar f:number = parseFloat(this.getNextToken());\n\t\tif (isNaN(f))\n\t\t\tthis.sendParseError(\"float type\");\n\t\treturn f;\n\t}\n\n\t/**\n\t * Retrieves the next 3d vector in the data stream.\n\t */\n\tprivate parseVector3D():Vector3D\n\t{\n\t\tvar vec:Vector3D = new Vector3D();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tvec.x = this.getNextNumber();\n\t\tvec.y = this.getNextNumber();\n\t\tvec.z = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn vec;\n\t}\n\n\t/**\n\t * Retrieves the next quaternion in the data stream.\n\t */\n\tprivate parseQuaternion():Quaternion\n\t{\n\t\tvar quat:Quaternion = new Quaternion();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tquat.x = this.getNextNumber();\n\t\tquat.y = this.getNextNumber();\n\t\tquat.z = this.getNextNumber();\n\n\t\t// quat supposed to be unit length\n\t\tvar t:number = 1 - (quat.x*quat.x) - (quat.y*quat.y) - (quat.z*quat.z);\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn quat;\n\t}\n\n\t/**\n\t * Parses the command line data.\n\t */\n\tprivate parseCMD():void\n\t{\n\t\t// just ignore the command line property\n\t\tthis.parseLiteralstring();\n\t}\n\n\t/**\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\n\t * by double quotes.\n\t */\n\tprivate parseLiteralstring():string\n\t{\n\t\tthis.skipWhiteSpace();\n\n\t\tvar ch:string = this.getNextChar();\n\t\tvar str:string = \"\";\n\n\t\tif (ch != \"\\\"\")\n\t\t\tthis.sendParseError(\"\\\"\");\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch != \"\\\"\")\n\t\t\t\tstr += ch;\n\t\t} while (ch != \"\\\"\");\n\n\t\treturn str;\n\t}\n\n\t/**\n\t * Throws an end-of-file error when a premature end of file was encountered.\n\t */\n\tprivate sendEOFError():void\n\t{\n\t\tthrow new Error(\"Unexpected end of file\");\n\t}\n\n\t/**\n\t * Throws an error when an unexpected token was encountered.\n\t * @param expected The token type that was actually expected.\n\t */\n\tprivate sendParseError(expected:string):void\n\t{\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\n\t}\n\n\t/**\n\t * Throws an error when an unknown keyword was encountered.\n\t */\n\tprivate sendUnknownKeywordError():void\n\t{\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\n\t}\n}\n\nexport = MD5AnimParser;\n\n\n/**\n *\n */\nclass BaseFrameData\n{\n\t/**\n\t *\n\t */\n\tpublic position:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic orientation:Quaternion;\n}\n\n/**\n *\n */\nclass BoundsData\n{\n\t/**\n\t *\n\t */\n\tpublic min:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic max:Vector3D;\n}\n\n/**\n *\n */\nclass FrameData\n{\n\t/**\n\t *\n\t */\n\tpublic index:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic components:Array<number>;\n}\n\n/**\n *\n */\nclass HierarchyData\n{\n\t/**\n\t *\n\t */\n\tpublic name:string;\n\n\t/**\n\t *\n\t */\n\tpublic parentIndex:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic flags:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic startIndex:number /*int*/;\n}",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\n\n// todo: create animation system, parse skeleton\n\n/**\n * MD5MeshParser provides a parser for the md5mesh data type, providing the geometry of the md5 format.\n *\n * todo: optimize\n */\nclass MD5MeshParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\n\tpublic static NUM_MESHES_TOKEN:string = \"numMeshes\";\n\tpublic static COMMENT_TOKEN:string = \"//\";\n\tpublic static JOINTS_TOKEN:string = \"joints\";\n\tpublic static MESH_TOKEN:string = \"mesh\";\n\n\tpublic static MESH_SHADER_TOKEN:string = \"shader\";\n\tpublic static MESH_NUM_VERTS_TOKEN:string = \"numverts\";\n\tpublic static MESH_VERT_TOKEN:string = \"vert\";\n\tpublic static MESH_NUM_TRIS_TOKEN:string = \"numtris\";\n\tpublic static MESH_TRI_TOKEN:string = \"tri\";\n\tpublic static MESH_NUM_WEIGHTS_TOKEN:string = \"numweights\";\n\tpublic static MESH_WEIGHT_TOKEN:string = \"weight\";\n\n\tprivate _parseIndex:number /*int*/ = 0;\n\tprivate _reachedEOF:boolean;\n\tprivate _line:number /*int*/ = 0;\n\tprivate _charLineIndex:number /*int*/ = 0;\n\tprivate _version:number /*int*/;\n\tprivate _numJoints:number /*int*/;\n\tprivate _numMeshes:number /*int*/;\n\n\tprivate _mesh:Mesh;\n\tprivate _shaders:Array<string>;\n\n\tprivate _maxJointCount:number /*int*/;\n\tprivate _meshData:Array<MeshData>;\n\tprivate _bindPoses:Array<Matrix3D>;\n\tprivate _geometry:Geometry;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _animationSet:SkeletonAnimationSet;\n\n\tprivate _rotationQuat:Quaternion;\n\n\t/**\n\t * Creates a new MD5MeshParser object.\n\t */\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._rotationQuat = new Quaternion();\n\n\t\tthis._rotationQuat.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\n\n\t\tif (additionalRotationAxis) {\n\t\t\tvar quat:Quaternion = new Quaternion();\n\t\t\tquat.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\n\t\t\tthis._rotationQuat.multiply(this._rotationQuat, quat);\n\t\t}\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md5mesh\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar token:string;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\ttoken = this.getNextToken();\n\t\t\tswitch (token) {\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.VERSION_TOKEN:\n\t\t\t\t\tthis._version = this.getNextInt();\n\t\t\t\t\tif (this._version != 10)\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.COMMAND_LINE_TOKEN:\n\t\t\t\t\tthis.parseCMD();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.NUM_JOINTS_TOKEN:\n\t\t\t\t\tthis._numJoints = this.getNextInt();\n\t\t\t\t\tthis._bindPoses = new Array<Matrix3D>(this._numJoints);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.NUM_MESHES_TOKEN:\n\t\t\t\t\tthis._numMeshes = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.JOINTS_TOKEN:\n\t\t\t\t\tthis.parseJoints();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_TOKEN:\n\t\t\t\t\tthis.parseMesh();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (!this._reachedEOF)\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\n\t\t\t}\n\n\t\t\tif (this._reachedEOF) {\n\t\t\t\tthis.calculateMaxJointCount();\n\t\t\t\tthis._animationSet = new SkeletonAnimationSet(this._maxJointCount);\n\n\t\t\t\tthis._mesh = new Mesh(new Geometry(), null);\n\t\t\t\tthis._geometry = this._mesh.geometry;\n\n\t\t\t\tfor (var i:number /*int*/ = 0; i < this._meshData.length; ++i)\n\t\t\t\t\tthis._geometry.addSubGeometry(this.translateGeom(this._meshData[i].vertexData, this._meshData[i].weightData, this._meshData[i].indices));\n\n\t\t\t\t//_geometry.animation = _animation;\n\t\t\t\t//\t\t\t\t\t_mesh.animationController = _animationController;\n\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\t\t\tthis._pFinalizeAsset(this._geometry);\n\t\t\t\tthis._pFinalizeAsset(this._mesh);\n\t\t\t\tthis._pFinalizeAsset(this._skeleton);\n\t\t\t\tthis._pFinalizeAsset(this._animationSet);\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t}\n\t\t}\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\tprivate calculateMaxJointCount():void\n\t{\n\t\tthis._maxJointCount = 0;\n\n\t\tvar numMeshData:number /*int*/ = this._meshData.length;\n\t\tfor (var i:number /*int*/ = 0; i < numMeshData; ++i) {\n\t\t\tvar meshData:MeshData = this._meshData[i];\n\t\t\tvar vertexData:Array<VertexData> = meshData.vertexData;\n\t\t\tvar numVerts:number /*int*/ = vertexData.length;\n\n\t\t\tfor (var j:number /*int*/ = 0; j < numVerts; ++j) {\n\t\t\t\tvar zeroWeights:number /*int*/ = this.countZeroWeightJoints(vertexData[j], meshData.weightData);\n\t\t\t\tvar totalJoints:number /*int*/ = vertexData[j].countWeight - zeroWeights;\n\t\t\t\tif (totalJoints > this._maxJointCount)\n\t\t\t\t\tthis._maxJointCount = totalJoints;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate countZeroWeightJoints(vertex:VertexData, weights:Array<JointData>):number /*int*/\n\t{\n\t\tvar start:number /*int*/ = vertex.startWeight;\n\t\tvar end:number /*int*/ = vertex.startWeight + vertex.countWeight;\n\t\tvar count:number /*int*/ = 0;\n\t\tvar weight:number;\n\n\t\tfor (var i:number /*int*/ = start; i < end; ++i) {\n\t\t\tweight = weights[i].bias;\n\t\t\tif (weight == 0)\n\t\t\t\t++count;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Parses the skeleton's joints.\n\t */\n\tprivate parseJoints():void\n\t{\n\t\tvar ch:string;\n\t\tvar joint:SkeletonJoint;\n\t\tvar pos:Vector3D;\n\t\tvar quat:Quaternion;\n\t\tvar i:number /*int*/ = 0;\n\t\tvar token:string = this.getNextToken();\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tthis._skeleton = new Skeleton();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tjoint = new SkeletonJoint();\n\t\t\tjoint.name = this.parseLiteralstring();\n\t\t\tjoint.parentIndex = this.getNextInt();\n\t\t\tpos = this.parseVector3D();\n\t\t\tpos = this._rotationQuat.rotatePoint(pos);\n\t\t\tquat = this.parseQuaternion();\n\n\t\t\t// todo: check if this is correct, or maybe we want to actually store it as quats?\n\t\t\tthis._bindPoses[i] = quat.toMatrix3D();\n\t\t\tthis._bindPoses[i].appendTranslation(pos.x, pos.y, pos.z);\n\t\t\tvar inv:Matrix3D = this._bindPoses[i].clone();\n\t\t\tinv.invert();\n\t\t\tjoint.inverseBindPose = inv.rawData;\n\n\t\t\tthis._skeleton.joints[i++] = joint;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Puts back the last read character into the data stream.\n\t */\n\tprivate putBack():void\n\t{\n\t\tthis._parseIndex--;\n\t\tthis._charLineIndex--;\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\n\t}\n\n\t/**\n\t * Parses the mesh geometry.\n\t */\n\tprivate parseMesh():void\n\t{\n\t\tvar token:string = this.getNextToken();\n\t\tvar ch:string;\n\t\tvar vertexData:Array<VertexData>;\n\t\tvar weights:Array<JointData>;\n\t\tvar indices:Array<number> /*uint*/;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tif (this._shaders == null)\n\t\t\tthis._shaders = new Array<string>();\n\n\t\twhile (ch != \"}\") {\n\t\t\tch = this.getNextToken();\n\t\t\tswitch (ch) {\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_SHADER_TOKEN:\n\t\t\t\t\tthis._shaders.push(this.parseLiteralstring());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_VERTS_TOKEN:\n\t\t\t\t\tvertexData = new Array<VertexData>(this.getNextInt());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_TRIS_TOKEN:\n\t\t\t\t\tindices = new Array<number>(this.getNextInt()*3) /*uint*/;\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_WEIGHTS_TOKEN:\n\t\t\t\t\tweights = new Array<JointData>(this.getNextInt());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_VERT_TOKEN:\n\t\t\t\t\tthis.parseVertex(vertexData);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_TRI_TOKEN:\n\t\t\t\t\tthis.parseTri(indices);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_WEIGHT_TOKEN:\n\t\t\t\t\tthis.parseJoint(weights);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this._meshData == null)\n\t\t\tthis._meshData = new Array<MeshData>();\n\n\t\tvar i:number /*uint*/ = this._meshData.length;\n\t\tthis._meshData[i] = new MeshData();\n\t\tthis._meshData[i].vertexData = vertexData;\n\t\tthis._meshData[i].weightData = weights;\n\t\tthis._meshData[i].indices = indices;\n\t}\n\n\t/**\n\t * Converts the mesh data to a SkinnedSub instance.\n\t * @param vertexData The mesh's vertices.\n\t * @param weights The joint weights per vertex.\n\t * @param indices The indices for the faces.\n\t * @return A SubGeometry instance containing all geometrical data for the current mesh.\n\t */\n\tprivate translateGeom(vertexData:Array<VertexData>, weights:Array<JointData>, indices:Array<number> /*uint*/):TriangleSubGeometry\n\t{\n\t\tvar len:number /*int*/ = vertexData.length;\n\t\tvar v1:number /*int*/, v2:number /*int*/, v3:number /*int*/;\n\t\tvar vertex:VertexData;\n\t\tvar weight:JointData;\n\t\tvar bindPose:Matrix3D;\n\t\tvar pos:Vector3D;\n\t\tvar subGeom:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\tvar uvs:Array<number> = new Array<number>(len*2);\n\t\tvar vertices:Array<number> = new Array<number>(len*3);\n\t\tvar jointIndices:Array<number> = new Array<number>(len*this._maxJointCount);\n\t\tvar jointWeights:Array<number> = new Array<number>(len*this._maxJointCount);\n\t\tvar l:number /*int*/ = 0;\n\t\tvar nonZeroWeights:number /*int*/;\n\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i) {\n\t\t\tvertex = vertexData[i];\n\t\t\tv1 = vertex.index*3;\n\t\t\tv2 = v1 + 1;\n\t\t\tv3 = v1 + 2;\n\t\t\tvertices[v1] = vertices[v2] = vertices[v3] = 0;\n\n\t\t\tnonZeroWeights = 0;\n\t\t\tfor (var j:number /*int*/ = 0; j < vertex.countWeight; ++j) {\n\t\t\t\tweight = weights[vertex.startWeight + j];\n\t\t\t\tif (weight.bias > 0) {\n\t\t\t\t\tbindPose = this._bindPoses[weight.joint];\n\t\t\t\t\tpos = bindPose.transformVector(weight.pos);\n\t\t\t\t\tvertices[v1] += pos.x*weight.bias;\n\t\t\t\t\tvertices[v2] += pos.y*weight.bias;\n\t\t\t\t\tvertices[v3] += pos.z*weight.bias;\n\n\t\t\t\t\t// indices need to be multiplied by 3 (amount of matrix registers)\n\t\t\t\t\tjointIndices[l] = weight.joint*3;\n\t\t\t\t\tjointWeights[l++] = weight.bias;\n\t\t\t\t\t++nonZeroWeights;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = nonZeroWeights; j < this._maxJointCount; ++j) {\n\t\t\t\tjointIndices[l] = 0;\n\t\t\t\tjointWeights[l++] = 0;\n\t\t\t}\n\n\t\t\tv1 = vertex.index << 1;\n\t\t\tuvs[v1++] = vertex.s;\n\t\t\tuvs[v1] = vertex.t;\n\t\t}\n\n\t\tsubGeom.jointsPerVertex = this._maxJointCount;\n\t\tsubGeom.setIndices(indices);\n\t\tsubGeom.setPositions(vertices);\n\t\tsubGeom.setUVs(uvs);\n\t\tsubGeom.setJointIndices(jointIndices);\n\t\tsubGeom.setJointWeights(jointWeights);\n\t\t// cause explicit updates\n\t\tsubGeom.setNormals(null);\n\t\tsubGeom.setTangents(null);\n\t\t// turn auto updates off because they may be animated and set explicitly\n\t\tsubGeom.autoDeriveTangents = false;\n\t\tsubGeom.autoDeriveNormals = false;\n\n\t\treturn subGeom;\n\t}\n\n\t/**\n\t * Retrieve the next triplet of vertex indices that form a face.\n\t * @param indices The index list in which to store the read data.\n\t */\n\tprivate parseTri(indices:Array<number> /*uint*/):void\n\t{\n\t\tvar index:number /*int*/ = this.getNextInt()*3;\n\t\tindices[index] = this.getNextInt();\n\t\tindices[index + 1] = this.getNextInt();\n\t\tindices[index + 2] = this.getNextInt();\n\t}\n\n\t/**\n\t * Reads a new joint data set for a single joint.\n\t * @param weights the target list to contain the weight data.\n\t */\n\tprivate parseJoint(weights:Array<JointData>):void\n\t{\n\t\tvar weight:JointData = new JointData();\n\t\tweight.index = this.getNextInt();\n\t\tweight.joint = this.getNextInt();\n\t\tweight.bias = this.getNextNumber();\n\t\tweight.pos = this.parseVector3D();\n\t\tweights[weight.index] = weight;\n\t}\n\n\t/**\n\t * Reads the data for a single vertex.\n\t * @param vertexData The list to contain the vertex data.\n\t */\n\tprivate parseVertex(vertexData:Array<VertexData>):void\n\t{\n\t\tvar vertex:VertexData = new VertexData();\n\t\tvertex.index = this.getNextInt();\n\t\tthis.parseUV(vertex);\n\t\tvertex.startWeight = this.getNextInt();\n\t\tvertex.countWeight = this.getNextInt();\n\t\t//\t\t\tif (vertex.countWeight > _maxJointCount) _maxJointCount = vertex.countWeight;\n\t\tvertexData[vertex.index] = vertex;\n\t}\n\n\t/**\n\t * Reads the next uv coordinate.\n\t * @param vertexData The vertexData to contain the UV coordinates.\n\t */\n\tprivate parseUV(vertexData:VertexData):void\n\t{\n\t\tvar ch:string = this.getNextToken();\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tvertexData.s = this.getNextNumber();\n\t\tvertexData.t = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\t}\n\n\t/**\n\t * Gets the next token in the data stream.\n\t */\n\tprivate getNextToken():string\n\t{\n\t\tvar ch:string;\n\t\tvar token:string = \"\";\n\n\t\twhile (!this._reachedEOF) {\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\n\t\t\t\tif (token != MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.skipWhiteSpace();\n\t\t\t\tif (token != \"\")\n\t\t\t\t\treturn token;\n\t\t\t} else\n\t\t\t\ttoken += ch;\n\n\t\t\tif (token == MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\treturn token;\n\t\t}\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Skips all whitespace in the data stream.\n\t */\n\tprivate skipWhiteSpace():void\n\t{\n\t\tvar ch:string;\n\n\t\tdo\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\n\n\t\tthis.putBack();\n\t}\n\n\t/**\n\t * Skips to the next line.\n\t */\n\tprivate ignoreLine():void\n\t{\n\t\tvar ch:string;\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\n\t\t\tch = this.getNextChar();\n\t}\n\n\t/**\n\t * Retrieves the next single character in the data stream.\n\t */\n\tprivate getNextChar():string\n\t{\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\n\n\t\tif (ch == \"\\n\") {\n\t\t\t++this._line;\n\t\t\tthis._charLineIndex = 0;\n\t\t} else if (ch != \"\\r\")\n\t\t\t++this._charLineIndex;\n\n\t\tif (this._parseIndex >= this._textData.length)\n\t\t\tthis._reachedEOF = true;\n\n\t\treturn ch;\n\t}\n\n\t/**\n\t * Retrieves the next integer in the data stream.\n\t */\n\tprivate getNextInt():number /*int*/\n\t{\n\t\tvar i:number = parseInt(this.getNextToken());\n\t\tif (isNaN(i))\n\t\t\tthis.sendParseError(\"int type\");\n\t\treturn i;\n\t}\n\n\t/**\n\t * Retrieves the next floating point number in the data stream.\n\t */\n\tprivate getNextNumber():number\n\t{\n\t\tvar f:number = parseFloat(this.getNextToken());\n\t\tif (isNaN(f))\n\t\t\tthis.sendParseError(\"float type\");\n\t\treturn f;\n\t}\n\n\t/**\n\t * Retrieves the next 3d vector in the data stream.\n\t */\n\tprivate parseVector3D():Vector3D\n\t{\n\t\tvar vec:Vector3D = new Vector3D();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tvec.x = -this.getNextNumber();\n\t\tvec.y = this.getNextNumber();\n\t\tvec.z = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn vec;\n\t}\n\n\t/**\n\t * Retrieves the next quaternion in the data stream.\n\t */\n\tprivate parseQuaternion():Quaternion\n\t{\n\t\tvar quat:Quaternion = new Quaternion();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tquat.x = this.getNextNumber();\n\t\tquat.y = -this.getNextNumber();\n\t\tquat.z = -this.getNextNumber();\n\n\t\t// quat supposed to be unit length\n\t\tvar t:number = 1 - quat.x*quat.x - quat.y*quat.y - quat.z*quat.z;\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\tvar rotQuat:Quaternion = new Quaternion();\n\t\trotQuat.multiply(this._rotationQuat, quat);\n\t\treturn rotQuat;\n\t}\n\n\t/**\n\t * Parses the command line data.\n\t */\n\tprivate parseCMD():void\n\t{\n\t\t// just ignore the command line property\n\t\tthis.parseLiteralstring();\n\t}\n\n\t/**\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\n\t * by double quotes.\n\t */\n\tprivate parseLiteralstring():string\n\t{\n\t\tthis.skipWhiteSpace();\n\n\t\tvar ch:string = this.getNextChar();\n\t\tvar str:string = \"\";\n\n\t\tif (ch != \"\\\"\")\n\t\t\tthis.sendParseError(\"\\\"\");\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch != \"\\\"\")\n\t\t\t\tstr += ch;\n\t\t} while (ch != \"\\\"\");\n\n\t\treturn str;\n\t}\n\n\t/**\n\t * Throws an end-of-file error when a premature end of file was encountered.\n\t */\n\tprivate sendEOFError():void\n\t{\n\t\tthrow new Error(\"Unexpected end of file\");\n\t}\n\n\t/**\n\t * Throws an error when an unexpected token was encountered.\n\t * @param expected The token type that was actually expected.\n\t */\n\tprivate sendParseError(expected:string):void\n\t{\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\n\t}\n\n\t/**\n\t * Throws an error when an unknown keyword was encountered.\n\t */\n\tprivate sendUnknownKeywordError():void\n\t{\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\n\t}\n}\n\nexport = MD5MeshParser;\n\n\nclass VertexData\n{\n\tpublic index:number /*int*/;\n\tpublic s:number;\n\tpublic t:number;\n\tpublic startWeight:number /*int*/;\n\tpublic countWeight:number /*int*/;\n}\n\nclass JointData\n{\n\tpublic index:number /*int*/;\n\tpublic joint:number /*int*/;\n\tpublic bias:number;\n\tpublic pos:Vector3D;\n}\n\nclass MeshData\n{\n\tpublic vertexData:Array<VertexData>;\n\tpublic weightData:Array<JointData>;\n\tpublic indices:Array<number> /*uint*/;\n}",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\n\n/**\n * Max3DSParser provides a parser for the 3ds data type.\n */\nclass Max3DSParser extends ParserBase\n{\n\tprivate _byteData:ByteArray;\n\n\tprivate _textures:Object;\n\tprivate _materials:Object;\n\tprivate _unfinalized_objects:Object;\n\n\tprivate _cur_obj_end:number;\n\tprivate _cur_obj:ObjectVO;\n\n\tprivate _cur_mat_end:number;\n\tprivate _cur_mat:MaterialVO;\n\tprivate _useSmoothingGroups:boolean;\n\n\t/**\n\t * Creates a new <code>Max3DSParser</code> object.\n\t *\n\t * @param useSmoothingGroups Determines whether the parser looks for smoothing groups in the 3ds file or assumes uniform smoothing. Defaults to true.\n\t */\n\tconstructor(useSmoothingGroups:boolean = true)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\n\t\tthis._useSmoothingGroups = useSmoothingGroups;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"3ds\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tvar ba:ByteArray;\n\n\t\tba = ParserUtils.toByteArray(data);\n\t\tif (ba) {\n\t\t\tba.position = 0;\n\t\t\tif (ba.readShort() == 0x4d4d)\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\n\t{\n\t\tif (resourceDependency.assets.length == 1) {\n\t\t\tvar asset:IAsset;\n\n\t\t\tasset = resourceDependency.assets[0];\n\t\t\tif (asset.isAsset(BitmapImage2D)) {\n\t\t\t\tvar tex:TextureVO;\n\n\t\t\t\ttex = this._textures[resourceDependency.id];\n\t\t\t\ttex.texture = new Single2DTexture(<BitmapImage2D> asset);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\n\t{\n\t\t// TODO: Implement\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (!this._byteData) {\n\t\t\tthis._byteData = this._pGetByteData();\n\t\t\tthis._byteData.position = 0;\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;// Should be default\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t\tthis._textures = {};\n\t\t\tthis._materials = {};\n\t\t\tthis._unfinalized_objects = {};\n\t\t}\n\n\t\t// TODO: With this construct, the loop will run no-op for as long\n\t\t// as there is time once file has finished reading. Consider a nice\n\t\t// way to stop loop when byte array is empty, without putting it in\n\t\t// the while-conditional, which will prevent finalizations from\n\t\t// happening after the last chunk.\n\t\twhile (this._pHasTime()) {\n\n\t\t\t// If we are currently working on an object, and the most recent chunk was\n\t\t\t// the last one in that object, finalize the current object.\n\t\t\tif (this._cur_mat && this._byteData.position >= this._cur_mat_end)\n\t\t\t\tthis.finalizeCurrentMaterial();\n\t\t\telse if (this._cur_obj && this._byteData.position >= this._cur_obj_end) {\n\t\t\t\t// Can't finalize at this point, because we have to wait until the full\n\t\t\t\t// animation section has been parsed for any potential pivot definitions\n\t\t\t\tthis._unfinalized_objects[this._cur_obj.name] = this._cur_obj;\n\t\t\t\tthis._cur_obj_end = Number.MAX_VALUE /*uint*/;\n\t\t\t\tthis._cur_obj = null;\n\t\t\t}\n\n\t\t\tif (this._byteData.getBytesAvailable() > 0) {\n\t\t\t\tvar cid:number /*uint*/;\n\t\t\t\tvar len:number /*uint*/;\n\t\t\t\tvar end:number /*uint*/;\n\n\t\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\t\tlen = this._byteData.readUnsignedInt();\n\t\t\t\tend = this._byteData.position + (len - 6);\n\n\t\t\t\tswitch (cid) {\n\t\t\t\t\tcase 0x4D4D: // MAIN3DS\n\t\t\t\t\tcase 0x3D3D: // EDIT3DS\n\t\t\t\t\tcase 0xB000: // KEYF3DS\n\t\t\t\t\t\t// This types are \"container chunks\" and contain only\n\t\t\t\t\t\t// sub-chunks (no data on their own.) This means that\n\t\t\t\t\t\t// there is nothing more to parse at this point, and\n\t\t\t\t\t\t// instead we should progress to the next chunk, which\n\t\t\t\t\t\t// will be the first sub-chunk of this one.\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0xAFFF: // MATERIAL\n\t\t\t\t\t\tthis._cur_mat_end = end;\n\t\t\t\t\t\tthis._cur_mat = this.parseMaterial();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4000: // EDIT_OBJECT\n\t\t\t\t\t\tthis._cur_obj_end = end;\n\t\t\t\t\t\tthis._cur_obj = new ObjectVO();\n\t\t\t\t\t\tthis._cur_obj.name = this.readNulTermstring();\n\t\t\t\t\t\tthis._cur_obj.materials = new Array<string>();\n\t\t\t\t\t\tthis._cur_obj.materialFaces = {};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4100: // OBJ_TRIMESH\n\t\t\t\t\t\tthis._cur_obj.type = Mesh.assetType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4110: // TRI_VERTEXL\n\t\t\t\t\t\tthis.parseVertexList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4120: // TRI_FACELIST\n\t\t\t\t\t\tthis.parseFaceList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4140: // TRI_MAPPINGCOORDS\n\t\t\t\t\t\tthis.parseUVList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4130: // Face materials\n\t\t\t\t\t\tthis.parseFaceMaterialList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4160: // Transform\n\t\t\t\t\t\tthis._cur_obj.transform = this.readTransform();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0xB002: // Object animation (including pivot)\n\t\t\t\t\t\tthis.parseObjectAnimation(end);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4150: // Smoothing groups\n\t\t\t\t\t\tthis.parseSmoothingGroups();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Skip this (unknown) chunk\n\t\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Pause parsing if there were any dependencies found during this\n\t\t\t\t// iteration (i.e. if there are any dependencies that need to be\n\t\t\t\t// retrieved at this time.)\n\t\t\t\tif (this.dependencies.length) {\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// More parsing is required if the entire byte array has not yet\n\t\t// been read, or if there is a currently non-finalized object in\n\t\t// the pipeline.\n\t\tif (this._byteData.getBytesAvailable() || this._cur_obj || this._cur_mat) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t} else {\n\t\t\tvar name:string;\n\n\t\t\t// Finalize any remaining objects before ending.\n\t\t\tfor (name in this._unfinalized_objects) {\n\t\t\t\tvar obj:DisplayObjectContainer;\n\t\t\t\tobj = this.constructObject(this._unfinalized_objects[name]);\n\t\t\t\tif (obj) {\n\t\t\t\t\t//add to the content property\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\n\n\t\t\t\t\tthis._pFinalizeAsset(obj, name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\tprivate parseMaterial():MaterialVO\n\t{\n\t\tvar mat:MaterialVO;\n\n\t\tmat = new MaterialVO();\n\n\t\twhile (this._byteData.position < this._cur_mat_end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\t\t\tvar end:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\t\t\tend = this._byteData.position + (len - 6);\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xA000: // Material name\n\t\t\t\t\tmat.name = this.readNulTermstring();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA010: // Ambient color\n\t\t\t\t\tmat.ambientColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA020: // Diffuse color\n\t\t\t\t\tmat.diffuseColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA030: // Specular color\n\t\t\t\t\tmat.specularColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA081: // Two-sided, existence indicates \"true\"\n\t\t\t\t\tmat.twoSided = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA200: // Main (color) texture\n\t\t\t\t\tmat.colorMap = this.parseTexture(end);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA204: // Specular map\n\t\t\t\t\tmat.specularMap = this.parseTexture(end);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._byteData.position = end;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn mat;\n\t}\n\n\tprivate parseTexture(end:number /*uint*/):TextureVO\n\t{\n\t\tvar tex:TextureVO;\n\n\t\ttex = new TextureVO();\n\n\t\twhile (this._byteData.position < end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xA300:\n\t\t\t\t\ttex.url = this.readNulTermstring();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t// Skip this unknown texture sub-chunk\n\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._textures[tex.url] = tex;\n\t\tthis._pAddDependency(tex.url, new URLRequest(tex.url));\n\n\t\treturn tex;\n\t}\n\n\tprivate parseVertexList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.verts = new Array<number>(count*3);\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.verts.length;\n\t\twhile (i < len) {\n\t\t\tvar x:number, y:number, z:number;\n\n\t\t\tx = this._byteData.readFloat();\n\t\t\ty = this._byteData.readFloat();\n\t\t\tz = this._byteData.readFloat();\n\n\t\t\tthis._cur_obj.verts[i++] = x;\n\t\t\tthis._cur_obj.verts[i++] = z;\n\t\t\tthis._cur_obj.verts[i++] = y;\n\t\t}\n\t}\n\n\tprivate parseFaceList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.indices = new Array<number>(count*3) /*uint*/;\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.indices.length;\n\t\twhile (i < len) {\n\t\t\tvar i0:number /*uint*/, i1:number /*uint*/, i2:number /*uint*/;\n\n\t\t\ti0 = this._byteData.readUnsignedShort();\n\t\t\ti1 = this._byteData.readUnsignedShort();\n\t\t\ti2 = this._byteData.readUnsignedShort();\n\n\t\t\tthis._cur_obj.indices[i++] = i0;\n\t\t\tthis._cur_obj.indices[i++] = i2;\n\t\t\tthis._cur_obj.indices[i++] = i1;\n\n\t\t\t// Skip \"face info\", irrelevant in Away3D\n\t\t\tthis._byteData.position += 2;\n\t\t}\n\n\t\tthis._cur_obj.smoothingGroups = new Array<number>(count) /*uint*/;\n\t}\n\n\tprivate parseSmoothingGroups():void\n\t{\n\t\tvar len:number /*uint*/ = this._cur_obj.indices.length/3;\n\t\tvar i:number /*uint*/ = 0;\n\t\twhile (i < len) {\n\t\t\tthis._cur_obj.smoothingGroups[i] = this._byteData.readUnsignedInt();\n\t\t\ti++;\n\t\t}\n\t}\n\n\tprivate parseUVList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.uvs = new Array<number>(count*2);\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.uvs.length;\n\t\twhile (i < len) {\n\t\t\tthis._cur_obj.uvs[i++] = this._byteData.readFloat();\n\t\t\tthis._cur_obj.uvs[i++] = 1.0 - this._byteData.readFloat();\n\t\t}\n\t}\n\n\tprivate parseFaceMaterialList():void\n\t{\n\t\tvar mat:string;\n\t\tvar count:number /*uint*/;\n\t\tvar i:number /*uint*/;\n\t\tvar faces:Array<number> /*uint*/;\n\n\t\tmat = this.readNulTermstring();\n\t\tcount = this._byteData.readUnsignedShort();\n\n\t\tfaces = new Array<number>(count) /*uint*/;\n\t\ti = 0;\n\t\twhile (i < faces.length)\n\t\t\tfaces[i++] = this._byteData.readUnsignedShort();\n\n\t\tthis._cur_obj.materials.push(mat);\n\t\tthis._cur_obj.materialFaces[mat] = faces;\n\t}\n\n\tprivate parseObjectAnimation(end:number):void\n\t{\n\t\tvar vo:ObjectVO;\n\t\tvar obj:DisplayObjectContainer;\n\t\tvar pivot:Vector3D;\n\t\tvar name:string;\n\t\tvar hier:number /*uint*/;\n\n\t\t// Pivot defaults to origin\n\t\tpivot = new Vector3D;\n\n\t\twhile (this._byteData.position < end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xb010: // Name/hierarchy\n\t\t\t\t\tname = this.readNulTermstring();\n\t\t\t\t\tthis._byteData.position += 4;\n\t\t\t\t\thier = this._byteData.readShort();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xb013: // Pivot\n\t\t\t\t\tpivot.x = this._byteData.readFloat();\n\t\t\t\t\tpivot.z = this._byteData.readFloat();\n\t\t\t\t\tpivot.y = this._byteData.readFloat();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If name is \"$$$DUMMY\" this is an empty object (e.g. a container)\n\t\t// and will be ignored in this version of the parser\n\t\t// TODO: Implement containers in 3DS parser.\n\t\tif (name != '$$$DUMMY' && this._unfinalized_objects.hasOwnProperty(name)) {\n\t\t\tvo = this._unfinalized_objects[name];\n\t\t\tobj = this.constructObject(vo, pivot);\n\n\t\t\tif (obj) {\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\n\n\t\t\t\tthis._pFinalizeAsset(obj, vo.name);\n\t\t\t}\n\n\n\t\t\tdelete this._unfinalized_objects[name];\n\t\t}\n\t}\n\n\tprivate constructObject(obj:ObjectVO, pivot:Vector3D = null):DisplayObjectContainer\n\t{\n\t\tif (obj.type == Mesh.assetType) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar sub:TriangleSubGeometry;\n\t\t\tvar geom:Geometry;\n\t\t\tvar mat:MaterialBase;\n\t\t\tvar mesh:Mesh;\n\t\t\tvar mtx:Matrix3D;\n\t\t\tvar vertices:Array<VertexVO>;\n\t\t\tvar faces:Array<FaceVO>;\n\n\t\t\tif (obj.materials.length > 1)\n\t\t\t\tconsole.log(\"The Away3D 3DS parser does not support multiple materials per mesh at this point.\");\n\n\t\t\t// Ignore empty objects\n\t\t\tif (!obj.indices || obj.indices.length == 0)\n\t\t\t\treturn null;\n\n\t\t\tvertices = new Array<VertexVO>(obj.verts.length/3);\n\t\t\tfaces = new Array<FaceVO>(obj.indices.length/3);\n\n\t\t\tthis.prepareData(vertices, faces, obj);\n\n\t\t\tif (this._useSmoothingGroups)\n\t\t\t\tthis.applySmoothGroups(vertices, faces);\n\n\t\t\tobj.verts = new Array<number>(vertices.length*3);\n\t\t\tfor (i = 0; i < vertices.length; i++) {\n\t\t\t\tobj.verts[i*3] = vertices[i].x;\n\t\t\t\tobj.verts[i*3 + 1] = vertices[i].y;\n\t\t\t\tobj.verts[i*3 + 2] = vertices[i].z;\n\t\t\t}\n\t\t\tobj.indices = new Array<number>(faces.length*3) /*uint*/;\n\n\t\t\tfor (i = 0; i < faces.length; i++) {\n\t\t\t\tobj.indices[i*3] = faces[i].a;\n\t\t\t\tobj.indices[i*3 + 1] = faces[i].b;\n\t\t\t\tobj.indices[i*3 + 2] = faces[i].c;\n\t\t\t}\n\n\t\t\tif (obj.uvs) {\n\t\t\t\t// If the object had UVs to start with, use UVs generated by\n\t\t\t\t// smoothing group splitting algorithm. Otherwise those UVs\n\t\t\t\t// will be nonsense and should be skipped.\n\t\t\t\tobj.uvs = new Array<number>(vertices.length*2);\n\t\t\t\tfor (i = 0; i < vertices.length; i++) {\n\t\t\t\t\tobj.uvs[i*2] = vertices[i].u;\n\t\t\t\t\tobj.uvs[i*2 + 1] = vertices[i].v;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeom = new Geometry();\n\n\t\t\t// Construct sub-geometries (potentially splitting buffers)\n\t\t\t// and add them to geometry.\n\t\t\tsub = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\tsub.setIndices(obj.indices);\n\t\t\tsub.setPositions(obj.verts);\n\t\t\tsub.setUVs(obj.uvs);\n\n\t\t\tgeom.addSubGeometry(sub);\n\n\t\t\tif (obj.materials.length > 0) {\n\t\t\t\tvar mname:string;\n\t\t\t\tmname = obj.materials[0];\n\t\t\t\tmat = this._materials[mname].material;\n\t\t\t}\n\n\t\t\t// Apply pivot translation to geometry if a pivot was\n\t\t\t// found while parsing the keyframe chunk earlier.\n\t\t\tif (pivot) {\n\t\t\t\tif (obj.transform) {\n\t\t\t\t\t// If a transform was found while parsing the\n\t\t\t\t\t// object chunk, use it to find the local pivot vector\n\t\t\t\t\tvar dat:Array<number> = obj.transform.concat();\n\t\t\t\t\tdat[12] = 0;\n\t\t\t\t\tdat[13] = 0;\n\t\t\t\t\tdat[14] = 0;\n\t\t\t\t\tmtx = new Matrix3D(dat);\n\t\t\t\t\tpivot = mtx.transformVector(pivot);\n\t\t\t\t}\n\n\t\t\t\tpivot.scaleBy(-1);\n\n\t\t\t\tmtx = new Matrix3D();\n\t\t\t\tmtx.appendTranslation(pivot.x, pivot.y, pivot.z);\n\t\t\t\tgeom.applyTransformation(mtx);\n\t\t\t}\n\n\t\t\t// Apply transformation to geometry if a transformation\n\t\t\t// was found while parsing the object chunk earlier.\n\t\t\tif (obj.transform) {\n\t\t\t\tmtx = new Matrix3D(obj.transform);\n\t\t\t\tmtx.invert();\n\t\t\t\tgeom.applyTransformation(mtx);\n\t\t\t}\n\n\t\t\t// Final transform applied to geometry. Finalize the geometry,\n\t\t\t// which will no longer be modified after this point.\n\t\t\tthis._pFinalizeAsset(geom, obj.name.concat('_geom'));\n\n\t\t\t// Build mesh and return it\n\t\t\tmesh = new Mesh(geom, mat);\n\t\t\tmesh.transform.matrix3D = new Matrix3D(obj.transform);\n\t\t\treturn mesh;\n\t\t}\n\n\t\t// If reached, unknown\n\t\treturn null;\n\t}\n\n\tprivate prepareData(vertices:Array<VertexVO>, faces:Array<FaceVO>, obj:ObjectVO):void\n\t{\n\t\t// convert raw ObjectVO's data to structured VertexVO and FaceVO\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar k:number /*int*/;\n\t\tvar len:number /*int*/ = obj.verts.length;\n\t\tfor (i = 0, j = 0, k = 0; i < len;) {\n\t\t\tvar v:VertexVO = new VertexVO;\n\t\t\tv.x = obj.verts[i++];\n\t\t\tv.y = obj.verts[i++];\n\t\t\tv.z = obj.verts[i++];\n\t\t\tif (obj.uvs) {\n\t\t\t\tv.u = obj.uvs[j++];\n\t\t\t\tv.v = obj.uvs[j++];\n\t\t\t}\n\t\t\tvertices[k++] = v;\n\t\t}\n\t\tlen = obj.indices.length;\n\t\tfor (i = 0, k = 0; i < len;) {\n\t\t\tvar f:FaceVO = new FaceVO();\n\t\t\tf.a = obj.indices[i++];\n\t\t\tf.b = obj.indices[i++];\n\t\t\tf.c = obj.indices[i++];\n\t\t\tf.smoothGroup = obj.smoothingGroups[k] || 0;\n\t\t\tfaces[k++] = f;\n\t\t}\n\t}\n\n\tprivate applySmoothGroups(vertices:Array<VertexVO>, faces:Array<FaceVO>):void\n\t{\n\t\t// clone vertices according to following rule:\n\t\t// clone if vertex's in faces from groups 1+2 and 3\n\t\t// don't clone if vertex's in faces from groups 1+2, 3 and 1+3\n\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar k:number /*int*/;\n\t\tvar l:number /*int*/;\n\t\tvar len:number /*int*/;\n\t\tvar numVerts:number /*uint*/ = vertices.length;\n\t\tvar numFaces:number /*uint*/ = faces.length;\n\n\t\t// extract groups data for vertices\n\t\tvar vGroups:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\n\t\tfor (i = 0; i < numVerts; i++)\n\t\t\tvGroups[i] = new Array<number>() /*uint*/;\n\t\tfor (i = 0; i < numFaces; i++) {\n\t\t\tvar face:FaceVO = faces[i];\n\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\tvar groups:Array<number> /*uint*/ = vGroups[(j == 0)? face.a : ((j == 1)? face.b : face.c)];\n\t\t\t\tvar group:number /*uint*/ = face.smoothGroup;\n\t\t\t\tfor (k = groups.length - 1; k >= 0; k--) {\n\t\t\t\t\tif ((group & groups[k]) > 0) {\n\t\t\t\t\t\tgroup |= groups[k];\n\t\t\t\t\t\tgroups.splice(k, 1);\n\t\t\t\t\t\tk = groups.length - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tgroups.push(group);\n\t\t\t}\n\t\t}\n\t\t// clone vertices\n\t\tvar vClones:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\n\t\tfor (i = 0; i < numVerts; i++) {\n\t\t\tif ((len = vGroups[i].length) < 1)\n\t\t\t\tcontinue;\n\t\t\tvar clones:Array<number> /*uint*/ = new Array<number>(len) /*uint*/;\n\t\t\tvClones[i] = clones;\n\t\t\tclones[0] = i;\n\t\t\tvar v0:VertexVO = vertices[i];\n\t\t\tfor (j = 1; j < len; j++) {\n\t\t\t\tvar v1:VertexVO = new VertexVO;\n\t\t\t\tv1.x = v0.x;\n\t\t\t\tv1.y = v0.y;\n\t\t\t\tv1.z = v0.z;\n\t\t\t\tv1.u = v0.u;\n\t\t\t\tv1.v = v0.v;\n\t\t\t\tclones[j] = vertices.length;\n\t\t\t\tvertices.push(v1);\n\t\t\t}\n\t\t}\n\t\tnumVerts = vertices.length;\n\n\t\tfor (i = 0; i < numFaces; i++) {\n\t\t\tface = faces[i];\n\t\t\tgroup = face.smoothGroup;\n\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\tk = (j == 0)? face.a : ((j == 1)? face.b : face.c);\n\t\t\t\tgroups = vGroups[k];\n\t\t\t\tlen = groups.length;\n\t\t\t\tclones = vClones[k];\n\t\t\t\tfor (l = 0; l < len; l++) {\n\t\t\t\t\tif (((group == 0) && (groups[l] == 0)) || ((group & groups[l]) > 0)) {\n\t\t\t\t\t\tvar index:number /*uint*/ = clones[l];\n\t\t\t\t\t\tif (group == 0) {\n\t\t\t\t\t\t\t// vertex is unique if no smoothGroup found\n\t\t\t\t\t\t\tgroups.splice(l, 1);\n\t\t\t\t\t\t\tclones.splice(l, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j == 0)\n\t\t\t\t\t\t\tface.a = index; else if (j == 1)\n\t\t\t\t\t\t\tface.b = index; else\n\t\t\t\t\t\t\tface.c = index;\n\t\t\t\t\t\tl = len;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate finalizeCurrentMaterial():void\n\t{\n\t\tvar mat:MethodMaterial;\n\n\t\tif (this._cur_mat.colorMap)\n\t\t\tmat = new MethodMaterial(this._cur_mat.colorMap.texture || DefaultMaterialManager.getDefaultTexture());\n\t\telse\n\t\t\tmat = new MethodMaterial(this._cur_mat.ambientColor);\n\n\t\tmat.diffuseColor = this._cur_mat.diffuseColor;\n\t\tmat.specularColor = this._cur_mat.specularColor;\n\n\t\tif (this.materialMode >= 2)\n\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS\n\n\t\tmat.bothSides = this._cur_mat.twoSided;\n\n\t\tthis._pFinalizeAsset(mat, this._cur_mat.name);\n\n\t\tthis._materials[this._cur_mat.name] = this._cur_mat;\n\t\tthis._cur_mat.material = mat;\n\n\t\tthis._cur_mat = null;\n\t}\n\n\tprivate readNulTermstring():string\n\t{\n\t\tvar chr:number /*int*/;\n\t\tvar str:string = \"\";\n\n\t\twhile ((chr = this._byteData.readUnsignedByte()) > 0)\n\t\t\tstr += String.fromCharCode(chr);\n\n\t\treturn str;\n\t}\n\n\tprivate readTransform():Array<number>\n\t{\n\t\tvar data:Array<number>;\n\n\t\tdata = new Array<number>(16);\n\n\t\t// X axis\n\t\tdata[0] = this._byteData.readFloat(); // X\n\t\tdata[2] = this._byteData.readFloat(); // Z\n\t\tdata[1] = this._byteData.readFloat(); // Y\n\t\tdata[3] = 0;\n\n\t\t// Z axis\n\t\tdata[8] = this._byteData.readFloat(); // X\n\t\tdata[10] = this._byteData.readFloat(); // Z\n\t\tdata[9] = this._byteData.readFloat(); // Y\n\t\tdata[11] = 0;\n\n\t\t// Y Axis\n\t\tdata[4] = this._byteData.readFloat(); // X\n\t\tdata[6] = this._byteData.readFloat(); // Z\n\t\tdata[5] = this._byteData.readFloat(); // Y\n\t\tdata[7] = 0;\n\n\t\t// Translation\n\t\tdata[12] = this._byteData.readFloat(); // X\n\t\tdata[14] = this._byteData.readFloat(); // Z\n\t\tdata[13] = this._byteData.readFloat(); // Y\n\t\tdata[15] = 1;\n\n\t\treturn data;\n\t}\n\n\tprivate readColor():number /*int*/\n\t{\n\t\tvar cid:number /*int*/;\n\t\tvar len:number /*int*/;\n\t\tvar r:number /*int*/, g:number /*int*/, b:number /*int*/;\n\n\t\tcid = this._byteData.readUnsignedShort();\n\t\tlen = this._byteData.readUnsignedInt();\n\n\t\tswitch (cid) {\n\t\t\tcase 0x0010: // Floats\n\t\t\t\tr = this._byteData.readFloat()*255;\n\t\t\t\tg = this._byteData.readFloat()*255;\n\t\t\t\tb = this._byteData.readFloat()*255;\n\t\t\t\tbreak;\n\t\t\tcase 0x0011: // 24-bit color\n\t\t\t\tr = this._byteData.readUnsignedByte();\n\t\t\t\tg = this._byteData.readUnsignedByte();\n\t\t\t\tb = this._byteData.readUnsignedByte();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n}\n\nexport = Max3DSParser;\n\n/**\n *\n */\nclass FaceVO\n{\n\tpublic a:number /*int*/;\n\tpublic b:number /*int*/;\n\tpublic c:number /*int*/;\n\tpublic smoothGroup:number /*int*/;\n}\n\n/**\n *\n */\nclass MaterialVO\n{\n\tpublic name:string;\n\tpublic ambientColor:number /*int*/;\n\tpublic diffuseColor:number /*int*/;\n\tpublic specularColor:number /*int*/;\n\tpublic twoSided:boolean;\n\tpublic colorMap:TextureVO;\n\tpublic specularMap:TextureVO;\n\tpublic material:MaterialBase;\n}\n\n/**\n *\n */\nclass ObjectVO\n{\n\tpublic name:string;\n\tpublic type:string;\n\tpublic pivotX:number;\n\tpublic pivotY:number;\n\tpublic pivotZ:number;\n\tpublic transform:Array<number>;\n\tpublic verts:Array<number>;\n\tpublic indices:Array<number> /*int*/;\n\tpublic uvs:Array<number>;\n\tpublic materialFaces:Object;\n\tpublic materials:Array<string>;\n\tpublic smoothingGroups:Array<number> /*int*/;\n}\n\n/**\n *\n */\nclass TextureVO\n{\n\tpublic url:string;\n\tpublic texture:Single2DTexture;\n}\n\n/**\n *\n */\nclass VertexVO\n{\n\tpublic x:number;\n\tpublic y:number;\n\tpublic z:number;\n\tpublic u:number;\n\tpublic v:number;\n\tpublic normal:Vector3D;\n\tpublic tangent:Vector3D;\n}",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\n\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\n\n/**\n * OBJParser provides a parser for the OBJ data type.\n */\nclass OBJParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tprivate _charIndex:number;\n\tprivate _oldIndex:number;\n\tprivate _stringLength:number;\n\tprivate _currentObject:ObjectGroup;\n\tprivate _currentGroup:Group;\n\tprivate _currentMaterialGroup:MaterialGroup;\n\tprivate _objects:Array<ObjectGroup>;\n\tprivate _materialIDs:string[];\n\tprivate _materialLoaded:Array<LoadedMaterial>;\n\tprivate _materialSpecularData:Array<SpecularData>;\n\tprivate _meshes:Array<Mesh>;\n\tprivate _lastMtlID:string;\n\tprivate _objectIndex:number;\n\tprivate _realIndices;\n\tprivate _vertexIndex:number;\n\tprivate _vertices:Array<Vertex>;\n\tprivate _vertexNormals:Array<Vertex>;\n\tprivate _uvs:Array<UV>;\n\tprivate _scale:number;\n\tprivate _mtlLib:boolean;\n\tprivate _mtlLibLoaded:boolean = true;\n\tprivate _activeMaterialID:string = \"\";\n\n\t/**\n\t * Creates a new OBJParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(scale:number = 1)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._scale = scale;\n\t}\n\n\t/**\n\t * Scaling factor applied directly to vertices data\n\t * @param value The scaling factor.\n\t */\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"obj\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tvar content:string = ParserUtils.toString(data);\n\t\tvar hasV:boolean = false;\n\t\tvar hasF:boolean = false;\n\n\t\tif (content) {\n\t\t\thasV = content.indexOf(\"\\nv \") != -1;\n\t\t\thasF = content.indexOf(\"\\nf \") != -1;\n\t\t}\n\n\t\treturn hasV && hasF;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif (resourceDependency.id == 'mtl') {\n\t\t\tvar str:string = ParserUtils.toString(resourceDependency.data);\n\t\t\tthis.parseMtl(str);\n\n\t\t} else {\n\t\t\tvar asset:IAsset;\n\n\t\t\tif (resourceDependency.assets.length != 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tasset = resourceDependency.assets[0];\n\n\t\t\tif (asset.isAsset(BitmapImage2D)) {\n\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\t\tlm.materialID = resourceDependency.id;\n\t\t\t\tlm.texture = new Single2DTexture(<BitmapImage2D> asset);\n\n\t\t\t\tthis._materialLoaded.push(lm);\n\n\t\t\t\tif (this._meshes.length > 0) {\n\t\t\t\t\tthis.applyMaterial(lm);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tif (resourceDependency.id == \"mtl\") {\n\t\t\tthis._mtlLib = false;\n\t\t\tthis._mtlLibLoaded = false;\n\t\t} else {\n\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\tlm.materialID = resourceDependency.id;\n\t\t\tthis._materialLoaded.push(lm);\n\t\t}\n\n\t\tif (this._meshes.length > 0)\n\t\t\tthis.applyMaterial(lm);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar line:string;\n\t\tvar creturn:string = String.fromCharCode(10);\n\t\tvar trunk;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\t// Merge linebreaks that are immediately preceeded by\n\t\t\t// the \"escape\" backward slash into single lines.\n\t\t\tthis._textData = this._textData.replace(/\\\\[\\r\\n]+\\s*/gm, ' ');\n\t\t}\n\n\t\tif (this._textData.indexOf(creturn) == -1)\n\t\t\tcreturn = String.fromCharCode(13);\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._startedParsing = true;\n\t\t\tthis._vertices = new Array<Vertex>();\n\t\t\tthis._vertexNormals = new Array<Vertex>();\n\t\t\tthis._materialIDs = new Array<string>();\n\t\t\tthis._materialLoaded = new Array<LoadedMaterial>();\n\t\t\tthis._meshes = new Array<Mesh>();\n\t\t\tthis._uvs = new Array<UV>();\n\t\t\tthis._stringLength = this._textData.length;\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, 0);\n\t\t\tthis._oldIndex = 0;\n\t\t\tthis._objects = new Array<ObjectGroup>();\n\t\t\tthis._objectIndex = 0;\n\t\t}\n\n\t\twhile (this._charIndex < this._stringLength && this._pHasTime()) {\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, this._oldIndex);\n\n\t\t\tif (this._charIndex == -1)\n\t\t\t\tthis._charIndex = this._stringLength;\n\n\t\t\tline = this._textData.substring(this._oldIndex, this._charIndex);\n\t\t\tline = line.split('\\r').join(\"\");\n\t\t\tline = line.replace(\"  \", \" \");\n\t\t\ttrunk = line.split(\" \");\n\t\t\tthis._oldIndex = this._charIndex + 1;\n\t\t\tthis.parseLine(trunk);\n\n\t\t\t// If whatever was parsed on this line resulted in the\n\t\t\t// parsing being paused to retrieve dependencies, break\n\t\t\t// here and do not continue parsing until un-paused.\n\t\t\tif (this.parsingPaused) {\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._charIndex >= this._stringLength) {\n\n\t\t\tif (this._mtlLib && !this._mtlLibLoaded) {\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\n\t\t\tthis.translate();\n\t\t\tthis.applyMaterials();\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\t/**\n\t * Parses a single line in the OBJ file.\n\t */\n\tprivate parseLine(trunk)\n\t{\n\t\tswitch (trunk[0]) {\n\n\t\t\tcase \"mtllib\":\n\n\t\t\t\tthis._mtlLib = true;\n\t\t\t\tthis._mtlLibLoaded = false;\n\t\t\t\tthis.loadMtl(trunk[1]);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"g\":\n\n\t\t\t\tthis.createGroup(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"o\":\n\n\t\t\t\tthis.createObject(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"usemtl\":\n\n\t\t\t\tif (this._mtlLib) {\n\n\t\t\t\t\tif (!trunk[1])\n\t\t\t\t\t\ttrunk[1] = \"def000\";\n\n\t\t\t\t\tthis._materialIDs.push(trunk[1]);\n\t\t\t\t\tthis._activeMaterialID = trunk[1];\n\n\t\t\t\t\tif (this._currentGroup)\n\t\t\t\t\t\tthis._currentGroup.materialID = this._activeMaterialID;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"v\":\n\n\t\t\t\tthis.parseVertex(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"vt\":\n\n\t\t\t\tthis.parseUV(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"vn\":\n\n\t\t\t\tthis.parseVertexNormal(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"f\":\n\n\t\t\t\tthis.parseFace(trunk);\n\n\t\t}\n\t}\n\n\t/**\n\t * Converts the parsed data into an Away3D scenegraph structure\n\t */\n\tprivate translate()\n\t{\n\t\tfor (var objIndex:number = 0; objIndex < this._objects.length; ++objIndex) {\n\t\t\tvar groups:Array<Group> = this._objects[objIndex].groups;\n\t\t\tvar numGroups:number = groups.length;\n\t\t\tvar materialGroups:Array<MaterialGroup>;\n\t\t\tvar numMaterialGroups:number;\n\t\t\tvar geometry:Geometry;\n\t\t\tvar mesh:Mesh;\n\n\t\t\tvar m:number;\n\t\t\tvar sm:number;\n\t\t\tvar bmMaterial:MethodMaterial;\n\n\t\t\tfor (var g:number = 0; g < numGroups; ++g) {\n\t\t\t\tgeometry = new Geometry();\n\t\t\t\tmaterialGroups = groups[g].materialGroups;\n\t\t\t\tnumMaterialGroups = materialGroups.length;\n\n\t\t\t\tfor (m = 0; m < numMaterialGroups; ++m)\n\t\t\t\t\tthis.translateMaterialGroup(materialGroups[m], geometry);\n\n\t\t\t\tif (geometry.subGeometries.length == 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Finalize and force type-based name\n\t\t\t\tthis._pFinalizeAsset(<IAsset> geometry);//, \"\");\n\n\t\t\t\tbmMaterial = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\n\n\t\t\t\t//check for multipass\n\t\t\t\tif (this.materialMode >= 2)\n\t\t\t\t\tbmMaterial.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\tmesh = new Mesh(geometry, bmMaterial);\n\n\t\t\t\tif (this._objects[objIndex].name) {\n\t\t\t\t\t// this is a full independent object ('o' tag in OBJ file)\n\t\t\t\t\tmesh.name = this._objects[objIndex].name;\n\n\t\t\t\t} else if (groups[g].name) {\n\n\t\t\t\t\t// this is a group so the sub groups contain the actual mesh object names ('g' tag in OBJ file)\n\t\t\t\t\tmesh.name = groups[g].name;\n\n\t\t\t\t} else {\n\t\t\t\t\t// No name stored. Use empty string which will force it\n\t\t\t\t\t// to be overridden by finalizeAsset() to type default.\n\t\t\t\t\tmesh.name = \"\";\n\t\t\t\t}\n\n\t\t\t\tthis._meshes.push(mesh);\n\n\t\t\t\tif (groups[g].materialID != \"\")\n\t\t\t\t\tbmMaterial.name = groups[g].materialID + \"~\" + mesh.name; else\n\t\t\t\t\tbmMaterial.name = this._lastMtlID + \"~\" + mesh.name;\n\n\t\t\t\tif (mesh.subMeshes.length > 1) {\n\t\t\t\t\tfor (sm = 1; sm < mesh.subMeshes.length; ++sm)\n\t\t\t\t\t\tmesh.subMeshes[sm].material = bmMaterial;\n\t\t\t\t}\n\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\n\n\t\t\t\tthis._pFinalizeAsset(<IAsset> mesh);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Translates an obj's material group to a subgeometry.\n\t * @param materialGroup The material group data to convert.\n\t * @param geometry The Geometry to contain the converted SubGeometry.\n\t */\n\tprivate translateMaterialGroup(materialGroup:MaterialGroup, geometry:Geometry)\n\t{\n\t\tvar faces:Array<FaceData> = materialGroup.faces;\n\t\tvar face:FaceData;\n\t\tvar numFaces:number = faces.length;\n\t\tvar numVerts:number;\n\t\tvar sub:TriangleSubGeometry;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\t\tvar uvs:Array<number> = new Array<number>();\n\t\tvar normals:Array<number> = new Array<number>();\n\t\tvar indices:Array<number> /*uint*/ = new Array<number>();\n\n\t\tthis._realIndices = [];\n\t\tthis._vertexIndex = 0;\n\n\t\tvar j:number;\n\t\tfor (var i:number = 0; i < numFaces; ++i) {\n\n\t\t\tface = faces[i];\n\t\t\tnumVerts = face.indexIds.length - 1;\n\n\t\t\tfor (j = 1; j < numVerts; ++j) {\n\n\t\t\t\tthis.translateVertexData(face, j, vertices, uvs, indices, normals);\n\t\t\t\tthis.translateVertexData(face, 0, vertices, uvs, indices, normals);\n\t\t\t\tthis.translateVertexData(face, j + 1, vertices, uvs, indices, normals);\n\t\t\t}\n\t\t}\n\t\tif (vertices.length > 0) {\n\t\t\tsub = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\tsub.autoDeriveNormals = normals.length? false : true;\n\t\t\tsub.setIndices(indices);\n\t\t\tsub.setPositions(vertices);\n\t\t\tsub.setNormals(normals);\n\t\t\tsub.setUVs(uvs);\n\n\t\t\tgeometry.addSubGeometry(sub);\n\t\t}\n\t}\n\n\tprivate translateVertexData(face:FaceData, vertexIndex:number, vertices:Array<number>, uvs:Array<number>, indices:Array<number> /*uint*/, normals:Array<number>)\n\t{\n\t\tvar index:number;\n\t\tvar vertex:Vertex;\n\t\tvar vertexNormal:Vertex;\n\t\tvar uv:UV;\n\n\t\tif (!this._realIndices[face.indexIds[vertexIndex]]) {\n\n\t\t\tindex = this._vertexIndex;\n\t\t\tthis._realIndices[face.indexIds[vertexIndex]] = ++this._vertexIndex;\n\t\t\tvertex = this._vertices[face.vertexIndices[vertexIndex] - 1];\n\t\t\tvertices.push(vertex.x*this._scale, vertex.y*this._scale, vertex.z*this._scale);\n\n\t\t\tif (face.normalIndices.length > 0) {\n\t\t\t\tvertexNormal = this._vertexNormals[face.normalIndices[vertexIndex] - 1];\n\t\t\t\tnormals.push(vertexNormal.x, vertexNormal.y, vertexNormal.z);\n\t\t\t}\n\n\t\t\tif (face.uvIndices.length > 0) {\n\n\t\t\t\ttry {\n\t\t\t\t\tuv = this._uvs[face.uvIndices[vertexIndex] - 1];\n\t\t\t\t\tuvs.push(uv.u, uv.v);\n\n\t\t\t\t} catch (e) {\n\n\t\t\t\t\tswitch (vertexIndex) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tuvs.push(0, 1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tuvs.push(.5, 0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tuvs.push(1, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tindex = this._realIndices[face.indexIds[vertexIndex]] - 1;\n\t\t}\n\n\t\tindices.push(index);\n\t}\n\n\t/**\n\t * Creates a new object group.\n\t * @param trunk The data block containing the object tag and its parameters\n\t */\n\tprivate createObject(trunk)\n\t{\n\t\tthis._currentGroup = null;\n\t\tthis._currentMaterialGroup = null;\n\t\tthis._objects.push(this._currentObject = new ObjectGroup());\n\n\t\tif (trunk)\n\t\t\tthis._currentObject.name = trunk[1];\n\t}\n\n\t/**\n\t * Creates a new group.\n\t * @param trunk The data block containing the group tag and its parameters\n\t */\n\tprivate createGroup(trunk)\n\t{\n\t\tif (!this._currentObject)\n\t\t\tthis.createObject(null);\n\t\tthis._currentGroup = new Group();\n\n\t\tthis._currentGroup.materialID = this._activeMaterialID;\n\n\t\tif (trunk)\n\t\t\tthis._currentGroup.name = trunk[1];\n\t\tthis._currentObject.groups.push(this._currentGroup);\n\n\t\tthis.createMaterialGroup(null);\n\t}\n\n\t/**\n\t * Creates a new material group.\n\t * @param trunk The data block containing the material tag and its parameters\n\t */\n\tprivate createMaterialGroup(trunk)\n\t{\n\t\tthis._currentMaterialGroup = new MaterialGroup();\n\t\tif (trunk)\n\t\t\tthis._currentMaterialGroup.url = trunk[1];\n\t\tthis._currentGroup.materialGroups.push(this._currentMaterialGroup);\n\t}\n\n\t/**\n\t * Reads the next vertex coordinates.\n\t * @param trunk The data block containing the vertex tag and its parameters\n\t */\n\tprivate parseVertex(trunk)\n\t{\n\t\t//for the very rare cases of other delimiters/charcodes seen in some obj files\n\n\t\tvar v1:number, v2:number , v3:number;\n\t\tif (trunk.length > 4) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\n\t\t\tv1 = <number> nTrunk[0];\n\t\t\tv2 = <number> nTrunk[1];\n\t\t\tv3 = <number> -nTrunk[2];\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\n\n\t\t} else {\n\t\t\tv1 = <number> parseFloat(trunk[1]);\n\t\t\tv2 = <number> parseFloat(trunk[2]);\n\t\t\tv3 = <number> -parseFloat(trunk[3]);\n\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the next uv coordinates.\n\t * @param trunk The data block containing the uv tag and its parameters\n\t */\n\tprivate parseUV(trunk)\n\t{\n\t\tif (trunk.length > 3) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\t\t\tthis._uvs.push(new UV(nTrunk[0], 1 - nTrunk[1]));\n\n\t\t} else {\n\t\t\tthis._uvs.push(new UV(parseFloat(trunk[1]), 1 - parseFloat(trunk[2])));\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the next vertex normal coordinates.\n\t * @param trunk The data block containing the vertex normal tag and its parameters\n\t */\n\tprivate parseVertexNormal(trunk)\n\t{\n\t\tif (trunk.length > 4) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\t\t\tthis._vertexNormals.push(new Vertex(nTrunk[0], nTrunk[1], -nTrunk[2]));\n\n\t\t} else {\n\t\t\tthis._vertexNormals.push(new Vertex(parseFloat(trunk[1]), parseFloat(trunk[2]), -parseFloat(trunk[3])));\n\t\t}\n\t}\n\n\t/**\n\t * Reads the next face's indices.\n\t * @param trunk The data block containing the face tag and its parameters\n\t */\n\tprivate parseFace(trunk)\n\t{\n\t\tvar len:number = trunk.length;\n\t\tvar face:FaceData = new FaceData();\n\n\t\tif (!this._currentGroup) {\n\t\t\tthis.createGroup(null);\n\t\t}\n\n\t\tvar indices;\n\t\tfor (var i:number = 1; i < len; ++i) {\n\n\t\t\tif (trunk[i] == \"\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices = trunk[i].split(\"/\");\n\t\t\tface.vertexIndices.push(this.parseIndex(parseInt(indices[0]), this._vertices.length));\n\n\t\t\tif (indices[1] && String(indices[1]).length > 0)\n\t\t\t\tface.uvIndices.push(this.parseIndex(parseInt(indices[1]), this._uvs.length));\n\n\t\t\tif (indices[2] && String(indices[2]).length > 0)\n\t\t\t\tface.normalIndices.push(this.parseIndex(parseInt(indices[2]), this._vertexNormals.length));\n\n\t\t\tface.indexIds.push(trunk[i]);\n\t\t}\n\n\t\tthis._currentMaterialGroup.faces.push(face);\n\t}\n\n\t/**\n\t * This is a hack around negative face coords\n\t */\n\tprivate parseIndex(index:number, length:number):number\n\t{\n\t\tif (index < 0)\n\t\t\treturn index + length + 1; else\n\t\t\treturn index;\n\t}\n\n\tprivate parseMtl(data:string)\n\t{\n\t\tvar materialDefinitions = data.split('newmtl');\n\t\tvar lines;\n\t\tvar trunk;\n\t\tvar j:number;\n\n\t\tvar basicSpecularMethod:SpecularBasicMethod;\n\t\tvar useSpecular:boolean;\n\t\tvar useColor:boolean;\n\t\tvar diffuseColor:number;\n\t\tvar color:number;\n\t\tvar specularColor:number;\n\t\tvar specular:number;\n\t\tvar alpha:number;\n\t\tvar mapkd:string;\n\n\t\tfor (var i:number = 0; i < materialDefinitions.length; ++i) {\n\n\n\t\t\tlines = (materialDefinitions[i].split('\\r')).join(\"\").split('\\n');\n\t\t\t//lines = (materialDefinitions[i].split('\\r') as Array).join(\"\").split('\\n');\n\n\t\t\tif (lines.length == 1)\n\t\t\t\tlines = materialDefinitions[i].split(String.fromCharCode(13));\n\n\t\t\tdiffuseColor = color = specularColor = 0xFFFFFF;\n\t\t\tspecular = 0;\n\t\t\tuseSpecular = false;\n\t\t\tuseColor = false;\n\t\t\talpha = 1;\n\t\t\tmapkd = \"\";\n\n\t\t\tfor (j = 0; j < lines.length; ++j) {\n\n\t\t\t\tlines[j] = lines[j].replace(/\\s+$/, \"\");\n\n\t\t\t\tif (lines[j].substring(0, 1) != \"#\" && (j == 0 || lines[j] != \"\")) {\n\t\t\t\t\ttrunk = lines[j].split(\" \");\n\n\t\t\t\t\tif (String(trunk[0]).charCodeAt(0) == 9 || String(trunk[0]).charCodeAt(0) == 32)\n\t\t\t\t\t\ttrunk[0] = trunk[0].substring(1, trunk[0].length);\n\n\t\t\t\t\tif (j == 0) {\n\t\t\t\t\t\tthis._lastMtlID = trunk.join(\"\");\n\t\t\t\t\t\tthis._lastMtlID = (this._lastMtlID == \"\")? \"def000\" : this._lastMtlID;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tswitch (trunk[0]) {\n\n\t\t\t\t\t\t\tcase \"Ka\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3])))\n\t\t\t\t\t\t\t\t\tcolor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Ks\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\n\t\t\t\t\t\t\t\t\tspecularColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\t\tuseSpecular = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Ns\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\n\t\t\t\t\t\t\t\t\tspecular = Number(trunk[1])*0.001;\n\t\t\t\t\t\t\t\tif (specular == 0)\n\t\t\t\t\t\t\t\t\tuseSpecular = false;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Kd\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\n\t\t\t\t\t\t\t\t\tdiffuseColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\t\tuseColor = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"tr\":\n\t\t\t\t\t\t\tcase \"d\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\n\t\t\t\t\t\t\t\t\talpha = Number(trunk[1]);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"map_Kd\":\n\t\t\t\t\t\t\t\tmapkd = this.parseMapKdString(trunk);\n\t\t\t\t\t\t\t\tmapkd = mapkd.replace(/\\\\/g, \"/\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mapkd != \"\") {\n\n\t\t\t\tif (useSpecular) {\n\n\t\t\t\t\tbasicSpecularMethod = new SpecularBasicMethod();\n\t\t\t\t\tbasicSpecularMethod.specularColor = specularColor;\n\t\t\t\t\tbasicSpecularMethod.specular = specular;\n\n\t\t\t\t\tvar specularData:SpecularData = new SpecularData();\n\t\t\t\t\tspecularData.alpha = alpha;\n\t\t\t\t\tspecularData.basicSpecularMethod = basicSpecularMethod;\n\t\t\t\t\tspecularData.materialID = this._lastMtlID;\n\n\t\t\t\t\tif (!this._materialSpecularData)\n\t\t\t\t\t\tthis._materialSpecularData = new Array<SpecularData>();\n\n\t\t\t\t\tthis._materialSpecularData.push(specularData);\n\n\t\t\t\t}\n\n\t\t\t\tthis._pAddDependency(this._lastMtlID, new URLRequest(mapkd));\n\n\t\t\t} else if (useColor && !isNaN(color)) {\n\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\t\tlm.materialID = this._lastMtlID;\n\n\t\t\t\tif (alpha == 0)\n\t\t\t\t\tconsole.log(\"Warning: an alpha value of 0 was found in mtl color tag (Tr or d) ref:\" + this._lastMtlID + \", mesh(es) using it will be invisible!\");\n\n\t\t\t\tvar cm:MethodMaterial;\n\n\t\t\t\tif (this.materialMode < 2) {\n\t\t\t\t\tcm = new MethodMaterial(color);\n\n\t\t\t\t\tvar colorMat:MethodMaterial = <MethodMaterial> cm;\n\n\t\t\t\t\tcolorMat.alpha = alpha;\n\t\t\t\t\tcolorMat.diffuseColor = diffuseColor;\n\t\t\t\t\tcolorMat.repeat = true;\n\n\t\t\t\t\tif (useSpecular) {\n\t\t\t\t\t\tcolorMat.specularColor = specularColor;\n\t\t\t\t\t\tcolorMat.specular = specular;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tcm = new MethodMaterial(color);\n\t\t\t\t\tcm.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\t\tvar colorMultiMat:MethodMaterial = <MethodMaterial> cm;\n\n\n\t\t\t\t\tcolorMultiMat.diffuseColor = diffuseColor;\n\t\t\t\t\tcolorMultiMat.repeat = true;\n\n\t\t\t\t\tif (useSpecular) {\n\t\t\t\t\t\tcolorMultiMat.specularColor = specularColor;\n\t\t\t\t\t\tcolorMultiMat.specular = specular;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlm.cm = cm;\n\n\t\t\t\tthis._materialLoaded.push(lm);\n\n\t\t\t\tif (this._meshes.length > 0)\n\t\t\t\t\tthis.applyMaterial(lm);\n\n\t\t\t}\n\t\t}\n\n\t\tthis._mtlLibLoaded = true;\n\t}\n\n\tprivate parseMapKdString(trunk):string\n\t{\n\t\tvar url:string = \"\";\n\t\tvar i:number;\n\t\tvar breakflag:boolean;\n\n\t\tfor (i = 1; i < trunk.length;) {\n\t\t\tswitch (trunk[i]) {\n\t\t\t\tcase \"-blendu\":\n\t\t\t\tcase \"-blendv\":\n\t\t\t\tcase \"-cc\":\n\t\t\t\tcase \"-clamp\":\n\t\t\t\tcase \"-texres\":\n\t\t\t\t\ti += 2; //Skip ahead 1 attribute\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"-mm\":\n\t\t\t\t\ti += 3; //Skip ahead 2 attributes\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"-o\":\n\t\t\t\tcase \"-s\":\n\t\t\t\tcase \"-t\":\n\t\t\t\t\ti += 4; //Skip ahead 3 attributes\n\t\t\t\t\tcontinue;\n\t\t\t\tdefault:\n\t\t\t\t\tbreakflag = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (breakflag)\n\t\t\t\tbreak;\n\t\t}\n\n\t\t//Reconstruct URL/filename\n\t\tfor (i; i < trunk.length; i++) {\n\t\t\turl += trunk[i];\n\t\t\turl += \" \";\n\t\t}\n\n\t\t//Remove the extraneous space and/or newline from the right side\n\t\turl = url.replace(/\\s+$/, \"\");\n\n\t\treturn url;\n\t}\n\n\tprivate loadMtl(mtlurl:string)\n\t{\n\t\t// Add raw-data dependency to queue and load dependencies now,\n\t\t// which will pause the parsing in the meantime.\n\t\tthis._pAddDependency('mtl', new URLRequest(mtlurl), true);\n\t\tthis._pPauseAndRetrieveDependencies();//\n\t}\n\n\tprivate applyMaterial(lm:LoadedMaterial)\n\t{\n\t\tvar decomposeID;\n\t\tvar mesh:Mesh;\n\t\tvar tm:MethodMaterial;\n\t\tvar j:number;\n\t\tvar specularData:SpecularData;\n\n\t\tfor (var i:number = 0; i < this._meshes.length; ++i) {\n\t\t\tmesh = this._meshes[i];\n\t\t\tdecomposeID = mesh.material.name.split(\"~\");\n\n\t\t\tif (decomposeID[0] == lm.materialID) {\n\n\t\t\t\tif (lm.cm) {\n\t\t\t\t\tif (mesh.material)\n\t\t\t\t\t\tmesh.material = null;\n\t\t\t\t\tmesh.material = lm.cm;\n\n\t\t\t\t} else if (lm.texture) {\n\t\t\t\t\tif (this.materialMode < 2) { // if materialMode is 0 or 1, we create a SinglePass\n\t\t\t\t\t\ttm = <MethodMaterial > mesh.material;\n\n\t\t\t\t\t\ttm.texture = lm.texture;\n\t\t\t\t\t\ttm.color = lm.color;\n\t\t\t\t\t\ttm.alpha = lm.alpha;\n\t\t\t\t\t\ttm.repeat = true;\n\n\t\t\t\t\t\tif (lm.specularMethod) {\n\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\n\t\t\t\t\t\t\ttm.specularMethod = null;\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\n\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\n\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\n\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\n\t\t\t\t\t\t\t\t\ttm.alpha = specularData.alpha;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { //if materialMode==2 this is a MultiPassTexture\n\t\t\t\t\t\ttm = <MethodMaterial> mesh.material;\n\t\t\t\t\t\ttm.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\t\t\ttm.texture = lm.texture;\n\t\t\t\t\t\ttm.color = lm.color;\n\t\t\t\t\t\ttm.repeat = true;\n\n\t\t\t\t\t\tif (lm.specularMethod) {\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\n\t\t\t\t\t\t\ttm.specularMethod = null;\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\n\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmesh.material.name = decomposeID[1]? decomposeID[1] : decomposeID[0];\n\t\t\t\tthis._meshes.splice(i, 1);\n\t\t\t\t--i;\n\t\t\t}\n\t\t}\n\n\t\tif (lm.cm || tm)\n\t\t\tthis._pFinalizeAsset(lm.cm || tm);\n\t}\n\n\tprivate applyMaterials()\n\t{\n\t\tif (this._materialLoaded.length == 0)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._materialLoaded.length; ++i)\n\t\t\tthis.applyMaterial(this._materialLoaded[i]);\n\t}\n}\n\nexport = OBJParser;\n\nclass ObjectGroup\n{\n\tpublic name:string;\n\tpublic groups:Group[] = new Array<Group>();\n}\n\nclass Group\n{\n\tpublic name:string;\n\tpublic materialID:string;\n\tpublic materialGroups:MaterialGroup[] = new Array<MaterialGroup>();\n}\n\nclass MaterialGroup\n{\n\tpublic url:string;\n\tpublic faces:FaceData[] = new Array<FaceData>();\n}\n\nclass SpecularData\n{\n\tpublic materialID:string;\n\tpublic basicSpecularMethod:SpecularBasicMethod;\n\tpublic color:number = 0xFFFFFF;\n\tpublic alpha:number = 1;\n}\n\nclass LoadedMaterial\n{\n\tpublic materialID:string;\n\tpublic texture:Single2DTexture;\n\tpublic cm:MaterialBase;\n\tpublic specularMethod:SpecularBasicMethod;\n\tpublic color:number = 0xFFFFFF;\n\tpublic alpha:number = 1;\n}\n\nclass FaceData\n{\n\tpublic vertexIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic uvIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic normalIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic indexIds:string[] = new Array<string>(); // used for real index lookups\n}\n\n/**\n* Texture coordinates value object.\n*/\nclass UV\n{\n\tprivate _u:number;\n\tprivate _v:number;\n\n\t/**\n\t * Creates a new <code>UV</code> object.\n\t *\n\t * @param    u        [optional]    The horizontal coordinate of the texture value. Defaults to 0.\n\t * @param    v        [optional]    The vertical coordinate of the texture value. Defaults to 0.\n\t */\n\tconstructor(u:number = 0, v:number = 0)\n\t{\n\t\tthis._u = u;\n\t\tthis._v = v;\n\t}\n\n\t/**\n\t * Defines the vertical coordinate of the texture value.\n\t */\n\tpublic get v():number\n\t{\n\t\treturn this._v;\n\t}\n\n\tpublic set v(value:number)\n\t{\n\t\tthis._v = value;\n\t}\n\n\t/**\n\t * Defines the horizontal coordinate of the texture value.\n\t */\n\tpublic get u():number\n\t{\n\t\treturn this._u;\n\t}\n\n\tpublic set u(value:number)\n\t{\n\t\tthis._u = value;\n\t}\n\n\t/**\n\t * returns a new UV value Object\n\t */\n\tpublic clone():UV\n\t{\n\t\treturn new UV(this._u, this._v);\n\t}\n\n\t/**\n\t * returns the value object as a string for trace/debug purpose\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._u + \",\" + this._v;\n\t}\n}\n\nclass Vertex\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _z:number;\n\tprivate _index:number;\n\n\t/**\n\t * Creates a new <code>Vertex</code> value object.\n\t *\n\t * @param    x            [optional]    The x value. Defaults to 0.\n\t * @param    y            [optional]    The y value. Defaults to 0.\n\t * @param    z            [optional]    The z value. Defaults to 0.\n\t * @param    index        [optional]    The index value. Defaults is NaN.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, index:number = 0)\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._index = index;\n\t}\n\n\t/**\n\t * To define/store the index of value object\n\t * @param    ind        The index\n\t */\n\tpublic set index(ind:number)\n\t{\n\t\tthis._index = ind;\n\t}\n\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n\n\t/**\n\t * To define/store the x value of the value object\n\t * @param    value        The x value\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tthis._x = value;\n\t}\n\n\t/**\n\t * To define/store the y value of the value object\n\t * @param    value        The y value\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tthis._y = value;\n\t}\n\n\t/**\n\t * To define/store the z value of the value object\n\t * @param    value        The z value\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(value:number)\n\t{\n\t\tthis._z = value;\n\t}\n\n\t/**\n\t * returns a new Vertex value Object\n\t */\n\tpublic clone():Vertex\n\t{\n\t\treturn new Vertex(this._x, this._y, this._z);\n\t}\n}",
    "import AssetLoader\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\n\nimport AWDParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWDParser\");\nimport Max3DSParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/Max3DSParser\");\nimport MD2Parser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/MD2Parser\");\nimport OBJParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/OBJParser\");\n\n/**\n *\n */\nclass Parsers\n{\n\t/**\n\t * A list of all parsers that come bundled with Away3D. Use this to quickly\n\t * enable support for all bundled parsers to the file format auto-detection\n\t * feature, using any of the enableParsers() methods on loaders, e.g.:\n\t *\n\t * <code>AssetLibrary.enableParsers(Parsers.ALL_BUNDLED);</code>\n\t *\n\t * Beware however that this requires all parser classes to be included in the\n\t * SWF file, which will add 50-100 kb to the file. When only a limited set of\n\t * file formats are used, SWF file size can be saved by adding the parsers\n\t * individually using AssetLibrary.enableParser()\n\t *\n\t * A third way is to specify a parser for each loaded file, thereby bypassing\n\t * the auto-detection mechanisms altogether, while at the same time allowing\n\t * any properties that are unique to that parser to be set for that load.\n\t *\n\t * The bundled parsers are:\n\t *\n\t * <ul>\n\t * <li>AC3D (.ac)</li>\n\t * <li>Away Data version 1 ASCII and version 2 binary (.awd). AWD1 BSP unsupported</li>\n\t * <li>3DMax (.3ds)</li>\n\t * <li>DXF (.dxf)</li>\n\t * <li>Quake 2 MD2 models (.md2)</li>\n\t * <li>Doom 3 MD5 animation clips (.md5anim)</li>\n\t * <li>Doom 3 MD5 meshes (.md5mesh)</li>\n\t * <li>Wavefront OBJ (.obj)</li>\n\t * <li>Collada (.dae)</li>\n\t * <li>Images (.jpg, .png)</li>\n\t * </ul>\n\t *\n\t * @see away.library.AssetLibrary.enableParser\n\t */\n\tpublic static ALL_BUNDLED:Array<Object> = Array<Object>(AWDParser, Max3DSParser, MD2Parser, OBJParser);\n\n\t/**\n\t * Short-hand function to enable all bundled parsers for auto-detection. In practice,\n\t * this is the same as invoking enableParsers(Parsers.ALL_BUNDLED) on any of the\n\t * loader classes SingleFileLoader, AssetLoader, AssetLibrary or Loader3D.\n\t *\n\t * See notes about file size in the documentation for the ALL_BUNDLED constant.\n\t *\n\t * @see away.parsers.Parsers.ALL_BUNDLED\n\t */\n\tpublic static enableAllBundled():void\n\t{\n\t\tAssetLoader.enableParsers(Parsers.ALL_BUNDLED);\n\t}\n}\n\nexport = Parsers;"
  ],
  "sourceRoot": ""
}