{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils.ts",
    "awayjs-parsers.js",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBlock.ts",
    "awayjs-parsers/lib/AWDParser.ts",
    "awayjs-parsers/lib/MD2Parser.ts",
    "awayjs-parsers/lib/MD5AnimParser.ts",
    "awayjs-parsers/lib/MD5MeshParser.ts",
    "awayjs-parsers/lib/Max3DSParser.ts",
    "awayjs-parsers/lib/OBJParser.ts",
    "awayjs-parsers/lib/Parsers.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils",
    "module",
    "AWD3Utils",
    "BLOCKSTATE_FINALIZE",
    "BLOCKSTATE_INVALID",
    "BLOCKSTATE_LOAD_DEPENDENICES",
    "BLOCKSTATE_NO_ASSET",
    "COMPRESSIONMODE_LZMA",
    "UNCOMPRESSED",
    "DEFLATE",
    "LZMA",
    "INT8",
    "INT16",
    "INT32",
    "UINT8",
    "UINT16",
    "UINT32",
    "FLOAT32",
    "FLOAT64",
    "BOOL",
    "COLOR",
    "BADDR",
    "AWDSTRING",
    "AWDBYTEARRAY",
    "VECTOR2x1",
    "VECTOR3x1",
    "VECTOR4x1",
    "MTX3x2",
    "MTX3x3",
    "MTX4x3",
    "MTX4x4",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBlock",
    "AWDBlock",
    "this_id",
    "this_type",
    "this",
    "type",
    "id",
    "state",
    "dependencies_data",
    "Array",
    "dependencies_urls",
    "loaded_dependencies",
    "loaded_dependencies_cnt",
    "prototype",
    "dispose",
    "bytes",
    "errorMessages",
    "uvsForVertexAnimation",
    "addError",
    "errorMsg",
    "push",
    "awayjs-parsers/lib/AWDParser",
    "__extends",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "AttributesBuffer",
    "Float3Attributes",
    "Float2Attributes",
    "Byte4Attributes",
    "BitmapImageCube",
    "BlendMode",
    "Sampler2D",
    "ColorTransform",
    "Matrix3D",
    "Vector3D",
    "URLLoaderDataFormat",
    "URLRequest",
    "ParserBase",
    "ParserUtils",
    "PerspectiveProjection",
    "OrthographicProjection",
    "OrthographicOffCenterProjection",
    "ByteArray",
    "DisplayObjectContainer",
    "Graphics",
    "TriangleElements",
    "DirectionalLight",
    "PointLight",
    "Camera",
    "Sprite",
    "Billboard",
    "Skybox",
    "DefaultMaterialManager",
    "StaticLightPicker",
    "CubeMapShadowMapper",
    "DirectionalShadowMapper",
    "PrefabBase",
    "PrimitiveCapsulePrefab",
    "PrimitiveConePrefab",
    "PrimitiveCubePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitivePlanePrefab",
    "PrimitiveSpherePrefab",
    "PrimitiveTorusPrefab",
    "SingleCubeTexture",
    "Single2DTexture",
    "VertexAnimationSet",
    "VertexAnimator",
    "SkeletonAnimationSet",
    "SkeletonAnimator",
    "JointPose",
    "Skeleton",
    "SkeletonPose",
    "SkeletonJoint",
    "SkeletonClipNode",
    "VertexClipNode",
    "MethodMaterialMode",
    "MethodMaterial",
    "AmbientEnvMapMethod",
    "DiffuseDepthMethod",
    "DiffuseCelMethod",
    "DiffuseGradientMethod",
    "DiffuseLightMapMethod",
    "DiffuseWrapMethod",
    "EffectAlphaMaskMethod",
    "EffectColorMatrixMethod",
    "EffectColorTransformMethod",
    "EffectEnvMapMethod",
    "EffectFogMethod",
    "EffectFresnelEnvMapMethod",
    "EffectLightMapMethod",
    "EffectRimLightMethod",
    "NormalSimpleWaterMethod",
    "ShadowDitheredMethod",
    "ShadowFilteredMethod",
    "SpecularFresnelMethod",
    "ShadowHardMethod",
    "SpecularAnisotropicMethod",
    "SpecularCelMethod",
    "SpecularPhongMethod",
    "ShadowNearMethod",
    "ShadowSoftMethod",
    "BasicMaterial",
    "AS2SceneGraphFactory",
    "Timeline",
    "AssetLibrary",
    "Font",
    "TextFormat",
    "Rectangle",
    "Style",
    "Matrix",
    "MappingMode",
    "ElementsType",
    "AWDParser",
    "_super",
    "view",
    "ARRAY_BUFFER",
    "_debug",
    "_debugTimers",
    "_startedParsing",
    "_texture_users",
    "_parsed_header",
    "_time_all",
    "_time_graphics",
    "_time_graphics_bytes",
    "_time_timeline",
    "_time_fonts",
    "_time_textfields",
    "_time_sounds",
    "_time_textures",
    "_time_materials",
    "_time_sprites",
    "_num_graphics",
    "_num_timeline",
    "_num_fonts",
    "_num_textfields",
    "_num_sounds",
    "_num_textures",
    "_num_materials",
    "_num_sprites",
    "shadowMethodListProperties",
    1,
    2,
    3,
    101,
    "PROPERTY_NUMBER",
    102,
    103,
    201,
    202,
    301,
    302,
    401,
    402,
    601,
    602,
    701,
    702,
    801,
    "spritePoseAnimationProperties",
    "sharedMethodListProperties",
    104,
    105,
    106,
    107,
    "_view",
    "_blocks",
    "data",
    "blendModeDic",
    "NORMAL",
    "ADD",
    "ALPHA",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "_depthSizeDic",
    "_version",
    "supportsType",
    "extension",
    "toLowerCase",
    "supportsData",
    "toString",
    "_iResolveDependency",
    "resourceDependency",
    "assets",
    "this_block",
    "parseInt",
    "image_asset",
    "_pFinalizeAsset",
    "name",
    "console",
    "log",
    "audio_asset",
    "sub_id",
    "cube_image_asset",
    "width",
    "draw",
    "_isParsing",
    "updateTimers",
    "_iResolveDependencyFailure",
    "_iResolveDependencyName",
    "asset",
    "oldName",
    "block",
    "resetAssetPath",
    "newName",
    "_pProceedParsing",
    "_byteData",
    "_pGetByteData",
    "parseHeader",
    "_compression",
    "_pDieWithError",
    "_body",
    "getBytesAvailable",
    "parsingPaused",
    "parseNextBlock",
    "PARSING_DONE",
    "MORE_TO_PARSE",
    "_pStartParsing",
    "frameLimit",
    "_pContent",
    "c",
    "isParsed",
    "ns",
    "flags",
    "len",
    "start_timeing",
    "performance",
    "now",
    "_cur_block_id",
    "readUnsignedInt",
    "readUnsignedByte",
    "blockCompression",
    "BitFlags",
    "test",
    "FLAG4",
    "blockCompressionLZMA",
    "FLAG5",
    "_accuracyOnBlocks",
    "_accuracyMatrix",
    "FLAG1",
    "_accuracyGeo",
    "FLAG2",
    "_accuracyProps",
    "FLAG3",
    "blockEndAll",
    "position",
    "_newBlockBytes",
    "readBytes",
    "blockEndBlock",
    "factory",
    "parseSpriteLibraryBlock",
    "parseBillBoardLibraryBlock",
    "parseAudioBlock",
    "parseMovieClip",
    "parseTextField",
    "parseTesselatedFont",
    "parseTextFormat",
    "parsePrimitves",
    "parseSkyboxInstance",
    "parseLight",
    "parseCamera",
    "parseLightPicker",
    "parseMaterial_v1",
    "parseCubeTexture",
    "parseSharedMethodBlock",
    "parseShadowMethodBlock",
    "parseSpritePoseAnimation",
    "parseVertexAnimationSet",
    "parseAnimatorSet",
    "parseCommand",
    "parseGraphics",
    "parseContainer",
    "parseSpriteInstance",
    "parseMaterial",
    "parseTexture",
    "parseSkeleton",
    "parseSkeletonPose",
    "parseSkeletonAnimation",
    "parseNameSpace",
    "parseMetaData",
    "msgCnt",
    "end_timing",
    "time_delta",
    "blockID",
    "parseVarStr",
    "new_font",
    "getAsset",
    "newfont",
    "undefined",
    "font_style_cnt",
    "font_style_char_cnt",
    "font_style_name",
    "new_font_style",
    "font_style_char",
    "attr_count",
    "sm_len",
    "sm_end",
    "str_ftype",
    "str_type",
    "str_len",
    "str_end",
    "get_font_table",
    "set_font_em_size",
    "set_whitespace_width",
    "ascent",
    "readFloat",
    "descent",
    "j",
    "char_width",
    "indices",
    "idx",
    "readUnsignedShort",
    "curveData",
    "vertexBuffer",
    "bufferView",
    "Uint8Array",
    "arraybytes",
    "curve_elements",
    "setPositions",
    "setCustomAttributes",
    "setUVs",
    "setChar",
    "parseProperties",
    "parseUserAttributes",
    "font",
    "newTextFormat",
    "font_name",
    "font_table",
    "font_style",
    "mat",
    "bothSides",
    "curves",
    "num_uv_values",
    "uv_values",
    "uvcnt",
    "format_props",
    "textFormatProperties",
    "size",
    "get",
    "letterSpacing",
    "kerning",
    "tf_align_int",
    "align",
    "indent",
    "leftMargin",
    "rightMargin",
    "leading",
    "material",
    "newTextField",
    "createTextField",
    "text_field_type",
    "textFieldTypes",
    "displayAsPassword",
    "textWidth",
    "Math",
    "abs",
    "textHeight",
    "num_paragraphs",
    "complete_text",
    "paracnt",
    "num_textruns",
    "textrun_cnt",
    "text_format",
    "txt_length",
    "this_txt",
    "readUTFBytes",
    "textFormat",
    "text",
    "props",
    "textFieldProperties",
    "selectable",
    "border",
    "extra",
    "billboard",
    "data_id",
    "graphics",
    "geoID",
    "num_materials",
    "materials",
    "materialNames",
    "materials_parsed",
    "getDefaultMaterial",
    "alphaBlending",
    "useColorTransform",
    "sprite",
    "copyTo",
    "count",
    "getGraphicAt",
    "min",
    "sampler",
    "graphic",
    "style",
    "addSamplerAt",
    "getTextureAt",
    "tx",
    "ty",
    "animateUVs",
    "uvMatrix",
    "matrix",
    "parseMatrix32RawData",
    "newMatrix",
    "x",
    "y",
    "height",
    "imageRect",
    "elements",
    "getCustomAtributes",
    "data_len",
    "url",
    "_pAddDependency",
    "extras",
    "_pPauseAndRetrieveDependencies",
    "cmd_asset",
    "new_timeline",
    "new_mc",
    "createMovieClip",
    "num_potential_childs",
    "registerPotentialChild",
    "num_all_display_instances",
    "num_potential_childs_multi_instanced",
    "num_instances",
    "num_potential_sounds",
    "str_cnt",
    "str_data_type",
    "str_counter",
    "keyframes_start_indices_data",
    "new_buffer",
    "Uint16Array",
    "Uint32Array",
    "keyframe_durations",
    "numKeyFrames",
    "frame_command_indices",
    "frame_recipe",
    "command_length_stream",
    "command_index_stream",
    "add_child_stream",
    "remove_child_stream",
    "update_child_stream",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "properties_stream_int",
    "lc",
    "float_array_data",
    "properties_stream_f32_mtx_scale_rot",
    "Float32Array",
    "properties_stream_f32_mtx_pos",
    "properties_stream_f32_mtx_all",
    "properties_stream_f32_ct",
    "_labels",
    "string_props_array",
    "properties_stream_strings",
    "frame_index",
    "one_str_len",
    "add_framescript",
    "init",
    "sceneID",
    "fps",
    "movieClipProperties",
    "timeline",
    "numFrames",
    "numElements",
    "graphicsProperties",
    "geoScaleU",
    "geoScaleV",
    "elements_parsed",
    "is_curve_elements",
    "w_indices",
    "weights",
    "elementsProps",
    "elementsProperties",
    "z",
    "verts",
    "readNumber",
    "uvs",
    "normals",
    "addGraphic",
    "triangle_elements",
    "jointsPerVertex",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "setIndices",
    "setNormals",
    "setJointWeights",
    "setJointIndices",
    "scaleU",
    "scaleV",
    "setSubUVs",
    "scaleUV",
    "prefab",
    "primType",
    "bsm",
    "primitiveProperties",
    "TRIANGLE",
    "topClosed",
    "bottomClosed",
    "yUp",
    "primitiveTypes",
    "mtx",
    "ctr",
    "parent",
    "parseMatrix3D",
    "parentName",
    "transform",
    "matrix3D",
    "addChild",
    "containerProperties",
    "pivot",
    "isPrefab",
    "isAsset",
    "getNewObject",
    "spriteInstanceProperties",
    "castsShadows",
    "tex",
    "getDefaultImageCube",
    "texture",
    "light",
    "newShadowMapper",
    "lightType",
    "lightProperties",
    "shadowMapperType",
    "lightTypes",
    "shadowMapperTypes",
    "radius",
    "fallOff",
    "color",
    "specular",
    "diffuse",
    "ambientColor",
    "ambient",
    "depthMapSize",
    "shadowMapper",
    "projection",
    "readShort",
    "projectiontype",
    "cameraProperties",
    "camera",
    "cameraPivotProperties",
    "numLights",
    "lightsArray",
    "lightsArrayNames",
    "k",
    "lightPick",
    "finalize",
    "num_methods",
    "methods_parsed",
    "returnedArray",
    "materialProperties",
    "method_type",
    "debugString",
    "materialMode",
    "mode",
    "MULTI_PASS",
    "ambientMethod",
    "alpha",
    "alphaThreshold",
    "diffuseImage",
    "normalImage",
    "specImage",
    "material_v1Properties",
    "spezialType",
    "lightPicker",
    "alphaPremultiplied",
    "blendMode",
    "diffuseTexture",
    "normalMethod",
    "specularMethod",
    "strength",
    "diffuseMethod",
    "gloss",
    "method_v1Properties",
    "effectMethod",
    "addEffectMethod",
    "shadowMapMethod",
    "shadowMethod",
    "cubeTexture",
    "smoothness",
    "fresnelPower",
    "normalReflectance",
    "mappingMode",
    "LINEAR_GRADIENT",
    "RADIAL_GRADIENT",
    "basic_mat",
    "byteArrayToImage",
    "parseSharedMethodList",
    "parseShadowMethodList",
    "hasBlocks",
    "parentObject",
    "targetObject",
    "numCommands",
    "typeCommand",
    "commandProperties",
    "targetProperties",
    "metaDataProperties",
    "nameSpaceString",
    "methodType",
    "targetID",
    "epsilon",
    "range",
    "num_joints",
    "skeleton",
    "joints_parsed",
    "joint",
    "ibp",
    "parentIndex",
    "inverseBindPose",
    "rawData",
    "joints",
    "pose",
    "joint_pose",
    "has_transform",
    "mtx_data",
    "parseMatrix43RawData",
    "orientation",
    "fromMatrix",
    "translation",
    "copyFrom",
    "jointPoses",
    "frame_dur",
    "pose_id",
    "clip",
    "num_frames",
    "frames_parsed",
    "addFrame",
    "frames",
    "poseOnly",
    "subSpriteParsed",
    "streamtypes",
    "geo_id",
    "getUVForVertexAnimation",
    "num_subsprites",
    "num_Streams",
    "streamsParsed",
    "looping",
    "stitchFinalFrame",
    "setTangents",
    "vertexAnimationSetProperties",
    "skeletonFrames",
    "vertexFrames",
    "clipNode",
    "newVertexAnimationSet",
    "addAnimation",
    "animations",
    "animationNames",
    "newSkeletonAnimationSet",
    "animatorSetProperties",
    "targetAnimationSet",
    "targetSpritees",
    "targetSpriteLength",
    "activeState",
    "autoplay",
    "thisAnimator",
    "animator",
    "effectMethodReturn",
    "offCol",
    "colorTransform",
    "list_len",
    "list_end",
    "attributes",
    "attibuteCnt",
    "ns_id",
    "attr_key",
    "attr_type",
    "attr_len",
    "attr_val",
    "readByte",
    "readInt",
    "readDouble",
    "expected",
    "AWDProperties",
    "key",
    "propertyCnt",
    "set",
    "parseAttrValue",
    "elem_len",
    "read_func",
    "accuracy",
    "GEO_NUMBER",
    "MATRIX_NUMBER",
    "list",
    "num_elems",
    "num_read",
    "_streaming",
    "body_len",
    "spriteID",
    "geoCnt",
    "numVertices",
    "precision",
    "mtx_raw",
    "isNaN",
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    110,
    111,
    303,
    703,
    704,
    11,
    12,
    21,
    22,
    23,
    13,
    15,
    16,
    17,
    18,
    19,
    20,
    "value",
    "fallback",
    "testFlag",
    "FLAG6",
    "FLAG7",
    "FLAG8",
    "FLAG9",
    "FLAG10",
    "FLAG11",
    "FLAG12",
    "FLAG13",
    "FLAG14",
    "FLAG15",
    "FLAG16",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/Matrix",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/image/BitmapImageCube",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-core/lib/image/Sampler2D",
    "awayjs-core/lib/library/AssetLibrary",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/net/URLRequest",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "awayjs-core/lib/projections/OrthographicProjection",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-core/lib/utils/ByteArray",
    "awayjs-display/lib/base/Style",
    "awayjs-display/lib/base/Timeline",
    "awayjs-display/lib/display/Billboard",
    "awayjs-display/lib/display/Camera",
    "awayjs-display/lib/display/DirectionalLight",
    "awayjs-display/lib/display/DisplayObjectContainer",
    "awayjs-display/lib/display/PointLight",
    "awayjs-display/lib/display/Skybox",
    "awayjs-display/lib/display/Sprite",
    "awayjs-display/lib/graphics/ElementsType",
    "awayjs-display/lib/graphics/Graphics",
    "awayjs-display/lib/graphics/TriangleElements",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/prefabs/PrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "awayjs-display/lib/text/Font",
    "awayjs-display/lib/text/TextFormat",
    "awayjs-display/lib/textures/MappingMode",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "awayjs-methodmaterials/lib/MethodMaterial",
    "awayjs-methodmaterials/lib/MethodMaterialMode",
    "awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseCelMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseDepthMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseGradientMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseWrapMethod",
    "awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod",
    "awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod",
    "awayjs-methodmaterials/lib/methods/EffectColorTransformMethod",
    "awayjs-methodmaterials/lib/methods/EffectEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectFogMethod",
    "awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectLightMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectRimLightMethod",
    "awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod",
    "awayjs-methodmaterials/lib/methods/ShadowDitheredMethod",
    "awayjs-methodmaterials/lib/methods/ShadowFilteredMethod",
    "awayjs-methodmaterials/lib/methods/ShadowHardMethod",
    "awayjs-methodmaterials/lib/methods/ShadowNearMethod",
    "awayjs-methodmaterials/lib/methods/ShadowSoftMethod",
    "awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod",
    "awayjs-methodmaterials/lib/methods/SpecularCelMethod",
    "awayjs-methodmaterials/lib/methods/SpecularFresnelMethod",
    "awayjs-methodmaterials/lib/methods/SpecularPhongMethod",
    "awayjs-player/lib/factories/AS2SceneGraphFactory",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "awayjs-parsers/lib/MD2Parser",
    "MD2Parser",
    "textureType",
    "ignoreTexturePath",
    "_clipNodes",
    "Object",
    "_animationSet",
    "materialFinal",
    "graphicsCreated",
    "_textureType",
    "_ignoreTexturePath",
    "_sprite",
    "getDefaultImage2D",
    "_pHasTime",
    "_parsedHeader",
    "_graphics",
    "parseMaterialNames",
    "_parsedUV",
    "parseUV",
    "_parsedFaces",
    "parseFaces",
    "_parsedFrames",
    "parseFrames",
    "_firstElements",
    "clone",
    "_ident",
    "_skinWidth",
    "_skinHeight",
    "_numSkins",
    "_numVertices",
    "_numST",
    "_numTris",
    "_numFrames",
    "_offsetSkins",
    "_offsetST",
    "_offsetTris",
    "_offsetFrames",
    "_offsetEnd",
    "extIndex",
    "slashIndex",
    "_materialNames",
    "regExp",
    "RegExp",
    "replace",
    "lastIndexOf",
    "indexOf",
    "substring",
    "dependencies",
    "_uvs",
    "ta",
    "tb",
    "tc",
    "_vertIndices",
    "_uvIndices",
    "_indices",
    "addIndex",
    "_finalUV",
    "vertexIndex",
    "uvIndex",
    "index",
    "findIndex",
    "sx",
    "sy",
    "sz",
    "tz",
    "vertLen",
    "fvertices",
    "tvertices",
    "prevClip",
    "readFrameName",
    "FPS",
    "ch",
    "floor",
    "String",
    "fromCharCode",
    "awayjs-parsers/lib/MD5AnimParser",
    "Quaternion",
    "MD5AnimParser",
    "additionalRotationAxis",
    "additionalRotationRadians",
    "TEXT",
    "_parseIndex",
    "_line",
    "_charLineIndex",
    "_rotationQuat",
    "t1",
    "t2",
    "fromAxisAngle",
    "X_AXIS",
    "PI",
    "Y_AXIS",
    "multiply",
    "token",
    "_textData",
    "_pGetTextData",
    "getNextToken",
    "COMMENT_TOKEN",
    "ignoreLine",
    "VERSION_TOKEN",
    "getNextInt",
    "COMMAND_LINE_TOKEN",
    "parseCMD",
    "NUM_FRAMES_TOKEN",
    "_bounds",
    "_frameData",
    "NUM_JOINTS_TOKEN",
    "_numJoints",
    "_hierarchy",
    "_baseFrameData",
    "FRAME_RATE_TOKEN",
    "_frameRate",
    "NUM_ANIMATED_COMPONENTS_TOKEN",
    "_numAnimatedComponents",
    "HIERARCHY_TOKEN",
    "parseHierarchy",
    "BOUNDS_TOKEN",
    "parseBounds",
    "BASE_FRAME_TOKEN",
    "parseBaseFrame",
    "FRAME_TOKEN",
    "parseFrame",
    "_reachedEOF",
    "sendUnknownKeywordError",
    "_clip",
    "translateClip",
    "translatePose",
    "frameData",
    "hierarchy",
    "base",
    "translate",
    "components",
    "skelPose",
    "startIndex",
    "w",
    "sqrt",
    "rotatePoint",
    "sendEOFError",
    "HierarchyData",
    "parseLiteralstring",
    "getNextChar",
    "putBack",
    "BoundsData",
    "parseVector3D",
    "max",
    "BaseFrameData",
    "parseQuaternion",
    "frameIndex",
    "FrameData",
    "getNextNumber",
    "skipWhiteSpace",
    "charAt",
    "sendParseError",
    "parseFloat",
    "vec",
    "quat",
    "str",
    "awayjs-core/lib/geom/Quaternion",
    "awayjs-parsers/lib/MD5MeshParser",
    "MD5MeshParser",
    "_bindPoses",
    "NUM_MESHES_TOKEN",
    "_numMeshes",
    "JOINTS_TOKEN",
    "parseJoints",
    "MESH_TOKEN",
    "parseMesh",
    "calculateMaxJointCount",
    "_maxJointCount",
    "_elementsData",
    "translateElements",
    "positionData",
    "weightData",
    "_skeleton",
    "numElementsData",
    "elementsData",
    "numVerts",
    "zeroWeights",
    "countZeroWeightJoints",
    "totalJoints",
    "countWeight",
    "start",
    "startWeight",
    "end",
    "weight",
    "bias",
    "pos",
    "toMatrix3D",
    "appendTranslation",
    "inv",
    "invert",
    "_shaders",
    "MESH_SHADER_TOKEN",
    "MESH_NUM_VERTS_TOKEN",
    "MESH_NUM_TRIS_TOKEN",
    "MESH_NUM_WEIGHTS_TOKEN",
    "MESH_VERT_TOKEN",
    "parseVertex",
    "MESH_TRI_TOKEN",
    "parseTri",
    "MESH_WEIGHT_TOKEN",
    "parseJoint",
    "ElementsData",
    "v1",
    "v2",
    "v3",
    "bindPose",
    "positions",
    "jointIndices",
    "jointWeights",
    "nonZeroWeights",
    "transformVector",
    "JointData",
    "PositionData",
    "rotQuat",
    "awayjs-parsers/lib/Max3DSParser",
    "BitmapImage2D",
    "Max3DSParser",
    "useSmoothingGroups",
    "_useSmoothingGroups",
    "ba",
    "toByteArray",
    "_textures",
    "_materials",
    "_unfinalized_objects",
    "_cur_mat",
    "_cur_mat_end",
    "finalizeCurrentMaterial",
    "_cur_obj",
    "_cur_obj_end",
    "Number",
    "MAX_VALUE",
    "cid",
    "ObjectVO",
    "readNulTermstring",
    "materialFaces",
    "assetType",
    "parseVertexList",
    "parseFaceList",
    "parseUVList",
    "parseFaceMaterialList",
    "readTransform",
    "parseObjectAnimation",
    "parseSmoothingGroups",
    "obj",
    "constructObject",
    "MaterialVO",
    "readColor",
    "diffuseColor",
    "specularColor",
    "twoSided",
    "colorMap",
    "specularMap",
    "TextureVO",
    "i0",
    "i1",
    "i2",
    "smoothingGroups",
    "faces",
    "vo",
    "hier",
    "sub",
    "vertices",
    "prepareData",
    "applySmoothGroups",
    "v",
    "mname",
    "scaleBy",
    "applyTransformation",
    "concat",
    "VertexVO",
    "FaceVO",
    "smoothGroup",
    "numFaces",
    "vGroups",
    "face",
    "groups",
    "group",
    "splice",
    "vClones",
    "clones",
    "v0",
    "getDefaultTexture",
    "chr",
    "g",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-parsers/lib/OBJParser",
    "SpecularBasicMethod",
    "OBJParser",
    "scale",
    "_mtlLibLoaded",
    "_activeMaterialID",
    "_scale",
    "defineProperty",
    "enumerable",
    "configurable",
    "content",
    "hasV",
    "hasF",
    "parseMtl",
    "lm",
    "LoadedMaterial",
    "materialID",
    "_materialLoaded",
    "_sprites",
    "applyMaterial",
    "_mtlLib",
    "line",
    "creturn",
    "trunk",
    "_vertices",
    "_vertexNormals",
    "_materialIDs",
    "_stringLength",
    "_charIndex",
    "_oldIndex",
    "_objects",
    "_objectIndex",
    "split",
    "join",
    "parseLine",
    "applyMaterials",
    "loadMtl",
    "createGroup",
    "createObject",
    "_currentGroup",
    "parseVertexNormal",
    "parseFace",
    "objIndex",
    "numGroups",
    "materialGroups",
    "numMaterialGroups",
    "m",
    "sm",
    "bmMaterial",
    "translateMaterialGroup",
    "_lastMtlID",
    "materialGroup",
    "_realIndices",
    "_vertexIndex",
    "indexIds",
    "translateVertexData",
    "vertex",
    "vertexNormal",
    "uv",
    "vertexIndices",
    "normalIndices",
    "uvIndices",
    "_currentMaterialGroup",
    "_currentObject",
    "ObjectGroup",
    "Group",
    "createMaterialGroup",
    "MaterialGroup",
    "nTrunk",
    "val",
    "Vertex",
    "UV",
    "FaceData",
    "parseIndex",
    "materialDefinitions",
    "lines",
    "basicSpecularMethod",
    "useSpecular",
    "useColor",
    "mapkd",
    "charCodeAt",
    "parseMapKdString",
    "specularData",
    "SpecularData",
    "_materialSpecularData",
    "cm",
    "breakflag",
    "mtlurl",
    "decomposeID",
    "tm",
    "_u",
    "_v",
    "_x",
    "_y",
    "_z",
    "_index",
    "ind",
    "awayjs-methodmaterials/lib/methods/SpecularBasicMethod",
    "awayjs-parsers/lib/Parsers",
    "Loader",
    "Parsers",
    "enableAllBundled",
    "enableParsers",
    "ALL_BUNDLED",
    "awayjs-core/lib/library/Loader"
  ],
  "mappings": "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",
  "file": "awayjs-parsers.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\nclass AWD3Utils {\n\tpublic static BLOCKSTATE_FINALIZE:number = 0;\n\tpublic static BLOCKSTATE_INVALID:number = 1;\n\tpublic static BLOCKSTATE_LOAD_DEPENDENICES:number = 2;\n\tpublic static BLOCKSTATE_NO_ASSET:number = 3;\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\n\tpublic static UNCOMPRESSED:number = 0;\n\tpublic static DEFLATE:number = 1;\n\tpublic static LZMA:number = 2;\n\tpublic static INT8:number = 1;\n\tpublic static INT16:number = 2;\n\tpublic static INT32:number = 3;\n\tpublic static UINT8:number = 4;\n\tpublic static UINT16:number = 5;\n\tpublic static UINT32:number = 6;\n\tpublic static FLOAT32:number = 7;\n\tpublic static FLOAT64:number = 8;\n\tpublic static BOOL:number = 21;\n\tpublic static COLOR:number = 22;\n\tpublic static BADDR:number = 23;\n\tpublic static AWDSTRING:number = 31;\n\tpublic static AWDBYTEARRAY:number = 32;\n\tpublic static VECTOR2x1:number = 41;\n\tpublic static VECTOR3x1:number = 42;\n\tpublic static VECTOR4x1:number = 43;\n\tpublic static MTX3x2:number = 44;\n\tpublic static MTX3x3:number = 45;\n\tpublic static MTX4x3:number = 46;\n\tpublic static MTX4x4:number = 47;\n}\nexport = AWD3Utils;",
    null,
    "import ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\n\n\nclass AWDBlock\n{\n\tpublic id:number;\n\tpublic name:string;\n\tpublic type:number;\n\tpublic data:any;\n\tpublic dependencies_data:Array<ByteArray>;\n\tpublic dependencies_urls:Array<string>;\n\tpublic loaded_dependencies:Array<any>;\n\tpublic loaded_dependencies_cnt:number;\n\tpublic len:number;\n\tpublic geoID:number;\n\tpublic state:number;\n\tpublic extras:Object;\n\tpublic bytes:ByteArray;\n\tpublic errorMessages:Array<string>;\n\tpublic uvsForVertexAnimation:Array<Float32Array>;\n\n\tconstructor(this_id:number, this_type:number)\n\t{\n\t\tthis.type=this_type;\n\t\tthis.id=this_id;\n\t\tthis.state = AWD3Utils.BLOCKSTATE_FINALIZE;\n\t\tthis.dependencies_data=Array<any>();\n\t\tthis.dependencies_urls=Array<string>();\n\t\tif(this_type==83){\n\t\t\tthis.loaded_dependencies=Array<any>(6);\n\t\t}\n\t\tthis.loaded_dependencies_cnt=0;\n\t}\n\n\tpublic dispose()\n\t{\n\n\t\tthis.id = null;\n\t\tthis.bytes = null;\n\t\tthis.errorMessages = null;\n\t\tthis.uvsForVertexAnimation = null;\n\n\t}\n\n\tpublic addError(errorMsg:string):void\n\t{\n\t\tif (!this.errorMessages)\n\t\t\tthis.errorMessages = new Array<string>();\n\n\t\tthis.errorMessages.push(errorMsg);\n\t}\n}\nexport = AWDBlock;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Short3Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float3Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Byte4Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\n\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImageCube\");\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport Sampler2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport WaveAudio\t\t\t\t\t\t= require(\"awayjs-core/lib/audio/WaveAudio\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport View\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/View\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport Sprite\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport TextField\t\t\t\t\t\t= require(\"awayjs-display/lib/display/TextField\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Billboard\");\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\nimport PrimitivePrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\n\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\n\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport ITimelineSceneGraphFactory \t= require(\"awayjs-display/lib/factories/ITimelineSceneGraphFactory\");\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\nimport MovieClip \t\t\t\t\t= require(\"awayjs-display/lib/display/MovieClip\");\nimport Timeline\t\t\t \t\t\t= require(\"awayjs-display/lib/base/Timeline\");\n\n\nimport AssetLibrary\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLibrary\");\n\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\n\nimport AWDBlock\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\nimport Rectangle \t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Style \t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport Matrix \t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport MappingMode \t\t\t\t\t= require(\"awayjs-display/lib/textures/MappingMode\");\nimport ElementsType = require(\"awayjs-display/lib/graphics/ElementsType\");\nimport Graphic = require(\"awayjs-display/lib/graphics/Graphic\");\n/**\n * AWDParser provides a parser for the AWD data type.\n */\nclass AWDParser extends ParserBase\n{\n\tprivate _view:View;\n\n\t//set to \"true\" to have some console.logs in the Console\n\tprivate _debug:boolean = false;\n\tprivate _debugTimers:boolean = true;\n\tprivate _byteData:ByteArray;\n\tprivate _startedParsing:boolean = false;\n\tprivate _cur_block_id:number;\n\tprivate _blocks:Array<AWDBlock>;\n\tprivate _newBlockBytes:ByteArray;\n\tprivate _version:Array<number>;\n\tprivate _compression:number;\n\tprivate _accuracyOnBlocks:boolean;\n\tprivate _accuracyMatrix:boolean;\n\tprivate _accuracyGeo:boolean;\n\tprivate _accuracyProps:boolean;\n\tprivate _streaming:boolean;\n\tprivate _texture_users:Object = {};\n\tprivate _parsed_header:boolean = false;\n\tprivate _body:ByteArray;\n\n\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\n\tpublic static UNCOMPRESSED:number = 0;\n\tpublic static DEFLATE:number = 1;\n\tpublic static LZMA:number = 2;\n\tpublic static INT8:number = 1;\n\tpublic static INT16:number = 2;\n\tpublic static INT32:number = 3;\n\tpublic static UINT8:number = 4;\n\tpublic static UINT16:number = 5;\n\tpublic static UINT32:number = 6;\n\tpublic static FLOAT32:number = 7;\n\tpublic static FLOAT64:number = 8;\n\tpublic static BOOL:number = 21;\n\tpublic static COLOR:number = 22;\n\tpublic static BADDR:number = 23;\n\tpublic static AWDSTRING:number = 31;\n\tpublic static AWDBYTEARRAY:number = 32;\n\tpublic static VECTOR2x1:number = 41;\n\tpublic static VECTOR3x1:number = 42;\n\tpublic static VECTOR4x1:number = 43;\n\tpublic static MTX3x2:number = 44;\n\tpublic static MTX3x3:number = 45;\n\tpublic static MTX4x3:number = 46;\n\tpublic static MTX4x4:number = 47;\n\tpublic static GEO_NUMBER:number = 48;\n\tpublic static MATRIX_NUMBER:number = 49;\n\tpublic static PROPERTY_NUMBER:number = 50;\n\t\n\n\tprivate blendModeDic:Array<string>;\n\tprivate _depthSizeDic:Array<number>;\n\n\tprivate start_timeing:number;\n\tprivate _time_all:number=0;\n\tprivate _time_graphics:number=0;\n\tprivate _time_graphics_bytes:number=0;\n\tprivate _time_timeline:number=0;\n\tprivate _time_fonts:number=0;\n\tprivate _time_textfields:number=0;\n\tprivate _time_sounds:number=0;\n\tprivate _time_textures:number=0;\n\tprivate _time_materials:number=0;\n\tprivate _time_sprites:number=0;\n\tprivate _num_graphics:number=0;\n\tprivate _num_timeline:number=0;\n\tprivate _num_fonts:number=0;\n\tprivate _num_textfields:number=0;\n\tprivate _num_sounds:number=0;\n\tprivate _num_textures:number=0;\n\tprivate _num_materials:number=0;\n\tprivate _num_sprites:number=0;\n\n\n\t/**\n\t * Creates a new AWD3Parserutils object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(view:View = null)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\n\t\tthis._view = view;\n\t\tthis._blocks = new Array<AWDBlock>();\n\t\tthis._blocks[0] = new AWDBlock(0,255);\n\t\tthis._blocks[0].data = null; // Zero address means null in AWD\n\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.ADD);\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\n\t\tthis._depthSizeDic.push(256);\n\t\tthis._depthSizeDic.push(512);\n\t\tthis._depthSizeDic.push(2048);\n\t\tthis._depthSizeDic.push(1024);\n\t\tthis._version = Array<number>(); // will contain 2 int (major-version, minor-version) for awd-version-check\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"awd\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\t// this will be called when Dependency has finished loading.\n\t\t// the ressource dependecniy has a id that point to the awd_block waiting for it.\n\t\t//console.log(\"AWDParser resolve dependencies\");\n\t\tif (resourceDependency.assets.length == 1) {\n\t\t\tvar this_block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\n\t\t\tif(this_block.type==82){\n\t\t\t\tvar image_asset:BitmapImage2D = <BitmapImage2D> resourceDependency.assets[0];\n\t\t\t\tthis_block.data = image_asset; // Store finished asset\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\n\t\t\t\t// previously suppressed while the dependency was loaded.\n\t\t\t\tthis._pFinalizeAsset(<IAsset> image_asset, this_block.name);\n\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Parsed Texture: Name = \" + this_block.name);\n\t\t\t}\n\t\t\telse if(this_block.type==44){\n\t\t\t\tvar audio_asset:WaveAudio = <WaveAudio> resourceDependency.assets[0];\n\t\t\t\tthis_block.data = audio_asset; // Store finished asset\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\n\t\t\t\t// previously suppressed while the dependency was loaded.\n\t\t\t\t//console.log(\"Parsing audio \" + this_block.name);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> audio_asset, this_block.name);\n\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Parsed WaveAudio: Name = \" + this_block.name);\n\t\t\t}\n\t\t\telse if(this_block.type==83){\n\t\t\t\tthis_block.loaded_dependencies[resourceDependency.sub_id]= resourceDependency.assets[0];\n\t\t\t\tthis_block.loaded_dependencies_cnt++;\n\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + resourceDependency.sub_id + \" / 6 for Cubetexture\");\n\n\t\t\t\tif(this_block.loaded_dependencies_cnt==6){\n\t\t\t\t\tvar cube_image_asset = new BitmapImageCube(this_block.loaded_dependencies[0].width);\n\n\t\t\t\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\t\t\t\tcube_image_asset.draw(i, this_block.loaded_dependencies[i]);\n\n\t\t\t\t\tthis_block.data = cube_image_asset; // Store finished asset\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> cube_image_asset, this_block.name);\n\n\t\t\t\t\tif (this._debug)\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + this_block.name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._debugTimers && !this._isParsing)\n\t\t\t\tthis.updateTimers(this_block.type);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\t//not used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\n\t\t// this means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\tvar oldName:string = asset.name;\n\n\t\tif (asset) {\n\t\t\tvar block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\n\t\t\t// Reset name of texture to the one defined in the AWD file,\n\t\t\t// as opposed to whatever the image parser came up with.\n\t\t\tasset.resetAssetPath(block.name, null, true);\n\t\t}\n\n\t\tvar newName:string = asset.name;\n\n\t\tasset.name = oldName;\n\n\t\treturn newName;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (!this._startedParsing) {\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\tif (!this._parsed_header) {\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Parse header and decompress body if needed\n\t\t\tthis.parseHeader();\n\n\t\t\tswitch (this._compression) {\n\t\t\t\tcase AWDParser.DEFLATE:\n\t\t\t\tcase AWDParser.LZMA:\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AWDParser.UNCOMPRESSED:\n\t\t\t\t\tthis._body = this._byteData;\n\t\t\t\t\tbreak;\n\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t// Compressed AWD Formats not yet supported\n\t\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t\t/*\n\t\t\t\t case AWD3Parserutils.DEFLATE:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress();\n\n\t\t\t\t break;\n\t\t\t\t case AWD3Parserutils.LZMA:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\n\n\t\t\t\t break;\n\t\t\t\t //*/\n\n\t\t\t}\n\n\t\t\tthis._parsed_header = true;\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t}\n\n\t\tif (this._body) {\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\n\t\t\t\tthis.parseNextBlock();\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Return complete status\n\t\t\tif (this._body.getBytesAvailable() == 0) {\n\t\t\t\tthis.dispose();\n\n\t\t\t\tif (this._debugTimers)\n\t\t\t\t\tconsole.log(\"Parsing total: \"+(this._time_all | 0)+\"ms\",\n\t\t\t\t\t\t\" | graphics: \"+this._num_graphics+\", \"+(this._time_graphics | 0)+\"ms\",\n\t\t\t\t\t\t\" | graphics bytes: \"+this._num_graphics+\", \"+(this._time_graphics_bytes | 0)+\"ms\",\n\t\t\t\t\t\t\" | timelines: \"+this._num_timeline+\", \"+(this._time_timeline | 0)+\"ms\",\n\t\t\t\t\t\t\" | fonts: \"+this._num_fonts+\", \"+(this._time_fonts | 0)+\"ms\",\n\t\t\t\t\t\t\" | sounds: \"+this._num_sounds+\", \"+(this._time_sounds | 0)+\"ms\",\n\t\t\t\t\t\t\" | mats: \"+this._num_materials+\", \"+(this._time_materials | 0)+\"ms\",\n\t\t\t\t\t\t\" | textures: \"+this._num_textures+\", \"+(this._time_textures | 0)+\"ms\",\n\t\t\t\t\t\t\" | sprites: \"+this._num_sprites+\", \"+(this._time_sprites | 0)+\"ms\");\n\n\t\t\t\treturn  ParserBase.PARSING_DONE;\n\t\t\t} else {\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} else {\n\n\t\t\tswitch (this._compression) {\n\t\t\t\tcase AWDParser.DEFLATE:\n\t\t\t\tcase AWDParser.LZMA:\n\t\t\t\t\tif (this._debug)\n\t\t\t\t\t\tconsole.log(\"(!) AWDParser Error: Compressed AWD formats not yet supported (!)\");\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Error - most likely _body not set because we do not support compression.\n\t\t\treturn  ParserBase.PARSING_DONE;\n\t\t}\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\tprivate dispose()\n\t{\n\t\tfor (var c in this._blocks) {\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[c];\n\t\t\tb.dispose();\n\t\t}\n\t}\n\n\tprivate parseNextBlock()\n\t{\n\t\tvar block:AWDBlock;\n\t\tvar isParsed:boolean = false;\n\t\tvar ns:number;\n\t\tvar type:number;\n\t\tvar flags:number;\n\t\tvar len:number;\n//*\n\t\tif (this._debugTimers)\n\t\t\tthis.start_timeing = performance.now();\n//*/\n\t\tthis._cur_block_id = this._body.readUnsignedInt();\n\n\t\tns = this._body.readUnsignedByte();\n\t\ttype = this._body.readUnsignedByte();\n\t\tflags = this._body.readUnsignedByte();\n\t\tlen = this._body.readUnsignedInt();\n\n\t\tvar blockCompression:boolean = BitFlags.test(flags, BitFlags.FLAG4);\n\t\tvar blockCompressionLZMA:boolean = BitFlags.test(flags, BitFlags.FLAG5);\n\n\t\tif (this._accuracyOnBlocks) {\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG1);\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG2);\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG3);\n\t\t}\n\n\t\tvar blockEndAll:number = this._body.position + len;\n\n\t\tif (len > this._body.getBytesAvailable()) {\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\n\t\t\tthis._body.position += this._body.getBytesAvailable();\n\t\t\treturn;\n\t\t}\n\n\t\t//----------------------------------------------------------------------------\n\t\t// Compressed AWD Formats not yet supported\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\tthis._newBlockBytes = new ByteArray();\n\t\t\tthis._body.readBytes(this._newBlockBytes, 0, len);\n\t\t\tthis._newBlockBytes.position = 0;\n\t\t\t/*\n\t\t\t if (blockCompressionLZMA)\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress(AWD3Parserutils.COMPRESSIONMODE_LZMA);\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress();\n\t\t\t }\n\t\t\t */\n\n\t\t} else {\n\t\t\tthis._newBlockBytes = this._body;\n\t\t}\n\n\t\t//----------------------------------------------------------------------------\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t//----------------------------------------------------------------------------\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\n\t\t//----------------------------------------------------------------------------\n\n\t\tblock = new AWDBlock(this._cur_block_id, type);\n\t\tblock.len = len;\n\t\tvar blockEndBlock:number = this._newBlockBytes.position + len;\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\n\t\t\t//block.len       = blockEndBlock;\n\t\t}\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + this._cur_block_id + \" | TypeID = \" + type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Graphics-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\n\n\t\tthis._blocks[this._cur_block_id] = block;\n\n\t\tif ((this._version[0] == 3) && (this._version[1] == 0)) {\n\t\t\t// probably should contain some info about the type of animation\n\t\t\tvar factory = new AS2SceneGraphFactory(this._view);\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 24:\n\t\t\t\t\tthis.parseSpriteLibraryBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 25:\n\t\t\t\t\tthis.parseBillBoardLibraryBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4444:\n\t\t\t\t\tthis.parseAudioBlock(this._cur_block_id, factory);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 133:\n\t\t\t\t\tthis.parseMovieClip(this._cur_block_id, factory);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 134:\n\t\t\t\t\tthis.parseTextField(this._cur_block_id, factory);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 135:\n\t\t\t\t\tthis.parseTesselatedFont(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 136:\n\t\t\t\t\tthis.parseTextFormat(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ((this._version[0] > 2)||((this._version[0] >= 2) && (this._version[1] >= 1))) {\n\t\t\tswitch (type) {\n\t\t\t\tcase 11:\n\t\t\t\t\tthis.parsePrimitves(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 31:\n\t\t\t\t\tthis.parseSkyboxInstance(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 41:\n\t\t\t\t\tthis.parseLight(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 42:\n\t\t\t\t\tthis.parseCamera(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t//  case 43:\n\t\t\t\t//      parseTextureProjector(_cur_block_id);\n\t\t\t\t//      isParsed = true;\n\t\t\t\t//      break;\n\n\t\t\t\tcase 51:\n\t\t\t\t\tthis.parseLightPicker(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 81:\n\t\t\t\t\tthis.parseMaterial_v1(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 83:\n\t\t\t\t\tthis.parseCubeTexture(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 91:\n\t\t\t\t\tthis.parseSharedMethodBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 92:\n\t\t\t\t\tthis.parseShadowMethodBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 111:\n\t\t\t\t\tthis.parseSpritePoseAnimation(this._cur_block_id, true);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 112:\n\t\t\t\t\tthis.parseSpritePoseAnimation(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 113:\n\t\t\t\t\tthis.parseVertexAnimationSet(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 122:\n\t\t\t\t\tthis.parseAnimatorSet(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 253:\n\t\t\t\t\tthis.parseCommand(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isParsed == false) {\n\t\t\tswitch (type) {\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.parseGraphics(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 22:\n\t\t\t\t\tthis.parseContainer(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 23:\n\t\t\t\t\tthis.parseSpriteInstance(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 81:\n\t\t\t\t\tthis.parseMaterial(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 82:\n\t\t\t\t\tthis.parseTexture(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 101:\n\t\t\t\t\tthis.parseSkeleton(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 102:\n\t\t\t\t\tthis.parseSkeletonPose(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 103:\n\t\t\t\t\tthis.parseSkeletonAnimation(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 121:\n\t\t\t\t//this.parseUVAnimation(this._cur_block_id);\n\t\t\t\t//break;\n\t\t\t\tcase 254:\n\t\t\t\t\tthis.parseNameSpace(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 255:\n\t\t\t\t\tthis.parseMetaData(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (this._debug)\n\t\t\t\t\t\tconsole.log(\"AWDBlock:   Unknown BlockType  (BlockID = \" + this._cur_block_id + \") - Skip \" + len + \" bytes\");\n\n\t\t\t\t\tthis._newBlockBytes.position += len;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this._debug) {\n\t\t\tif (this._newBlockBytes.position != blockEndBlock)\n\t\t\t\tconsole.log(\"  (!)(!)(!) Error while reading AWDBlock ID \" + this._cur_block_id + \" = skip to next block\");\n\n\t\t\tif (block.errorMessages) {\n\t\t\t\tvar len:number = block.errorMessages.length;\n\t\t\t\tfor (var msgCnt:number = 0; msgCnt < len; msgCnt++)\n\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\n\t\t\t}\n\n\t\t\tconsole.log(\"\\n\");\n\t\t}\n\n\t\tif (this._debugTimers && !this.parsingPaused)\n\t\t\tthis.updateTimers(type);\n\n\t\tthis._body.position = blockEndAll;\n\t\tthis._newBlockBytes = null;\n\t}\n\n\tprivate updateTimers(type:number)\n\t{\n\t\tvar end_timing = performance.now();\n\t\tvar time_delta = end_timing - this.start_timeing;\n\t\tthis._time_all += time_delta;\n\n\t\tif (type == 1) {\n\t\t\tthis._time_graphics += time_delta;\n\t\t\tthis._num_graphics++;\n\t\t} else if (type == 133) {\n\t\t\tthis._time_timeline += time_delta;\n\t\t\tthis._num_timeline++;\n\t\t} else if (type == 135) {\n\t\t\tthis._time_fonts += time_delta;\n\t\t\tthis._num_fonts++;\n\t\t} else if (type == 134) {\n\t\t\tthis._time_textfields += time_delta;\n\t\t\tthis._num_textfields++;\n\t\t} else if (type == 44) {\n\t\t\tthis._time_sounds += time_delta;\n\t\t\tthis._num_sounds++;\n\t\t} else if (type == 82) {\n\t\t\tthis._time_textures += time_delta;\n\t\t\tthis._num_textures++;\n\t\t} else if (type == 81) {\n\t\t\tthis._time_materials += time_delta;\n\t\t\tthis._num_materials++;\n\t\t} else if(type==24) {\n\t\t\tthis._time_sprites += time_delta;\n\t\t\tthis._num_sprites++;\n\t\t}\n\t}\n\n\n\t//--Parser Blocks---------------------------------------------------------------------------\n\n\n\tprivate parseTesselatedFont(blockID:number)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tthis._blocks[blockID].name = name;\n\t\tvar new_font:Font=<Font>AssetLibrary.getAsset(this._blocks[blockID].name);\n\t\tvar newfont:Boolean = false;\n\t\tif(new_font==undefined){\n\t\t\tnew_font = new Font();\n\t\t\tnewfont=true;\n\t\t}\n\t\tvar font_style_cnt:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar font_style_char_cnt:number;\n\t\tvar font_style_name:string;\n\t\tvar new_font_style:TesselatedFontTable;\n\t\tvar font_style_char:number;\n\t\tvar attr_count:number=0;\n\t\tvar sm_len:number;\n\t\tvar sm_end:number;\n\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\n\t\tfor (var i:number = 0; i < font_style_cnt; ++i) {\n\t\t\tfont_style_name = this.parseVarStr();\n\n\t\t\t// dirty hack for icycle\n\t\t\t// we use bold chars for non-latin chars, but we use regular for � sign,\n\t\t\t// so the dirty hack is to merge the regular and the bold style\n\t\t\tif((this._blocks[blockID].name==\"Tahoma\") && (font_style_name==\"RegularStyle\")){\n\t\t\t\tfont_style_name=\"BoldStyle\";\n\t\t\t}\n\n\t\t\tnew_font_style = new_font.get_font_table(font_style_name);\n\t\t\tnew_font_style.set_font_em_size(this._newBlockBytes.readUnsignedInt());\n\t\t\tnew_font_style.set_whitespace_width(this._newBlockBytes.readUnsignedInt());\n\t\t\tnew_font_style.ascent=this._newBlockBytes.readFloat();\n\t\t\tnew_font_style.descent=this._newBlockBytes.readFloat();\n\t\t\t//console.log(new_font_style.get_whitespace_width());\n\t\t\tfont_style_char_cnt = this._newBlockBytes.readUnsignedInt();\n\t\t\tfor (var j:number = 0; j < font_style_char_cnt; ++j) {\n\t\t\t\t// todo: this is basically a simplified version of the elements-parsing done in parseGraphics. Make a parseElements() instead (?)\n\t\t\t\tfont_style_char = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tvar char_width=this._newBlockBytes.readFloat();\n\t\t\t\tsm_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tsm_end = this._newBlockBytes.position + sm_len;\n\n\t\t\t\t// Loop through data streams\n\t\t\t\twhile (this._newBlockBytes.position < sm_end) {\n\t\t\t\t\t// Type, field type, length\n\t\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\n\n\t\t\t\t\tif (str_type == 2) {//face indices positions\n\t\t\t\t\t\tvar indices:Array<number> = new Array<number>();\n\t\t\t\t\t\tfor(var idx:number = 0; this._newBlockBytes.position < str_end; idx++)\n\t\t\t\t\t\t\tindices[idx] = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t} else if (str_type == 11) {// combined vertex2D stream 5 x float32 (position + curvedata)\n\t\t\t\t\t\tattr_count = 20;\n\t\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\n\t\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\n\t\t\t\t\t} else if (str_type == 12) {// combined vertex2D stream 5 x float32 (position + curvedata)\n\t\t\t\t\t\tattr_count = 12;\n\t\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\n\t\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\n\t\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 7 x float32 (position + curvedata + uv)\n\t\t\t\t\t\tattr_count = 28;\n\t\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\n\t\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(curveData) {\n\t\t\t\t\tvar vertexBuffer:AttributesBuffer = new AttributesBuffer(attr_count, str_len / attr_count);\n\t\t\t\t\tvertexBuffer.bufferView = new Uint8Array(<ArrayBuffer> curveData.arraybytes);\n\n\t\t\t\t\tvar curve_elements:TriangleElements = new TriangleElements(vertexBuffer);\n\n\t\t\t\t\tcurve_elements.setPositions(new Float2Attributes(vertexBuffer));\n\t\t\t\t\tif (attr_count == 20)\n\t\t\t\t\t\tcurve_elements.setCustomAttributes(\"curves\", new Float3Attributes(vertexBuffer));\n\t\t\t\t\telse if(attr_count == 12)\n\t\t\t\t\t\tcurve_elements.setCustomAttributes(\"curves\", new Byte4Attributes(vertexBuffer, false));\n\n\t\t\t\t\t//add UVs if they exist in the data\n\t\t\t\t\tif (attr_count == 28)\n\t\t\t\t\t\tcurve_elements.setUVs(new Float2Attributes(vertexBuffer));\n\n\t\t\t\t\tnew_font_style.setChar(font_style_char.toString(), curve_elements);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.parseProperties(null);\n\t\tthis.parseUserAttributes();\n\t\tif(newfont) {\n\t\t\tthis._pFinalizeAsset(<IAsset>new_font, name);\n\t\t}\n\n\t\tthis._blocks[blockID].data = new_font;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a font: Name = '\" + name);\n\t}\n\n\tprivate static textFormatProperties:Object = {\n\t\t1:AWDParser.UINT16,\t\t//fontsize\n\t\t2:AWDParser.FLOAT32,\t\t//letterspacing\n\t\t3:AWDParser.UINT8,\t\t//rotated\n\t\t4:AWDParser.UINT8,\t\t//auto-kerning\n\t\t5:AWDParser.UINT8,\t\t//baselineshift\n\t\t6:AWDParser.UINT8,\t\t//align\n\t\t7:AWDParser.FLOAT32,\t\t//intent\n\t\t8:AWDParser.FLOAT32,\t\t//left margin\n\t\t9:AWDParser.FLOAT32,\t\t//right margin\n\t\t10:AWDParser.FLOAT32};\t//line spacing\n\n\tprivate parseTextFormat(blockID:number)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tthis._blocks[blockID].name = name;\n\n\t\tvar font:Font = <Font> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar font_style_name:string = this.parseVarStr();\n\n\t\tvar newTextFormat:TextFormat = new TextFormat();\n\t\tnewTextFormat.font_name = font.name;\n\n\t\tvar font_table:TesselatedFontTable = font.get_font_table(font_style_name);\n\t\tif (font_table!=null) {\n\t\t\tnewTextFormat.font_style = font_style_name;\n\t\t\tnewTextFormat.font_table = font_table;\n\t\t}\n\n\t\tvar mat:BasicMaterial = <BasicMaterial> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tmat.bothSides = true;\n\t\tmat.curves = true;\n\t\tvar num_uv_values:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar uv_values:Array<number> = [];\n\t\tfor(var uvcnt:number = 0; uvcnt < num_uv_values; uvcnt++)\n\t\t\tuv_values[uvcnt] = this._newBlockBytes.readFloat();\n\n\t\tnewTextFormat.uv_values = uv_values;\n\t\tvar format_props:AWDProperties = this.parseProperties(AWDParser.textFormatProperties);\n\n\t\tnewTextFormat.size = format_props.get(1,12);\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\n\t\t//newTextFormat.rotated = format_props.get(3,false);\n\t\tnewTextFormat.kerning = format_props.get(4,true);\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\n\t\tvar tf_align_int:number = format_props.get(6,0);\n\t\tif(tf_align_int==1){\n\t\t\tnewTextFormat.align=\"right\";\n\t\t}\n\t\telse if(tf_align_int==2){\n\t\t\tnewTextFormat.align=\"center\";\n\t\t}\n\t\tnewTextFormat.indent = format_props.get(7,0);\n\t\tnewTextFormat.leftMargin = format_props.get(8,0);\n\t\tnewTextFormat.rightMargin = format_props.get(9,0);\n\t\tnewTextFormat.leading = format_props.get(10,0);\n\t\tnewTextFormat.material = mat;\n\t\tthis.parseUserAttributes();// textformat has no extra-properties\n\t\t//newTextFormat.extra =\n\n\t\tthis._pFinalizeAsset(<IAsset> newTextFormat, name);\n\t\tthis._blocks[blockID].data = newTextFormat;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a TextFormat: Name = '\" + name + \" font: \"+font.name);\n\t}\n\n\tprivate static textFieldProperties:Object = {\n\t\t1:AWDParser.BOOL,\n\t\t3:AWDParser.BOOL,\n\t\t4:AWDParser.BOOL,\n\t\t5:AWDParser.BOOL,\n\t\t7:AWDParser.UINT8,\n\t\t8:AWDParser.UINT8,\n\t\t9:AWDParser.UINT8};\n\n\tprivate static textFieldTypes:Array<string> = [\"static\", \"dynamic\", \"input\", \"input\"];\n\n\n\tprivate parseTextField(blockID:number, factory:ITimelineSceneGraphFactory)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tthis._blocks[blockID].name = name;\n        var newTextField = factory.createTextField();\n\t\tvar text_field_type:number=this._newBlockBytes.readUnsignedByte();\n\n\t\tnewTextField.type = AWDParser.textFieldTypes[text_field_type];\n\n\t\tif(text_field_type == 3)\n\t\t\tnewTextField.displayAsPassword = true;\n\n\t\t//\n\t\tnewTextField.textWidth = Math.abs(this._newBlockBytes.readFloat());\n\t\tnewTextField.textHeight = Math.abs(this._newBlockBytes.readFloat());\n\t\tvar num_paragraphs:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar complete_text:string = \"\";\n\t\t//console.log(\"num_paragraphs  '\" + num_paragraphs);\n\t\tfor(var paracnt:number=0; paracnt<num_paragraphs; paracnt++){\n\n\t\t\tvar num_textruns:number = this._newBlockBytes.readUnsignedInt();\n\t\t\t//console.log(\"num_textruns  '\" + num_textruns);\n\t\t\tfor(var textrun_cnt:number=0; textrun_cnt<num_textruns; textrun_cnt++) {\n\t\t\t\tvar text_format:TextFormat = <TextFormat> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\t\t\tvar txt_length = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t//console.log(\"txt_length  '\" + txt_length);\n\t\t\t\tif (txt_length > 0) {\n\t\t\t\t\tvar this_txt:string = this._newBlockBytes.readUTFBytes(txt_length);\n\t\t\t\t\t//newTextField.appendText(this_txt, text_format);\n\t\t\t\t\tcomplete_text += this_txt;\n\t\t\t\t\t//console.log(\"this_txt  '\" + this_txt);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//newTextField.closeParagraph();\n\t\t}\n\t\tnewTextField.textFormat=text_format;\n\t\tnewTextField.text=complete_text;\n\t\t//newTextField.construct_graphics();\n\t\t// todo: optional matrix etc can be put in properties.\n\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.textFieldProperties);\n\t\tnewTextField.selectable = props.get(1, false);\n\t\tnewTextField.border =  props.get(3, false);\n\t\t//newTextField.renderHTML =  props.get(4, false);\n\t\t//newTextField.scrollable =  props.get(5, false);\n\t\t//newTextField.text_flow =  props.get(7, 0);\n\t\t//newTextField.orientationMode =  props.get(8, 0);\n\t\t//newTextField.line_mode =  props.get(9, 0);\n\t\tnewTextField.extra = this.parseUserAttributes();\n\n\t\t//console.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\n\t\tthis._pFinalizeAsset(<IAsset> newTextField, name);\n\t\tthis._blocks[blockID].data = newTextField;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\n\t}\n\n\t// Block ID = 25\n\tprivate parseBillBoardLibraryBlock(blockID:number)\n\t{\n\n\t\tvar name:string = this.parseVarStr();\n\t\tvar mat:BasicMaterial = <BasicMaterial> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tmat.bothSides=true;\n\t\tvar billboard:Billboard = new Billboard(mat);\n\n\t\t// todo: optional matrix etc can be put in properties.\n\t\tthis.parseProperties(null);\n\n\t\tbillboard.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> billboard, name);\n\n\t\tthis._blocks[blockID].data = billboard;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Library-Billboard: Name = '\" + name + \"| Material-Name = \" + mat.name);\n\t}\n\t// Block ID = 24\n\tprivate parseSpriteLibraryBlock(blockID:number)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar graphics:Graphics = <Graphics> this._blocks[data_id].data;\n\t\tthis._blocks[blockID].geoID = data_id;\n\n\t\tvar num_materials:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar materials:Array<MethodMaterial> = new Array<MethodMaterial>();\n\t\tvar materialNames:Array<string> = new Array<string>();\n\t\tvar mat:MethodMaterial;\n\t\tfor (var materials_parsed:number = 0; materials_parsed < num_materials; materials_parsed++) {\n\t\t\tmat = <MethodMaterial> (this._blocks[this._newBlockBytes.readUnsignedInt()].data || DefaultMaterialManager.getDefaultMaterial());\n\t\t\t//mat.preserveAlpha = true;\n\t\t\tmat.alphaBlending = true;\n\t\t\tmat.useColorTransform = true;\n\t\t\tmaterials[materials_parsed] = mat;\n\t\t\tmaterialNames[materials_parsed] = mat.name;\n\t\t}\n\n\t\tvar start_timeing = performance.now();\n\t\tvar sprite:Sprite = new Sprite();\n\t\tgraphics.copyTo(sprite.graphics);\n\t\tvar end_timing = performance.now();\n\t\tvar time_delta = end_timing - start_timeing;\n\t\tthis._time_graphics_bytes += time_delta;\n\n\t\tif (materials.length >= 1 && sprite.graphics.count == 1) {\n\t\t\tsprite.material = materials[0];\n\t\t} else if (materials.length > 1) {\n\t\t\t// Assign each sub-sprite in the sprite a material from the list. If more sub-sprites\n\t\t\t// than materials, repeat the last material for all remaining sub-sprites.\n\t\t\tfor (var i:number = 0; i < sprite.graphics.count; i++)\n\t\t\t\tsprite.graphics.getGraphicAt(i).material = materials[Math.min(materials.length - 1, i)];\n\t\t}\n\n\t\tvar count:number = this._newBlockBytes.readUnsignedShort();\n\t\t//if(count != sprite.graphics.count)\n\t\t//\tthrow new Error(\"num elements does not match num subsprites\");\n\n\t\tfor (var i:number = 0; i < count; i++) {\n\t\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\n\t\t\tvar sampler:Sampler2D = new Sampler2D();\n\t\t\tvar graphic:Graphic = sprite.graphics.getGraphicAt(i);\n\t\t\tif(graphic) {\n\t\t\t\tgraphic.style = new Style();\n\t\t\t\tgraphic.style.addSamplerAt(sampler, graphic.material.getTextureAt(0));\n\t\t\t}\n\t\t\tif (type == 3) {// solid color fill - need tx and ty\n\t\t\t\tvar tx:number=this._newBlockBytes.readFloat();\n\t\t\t\tvar ty:number=this._newBlockBytes.readFloat();\n\t\t\t\tif(graphic) {\n\t\t\t\t\tgraphic.material.animateUVs = true;\n\t\t\t\t\tgraphic.style.uvMatrix = new Matrix(0, 0, 0, 0, tx, ty);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (type == 4) {// texture fill - need full matrix\n\t\t\t\tvar matrix:Array<number> = this.parseMatrix32RawData();\n\t\t\t\tif(graphic) {\n\t\t\t\t\tgraphic.material.animateUVs = true;\n\t\t\t\t\tgraphic.style.uvMatrix = new Matrix(matrix[0], matrix[2], matrix[1], matrix[3], matrix[4], matrix[5]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (type == 5) {// linear gradient fill - need a, c , tx and ty\n\t\t\t\tvar newMatrix:Matrix = new Matrix(this._newBlockBytes.readFloat(), this._newBlockBytes.readFloat(), 0, 0, this._newBlockBytes.readFloat(), this._newBlockBytes.readFloat());\n\t\t\t\tif(graphic) {\n\t\t\t\t\tgraphic.material.animateUVs = true;\n\t\t\t\t\tgraphic.style.uvMatrix = newMatrix;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\telse if (type == 6) {// radial gradient fill - need image rectangle + full transform\n\t\t\t\t\tvar x:number = this._newBlockBytes.readFloat();\n\t\t\t\t\tvar y:number = this._newBlockBytes.readFloat();\n\t\t\t\t\tvar width:number = this._newBlockBytes.readFloat();\n\t\t\t\t\tvar height:number = this._newBlockBytes.readFloat();\n\t\t\t\t\tvar matrix:Array<number> = this.parseMatrix32RawData();\n\t\t\t\t\tif(graphic) {\n\t\t\t\t\t\tsampler.imageRect = new Rectangle(x, y, width, height);\n\t\t\t\t\t\tgraphic.material.imageRect = true;\n\t\t\t\t\t\tgraphic.material.animateUVs = true;\n\t\t\t\t\t\tgraphic.style.uvMatrix = new Matrix(matrix[0], matrix[2], matrix[1], matrix[3], matrix[4], matrix[5]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tif(graphic) {\n\t\t\t\t//check if curves are needed\n\t\t\t\tif (graphic.elements.getCustomAtributes(\"curves\"))\n\t\t\t\t\tgraphic.material.curves = true;\n\t\t\t}\n\t\t\t// todo: finish optional properties (spreadmode + focalpoint)\n\t\t\tthis._newBlockBytes.readUnsignedInt();\n\t\t}\n\n\t\tthis.parseProperties(null);\n\t\tsprite.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> sprite, name);\n\n\t\tthis._blocks[blockID].data = sprite;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Library-Sprite: Name = '\" + name + \"| Graphics-Name = \" + graphics.name + \" | Graphics-Count = \" + sprite.graphics.count + \" | Mat-Names = \" + materialNames);\n\t}\n\n\tprivate parseAudioBlock(blockID:number, factory:ITimelineSceneGraphFactory)\n\t{\n\t\t//var asset:Audio;todo create asset for audio\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar data_len:number;\n\n\t\t// External\n\t\tif (type == 0) {\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\tvar url:string;\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\n\t\t\t// todo parser needs to be able to handle mp3 and wav files if we trigger the loading of external ressource\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\n\t\t} else {\n\t\t\t// todo: exporter does not export embed sounds yet\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\n\t\t\tvar data:ByteArray = new ByteArray(data_len);\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t// todo parse sound from bytes\n\t\t\t// this._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.by(data), true);\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\n\t\t}\n\n\t\t// Ignore for now\n\t\tthis.parseProperties(null);\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\n\t\tthis._pPauseAndRetrieveDependencies();\n\t\t//this._blocks[blockID].data = asset;todo\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Start parsing a \" + [\"external\", \"embed\"][type] + \" Audio file\");\n\t}\n\n\tprivate static movieClipProperties:Object = {\n\t\t1:AWDParser.FLOAT32,\t//fps\n\t\t2:AWDParser.UINT16,\t\t// sceneID if not present or 0, mc is no scene\n\t\t3:AWDParser.UINT8};\t\t// scripting-language right now its always as2\n\t//Block ID = 4\n\tprivate parseMovieClip(blockID:number, factory:ITimelineSceneGraphFactory)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar cmd_asset:DisplayObject;\n\t\tvar new_timeline:Timeline = new Timeline();\n\t\tvar new_mc = factory.createMovieClip(new_timeline);\n\t\tvar name = this.parseVarStr();\n\n\t\t// register list of potential childs\n\t\t// a potential child can be reused on a timeline (added / removed / added)\n\t\t// However, for each potential child, we need to register the max-number of instances that a frame contains\n\t\t// we parse 2 lists of potential-childs:\n\t\t// -\tthe first list contains potential-childs that are only ever instanced once per frame.\n\t\t// -\tthe second list contains potential-childs that are instanced multiple times on some frames.\n\n\t\t// on registering a child, the child gets a incremental-id assigned. This is the id, that the commands are using to access the childs.\n\t\t// hence we need to be careful to register all objects in correct order.\n\n\t\tvar num_potential_childs:number = this._newBlockBytes.readUnsignedShort();\n\t\tfor (i = 0; i < num_potential_childs; i++) {\n\t\t\tcmd_asset = <DisplayObject> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\t\tif (cmd_asset != null) {\n\t\t\t\tnew_timeline.registerPotentialChild(cmd_asset);\n\t\t\t} else {\n\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\n\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t}\n\t\t}\n\n\t\tvar num_all_display_instances:number = num_potential_childs;\n\n\t\tvar num_potential_childs_multi_instanced = this._newBlockBytes.readUnsignedShort();\n\t\tfor (i = 0; i < num_potential_childs_multi_instanced; i++) {\n\t\t\tcmd_asset = <DisplayObject> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\t\tvar num_instances:number = this._newBlockBytes.readUnsignedShort();\n\t\t\tnum_all_display_instances += num_instances;\n\t\t\tif (cmd_asset != null) {\n\t\t\t\tfor (j = 0; j < num_instances; j++)\n\t\t\t\t\tnew_timeline.registerPotentialChild(cmd_asset);\n\t\t\t} else {\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\n\t\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\n\t\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\n\t\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed \" + (num_potential_childs + num_potential_childs_multi_instanced) + \" potential childs. They will be used by \" + num_all_display_instances + \" instances.\");\n\n\t\t// register list of potential sounds - for now we always have 0 sounds\n\t\tvar num_potential_sounds = this._newBlockBytes.readUnsignedShort();\n\n\n\t\tvar str_cnt = this._newBlockBytes.readUnsignedByte();\n\t\tvar str_len = 0;\n\t\tvar str_data_type = 0;\n\t\tvar str_type=0;\n\t\tvar str_counter=0;\n\t\tfor(i=0; i<str_cnt;i++){\n\t\t\t// the first 6 lists are not optional and always in same order\n\t\t\t// hence we can get type by incremental counter instead of stored uint8\n\t\t\tif(str_counter<6)\n\t\t\t\tstr_type=str_counter;\n\t\t\telse\n\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t// get the data type for this stream (1:UINT8 - 2:UINT16 - 3:UINT32)\n\t\t\tstr_data_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t// size of this stream in byte\n\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\tif(str_len>0) {\n\t\t\t\tvar keyframes_start_indices_data:ByteArray = new ByteArray(str_len);\n\t\t\t\tthis._newBlockBytes.readBytes(keyframes_start_indices_data, 0, str_len);\n\t\t\t\tvar new_buffer:ArrayBufferView;\n\t\t\t\t//console.log(\"str_data_type = \"+str_type);\n\t\t\t\tswitch (str_data_type) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tnew_buffer = new Uint8Array(<ArrayBuffer> keyframes_start_indices_data.arraybytes);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tnew_buffer = new Uint16Array(<ArrayBuffer> keyframes_start_indices_data.arraybytes);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tnew_buffer = new Uint32Array(<ArrayBuffer> keyframes_start_indices_data.arraybytes);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tswitch (str_type) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tnew_timeline.keyframe_durations = new_buffer;\n\t\t\t\t\t\tnew_timeline.numKeyFrames=str_len / str_data_type;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tnew_timeline.frame_command_indices = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tnew_timeline.frame_recipe = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tnew_timeline.command_length_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tnew_timeline.command_index_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\tnew_timeline.add_child_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\tnew_timeline.remove_child_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\tnew_timeline.update_child_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\tnew_timeline.update_child_props_indices_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 9:\n\t\t\t\t\t\tnew_timeline.update_child_props_length_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 10:\n\t\t\t\t\t\tnew_timeline.property_type_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 11:\n\t\t\t\t\t\tnew_timeline.property_index_stream = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 12:\n\t\t\t\t\t\tnew_timeline.properties_stream_int = new_buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tstr_counter++;\n\t\t}\n\t\tvar lc:number=0;\n\t\tvar float_array_data:ByteArray;\n\t\tstr_cnt = this._newBlockBytes.readUnsignedByte();\n\t\tfor(i=0; i<str_cnt;i++){\n\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\tswitch(str_type) {\n\t\t\t\tcase 0://mtx_scale\n\t\t\t\t\tfloat_array_data = new ByteArray(str_len);\n\t\t\t\t\tthis._newBlockBytes.readBytes(float_array_data, 0, str_len);\n\t\t\t\t\tnew_timeline.properties_stream_f32_mtx_scale_rot=new Float32Array(<ArrayBuffer> float_array_data.arraybytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1://mtx_pos\n\t\t\t\t\tfloat_array_data = new ByteArray(str_len);\n\t\t\t\t\tthis._newBlockBytes.readBytes(float_array_data, 0, str_len);\n\t\t\t\t\tnew_timeline.properties_stream_f32_mtx_pos=new Float32Array(<ArrayBuffer> float_array_data.arraybytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2://mtx_all\n\t\t\t\t\tfloat_array_data = new ByteArray(str_len);\n\t\t\t\t\tthis._newBlockBytes.readBytes(float_array_data, 0, str_len);\n\t\t\t\t\tnew_timeline.properties_stream_f32_mtx_all=new Float32Array(<ArrayBuffer> float_array_data.arraybytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3://ct\n\t\t\t\t\tfloat_array_data = new ByteArray(str_len);\n\t\t\t\t\tthis._newBlockBytes.readBytes(float_array_data, 0, str_len);\n\t\t\t\t\tnew_timeline.properties_stream_f32_ct=new Float32Array(<ArrayBuffer> float_array_data.arraybytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4://labels\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t//console.log(\"start reading labels \"+str_len);\n\t\t\t\t\tfor (lc = 0; lc < str_len; lc++) {\n\t\t\t\t\t\tnew_timeline._labels[this.parseVarStr()] = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5://name_stream\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\tvar string_props_array:Array<string>=[];\n\t\t\t\t\tfor (lc = 0; lc < str_len; lc++) {\n\t\t\t\t\t\tstring_props_array.push(this._newBlockBytes.readUTFBytes(this._newBlockBytes.readUnsignedShort()));\n\t\t\t\t\t}\n\t\t\t\t\tnew_timeline.properties_stream_strings = string_props_array;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6://script_stream\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\tfor (lc = 0; lc < str_len; lc++) {\n\t\t\t\t\t\tvar frame_index=this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\tvar one_str_len=this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\t//this._newBlockBytes.readUTFBytes(one_str_len);\n\t\t\t\t\t\tnew_timeline.add_framescript(this._newBlockBytes.readUTFBytes(one_str_len), frame_index);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tnew_timeline.init();\n\n\t\tvar sceneID:number = 0;\n\t\tvar fps:number = 25;\n\t\tthis.parseProperties(AWDParser.movieClipProperties);\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset>new_mc, name);\n\n\t\tthis._blocks[blockID].data = new_mc;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| sceneID = \" + sceneID + \"| numFrames = \" + new_mc.timeline.numFrames);\n\t}\n\n\tprivate static graphicsProperties:Object = {\n\t\t1:AWDParser.GEO_NUMBER,\n\t\t2:AWDParser.GEO_NUMBER};\n\n\tprivate static elementsProperties:Object = {\n\t\t1:AWDParser.GEO_NUMBER,\n\t\t2:AWDParser.GEO_NUMBER};\n\n\t//Block ID = 1\n\tprivate parseGraphics(blockID:number)\n\t{\n\t\tvar graphics:Graphics = new Graphics();\n\n\t\t// Read name and sub count\n\t\tvar name:string = this.parseVarStr();\n\t\tvar numElements:number = this._newBlockBytes.readUnsignedShort();\n\n\t\t// Read optional properties\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.graphicsProperties);\n\t\tvar geoScaleU:number = props.get(1, 1);\n\t\tvar geoScaleV:number = props.get(2, 1);\n\n\t\t//console.log(\"numElements \"+numElements);\n\t\t// Loop through sub sprites\n\t\tfor (var elements_parsed:number = 0;  elements_parsed < numElements; elements_parsed++) {\n\t\t\tvar is_curve_elements:boolean=false;\n\t\t\tvar attr_count:number=0;\n\t\t\tvar sm_len:number, sm_end:number;\n\t\t\tvar w_indices:Array<number>;\n\t\t\tvar weights:Array<number>;\n\n\t\t\tsm_len = this._newBlockBytes.readUnsignedInt();\n\t\t\tsm_end = this._newBlockBytes.position + sm_len;\n\n\t\t\tvar elementsProps:AWDProperties = this.parseProperties(AWDParser.elementsProperties);\n\t\t\t// Loop through data streams\n\t\t\twhile (this._newBlockBytes.position < sm_end) {\n\t\t\t\tvar idx:number = 0;\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\n\n\t\t\t\t// Type, field type, length\n\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\n\n\t\t\t\tvar x:number, y:number, z:number;\n\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\n\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo);\n\n\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\n\t\t\t\t\t\tindices[idx++] = this._newBlockBytes.readUnsignedShort();\n\n\t\t\t\t} else if (str_type == 3) {\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\n\t\t\t\t\t\tuvs[idx++] = this.readNumber(this._accuracyGeo);\n\t\t\t\t} else if (str_type == 4) {\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\n\t\t\t\t\t\tnormals[idx++] = this.readNumber(this._accuracyGeo);\n\t\t\t\t} else if (str_type == 6) {\n\t\t\t\t\tw_indices = Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\n\t\t\t\t\t\tw_indices[idx++] = this._newBlockBytes.readUnsignedShort()*3;\n\t\t\t\t} else if (str_type == 7) {\n\t\t\t\t\tweights = new Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end)\n\t\t\t\t\t\tweights[idx++] = this.readNumber(this._accuracyGeo);\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 7 x float32 (2d pos + uv + curvedata)\n\t\t\t\t\tis_curve_elements = true;\n\t\t\t\t\tattr_count = 28;\n\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\n\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\n\t\t\t\t} else if (str_type == 11) {// combined vertex2D stream 5 x float32 (2d pos + curvedata)\n\t\t\t\t\tis_curve_elements = true;\n\t\t\t\t\tattr_count = 20;\n\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\n\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\n\t\t\t\t} else if (str_type == 12) {// combined vertex2D stream 5 x float32 (2d pos + curvedata)\n\t\t\t\t\tis_curve_elements = true;\n\t\t\t\t\tattr_count = 12;\n\t\t\t\t\tvar curveData:ByteArray = new ByteArray(str_len);\n\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\n\t\t\t\t}else {\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.parseUserAttributes(); // Ignore sub-sprite attributes for now\n\n\t\t\tif(is_curve_elements){\n\t\t\t\tvar vertexBuffer:AttributesBuffer = new AttributesBuffer(attr_count, str_len/attr_count);\n\t\t\t\tvertexBuffer.bufferView = new Uint8Array(<ArrayBuffer> curveData.arraybytes);\n\n\t\t\t\tvar curve_elements:TriangleElements = new TriangleElements(vertexBuffer);\n\n\t\t\t\tcurve_elements.setPositions(new Float2Attributes(vertexBuffer));\n\t\t\t\tif(attr_count==20){\n\t\t\t\t\tcurve_elements.setCustomAttributes(\"curves\", new Float3Attributes(vertexBuffer));\n\t\t\t\t}\n\t\t\t\telse if(attr_count==12){\n\t\t\t\t\tcurve_elements.setCustomAttributes(\"curves\", new Byte4Attributes(vertexBuffer, false));\n\t\t\t\t}\n\n\t\t\t\tif(attr_count==28)\n\t\t\t\t\tcurve_elements.setUVs(new Float2Attributes(vertexBuffer));\n\n\t\t\t\tgraphics.addGraphic(curve_elements);\n\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Parsed a TriangleElements with curves\");\n\n\t\t\t} else {\n\t\t\t\tvar triangle_elements = new TriangleElements(new AttributesBuffer());\n\n\t\t\t\tif (weights)\n\t\t\t\t\ttriangle_elements.jointsPerVertex = weights.length / (verts.length / 3);\n\n\t\t\t\tif (normals)\n\t\t\t\t\ttriangle_elements.autoDeriveNormals = false;\n\n\t\t\t\ttriangle_elements.autoDeriveTangents = true;\n\n\t\t\t\ttriangle_elements.setIndices(indices);\n\t\t\t\ttriangle_elements.setPositions(verts);\n\t\t\t\ttriangle_elements.setNormals(normals);\n\t\t\t\ttriangle_elements.setUVs(uvs);\n\t\t\t\ttriangle_elements.setJointWeights(weights);\n\t\t\t\ttriangle_elements.setJointIndices(w_indices);\n\n\t\t\t\tvar scaleU:number = elementsProps.get(1, 1);\n\t\t\t\tvar scaleV:number = elementsProps.get(2, 1);\n\t\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the graphics\n\n\t\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\n\t\t\t\t\tsetSubUVs = true;\n\t\t\t\t\tscaleU = geoScaleU / scaleU;\n\t\t\t\t\tscaleV = geoScaleV / scaleV;\n\t\t\t\t}\n\n\t\t\t\tif (setSubUVs)\n\t\t\t\t\ttriangle_elements.scaleUV(scaleU, scaleV);\n\n\t\t\t\tgraphics.addGraphic(triangle_elements);\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"Parsed a TriangleElements\");\n\t\t\t}\n\n\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\n\t\t\t// when creating sprites (and their material assignments.)\n\t\t}\n\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\n\t\t\tgraphics.scaleUV(geoScaleU, geoScaleV);\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> graphics, name);\n\t\tthis._blocks[blockID].data = graphics;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed Graphics: Name = \" + name);\n\t}\n\n\tprivate static primitiveProperties:Object = {\n\t\t101:AWDParser.GEO_NUMBER,\n\t\t102:AWDParser.GEO_NUMBER,\n\t\t103:AWDParser.GEO_NUMBER,\n\t\t110:AWDParser.GEO_NUMBER,\n\t\t111:AWDParser.GEO_NUMBER,\n\t\t301:AWDParser.UINT16,\n\t\t302:AWDParser.UINT16,\n\t\t303:AWDParser.UINT16,\n\t\t701:AWDParser.BOOL,\n\t\t702:AWDParser.BOOL,\n\t\t703:AWDParser.BOOL,\n\t\t704:AWDParser.BOOL};\n\n\tprivate static primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"];\n\n\t//Block ID = 11\n\tprivate parsePrimitves(blockID:number)\n\t{\n\t\tvar name:string;\n\t\tvar prefab:PrefabBase;\n\t\tvar primType:number;\n\t\tvar elements_parsed:number;\n\t\tvar props:AWDProperties;\n\t\tvar bsm:Matrix3D;\n\n\t\t// Read name and sub count\n\t\tname = this.parseVarStr();\n\t\tprimType = this._newBlockBytes.readUnsignedByte();\n\t\tprops = this.parseProperties(AWDParser.primitiveProperties);\n\n\t\t// to do, not all properties are set on all primitives\n\t\tswitch (primType) {\n\t\t\tcase 1:\n\t\t\t\tprefab = new PrimitivePlanePrefab(null, ElementsType.TRIANGLE, props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tprefab = new PrimitiveCubePrefab(null, ElementsType.TRIANGLE, props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\tprefab = new PrimitiveSpherePrefab(null, ElementsType.TRIANGLE, props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 4:\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(null, ElementsType.TRIANGLE, props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\n\t\t\t\tif (!props.get(701, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\n\t\t\t\tif (!props.get(702, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\n\t\t\t\tif (!props.get(703, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\t\tprefab = new PrimitiveConePrefab(null, ElementsType.TRIANGLE, props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 6:\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(null, ElementsType.TRIANGLE, props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 7:\n\t\t\t\tprefab = new PrimitiveTorusPrefab(null, ElementsType.TRIANGLE, props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tprefab = new PrefabBase();\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\n\t\t\t//graphics.elements;\n\t\t\t//graphics.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\n\t\t}\n\n\t\tthis.parseUserAttributes();\n\t\tprefab.name = name;\n\t\tthis._pFinalizeAsset(prefab, name);\n\t\tthis._blocks[blockID].data = prefab;\n\n\t\tif (this._debug) {\n\t\t\tif ((primType < 0) || (primType > 7))\n\t\t\t\tprimType = 0;\n\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + name + \"| type = \" + AWDParser.primitiveTypes[primType]);\n\t\t}\n\t}\n\n\tprivate static containerProperties:Object = {\n\t\t1:AWDParser.MATRIX_NUMBER,\n\t\t2:AWDParser.MATRIX_NUMBER,\n\t\t3:AWDParser.MATRIX_NUMBER,\n\t\t4:AWDParser.UINT8};\n\n\t// Block ID = 22\n\tprivate parseContainer(blockID:number)\n\t{\n\t\tvar name:string;\n\t\tvar mtx:Matrix3D;\n\t\tvar ctr:DisplayObjectContainer;\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\n\t\tmtx = this.parseMatrix3D();\n\t\tname = this.parseVarStr();\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tctr = new DisplayObjectContainer();\n\t\tctr.transform.matrix3D = mtx;\n\n\t\tif (parent) {\n\t\t\tparent.addChild(ctr);\n\t\t\tparentName = parent.name;\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(ctr);\n\t\t}\n\n\t\t// in AWD version 2.1 we read the Container properties\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tvar props:AWDProperties = this.parseProperties(AWDParser.containerProperties);\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t} else {// in other versions we do not read the Container properties\n\t\t\tthis.parseProperties(null);\n\t\t}\n\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\n\t\tctr.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> ctr, name);\n\t\tthis._blocks[blockID].data = ctr;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + name + \"' | Parent-Name = \" + parentName);\n\t}\n\n\tprivate static spriteInstanceProperties:Object = {\n\t\t1:AWDParser.MATRIX_NUMBER,\n\t\t2:AWDParser.MATRIX_NUMBER,\n\t\t3:AWDParser.MATRIX_NUMBER,\n\t\t4:AWDParser.UINT8,\n\t\t5:AWDParser.BOOL};\n\n\t// Block ID = 23\n\tprivate parseSpriteInstance(blockID:number)\n\t{\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar asset:IAsset = <IAsset> this._blocks[data_id].data;\n\t\tvar graphics:Graphics;\n\t\tvar prefab:PrefabBase;\n\t\tvar isPrefab:boolean=false;\n\t\tif (asset.isAsset(Graphics)) {\n\t\t\tgraphics = <Graphics> asset;\n\t\t} else {\n\t\t\tisPrefab = true;\n\t\t\tprefab = <PrefabBase> asset;\n\t\t}\n\n\t\tthis._blocks[blockID].geoID = data_id;\n\t\tvar num_materials:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar materials:Array<MethodMaterial> = new Array<MethodMaterial>();\n\t\tvar materialNames:Array<string> = new Array<string>();\n\t\tvar mat:MethodMaterial;\n\t\tfor (var materials_parsed:number = 0; materials_parsed < num_materials; materials_parsed++) {\n\t\t\tmat = <MethodMaterial> (this._blocks[this._newBlockBytes.readUnsignedInt()].data || DefaultMaterialManager.getDefaultMaterial());\n\t\t\tmaterials[materials_parsed] = mat;\n\t\t\tmaterialNames[materials_parsed] = mat.name;\n\t\t}\n\n\t\tvar sprite:Sprite;\n\n\t\tif (isPrefab) {\n\t\t\tsprite = <Sprite> prefab.getNewObject()\n\t\t} else {\n\t\t\tsprite = new Sprite();\n\t\t\tgraphics.copyTo(sprite.graphics);\n\t\t}\n\n\t\tsprite.transform.matrix3D = mtx;\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tif (parent) {\n\t\t\tparent.addChild(sprite);\n\t\t\tparentName = parent.name;\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(sprite);\n\t\t}\n\n\t\tif (materials.length >= 1 && sprite.graphics.count == 1) {\n\t\t\tsprite.material = materials[0];\n\t\t} else if (materials.length > 1) {\n\t\t\t// Assign each sub-sprite in the sprite a material from the list. If more sub-sprites\n\t\t\t// than materials, repeat the last material for all remaining sub-sprites.\n\t\t\tfor (var i:number = 0; i < sprite.graphics.count; i++)\n\t\t\t\tsprite.graphics.getGraphicAt(i).material = materials[Math.min(materials.length - 1, i)];\n\t\t}\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tvar props:AWDProperties = this.parseProperties(AWDParser.spriteInstanceProperties);\n\t\t\tsprite.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t\tsprite.castsShadows = props.get(5, true);\n\t\t} else {\n\t\t\tthis.parseProperties(null);\n\t\t}\n\n\t\tsprite.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> sprite, name);\n\t\tthis._blocks[blockID].data = sprite;\n\n\t\tif (this._debug) {\n\t\t\tif (isPrefab)\n\t\t\t\tconsole.log(\"Parsed a Sprite for Prefab: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Prefab-Name = \" + prefab.name + \" | Graphics-Count = \" + sprite.graphics.count + \" | Mat-Names = \" + materialNames);\n\t\t\telse\n\t\t\t\tconsole.log(\"Parsed a Sprite for Graphics: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Graphics-Name = \" + graphics.name + \" | Graphics-Count = \" + sprite.graphics.count + \" | Mat-Names = \" + materialNames);\n\t\t}\n\t}\n\n\n\t//Block ID 31\n\tprivate parseSkyboxInstance(blockID:number)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar asset:Skybox = new Skybox();\n\t\tvar tex:SingleCubeTexture = new SingleCubeTexture(<BitmapImageCube> this._blocks[this._newBlockBytes.readUnsignedInt()].data || DefaultMaterialManager.getDefaultImageCube());\n\t\tasset.texture = tex;\n\n\t\tthis.parseProperties(null);\n\t\tasset.extra = this.parseUserAttributes();\n\t\tthis._pFinalizeAsset(asset, name);\n\t\tthis._blocks[blockID].data = asset;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + name + \"' | CubeTexture-Name = \" + tex.name);\n\t}\n\n\tprivate static lightProperties:Object = {\n\t\t1:AWDParser.PROPERTY_NUMBER,\n\t\t2:AWDParser.PROPERTY_NUMBER,\n\t\t3:AWDParser.COLOR,\n\t\t4:AWDParser.PROPERTY_NUMBER,\n\t\t5:AWDParser.PROPERTY_NUMBER,\n\t\t6:AWDParser.BOOL,\n\t\t7:AWDParser.COLOR,\n\t\t8:AWDParser.PROPERTY_NUMBER,\n\t\t9:AWDParser.UINT8,\n\t\t10:AWDParser.UINT8,\n\t\t11:AWDParser.PROPERTY_NUMBER,\n\t\t12:AWDParser.UINT16,\n\t\t21:AWDParser.MATRIX_NUMBER,\n\t\t22:AWDParser.MATRIX_NUMBER,\n\t\t23:AWDParser.MATRIX_NUMBER};\n\n\t//Block ID = 41\n\tprivate parseLight(blockID:number)\n\t{\n\t\tvar light:LightBase;\n\t\tvar newShadowMapper:ShadowMapperBase;\n\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\t\tvar lightType:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.lightProperties);\n\t\tvar shadowMapperType:number = props.get(9, 0);\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\n\n\t\tif (lightType == 1) {\n\t\t\tlight = new PointLight();\n\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 4) {\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlight.transform.matrix3D = mtx;\n\t\t}\n\n\t\tif (lightType == 2) {\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 1) {\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\n\t\t\t\t}\n\n\t\t\t\t//if (shadowMapperType == 2)\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\n\t\t\t\t//if (shadowMapperType == 3)\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\n\n\t\t\t}\n\t\t}\n\n\t\tlight.color = props.get(3, 0xffffff);\n\t\tlight.specular = props.get(4, 1.0);\n\t\tlight.diffuse = props.get(5, 1.0);\n\t\tlight.ambientColor = props.get(7, 0xffffff);\n\t\tlight.ambient = props.get(8, 0.0);\n\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\n\t\tif (newShadowMapper) {\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\n\t\t\t\tif (props.get(10, 1) != 1)\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 1)];\n\t\t\t} else {\n\t\t\t\tif (props.get(10, 2) != 2)\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 2)];\n\t\t\t}\n\n\t\t\tlight.shadowMapper = newShadowMapper;\n\t\t\tlight.castsShadows = true;\n\t\t}\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tif (parent) {\n\t\t\tparent.addChild(light);\n\t\t\tparentName = parent.name;\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(light);\n\t\t}\n\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(< IAsset> light, name);\n\n\t\tthis._blocks[blockID].data = light;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\n\t}\n\n\tprivate static cameraProperties:Object = {\n\t\t101:AWDParser.PROPERTY_NUMBER,\n\t\t102:AWDParser.PROPERTY_NUMBER,\n\t\t103:AWDParser.PROPERTY_NUMBER,\n\t\t104:AWDParser.PROPERTY_NUMBER};\n\n\tprivate static cameraPivotProperties:Object = {\n\t\t1:AWDParser.MATRIX_NUMBER,\n\t\t2:AWDParser.MATRIX_NUMBER,\n\t\t3:AWDParser.MATRIX_NUMBER,\n\t\t4:AWDParser.UINT8};\n\n\t//Block ID = 43\n\tprivate parseCamera(blockID:number)\n\t{\n\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\t\tvar projection:ProjectionBase;\n\n\t\tthis._newBlockBytes.readUnsignedByte(); //set as active camera\n\t\tthis._newBlockBytes.readShort(); //lengthof lenses - not used yet\n\n\t\tvar projectiontype:number = this._newBlockBytes.readShort();\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.cameraProperties);\n\n\t\tswitch (projectiontype) {\n\t\t\tcase 5001:\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\n\t\t\t\tbreak;\n\t\t\tcase 5002:\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\n\t\t\t\tbreak;\n\t\t\tcase 5003:\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\n\t\t\t\treturn;\n\t\t}\n\n\t\tvar camera:Camera = new Camera(projection);\n\t\tcamera.transform.matrix3D = mtx;\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tif (parent) {\n\t\t\tparent.addChild(camera);\n\t\t\tparentName = parent.name;\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(camera);\n\t\t}\n\n\t\tcamera.name = name;\n\t\tprops = this.parseProperties(AWDParser.cameraPivotProperties);\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\tcamera.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(camera, name);\n\n\t\tthis._blocks[blockID].data = camera;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\n\t}\n\n\t//Block ID = 51\n\tprivate parseLightPicker(blockID:number)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar numLights:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\n\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\n\n\t\tfor (var k:number = 0; k < numLights; k++) {\n\t\t\tvar light:LightBase = <LightBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\t\tlightsArray.push(light);\n\t\t\tlightsArrayNames.push(light.name);\n\t\t}\n\n\t\tif (lightsArray.length == 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not create this LightPicker, cause no Light was found.\");\n\t\t\tthis.parseUserAttributes();\n\t\t\treturn; //return without any more parsing for this block\n\t\t}\n\n\t\tvar lightPick:LightPickerBase = new StaticLightPicker(lightsArray);\n\t\tlightPick.name = name;\n\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> lightPick, name);\n\n\t\tthis._blocks[blockID].data = lightPick;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + name + \"' | Texture-Name = \" + lightsArrayNames);\n\t}\n\n\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\n\tprivate static materialProperties:Object = {\n\t\t1:AWDParser.INT32,\n\t\t2:AWDParser.BADDR,\n\t\t10:AWDParser.PROPERTY_NUMBER,\n\t\t11:AWDParser.BOOL,\n\t\t12:AWDParser.PROPERTY_NUMBER,\n\t\t13:AWDParser.BOOL};\n\n\t//Block ID = 81\n\tprivate parseMaterial(blockID:number)\n\t{\n\t\t// TODO: not used\n\t\t////blockLength = block.len;\n\t\tvar name:string;\n\t\tvar type:number;\n\t\tvar props:AWDProperties;\n\t\tvar mat:MethodMaterial;\n\t\tvar finalize:boolean;\n\t\tvar num_methods:number;\n\t\tvar methods_parsed:number;\n\t\tvar returnedArray:Array<any>;\n\n\t\tname = this.parseVarStr();\n\t\ttype = this._newBlockBytes.readUnsignedByte();\n\t\tnum_methods = this._newBlockBytes.readUnsignedByte();\n\n\t\t// Read material numerical properties\n\t\tprops = this.parseProperties(AWDParser.materialProperties);\n\n\t\tmethods_parsed = 0;\n\t\twhile (methods_parsed < num_methods) {\n\t\t\tvar method_type:number;\n\n\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\n\t\t\tthis.parseProperties(null);\n\t\t\tthis.parseUserAttributes();\n\t\t\tmethods_parsed += 1;\n\t\t}\n\n\t\tvar debugString:string = \"\";\n\t\tif (type === 1) { // Color material\n\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\tvar color:number = props.get(1, 0xffffff);\n\t\t\tif (this.materialMode < 2) {\n\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\n\t\t\t} else {\n\t\t\t\tmat = new MethodMaterial(color);\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t}\n\t\t} else if (type === 2) {\n\t\t\tvar texture:Single2DTexture = new Single2DTexture(<BitmapImage2D> this._blocks[props.get(2, 0)].data);\n\n\t\t\tmat = new MethodMaterial();\n\t\t\tmat.ambientMethod.texture = texture;\n\n\t\t\tif (this.materialMode < 2) {\n\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\n\t\t\t} else {\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\n\t\t\t}\n\t\t}\n\n\t\tmat.extra = this.parseUserAttributes();\n\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\tmat.style.sampler = new Sampler2D(props.get(13, false));\n\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\n\n\t\tthis._blocks[blockID].data = mat;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(debugString);\n\t}\n\t\n\tprivate static material_v1Properties:Object = {1:AWDParser.UINT32,\n\t\t2:AWDParser.BADDR,\n\t\t3:AWDParser.BADDR,\n\t\t4:AWDParser.UINT8,\n\t\t5:AWDParser.BOOL,\n\t\t6:AWDParser.BOOL,\n\t\t7:AWDParser.BOOL,\n\t\t8:AWDParser.BOOL,\n\t\t9:AWDParser.UINT8,\n\t\t10:AWDParser.PROPERTY_NUMBER,\n\t\t11:AWDParser.BOOL,\n\t\t12:AWDParser.PROPERTY_NUMBER,\n\t\t13:AWDParser.BOOL,\n\t\t15:AWDParser.PROPERTY_NUMBER,\n\t\t16:AWDParser.UINT32,\n\t\t17:AWDParser.BADDR,\n\t\t18:AWDParser.PROPERTY_NUMBER,\n\t\t19:AWDParser.PROPERTY_NUMBER,\n\t\t20:AWDParser.UINT32,\n\t\t21:AWDParser.BADDR,\n\t\t22:AWDParser.BADDR};\n\n\tprivate static method_v1Properties:Object = {\n\t\t1:AWDParser.BADDR,\n\t\t2:AWDParser.BADDR,\n\t\t3:AWDParser.BADDR,\n\t\t101:AWDParser.PROPERTY_NUMBER,\n\t\t102:AWDParser.PROPERTY_NUMBER,\n\t\t103:AWDParser.PROPERTY_NUMBER,\n\t\t201:AWDParser.UINT32,\n\t\t202:AWDParser.UINT32,\n\t\t301:AWDParser.UINT16,\n\t\t302:AWDParser.UINT16,\n\t\t401:AWDParser.UINT8,\n\t\t402:AWDParser.UINT8,\n\t\t601:AWDParser.COLOR,\n\t\t602:AWDParser.COLOR,\n\t\t701:AWDParser.BOOL,\n\t\t702:AWDParser.BOOL,\n\t\t801:AWDParser.MTX4x4};\n\n\t// Block ID = 81 AWD2.1\n\tprivate parseMaterial_v1(blockID:number)\n\t{\n\t\tvar mat:MethodMaterial;\n\t\tvar diffuseImage:BitmapImage2D;\n\t\tvar normalImage:BitmapImage2D;\n\t\tvar specImage:BitmapImage2D;\n\n\t\tvar name:string = this.parseVarStr();\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar num_methods:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.material_v1Properties);\n\t\tvar spezialType:number = props.get(4, 0);\n\t\tvar debugString:string = \"Parsed Material \";\n\n\t\tif (spezialType >= 2) {//this is no supported material\n\t\t\tthis._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (type <= 2) {// Color material\n\t\t\tif (this.materialMode == 1)\n\t\t\t\tspezialType = 0;\n\t\t\telse if (this.materialMode == 2)\n\t\t\t\tspezialType = 1;\n\n\t\t\tif (spezialType < 2) {//this is SinglePass or MultiPass\n\n\t\t\t\tif (type == 1) {// Color material\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\n\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\n\t\t\t\t\t\tmat = new MethodMaterial(color);\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\n\n\t\t\t\t\t} else { //\tSinglePassMaterial\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\t\t\t}\n\n\t\t\t\t} else if (type == 2) {// texture material\n\t\t\t\t\tvar texture:Single2DTexture = new Single2DTexture(<BitmapImage2D> this._blocks[props.get(2, 0)].data);\n\n\t\t\t\t\tmat = new MethodMaterial();\n\t\t\t\t\tmat.ambientMethod.texture = texture;\n\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\n\t\t\t\t\t} else {//\tSinglePassMaterial\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"'\" + (texture? \" | Texture-Name = \" + texture.name : \"\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdiffuseImage = <BitmapImage2D> this._blocks[props.get(17, 0)].data;\n\t\t\t\tnormalImage = <BitmapImage2D> this._blocks[props.get(3, 0)].data;\n\t\t\t\tspecImage = <BitmapImage2D> this._blocks[props.get(21, 0)].data;\n\t\t\t\tmat.lightPicker = <LightPickerBase> this._blocks[props.get(22, 0)].data;\n\t\t\t\tmat.style.sampler = new Sampler2D(props.get(13, false), props.get(5, true), props.get(6, true))\n\t\t\t\tmat.bothSides = props.get(7, false);\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\n\t\t\t\tmat.blendMode = this.blendModeDic[props.get(9, 0)];\n\n\t\t\t\tif (diffuseImage) {\n\t\t\t\t\tmat.diffuseTexture = new Single2DTexture(diffuseImage);\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseImage.name;\n\t\t\t\t}\n\n\t\t\t\tif (normalImage) {\n\t\t\t\t\tmat.normalMethod.texture = new Single2DTexture(normalImage);\n\t\t\t\t\tdebugString += \" | NormalTexture-Name = \" + normalImage.name;\n\t\t\t\t}\n\n\t\t\t\tif (specImage) {\n\t\t\t\t\tmat.specularMethod.texture = new Single2DTexture(specImage);\n\t\t\t\t\tdebugString += \" | SpecularTexture-Name = \" + specImage.name;\n\t\t\t\t}\n\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\t\t\tmat.ambientMethod.strength = props.get(15, 1.0);\n\t\t\t\tmat.diffuseMethod.color = props.get(16, 0xffffff);\n\t\t\t\tmat.specularMethod.strength = props.get(18, 1.0);\n\t\t\t\tmat.specularMethod.gloss = props.get(19, 50);\n\t\t\t\tmat.specularMethod.color = props.get(20, 0xffffff);\n\n\t\t\t\tfor (var methods_parsed:number = 0; methods_parsed < num_methods; methods_parsed++) {\n\t\t\t\t\tvar method_type:number;\n\t\t\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\n\n\t\t\t\t\tprops = this.parseProperties(AWDParser.method_v1Properties);\n\n\t\t\t\t\tswitch (method_type) {\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffektMethod returned\n\t\t\t\t\t\t\tvar effectMethod:EffectMethodBase = <EffectMethodBase> this._blocks[props.get(1, 0)].data;\n\t\t\t\t\t\t\tmat.addEffectMethod(effectMethod);\n\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + effectMethod.name;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\n\t\t\t\t\t\t\tvar shadowMapMethod:ShadowMapMethodBase = <ShadowMapMethodBase> this._blocks[props.get(1, 0)].data;\n\t\t\t\t\t\t\tmat.shadowMethod = shadowMapMethod;\n\t\t\t\t\t\t\tdebugString += \" | ShadowMethod-Name = \" + shadowMapMethod.name;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\n\t\t\t\t\t\t\tvar cubeTexture:SingleCubeTexture = new SingleCubeTexture(<BitmapImageCube> this._blocks[props.get(1, 0)].data);\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod();\n\t\t\t\t\t\t\tmat.ambientMethod.texture = cubeTexture;\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + cubeTexture.name;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\n\t\t\t\t\t\t\tvar texture:Single2DTexture = new Single2DTexture(<BitmapImage2D> this._blocks[props.get(1, 0)].data);\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(texture);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + texture.name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\n\t\t\t\t\t\t\tvar texture:Single2DTexture = new Single2DTexture(<BitmapImage2D> this._blocks[props.get(1, 0)].data);\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(texture, this.blendModeDic[props.get(401, 10)], false, mat.diffuseMethod);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + texture.name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\n\t\t\t\t\t\t\tvar texture:Single2DTexture = new Single2DTexture(<BitmapImage2D> this._blocks[props.get(1, 0)].data);\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(<Single2DTexture> mat.normalMethod.texture || texture, texture);\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + texture.name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tthis.parseUserAttributes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// todo: we should not need this anymore (if using texture-atlas)\n\t\telse if ((type>=3)&&(type<=7)){\n\t\t\t// if this is a basic material, we create it, finalize it, assign it to block-cache and return.\n\t\t\tvar color:number = props.get(1, 0xcccccc);\n\t\t\tdebugString+=color;\n\t\t\tvar diffuseTexture:Single2DTexture = new Single2DTexture(<BitmapImage2D> this._blocks[props.get(2, 0)].data);\n\t\t\tif(type==5){\n\t\t\t\tdiffuseTexture.mappingMode = MappingMode.LINEAR_GRADIENT;\n\t\t\t}\n\t\t\telse if(type==6){\n\t\t\t\tdiffuseTexture.mappingMode = MappingMode.RADIAL_GRADIENT;\n\t\t\t}\n\t\t\tvar basic_mat:BasicMaterial = new BasicMaterial();\n\t\t\tbasic_mat.texture = diffuseTexture;\n\t\t\tbasic_mat.bothSides = true;\n\t\t\t//basic_mat.preserveAlpha = true;\n\t\t\tbasic_mat.alphaBlending = true;\n\t\t\tbasic_mat.extra = this.parseUserAttributes();\n\t\t\tthis._pFinalizeAsset(<IAsset> basic_mat, name);\n\t\t\tthis._blocks[blockID].data = basic_mat;\n\t\t\tif (this._debug)\n\t\t\t\tconsole.log(debugString);\n\t\t\treturn;\n\t\t\n\t\t}\n\t\tmat.extra = this.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\n\n\t\tthis._blocks[blockID].data = mat;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(debugString);\n\t}\n\n\t//Block ID = 82\n\tprivate parseTexture(blockID:number)\n\t{\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\n\t\tthis._texture_users[this._cur_block_id] = [];\n\n\t\t// External\n\t\tif (type == 0) {\n\t\t\tvar url:string = this._newBlockBytes.readUTFBytes(this._newBlockBytes.readUnsignedInt());\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\n\n\t\t} else {\n\t\t\tvar data_len:number = this._newBlockBytes.readUnsignedInt();\n\t\t\tvar data:ByteArray = new ByteArray(data_len);\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t//\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\n\t\t\t//\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\n\t\t\t// This gives the browser time to initialise image width / height.\n\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\n\n\t\t}\n\n\t\t// Ignore for now\n\t\tthis.parseProperties(null);\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\n\n\t\tthis._pPauseAndRetrieveDependencies();\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Start parsing a \" + [\"external\", \"embed\"][type] + \" Bitmap for Texture\");\n\t}\n\n\t//Block ID = 83\n\tprivate parseCubeTexture(blockID:number)\n\t{\n\t\t//blockLength = block.len;\n\t\tvar data_len:number;\n\t\tvar i:number;\n\n\t\tthis._texture_users[ this._cur_block_id ] = [];\n\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tfor (i = 0; i < 6; i++) {\n\t\t\tthis._texture_users[this._cur_block_id] = [];\n\n\t\t\t// External\n\t\t\tif (type == 0) {\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tvar url:string;\n\t\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true, i);\n\t\t\t} else {\n\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tvar data:ByteArray = new ByteArray(data_len);\n\t\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true, i);\n\t\t\t}\n\t\t}\n\n\t\t// Ignore for now\n\t\tthis.parseProperties(null);\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\n\t\tthis._pPauseAndRetrieveDependencies();\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Start parsing 6 \" + [\"external\", \"embed\"][type] + \" Bitmaps for CubeTexture\");\n\t}\n\n\t//Block ID = 91\n\tprivate parseSharedMethodBlock(blockID:number)\n\t{\n\t\tvar asset:EffectMethodBase;\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\t\tasset = this.parseSharedMethodList(blockID);\n\t\tthis.parseUserAttributes();\n\t\tthis._blocks[blockID].data = asset;\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\n\t}\n\n\t//Block ID = 92\n\tprivate parseShadowMethodBlock(blockID:number)\n\t{\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\t\tvar light:LightBase = <LightBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar asset:ShadowMethodBase = this.parseShadowMethodList(light, blockID);\n\n\t\tif (!asset)\n\t\t\treturn;\n\n\t\tthis.parseUserAttributes(); // Ignore for now\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", light.name);\n\t}\n\n\tprivate static commandProperties:Object = {\n\t\t1:AWDParser.BADDR};\n\n\tprivate static targetProperties:Object = {\n\t\t1:AWDParser.MATRIX_NUMBER,\n\t\t2:AWDParser.MATRIX_NUMBER,\n\t\t3:AWDParser.MATRIX_NUMBER,\n\t\t4:AWDParser.UINT8};\n\t\n\t//Block ID = 253\n\tprivate parseCommand(blockID:number)\n\t{\n\t\tvar hasBlocks:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\n\t\tvar parentObject:DisplayObjectContainer = <DisplayObjectContainer> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\tvar targetObject:DisplayObjectContainer;\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\n\t\tvar numCommands:number = this._newBlockBytes.readShort();\n\t\tvar typeCommand:number = this._newBlockBytes.readShort();\n\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.commandProperties);\n\n\t\tswitch (typeCommand) {\n\t\t\tcase 1:\n\t\t\t\ttargetObject = this._blocks[props.get(1, 0)].data;\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\n\n\t\t\t\tif (parentObject)\n\t\t\t\t\tparentObject.addChild(targetObject);\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (targetObject) {\n\t\t\tprops = this.parseProperties(AWDParser.targetProperties);\n\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t\ttargetObject.extra = this.parseUserAttributes();\n\t\t}\n\n\t\tthis._blocks[blockID].data = targetObject;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\n\t}\n\t\n\tprivate static metaDataProperties:Object = {\n\t\t1:AWDParser.UINT32,\n\t\t2:AWDParser.AWDSTRING,\n\t\t3:AWDParser.AWDSTRING,\n\t\t4:AWDParser.AWDSTRING,\n\t\t5:AWDParser.AWDSTRING};\n\n\t//blockID 255\n\tprivate parseMetaData(blockID:number)\n\t{\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.metaDataProperties);\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\n\t\t}\n\t}\n\n\t//blockID 254\n\tprivate parseNameSpace(blockID:number)\n\t{\n\t\tvar id:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar nameSpaceString:string = this.parseVarStr();\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\n\t}\n\n\t//--Parser UTILS---------------------------------------------------------------------------\n\n\tprivate shadowMethodListProperties:Object = {\n\t\t1:AWDParser.BADDR,\n\t\t2:AWDParser.BADDR,\n\t\t3:AWDParser.BADDR,\n\t\t101:AWDParser.PROPERTY_NUMBER,\n\t\t102:AWDParser.PROPERTY_NUMBER,\n\t\t103:AWDParser.PROPERTY_NUMBER,\n\t\t201:AWDParser.UINT32,\n\t\t202:AWDParser.UINT32,\n\t\t301:AWDParser.UINT16,\n\t\t302:AWDParser.UINT16,\n\t\t401:AWDParser.UINT8,\n\t\t402:AWDParser.UINT8,\n\t\t601:AWDParser.COLOR,\n\t\t602:AWDParser.COLOR,\n\t\t701:AWDParser.BOOL,\n\t\t702:AWDParser.BOOL,\n\t\t801:AWDParser.MTX4x4}\n\t\n\t// this functions reads and creates a ShadowMethodMethod\n\tprivate parseShadowMethodList(light:LightBase, blockID:number):ShadowMethodBase\n\t{\n\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar shadowMethod:ShadowMethodBase;\n\t\tvar props:AWDProperties = this.parseProperties(this.shadowMethodListProperties);\n\n\t\tvar targetID:number;\n\t\tvar returnedArray:Array<any>\n\t\tswitch (methodType) {\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this CascadeShadowMapMethod - ShadowMethod not created\");\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\n\t\t\t//\t\t\t\t\t}\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 1002: //ShadowNearMethod\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> this._blocks[props.get(1, 0)].data);\n\t\t\t\tbreak;\n\t\t\tcase 1101: //ShadowFilteredMethod\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t\tcase 1102: //ShadowDitheredMethod\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1103: //ShadowSoftMethod\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1104: //ShadowHardMethod\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\treturn shadowMethod;\n\t}\n\n\t//Block ID 101\n\tprivate parseSkeleton(blockID:number /*uint*/)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar skeleton:Skeleton = new Skeleton();\n\t\tthis.parseProperties(null); // Discard properties for now\n\n\t\tfor (var joints_parsed:number = 0; joints_parsed < num_joints; joints_parsed++) {\n\t\t\tvar joint:SkeletonJoint;\n\t\t\tvar ibp:Matrix3D;\n\t\t\t// Ignore joint id\n\t\t\tthis._newBlockBytes.readUnsignedShort();\n\t\t\tjoint = new SkeletonJoint();\n\t\t\tjoint.parentIndex = this._newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\n\t\t\tjoint.name = this.parseVarStr();\n\n\t\t\tibp = this.parseMatrix3D();\n\t\t\tjoint.inverseBindPose = ibp.rawData;\n\t\t\t// Ignore joint props/attributes for now\n\t\t\tthis.parseProperties(null);\n\t\t\tthis.parseUserAttributes();\n\t\t\tskeleton.joints.push(joint);\n\t\t}\n\n\t\t// Discard attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(skeleton, name);\n\n\t\tthis._blocks[blockID].data = skeleton;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + skeleton.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\t//Block ID = 102\n\tprivate parseSkeletonPose(blockID:number /*uint*/)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tthis.parseProperties(null); // Ignore properties for now\n\n\t\tvar pose:SkeletonPose = new SkeletonPose();\n\n\t\tfor (var joints_parsed:number = 0; joints_parsed < num_joints; joints_parsed++) {\n\t\t\tvar joint_pose:JointPose;\n\t\t\tvar has_transform:number /*uint*/;\n\t\t\tjoint_pose = new JointPose();\n\t\t\thas_transform = this._newBlockBytes.readUnsignedByte();\n\t\t\tif (has_transform == 1) {\n\t\t\t\tvar mtx_data:Float32Array = this.parseMatrix43RawData();\n\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\n\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\n\t\t\t}\n\t\t}\n\n\t\t// Skip attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(pose, name);\n\n\t\tthis._blocks[blockID].data = pose;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + pose.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\t//blockID 103\n\tprivate parseSkeletonAnimation(blockID:number /*uint*/)\n\t{\n\t\tvar frame_dur:number;\n\t\tvar pose_id:number;\n\t\tvar name:string = this.parseVarStr();\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tthis.parseProperties(null); // Ignore properties for now\n\n\t\tfor (var frames_parsed:number = 0; frames_parsed < num_frames; frames_parsed++) {\n\t\t\tpose_id = this._newBlockBytes.readUnsignedInt();\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\n\t\t\tclip.addFrame(<SkeletonPose> this._blocks[pose_id].data, frame_dur);\n\t\t}\n\t\tif (clip.frames.length == 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not this SkeletonClipNode, because no Frames where set.\");\n\t\t\treturn;\n\t\t}\n\t\t// Ignore attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(clip, name);\n\t\tthis._blocks[blockID].data = clip;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + clip.name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\t\n\tprivate spritePoseAnimationProperties:Object = {\n\t\t1:AWDParser.BOOL,\n\t\t2:AWDParser.BOOL};\n\n\t//Block ID = 111 /  Block ID = 112\n\tprivate parseSpritePoseAnimation(blockID:number /*uint*/, poseOnly:boolean = false)\n\t{\n\t\tvar subSpriteParsed:number /*uint*/;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar str_len:number;\n\t\tvar str_end:number;\n\t\tvar elements:TriangleElements;\n\t\tvar idx:number /*int*/ = 0;\n\t\tvar clip:VertexClipNode = new VertexClipNode();\n\t\tvar indices:Short3Attributes;\n\t\tvar verts:Array<number>;\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\n\t\tvar props:AWDProperties;\n\t\tvar name:string = this.parseVarStr();\n\t\tvar geo_id:number /*int*/ = this._newBlockBytes.readUnsignedInt();\n\t\tvar graphics:Graphics = <Graphics> this._blocks[geo_id].data;\n\n\t\tvar uvs:Array<Float32Array> = this.getUVForVertexAnimation(geo_id);\n\n\t\tvar num_frames:number = (!poseOnly)? this._newBlockBytes.readUnsignedShort() : 1;\n\n\t\tvar num_subsprites:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar num_Streams:number = this._newBlockBytes.readUnsignedShort();\n\t\tfor (var streamsParsed:number = 0; streamsParsed < num_Streams; streamsParsed++)\n\t\t\tstreamtypes.push(this._newBlockBytes.readUnsignedShort());\n\n\t\tprops = this.parseProperties(this.spritePoseAnimationProperties);\n\n\t\tclip.looping = props.get(1, true);\n\t\tclip.stitchFinalFrame = props.get(2, false);\n\n\t\tvar frame_dur:number;\n\t\tfor (var frames_parsed:number = 0; frames_parsed < num_frames; frames_parsed++) {\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\n\t\t\tgraphics = new Graphics();\n\t\t\tsubSpriteParsed = 0;\n\t\t\twhile (subSpriteParsed < num_subsprites) {\n\t\t\t\tstreamsParsed = 0;\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\n\t\t\t\twhile (streamsParsed < num_Streams) {\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\n\t\t\t\t\t\tindices = graphics.getGraphicAt(subSpriteParsed).elements.indices;\n\t\t\t\t\t\tverts = new Array<number>();\n\t\t\t\t\t\tidx = 0;\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telements = new TriangleElements(new AttributesBuffer());\n\t\t\t\t\t\telements.setIndices(indices);\n\t\t\t\t\t\telements.setPositions(verts);\n\t\t\t\t\t\telements.setUVs(uvs[subSpriteParsed]);\n\t\t\t\t\t\telements.setNormals(null);\n\t\t\t\t\t\telements.setTangents(null);\n\t\t\t\t\t\telements.autoDeriveNormals = false;\n\t\t\t\t\t\telements.autoDeriveTangents = false;\n\t\t\t\t\t\tsubSpriteParsed++;\n\t\t\t\t\t\tgraphics.addGraphic(elements);\n\t\t\t\t\t} else\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t\tstreamsParsed++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tclip.addFrame(graphics, frame_dur);\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(clip, name);\n\n\t\tthis._blocks[blockID].data = clip;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Graphics-Name = \" + graphics.name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\n\tprivate static vertexAnimationSetProperties:Object = {\n\t\t1:AWDParser.UINT16};\n\t\n\t//BlockID 113\n\tprivate parseVertexAnimationSet(blockID:number /*uint*/)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.vertexAnimationSetProperties);\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\n\t\tvar clipNode:AnimationClipNodeBase;\n\t\tfor (var frames_parsed:number = 0; frames_parsed < num_frames; frames_parsed++) {\n\t\t\tclipNode = <AnimationClipNodeBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\t\t\tif (clipNode instanceof VertexClipNode)\n\t\t\t\tvertexFrames.push(<VertexClipNode> clipNode);\n\t\t\telse if (clipNode instanceof SkeletonClipNode)\n\t\t\t\tskeletonFrames.push(<SkeletonClipNode> clipNode);\n\t\t}\n\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\n\t\t\tthis._blocks[blockID].addError(\"Could not create this AnimationSet, because it contains no animations\");\n\t\t\treturn;\n\t\t}\n\n\t\tthis.parseUserAttributes();\n\n\t\tif (vertexFrames.length > 0) {\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\n\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\n\n\t\t\tthis._pFinalizeAsset(newVertexAnimationSet, name);\n\n\t\t\tthis._blocks[blockID].data = newVertexAnimationSet;\n\n\t\t\tif (this._debug)\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames);\n\n\t\t} else if (skeletonFrames.length > 0) {\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\n\t\t\tthis._pFinalizeAsset(newSkeletonAnimationSet, name);\n\n\t\t\tthis._blocks[blockID].data = newSkeletonAnimationSet;\n\n\t\t\tif (this._debug)\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames);\n\t\t}\n\t}\n\n\tprivate static animatorSetProperties:Object = {1:AWDParser.BADDR};\n\t\n\t//BlockID 122\n\tprivate parseAnimatorSet(blockID:number /*uint*/)\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar type:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar props:AWDProperties = this.parseProperties(AWDParser.animatorSetProperties);\n\t\tvar targetAnimationSet:AnimationSetBase = <AnimationSetBase> this._blocks[this._newBlockBytes.readUnsignedInt()].data;\n\n\t\tvar targetSpritees:Array<Sprite> = new Array<Sprite>();\n\t\tvar targetSpriteLength:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tfor (var i:number /*int*/ = 0; i < targetSpriteLength; i++)\n\t\t\ttargetSpritees.push(<Sprite> this._blocks[this._newBlockBytes.readUnsignedInt()].data);\n\n\t\tvar activeState:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar autoplay:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\n\t\tthis.parseUserAttributes();\n\t\tthis.parseUserAttributes();\n\n\t\tvar thisAnimator:AnimatorBase;\n\t\tif (type == 1)\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, <Skeleton> this._blocks[props.get(1, 0)].data);\n\t\telse if (type == 2)\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\n\n\t\tthis._pFinalizeAsset(thisAnimator, name);\n\t\tthis._blocks[blockID].data = thisAnimator;\n\n\t\tfor (i = 0; i < targetSpritees.length; i++) {\n\t\t\tif (type == 1)\n\t\t\t\ttargetSpritees[i].animator = (<SkeletonAnimator> thisAnimator);\n\t\t\telse if (type == 2)\n\t\t\t\ttargetSpritees[i].animator = (<VertexAnimator> thisAnimator);\n\t\t}\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + name);\n\t}\n\n\tprivate sharedMethodListProperties:Object = {\n\t\t1:AWDParser.BADDR,\n\t\t2:AWDParser.BADDR,\n\t\t3:AWDParser.BADDR,\n\t\t101:AWDParser.PROPERTY_NUMBER,\n\t\t102:AWDParser.PROPERTY_NUMBER,\n\t\t103:AWDParser.PROPERTY_NUMBER,\n\t\t104:AWDParser.PROPERTY_NUMBER,\n\t\t105:AWDParser.PROPERTY_NUMBER,\n\t\t106:AWDParser.PROPERTY_NUMBER,\n\t\t107:AWDParser.PROPERTY_NUMBER,\n\t\t201:AWDParser.UINT32,\n\t\t202:AWDParser.UINT32,\n\t\t301:AWDParser.UINT16,\n\t\t302:AWDParser.UINT16,\n\t\t401:AWDParser.UINT8,\n\t\t402:AWDParser.UINT8,\n\t\t601:AWDParser.COLOR,\n\t\t602:AWDParser.COLOR,\n\t\t701:AWDParser.BOOL,\n\t\t702:AWDParser.BOOL};\n\n\t// this functions reads and creates a EffectMethod\n\tprivate parseSharedMethodList(blockID:number):EffectMethodBase\n\t{\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar effectMethodReturn:EffectMethodBase;\n\n\t\tvar props:AWDProperties = this.parseProperties(this.sharedMethodListProperties);\n\n\t\tswitch (methodType) {\n\t\t\t// Effect Methods\n\t\t\tcase 401: //ColorMatrix\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\n\t\t\t\tbreak;\n\t\t\tcase 402: //ColorTransform\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\n\t\t\t\tbreak;\n\t\t\tcase 403: //EnvMap\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(new SingleCubeTexture(<BitmapImageCube> this._blocks[props.get(1, 0)].data), <number> props.get(101, 1));\n\t\t\t\tvar targetID:number = props.get(2, 0);\n\t\t\t\tif (targetID > 0) {\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <TextureBase> this._blocks[targetID].data;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 404: //LightMapMethod\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(this._blocks[props.get(1, 0)].data, this.blendModeDic[props.get(401, 10)]); //usesecondaryUV not set\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureProjector.assetType]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this ProjectiveTextureMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 406: //RimLightMethod\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\n\t\t\t\tbreak;\n\t\t\tcase 407: //AlphaMaskMethod\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(this._blocks[props.get(1, 0)].data, props.get(701, false));\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this RefractionEnvMapMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 410: //FresnelEnvMapMethod\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(this._blocks[props.get(1, 0)].data, props.get(101, 1));\n\t\t\t\tbreak;\n\t\t\tcase 411: //FogMethod\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\treturn effectMethodReturn;\n\n\t}\n\n\tprivate parseUserAttributes():Object\n\t{\n\t\tvar list_len:number = this._newBlockBytes.readUnsignedInt();\n\n\t\tif (list_len > 0) {\n\t\t\tvar list_end:number = this._newBlockBytes.position + list_len;\n\t\t\tvar attributes:Object = {};\n\n\t\t\tfor (var attibuteCnt:number = 0; this._newBlockBytes.position < list_end; attibuteCnt++) {\n\t\t\t\tvar ns_id:number;\n\t\t\t\tvar attr_key:string;\n\t\t\t\tvar attr_type:number;\n\t\t\t\tvar attr_len:number;\n\t\t\t\tvar attr_val:any;\n\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_key = this.parseVarStr();\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn attributes;\n\t\t\t\t}\n\n\t\t\t\tswitch (attr_type) {\n\t\t\t\t\tcase AWDParser.AWDSTRING:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.BOOL:\n\t\t\t\t\tcase AWDParser.UINT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.UINT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.UINT32:\n\t\t\t\t\tcase AWDParser.BADDR:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.FLOAT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.FLOAT64:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tattributes[attr_key] = attr_val;\n\n\t\t\t\tif (this._debug)\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\n\t\t\t}\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\tprivate parseProperties(expected:Object):AWDProperties\n\t{\n\t\tvar list_len:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar props:AWDProperties = new AWDProperties();\n\t\tvar list_end:number = this._newBlockBytes.position + list_len;\n\n\t\tif (expected) {\n\t\t\tvar len:number;\n\t\t\tvar key:number;\n\t\t\tvar type:number;\n\n\t\t\tfor (var propertyCnt:number = 0; this._newBlockBytes.position < list_end; propertyCnt++) {\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn props;\n\t\t\t\t}\n\n\t\t\t\tif (expected[key]) {\n\t\t\t\t\ttype = expected[key];\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\n\t\t\t\t} else {\n\t\t\t\t\tthis._newBlockBytes.position += len;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis._newBlockBytes.position = list_end;\n\t\t}\n\n\t\treturn props;\n\t}\n\n\tprivate parseAttrValue(type:number, len:number):any\n\t{\n\t\tvar elem_len:number;\n\t\tvar read_func:Function;\n\t\tvar accuracy:boolean;\n\n\t\tswitch (type) {\n\t\t\tcase AWDParser.BOOL:\n\t\t\tcase AWDParser.INT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.INT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.INT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT32:\n\t\t\tcase AWDParser.COLOR:\n\t\t\tcase AWDParser.BADDR:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.FLOAT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.FLOAT64:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.AWDSTRING:\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\n\n\t\t\tcase AWDParser.VECTOR2x1:\n\t\t\tcase AWDParser.VECTOR3x1:\n\t\t\tcase AWDParser.VECTOR4x1:\n\t\t\tcase AWDParser.MTX3x2:\n\t\t\tcase AWDParser.MTX3x3:\n\t\t\tcase AWDParser.MTX4x3:\n\t\t\tcase AWDParser.MTX4x4:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\t\t\tcase AWDParser.GEO_NUMBER:\n\t\t\t\taccuracy = this._accuracyGeo;\n\t\t\tcase AWDParser.MATRIX_NUMBER:\n\t\t\t\taccuracy = this._accuracyMatrix;\n\t\t\tcase AWDParser.PROPERTY_NUMBER:\n\t\t\t\taccuracy = this._accuracyProps;\n\t\t\tdefault:\n\t\t\t\tif (accuracy) {\n\t\t\t\t\telem_len = 8;\n\t\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\t} else {\n\t\t\t\t\telem_len = 4;\n\t\t\t\t\tread_func = this._newBlockBytes.readFloat;\n\t\t\t\t}\n\t\t}\n\n\t\tif (elem_len < len) {\n\t\t\tvar list:Array<any> = [];\n\t\t\tvar num_elems:number = len/elem_len;\n\n\t\t\tfor (var num_read:number = 0; num_read < num_elems; num_read++)\n\t\t\t\tlist[num_read] = read_func.call(this._newBlockBytes);\n\n\t\t\treturn list;\n\t\t} else {\n\t\t\treturn read_func.call(this._newBlockBytes);\n\t\t}\n\t}\n\n\tprivate parseHeader()\n\t{\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\n\n\t\tthis._version[0] = this._byteData.readUnsignedByte();\n\t\tthis._version[1] = this._byteData.readUnsignedByte();\n\n\t\tvar flags:number = this._byteData.readUnsignedShort(); // Parse bit flags\n\n\t\tthis._streaming = BitFlags.test(flags, BitFlags.FLAG1);\n\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG2);\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG3);\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG4);\n\t\t}\n\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._version[0] + \" - \" + this._version[1]);\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Graphics-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\n\t\t}\n\n\t\t// Check file integrity\n\t\tvar body_len:number = this._byteData.readUnsignedInt();\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable())\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\n\n\t}\n\t// Helper - functions\n\tprivate getUVForVertexAnimation(spriteID:number /*uint*/):Array<Float32Array>\n\t{\n\t\tif (this._blocks[spriteID].data instanceof Sprite)\n\t\t\tspriteID = this._blocks[spriteID].geoID;\n\n\t\tif (this._blocks[spriteID].uvsForVertexAnimation)\n\t\t\treturn this._blocks[spriteID].uvsForVertexAnimation;\n\n\t\tvar graphics:Graphics = (<Graphics> this._blocks[spriteID].data);\n\t\tvar elements:TriangleElements;\n\t\tvar uvsForVertexAnimation:Array<ArrayBufferView> = this._blocks[spriteID].uvsForVertexAnimation = new Array<Float32Array>();\n\n\t\tvar len:number = graphics.count;\n\t\tfor (var geoCnt:number= 0; geoCnt < len; geoCnt++) {\n\t\t\telements = <TriangleElements> graphics.getGraphicAt(geoCnt).elements;\n\t\t\tuvsForVertexAnimation[geoCnt] = elements.uvs.get(elements.numVertices);\n\t\t}\n\n\t\treturn this._blocks[spriteID].uvsForVertexAnimation;\n\t}\n\n\tprivate parseVarStr():string\n\t{\n\t\treturn this._newBlockBytes.readUTFBytes(this._newBlockBytes.readUnsignedShort());\n\t}\n\n\tprivate readNumber(precision:boolean = false):number\n\t{\n\t\tif (precision)\n\t\t\treturn this._newBlockBytes.readDouble();\n\n\t\treturn this._newBlockBytes.readFloat();\n\t}\n\n\tprivate parseMatrix3D():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\n\t}\n\n\tprivate parseMatrix32RawData():Array<number>\n\t{\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\n\n\t\treturn mtx_raw;\n\t}\n\n\tprivate parseMatrix43RawData():Float32Array\n\t{\n\t\tvar mtx_raw:Float32Array = new Float32Array(16);\n\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[3] = 0.0;\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[7] = 0.0;\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[11] = 0.0;\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[15] = 1.0;\n\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\n\n\t\tif (isNaN(mtx_raw[0])) {\n\t\t\tmtx_raw[0] = 1;\n\t\t\tmtx_raw[1] = 0;\n\t\t\tmtx_raw[2] = 0;\n\t\t\tmtx_raw[4] = 0;\n\t\t\tmtx_raw[5] = 1;\n\t\t\tmtx_raw[6] = 0;\n\t\t\tmtx_raw[8] = 0;\n\t\t\tmtx_raw[9] = 0;\n\t\t\tmtx_raw[10] = 1;\n\t\t\tmtx_raw[12] = 0;\n\t\t\tmtx_raw[13] = 0;\n\t\t\tmtx_raw[14] = 0;\n\t\t}\n\n\t\treturn mtx_raw;\n\t}\n}\n\nexport = AWDParser;\n\n\nclass AWDProperties\n{\n\tpublic set(key:number, value:any)\n\t{\n\t\tthis[key] = value;\n\t}\n\n\tpublic get(key:number, fallback:any):any\n\t{\n\t\treturn (this[key] || fallback);\n\t}\n}\n\n/**\n *\n */\nclass BitFlags\n{\n\tpublic static FLAG1:number = 1;\n\tpublic static FLAG2:number = 2;\n\tpublic static FLAG3:number = 4;\n\tpublic static FLAG4:number = 8;\n\tpublic static FLAG5:number = 16;\n\tpublic static FLAG6:number = 32;\n\tpublic static FLAG7:number = 64;\n\tpublic static FLAG8:number = 128;\n\tpublic static FLAG9:number = 256;\n\tpublic static FLAG10:number = 512;\n\tpublic static FLAG11:number = 1024;\n\tpublic static FLAG12:number = 2048;\n\tpublic static FLAG13:number = 4096;\n\tpublic static FLAG14:number = 8192;\n\tpublic static FLAG15:number = 16384;\n\tpublic static FLAG16:number = 32768;\n\n\tpublic static test(flags:number, testFlag:number):boolean\n\t{\n\t\treturn (flags & testFlag) == testFlag;\n\t}\n}\n",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport Sprite\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\n\n/**\n * MD2Parser provides a parser for the MD2 data type.\n */\nclass MD2Parser extends ParserBase\n{\n\tpublic static FPS:number /*int*/ = 6;\n\n\tprivate _clipNodes:Object = new Object();\n\tprivate _byteData:ByteArray;\n\tprivate _startedParsing:boolean;\n\tprivate _parsedHeader:boolean;\n\tprivate _parsedUV:boolean;\n\tprivate _parsedFaces:boolean;\n\tprivate _parsedFrames:boolean;\n\n\tprivate _ident:number /*uint*/;\n\tprivate _version:number /*uint*/;\n\tprivate _skinWidth:number /*uint*/;\n\tprivate _skinHeight:number /*uint*/;\n\t//private _frameSize : number /*uint*/;\n\tprivate _numSkins:number /*uint*/;\n\tprivate _numVertices:number /*uint*/;\n\tprivate _numST:number /*uint*/;\n\tprivate _numTris:number /*uint*/;\n\t//private _numGlCmds : number /*uint*/;\n\tprivate _numFrames:number /*uint*/;\n\tprivate _offsetSkins:number /*uint*/;\n\tprivate _offsetST:number /*uint*/;\n\tprivate _offsetTris:number /*uint*/;\n\tprivate _offsetFrames:number /*uint*/;\n\t//private _offsetGlCmds : number /*uint*/;\n\tprivate _offsetEnd:number /*uint*/;\n\n\tprivate _uvIndices:Array<number>;\n\tprivate _indices:Array<number> /*uint*/;\n\tprivate _vertIndices:Array<number>;\n\n\t// the current elements being built\n\tprivate _animationSet:VertexAnimationSet = new VertexAnimationSet();\n\tprivate _firstElements:TriangleElements;\n\tprivate _uvs:Array<number>;\n\tprivate _finalUV:Array<number>;\n\n\tprivate _materialNames:Array<string>;\n\tprivate _textureType:string;\n\tprivate _ignoreTexturePath:boolean;\n\tprivate _sprite:Sprite;\n\tprivate _graphics:Graphics;\n\n\tprivate materialFinal:boolean = false;\n\tprivate graphicsCreated:boolean = false;\n\n\t/**\n\t * Creates a new MD2Parser object.\n\t * @param textureType The extension of the texture (e.g. jpg/png/...)\n\t * @param ignoreTexturePath If true, the path of the texture is ignored\n\t */\n\tconstructor(textureType:string = \"jpg\", ignoreTexturePath:boolean = true)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\t\tthis._textureType = textureType;\n\t\tthis._ignoreTexturePath = ignoreTexturePath;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md2\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn (ParserUtils.toString(data, 4) == 'IDP2');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif (resourceDependency.assets.length != 1)\n\t\t\treturn;\n\n\t\tvar material:MethodMaterial = new MethodMaterial(<BitmapImage2D> resourceDependency.assets[0]);\n\n\t\tif (this.materialMode >= 2)\n\t\t\tmaterial.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t//add to the content property\n\t\t(<DisplayObjectContainer> this._pContent).addChild(this._sprite);\n\n\t\tmaterial.name = this._sprite.material.name;\n\t\tthis._sprite.material = material;\n\t\tthis._pFinalizeAsset(material);\n\t\tthis._pFinalizeAsset(this._sprite.graphics);\n\t\tthis._pFinalizeAsset(this._sprite);\n\n\t\tthis.materialFinal = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\t// apply system default\n\t\tif (this.materialMode < 2) {\n\t\t\tthis._sprite.material = DefaultMaterialManager.getDefaultMaterial();\n\t\t} else {\n\t\t\tthis._sprite.material = new MethodMaterial(DefaultMaterialManager.getDefaultImage2D());\n\t\t\t(<MethodMaterial> this._sprite.material).mode = MethodMaterialMode.MULTI_PASS;\n\t\t}\n\n\t\t//add to the content property\n\t\t(<DisplayObjectContainer> this._pContent).addChild(this._sprite);\n\n\t\tthis._pFinalizeAsset(this._sprite.graphics);\n\t\tthis._pFinalizeAsset(this._sprite);\n\t\tthis.materialFinal = true;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (!this._startedParsing) {\n\t\t\tthis._byteData = this._pGetByteData();\n\t\t\tthis._startedParsing = true;\n\n\t\t\t// Reset bytearray read position (which may have been\n\t\t\t// moved forward by the supportsData() function.)\n\t\t\tthis._byteData.position = 0;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\tif (!this._parsedHeader) {\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\n\n\t\t\t\t// TODO: Create a sprite only when encountered (if it makes sense\n\t\t\t\t// for this file format) and return it using this._pFinalizeAsset()\n\t\t\t\tthis._sprite = new Sprite();\n\t\t\t\tthis._graphics = this._sprite.graphics;\n\t\t\t\tif (this.materialMode < 2) {\n\t\t\t\t\tthis._sprite.material = DefaultMaterialManager.getDefaultMaterial();\n\t\t\t\t} else {\n\t\t\t\t\tthis._sprite.material = new MethodMaterial(DefaultMaterialManager.getDefaultImage2D());\n\t\t\t\t\t(<MethodMaterial> this._sprite.material).mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t}\n\n\t\t\t\t//_graphics.animation = new VertexAnimation(2, VertexAnimationMode.ABSOLUTE);\n\t\t\t\t//_animator = new VertexAnimator(VertexAnimationState(_sprite.animationState));\n\n\t\t\t\t// Parse header and decompress body\n\t\t\t\tthis.parseHeader();\n\t\t\t\tthis.parseMaterialNames();\n\t\t\t} else if (!this._parsedUV) {\n\t\t\t\tthis.parseUV();\n\t\t\t} else if (!this._parsedFaces) {\n\t\t\t\tthis.parseFaces();\n\t\t\t} else if (!this._parsedFrames) {\n\t\t\t\tthis.parseFrames();\n\t\t\t} else if ((this.graphicsCreated) && (this.materialFinal)) {\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t} else if (!this.graphicsCreated) {\n\t\t\t\tthis.graphicsCreated = true;\n\t\t\t\t//create default subgraphics\n\t\t\t\tthis._graphics.addGraphic(this._firstElements.clone());\n\t\t\t\t// Force name to be chosen by this._pFinalizeAsset()\n\t\t\t\tthis._sprite.name = \"\";\n\t\t\t\tif (this.materialFinal) {\n\t\t\t\t\t//add to the content property\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._sprite);\n\n\t\t\t\t\tthis._pFinalizeAsset(this._sprite.graphics);\n\t\t\t\t\tthis._pFinalizeAsset(this._sprite);\n\t\t\t\t}\n\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t}\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\t/**\n\t * Reads in all that MD2 Header data that is declared as private variables.\n\t * I know its a lot, and it looks ugly, but only way to do it in Flash\n\t */\n\tprivate parseHeader()\n\t{\n\t\tthis._ident = this._byteData.readInt();\n\t\tthis._version = this._byteData.readInt();\n\t\tthis._skinWidth = this._byteData.readInt();\n\t\tthis._skinHeight = this._byteData.readInt();\n\t\t//skip this._frameSize\n\t\tthis._byteData.readInt();\n\t\tthis._numSkins = this._byteData.readInt();\n\t\tthis._numVertices = this._byteData.readInt();\n\t\tthis._numST = this._byteData.readInt();\n\t\tthis._numTris = this._byteData.readInt();\n\t\t//skip this._numGlCmds\n\t\tthis._byteData.readInt();\n\t\tthis._numFrames = this._byteData.readInt();\n\t\tthis._offsetSkins = this._byteData.readInt();\n\t\tthis._offsetST = this._byteData.readInt();\n\t\tthis._offsetTris = this._byteData.readInt();\n\t\tthis._offsetFrames = this._byteData.readInt();\n\t\t//skip this._offsetGlCmds\n\t\tthis._byteData.readInt();\n\t\tthis._offsetEnd = this._byteData.readInt();\n\n\t\tthis._parsedHeader = true;\n\t}\n\n\t/**\n\t * Parses the file names for the materials.\n\t */\n\tprivate parseMaterialNames()\n\t{\n\t\tvar url:string;\n\t\tvar name:string;\n\t\tvar extIndex:number /*int*/;\n\t\tvar slashIndex:number /*int*/;\n\t\tthis._materialNames = new Array<string>();\n\t\tthis._byteData.position = this._offsetSkins;\n\n\t\tvar regExp:RegExp = new RegExp(\"[^a-zA-Z0-9\\\\_\\/.]\", \"g\");\n\t\tfor (var i:number /*uint*/ = 0; i < this._numSkins; ++i) {\n\t\t\tname = this._byteData.readUTFBytes(64);\n\t\t\tname = name.replace(regExp, \"\");\n\t\t\textIndex = name.lastIndexOf(\".\");\n\t\t\tif (this._ignoreTexturePath)\n\t\t\t\tslashIndex = name.lastIndexOf(\"/\");\n\t\t\tif (name.toLowerCase().indexOf(\".jpg\") == -1 && name.toLowerCase().indexOf(\".png\") == -1) {\n\t\t\t\tname = name.substring(slashIndex + 1, extIndex);\n\t\t\t\turl = name + \".\" + this._textureType;\n\t\t\t} else {\n\t\t\t\turl = name;\n\t\t\t}\n\n\t\t\tthis._materialNames[i] = name;\n\n\t\t\t// only support 1 skin TODO: really?\n\t\t\tif (this.dependencies.length == 0)\n\t\t\t\tthis._pAddDependency(name, new URLRequest(url));\n\t\t}\n\n\t\tif (this._materialNames.length > 0)\n\t\t\tthis._sprite.material.name = this._materialNames[0];\n\t\telse\n\t\t\tthis.materialFinal = true;\n\t}\n\n\t/**\n\t * Parses the uv data for the sprite.\n\t */\n\tprivate parseUV()\n\t{\n\t\tvar j:number /*uint*/ = 0;\n\n\t\tthis._uvs = new Array<number>(this._numST*2);\n\t\tthis._byteData.position = this._offsetST;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numST; i++) {\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinWidth;\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinHeight;\n\t\t}\n\n\t\tthis._parsedUV = true;\n\t}\n\n\t/**\n\t * Parses unique indices for the faces.\n\t */\n\tprivate parseFaces()\n\t{\n\t\tvar a:number /*uint*/, b:number /*uint*/, c:number /*uint*/, ta:number /*uint*/, tb:number /*uint*/, tc:number /*uint*/;\n\t\tvar i:number /*uint*/;\n\n\t\tthis._vertIndices = new Array<number>();\n\t\tthis._uvIndices = new Array<number>();\n\t\tthis._indices = new Array<number>() /*uint*/;\n\n\t\tthis._byteData.position = this._offsetTris;\n\n\t\tfor (i = 0; i < this._numTris; i++) {\n\t\t\t//collect vertex indices\n\t\t\ta = this._byteData.readUnsignedShort();\n\t\t\tb = this._byteData.readUnsignedShort();\n\t\t\tc = this._byteData.readUnsignedShort();\n\n\t\t\t//collect uv indices\n\t\t\tta = this._byteData.readUnsignedShort();\n\t\t\ttb = this._byteData.readUnsignedShort();\n\t\t\ttc = this._byteData.readUnsignedShort();\n\n\t\t\tthis.addIndex(a, ta);\n\t\t\tthis.addIndex(b, tb);\n\t\t\tthis.addIndex(c, tc);\n\t\t}\n\n\t\tvar len:number /*uint*/ = this._uvIndices.length;\n\t\tthis._finalUV = new Array<number>(len*2);\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._finalUV[i << 1] = this._uvs[this._uvIndices[i] << 1];\n\t\t\tthis._finalUV[(i << 1) + 1] = this._uvs[(this._uvIndices[i] << 1) + 1];\n\t\t}\n\n\t\tthis._parsedFaces = true;\n\t}\n\n\t/**\n\t * Adds a face index to the list if it doesn't exist yet, based on vertexIndex and uvIndex, and adds the\n\t * corresponding vertex and uv data in the correct location.\n\t * @param vertexIndex The original index in the vertex list.\n\t * @param uvIndex The original index in the uv list.\n\t */\n\tprivate addIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/)\n\t{\n\t\tvar index:number /*int*/ = this.findIndex(vertexIndex, uvIndex);\n\n\t\tif (index == -1) {\n\t\t\tthis._indices.push(this._vertIndices.length);\n\t\t\tthis._vertIndices.push(vertexIndex);\n\t\t\tthis._uvIndices.push(uvIndex);\n\t\t} else\n\t\t\tthis._indices.push(index);\n\t}\n\n\t/**\n\t * Finds the final index corresponding to the original MD2's vertex and uv indices. Returns -1 if it wasn't added yet.\n\t * @param vertexIndex The original index in the vertex list.\n\t * @param uvIndex The original index in the uv list.\n\t * @return The index of the final sprite corresponding to the original vertex and uv index. -1 if it doesn't exist yet.\n\t */\n\tprivate findIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/):number /*int*/\n\t{\n\t\tvar len:number /*uint*/ = this._vertIndices.length;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tif (this._vertIndices[i] == vertexIndex && this._uvIndices[i] == uvIndex)\n\t\t\t\treturn i;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Parses all the frame elements.\n\t */\n\tprivate parseFrames()\n\t{\n\t\tvar sx:number, sy:number, sz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar graphics:Graphics;\n\t\tvar elements:TriangleElements;\n\t\tvar vertLen:number /*uint*/ = this._vertIndices.length;\n\t\tvar fvertices:Array<number>;\n\t\tvar tvertices:Array<number>;\n\t\tvar i:number /*uint*/, j:number /*int*/, k:number /*uint*/;\n\t\t//var ch : number /*uint*/;\n\t\tvar name:string = \"\";\n\t\tvar prevClip:VertexClipNode = null;\n\n\t\tthis._byteData.position = this._offsetFrames;\n\n\t\tfor (i = 0; i < this._numFrames; i++) {\n\n\t\t\ttvertices = new Array<number>();\n\t\t\tfvertices = new Array<number>(vertLen*3);\n\n\t\t\tsx = this._byteData.readFloat();\n\t\t\tsy = this._byteData.readFloat();\n\t\t\tsz = this._byteData.readFloat();\n\n\t\t\ttx = this._byteData.readFloat();\n\t\t\tty = this._byteData.readFloat();\n\t\t\ttz = this._byteData.readFloat();\n\n\t\t\tname = this.readFrameName();\n\n\t\t\t// Note, the extra data.position++ in the for loop is there\n\t\t\t// to skip over a byte that holds the \"vertex normal index\"\n\t\t\tfor (j = 0; j < this._numVertices; j++, this._byteData.position++)\n\t\t\t\ttvertices.push(sx*this._byteData.readUnsignedByte() + tx, sy*this._byteData.readUnsignedByte() + ty, sz*this._byteData.readUnsignedByte() + tz);\n\n\t\t\tk = 0;\n\t\t\tfor (j = 0; j < vertLen; j++) {\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3];\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 2];\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 1];\n\t\t\t}\n\n\t\t\telements = new TriangleElements(new AttributesBuffer());\n\n\t\t\tif (this._firstElements == null)\n\t\t\t\tthis._firstElements = elements;\n\n\t\t\tgraphics = new Graphics();\n\t\t\tgraphics.addGraphic(elements);\n\n\t\t\telements.setIndices(this._indices);\n\t\t\telements.setPositions(fvertices);\n\t\t\telements.setUVs(this._finalUV);\n\t\t\t// cause explicit updates\n\t\t\telements.setNormals(null);\n\t\t\telements.setTangents(null);\n\t\t\t// turn auto updates off because they may be animated and set explicitly\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\n\t\t\tvar clip:VertexClipNode = this._clipNodes[name];\n\n\t\t\tif (!clip) {\n\t\t\t\t// If another sequence was parsed before this one, starting\n\t\t\t\t// a new state means the previous one is complete and can\n\t\t\t\t// hence be finalized.\n\t\t\t\tif (prevClip) {\n\t\t\t\t\tthis._pFinalizeAsset(prevClip);\n\t\t\t\t\tthis._animationSet.addAnimation(prevClip);\n\t\t\t\t}\n\n\t\t\t\tclip = new VertexClipNode();\n\t\t\t\tclip.name = name;\n\t\t\t\tclip.stitchFinalFrame = true;\n\n\t\t\t\tthis._clipNodes[name] = clip;\n\n\t\t\t\tprevClip = clip;\n\t\t\t}\n\t\t\tclip.addFrame(graphics, 1000/MD2Parser.FPS);\n\t\t}\n\n\t\t// Finalize the last state\n\t\tif (prevClip) {\n\t\t\tthis._pFinalizeAsset(prevClip);\n\t\t\tthis._animationSet.addAnimation(prevClip);\n\t\t}\n\n\t\t// Force this._pFinalizeAsset() to decide name\n\t\tthis._pFinalizeAsset(this._animationSet);\n\n\t\tthis._parsedFrames = true;\n\t}\n\n\tprivate readFrameName():string\n\t{\n\t\tvar name:string = \"\";\n\t\tvar k:number /*uint*/ = 0;\n\t\tfor (var j:number /*uint*/ = 0; j < 16; j++) {\n\t\t\tvar ch:number /*uint*/ = this._byteData.readUnsignedByte();\n\n\t\t\tif (Math.floor(ch) > 0x39 && Math.floor(ch) <= 0x7A && k == 0)\n\t\t\t\tname += String.fromCharCode(ch);\n\n\t\t\tif (Math.floor(ch) >= 0x30 && Math.floor(ch) <= 0x39)\n\t\t\t\tk++;\n\t\t}\n\t\treturn name;\n\t}\n}\n\nexport = MD2Parser;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\n\n/**\n * MD5AnimParser provides a parser for the md5anim data type, providing an animation sequence for the md5 format.\n *\n * todo: optimize\n */\nclass MD5AnimParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\n\tpublic static NUM_FRAMES_TOKEN:string = \"numFrames\";\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\n\tpublic static FRAME_RATE_TOKEN:string = \"frameRate\";\n\tpublic static NUM_ANIMATED_COMPONENTS_TOKEN:string = \"numAnimatedComponents\";\n\n\tpublic static HIERARCHY_TOKEN:string = \"hierarchy\";\n\tpublic static BOUNDS_TOKEN:string = \"bounds\";\n\tpublic static BASE_FRAME_TOKEN:string = \"baseframe\";\n\tpublic static FRAME_TOKEN:string = \"frame\";\n\n\tpublic static COMMENT_TOKEN:string = \"//\";\n\n\tprivate _parseIndex:number /*int*/ = 0;\n\tprivate _reachedEOF:boolean;\n\tprivate _line:number /*int*/ = 0;\n\tprivate _charLineIndex:number /*int*/ = 0;\n\tprivate _version:number /*int*/;\n\tprivate _frameRate:number /*int*/;\n\tprivate _numFrames:number /*int*/;\n\tprivate _numJoints:number /*int*/;\n\tprivate _numAnimatedComponents:number /*int*/;\n\n\tprivate _hierarchy:Array<HierarchyData>;\n\tprivate _bounds:Array<BoundsData>;\n\tprivate _frameData:Array<FrameData>;\n\tprivate _baseFrameData:Array<BaseFrameData>;\n\n\tprivate _rotationQuat:Quaternion;\n\tprivate _clip:SkeletonClipNode;\n\n\t/**\n\t * Creates a new MD5AnimParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._rotationQuat = new Quaternion();\n\t\tvar t1:Quaternion = new Quaternion();\n\t\tvar t2:Quaternion = new Quaternion();\n\n\t\tt1.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\n\t\tt2.fromAxisAngle(Vector3D.Y_AXIS, -Math.PI*.5);\n\n\t\tthis._rotationQuat.multiply(t2, t1);\n\n\t\tif (additionalRotationAxis) {\n\t\t\tthis._rotationQuat.multiply(t2, t1);\n\t\t\tt1.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\n\t\t\tthis._rotationQuat.multiply(t1, this._rotationQuat);\n\t\t}\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md5anim\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar token:string;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\ttoken = this.getNextToken();\n\t\t\tswitch (token) {\n\t\t\t\tcase MD5AnimParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"\":\n\t\t\t\t\t// can occur at the end of a file\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.VERSION_TOKEN:\n\t\t\t\t\tthis._version = this.getNextInt();\n\t\t\t\t\tif (this._version != 10)\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.COMMAND_LINE_TOKEN:\n\t\t\t\t\tthis.parseCMD();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_FRAMES_TOKEN:\n\t\t\t\t\tthis._numFrames = this.getNextInt();\n\t\t\t\t\tthis._bounds = new Array<BoundsData>();\n\t\t\t\t\tthis._frameData = new Array<FrameData>();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_JOINTS_TOKEN:\n\t\t\t\t\tthis._numJoints = this.getNextInt();\n\t\t\t\t\tthis._hierarchy = new Array<HierarchyData>(this._numJoints);\n\t\t\t\t\tthis._baseFrameData = new Array<BaseFrameData>(this._numJoints);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.FRAME_RATE_TOKEN:\n\t\t\t\t\tthis._frameRate = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_ANIMATED_COMPONENTS_TOKEN:\n\t\t\t\t\tthis._numAnimatedComponents = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.HIERARCHY_TOKEN:\n\t\t\t\t\tthis.parseHierarchy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.BOUNDS_TOKEN:\n\t\t\t\t\tthis.parseBounds();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.BASE_FRAME_TOKEN:\n\t\t\t\t\tthis.parseBaseFrame();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.FRAME_TOKEN:\n\t\t\t\t\tthis.parseFrame();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (!this._reachedEOF)\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\n\t\t\t}\n\n\t\t\tif (this._reachedEOF) {\n\t\t\t\tthis._clip = new SkeletonClipNode();\n\t\t\t\tthis.translateClip();\n\t\t\t\tthis._pFinalizeAsset(this._clip);\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t}\n\t\t}\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\t/**\n\t * Converts all key frame data to an SkinnedAnimationSequence.\n\t */\n\tprivate translateClip():void\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < this._numFrames; ++i)\n\t\t\tthis._clip.addFrame(this.translatePose(this._frameData[i]), 1000/this._frameRate);\n\t}\n\n\t/**\n\t * Converts a single key frame data to a SkeletonPose.\n\t * @param frameData The actual frame data.\n\t * @return A SkeletonPose containing the frame data's pose.\n\t */\n\tprivate translatePose(frameData:FrameData):SkeletonPose\n\t{\n\t\tvar hierarchy:HierarchyData;\n\t\tvar pose:JointPose;\n\t\tvar base:BaseFrameData;\n\t\tvar flags:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar translate:Vector3D = new Vector3D();\n\t\tvar orientation:Quaternion = new Quaternion();\n\t\tvar components:Array<number> = frameData.components;\n\t\tvar skelPose:SkeletonPose = new SkeletonPose();\n\t\tvar jointPoses:Array<JointPose> = skelPose.jointPoses;\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numJoints; ++i) {\n\t\t\tj = 0;\n\t\t\tpose = new JointPose();\n\t\t\thierarchy = this._hierarchy[i];\n\t\t\tbase = this._baseFrameData[i];\n\t\t\tflags = hierarchy.flags;\n\t\t\ttranslate.x = base.position.x;\n\t\t\ttranslate.y = base.position.y;\n\t\t\ttranslate.z = base.position.z;\n\t\t\torientation.x = base.orientation.x;\n\t\t\torientation.y = base.orientation.y;\n\t\t\torientation.z = base.orientation.z;\n\n\t\t\tif (flags & 1)\n\t\t\t\ttranslate.x = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 2)\n\t\t\t\ttranslate.y = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 4)\n\t\t\t\ttranslate.z = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 8)\n\t\t\t\torientation.x = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 16)\n\t\t\t\torientation.y = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 32)\n\t\t\t\torientation.z = components[hierarchy.startIndex + (j++)];\n\n\t\t\tvar w:number = 1 - orientation.x*orientation.x - orientation.y*orientation.y - orientation.z*orientation.z;\n\t\t\torientation.w = w < 0? 0 : -Math.sqrt(w);\n\n\t\t\tif (hierarchy.parentIndex < 0) {\n\t\t\t\tpose.orientation.multiply(this._rotationQuat, orientation);\n\t\t\t\tpose.translation = this._rotationQuat.rotatePoint(translate);\n\t\t\t} else {\n\t\t\t\tpose.orientation.copyFrom(orientation);\n\t\t\t\tpose.translation.x = translate.x;\n\t\t\t\tpose.translation.y = translate.y;\n\t\t\t\tpose.translation.z = translate.z;\n\t\t\t}\n\t\t\tpose.orientation.y = -pose.orientation.y;\n\t\t\tpose.orientation.z = -pose.orientation.z;\n\t\t\tpose.translation.x = -pose.translation.x;\n\n\t\t\tjointPoses[i] = pose;\n\t\t}\n\n\t\treturn skelPose;\n\t}\n\n\t/**\n\t * Parses the skeleton's hierarchy data.\n\t */\n\tprivate parseHierarchy():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:HierarchyData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new HierarchyData();\n\t\t\tdata.name = this.parseLiteralstring();\n\t\t\tdata.parentIndex = this.getNextInt();\n\t\t\tdata.flags = this.getNextInt();\n\t\t\tdata.startIndex = this.getNextInt();\n\t\t\tthis._hierarchy[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses frame bounds.\n\t */\n\tprivate parseBounds():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:BoundsData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new BoundsData();\n\t\t\tdata.min = this.parseVector3D();\n\t\t\tdata.max = this.parseVector3D();\n\t\t\tthis._bounds[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses the base frame.\n\t */\n\tprivate parseBaseFrame():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:BaseFrameData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new BaseFrameData();\n\t\t\tdata.position = this.parseVector3D();\n\t\t\tdata.orientation = this.parseQuaternion();\n\t\t\tthis._baseFrameData[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses a single frame.\n\t */\n\tprivate parseFrame():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:FrameData;\n\t\tvar token:string;\n\t\tvar frameIndex:number /*int*/;\n\n\t\tframeIndex = this.getNextInt();\n\n\t\ttoken = this.getNextToken();\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new FrameData();\n\t\t\tdata.components = new Array<number>(this._numAnimatedComponents);\n\n\t\t\tfor (var i:number /*int*/ = 0; i < this._numAnimatedComponents; ++i)\n\t\t\t\tdata.components[i] = this.getNextNumber();\n\n\t\t\tthis._frameData[frameIndex] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Puts back the last read character into the data stream.\n\t */\n\tprivate putBack():void\n\t{\n\t\tthis._parseIndex--;\n\t\tthis._charLineIndex--;\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\n\t}\n\n\t/**\n\t * Gets the next token in the data stream.\n\t */\n\tprivate getNextToken():string\n\t{\n\t\tvar ch:string;\n\t\tvar token:string = \"\";\n\n\t\twhile (!this._reachedEOF) {\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\n\t\t\t\tif (token != MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.skipWhiteSpace();\n\t\t\t\tif (token != \"\")\n\t\t\t\t\treturn token;\n\t\t\t} else\n\t\t\t\ttoken += ch;\n\n\t\t\tif (token == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\treturn token;\n\t\t}\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Skips all whitespace in the data stream.\n\t */\n\tprivate skipWhiteSpace():void\n\t{\n\t\tvar ch:string;\n\n\t\tdo\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\n\n\t\tthis.putBack();\n\t}\n\n\t/**\n\t * Skips to the next line.\n\t */\n\tprivate ignoreLine():void\n\t{\n\t\tvar ch:string;\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\n\t\t\tch = this.getNextChar();\n\t}\n\n\t/**\n\t * Retrieves the next single character in the data stream.\n\t */\n\tprivate getNextChar():string\n\t{\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\n\n\t\tif (ch == \"\\n\") {\n\t\t\t++this._line;\n\t\t\tthis._charLineIndex = 0;\n\t\t} else if (ch != \"\\r\")\n\t\t\t++this._charLineIndex;\n\n\t\tif (this._parseIndex == this._textData.length)\n\t\t\tthis._reachedEOF = true;\n\n\t\treturn ch;\n\t}\n\n\t/**\n\t * Retrieves the next integer in the data stream.\n\t */\n\tprivate getNextInt():number /*int*/\n\t{\n\t\tvar i:number = parseInt(this.getNextToken());\n\t\tif (isNaN(i))\n\t\t\tthis.sendParseError(\"int type\");\n\t\treturn i;\n\t}\n\n\t/**\n\t * Retrieves the next floating point number in the data stream.\n\t */\n\tprivate getNextNumber():number\n\t{\n\t\tvar f:number = parseFloat(this.getNextToken());\n\t\tif (isNaN(f))\n\t\t\tthis.sendParseError(\"float type\");\n\t\treturn f;\n\t}\n\n\t/**\n\t * Retrieves the next 3d vector in the data stream.\n\t */\n\tprivate parseVector3D():Vector3D\n\t{\n\t\tvar vec:Vector3D = new Vector3D();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tvec.x = this.getNextNumber();\n\t\tvec.y = this.getNextNumber();\n\t\tvec.z = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn vec;\n\t}\n\n\t/**\n\t * Retrieves the next quaternion in the data stream.\n\t */\n\tprivate parseQuaternion():Quaternion\n\t{\n\t\tvar quat:Quaternion = new Quaternion();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tquat.x = this.getNextNumber();\n\t\tquat.y = this.getNextNumber();\n\t\tquat.z = this.getNextNumber();\n\n\t\t// quat supposed to be unit length\n\t\tvar t:number = 1 - (quat.x*quat.x) - (quat.y*quat.y) - (quat.z*quat.z);\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn quat;\n\t}\n\n\t/**\n\t * Parses the command line data.\n\t */\n\tprivate parseCMD():void\n\t{\n\t\t// just ignore the command line property\n\t\tthis.parseLiteralstring();\n\t}\n\n\t/**\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\n\t * by double quotes.\n\t */\n\tprivate parseLiteralstring():string\n\t{\n\t\tthis.skipWhiteSpace();\n\n\t\tvar ch:string = this.getNextChar();\n\t\tvar str:string = \"\";\n\n\t\tif (ch != \"\\\"\")\n\t\t\tthis.sendParseError(\"\\\"\");\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch != \"\\\"\")\n\t\t\t\tstr += ch;\n\t\t} while (ch != \"\\\"\");\n\n\t\treturn str;\n\t}\n\n\t/**\n\t * Throws an end-of-file error when a premature end of file was encountered.\n\t */\n\tprivate sendEOFError():void\n\t{\n\t\tthrow new Error(\"Unexpected end of file\");\n\t}\n\n\t/**\n\t * Throws an error when an unexpected token was encountered.\n\t * @param expected The token type that was actually expected.\n\t */\n\tprivate sendParseError(expected:string):void\n\t{\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\n\t}\n\n\t/**\n\t * Throws an error when an unknown keyword was encountered.\n\t */\n\tprivate sendUnknownKeywordError():void\n\t{\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\n\t}\n}\n\nexport = MD5AnimParser;\n\n\n/**\n *\n */\nclass BaseFrameData\n{\n\t/**\n\t *\n\t */\n\tpublic position:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic orientation:Quaternion;\n}\n\n/**\n *\n */\nclass BoundsData\n{\n\t/**\n\t *\n\t */\n\tpublic min:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic max:Vector3D;\n}\n\n/**\n *\n */\nclass FrameData\n{\n\t/**\n\t *\n\t */\n\tpublic index:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic components:Array<number>;\n}\n\n/**\n *\n */\nclass HierarchyData\n{\n\t/**\n\t *\n\t */\n\tpublic name:string;\n\n\t/**\n\t *\n\t */\n\tpublic parentIndex:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic flags:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic startIndex:number /*int*/;\n}",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport Sprite\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\n\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\n\n// todo: create animation system, parse skeleton\n\n/**\n * MD5MeshParser provides a parser for the md5mesh data type, providing the graphics of the md5 format.\n *\n * todo: optimize\n */\nclass MD5MeshParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\n\tpublic static NUM_MESHES_TOKEN:string = \"numMeshes\";\n\tpublic static COMMENT_TOKEN:string = \"//\";\n\tpublic static JOINTS_TOKEN:string = \"joints\";\n\tpublic static MESH_TOKEN:string = \"mesh\";\n\n\tpublic static MESH_SHADER_TOKEN:string = \"shader\";\n\tpublic static MESH_NUM_VERTS_TOKEN:string = \"numverts\";\n\tpublic static MESH_VERT_TOKEN:string = \"vert\";\n\tpublic static MESH_NUM_TRIS_TOKEN:string = \"numtris\";\n\tpublic static MESH_TRI_TOKEN:string = \"tri\";\n\tpublic static MESH_NUM_WEIGHTS_TOKEN:string = \"numweights\";\n\tpublic static MESH_WEIGHT_TOKEN:string = \"weight\";\n\n\tprivate _parseIndex:number /*int*/ = 0;\n\tprivate _reachedEOF:boolean;\n\tprivate _line:number /*int*/ = 0;\n\tprivate _charLineIndex:number /*int*/ = 0;\n\tprivate _version:number /*int*/;\n\tprivate _numJoints:number /*int*/;\n\tprivate _numMeshes:number /*int*/;\n\n\tprivate _sprite:Sprite;\n\tprivate _shaders:Array<string>;\n\n\tprivate _maxJointCount:number /*int*/;\n\tprivate _elementsData:Array<ElementsData>;\n\tprivate _bindPoses:Array<Matrix3D>;\n\tprivate _graphics:Graphics;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _animationSet:SkeletonAnimationSet;\n\n\tprivate _rotationQuat:Quaternion;\n\n\t/**\n\t * Creates a new MD5MeshParser object.\n\t */\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._rotationQuat = new Quaternion();\n\n\t\tthis._rotationQuat.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\n\n\t\tif (additionalRotationAxis) {\n\t\t\tvar quat:Quaternion = new Quaternion();\n\t\t\tquat.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\n\t\t\tthis._rotationQuat.multiply(this._rotationQuat, quat);\n\t\t}\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md5sprite\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar token:string;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\ttoken = this.getNextToken();\n\t\t\tswitch (token) {\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.VERSION_TOKEN:\n\t\t\t\t\tthis._version = this.getNextInt();\n\t\t\t\t\tif (this._version != 10)\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.COMMAND_LINE_TOKEN:\n\t\t\t\t\tthis.parseCMD();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.NUM_JOINTS_TOKEN:\n\t\t\t\t\tthis._numJoints = this.getNextInt();\n\t\t\t\t\tthis._bindPoses = new Array<Matrix3D>(this._numJoints);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.NUM_MESHES_TOKEN:\n\t\t\t\t\tthis._numMeshes = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.JOINTS_TOKEN:\n\t\t\t\t\tthis.parseJoints();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_TOKEN:\n\t\t\t\t\tthis.parseMesh();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (!this._reachedEOF)\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\n\t\t\t}\n\n\t\t\tif (this._reachedEOF) {\n\t\t\t\tthis.calculateMaxJointCount();\n\t\t\t\tthis._animationSet = new SkeletonAnimationSet(this._maxJointCount);\n\n\t\t\t\tthis._sprite = new Sprite();\n\t\t\t\tthis._graphics = this._sprite.graphics;\n\n\t\t\t\tfor (var i:number /*int*/ = 0; i < this._elementsData.length; ++i)\n\t\t\t\t\tthis._graphics.addGraphic(this.translateElements(this._elementsData[i].positionData, this._elementsData[i].weightData, this._elementsData[i].indices));\n\n\t\t\t\t//_graphics.animation = _animation;\n\t\t\t\t//\t\t\t\t\t_sprite.animationController = _animationController;\n\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._sprite);\n\n\t\t\t\tthis._pFinalizeAsset(this._graphics);\n\t\t\t\tthis._pFinalizeAsset(this._sprite);\n\t\t\t\tthis._pFinalizeAsset(this._skeleton);\n\t\t\t\tthis._pFinalizeAsset(this._animationSet);\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t}\n\t\t}\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\tprivate calculateMaxJointCount():void\n\t{\n\t\tthis._maxJointCount = 0;\n\n\t\tvar numElementsData:number /*int*/ = this._elementsData.length;\n\t\tfor (var i:number /*int*/ = 0; i < numElementsData; ++i) {\n\t\t\tvar elementsData:ElementsData = this._elementsData[i];\n\t\t\tvar positionData:Array<PositionData> = elementsData.positionData;\n\t\t\tvar numVerts:number /*int*/ = positionData.length;\n\n\t\t\tfor (var j:number /*int*/ = 0; j < numVerts; ++j) {\n\t\t\t\tvar zeroWeights:number /*int*/ = this.countZeroWeightJoints(positionData[j], elementsData.weightData);\n\t\t\t\tvar totalJoints:number /*int*/ = positionData[j].countWeight - zeroWeights;\n\t\t\t\tif (totalJoints > this._maxJointCount)\n\t\t\t\t\tthis._maxJointCount = totalJoints;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate countZeroWeightJoints(position:PositionData, weights:Array<JointData>):number /*int*/\n\t{\n\t\tvar start:number /*int*/ = position.startWeight;\n\t\tvar end:number /*int*/ = position.startWeight + position.countWeight;\n\t\tvar count:number /*int*/ = 0;\n\t\tvar weight:number;\n\n\t\tfor (var i:number /*int*/ = start; i < end; ++i) {\n\t\t\tweight = weights[i].bias;\n\t\t\tif (weight == 0)\n\t\t\t\t++count;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Parses the skeleton's joints.\n\t */\n\tprivate parseJoints():void\n\t{\n\t\tvar ch:string;\n\t\tvar joint:SkeletonJoint;\n\t\tvar pos:Vector3D;\n\t\tvar quat:Quaternion;\n\t\tvar i:number /*int*/ = 0;\n\t\tvar token:string = this.getNextToken();\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tthis._skeleton = new Skeleton();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tjoint = new SkeletonJoint();\n\t\t\tjoint.name = this.parseLiteralstring();\n\t\t\tjoint.parentIndex = this.getNextInt();\n\t\t\tpos = this.parseVector3D();\n\t\t\tpos = this._rotationQuat.rotatePoint(pos);\n\t\t\tquat = this.parseQuaternion();\n\n\t\t\t// todo: check if this is correct, or maybe we want to actually store it as quats?\n\t\t\tthis._bindPoses[i] = quat.toMatrix3D();\n\t\t\tthis._bindPoses[i].appendTranslation(pos.x, pos.y, pos.z);\n\t\t\tvar inv:Matrix3D = this._bindPoses[i].clone();\n\t\t\tinv.invert();\n\t\t\tjoint.inverseBindPose = inv.rawData;\n\n\t\t\tthis._skeleton.joints[i++] = joint;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Puts back the last read character into the data stream.\n\t */\n\tprivate putBack():void\n\t{\n\t\tthis._parseIndex--;\n\t\tthis._charLineIndex--;\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\n\t}\n\n\t/**\n\t * Parses the mesh graphics.\n\t */\n\tprivate parseMesh():void\n\t{\n\t\tvar token:string = this.getNextToken();\n\t\tvar ch:string;\n\t\tvar positionData:Array<PositionData>;\n\t\tvar weights:Array<JointData>;\n\t\tvar indices:Array<number> /*uint*/;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tif (this._shaders == null)\n\t\t\tthis._shaders = new Array<string>();\n\n\t\twhile (ch != \"}\") {\n\t\t\tch = this.getNextToken();\n\t\t\tswitch (ch) {\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_SHADER_TOKEN:\n\t\t\t\t\tthis._shaders.push(this.parseLiteralstring());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_VERTS_TOKEN:\n\t\t\t\t\tpositionData = new Array<PositionData>(this.getNextInt());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_TRIS_TOKEN:\n\t\t\t\t\tindices = new Array<number>(this.getNextInt()*3) /*uint*/;\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_WEIGHTS_TOKEN:\n\t\t\t\t\tweights = new Array<JointData>(this.getNextInt());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_VERT_TOKEN:\n\t\t\t\t\tthis.parseVertex(positionData);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_TRI_TOKEN:\n\t\t\t\t\tthis.parseTri(indices);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_WEIGHT_TOKEN:\n\t\t\t\t\tthis.parseJoint(weights);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this._elementsData == null)\n\t\t\tthis._elementsData = new Array<ElementsData>();\n\n\t\tvar i:number /*uint*/ = this._elementsData.length;\n\t\tthis._elementsData[i] = new ElementsData();\n\t\tthis._elementsData[i].positionData = positionData;\n\t\tthis._elementsData[i].weightData = weights;\n\t\tthis._elementsData[i].indices = indices;\n\t}\n\n\t/**\n\t * Converts the sprite data to a SkinnedSub instance.\n\t * @param positionData The sprite's positions.\n\t * @param weights The joint weights per position.\n\t * @param indices The indices for the faces.\n\t * @return A TriangleElements instance containing all elements data for the current sprite.\n\t */\n\tprivate translateElements(positionData:Array<PositionData>, weights:Array<JointData>, indices:Array<number> /*uint*/):TriangleElements\n\t{\n\t\tvar len:number /*int*/ = positionData.length;\n\t\tvar v1:number /*int*/, v2:number /*int*/, v3:number /*int*/;\n\t\tvar position:PositionData;\n\t\tvar weight:JointData;\n\t\tvar bindPose:Matrix3D;\n\t\tvar pos:Vector3D;\n\t\tvar elements:TriangleElements = new TriangleElements(new AttributesBuffer());\n\t\tvar uvs:Array<number> = new Array<number>(len*2);\n\t\tvar positions:Array<number> = new Array<number>(len*3);\n\t\tvar jointIndices:Array<number> = new Array<number>(len*this._maxJointCount);\n\t\tvar jointWeights:Array<number> = new Array<number>(len*this._maxJointCount);\n\t\tvar l:number /*int*/ = 0;\n\t\tvar nonZeroWeights:number /*int*/;\n\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i) {\n\t\t\tposition = positionData[i];\n\t\t\tv1 = position.index*3;\n\t\t\tv2 = v1 + 1;\n\t\t\tv3 = v1 + 2;\n\t\t\tpositions[v1] = positions[v2] = positions[v3] = 0;\n\n\t\t\tnonZeroWeights = 0;\n\t\t\tfor (var j:number /*int*/ = 0; j < position.countWeight; ++j) {\n\t\t\t\tweight = weights[position.startWeight + j];\n\t\t\t\tif (weight.bias > 0) {\n\t\t\t\t\tbindPose = this._bindPoses[weight.joint];\n\t\t\t\t\tpos = bindPose.transformVector(weight.pos);\n\t\t\t\t\tpositions[v1] += pos.x*weight.bias;\n\t\t\t\t\tpositions[v2] += pos.y*weight.bias;\n\t\t\t\t\tpositions[v3] += pos.z*weight.bias;\n\n\t\t\t\t\t// indices need to be multiplied by 3 (amount of matrix registers)\n\t\t\t\t\tjointIndices[l] = weight.joint*3;\n\t\t\t\t\tjointWeights[l++] = weight.bias;\n\t\t\t\t\t++nonZeroWeights;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = nonZeroWeights; j < this._maxJointCount; ++j) {\n\t\t\t\tjointIndices[l] = 0;\n\t\t\t\tjointWeights[l++] = 0;\n\t\t\t}\n\n\t\t\tv1 = position.index << 1;\n\t\t\tuvs[v1++] = position.s;\n\t\t\tuvs[v1] = position.t;\n\t\t}\n\n\t\telements.jointsPerVertex = this._maxJointCount;\n\t\telements.setIndices(indices);\n\t\telements.setPositions(positions);\n\t\telements.setUVs(uvs);\n\t\telements.setJointIndices(jointIndices);\n\t\telements.setJointWeights(jointWeights);\n\t\t// cause explicit updates\n\t\telements.setNormals(null);\n\t\telements.setTangents(null);\n\t\t// turn auto updates off because they may be animated and set explicitly\n\t\telements.autoDeriveTangents = false;\n\t\telements.autoDeriveNormals = false;\n\n\t\treturn elements;\n\t}\n\n\t/**\n\t * Retrieve the next triplet of position indices that form a face.\n\t * @param indices The index list in which to store the read data.\n\t */\n\tprivate parseTri(indices:Array<number> /*uint*/):void\n\t{\n\t\tvar index:number /*int*/ = this.getNextInt()*3;\n\t\tindices[index] = this.getNextInt();\n\t\tindices[index + 1] = this.getNextInt();\n\t\tindices[index + 2] = this.getNextInt();\n\t}\n\n\t/**\n\t * Reads a new joint data set for a single joint.\n\t * @param weights the target list to contain the weight data.\n\t */\n\tprivate parseJoint(weights:Array<JointData>):void\n\t{\n\t\tvar weight:JointData = new JointData();\n\t\tweight.index = this.getNextInt();\n\t\tweight.joint = this.getNextInt();\n\t\tweight.bias = this.getNextNumber();\n\t\tweight.pos = this.parseVector3D();\n\t\tweights[weight.index] = weight;\n\t}\n\n\t/**\n\t * Reads the data for a single position.\n\t * @param positionData The list to contain the position data.\n\t */\n\tprivate parseVertex(positionData:Array<PositionData>):void\n\t{\n\t\tvar position:PositionData = new PositionData();\n\t\tposition.index = this.getNextInt();\n\t\tthis.parseUV(position);\n\t\tposition.startWeight = this.getNextInt();\n\t\tposition.countWeight = this.getNextInt();\n\t\t//\t\t\tif (position.countWeight > _maxJointCount) _maxJointCount = position.countWeight;\n\t\tpositionData[position.index] = position;\n\t}\n\n\t/**\n\t * Reads the next uv coordinate.\n\t * @param positionData The positionData to contain the UV coordinates.\n\t */\n\tprivate parseUV(positionData:PositionData):void\n\t{\n\t\tvar ch:string = this.getNextToken();\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tpositionData.s = this.getNextNumber();\n\t\tpositionData.t = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\t}\n\n\t/**\n\t * Gets the next token in the data stream.\n\t */\n\tprivate getNextToken():string\n\t{\n\t\tvar ch:string;\n\t\tvar token:string = \"\";\n\n\t\twhile (!this._reachedEOF) {\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\n\t\t\t\tif (token != MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.skipWhiteSpace();\n\t\t\t\tif (token != \"\")\n\t\t\t\t\treturn token;\n\t\t\t} else\n\t\t\t\ttoken += ch;\n\n\t\t\tif (token == MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\treturn token;\n\t\t}\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Skips all whitespace in the data stream.\n\t */\n\tprivate skipWhiteSpace():void\n\t{\n\t\tvar ch:string;\n\n\t\tdo\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\n\n\t\tthis.putBack();\n\t}\n\n\t/**\n\t * Skips to the next line.\n\t */\n\tprivate ignoreLine():void\n\t{\n\t\tvar ch:string;\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\n\t\t\tch = this.getNextChar();\n\t}\n\n\t/**\n\t * Retrieves the next single character in the data stream.\n\t */\n\tprivate getNextChar():string\n\t{\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\n\n\t\tif (ch == \"\\n\") {\n\t\t\t++this._line;\n\t\t\tthis._charLineIndex = 0;\n\t\t} else if (ch != \"\\r\")\n\t\t\t++this._charLineIndex;\n\n\t\tif (this._parseIndex >= this._textData.length)\n\t\t\tthis._reachedEOF = true;\n\n\t\treturn ch;\n\t}\n\n\t/**\n\t * Retrieves the next integer in the data stream.\n\t */\n\tprivate getNextInt():number /*int*/\n\t{\n\t\tvar i:number = parseInt(this.getNextToken());\n\t\tif (isNaN(i))\n\t\t\tthis.sendParseError(\"int type\");\n\t\treturn i;\n\t}\n\n\t/**\n\t * Retrieves the next floating point number in the data stream.\n\t */\n\tprivate getNextNumber():number\n\t{\n\t\tvar f:number = parseFloat(this.getNextToken());\n\t\tif (isNaN(f))\n\t\t\tthis.sendParseError(\"float type\");\n\t\treturn f;\n\t}\n\n\t/**\n\t * Retrieves the next 3d vector in the data stream.\n\t */\n\tprivate parseVector3D():Vector3D\n\t{\n\t\tvar vec:Vector3D = new Vector3D();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tvec.x = -this.getNextNumber();\n\t\tvec.y = this.getNextNumber();\n\t\tvec.z = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn vec;\n\t}\n\n\t/**\n\t * Retrieves the next quaternion in the data stream.\n\t */\n\tprivate parseQuaternion():Quaternion\n\t{\n\t\tvar quat:Quaternion = new Quaternion();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tquat.x = this.getNextNumber();\n\t\tquat.y = -this.getNextNumber();\n\t\tquat.z = -this.getNextNumber();\n\n\t\t// quat supposed to be unit length\n\t\tvar t:number = 1 - quat.x*quat.x - quat.y*quat.y - quat.z*quat.z;\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\tvar rotQuat:Quaternion = new Quaternion();\n\t\trotQuat.multiply(this._rotationQuat, quat);\n\t\treturn rotQuat;\n\t}\n\n\t/**\n\t * Parses the command line data.\n\t */\n\tprivate parseCMD():void\n\t{\n\t\t// just ignore the command line property\n\t\tthis.parseLiteralstring();\n\t}\n\n\t/**\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\n\t * by double quotes.\n\t */\n\tprivate parseLiteralstring():string\n\t{\n\t\tthis.skipWhiteSpace();\n\n\t\tvar ch:string = this.getNextChar();\n\t\tvar str:string = \"\";\n\n\t\tif (ch != \"\\\"\")\n\t\t\tthis.sendParseError(\"\\\"\");\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch != \"\\\"\")\n\t\t\t\tstr += ch;\n\t\t} while (ch != \"\\\"\");\n\n\t\treturn str;\n\t}\n\n\t/**\n\t * Throws an end-of-file error when a premature end of file was encountered.\n\t */\n\tprivate sendEOFError():void\n\t{\n\t\tthrow new Error(\"Unexpected end of file\");\n\t}\n\n\t/**\n\t * Throws an error when an unexpected token was encountered.\n\t * @param expected The token type that was actually expected.\n\t */\n\tprivate sendParseError(expected:string):void\n\t{\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\n\t}\n\n\t/**\n\t * Throws an error when an unknown keyword was encountered.\n\t */\n\tprivate sendUnknownKeywordError():void\n\t{\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\n\t}\n}\n\nexport = MD5MeshParser;\n\n\nclass PositionData\n{\n\tpublic index:number /*int*/;\n\tpublic s:number;\n\tpublic t:number;\n\tpublic startWeight:number /*int*/;\n\tpublic countWeight:number /*int*/;\n}\n\nclass JointData\n{\n\tpublic index:number /*int*/;\n\tpublic joint:number /*int*/;\n\tpublic bias:number;\n\tpublic pos:Vector3D;\n}\n\nclass ElementsData\n{\n\tpublic positionData:Array<PositionData>;\n\tpublic weightData:Array<JointData>;\n\tpublic indices:Array<number> /*uint*/;\n}",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport Sprite\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\n\n/**\n * Max3DSParser provides a parser for the 3ds data type.\n */\nclass Max3DSParser extends ParserBase\n{\n\tprivate _byteData:ByteArray;\n\n\tprivate _textures:Object;\n\tprivate _materials:Object;\n\tprivate _unfinalized_objects:Object;\n\n\tprivate _cur_obj_end:number;\n\tprivate _cur_obj:ObjectVO;\n\n\tprivate _cur_mat_end:number;\n\tprivate _cur_mat:MaterialVO;\n\tprivate _useSmoothingGroups:boolean;\n\n\t/**\n\t * Creates a new <code>Max3DSParser</code> object.\n\t *\n\t * @param useSmoothingGroups Determines whether the parser looks for smoothing groups in the 3ds file or assumes uniform smoothing. Defaults to true.\n\t */\n\tconstructor(useSmoothingGroups:boolean = true)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\n\t\tthis._useSmoothingGroups = useSmoothingGroups;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"3ds\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tvar ba:ByteArray;\n\n\t\tba = ParserUtils.toByteArray(data);\n\t\tif (ba) {\n\t\t\tba.position = 0;\n\t\t\tif (ba.readShort() == 0x4d4d)\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\n\t{\n\t\tif (resourceDependency.assets.length == 1) {\n\t\t\tvar asset:IAsset;\n\n\t\t\tasset = resourceDependency.assets[0];\n\t\t\tif (asset.isAsset(BitmapImage2D)) {\n\t\t\t\tvar tex:TextureVO;\n\n\t\t\t\ttex = this._textures[resourceDependency.id];\n\t\t\t\ttex.texture = new Single2DTexture(<BitmapImage2D> asset);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\n\t{\n\t\t// TODO: Implement\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (!this._byteData) {\n\t\t\tthis._byteData = this._pGetByteData();\n\t\t\tthis._byteData.position = 0;\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;// Should be default\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t\tthis._textures = {};\n\t\t\tthis._materials = {};\n\t\t\tthis._unfinalized_objects = {};\n\t\t}\n\n\t\t// TODO: With this construct, the loop will run no-op for as long\n\t\t// as there is time once file has finished reading. Consider a nice\n\t\t// way to stop loop when byte array is empty, without putting it in\n\t\t// the while-conditional, which will prevent finalizations from\n\t\t// happening after the last chunk.\n\t\twhile (this._pHasTime()) {\n\n\t\t\t// If we are currently working on an object, and the most recent chunk was\n\t\t\t// the last one in that object, finalize the current object.\n\t\t\tif (this._cur_mat && this._byteData.position >= this._cur_mat_end)\n\t\t\t\tthis.finalizeCurrentMaterial();\n\t\t\telse if (this._cur_obj && this._byteData.position >= this._cur_obj_end) {\n\t\t\t\t// Can't finalize at this point, because we have to wait until the full\n\t\t\t\t// animation section has been parsed for any potential pivot definitions\n\t\t\t\tthis._unfinalized_objects[this._cur_obj.name] = this._cur_obj;\n\t\t\t\tthis._cur_obj_end = Number.MAX_VALUE /*uint*/;\n\t\t\t\tthis._cur_obj = null;\n\t\t\t}\n\n\t\t\tif (this._byteData.getBytesAvailable() > 0) {\n\t\t\t\tvar cid:number /*uint*/;\n\t\t\t\tvar len:number /*uint*/;\n\t\t\t\tvar end:number /*uint*/;\n\n\t\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\t\tlen = this._byteData.readUnsignedInt();\n\t\t\t\tend = this._byteData.position + (len - 6);\n\n\t\t\t\tswitch (cid) {\n\t\t\t\t\tcase 0x4D4D: // MAIN3DS\n\t\t\t\t\tcase 0x3D3D: // EDIT3DS\n\t\t\t\t\tcase 0xB000: // KEYF3DS\n\t\t\t\t\t\t// This types are \"container chunks\" and contain only\n\t\t\t\t\t\t// sub-chunks (no data on their own.) This means that\n\t\t\t\t\t\t// there is nothing more to parse at this point, and\n\t\t\t\t\t\t// instead we should progress to the next chunk, which\n\t\t\t\t\t\t// will be the first sub-chunk of this one.\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0xAFFF: // MATERIAL\n\t\t\t\t\t\tthis._cur_mat_end = end;\n\t\t\t\t\t\tthis._cur_mat = this.parseMaterial();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4000: // EDIT_OBJECT\n\t\t\t\t\t\tthis._cur_obj_end = end;\n\t\t\t\t\t\tthis._cur_obj = new ObjectVO();\n\t\t\t\t\t\tthis._cur_obj.name = this.readNulTermstring();\n\t\t\t\t\t\tthis._cur_obj.materials = new Array<string>();\n\t\t\t\t\t\tthis._cur_obj.materialFaces = {};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4100: // OBJ_TRIMESH\n\t\t\t\t\t\tthis._cur_obj.type = Sprite.assetType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4110: // TRI_VERTEXL\n\t\t\t\t\t\tthis.parseVertexList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4120: // TRI_FACELIST\n\t\t\t\t\t\tthis.parseFaceList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4140: // TRI_MAPPINGCOORDS\n\t\t\t\t\t\tthis.parseUVList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4130: // Face materials\n\t\t\t\t\t\tthis.parseFaceMaterialList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4160: // Transform\n\t\t\t\t\t\tthis._cur_obj.transform = this.readTransform();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0xB002: // Object animation (including pivot)\n\t\t\t\t\t\tthis.parseObjectAnimation(end);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4150: // Smoothing groups\n\t\t\t\t\t\tthis.parseSmoothingGroups();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Skip this (unknown) chunk\n\t\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Pause parsing if there were any dependencies found during this\n\t\t\t\t// iteration (i.e. if there are any dependencies that need to be\n\t\t\t\t// retrieved at this time.)\n\t\t\t\tif (this.dependencies.length) {\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// More parsing is required if the entire byte array has not yet\n\t\t// been read, or if there is a currently non-finalized object in\n\t\t// the pipeline.\n\t\tif (this._byteData.getBytesAvailable() || this._cur_obj || this._cur_mat) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t} else {\n\t\t\tvar name:string;\n\n\t\t\t// Finalize any remaining objects before ending.\n\t\t\tfor (name in this._unfinalized_objects) {\n\t\t\t\tvar obj:DisplayObjectContainer;\n\t\t\t\tobj = this.constructObject(this._unfinalized_objects[name]);\n\t\t\t\tif (obj) {\n\t\t\t\t\t//add to the content property\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\n\n\t\t\t\t\tthis._pFinalizeAsset(obj, name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\tprivate parseMaterial():MaterialVO\n\t{\n\t\tvar mat:MaterialVO;\n\n\t\tmat = new MaterialVO();\n\n\t\twhile (this._byteData.position < this._cur_mat_end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\t\t\tvar end:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\t\t\tend = this._byteData.position + (len - 6);\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xA000: // Material name\n\t\t\t\t\tmat.name = this.readNulTermstring();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA010: // Ambient color\n\t\t\t\t\tmat.ambientColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA020: // Diffuse color\n\t\t\t\t\tmat.diffuseColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA030: // Specular color\n\t\t\t\t\tmat.specularColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA081: // Two-sided, existence indicates \"true\"\n\t\t\t\t\tmat.twoSided = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA200: // Main (color) texture\n\t\t\t\t\tmat.colorMap = this.parseTexture(end);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA204: // Specular map\n\t\t\t\t\tmat.specularMap = this.parseTexture(end);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._byteData.position = end;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn mat;\n\t}\n\n\tprivate parseTexture(end:number /*uint*/):TextureVO\n\t{\n\t\tvar tex:TextureVO;\n\n\t\ttex = new TextureVO();\n\n\t\twhile (this._byteData.position < end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xA300:\n\t\t\t\t\ttex.url = this.readNulTermstring();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t// Skip this unknown texture sub-chunk\n\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._textures[tex.url] = tex;\n\t\tthis._pAddDependency(tex.url, new URLRequest(tex.url));\n\n\t\treturn tex;\n\t}\n\n\tprivate parseVertexList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.verts = new Array<number>(count*3);\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.verts.length;\n\t\twhile (i < len) {\n\t\t\tvar x:number, y:number, z:number;\n\n\t\t\tx = this._byteData.readFloat();\n\t\t\ty = this._byteData.readFloat();\n\t\t\tz = this._byteData.readFloat();\n\n\t\t\tthis._cur_obj.verts[i++] = x;\n\t\t\tthis._cur_obj.verts[i++] = z;\n\t\t\tthis._cur_obj.verts[i++] = y;\n\t\t}\n\t}\n\n\tprivate parseFaceList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.indices = new Array<number>(count*3) /*uint*/;\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.indices.length;\n\t\twhile (i < len) {\n\t\t\tvar i0:number /*uint*/, i1:number /*uint*/, i2:number /*uint*/;\n\n\t\t\ti0 = this._byteData.readUnsignedShort();\n\t\t\ti1 = this._byteData.readUnsignedShort();\n\t\t\ti2 = this._byteData.readUnsignedShort();\n\n\t\t\tthis._cur_obj.indices[i++] = i0;\n\t\t\tthis._cur_obj.indices[i++] = i2;\n\t\t\tthis._cur_obj.indices[i++] = i1;\n\n\t\t\t// Skip \"face info\", irrelevant in Away3D\n\t\t\tthis._byteData.position += 2;\n\t\t}\n\n\t\tthis._cur_obj.smoothingGroups = new Array<number>(count) /*uint*/;\n\t}\n\n\tprivate parseSmoothingGroups():void\n\t{\n\t\tvar len:number /*uint*/ = this._cur_obj.indices.length/3;\n\t\tvar i:number /*uint*/ = 0;\n\t\twhile (i < len) {\n\t\t\tthis._cur_obj.smoothingGroups[i] = this._byteData.readUnsignedInt();\n\t\t\ti++;\n\t\t}\n\t}\n\n\tprivate parseUVList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.uvs = new Array<number>(count*2);\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.uvs.length;\n\t\twhile (i < len) {\n\t\t\tthis._cur_obj.uvs[i++] = this._byteData.readFloat();\n\t\t\tthis._cur_obj.uvs[i++] = 1.0 - this._byteData.readFloat();\n\t\t}\n\t}\n\n\tprivate parseFaceMaterialList():void\n\t{\n\t\tvar mat:string;\n\t\tvar count:number /*uint*/;\n\t\tvar i:number /*uint*/;\n\t\tvar faces:Array<number> /*uint*/;\n\n\t\tmat = this.readNulTermstring();\n\t\tcount = this._byteData.readUnsignedShort();\n\n\t\tfaces = new Array<number>(count) /*uint*/;\n\t\ti = 0;\n\t\twhile (i < faces.length)\n\t\t\tfaces[i++] = this._byteData.readUnsignedShort();\n\n\t\tthis._cur_obj.materials.push(mat);\n\t\tthis._cur_obj.materialFaces[mat] = faces;\n\t}\n\n\tprivate parseObjectAnimation(end:number):void\n\t{\n\t\tvar vo:ObjectVO;\n\t\tvar obj:DisplayObjectContainer;\n\t\tvar pivot:Vector3D;\n\t\tvar name:string;\n\t\tvar hier:number /*uint*/;\n\n\t\t// Pivot defaults to origin\n\t\tpivot = new Vector3D;\n\n\t\twhile (this._byteData.position < end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xb010: // Name/hierarchy\n\t\t\t\t\tname = this.readNulTermstring();\n\t\t\t\t\tthis._byteData.position += 4;\n\t\t\t\t\thier = this._byteData.readShort();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xb013: // Pivot\n\t\t\t\t\tpivot.x = this._byteData.readFloat();\n\t\t\t\t\tpivot.z = this._byteData.readFloat();\n\t\t\t\t\tpivot.y = this._byteData.readFloat();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If name is \"$$$DUMMY\" this is an empty object (e.g. a container)\n\t\t// and will be ignored in this version of the parser\n\t\t// TODO: Implement containers in 3DS parser.\n\t\tif (name != '$$$DUMMY' && this._unfinalized_objects.hasOwnProperty(name)) {\n\t\t\tvo = this._unfinalized_objects[name];\n\t\t\tobj = this.constructObject(vo, pivot);\n\n\t\t\tif (obj) {\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\n\n\t\t\t\tthis._pFinalizeAsset(obj, vo.name);\n\t\t\t}\n\n\n\t\t\tdelete this._unfinalized_objects[name];\n\t\t}\n\t}\n\n\tprivate constructObject(obj:ObjectVO, pivot:Vector3D = null):DisplayObjectContainer\n\t{\n\t\tif (obj.type == Sprite.assetType) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar sub:TriangleElements;\n\t\t\tvar graphics:Graphics;\n\t\t\tvar mat:MaterialBase;\n\t\t\tvar sprite:Sprite;\n\t\t\tvar mtx:Matrix3D;\n\t\t\tvar vertices:Array<VertexVO>;\n\t\t\tvar faces:Array<FaceVO>;\n\n\t\t\tif (obj.materials.length > 1)\n\t\t\t\tconsole.log(\"The Away3D 3DS parser does not support multiple materials per sprite at this point.\");\n\n\t\t\t// Ignore empty objects\n\t\t\tif (!obj.indices || obj.indices.length == 0)\n\t\t\t\treturn null;\n\n\t\t\tvertices = new Array<VertexVO>(obj.verts.length/3);\n\t\t\tfaces = new Array<FaceVO>(obj.indices.length/3);\n\n\t\t\tthis.prepareData(vertices, faces, obj);\n\n\t\t\tif (this._useSmoothingGroups)\n\t\t\t\tthis.applySmoothGroups(vertices, faces);\n\n\t\t\tobj.verts = new Array<number>(vertices.length*3);\n\t\t\tfor (i = 0; i < vertices.length; i++) {\n\t\t\t\tobj.verts[i*3] = vertices[i].x;\n\t\t\t\tobj.verts[i*3 + 1] = vertices[i].y;\n\t\t\t\tobj.verts[i*3 + 2] = vertices[i].z;\n\t\t\t}\n\t\t\tobj.indices = new Array<number>(faces.length*3) /*uint*/;\n\n\t\t\tfor (i = 0; i < faces.length; i++) {\n\t\t\t\tobj.indices[i*3] = faces[i].a;\n\t\t\t\tobj.indices[i*3 + 1] = faces[i].b;\n\t\t\t\tobj.indices[i*3 + 2] = faces[i].c;\n\t\t\t}\n\n\t\t\tif (obj.uvs) {\n\t\t\t\t// If the object had UVs to start with, use UVs generated by\n\t\t\t\t// smoothing group splitting algorithm. Otherwise those UVs\n\t\t\t\t// will be nonsense and should be skipped.\n\t\t\t\tobj.uvs = new Array<number>(vertices.length*2);\n\t\t\t\tfor (i = 0; i < vertices.length; i++) {\n\t\t\t\t\tobj.uvs[i*2] = vertices[i].u;\n\t\t\t\t\tobj.uvs[i*2 + 1] = vertices[i].v;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (obj.materials.length > 0) {\n\t\t\t\tvar mname:string;\n\t\t\t\tmname = obj.materials[0];\n\t\t\t\tmat = this._materials[mname].material;\n\t\t\t}\n\n\t\t\t// Build sprite and return it\n\t\t\tsprite = new Sprite(mat);\n\t\t\tsprite.transform.matrix3D = new Matrix3D(obj.transform);\n\n\t\t\tgraphics = sprite.graphics;\n\n\t\t\t// Construct elements (potentially splitting buffers)\n\t\t\t// and add them to graphics.\n\t\t\tsub = new TriangleElements(new AttributesBuffer());\n\t\t\tsub.setIndices(obj.indices);\n\t\t\tsub.setPositions(obj.verts);\n\t\t\tsub.setUVs(obj.uvs);\n\n\t\t\tgraphics.addGraphic(sub);\n\n\t\t\t// Apply pivot translation to graphics if a pivot was\n\t\t\t// found while parsing the keyframe chunk earlier.\n\t\t\tif (pivot) {\n\t\t\t\tif (obj.transform) {\n\t\t\t\t\t// If a transform was found while parsing the\n\t\t\t\t\t// object chunk, use it to find the local pivot vector\n\t\t\t\t\tmtx = new Matrix3D(obj.transform);\n\t\t\t\t\tmtx.rawData[12] = 0;\n\t\t\t\t\tmtx.rawData[13] = 0;\n\t\t\t\t\tmtx.rawData[14] = 0;\n\t\t\t\t\tpivot = mtx.transformVector(pivot);\n\t\t\t\t}\n\n\t\t\t\tpivot.scaleBy(-1);\n\n\t\t\t\tmtx = new Matrix3D();\n\t\t\t\tmtx.appendTranslation(pivot.x, pivot.y, pivot.z);\n\t\t\t\tgraphics.applyTransformation(mtx);\n\t\t\t}\n\n\t\t\t// Apply transformation to graphics if a transformation\n\t\t\t// was found while parsing the object chunk earlier.\n\t\t\tif (obj.transform) {\n\t\t\t\tmtx = new Matrix3D(obj.transform);\n\t\t\t\tmtx.invert();\n\t\t\t\tgraphics.applyTransformation(mtx);\n\t\t\t}\n\n\t\t\t// Final transform applied to graphics. Finalize the graphics,\n\t\t\t// which will no longer be modified after this point.\n\t\t\tthis._pFinalizeAsset(graphics, obj.name.concat('_graphics'));\n\n\t\t\treturn sprite;\n\t\t}\n\n\t\t// If reached, unknown\n\t\treturn null;\n\t}\n\n\tprivate prepareData(vertices:Array<VertexVO>, faces:Array<FaceVO>, obj:ObjectVO):void\n\t{\n\t\t// convert raw ObjectVO's data to structured VertexVO and FaceVO\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar k:number /*int*/;\n\t\tvar len:number /*int*/ = obj.verts.length;\n\t\tfor (i = 0, j = 0, k = 0; i < len;) {\n\t\t\tvar v:VertexVO = new VertexVO;\n\t\t\tv.x = obj.verts[i++];\n\t\t\tv.y = obj.verts[i++];\n\t\t\tv.z = obj.verts[i++];\n\t\t\tif (obj.uvs) {\n\t\t\t\tv.u = obj.uvs[j++];\n\t\t\t\tv.v = obj.uvs[j++];\n\t\t\t}\n\t\t\tvertices[k++] = v;\n\t\t}\n\t\tlen = obj.indices.length;\n\t\tfor (i = 0, k = 0; i < len;) {\n\t\t\tvar f:FaceVO = new FaceVO();\n\t\t\tf.a = obj.indices[i++];\n\t\t\tf.b = obj.indices[i++];\n\t\t\tf.c = obj.indices[i++];\n\t\t\tf.smoothGroup = obj.smoothingGroups[k] || 0;\n\t\t\tfaces[k++] = f;\n\t\t}\n\t}\n\n\tprivate applySmoothGroups(vertices:Array<VertexVO>, faces:Array<FaceVO>):void\n\t{\n\t\t// clone vertices according to following rule:\n\t\t// clone if vertex's in faces from groups 1+2 and 3\n\t\t// don't clone if vertex's in faces from groups 1+2, 3 and 1+3\n\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar k:number /*int*/;\n\t\tvar l:number /*int*/;\n\t\tvar len:number /*int*/;\n\t\tvar numVerts:number /*uint*/ = vertices.length;\n\t\tvar numFaces:number /*uint*/ = faces.length;\n\n\t\t// extract groups data for vertices\n\t\tvar vGroups:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\n\t\tfor (i = 0; i < numVerts; i++)\n\t\t\tvGroups[i] = new Array<number>() /*uint*/;\n\t\tfor (i = 0; i < numFaces; i++) {\n\t\t\tvar face:FaceVO = faces[i];\n\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\tvar groups:Array<number> /*uint*/ = vGroups[(j == 0)? face.a : ((j == 1)? face.b : face.c)];\n\t\t\t\tvar group:number /*uint*/ = face.smoothGroup;\n\t\t\t\tfor (k = groups.length - 1; k >= 0; k--) {\n\t\t\t\t\tif ((group & groups[k]) > 0) {\n\t\t\t\t\t\tgroup |= groups[k];\n\t\t\t\t\t\tgroups.splice(k, 1);\n\t\t\t\t\t\tk = groups.length - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tgroups.push(group);\n\t\t\t}\n\t\t}\n\t\t// clone vertices\n\t\tvar vClones:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\n\t\tfor (i = 0; i < numVerts; i++) {\n\t\t\tif ((len = vGroups[i].length) < 1)\n\t\t\t\tcontinue;\n\t\t\tvar clones:Array<number> /*uint*/ = new Array<number>(len) /*uint*/;\n\t\t\tvClones[i] = clones;\n\t\t\tclones[0] = i;\n\t\t\tvar v0:VertexVO = vertices[i];\n\t\t\tfor (j = 1; j < len; j++) {\n\t\t\t\tvar v1:VertexVO = new VertexVO;\n\t\t\t\tv1.x = v0.x;\n\t\t\t\tv1.y = v0.y;\n\t\t\t\tv1.z = v0.z;\n\t\t\t\tv1.u = v0.u;\n\t\t\t\tv1.v = v0.v;\n\t\t\t\tclones[j] = vertices.length;\n\t\t\t\tvertices.push(v1);\n\t\t\t}\n\t\t}\n\t\tnumVerts = vertices.length;\n\n\t\tfor (i = 0; i < numFaces; i++) {\n\t\t\tface = faces[i];\n\t\t\tgroup = face.smoothGroup;\n\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\tk = (j == 0)? face.a : ((j == 1)? face.b : face.c);\n\t\t\t\tgroups = vGroups[k];\n\t\t\t\tlen = groups.length;\n\t\t\t\tclones = vClones[k];\n\t\t\t\tfor (l = 0; l < len; l++) {\n\t\t\t\t\tif (((group == 0) && (groups[l] == 0)) || ((group & groups[l]) > 0)) {\n\t\t\t\t\t\tvar index:number /*uint*/ = clones[l];\n\t\t\t\t\t\tif (group == 0) {\n\t\t\t\t\t\t\t// vertex is unique if no smoothGroup found\n\t\t\t\t\t\t\tgroups.splice(l, 1);\n\t\t\t\t\t\t\tclones.splice(l, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j == 0)\n\t\t\t\t\t\t\tface.a = index; else if (j == 1)\n\t\t\t\t\t\t\tface.b = index; else\n\t\t\t\t\t\t\tface.c = index;\n\t\t\t\t\t\tl = len;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate finalizeCurrentMaterial():void\n\t{\n\t\tvar mat:MethodMaterial;\n\n\t\tmat = new MethodMaterial(this._cur_mat.ambientColor);\n\n\t\tif (this._cur_mat.colorMap)\n\t\t\tmat.ambientMethod.texture = this._cur_mat.colorMap.texture || DefaultMaterialManager.getDefaultTexture();\n\n\t\tmat.diffuseMethod.color = this._cur_mat.diffuseColor;\n\t\tmat.specularMethod.color = this._cur_mat.specularColor;\n\n\t\tif (this.materialMode >= 2)\n\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\tmat.bothSides = this._cur_mat.twoSided;\n\n\t\tthis._pFinalizeAsset(mat, this._cur_mat.name);\n\n\t\tthis._materials[this._cur_mat.name] = this._cur_mat;\n\t\tthis._cur_mat.material = mat;\n\n\t\tthis._cur_mat = null;\n\t}\n\n\tprivate readNulTermstring():string\n\t{\n\t\tvar chr:number /*int*/;\n\t\tvar str:string = \"\";\n\n\t\twhile ((chr = this._byteData.readUnsignedByte()) > 0)\n\t\t\tstr += String.fromCharCode(chr);\n\n\t\treturn str;\n\t}\n\n\tprivate readTransform():Float32Array\n\t{\n\t\tvar data:Float32Array = new Float32Array(16);\n\n\t\t// X axis\n\t\tdata[0] = this._byteData.readFloat(); // X\n\t\tdata[2] = this._byteData.readFloat(); // Z\n\t\tdata[1] = this._byteData.readFloat(); // Y\n\t\tdata[3] = 0;\n\n\t\t// Z axis\n\t\tdata[8] = this._byteData.readFloat(); // X\n\t\tdata[10] = this._byteData.readFloat(); // Z\n\t\tdata[9] = this._byteData.readFloat(); // Y\n\t\tdata[11] = 0;\n\n\t\t// Y Axis\n\t\tdata[4] = this._byteData.readFloat(); // X\n\t\tdata[6] = this._byteData.readFloat(); // Z\n\t\tdata[5] = this._byteData.readFloat(); // Y\n\t\tdata[7] = 0;\n\n\t\t// Translation\n\t\tdata[12] = this._byteData.readFloat(); // X\n\t\tdata[14] = this._byteData.readFloat(); // Z\n\t\tdata[13] = this._byteData.readFloat(); // Y\n\t\tdata[15] = 1;\n\n\t\treturn data;\n\t}\n\n\tprivate readColor():number /*int*/\n\t{\n\t\tvar cid:number /*int*/;\n\t\tvar len:number /*int*/;\n\t\tvar r:number /*int*/, g:number /*int*/, b:number /*int*/;\n\n\t\tcid = this._byteData.readUnsignedShort();\n\t\tlen = this._byteData.readUnsignedInt();\n\n\t\tswitch (cid) {\n\t\t\tcase 0x0010: // Floats\n\t\t\t\tr = this._byteData.readFloat()*255;\n\t\t\t\tg = this._byteData.readFloat()*255;\n\t\t\t\tb = this._byteData.readFloat()*255;\n\t\t\t\tbreak;\n\t\t\tcase 0x0011: // 24-bit color\n\t\t\t\tr = this._byteData.readUnsignedByte();\n\t\t\t\tg = this._byteData.readUnsignedByte();\n\t\t\t\tb = this._byteData.readUnsignedByte();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n}\n\nexport = Max3DSParser;\n\n/**\n *\n */\nclass FaceVO\n{\n\tpublic a:number /*int*/;\n\tpublic b:number /*int*/;\n\tpublic c:number /*int*/;\n\tpublic smoothGroup:number /*int*/;\n}\n\n/**\n *\n */\nclass MaterialVO\n{\n\tpublic name:string;\n\tpublic ambientColor:number /*int*/;\n\tpublic diffuseColor:number /*int*/;\n\tpublic specularColor:number /*int*/;\n\tpublic twoSided:boolean;\n\tpublic colorMap:TextureVO;\n\tpublic specularMap:TextureVO;\n\tpublic material:MaterialBase;\n}\n\n/**\n *\n */\nclass ObjectVO\n{\n\tpublic name:string;\n\tpublic type:string;\n\tpublic pivotX:number;\n\tpublic pivotY:number;\n\tpublic pivotZ:number;\n\tpublic transform:Float32Array;\n\tpublic verts:Array<number>;\n\tpublic indices:Array<number> /*int*/;\n\tpublic uvs:Array<number>;\n\tpublic materialFaces:Object;\n\tpublic materials:Array<string>;\n\tpublic smoothingGroups:Array<number> /*int*/;\n}\n\n/**\n *\n */\nclass TextureVO\n{\n\tpublic url:string;\n\tpublic texture:Single2DTexture;\n}\n\n/**\n *\n */\nclass VertexVO\n{\n\tpublic x:number;\n\tpublic y:number;\n\tpublic z:number;\n\tpublic u:number;\n\tpublic v:number;\n\tpublic normal:Vector3D;\n\tpublic tangent:Vector3D;\n}",
    "import Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\n\nimport Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport Sprite\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\n\n/**\n * OBJParser provides a parser for the OBJ data type.\n */\nclass OBJParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tprivate _charIndex:number;\n\tprivate _oldIndex:number;\n\tprivate _stringLength:number;\n\tprivate _currentObject:ObjectGroup;\n\tprivate _currentGroup:Group;\n\tprivate _currentMaterialGroup:MaterialGroup;\n\tprivate _objects:Array<ObjectGroup>;\n\tprivate _materialIDs:string[];\n\tprivate _materialLoaded:Array<LoadedMaterial>;\n\tprivate _materialSpecularData:Array<SpecularData>;\n\tprivate _sprites:Array<Sprite>;\n\tprivate _lastMtlID:string;\n\tprivate _objectIndex:number;\n\tprivate _realIndices;\n\tprivate _vertexIndex:number;\n\tprivate _vertices:Array<Vertex>;\n\tprivate _vertexNormals:Array<Vertex>;\n\tprivate _uvs:Array<UV>;\n\tprivate _scale:number;\n\tprivate _mtlLib:boolean;\n\tprivate _mtlLibLoaded:boolean = true;\n\tprivate _activeMaterialID:string = \"\";\n\n\t/**\n\t * Creates a new OBJParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(scale:number = 1)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._scale = scale;\n\t}\n\n\t/**\n\t * Scaling factor applied directly to vertices data\n\t * @param value The scaling factor.\n\t */\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"obj\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tvar content:string = ParserUtils.toString(data);\n\t\tvar hasV:boolean = false;\n\t\tvar hasF:boolean = false;\n\n\t\tif (content) {\n\t\t\thasV = content.indexOf(\"\\nv \") != -1;\n\t\t\thasF = content.indexOf(\"\\nf \") != -1;\n\t\t}\n\n\t\treturn hasV && hasF;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif (resourceDependency.id == 'mtl') {\n\t\t\tvar str:string = ParserUtils.toString(resourceDependency.data);\n\t\t\tthis.parseMtl(str);\n\n\t\t} else {\n\t\t\tvar asset:IAsset;\n\n\t\t\tif (resourceDependency.assets.length != 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tasset = resourceDependency.assets[0];\n\n\t\t\tif (asset.isAsset(BitmapImage2D)) {\n\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\t\tlm.materialID = resourceDependency.id;\n\t\t\t\tlm.texture = new Single2DTexture(<BitmapImage2D> asset);\n\n\t\t\t\tthis._materialLoaded.push(lm);\n\n\t\t\t\tif (this._sprites.length > 0) {\n\t\t\t\t\tthis.applyMaterial(lm);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tif (resourceDependency.id == \"mtl\") {\n\t\t\tthis._mtlLib = false;\n\t\t\tthis._mtlLibLoaded = false;\n\t\t} else {\n\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\tlm.materialID = resourceDependency.id;\n\t\t\tthis._materialLoaded.push(lm);\n\t\t}\n\n\t\tif (this._sprites.length > 0)\n\t\t\tthis.applyMaterial(lm);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar line:string;\n\t\tvar creturn:string = String.fromCharCode(10);\n\t\tvar trunk;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\t// Merge linebreaks that are immediately preceeded by\n\t\t\t// the \"escape\" backward slash into single lines.\n\t\t\tthis._textData = this._textData.replace(/\\\\[\\r\\n]+\\s*/gm, ' ');\n\t\t}\n\n\t\tif (this._textData.indexOf(creturn) == -1)\n\t\t\tcreturn = String.fromCharCode(13);\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._startedParsing = true;\n\t\t\tthis._vertices = new Array<Vertex>();\n\t\t\tthis._vertexNormals = new Array<Vertex>();\n\t\t\tthis._materialIDs = new Array<string>();\n\t\t\tthis._materialLoaded = new Array<LoadedMaterial>();\n\t\t\tthis._sprites = new Array<Sprite>();\n\t\t\tthis._uvs = new Array<UV>();\n\t\t\tthis._stringLength = this._textData.length;\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, 0);\n\t\t\tthis._oldIndex = 0;\n\t\t\tthis._objects = new Array<ObjectGroup>();\n\t\t\tthis._objectIndex = 0;\n\t\t}\n\n\t\twhile (this._charIndex < this._stringLength && this._pHasTime()) {\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, this._oldIndex);\n\n\t\t\tif (this._charIndex == -1)\n\t\t\t\tthis._charIndex = this._stringLength;\n\n\t\t\tline = this._textData.substring(this._oldIndex, this._charIndex);\n\t\t\tline = line.split('\\r').join(\"\");\n\t\t\tline = line.replace(\"  \", \" \");\n\t\t\ttrunk = line.split(\" \");\n\t\t\tthis._oldIndex = this._charIndex + 1;\n\t\t\tthis.parseLine(trunk);\n\n\t\t\t// If whatever was parsed on this line resulted in the\n\t\t\t// parsing being paused to retrieve dependencies, break\n\t\t\t// here and do not continue parsing until un-paused.\n\t\t\tif (this.parsingPaused) {\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._charIndex >= this._stringLength) {\n\n\t\t\tif (this._mtlLib && !this._mtlLibLoaded) {\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\n\t\t\tthis.translate();\n\t\t\tthis.applyMaterials();\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\t/**\n\t * Parses a single line in the OBJ file.\n\t */\n\tprivate parseLine(trunk)\n\t{\n\t\tswitch (trunk[0]) {\n\n\t\t\tcase \"mtllib\":\n\n\t\t\t\tthis._mtlLib = true;\n\t\t\t\tthis._mtlLibLoaded = false;\n\t\t\t\tthis.loadMtl(trunk[1]);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"g\":\n\n\t\t\t\tthis.createGroup(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"o\":\n\n\t\t\t\tthis.createObject(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"usemtl\":\n\n\t\t\t\tif (this._mtlLib) {\n\n\t\t\t\t\tif (!trunk[1])\n\t\t\t\t\t\ttrunk[1] = \"def000\";\n\n\t\t\t\t\tthis._materialIDs.push(trunk[1]);\n\t\t\t\t\tthis._activeMaterialID = trunk[1];\n\n\t\t\t\t\tif (this._currentGroup)\n\t\t\t\t\t\tthis._currentGroup.materialID = this._activeMaterialID;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"v\":\n\n\t\t\t\tthis.parseVertex(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"vt\":\n\n\t\t\t\tthis.parseUV(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"vn\":\n\n\t\t\t\tthis.parseVertexNormal(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"f\":\n\n\t\t\t\tthis.parseFace(trunk);\n\n\t\t}\n\t}\n\n\t/**\n\t * Converts the parsed data into an Away3D scenegraph structure\n\t */\n\tprivate translate()\n\t{\n\t\tfor (var objIndex:number = 0; objIndex < this._objects.length; ++objIndex) {\n\t\t\tvar groups:Array<Group> = this._objects[objIndex].groups;\n\t\t\tvar numGroups:number = groups.length;\n\t\t\tvar materialGroups:Array<MaterialGroup>;\n\t\t\tvar numMaterialGroups:number;\n\t\t\tvar graphics:Graphics;\n\t\t\tvar sprite:Sprite;\n\n\t\t\tvar m:number;\n\t\t\tvar sm:number;\n\t\t\tvar bmMaterial:MethodMaterial;\n\n\t\t\tfor (var g:number = 0; g < numGroups; ++g) {\n\t\t\t\tbmMaterial = new MethodMaterial(DefaultMaterialManager.getDefaultImage2D());\n\n\t\t\t\t//check for multipass\n\t\t\t\tif (this.materialMode >= 2)\n\t\t\t\t\tbmMaterial.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\tsprite = new Sprite(bmMaterial);\n\t\t\t\tgraphics = sprite.graphics;\n\t\t\t\tmaterialGroups = groups[g].materialGroups;\n\t\t\t\tnumMaterialGroups = materialGroups.length;\n\n\t\t\t\tfor (m = 0; m < numMaterialGroups; ++m)\n\t\t\t\t\tthis.translateMaterialGroup(materialGroups[m], graphics);\n\n\t\t\t\tif (graphics.count == 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Finalize and force type-based name\n\t\t\t\tthis._pFinalizeAsset(<IAsset> graphics);//, \"\");\n\n\t\t\t\tif (this._objects[objIndex].name) {\n\t\t\t\t\t// this is a full independent object ('o' tag in OBJ file)\n\t\t\t\t\tsprite.name = this._objects[objIndex].name;\n\n\t\t\t\t} else if (groups[g].name) {\n\n\t\t\t\t\t// this is a group so the sub groups contain the actual sprite object names ('g' tag in OBJ file)\n\t\t\t\t\tsprite.name = groups[g].name;\n\n\t\t\t\t} else {\n\t\t\t\t\t// No name stored. Use empty string which will force it\n\t\t\t\t\t// to be overridden by finalizeAsset() to type default.\n\t\t\t\t\tsprite.name = \"\";\n\t\t\t\t}\n\n\t\t\t\tthis._sprites.push(sprite);\n\n\t\t\t\tif (groups[g].materialID != \"\")\n\t\t\t\t\tbmMaterial.name = groups[g].materialID + \"~\" + sprite.name; else\n\t\t\t\t\tbmMaterial.name = this._lastMtlID + \"~\" + sprite.name;\n\n\t\t\t\tif (sprite.graphics.count > 1) {\n\t\t\t\t\tfor (sm = 1; sm < sprite.graphics.count; ++sm)\n\t\t\t\t\t\tsprite.graphics.getGraphicAt(sm).material = bmMaterial;\n\t\t\t\t}\n\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(sprite);\n\n\t\t\t\tthis._pFinalizeAsset(<IAsset> sprite);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Translates an obj's material group to a subgraphics.\n\t * @param materialGroup The material group data to convert.\n\t * @param graphics The Graphics to contain the converted Elements.\n\t */\n\tprivate translateMaterialGroup(materialGroup:MaterialGroup, graphics:Graphics)\n\t{\n\t\tvar faces:Array<FaceData> = materialGroup.faces;\n\t\tvar face:FaceData;\n\t\tvar numFaces:number = faces.length;\n\t\tvar numVerts:number;\n\t\tvar elements:TriangleElements;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\t\tvar uvs:Array<number> = new Array<number>();\n\t\tvar normals:Array<number> = new Array<number>();\n\t\tvar indices:Array<number> /*uint*/ = new Array<number>();\n\n\t\tthis._realIndices = [];\n\t\tthis._vertexIndex = 0;\n\n\t\tvar j:number;\n\t\tfor (var i:number = 0; i < numFaces; ++i) {\n\n\t\t\tface = faces[i];\n\t\t\tnumVerts = face.indexIds.length - 1;\n\n\t\t\tfor (j = 1; j < numVerts; ++j) {\n\n\t\t\t\tthis.translateVertexData(face, j, vertices, uvs, indices, normals);\n\t\t\t\tthis.translateVertexData(face, 0, vertices, uvs, indices, normals);\n\t\t\t\tthis.translateVertexData(face, j + 1, vertices, uvs, indices, normals);\n\t\t\t}\n\t\t}\n\t\tif (vertices.length > 0) {\n\t\t\telements = new TriangleElements(new AttributesBuffer());\n\t\t\telements.autoDeriveNormals = normals.length? false : true;\n\t\t\telements.setIndices(indices);\n\t\t\telements.setPositions(vertices);\n\t\t\telements.setNormals(normals);\n\t\t\telements.setUVs(uvs);\n\n\t\t\tgraphics.addGraphic(elements);\n\t\t}\n\t}\n\n\tprivate translateVertexData(face:FaceData, vertexIndex:number, vertices:Array<number>, uvs:Array<number>, indices:Array<number> /*uint*/, normals:Array<number>)\n\t{\n\t\tvar index:number;\n\t\tvar vertex:Vertex;\n\t\tvar vertexNormal:Vertex;\n\t\tvar uv:UV;\n\n\t\tif (!this._realIndices[face.indexIds[vertexIndex]]) {\n\n\t\t\tindex = this._vertexIndex;\n\t\t\tthis._realIndices[face.indexIds[vertexIndex]] = ++this._vertexIndex;\n\t\t\tvertex = this._vertices[face.vertexIndices[vertexIndex] - 1];\n\t\t\tvertices.push(vertex.x*this._scale, vertex.y*this._scale, vertex.z*this._scale);\n\n\t\t\tif (face.normalIndices.length > 0) {\n\t\t\t\tvertexNormal = this._vertexNormals[face.normalIndices[vertexIndex] - 1];\n\t\t\t\tnormals.push(vertexNormal.x, vertexNormal.y, vertexNormal.z);\n\t\t\t}\n\n\t\t\tif (face.uvIndices.length > 0) {\n\n\t\t\t\ttry {\n\t\t\t\t\tuv = this._uvs[face.uvIndices[vertexIndex] - 1];\n\t\t\t\t\tuvs.push(uv.u, uv.v);\n\n\t\t\t\t} catch (e) {\n\n\t\t\t\t\tswitch (vertexIndex) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tuvs.push(0, 1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tuvs.push(.5, 0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tuvs.push(1, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tindex = this._realIndices[face.indexIds[vertexIndex]] - 1;\n\t\t}\n\n\t\tindices.push(index);\n\t}\n\n\t/**\n\t * Creates a new object group.\n\t * @param trunk The data block containing the object tag and its parameters\n\t */\n\tprivate createObject(trunk)\n\t{\n\t\tthis._currentGroup = null;\n\t\tthis._currentMaterialGroup = null;\n\t\tthis._objects.push(this._currentObject = new ObjectGroup());\n\n\t\tif (trunk)\n\t\t\tthis._currentObject.name = trunk[1];\n\t}\n\n\t/**\n\t * Creates a new group.\n\t * @param trunk The data block containing the group tag and its parameters\n\t */\n\tprivate createGroup(trunk)\n\t{\n\t\tif (!this._currentObject)\n\t\t\tthis.createObject(null);\n\t\tthis._currentGroup = new Group();\n\n\t\tthis._currentGroup.materialID = this._activeMaterialID;\n\n\t\tif (trunk)\n\t\t\tthis._currentGroup.name = trunk[1];\n\t\tthis._currentObject.groups.push(this._currentGroup);\n\n\t\tthis.createMaterialGroup(null);\n\t}\n\n\t/**\n\t * Creates a new material group.\n\t * @param trunk The data block containing the material tag and its parameters\n\t */\n\tprivate createMaterialGroup(trunk)\n\t{\n\t\tthis._currentMaterialGroup = new MaterialGroup();\n\t\tif (trunk)\n\t\t\tthis._currentMaterialGroup.url = trunk[1];\n\t\tthis._currentGroup.materialGroups.push(this._currentMaterialGroup);\n\t}\n\n\t/**\n\t * Reads the next vertex coordinates.\n\t * @param trunk The data block containing the vertex tag and its parameters\n\t */\n\tprivate parseVertex(trunk)\n\t{\n\t\t//for the very rare cases of other delimiters/charcodes seen in some obj files\n\n\t\tvar v1:number, v2:number , v3:number;\n\t\tif (trunk.length > 4) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\n\t\t\tv1 = <number> nTrunk[0];\n\t\t\tv2 = <number> nTrunk[1];\n\t\t\tv3 = <number> -nTrunk[2];\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\n\n\t\t} else {\n\t\t\tv1 = <number> parseFloat(trunk[1]);\n\t\t\tv2 = <number> parseFloat(trunk[2]);\n\t\t\tv3 = <number> -parseFloat(trunk[3]);\n\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the next uv coordinates.\n\t * @param trunk The data block containing the uv tag and its parameters\n\t */\n\tprivate parseUV(trunk)\n\t{\n\t\tif (trunk.length > 3) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\t\t\tthis._uvs.push(new UV(nTrunk[0], 1 - nTrunk[1]));\n\n\t\t} else {\n\t\t\tthis._uvs.push(new UV(parseFloat(trunk[1]), 1 - parseFloat(trunk[2])));\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the next vertex normal coordinates.\n\t * @param trunk The data block containing the vertex normal tag and its parameters\n\t */\n\tprivate parseVertexNormal(trunk)\n\t{\n\t\tif (trunk.length > 4) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\t\t\tthis._vertexNormals.push(new Vertex(nTrunk[0], nTrunk[1], -nTrunk[2]));\n\n\t\t} else {\n\t\t\tthis._vertexNormals.push(new Vertex(parseFloat(trunk[1]), parseFloat(trunk[2]), -parseFloat(trunk[3])));\n\t\t}\n\t}\n\n\t/**\n\t * Reads the next face's indices.\n\t * @param trunk The data block containing the face tag and its parameters\n\t */\n\tprivate parseFace(trunk)\n\t{\n\t\tvar len:number = trunk.length;\n\t\tvar face:FaceData = new FaceData();\n\n\t\tif (!this._currentGroup) {\n\t\t\tthis.createGroup(null);\n\t\t}\n\n\t\tvar indices;\n\t\tfor (var i:number = 1; i < len; ++i) {\n\n\t\t\tif (trunk[i] == \"\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices = trunk[i].split(\"/\");\n\t\t\tface.vertexIndices.push(this.parseIndex(parseInt(indices[0]), this._vertices.length));\n\n\t\t\tif (indices[1] && String(indices[1]).length > 0)\n\t\t\t\tface.uvIndices.push(this.parseIndex(parseInt(indices[1]), this._uvs.length));\n\n\t\t\tif (indices[2] && String(indices[2]).length > 0)\n\t\t\t\tface.normalIndices.push(this.parseIndex(parseInt(indices[2]), this._vertexNormals.length));\n\n\t\t\tface.indexIds.push(trunk[i]);\n\t\t}\n\n\t\tthis._currentMaterialGroup.faces.push(face);\n\t}\n\n\t/**\n\t * This is a hack around negative face coords\n\t */\n\tprivate parseIndex(index:number, length:number):number\n\t{\n\t\tif (index < 0)\n\t\t\treturn index + length + 1; else\n\t\t\treturn index;\n\t}\n\n\tprivate parseMtl(data:string)\n\t{\n\t\tvar materialDefinitions = data.split('newmtl');\n\t\tvar lines;\n\t\tvar trunk;\n\t\tvar j:number;\n\n\t\tvar basicSpecularMethod:SpecularBasicMethod;\n\t\tvar useSpecular:boolean;\n\t\tvar useColor:boolean;\n\t\tvar diffuseColor:number;\n\t\tvar color:number;\n\t\tvar specularColor:number;\n\t\tvar specular:number;\n\t\tvar alpha:number;\n\t\tvar mapkd:string;\n\n\t\tfor (var i:number = 0; i < materialDefinitions.length; ++i) {\n\n\n\t\t\tlines = (materialDefinitions[i].split('\\r')).join(\"\").split('\\n');\n\t\t\t//lines = (materialDefinitions[i].split('\\r') as Array).join(\"\").split('\\n');\n\n\t\t\tif (lines.length == 1)\n\t\t\t\tlines = materialDefinitions[i].split(String.fromCharCode(13));\n\n\t\t\tdiffuseColor = color = specularColor = 0xFFFFFF;\n\t\t\tspecular = 0;\n\t\t\tuseSpecular = false;\n\t\t\tuseColor = false;\n\t\t\talpha = 1;\n\t\t\tmapkd = \"\";\n\n\t\t\tfor (j = 0; j < lines.length; ++j) {\n\n\t\t\t\tlines[j] = lines[j].replace(/\\s+$/, \"\");\n\n\t\t\t\tif (lines[j].substring(0, 1) != \"#\" && (j == 0 || lines[j] != \"\")) {\n\t\t\t\t\ttrunk = lines[j].split(\" \");\n\n\t\t\t\t\tif (String(trunk[0]).charCodeAt(0) == 9 || String(trunk[0]).charCodeAt(0) == 32)\n\t\t\t\t\t\ttrunk[0] = trunk[0].substring(1, trunk[0].length);\n\n\t\t\t\t\tif (j == 0) {\n\t\t\t\t\t\tthis._lastMtlID = trunk.join(\"\");\n\t\t\t\t\t\tthis._lastMtlID = (this._lastMtlID == \"\")? \"def000\" : this._lastMtlID;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tswitch (trunk[0]) {\n\n\t\t\t\t\t\t\tcase \"Ka\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3])))\n\t\t\t\t\t\t\t\t\tcolor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Ks\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\n\t\t\t\t\t\t\t\t\tspecularColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\t\tuseSpecular = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Ns\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\n\t\t\t\t\t\t\t\t\tspecular = Number(trunk[1])*0.001;\n\t\t\t\t\t\t\t\tif (specular == 0)\n\t\t\t\t\t\t\t\t\tuseSpecular = false;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Kd\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\n\t\t\t\t\t\t\t\t\tdiffuseColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\t\tuseColor = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"tr\":\n\t\t\t\t\t\t\tcase \"d\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\n\t\t\t\t\t\t\t\t\talpha = Number(trunk[1]);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"map_Kd\":\n\t\t\t\t\t\t\t\tmapkd = this.parseMapKdString(trunk);\n\t\t\t\t\t\t\t\tmapkd = mapkd.replace(/\\\\/g, \"/\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mapkd != \"\") {\n\n\t\t\t\tif (useSpecular) {\n\n\t\t\t\t\tbasicSpecularMethod = new SpecularBasicMethod();\n\t\t\t\t\tbasicSpecularMethod.color = specularColor;\n\t\t\t\t\tbasicSpecularMethod.strength = specular;\n\n\t\t\t\t\tvar specularData:SpecularData = new SpecularData();\n\t\t\t\t\tspecularData.alpha = alpha;\n\t\t\t\t\tspecularData.basicSpecularMethod = basicSpecularMethod;\n\t\t\t\t\tspecularData.materialID = this._lastMtlID;\n\n\t\t\t\t\tif (!this._materialSpecularData)\n\t\t\t\t\t\tthis._materialSpecularData = new Array<SpecularData>();\n\n\t\t\t\t\tthis._materialSpecularData.push(specularData);\n\n\t\t\t\t}\n\n\t\t\t\tthis._pAddDependency(this._lastMtlID, new URLRequest(mapkd));\n\n\t\t\t} else if (useColor && !isNaN(color)) {\n\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\t\tlm.materialID = this._lastMtlID;\n\n\t\t\t\tif (alpha == 0)\n\t\t\t\t\tconsole.log(\"Warning: an alpha value of 0 was found in mtl color tag (Tr or d) ref:\" + this._lastMtlID + \", sprite(es) using it will be invisible!\");\n\n\t\t\t\tvar cm:MethodMaterial = new MethodMaterial(color);\n\n\t\t\t\tif (this.materialMode < 2) {\n\t\t\t\t\tcm.alpha = alpha;\n\t\t\t\t} else {\n\t\t\t\t\tcm.mode = MethodMaterialMode.MULTI_PASS;\n\t\t\t\t}\n\n\t\t\t\tcm.diffuseMethod.color = diffuseColor;\n\n\t\t\t\tif (useSpecular) {\n\t\t\t\t\tcm.specularMethod.color = specularColor;\n\t\t\t\t\tcm.specularMethod.strength = specular;\n\t\t\t\t}\n\n\t\t\t\tlm.cm = cm;\n\n\t\t\t\tthis._materialLoaded.push(lm);\n\n\t\t\t\tif (this._sprites.length > 0)\n\t\t\t\t\tthis.applyMaterial(lm);\n\n\t\t\t}\n\t\t}\n\n\t\tthis._mtlLibLoaded = true;\n\t}\n\n\tprivate parseMapKdString(trunk):string\n\t{\n\t\tvar url:string = \"\";\n\t\tvar i:number;\n\t\tvar breakflag:boolean;\n\n\t\tfor (i = 1; i < trunk.length;) {\n\t\t\tswitch (trunk[i]) {\n\t\t\t\tcase \"-blendu\":\n\t\t\t\tcase \"-blendv\":\n\t\t\t\tcase \"-cc\":\n\t\t\t\tcase \"-clamp\":\n\t\t\t\tcase \"-texres\":\n\t\t\t\t\ti += 2; //Skip ahead 1 attribute\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"-mm\":\n\t\t\t\t\ti += 3; //Skip ahead 2 attributes\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"-o\":\n\t\t\t\tcase \"-s\":\n\t\t\t\tcase \"-t\":\n\t\t\t\t\ti += 4; //Skip ahead 3 attributes\n\t\t\t\t\tcontinue;\n\t\t\t\tdefault:\n\t\t\t\t\tbreakflag = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (breakflag)\n\t\t\t\tbreak;\n\t\t}\n\n\t\t//Reconstruct URL/filename\n\t\tfor (i; i < trunk.length; i++) {\n\t\t\turl += trunk[i];\n\t\t\turl += \" \";\n\t\t}\n\n\t\t//Remove the extraneous space and/or newline from the right side\n\t\turl = url.replace(/\\s+$/, \"\");\n\n\t\treturn url;\n\t}\n\n\tprivate loadMtl(mtlurl:string)\n\t{\n\t\t// Add raw-data dependency to queue and load dependencies now,\n\t\t// which will pause the parsing in the meantime.\n\t\tthis._pAddDependency('mtl', new URLRequest(mtlurl), true);\n\t\tthis._pPauseAndRetrieveDependencies();//\n\t}\n\n\tprivate applyMaterial(lm:LoadedMaterial)\n\t{\n\t\tvar decomposeID;\n\t\tvar sprite:Sprite;\n\t\tvar tm:MethodMaterial;\n\t\tvar j:number;\n\t\tvar specularData:SpecularData;\n\n\t\tfor (var i:number = 0; i < this._sprites.length; ++i) {\n\t\t\tsprite = this._sprites[i];\n\t\t\tdecomposeID = sprite.material.name.split(\"~\");\n\n\t\t\tif (decomposeID[0] == lm.materialID) {\n\n\t\t\t\tif (lm.cm) {\n\t\t\t\t\tif (sprite.material)\n\t\t\t\t\t\tsprite.material = null;\n\t\t\t\t\tsprite.material = lm.cm;\n\n\t\t\t\t} else if (lm.texture) {\n\t\t\t\t\ttm = <MethodMaterial > sprite.material;\n\n\t\t\t\t\ttm.ambientMethod.texture = lm.texture;\n\t\t\t\t\ttm.style.color = lm.color;\n\t\t\t\t\ttm.alpha = lm.alpha;\n\t\t\t\t\ttm.style.sampler = new Sampler2D(true);\n\n\t\t\t\t\tif (this.materialMode < 2) // if materialMode is 0 or 1, we create a SinglePass\n\t\t\t\t\t\ttm.alpha = lm.alpha;\n\t\t\t\t\telse\n\t\t\t\t\t\ttm.mode = MethodMaterialMode.MULTI_PASS;\n\n\t\t\t\t\tif (lm.specularMethod) {\n\n\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\n\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\n\t\t\t\t\t\t// the new method being overridden with the settings from the old\n\t\t\t\t\t\t// one, which is default behavior of the setter.\n\t\t\t\t\t\ttm.specularMethod = null;\n\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\n\n\t\t\t\t\t} else if (this._materialSpecularData) {\n\n\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\n\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\n\n\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\n\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\n\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\n\t\t\t\t\t\t\t\ttm.specularMethod.color = specularData.color;\n\t\t\t\t\t\t\t\ttm.specularMethod.strength = specularData.alpha;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsprite.material.name = decomposeID[1]? decomposeID[1] : decomposeID[0];\n\t\t\t\tthis._sprites.splice(i, 1);\n\t\t\t\t--i;\n\t\t\t}\n\t\t}\n\n\t\tif (lm.cm || tm)\n\t\t\tthis._pFinalizeAsset(lm.cm || tm);\n\t}\n\n\tprivate applyMaterials()\n\t{\n\t\tif (this._materialLoaded.length == 0)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._materialLoaded.length; ++i)\n\t\t\tthis.applyMaterial(this._materialLoaded[i]);\n\t}\n}\n\nexport = OBJParser;\n\nclass ObjectGroup\n{\n\tpublic name:string;\n\tpublic groups:Group[] = new Array<Group>();\n}\n\nclass Group\n{\n\tpublic name:string;\n\tpublic materialID:string;\n\tpublic materialGroups:MaterialGroup[] = new Array<MaterialGroup>();\n}\n\nclass MaterialGroup\n{\n\tpublic url:string;\n\tpublic faces:FaceData[] = new Array<FaceData>();\n}\n\nclass SpecularData\n{\n\tpublic materialID:string;\n\tpublic basicSpecularMethod:SpecularBasicMethod;\n\tpublic color:number = 0xFFFFFF;\n\tpublic alpha:number = 1;\n}\n\nclass LoadedMaterial\n{\n\tpublic materialID:string;\n\tpublic texture:Single2DTexture;\n\tpublic cm:MaterialBase;\n\tpublic specularMethod:SpecularBasicMethod;\n\tpublic color:number = 0xFFFFFF;\n\tpublic alpha:number = 1;\n}\n\nclass FaceData\n{\n\tpublic vertexIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic uvIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic normalIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic indexIds:string[] = new Array<string>(); // used for real index lookups\n}\n\n/**\n* Texture coordinates value object.\n*/\nclass UV\n{\n\tprivate _u:number;\n\tprivate _v:number;\n\n\t/**\n\t * Creates a new <code>UV</code> object.\n\t *\n\t * @param    u        [optional]    The horizontal coordinate of the texture value. Defaults to 0.\n\t * @param    v        [optional]    The vertical coordinate of the texture value. Defaults to 0.\n\t */\n\tconstructor(u:number = 0, v:number = 0)\n\t{\n\t\tthis._u = u;\n\t\tthis._v = v;\n\t}\n\n\t/**\n\t * Defines the vertical coordinate of the texture value.\n\t */\n\tpublic get v():number\n\t{\n\t\treturn this._v;\n\t}\n\n\tpublic set v(value:number)\n\t{\n\t\tthis._v = value;\n\t}\n\n\t/**\n\t * Defines the horizontal coordinate of the texture value.\n\t */\n\tpublic get u():number\n\t{\n\t\treturn this._u;\n\t}\n\n\tpublic set u(value:number)\n\t{\n\t\tthis._u = value;\n\t}\n\n\t/**\n\t * returns a new UV value Object\n\t */\n\tpublic clone():UV\n\t{\n\t\treturn new UV(this._u, this._v);\n\t}\n\n\t/**\n\t * returns the value object as a string for trace/debug purpose\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._u + \",\" + this._v;\n\t}\n}\n\nclass Vertex\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _z:number;\n\tprivate _index:number;\n\n\t/**\n\t * Creates a new <code>Vertex</code> value object.\n\t *\n\t * @param    x            [optional]    The x value. Defaults to 0.\n\t * @param    y            [optional]    The y value. Defaults to 0.\n\t * @param    z            [optional]    The z value. Defaults to 0.\n\t * @param    index        [optional]    The index value. Defaults is NaN.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, index:number = 0)\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._index = index;\n\t}\n\n\t/**\n\t * To define/store the index of value object\n\t * @param    ind        The index\n\t */\n\tpublic set index(ind:number)\n\t{\n\t\tthis._index = ind;\n\t}\n\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n\n\t/**\n\t * To define/store the x value of the value object\n\t * @param    value        The x value\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tthis._x = value;\n\t}\n\n\t/**\n\t * To define/store the y value of the value object\n\t * @param    value        The y value\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tthis._y = value;\n\t}\n\n\t/**\n\t * To define/store the z value of the value object\n\t * @param    value        The z value\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(value:number)\n\t{\n\t\tthis._z = value;\n\t}\n\n\t/**\n\t * returns a new Vertex value Object\n\t */\n\tpublic clone():Vertex\n\t{\n\t\treturn new Vertex(this._x, this._y, this._z);\n\t}\n}",
    "import Loader\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/Loader\");\n\nimport AWDParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWDParser\");\nimport Max3DSParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/Max3DSParser\");\nimport MD2Parser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/MD2Parser\");\nimport OBJParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/OBJParser\");\n\n/**\n *\n */\nclass Parsers\n{\n\t/**\n\t * A list of all parsers that come bundled with Away3D. Use this to quickly\n\t * enable support for all bundled parsers to the file format auto-detection\n\t * feature, using any of the enableParsers() methods on loaders, e.g.:\n\t *\n\t * <code>AssetLibrary.enableParsers(Parsers.ALL_BUNDLED);</code>\n\t *\n\t * Beware however that this requires all parser classes to be included in the\n\t * SWF file, which will add 50-100 kb to the file. When only a limited set of\n\t * file formats are used, SWF file size can be saved by adding the parsers\n\t * individually using AssetLibrary.enableParser()\n\t *\n\t * A third way is to specify a parser for each loaded file, thereby bypassing\n\t * the auto-detection mechanisms altogether, while at the same time allowing\n\t * any properties that are unique to that parser to be set for that load.\n\t *\n\t * The bundled parsers are:\n\t *\n\t * <ul>\n\t * <li>AC3D (.ac)</li>\n\t * <li>Away Data version 1 ASCII and version 2 binary (.awd). AWD1 BSP unsupported</li>\n\t * <li>3DMax (.3ds)</li>\n\t * <li>DXF (.dxf)</li>\n\t * <li>Quake 2 MD2 models (.md2)</li>\n\t * <li>Doom 3 MD5 animation clips (.md5anim)</li>\n\t * <li>Doom 3 MD5 sprites (.md5sprite)</li>\n\t * <li>Wavefront OBJ (.obj)</li>\n\t * <li>Collada (.dae)</li>\n\t * <li>Images (.jpg, .png)</li>\n\t * </ul>\n\t *\n\t * @see away.library.AssetLibrary.enableParser\n\t */\n\tpublic static ALL_BUNDLED:Array<Object> = Array<Object>(AWDParser, Max3DSParser, MD2Parser, OBJParser);\n\n\t/**\n\t * Short-hand function to enable all bundled parsers for auto-detection. In practice,\n\t * this is the same as invoking enableParsers(Parsers.ALL_BUNDLED) on any of the\n\t * loader classes SingleFileLoader, LoaderSession, AssetLibrary or Loader3D.\n\t *\n\t * See notes about file size in the documentation for the ALL_BUNDLED constant.\n\t *\n\t * @see away.parsers.Parsers.ALL_BUNDLED\n\t */\n\tpublic static enableAllBundled():void\n\t{\n\t\tLoader.enableParsers(Parsers.ALL_BUNDLED);\n\t}\n}\n\nexport = Parsers;"
  ],
  "sourceRoot": ""
}