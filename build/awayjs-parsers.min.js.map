{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","awayjs-parsers.js","awayjs-parsers/lib/AWDParser.ts","awayjs-parsers/lib/MD2Parser.ts","awayjs-parsers/lib/MD5AnimParser.ts","awayjs-parsers/lib/MD5MeshParser.ts","awayjs-parsers/lib/Max3DSParser.ts","awayjs-parsers/lib/OBJParser.ts","awayjs-parsers/lib/Parsers.ts"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","awayjs-parsers\\lib\\AWDParser","module","__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","BlendMode","ColorTransform","Matrix3D","Vector3D","URLLoaderDataFormat","URLRequest","AssetType","ParserBase","ParserUtils","PerspectiveProjection","OrthographicProjection","OrthographicOffCenterProjection","BitmapCubeTexture","ImageCubeTexture","ImageTexture","ByteArray","DisplayObjectContainer","Geometry","TriangleSubGeometry","DirectionalLight","PointLight","Camera","Mesh","Skybox","StaticLightPicker","CubeMapShadowMapper","DirectionalShadowMapper","PrefabBase","PrimitiveCapsulePrefab","PrimitiveConePrefab","PrimitiveCubePrefab","PrimitiveCylinderPrefab","PrimitivePlanePrefab","PrimitiveSpherePrefab","PrimitiveTorusPrefab","VertexAnimationSet","VertexAnimator","SkeletonAnimationSet","SkeletonAnimator","JointPose","Skeleton","SkeletonPose","SkeletonJoint","SkeletonClipNode","VertexClipNode","DefaultMaterialManager","MethodMaterialMode","MethodMaterial","AmbientEnvMapMethod","DiffuseDepthMethod","DiffuseCelMethod","DiffuseGradientMethod","DiffuseLightMapMethod","DiffuseWrapMethod","EffectAlphaMaskMethod","EffectColorMatrixMethod","EffectColorTransformMethod","EffectEnvMapMethod","EffectFogMethod","EffectFresnelEnvMapMethod","EffectLightMapMethod","EffectRimLightMethod","NormalSimpleWaterMethod","ShadowDitheredMethod","ShadowFilteredMethod","SpecularFresnelMethod","ShadowHardMethod","SpecularAnisotropicMethod","SpecularCelMethod","SpecularPhongMethod","ShadowNearMethod","ShadowSoftMethod","AS2SceneGraphFactory","TimelineKeyFrame","AddChildCommand","UpdatePropertyCommand","RemoveChildCommand","ApplyAS2DepthsCommand","AWDParser","_super","ARRAY_BUFFER","_debug","_startedParsing","_texture_users","_parsed_header","_blocks","Array","AWDBlock","data","blendModeDic","push","NORMAL","ADD","ALPHA","DARKEN","DIFFERENCE","ERASE","HARDLIGHT","INVERT","LAYER","LIGHTEN","MULTIPLY","OVERLAY","SCREEN","SHADER","_depthSizeDic","_version","supportsType","extension","toLowerCase","supportsData","toString","_iResolveDependency","resourceDependency","assets","asset","thisBitmapTexture","block","isCubeTextureArray","id","split","ressourceID","resetAssetPath","name","_pFinalizeAsset","console","log","tx","_cubeTextures","htmlImageElement","posX","negX","posY","negY","posZ","negZ","_iResolveDependencyFailure","_iResolveDependencyName","oldName","parseInt","newName","_pProceedParsing","_byteData","_pGetByteData","parseHeader","_compression","DEFLATE","LZMA","_pDieWithError","UNCOMPRESSED","_body","getBytesAvailable","parsingPaused","parseNextBlock","dispose","PARSING_DONE","MORE_TO_PARSE","_pStartParsing","frameLimit","_pContent","c","ns","type","flags","len","isParsed","_cur_block_id","readUnsignedInt","readUnsignedByte","blockCompression","BitFlags","test","FLAG4","FLAG5","_accuracyOnBlocks","_accuracyMatrix","FLAG1","_accuracyGeo","FLAG2","_accuracyProps","FLAG3","_geoNrType","FLOAT32","FLOAT64","_matrixNrType","_propsNrType","blockEndAll","position","_newBlockBytes","readBytes","blockEndBlock","factory","parseAudioBlock","parseTimeLine","parsePrimitves","parseSkyboxInstance","parseLight","parseCamera","parseLightPicker","parseMaterial_v1","parseCubeTexture","parseSharedMethodBlock","parseShadowMethodBlock","parseMeshPoseAnimation","parseVertexAnimationSet","parseAnimatorSet","parseCommand","parseTriangleGeometrieBlock","parseContainer","parseMeshInstance","parseMaterial","parseTexture","parseSkeleton","parseSkeletonPose","parseSkeletonAnimation","parseNameSpace","parseMetaData","msgCnt","errorMessages","blockID","parseVarStr","data_len","url","readUTFBytes","parseProperties","extras","parseUserAttributes","_pPauseAndRetrieveDependencies","textureStylesNames","j","k","timeLineContainer","createMovieClip","isScene","sceneID","fps","readFloat","ms_per_frame","numFrames","readUnsignedShort","objectIDMap","totalDuration","frame","traceString","frameDuration","setFrameTime","numLabels","labelType","label","numCommands","commandString","hasDepthChanges","objectID","resourceID","commandType","instanceID","newChild","numFills","returnedArray","getAssetByID","GEOMETRY","geom","returnedArray2","MATERIAL","subMeshes","material","TIMELINE","registerPotentialChild","addConstructCommand","instanceName","props",1,2,3,4,"UINT8",5,6,"UINT32",7,"matrix_2d","get","colortransform","blendmode","visibilty","depth","mask","thisMatrix","blendmode_string","length_code","frame_code","addFrame","num_subs","geoScaleU","geoScaleV","subs_parsed","sm_len","sm_end","w_indices","weights","subProps","str_ftype","str_type","str_len","str_end","idx","x","y","z","verts","readNumber","indices","uvs","normals","v","sub_geom","jointsPerVertex","autoDeriveNormals","autoDeriveUVs","autoDeriveTangents","updateIndices","updatePositions","updateVertexNormals","updateUVs","updateVertexTangents","updateJointWeights","updateJointIndices","scaleU","scaleV","setSubUVs","scaleUV","addSubGeometry","prefab","primType",101,102,103,110,111,301,"UINT16",302,303,701,"BOOL",702,703,704,"primitiveTypes","topClosed","bottomClosed","yUp","par_id","mtx","ctr","parseMatrix3D","parentName","transform","matrix3D","CONTAINER","LIGHT","MESH","addChild","addError","pivot","extra","num_materials","materials_parsed","data_id","returnedArrayGeometry","geoID","materials","materialNames","returnedArrayMaterial","mat_id","m","mesh","returnedArrayParent","objC","Math","min","castsShadows","cubeTexAddr","returnedArrayCubeTex","TEXTURE","light","newShadowMapper","lightType","COLOR",8,9,10,11,12,21,22,23,"shadowMapperType","lightTypes","shadowMapperTypes","radius","fallOff","color","specular","diffuse","ambientColor","ambient","depthMapSize","shadowMapper","projection","readShort","projectiontype",104,"camera","returnedArrayLight","numLights","lightsArray","lightID","lightsArrayNames","lightPick","mat","attributes","num_methods","methods_parsed","INT32","BADDR",13,"method_type","debugString","materialMode","mode","MULTI_PASS","tex_addr","alphaBlending","alpha","alphaThreshold","repeat","normalTexture","specTexture",15,16,17,18,19,20,"spezialType","texture","diffuseTexture","diffuseTex_addr","normalTex_addr","specTex_addr","lightPickerAddr","LIGHT_PICKER","lightPicker","smooth","mipmap","bothSides","alphaPremultiplied","blendMode","normalMap","specularMap","diffuseColor","gloss","specularColor","targetID",201,202,401,402,601,602,801,"MTX4x4","EFFECTS_METHOD","addEffectMethod","SHADOW_MAP_METHOD","shadowMethod","ambientMethod","diffuseMethod","smoothness","specularMethod","fresnelPower","normalReflectance","normalMethod","_pAddDependency","byteArrayToImage","parseSharedMethodList","shadowLightID","parseShadowMethodList","parentObject","targetObject","typeCommand","returnedArrayTarget","TEXTURE_PROJECTOR","AWDSTRING","nameSpaceString","methodType","epsilon","range","num_joints","skeleton","joints_parsed","joint","ibp","parentIndex","inverseBindPose","rawData","joints","pose","joint_pose","has_transform","mtx_data","parseMatrix43RawData","orientation","fromMatrix","translation","copyFrom","jointPoses","frame_dur","pose_addr","clip","num_frames","frames_parsed","SKELETON_POSE","frames","poseOnly","num_submeshes","subMeshParsed","geometry","subGeom","num_Streams","streamsParsed","streamtypes","geoAdress","getUVForVertexAnimation","looping","stitchFinalFrame","subGeometries","poseBlockAdress","skeletonFrames","vertexFrames","ANIMATION_NODE","newVertexAnimationSet","addAnimation","animations","animationNames","newSkeletonAnimationSet","animSetBlockAdress","targetAnimationSet","targetMeshLength","meshAdresses","targetMeshes","ANIMATION_SET","thisAnimator","SKELETON","animator","effectMethodReturn",105,106,107,"offCol","colorTransform","list_len","attibuteCnt","list_end","ns_id","attr_key","attr_type","attr_len","attr_val","INT8","readByte","INT16","readInt","readDouble","expected","propertyCnt","AWDProperties","key","set","parseAttrValue","elem_len","read_func","VECTOR2x1","VECTOR3x1","VECTOR4x1","MTX3x2","MTX3x3","MTX4x3","list","num_read","num_elems","apply","val","body_len","_streaming","meshID","uvsForVertexAnimation","ud","uStride","uOffs","numPoints","newUvs","geoCnt","numVertices","getStride","UV_DATA","getOffset","assetID","assetTypesToGet","extraTypeInfo","returnArray","typeCnt","iasset","assetType","getDefaultAsset","getDefaultCubeTexture","getDefaultTexture","getDefaultMaterial","_defaultCubeTexture","defaultBitmap","createCheckeredBitmapData","precision","parseMatrix32RawData","mtx_raw","isNaN","COMPRESSIONMODE_LZMA","AWDBYTEARRAY","bytes","errorMsg","value","fallback","testFlag","FLAG6","FLAG7","FLAG8","FLAG9","FLAG10","FLAG11","FLAG12","FLAG13","FLAG14","FLAG15","FLAG16","awayjs-core/lib/base/BlendMode","undefined","awayjs-core/lib/geom/ColorTransform","awayjs-core/lib/geom/Matrix3D","awayjs-core/lib/geom/Vector3D","awayjs-core/lib/library/AssetType","awayjs-core/lib/net/URLLoaderDataFormat","awayjs-core/lib/net/URLRequest","awayjs-core/lib/parsers/ParserBase","awayjs-core/lib/parsers/ParserUtils","awayjs-core/lib/projections/OrthographicOffCenterProjection","awayjs-core/lib/projections/OrthographicProjection","awayjs-core/lib/projections/PerspectiveProjection","awayjs-core/lib/textures/BitmapCubeTexture","awayjs-core/lib/textures/ImageCubeTexture","awayjs-core/lib/textures/ImageTexture","awayjs-core/lib/utils/ByteArray","awayjs-display/lib/base/Geometry","awayjs-display/lib/base/TriangleSubGeometry","awayjs-display/lib/containers/DisplayObjectContainer","awayjs-display/lib/entities/Camera","awayjs-display/lib/entities/DirectionalLight","awayjs-display/lib/entities/Mesh","awayjs-display/lib/entities/PointLight","awayjs-display/lib/entities/Skybox","awayjs-display/lib/materials/lightpickers/StaticLightPicker","awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper","awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper","awayjs-display/lib/prefabs/PrefabBase","awayjs-display/lib/prefabs/PrimitiveCapsulePrefab","awayjs-display/lib/prefabs/PrimitiveConePrefab","awayjs-display/lib/prefabs/PrimitiveCubePrefab","awayjs-display/lib/prefabs/PrimitiveCylinderPrefab","awayjs-display/lib/prefabs/PrimitivePlanePrefab","awayjs-display/lib/prefabs/PrimitiveSpherePrefab","awayjs-display/lib/prefabs/PrimitiveTorusPrefab","awayjs-methodmaterials/lib/MethodMaterial","awayjs-methodmaterials/lib/MethodMaterialMode","awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod","awayjs-methodmaterials/lib/methods/DiffuseCelMethod","awayjs-methodmaterials/lib/methods/DiffuseDepthMethod","awayjs-methodmaterials/lib/methods/DiffuseGradientMethod","awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod","awayjs-methodmaterials/lib/methods/DiffuseWrapMethod","awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod","awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod","awayjs-methodmaterials/lib/methods/EffectColorTransformMethod","awayjs-methodmaterials/lib/methods/EffectEnvMapMethod","awayjs-methodmaterials/lib/methods/EffectFogMethod","awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod","awayjs-methodmaterials/lib/methods/EffectLightMapMethod","awayjs-methodmaterials/lib/methods/EffectRimLightMethod","awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod","awayjs-methodmaterials/lib/methods/ShadowDitheredMethod","awayjs-methodmaterials/lib/methods/ShadowFilteredMethod","awayjs-methodmaterials/lib/methods/ShadowHardMethod","awayjs-methodmaterials/lib/methods/ShadowNearMethod","awayjs-methodmaterials/lib/methods/ShadowSoftMethod","awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod","awayjs-methodmaterials/lib/methods/SpecularCelMethod","awayjs-methodmaterials/lib/methods/SpecularFresnelMethod","awayjs-methodmaterials/lib/methods/SpecularPhongMethod","awayjs-player/lib/fl/factories/AS2SceneGraphFactory","awayjs-player/lib/fl/timeline/TimelineKeyFrame","awayjs-player/lib/fl/timeline/commands/AddChildCommand","awayjs-player/lib/fl/timeline/commands/ApplyAS2DepthsCommand","awayjs-player/lib/fl/timeline/commands/RemoveChildCommand","awayjs-player/lib/fl/timeline/commands/UpdatePropertyCommand","awayjs-renderergl/lib/animators/SkeletonAnimationSet","awayjs-renderergl/lib/animators/SkeletonAnimator","awayjs-renderergl/lib/animators/VertexAnimationSet","awayjs-renderergl/lib/animators/VertexAnimator","awayjs-renderergl/lib/animators/data/JointPose","awayjs-renderergl/lib/animators/data/Skeleton","awayjs-renderergl/lib/animators/data/SkeletonJoint","awayjs-renderergl/lib/animators/data/SkeletonPose","awayjs-renderergl/lib/animators/nodes/SkeletonClipNode","awayjs-renderergl/lib/animators/nodes/VertexClipNode","awayjs-renderergl/lib/managers/DefaultMaterialManager","awayjs-parsers\\lib\\MD2Parser","MD2Parser","textureType","ignoreTexturePath","_clipNodes","Object","_animationSet","materialFinal","geoCreated","_textureType","_ignoreTexturePath","_mesh","_pHasTime","_parsedHeader","_parsedUV","_parsedFaces","_parsedFrames","_geometry","_firstSubGeom","clone","parseFrames","parseFaces","parseUV","parseMaterialNames","_ident","_skinWidth","_skinHeight","_numSkins","_numVertices","_numST","_numTris","_numFrames","_offsetSkins","_offsetST","_offsetTris","_offsetFrames","_offsetEnd","extIndex","slashIndex","_materialNames","regExp","RegExp","replace","lastIndexOf","indexOf","substring","dependencies","_uvs","ta","tb","tc","_vertIndices","_uvIndices","_indices","addIndex","_finalUV","vertexIndex","uvIndex","index","findIndex","sx","sy","sz","ty","tz","fvertices","tvertices","vertLen","prevClip","readFrameName","vertexNormals","vertexTangents","FPS","ch","floor","String","fromCharCode","awayjs-parsers\\lib\\MD5AnimParser","Quaternion","MD5AnimParser","additionalRotationAxis","additionalRotationRadians","TEXT","_parseIndex","_line","_charLineIndex","_rotationQuat","t1","t2","fromAxisAngle","X_AXIS","PI","Y_AXIS","multiply","token","_textData","_pGetTextData","getNextToken","COMMENT_TOKEN","ignoreLine","VERSION_TOKEN","getNextInt","COMMAND_LINE_TOKEN","parseCMD","NUM_FRAMES_TOKEN","_bounds","_frameData","NUM_JOINTS_TOKEN","_numJoints","_hierarchy","_baseFrameData","FRAME_RATE_TOKEN","_frameRate","NUM_ANIMATED_COMPONENTS_TOKEN","_numAnimatedComponents","HIERARCHY_TOKEN","parseHierarchy","BOUNDS_TOKEN","parseBounds","BASE_FRAME_TOKEN","parseBaseFrame","FRAME_TOKEN","parseFrame","_reachedEOF","sendUnknownKeywordError","_clip","translateClip","translatePose","frameData","hierarchy","base","translate","components","skelPose","startIndex","w","sqrt","rotatePoint","sendEOFError","HierarchyData","parseLiteralstring","getNextChar","putBack","BoundsData","parseVector3D","max","BaseFrameData","parseQuaternion","frameIndex","FrameData","getNextNumber","skipWhiteSpace","charAt","sendParseError","parseFloat","vec","quat","str","awayjs-core/lib/geom/Quaternion","awayjs-parsers\\lib\\MD5MeshParser","MD5MeshParser","_bindPoses","NUM_MESHES_TOKEN","_numMeshes","JOINTS_TOKEN","parseJoints","MESH_TOKEN","parseMesh","calculateMaxJointCount","_maxJointCount","_meshData","translateGeom","vertexData","weightData","_skeleton","numMeshData","meshData","numVerts","zeroWeights","countZeroWeightJoints","totalJoints","countWeight","vertex","weight","start","startWeight","end","count","bias","pos","toMatrix3D","appendTranslation","inv","invert","_shaders","MESH_SHADER_TOKEN","MESH_NUM_VERTS_TOKEN","MESH_NUM_TRIS_TOKEN","MESH_NUM_WEIGHTS_TOKEN","MESH_VERT_TOKEN","parseVertex","MESH_TRI_TOKEN","parseTri","MESH_WEIGHT_TOKEN","parseJoint","MeshData","v1","v2","v3","bindPose","nonZeroWeights","vertices","jointIndices","jointWeights","transformVector","JointData","VertexData","rotQuat","awayjs-parsers\\lib\\Max3DSParser","Max3DSParser","useSmoothingGroups","_useSmoothingGroups","ba","toByteArray","tex","_textures","_materials","_unfinalized_objects","_cur_mat","_cur_mat_end","finalizeCurrentMaterial","_cur_obj","_cur_obj_end","Number","MAX_VALUE","cid","ObjectVO","readNulTermstring","materialFaces","parseVertexList","parseFaceList","parseUVList","parseFaceMaterialList","readTransform","parseObjectAnimation","parseSmoothingGroups","obj","constructObject","MaterialVO","readColor","twoSided","colorMap","TextureVO","i0","i1","i2","smoothingGroups","faces","vo","hier","sub","prepareData","applySmoothGroups","mname","dat","concat","scaleBy","applyTransformation","VertexVO","FaceVO","smoothGroup","numFaces","vGroups","face","groups","group","splice","vClones","clones","v0","chr","g","awayjs-parsers\\lib\\OBJParser","SpecularBasicMethod","OBJParser","scale","_mtlLibLoaded","_activeMaterialID","_scale","defineProperty","enumerable","configurable","content","hasV","hasF","parseMtl","lm","LoadedMaterial","materialID","_materialLoaded","_meshes","applyMaterial","_mtlLib","line","trunk","creturn","_vertices","_vertexNormals","_materialIDs","_stringLength","_charIndex","_oldIndex","_objects","_objectIndex","join","parseLine","applyMaterials","loadMtl","createGroup","createObject","_currentGroup","parseVertexNormal","parseFace","objIndex","materialGroups","numMaterialGroups","sm","bmMaterial","numGroups","translateMaterialGroup","_lastMtlID","materialGroup","_realIndices","_vertexIndex","indexIds","translateVertexData","vertexNormal","uv","vertexIndices","normalIndices","uvIndices","_currentMaterialGroup","_currentObject","ObjectGroup","Group","createMaterialGroup","MaterialGroup","nTrunk","Vertex","UV","FaceData","parseIndex","lines","basicSpecularMethod","useSpecular","useColor","mapkd","materialDefinitions","charCodeAt","parseMapKdString","specularData","SpecularData","_materialSpecularData","cm","colorMat","colorMultiMat","breakflag","mtlurl","decomposeID","tm","_u","_v","_x","_y","_z","_index","ind","awayjs-methodmaterials/lib/methods/SpecularBasicMethod","awayjs-parsers\\lib\\Parsers","AssetLoader","Parsers","enableAllBundled","enableParsers","ALL_BUNDLED","awayjs-core/lib/library/AssetLoader","awayjs-parsers/lib/AWDParser","awayjs-parsers/lib/MD2Parser","awayjs-parsers/lib/Max3DSParser","awayjs-parsers/lib/OBJParser"],"mappings":"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","file":"awayjs-parsers.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"import BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\r\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\r\nimport BitmapCubeTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapCubeTexture\");\r\nimport BitmapTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\r\nimport CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\nimport ImageCubeTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageCubeTexture\");\r\nimport ImageTexture\t\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport TextureProxyBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\r\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\r\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\r\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\r\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\r\n\r\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-renderergl/lib/managers/DefaultMaterialManager\");\r\n\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\r\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\r\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\r\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\r\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\r\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\r\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\r\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\r\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\r\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\r\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\r\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\r\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\r\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\r\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\r\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\r\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\r\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\r\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\r\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\r\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\r\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\r\n\r\nimport TimelineSceneGraphFactory = require(\"awayjs-player/lib/fl/factories/TimelineSceneGraphFactory\");\r\nimport AS2SceneGraphFactory = require(\"awayjs-player/lib/fl/factories/AS2SceneGraphFactory\");\r\nimport MovieClip = require(\"awayjs-player/lib/fl/display/MovieClip\");\r\nimport TimelineKeyFrame = require(\"awayjs-player/lib/fl/timeline/TimelineKeyFrame\");\r\nimport AddChildCommand = require(\"awayjs-player/lib/fl/timeline/commands/AddChildCommand\");\r\nimport UpdatePropertyCommand = require(\"awayjs-player/lib/fl/timeline/commands/UpdatePropertyCommand\");\r\nimport RemoveChildCommand = require(\"awayjs-player/lib/fl/timeline/commands/RemoveChildCommand\");\r\nimport ApplyAS2DepthsCommand = require(\"awayjs-player/lib/fl/timeline/commands/ApplyAS2DepthsCommand\");\r\n\r\n/**\r\n * AWDParser provides a parser for the AWD data type.\r\n */\r\nclass AWDParser extends ParserBase\r\n{\r\n\t//set to \"true\" to have some console.logs in the Console\r\n\tprivate _debug:boolean = false;\r\n\tprivate _byteData:ByteArray;\r\n\tprivate _startedParsing:boolean = false;\r\n\tprivate _cur_block_id:number;\r\n\tprivate _blocks:Array<AWDBlock>;\r\n\tprivate _newBlockBytes:ByteArray;\r\n\tprivate _version:Array<number>;\r\n\tprivate _compression:number;\r\n\tprivate _accuracyOnBlocks:boolean;\r\n\tprivate _accuracyMatrix:boolean;\r\n\tprivate _accuracyGeo:boolean;\r\n\tprivate _accuracyProps:boolean;\r\n\tprivate _matrixNrType:number;\r\n\tprivate _geoNrType:number;\r\n\tprivate _propsNrType:number;\r\n\tprivate _streaming:boolean;\r\n\tprivate _texture_users:Object = {};\r\n\tprivate _parsed_header:boolean = false;\r\n\tprivate _body:ByteArray;\r\n\tprivate _defaultTexture:BitmapTexture;     // HTML IMAGE TEXTURE >? !\r\n\tprivate _cubeTextures:Array<any>;\r\n\tprivate _defaultBitmapMaterial:MethodMaterial;\r\n\tprivate _defaultCubeTexture:BitmapCubeTexture;\r\n\r\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\r\n\tpublic static UNCOMPRESSED:number = 0;\r\n\tpublic static DEFLATE:number = 1;\r\n\tpublic static LZMA:number = 2;\r\n\tpublic static INT8:number = 1;\r\n\tpublic static INT16:number = 2;\r\n\tpublic static INT32:number = 3;\r\n\tpublic static UINT8:number = 4;\r\n\tpublic static UINT16:number = 5;\r\n\tpublic static UINT32:number = 6;\r\n\tpublic static FLOAT32:number = 7;\r\n\tpublic static FLOAT64:number = 8;\r\n\tpublic static BOOL:number = 21;\r\n\tpublic static COLOR:number = 22;\r\n\tpublic static BADDR:number = 23;\r\n\tpublic static AWDSTRING:number = 31;\r\n\tpublic static AWDBYTEARRAY:number = 32;\r\n\tpublic static VECTOR2x1:number = 41;\r\n\tpublic static VECTOR3x1:number = 42;\r\n\tpublic static VECTOR4x1:number = 43;\r\n\tpublic static MTX3x2:number = 44;\r\n\tpublic static MTX3x3:number = 45;\r\n\tpublic static MTX4x3:number = 46;\r\n\tpublic static MTX4x4:number = 47;\r\n\r\n\tprivate blendModeDic:Array<string>;\r\n\tprivate _depthSizeDic:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new AWDParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n\t\tthis._blocks = new Array<AWDBlock>();\r\n\t\tthis._blocks[0] = new AWDBlock();\r\n\t\tthis._blocks[0].data = null; // Zero address means null in AWD\r\n\r\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.ADD);\r\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\r\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\r\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\r\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\r\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\r\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\r\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\r\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\r\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\r\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\r\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\r\n\t\tthis._depthSizeDic.push(256);\r\n\t\tthis._depthSizeDic.push(512);\r\n\t\tthis._depthSizeDic.push(2048);\r\n\t\tthis._depthSizeDic.push(1024);\r\n\t\tthis._version = Array<number>(); // will contain 2 int (major-version, minor-version) for awd-version-check\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"awd\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t// this will be called when Dependency has finished loading.\r\n\t\t// the Assets waiting for this Bitmap, can be Texture or CubeTexture.\r\n\t\t// if the Bitmap is awaited by a CubeTexture, we need to check if its the last Bitmap of the CubeTexture,\r\n\t\t// so we know if we have to finalize the Asset (CubeTexture) or not.\r\n\t\tif (resourceDependency.assets.length == 1) {\r\n\t\t\tvar isCubeTextureArray:Array<string> = resourceDependency.id.split(\"#\");\r\n\t\t\tvar ressourceID:string = isCubeTextureArray[0];\r\n\t\t\tvar asset:TextureProxyBase;\r\n\t\t\tvar thisBitmapTexture:Texture2DBase;\r\n\t\t\tvar block:AWDBlock;\r\n\r\n\t\t\tif (isCubeTextureArray.length == 1) // Not a cube texture\r\n\t\t\t{\r\n\t\t\t\tasset = <Texture2DBase> resourceDependency.assets[0];\r\n\t\t\t\tif (asset) {\r\n\t\t\t\t\tvar mat:MethodMaterial;\r\n\t\t\t\t\tvar users:Array<string>;\r\n\r\n\t\t\t\t\tblock = this._blocks[ resourceDependency.id ];\r\n\t\t\t\t\tblock.data = asset; // Store finished asset\r\n\r\n\t\t\t\t\t// Reset name of texture to the one defined in the AWD file,\r\n\t\t\t\t\t// as opposed to whatever the image parser came up with.\r\n\t\t\t\t\tasset.resetAssetPath(block.name, null, true);\r\n\t\t\t\t\tblock.name = asset.name;\r\n\t\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> asset);\r\n\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap for texture\");\r\n\t\t\t\t\t\tconsole.log(\"Parsed texture: Name = \" + block.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (isCubeTextureArray.length > 1) // Cube Texture\r\n\t\t\t{\r\n\t\t\t\tthisBitmapTexture = <BitmapTexture> resourceDependency.assets[0];\r\n\r\n\t\t\t\tvar tx:ImageTexture = <ImageTexture> thisBitmapTexture;\r\n\r\n\t\t\t\tthis._cubeTextures[ isCubeTextureArray[1] ] = tx.htmlImageElement; // ?\r\n\t\t\t\tthis._texture_users[ressourceID].push(1);\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + this._texture_users[ressourceID].length + \" / 6 for Cubetexture\");\r\n\t\t\t\t}\r\n\t\t\t\tif (this._texture_users[ressourceID].length == this._cubeTextures.length) {\r\n\r\n\t\t\t\t\tvar posX:any = this._cubeTextures[0];\r\n\t\t\t\t\tvar negX:any = this._cubeTextures[1];\r\n\t\t\t\t\tvar posY:any = this._cubeTextures[2];\r\n\t\t\t\t\tvar negY:any = this._cubeTextures[3];\r\n\t\t\t\t\tvar posZ:any = this._cubeTextures[4];\r\n\t\t\t\t\tvar negZ:any = this._cubeTextures[5];\r\n\r\n\t\t\t\t\tasset = <TextureProxyBase> new ImageCubeTexture(posX, negX, posY, negY, posZ, negZ);\r\n\t\t\t\t\tblock = this._blocks[ressourceID];\r\n\t\t\t\t\tblock.data = asset; // Store finished asset\r\n\r\n\t\t\t\t\t// Reset name of texture to the one defined in the AWD file,\r\n\t\t\t\t\t// as opposed to whatever the image parser came up with.\r\n\t\t\t\t\tasset.resetAssetPath(block.name, null, true);\r\n\t\t\t\t\tblock.name = asset.name;\r\n\t\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> asset);\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + block.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t//not used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\r\n\t\t// this means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency name\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\r\n\t{\r\n\t\tvar oldName:string = asset.name;\r\n\r\n\t\tif (asset) {\r\n\t\t\tvar block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\r\n\t\t\t// Reset name of texture to the one defined in the AWD file,\r\n\t\t\t// as opposed to whatever the image parser came up with.\r\n\t\t\tasset.resetAssetPath(block.name, null, true);\r\n\t\t}\r\n\r\n\t\tvar newName:string = asset.name;\r\n\r\n\t\tasset.name = oldName;\r\n\r\n\t\treturn newName;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\tif (!this._parsed_header) {\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Parse header and decompress body if needed\r\n\t\t\tthis.parseHeader();\r\n\r\n\t\t\tswitch (this._compression) {\r\n\r\n\t\t\t\tcase AWDParser.DEFLATE:\r\n\t\t\t\tcase AWDParser.LZMA:\r\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase AWDParser.UNCOMPRESSED:\r\n\t\t\t\t\tthis._body = this._byteData;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t// Compressed AWD Formats not yet supported\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t case AWDParser.DEFLATE:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress();\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t case AWDParser.LZMA:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t //*/\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._parsed_header = true;\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t}\r\n\r\n\t\tif (this._body) {\r\n\r\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\r\n\t\t\t{\r\n\t\t\t\tthis.parseNextBlock();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Return complete status\r\n\t\t\tif (this._body.getBytesAvailable() == 0) {\r\n\t\t\t\tthis.dispose();\r\n\t\t\t\treturn  ParserBase.PARSING_DONE;\r\n\t\t\t} else {\r\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\tswitch (this._compression) {\r\n\r\n\t\t\t\tcase AWDParser.DEFLATE:\r\n\t\t\t\tcase AWDParser.LZMA:\r\n\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"(!) AWDParser Error: Compressed AWD formats not yet supported (!)\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\t\t\t// Error - most likely _body not set because we do not support compression.\r\n\t\t\treturn  ParserBase.PARSING_DONE;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate dispose():void\r\n\t{\r\n\r\n\t\tfor (var c in this._blocks) {\r\n\r\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[ c ];\r\n\t\t\tb.dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate parseNextBlock():void\r\n\t{\r\n\t\tvar block:AWDBlock;\r\n\t\tvar assetData:IAsset;\r\n\t\tvar isParsed:boolean = false;\r\n\t\tvar ns:number;\r\n\t\tvar type:number;\r\n\t\tvar flags:number;\r\n\t\tvar len:number;\r\n\r\n\t\tthis._cur_block_id = this._body.readUnsignedInt();\r\n\r\n\t\tns = this._body.readUnsignedByte();\r\n\t\ttype = this._body.readUnsignedByte();\r\n\t\tflags = this._body.readUnsignedByte();\r\n\t\tlen = this._body.readUnsignedInt();\r\n\r\n\t\tvar blockCompression:boolean = BitFlags.test(flags, BitFlags.FLAG4);\r\n\t\tvar blockCompressionLZMA:boolean = BitFlags.test(flags, BitFlags.FLAG5);\r\n\r\n\t\tif (this._accuracyOnBlocks) {\r\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG1);\r\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG2);\r\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG3);\r\n\t\t\tthis._geoNrType = AWDParser.FLOAT32;\r\n\r\n\t\t\tif (this._accuracyGeo) {\r\n\t\t\t\tthis._geoNrType = AWDParser.FLOAT64;\r\n\t\t\t}\r\n\r\n\t\t\tthis._matrixNrType = AWDParser.FLOAT32;\r\n\r\n\t\t\tif (this._accuracyMatrix) {\r\n\t\t\t\tthis._matrixNrType = AWDParser.FLOAT64;\r\n\t\t\t}\r\n\r\n\t\t\tthis._propsNrType = AWDParser.FLOAT32;\r\n\r\n\t\t\tif (this._accuracyProps) {\r\n\t\t\t\tthis._propsNrType = AWDParser.FLOAT64;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar blockEndAll:number = this._body.position + len;\r\n\r\n\t\tif (len > this._body.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\r\n\t\t\tthis._body.position += this._body.getBytesAvailable();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._newBlockBytes = new ByteArray();\r\n\r\n\r\n\t\tthis._body.readBytes(this._newBlockBytes, 0, len);\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// Compressed AWD Formats not yet supported\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\r\n\t\t\t/*\r\n\t\t\t if (blockCompressionLZMA)\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress(AWDParser.COMPRESSIONMODE_LZMA);\r\n\t\t\t }\r\n\t\t\t else\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress();\r\n\t\t\t }\r\n\t\t\t */\r\n\r\n\t\t}\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\r\n\t\t//----------------------------------------------------------------------------\r\n\r\n\t\tthis._newBlockBytes.position = 0;\r\n\t\tblock = new AWDBlock();\r\n\t\tblock.len = this._newBlockBytes.position + len;\r\n\t\tblock.id = this._cur_block_id;\r\n\r\n\t\tvar blockEndBlock:number = this._newBlockBytes.position + len;\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\r\n\t\t\t//block.len       = blockEndBlock;\r\n\t\t}\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + this._cur_block_id + \" | TypeID = \" + type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\r\n\t\t}\r\n\r\n\t\tthis._blocks[this._cur_block_id] = block;\r\n\r\n\t\tif ((this._version[0] == 3) && (this._version[1] == 0)) {\r\n\t\t\t// probably should contain some info about the type of animation\r\n\t\t\tvar factory = new AS2SceneGraphFactory();\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 44:\r\n\t\t\t\t\tthis.parseAudioBlock(this._cur_block_id, factory);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:// just because i used blockID 4 in first exporter earlier\r\n\t\t\t\tcase 133:\r\n\t\t\t\t\tthis.parseTimeLine(this._cur_block_id, factory);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ((this._version[0] > 2)||((this._version[0] >= 2) && (this._version[1] >= 1))) {\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 11:\r\n\t\t\t\t\tthis.parsePrimitves(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 31:\r\n\t\t\t\t\tthis.parseSkyboxInstance(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 41:\r\n\t\t\t\t\tthis.parseLight(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 42:\r\n\t\t\t\t\tthis.parseCamera(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//  case 43:\r\n\t\t\t\t//      parseTextureProjector(_cur_block_id);\r\n\t\t\t\t//      isParsed = true;\r\n\t\t\t\t//      break;\r\n\r\n\t\t\t\tcase 51:\r\n\t\t\t\t\tthis.parseLightPicker(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 81:\r\n\t\t\t\t\tthis.parseMaterial_v1(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 83:\r\n\t\t\t\t\tthis.parseCubeTexture(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 91:\r\n\t\t\t\t\tthis.parseSharedMethodBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 92:\r\n\t\t\t\t\tthis.parseShadowMethodBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 111:\r\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id, true);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 112:\r\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 113:\r\n\t\t\t\t\tthis.parseVertexAnimationSet(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 122:\r\n\t\t\t\t\tthis.parseAnimatorSet(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 253:\r\n\t\t\t\t\tthis.parseCommand(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t//*/\r\n\t\t}\r\n\t\t//*\r\n\t\tif (isParsed == false) {\r\n\t\t\tswitch (type) {\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.parseTriangleGeometrieBlock(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 22:\r\n\t\t\t\t\tthis.parseContainer(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 23:\r\n\t\t\t\t\tthis.parseMeshInstance(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 81:\r\n\t\t\t\t\tthis.parseMaterial(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 82:\r\n\t\t\t\t\tthis.parseTexture(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 101:\r\n\t\t\t\t\tthis.parseSkeleton(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 102:\r\n\t\t\t\t\tthis.parseSkeletonPose(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 103:\r\n\t\t\t\t\tthis.parseSkeletonAnimation(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 121:\r\n\t\t\t\t//this.parseUVAnimation(this._cur_block_id);\r\n\t\t\t\t//break;\r\n\t\t\t\tcase 254:\r\n\t\t\t\t\tthis.parseNameSpace(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 255:\r\n\t\t\t\t\tthis.parseMetaData(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"AWDBlock:   Unknown BlockType  (BlockID = \" + this._cur_block_id + \") - Skip \" + len + \" bytes\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._newBlockBytes.position += len;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//*/\r\n\r\n\t\tvar msgCnt:number = 0;\r\n\t\tif (this._newBlockBytes.position == blockEndBlock) {\r\n\t\t\tif (this._debug) {\r\n\t\t\t\tif (block.errorMessages) {\r\n\t\t\t\t\twhile (msgCnt < block.errorMessages.length) {\r\n\t\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\r\n\t\t\t\t\t\tmsgCnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this._debug) {\r\n\t\t\t\tconsole.log(\"\\n\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._debug) {\r\n\r\n\t\t\t\tconsole.log(\"  (!)(!)(!) Error while reading AWDBlock ID \" + this._cur_block_id + \" = skip to next block\");\r\n\r\n\t\t\t\tif (block.errorMessages) {\r\n\t\t\t\t\twhile (msgCnt < block.errorMessages.length) {\r\n\t\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\r\n\t\t\t\t\t\tmsgCnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._body.position = blockEndAll;\r\n\t\tthis._newBlockBytes = null;\r\n\r\n\t}\r\n\r\n\r\n\t//--Parser Blocks---------------------------------------------------------------------------\r\n\r\n\tprivate parseAudioBlock(blockID:number, factory:TimelineSceneGraphFactory):void {\r\n\r\n\t\t//var asset:Audio;todo create asset for audio\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\t//this._texture_users[this._cur_block_id.toString()] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\r\n\t\t\t// todo parser needs to be able to handle mp3 and wav files if we trigger the loading of external ressource\r\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\r\n\t\t\tconsole.log(\"Audio url = \"+url);\r\n\r\n\t\t} else {\r\n\t\t\t// todo: exporter does not export embed sounds yet\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray;\r\n\t\t\tdata = new ByteArray();\r\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t// todo parse sound from bytes\r\n\t\t\t// this._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.by(data), true);\r\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t//this._blocks[blockID].data = asset;todo\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Audio file\");\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 4\r\n\tprivate parseTimeLine(blockID:number, factory:TimelineSceneGraphFactory):void {\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar k:number;\r\n\t\tvar timeLineContainer = factory.createMovieClip();\r\n\t\tvar name = this.parseVarStr();\r\n\t\tvar isScene = !!this._newBlockBytes.readUnsignedByte();\r\n\t\tvar sceneID = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar fps:number = this._newBlockBytes.readFloat();\r\n\t\tvar ms_per_frame = 1000 / fps;\r\n\t\tvar numFrames = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar objectIDMap : { [id:string]:number; } = {};\r\n\r\n\t\t// var previousTimeLine:TimeLineFrame;\r\n\t\t// var fill_props:AWDProperties = this.parseProperties({1:AWDParser.UINT32});// { 1:UINT32, 6:AWDSTRING }  ); //; , 2:UINT32, 3:UINT32, 5:BOOL } );\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| isScene = \" + isScene + \"| sceneID = \" + sceneID + \"| numFrames = \" + numFrames);\r\n\r\n\t\tvar totalDuration = 0;\r\n\t\tfor (i = 0; i < numFrames; i++) {\r\n\r\n\t\t\tvar frame = new TimelineKeyFrame();\r\n\t\t\tvar traceString = \"frame = \" + i;\r\n\t\t\t// TODO: remove the ms_per_frame to set the duration in frames\r\n\t\t\tvar frameDuration = this._newBlockBytes.readUnsignedInt() * ms_per_frame;\r\n\t\t\tframe.setFrameTime(totalDuration, frameDuration);\r\n\t\t\ttotalDuration += frameDuration;\r\n\t\t\t//console.log(\"duration = \" + frameDuration);\r\n\r\n\t\t\tvar numLabels = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tfor (j = 0; j < numLabels; j++) {\r\n\t\t\t\tvar labelType = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tvar label = this.parseVarStr();\r\n\t\t\t\t// TODO: Handle labels differently\r\n\t\t\t\t//timeLineContainer.addFrameLabel(new FrameLabel(label, labelType, frame));\r\n\t\t\t\ttraceString += \"\\n     label = \" + label + \" - labelType = \" + labelType;\r\n\t\t\t}\r\n\r\n\t\t\tvar numCommands = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tvar commandString = \"\\n      Commands \" + numCommands;\r\n\t\t\tvar hasDepthChanges = false;\r\n\t\t\tfor (j = 0; j < numCommands; j++) {\r\n\t\t\t\tvar objectID:number;\r\n\t\t\t\tvar resourceID:number;\r\n\t\t\t\tvar commandType = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t\t\t// 1 = Add object by local id (awd-block-id) + update properties\r\n\t\t\t\t// 2 = Add object by global id (string identifier) + update properties !Not used yet.!\r\n\t\t\t\t// 3 = UpdateObject - update a object that is already present\r\n\t\t\t\t// 4 = remove object\r\n\t\t\t\t// 5 = add / update sound\r\n\r\n\t\t\t\tswitch (commandType) {\r\n\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\tcase 3:\r\n\r\n\t\t\t\t\t\tobjectID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tvar instanceID=0; // must be set in folling conditions:\r\n\t\t\t\t\t\tif (commandType==1) {\r\n\t\t\t\t\t\t\t// this commands looks for a object by awd-id and puts it into the timeline\r\n\t\t\t\t\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\t\t\t\tvar newChild;\r\n\r\n\t\t\t\t\t\t\tvar numFills = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t\tcommandString += \"\\n                number of fills = \" + numFills;\r\n\r\n\t\t\t\t\t\t\t// sound is added to timeline with dedicated Command, as it is no display-object (has no matrix etc)\r\n\t\t\t\t\t\t\t// check if a Geometry can be found at the resourceID (AWD-ID)\r\n\t\t\t\t\t\t\tvar returnedArray:any[] = this.getAssetByID(resourceID, [ AssetType.GEOMETRY ]);\r\n\t\t\t\t\t\t\tif (returnedArray[0]) {\r\n\t\t\t\t\t\t\t\tvar geom = <Geometry>returnedArray[1];\r\n\t\t\t\t\t\t\t\tnewChild = new Mesh(geom);\r\n\t\t\t\t\t\t\t\t// geometry found. create new Command, add the props and the materials to it\r\n\t\t\t\t\t\t\t\tfor (k = 0; k < numFills; k++) {\r\n\t\t\t\t\t\t\t\t\tvar returnedArray2:any[] = this.getAssetByID(this._newBlockBytes.readUnsignedInt(), [ AssetType.MATERIAL ]);\r\n\t\t\t\t\t\t\t\t\tif (returnedArray2[0] && newChild.subMeshes.length > k)\r\n\t\t\t\t\t\t\t\t\t\tnewChild.subMeshes[k].material = returnedArray2[1];\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t// no geometry found, so we check for TIMELINE.\r\n\t\t\t\t\t\t\t\t// there should be no fills in this case, but geometry check might have failed, and fill-ids still need to be parsed\r\n\t\t\t\t\t\t\t\tfor (k = 0; k < numFills; k++)\r\n\t\t\t\t\t\t\t\t\tthis._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\t\t\t\t\tvar returnedArray:any[] = this.getAssetByID(resourceID, [ AssetType.TIMELINE ]);\r\n\t\t\t\t\t\t\t\tif (returnedArray[0])\r\n\t\t\t\t\t\t\t\t\tnewChild = <MovieClip>returnedArray[1];\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tinstanceID = timeLineContainer.registerPotentialChild(newChild);\r\n\t\t\t\t\t\t\tobjectIDMap[objectID] = instanceID;\r\n\t\t\t\t\t\t\tframe.addConstructCommand(new AddChildCommand(instanceID));\r\n\r\n\t\t\t\t\t\t\tvar instanceName = this.parseVarStr();\r\n\t\t\t\t\t\t\tif (instanceName.length) {\r\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(instanceID, \"name\", instanceName));\r\n\t\t\t\t\t\t\t\tcommandString += \"\\n                instanceName = \" + instanceName;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcommandString += \"\\n      - Add new Resource = \" + resourceID + \" as object_id = \" + objectID;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (commandType==2) {\r\n\t\t\t\t\t\t\t// this commands looks for a object by global string identifier and puts it into the timeline\r\n\t\t\t\t\t\t\t// this is not used yet, but might be useful to do things like text-localization\r\n\t\t\t\t\t\t\tvar global_ressource_id = this.parseVarStr();\r\n\t\t\t\t\t\t\t// todo (if needed)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tinstanceID = objectIDMap[objectID];\r\n\t\t\t\t\t\t\tcommandString += \"\\n      - Update object_id = \" + objectID;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// read the command properties\r\n\t\t\t\t\t\t// 1: matrix2d (6 x number with storage precision matrix)\r\n\t\t\t\t\t\t// 2: matrix2d (12 x number with storage precision matrix) not used yet\r\n\t\t\t\t\t\t// 3: colortransform (20 x number with storage precision properties)\r\n\t\t\t\t\t\t// 4: blendmode (uint8)\r\n\t\t\t\t\t\t// 5: visibilty (uint8)\r\n\t\t\t\t\t\t// 6: depth (uint32)\r\n\t\t\t\t\t\t// 7: mask (uint32)\r\n\r\n\t\t\t\t\t\tvar props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._propsNrType, 4:AWDParser.UINT8, 5:AWDParser.UINT8, 6:AWDParser.UINT32, 7:AWDParser.UINT32});\r\n\r\n\t\t\t\t\t\tvar matrix_2d:Float32Array = props.get(1, []);\r\n\t\t\t\t\t\t//var matrix_3d:Float32Array = props.get(2, []);\r\n\t\t\t\t\t\tvar colortransform:Float32Array = props.get(3, []);\r\n\t\t\t\t\t\tvar blendmode:number = props.get(4, -1);\r\n\t\t\t\t\t\tvar visibilty:number = props.get(5, -1);\r\n\t\t\t\t\t\tvar depth:number = props.get(6, -1);\r\n\t\t\t\t\t\tvar mask:number = props.get(7, -1);\r\n\t\t\t\t\t\t// todo: handle filters\r\n\r\n\t\t\t\t\t\t//matrix2d must provide 6 values to be valid\r\n\r\n\t\t\t\t\t\tcommandString += \"\\n                transformArray = \" + matrix_2d.length;\r\n\t\t\t\t\t\tif (matrix_2d.length==6) {\r\n\t\t\t\t\t\t\tvar thisMatrix = new Matrix3D();\r\n\t\t\t\t\t\t\t// todo set rotation + scale from matrix 2x3 to matrix3d\r\n\t\t\t\t\t\t\tthisMatrix.position = new Vector3D(matrix_2d[4], matrix_2d[5], 0);\r\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(instanceID, \"_iMatrix3D\", thisMatrix));\r\n\r\n\t\t\t\t\t\t\tcommandString += \"\\n                transformArray = \" + matrix_2d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//matrix2d must provide 20 values to be valid\r\n\t\t\t\t\t\tif (colortransform.length==20) {\r\n\t\t\t\t\t\t\t// TODO: set ColorTransform on objectProps\r\n\t\t\t\t\t\t\tcommandString += \"\\n                colorMatrix = \" + colortransform;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// blendmode must be positive to be valid\r\n\t\t\t\t\t\tif (blendmode>=0) {\r\n\t\t\t\t\t\t\tvar blendmode_string:string = this.blendModeDic[blendmode];\r\n\t\t\t\t\t\t\t// TODO: set Blendmode on objectProps\r\n\t\t\t\t\t\t\tcommandString += \"\\n                BlendMode = \" + blendmode_string;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// visibilty must be positive to be valid\r\n\t\t\t\t\t\tif (visibilty>=0) {\r\n\t\t\t\t\t\t\tif(visibilty==0)\r\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(instanceID, \"visible\", false));\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(instanceID, \"visible\", true));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// depth must be positive to be valid\r\n\t\t\t\t\t\tif (depth>=0) {\r\n\t\t\t\t\t\t\tcommandString += \"\\n                Depth = \" + depth;\r\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(instanceID, \"__AS2Depth\", depth));\r\n\t\t\t\t\t\t\thasDepthChanges = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// mask must be positive to be valid. i think only add-commands will have this value.\r\n\t\t\t\t\t\t// e.g. it should never be updated on already existing objects. (because depth of objects can change, i am not sure)\r\n\t\t\t\t\t\tif (mask>=0) {\r\n\t\t\t\t\t\t\tcommandString += \"\\n                Mask-up to obj-id: \" + mask;\r\n\t\t\t\t\t\t\t// TODO: set depthClipChange on objectProps\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// todo: handle filters\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 4:\r\n\r\n\t\t\t\t\t\t// Remove Object Command\r\n\t\t\t\t\t\tobjectID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tvar instanceID = objectIDMap[objectID];\r\n\t\t\t\t\t\tframe.addConstructCommand(new RemoveChildCommand(instanceID));\r\n\t\t\t\t\t\tcommandString += \"\\n       - Remove object with ID: \" + objectID;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 5:\r\n\r\n\t\t\t\t\t\t// Add Sound Command\r\n\t\t\t\t\t\t// TODO: create CommandPropsSound and check which asset to use\r\n\t\t\t\t\t\tobjectID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\t// TODO: implement sound in timeline\r\n\t\t\t\t\t\tcommandString += \"\\n      - Add new Sound AWD-ID = \" + resourceID.toString() + \" as object_id = \" + objectID.toString();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tcommandString += \"\\n       - Unknown Command Type = \" + commandType;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (hasDepthChanges) {\r\n\t\t\t\t// only want to do this once after all children's depth values are updated\r\n\t\t\t\tframe.addConstructCommand(new ApplyAS2DepthsCommand());\r\n\t\t\t\thasDepthChanges = false;\r\n\t\t\t}\r\n\r\n\t\t\tvar length_code = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tif (length_code > 0) {\r\n\t\t\t\t// TODO: Script should probably not be attached to keyframes?\r\n\t\t\t\tvar frame_code = this._newBlockBytes.readUTFBytes(length_code);\r\n\t\t\t\t//frame.addToScript(frame_code);\r\n\t\t\t\ttraceString += \"\\nframe-code = \" + frame_code;\r\n\t\t\t}\r\n\t\t\ttraceString += commandString;\r\n\t\t\t//trace(\"length_code = \"+length_code+\" frame_code = \"+frame_code);\r\n\t\t\tthis._newBlockBytes.readUnsignedInt();// user attributes - skip for now\r\n\t\t\t//console.log(traceString);\r\n\t\t\ttimeLineContainer.addFrame(frame);\r\n\r\n\t\t}\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset>timeLineContainer, name);\r\n\t\tthis._blocks[blockID].data = timeLineContainer;\r\n\t\tthis.parseProperties(null);\r\n\t\tthis.parseUserAttributes();\r\n\t}\r\n\r\n\t//Block ID = 1\r\n\tprivate parseTriangleGeometrieBlock(blockID:number):void\r\n\t{\r\n\r\n\t\tvar geom:Geometry = new Geometry();\r\n\r\n\t\t// Read name and sub count\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_subs:number = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t// Read optional properties\r\n\t\tvar props:AWDProperties = this.parseProperties({1:this._geoNrType, 2:this._geoNrType});\r\n\t\tvar geoScaleU:number = props.get(1, 1);\r\n\t\tvar geoScaleV:number = props.get(2, 1);\r\n\r\n\t\t// Loop through sub meshes\r\n\t\tvar subs_parsed:number = 0;\r\n\t\twhile (subs_parsed < num_subs) {\r\n\t\t\tvar is_2d_geom:boolean=false;\r\n\t\t\tvar i:number;\r\n\t\t\tvar sm_len:number, sm_end:number;\r\n\t\t\tvar w_indices:Array<number>;\r\n\t\t\tvar weights:Array<number>;\r\n\r\n\t\t\tsm_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tsm_end = this._newBlockBytes.position + sm_len;\r\n\r\n\t\t\tvar subProps:AWDProperties = this.parseProperties({1:this._geoNrType, 2:this._geoNrType});\r\n\t\t\t// Loop through data streams\r\n\t\t\twhile (this._newBlockBytes.position < sm_end) {\r\n\t\t\t\tvar idx:number = 0;\r\n\t\t\t\tvar uv_idx:number = 0;\r\n\t\t\t\tvar n_idx:number = 0;\r\n\t\t\t\tvar t_idx:number = 0;\r\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n\t\t\t\t// Type, field type, length\r\n\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\r\n\r\n\t\t\t\tvar x:number, y:number, z:number;\r\n\r\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\r\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo);\r\n\r\n\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\r\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tindices[idx++] = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 3) {\r\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tuvs[idx++] = this.readNumber(this._accuracyGeo);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 4) {\r\n\r\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tnormals[idx++] = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 6) {\r\n\t\t\t\t\tw_indices = Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tw_indices[idx++] = this._newBlockBytes.readUnsignedShort()*3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 7) {\r\n\r\n\t\t\t\t\tweights = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tweights[idx++] = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 9 x float32\r\n\r\n\t\t\t\t\tvar x:number, y:number, z:number;\r\n\t\t\t\t\tvar type:number;\r\n\t\t\t\t\tvar r:number, g:number, b:number,a:number;\r\n\t\t\t\t\tvar u:number, v:number;\r\n\r\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\r\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\r\n\t\t\t\t\tvar tangents:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\tz = -0.1 * subs_parsed;\r\n\t\t\t\t\t\t//z = subs_parsed;\r\n\t\t\t\t\t\t//z = (blockID*0.001) + subs_parsed\r\n\t\t\t\t\t\ttype = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\tu = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\tv = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\t/* r = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\t g = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\t b = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\t a = this.readNumber(this._accuracyGeo);*/\r\n\r\n\t\t\t\t\t\t// while this is true, be parse the vertex-data, so it can be rendered as \"normal\" 3d-geometry\r\n\t\t\t\t\t\tif (true) {\r\n\t\t\t\t\t\t\tuvs[idx] = 0.0;\r\n\t\t\t\t\t\t\tnormals[idx] = 0.0;\r\n\t\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\t\tuvs[idx] = 0.0;\r\n\t\t\t\t\t\t\tnormals[idx] = 0.0;\r\n\t\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\t\tnormals[idx] = 1.0;\r\n\t\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t// parse and set-data, so the 3d-geometry contains all data (but is no longer valid for normal 3d-render)\r\n\t\t\t\t\t\t\t// away3d-vertexdata    |   awayJS-shape-data\r\n\t\t\t\t\t\t\t// -----------------------------------------------------------------------\r\n\t\t\t\t\t\t\t// pos.x                |   pos.x\r\n\t\t\t\t\t\t\t// pos.y                |   pos.y\r\n\t\t\t\t\t\t\t// pos.z                |   pos.z (for now we just use this as depth (set each subgeo to its own depth))\r\n\t\t\t\t\t\t\t// normal.x             |   curve-type (0:notCurved, 1: convex, 2:concave)\r\n\t\t\t\t\t\t\t// normal.y             |   alpha\r\n\t\t\t\t\t\t\t// normal.z             |   not used\r\n\t\t\t\t\t\t\t// uv.u                 |   curve.u\r\n\t\t\t\t\t\t\t// uv.v                 |   curve.v\r\n\t\t\t\t\t\t\t// tangent.x            |   red\r\n\t\t\t\t\t\t\t// tangent.y            |   green\r\n\t\t\t\t\t\t\t// tangent.z            |   blue\r\n\t\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\t\t//uv2[idx] = x;\r\n\t\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\t\t//uv2[idx] = y;\r\n\t\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t\t\tuvs[uv_idx++] = u;\r\n\t\t\t\t\t\t\tuvs[uv_idx++] = v;\r\n\t\t\t\t\t\t\tnormals[n_idx++] = type;\r\n\t\t\t\t\t\t\tnormals[n_idx++] = a;\r\n\t\t\t\t\t\t\tnormals[n_idx++] = 0;\r\n\t\t\t\t\t\t\t// trace(\"r=\" + r + \" g=\" + g + \" b=\" + b + \" a=\" + a);\r\n\t\t\t\t\t\t\ttangents[t_idx++] = r;\r\n\t\t\t\t\t\t\ttangents[t_idx++] = g;\r\n\t\t\t\t\t\t\ttangents[t_idx++] = b;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 11) {// combined vertex2D stream 5 x float32\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t}else {\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.parseUserAttributes(); // Ignore sub-mesh attributes for now\r\n\t\t\tvar sub_geom:TriangleSubGeometry;\r\n\t\t\tsub_geom = new TriangleSubGeometry(true);\r\n\t\t\tif (weights)\r\n\t\t\t\tsub_geom.jointsPerVertex = weights.length/(verts.length/3);\r\n\t\t\tif (normals)\r\n\t\t\t\tsub_geom.autoDeriveNormals = false;\r\n\t\t\tif (uvs)\r\n\t\t\t\tsub_geom.autoDeriveUVs = false;\r\n\t\t\tsub_geom.autoDeriveNormals = false;\r\n\t\t\t// when rendering as \"normal\" 3d-geometry, we need to autoDerive tangents\r\n\t\t\tif(true){\r\n\t\t\t\tsub_geom.autoDeriveTangents = true;\r\n\t\t\t}\r\n\t\t\tsub_geom.updateIndices(indices);\r\n\t\t\tsub_geom.updatePositions(verts);\r\n\t\t\tsub_geom.updateVertexNormals(normals);\r\n\t\t\tsub_geom.updateUVs(uvs);\r\n\t\t\tsub_geom.updateVertexTangents(null);\r\n\t\t\tsub_geom.updateJointWeights(weights);\r\n\t\t\tsub_geom.updateJointIndices(w_indices);\r\n\r\n\t\t\tvar scaleU:number = subProps.get(1, 1);\r\n\t\t\tvar scaleV:number = subProps.get(2, 1);\r\n\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\r\n\r\n\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\r\n\t\t\t\tsetSubUVs = true;\r\n\t\t\t\tscaleU = geoScaleU/scaleU;\r\n\t\t\t\tscaleV = geoScaleV/scaleV;\r\n\t\t\t}\r\n\r\n\t\t\tif (setSubUVs)\r\n\t\t\t\tsub_geom.scaleUV(scaleU, scaleV);\r\n\r\n\t\t\tgeom.addSubGeometry(sub_geom);\r\n\r\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\r\n\t\t\t// when creating meshes (and their material assignments.)\r\n\r\n\t\t\tsubs_parsed++;\r\n\t\t}\r\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\r\n\t\t\tgeom.scaleUV(geoScaleU, geoScaleV);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> geom, name);\r\n\t\tthis._blocks[blockID].data = geom;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a TriangleGeometry: Name = \" + name + \"| Id = \" + sub_geom.id);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t//Block ID = 11\r\n\tprivate parsePrimitves(blockID:number):void\r\n\t{\r\n\t\tvar name:string;\r\n\t\tvar prefab:PrefabBase;\r\n\t\tvar primType:number;\r\n\t\tvar subs_parsed:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar bsm:Matrix3D;\r\n\r\n\t\t// Read name and sub count\r\n\t\tname = this.parseVarStr();\r\n\t\tprimType = this._newBlockBytes.readUnsignedByte();\r\n\t\tprops = this.parseProperties({101:this._geoNrType, 102:this._geoNrType, 103:this._geoNrType, 110:this._geoNrType, 111:this._geoNrType, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 303:AWDParser.UINT16, 701:AWDParser.BOOL, 702:AWDParser.BOOL, 703:AWDParser.BOOL, 704:AWDParser.BOOL});\r\n\r\n\t\tvar primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"]\r\n\r\n\t\tswitch (primType) {\r\n\t\t\t// to do, not all properties are set on all primitives\r\n\r\n\t\t\tcase 1:\r\n\t\t\t\tprefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tprefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\tprefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\r\n\t\t\t\tif (!props.get(701, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\r\n\t\t\t\tif (!props.get(702, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\r\n\t\t\t\tif (!props.get(703, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 5:\r\n\t\t\t\tprefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 7:\r\n\t\t\t\tprefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tprefab = new PrefabBase();\r\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\r\n\t\t\t//geom.subGeometries;\r\n\t\t\t//geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\r\n\t\t}\r\n\r\n\t\tthis.parseUserAttributes();\r\n\t\tprefab.name = name;\r\n\t\tthis._pFinalizeAsset(prefab, name);\r\n\t\tthis._blocks[blockID].data = prefab;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tif ((primType < 0) || (primType > 7)) {\r\n\t\t\t\tprimType = 0;\r\n\t\t\t}\r\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + name + \"| type = \" + primitiveTypes[primType]);\r\n\t\t}\r\n\t}\r\n\r\n\t// Block ID = 22\r\n\tprivate parseContainer(blockID:number):void\r\n\t{\r\n\t\tvar name:string;\r\n\t\tvar par_id:number;\r\n\t\tvar mtx:Matrix3D;\r\n\t\tvar ctr:DisplayObjectContainer;\r\n\t\tvar parent:DisplayObjectContainer;\r\n\r\n\t\tpar_id = this._newBlockBytes.readUnsignedInt();\r\n\t\tmtx = this.parseMatrix3D();\r\n\t\tname = this.parseVarStr();\r\n\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tctr = new DisplayObjectContainer();\r\n\t\tctr.transform.matrix3D = mtx;\r\n\r\n\t\tvar returnedArray:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH]);\r\n\r\n\t\tif (returnedArray[0]) {\r\n\t\t\tvar obj:DisplayObject = (<DisplayObjectContainer> returnedArray[1]).addChild(ctr);\r\n\t\t\tparentName = (<DisplayObjectContainer> returnedArray[1]).name;\r\n\t\t} else if (par_id > 0) {\r\n\t\t\tthis._blocks[ blockID ].addError(\"Could not find a parent for this ObjectContainer3D\");\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(ctr);\r\n\t\t}\r\n\r\n\t\t// in AWD version 2.1 we read the Container properties\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tvar props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\r\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t}\r\n\t\t// in other versions we do not read the Container properties\r\n\t\telse {\r\n\t\t\tthis.parseProperties(null);\r\n\t\t}\r\n\r\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\r\n\t\tctr.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> ctr, name);\r\n\t\tthis._blocks[blockID].data = ctr;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + name + \"' | Parent-Name = \" + parentName);\r\n\t\t}\r\n\t}\r\n\r\n\t// Block ID = 23\r\n\tprivate parseMeshInstance(blockID:number):void\r\n\t{\r\n\t\tvar num_materials:number;\r\n\t\tvar materials_parsed:number;\r\n\t\tvar parent:DisplayObjectContainer;\r\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar geom:Geometry;\r\n\t\tvar returnedArrayGeometry:Array<any> = this.getAssetByID(data_id, [AssetType.GEOMETRY])\r\n\r\n\t\tif (returnedArrayGeometry[0]) {\r\n\t\t\tgeom = <Geometry> returnedArrayGeometry[1];\r\n\t\t} else {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Geometry for this Mesh. A empty Geometry is created!\");\r\n\t\t\tgeom = new Geometry();\r\n\t\t}\r\n\r\n\t\tthis._blocks[blockID].geoID = data_id;\r\n\t\tvar materials:Array<MaterialBase> = new Array<MaterialBase>();\r\n\t\tnum_materials = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar materialNames:Array<string> = new Array<string>();\r\n\t\tmaterials_parsed = 0;\r\n\r\n\t\tvar returnedArrayMaterial:Array<any>;\r\n\r\n\t\twhile (materials_parsed < num_materials) {\r\n\t\t\tvar mat_id:number;\r\n\t\t\tmat_id = this._newBlockBytes.readUnsignedInt();\r\n\t\t\treturnedArrayMaterial = this.getAssetByID(mat_id, [AssetType.MATERIAL])\r\n\t\t\tif ((!returnedArrayMaterial[0]) && (mat_id > 0)) {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find Material Nr \" + materials_parsed + \" (ID = \" + mat_id + \" ) for this Mesh\");\r\n\t\t\t}\r\n\r\n\t\t\tvar m:MaterialBase = <MaterialBase> returnedArrayMaterial[1];\r\n\r\n\t\t\tmaterials.push(m);\r\n\t\t\tmaterialNames.push(m.name);\r\n\r\n\t\t\tmaterials_parsed++;\r\n\t\t}\r\n\r\n\t\tvar mesh:Mesh = new Mesh(geom, null);\r\n\t\tmesh.transform.matrix3D = mtx;\r\n\r\n\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH])\r\n\r\n\t\tif (returnedArrayParent[0]) {\r\n\t\t\tvar objC:DisplayObjectContainer = <DisplayObjectContainer> returnedArrayParent[1];\r\n\t\t\tobjC.addChild(mesh);\r\n\t\t\tparentName = objC.name;\r\n\t\t} else if (par_id > 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Mesh\");\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\r\n\t\t}\r\n\r\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\r\n\t\t\tmesh.material = materials[0];\r\n\t\t} else if (materials.length > 1) {\r\n\t\t\tvar i:number;\r\n\r\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\r\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\r\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\r\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tvar props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8, 5:AWDParser.BOOL});\r\n\t\t\tmesh.pivot = new Vector3D(<number>props.get(1, 0), <number>props.get(2, 0), <number> props.get(3, 0));\r\n\t\t\tmesh.castsShadows = props.get(5, true);\r\n\t\t} else {\r\n\t\t\tthis.parseProperties(null);\r\n\t\t}\r\n\r\n\t\tmesh.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\r\n\t\tthis._blocks[blockID].data = mesh;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a Mesh: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//Block ID 31\r\n\tprivate parseSkyboxInstance(blockID:number):void\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar cubeTexAddr:number = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\tvar returnedArrayCubeTex:Array<any> = this.getAssetByID(cubeTexAddr, [AssetType.TEXTURE], \"CubeTexture\");\r\n\t\tif ((!returnedArrayCubeTex[0]) && (cubeTexAddr != 0))\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find the Cubetexture (ID = \" + cubeTexAddr + \" ) for this Skybox\");\r\n\t\tvar asset:Skybox = new Skybox(<ImageCubeTexture> returnedArrayCubeTex[1]);\r\n\r\n\t\tthis.parseProperties(null)\r\n\t\tasset.extra = this.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(asset, name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + name + \"' | CubeTexture-Name = \" + (<ImageCubeTexture> returnedArrayCubeTex[1]).name);\r\n\r\n\t}\r\n\r\n\t//Block ID = 41\r\n\tprivate parseLight(blockID:number):void\r\n\t{\r\n\t\tvar light:LightBase;\r\n\t\tvar newShadowMapper:ShadowMapperBase;\r\n\r\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar lightType:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar props:AWDProperties = this.parseProperties({1:this._propsNrType, 2:this._propsNrType, 3:AWDParser.COLOR, 4:this._propsNrType, 5:this._propsNrType, 6:AWDParser.BOOL, 7:AWDParser.COLOR, 8:this._propsNrType, 9:AWDParser.UINT8, 10:AWDParser.UINT8, 11:this._propsNrType, 12:AWDParser.UINT16, 21:this._matrixNrType, 22:this._matrixNrType, 23:this._matrixNrType});\r\n\t\tvar shadowMapperType:number = props.get(9, 0);\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\r\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\r\n\r\n\t\tif (lightType == 1) {\r\n\t\t\tlight = new PointLight();\r\n\r\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\r\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 4) {\r\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.transform.matrix3D = mtx;\r\n\r\n\t\t}\r\n\r\n\t\tif (lightType == 2) {\r\n\r\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 1) {\r\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//if (shadowMapperType == 2)\r\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\r\n\t\t\t\t//if (shadowMapperType == 3)\r\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tlight.color = props.get(3, 0xffffff);\r\n\t\tlight.specular = props.get(4, 1.0);\r\n\t\tlight.diffuse = props.get(5, 1.0);\r\n\t\tlight.ambientColor = props.get(7, 0xffffff);\r\n\t\tlight.ambient = props.get(8, 0.0);\r\n\r\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\r\n\t\tif (newShadowMapper) {\r\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\r\n\t\t\t\tif (props.get(10, 1) != 1) {\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 1)];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (props.get(10, 2) != 2) {\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 2)];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.shadowMapper = newShadowMapper;\r\n\t\t\tlight.castsShadows = true;\r\n\t\t}\r\n\r\n\t\tif (par_id != 0) {\r\n\r\n\t\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH])\r\n\r\n\t\t\tif (returnedArrayParent[0]) {\r\n\t\t\t\t(<DisplayObjectContainer> returnedArrayParent[1]).addChild(light);\r\n\t\t\t\tparentName = (<DisplayObjectContainer> returnedArrayParent[1]).name;\r\n\t\t\t} else {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Light\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(light);\r\n\t\t}\r\n\r\n\t\tthis.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(< IAsset> light, name);\r\n\r\n\t\tthis._blocks[blockID].data = light;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\r\n\r\n\t}\r\n\r\n\t//Block ID = 43\r\n\tprivate parseCamera(blockID:number):void\r\n\t{\r\n\r\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar projection:ProjectionBase;\r\n\r\n\t\tthis._newBlockBytes.readUnsignedByte(); //set as active camera\r\n\t\tthis._newBlockBytes.readShort(); //lengthof lenses - not used yet\r\n\r\n\t\tvar projectiontype:number = this._newBlockBytes.readShort();\r\n\t\tvar props:AWDProperties = this.parseProperties({101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 104:this._propsNrType});\r\n\r\n\t\tswitch (projectiontype) {\r\n\t\t\tcase 5001:\r\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5002:\r\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5003:\r\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar camera:Camera = new Camera(projection);\r\n\t\tcamera.transform.matrix3D = mtx;\r\n\r\n\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH])\r\n\r\n\t\tif (returnedArrayParent[0]) {\r\n\r\n\t\t\tvar objC:DisplayObjectContainer = <DisplayObjectContainer> returnedArrayParent[1];\r\n\t\t\tobjC.addChild(camera);\r\n\r\n\t\t\tparentName = objC.name;\r\n\r\n\t\t} else if (par_id > 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Camera\");\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(camera);\r\n\t\t}\r\n\r\n\t\tcamera.name = name;\r\n\t\tprops = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\r\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\tcamera.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(camera, name);\r\n\r\n\t\tthis._blocks[blockID].data = camera\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//Block ID = 51\r\n\tprivate parseLightPicker(blockID:number):void\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar numLights:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\r\n\t\tvar k:number = 0;\r\n\t\tvar lightID:number = 0;\r\n\r\n\t\tvar returnedArrayLight:Array<any>;\r\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\r\n\r\n\t\tfor (k = 0; k < numLights; k++) {\r\n\t\t\tlightID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\treturnedArrayLight = this.getAssetByID(lightID, [AssetType.LIGHT])\r\n\r\n\t\t\tif (returnedArrayLight[0]) {\r\n\t\t\t\tlightsArray.push(<LightBase> returnedArrayLight[1]);\r\n\t\t\t\tlightsArrayNames.push(( <LightBase> returnedArrayLight[1]).name);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find a Light Nr \" + k + \" (ID = \" + lightID + \" ) for this LightPicker\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lightsArray.length == 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not create this LightPicker, cause no Light was found.\");\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\treturn; //return without any more parsing for this block\r\n\t\t}\r\n\r\n\t\tvar lightPick:LightPickerBase = new StaticLightPicker(lightsArray);\r\n\t\tlightPick.name = name;\r\n\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> lightPick, name);\r\n\r\n\t\tthis._blocks[blockID].data = lightPick\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + name + \"' | Texture-Name = \" + lightsArrayNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 81\r\n\tprivate parseMaterial(blockID:number):void\r\n\t{\r\n\t\t// TODO: not used\r\n\t\t////blockLength = block.len;\r\n\t\tvar name:string;\r\n\t\tvar type:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar attributes:Object;\r\n\t\tvar finalize:boolean;\r\n\t\tvar num_methods:number;\r\n\t\tvar methods_parsed:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tname = this.parseVarStr();\r\n\t\ttype = this._newBlockBytes.readUnsignedByte();\r\n\t\tnum_methods = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\t// Read material numerical properties\r\n\t\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\r\n\t\tprops = this.parseProperties({ 1:AWDParser.INT32, 2:AWDParser.BADDR, 10:this._propsNrType, 11:AWDParser.BOOL, 12:this._propsNrType, 13:AWDParser.BOOL});\r\n\r\n\t\tmethods_parsed = 0;\r\n\t\twhile (methods_parsed < num_methods) {\r\n\t\t\tvar method_type:number;\r\n\r\n\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tthis.parseProperties(null);\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\tmethods_parsed += 1;\r\n\t\t}\r\n\t\tvar debugString:string = \"\";\r\n\t\tattributes = this.parseUserAttributes();\r\n\t\tif (type === 1) { // Color material\r\n\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\tvar color:number;\r\n\t\t\tcolor = props.get(1, 0xffffff);\r\n\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t} else {\r\n\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t}\r\n\t\t} else if (type === 2) {\r\n\t\t\tvar tex_addr:number = props.get(2, 0);\r\n\r\n\t\t\treturnedArray = this.getAssetByID(tex_addr, [AssetType.TEXTURE]);\r\n\r\n\t\t\tif ((!returnedArray[0]) && (tex_addr > 0))\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffsueTexture (ID = \" + tex_addr + \" ) for this Material\");\r\n\r\n\t\t\tmat = new MethodMaterial(<Texture2DBase> returnedArray[1]);\r\n\r\n\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n\t\t\t} else {\r\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmat.extra = attributes;\r\n\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\tmat.repeat = props.get(13, false);\r\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\r\n\t\tthis._blocks[blockID].data = mat;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(debugString);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t// Block ID = 81 AWD2.1\r\n\tprivate parseMaterial_v1(blockID:number):void\r\n\t{\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar normalTexture:Texture2DBase;\r\n\t\tvar specTexture:Texture2DBase;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar num_methods:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT32, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 4:AWDParser.UINT8, 5:AWDParser.BOOL, 6:AWDParser.BOOL, 7:AWDParser.BOOL, 8:AWDParser.BOOL, 9:AWDParser.UINT8, 10:this._propsNrType, 11:AWDParser.BOOL, 12:this._propsNrType, 13:AWDParser.BOOL, 15:this._propsNrType, 16:AWDParser.UINT32, 17:AWDParser.BADDR, 18:this._propsNrType, 19:this._propsNrType, 20:AWDParser.UINT32, 21:AWDParser.BADDR, 22:AWDParser.BADDR});\r\n\t\tvar spezialType:number = props.get(4, 0);\r\n\t\tvar debugString:string = \"Parsed Material \";\r\n\r\n\t\tif (spezialType >= 2) {//this is no supported material\r\n\t\t\tthis._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (type <= 2) {// Color material\r\n\t\t\tif (this.materialMode == 1)\r\n\t\t\t\tspezialType = 0;\r\n\t\t\telse if (this.materialMode == 2)\r\n\t\t\t\tspezialType = 1;\r\n\r\n\t\t\tif (spezialType < 2) {//this is SinglePass or MultiPass\r\n\r\n\t\t\t\tif (type == 1) {// Color material\r\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\r\n\r\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\r\n\r\n\t\t\t\t\t} else { //\tSinglePassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (type == 2) {// texture material\r\n\t\t\t\t\tvar tex_addr:number = props.get(2, 0);//TODO temporarily swapped so that diffuse texture goes to ambient\r\n\t\t\t\t\treturnedArray = this.getAssetByID(tex_addr, [AssetType.TEXTURE]);\r\n\r\n\t\t\t\t\tif ((!returnedArray[0]) && (tex_addr > 0))\r\n\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the AmbientTexture (ID = \" + tex_addr + \" ) for this MethodMaterial\");\r\n\r\n\t\t\t\t\tvar texture:Texture2DBase = returnedArray[1];\r\n\r\n\t\t\t\t\tmat = new MethodMaterial(texture);\r\n\r\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + texture.name;\r\n\t\t\t\t\t} else {//\tSinglePassMaterial\r\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + texture.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar diffuseTexture:Texture2DBase;\r\n\t\t\t\tvar diffuseTex_addr:number = props.get(17, 0);\r\n\r\n\t\t\t\treturnedArray = this.getAssetByID(diffuseTex_addr, [AssetType.TEXTURE]);\r\n\r\n\t\t\t\tif ((!returnedArray[0]) && (diffuseTex_addr != 0)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffuseTexture (ID = \" + diffuseTex_addr + \" ) for this MethodMaterial\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (returnedArray[0])\r\n\t\t\t\t\tdiffuseTexture = returnedArray[1];\r\n\r\n\t\t\t\tif (diffuseTexture) {\r\n\t\t\t\t\tmat.diffuseTexture = diffuseTexture;\r\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normalTex_addr:number = props.get(3, 0);\r\n\r\n\t\t\t\treturnedArray = this.getAssetByID(normalTex_addr, [AssetType.TEXTURE]);\r\n\r\n\t\t\t\tif ((!returnedArray[0]) && (normalTex_addr != 0)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the NormalTexture (ID = \" + normalTex_addr + \" ) for this MethodMaterial\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (returnedArray[0]) {\r\n\t\t\t\t\tnormalTexture = returnedArray[1];\r\n\t\t\t\t\tdebugString += \" | NormalTexture-Name = \" + normalTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar specTex_addr:number = props.get(21, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(specTex_addr, [AssetType.TEXTURE]);\r\n\r\n\t\t\t\tif ((!returnedArray[0]) && (specTex_addr != 0)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SpecularTexture (ID = \" + specTex_addr + \" ) for this MethodMaterial\");\r\n\t\t\t\t}\r\n\t\t\t\tif (returnedArray[0]) {\r\n\t\t\t\t\tspecTexture = returnedArray[1];\r\n\t\t\t\t\tdebugString += \" | SpecularTexture-Name = \" + specTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar lightPickerAddr:number = props.get(22, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(lightPickerAddr, [AssetType.LIGHT_PICKER])\r\n\r\n\t\t\t\tif ((!returnedArray[0]) && (lightPickerAddr)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightPicker (ID = \" + lightPickerAddr + \" ) for this MethodMaterial\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmat.lightPicker = <LightPickerBase> returnedArray[1];\r\n\t\t\t\t\t//debugString+=\" | Lightpicker-Name = \"+LightPickerBase(returnedArray[1]).name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmat.smooth = props.get(5, true);\r\n\t\t\t\tmat.mipmap = props.get(6, true);\r\n\t\t\t\tmat.bothSides = props.get(7, false);\r\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\r\n\t\t\t\tmat.blendMode = this.blendModeDic[props.get(9, 0)];\r\n\t\t\t\tmat.repeat = props.get(13, false);\r\n\r\n\t\t\t\tif (normalTexture)\r\n\t\t\t\t\tmat.normalMap = normalTexture;\r\n\r\n\t\t\t\tif (specTexture)\r\n\t\t\t\t\tmat.specularMap = specTexture;\r\n\r\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\t\t\tmat.ambient = props.get(15, 1.0);\r\n\t\t\t\tmat.diffuseColor = props.get(16, 0xffffff);\r\n\t\t\t\tmat.specular = props.get(18, 1.0);\r\n\t\t\t\tmat.gloss = props.get(19, 50);\r\n\t\t\t\tmat.specularColor = props.get(20, 0xffffff);\r\n\r\n\t\t\t\tvar methods_parsed:number = 0;\r\n\t\t\t\tvar targetID:number;\r\n\r\n\t\t\t\twhile (methods_parsed < num_methods) {\r\n\t\t\t\t\tvar method_type:number;\r\n\t\t\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t\t\t\tprops = this.parseProperties({\r\n\t\t\t\t\t\t1: AWDParser.BADDR,\r\n\t\t\t\t\t\t2: AWDParser.BADDR,\r\n\t\t\t\t\t\t3: AWDParser.BADDR,\r\n\t\t\t\t\t\t101: this._propsNrType,\r\n\t\t\t\t\t\t102: this._propsNrType,\r\n\t\t\t\t\t\t103: this._propsNrType,\r\n\t\t\t\t\t\t201: AWDParser.UINT32,\r\n\t\t\t\t\t\t202: AWDParser.UINT32,\r\n\t\t\t\t\t\t301: AWDParser.UINT16,\r\n\t\t\t\t\t\t302: AWDParser.UINT16,\r\n\t\t\t\t\t\t401: AWDParser.UINT8,\r\n\t\t\t\t\t\t402: AWDParser.UINT8,\r\n\t\t\t\t\t\t601: AWDParser.COLOR,\r\n\t\t\t\t\t\t602: AWDParser.COLOR,\r\n\t\t\t\t\t\t701: AWDParser.BOOL,\r\n\t\t\t\t\t\t702: AWDParser.BOOL,\r\n\t\t\t\t\t\t801: AWDParser.MTX4x4\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tswitch (method_type) {\r\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffektMethod returned\r\n\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.EFFECTS_METHOD]);\r\n\r\n\t\t\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EffectMethod (ID = \" + targetID + \" ) for this Material\");\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tmat.addEffectMethod(returnedArray[1]);\r\n\r\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<EffectMethodBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\r\n\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.SHADOW_MAP_METHOD]);\r\n\r\n\t\t\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the ShadowMethod (ID = \" + targetID + \" ) for this Material\");\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tmat.shadowMethod = returnedArray[1];\r\n\t\t\t\t\t\t\t\tdebugString += \" | ShadowMethod-Name = \" + (<ShadowMethodBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE], \"CubeTexture\");\r\n\t\t\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this EnvMapAmbientMethodMaterial\");\r\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod(returnedArray[1]);\r\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + (<CubeTextureBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\r\n\t\t\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the GradientDiffuseTexture (ID = \" + targetID + \" ) for this GradientDiffuseMethod\");\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(returnedArray[1]);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + (<Texture2DBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\r\n\t\t\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this LightMapDiffuseMethod\");\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(returnedArray[1], this.blendModeDic[props.get(401, 10)], false, mat.diffuseMethod);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + (<Texture2DBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\r\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\r\n\t\t\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SecoundNormalMap (ID = \" + targetID + \" ) for this SimpleWaterNormalMethod\");\r\n\t\t\t\t\t\t\tif (!mat.normalMap)\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find a normal Map on this Material to use with this SimpleWaterNormalMethod\");\r\n\r\n\t\t\t\t\t\t\tmat.normalMap = returnedArray[1];\r\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(mat.normalMap, returnedArray[1]);\r\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + (<Texture2DBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.parseUserAttributes();\r\n\t\t\t\t\tmethods_parsed += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (type==3){\r\n\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\r\n\t\t\tdebugString+=color;\r\n\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\tdebugString+= \"alpha = \"+props.get(10, 1.0)+\" \";\r\n\t\t\tmat.bothSides = true;\r\n\r\n\t\t}\r\n\t\tmat.extra = this.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\r\n\r\n\t\tthis._blocks[blockID].data = mat;\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(debugString);\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 82\r\n\tprivate parseTexture(blockID:number):void\r\n\t{\r\n\r\n\t\tvar asset:Texture2DBase;\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\tthis._texture_users[this._cur_block_id.toString()] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\r\n\r\n\t\t} else {\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray;\r\n\t\t\tdata = new ByteArray();\r\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t//\r\n\t\t\t// AWDParser - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\r\n\t\t\t//\r\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\r\n\t\t\t// This gives the browser time to initialise image width / height.\r\n\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\r\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Bitmap for Texture\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//Block ID = 83\r\n\tprivate parseCubeTexture(blockID:number):void\r\n\t{\r\n\t\t//blockLength = block.len;\r\n\t\tvar data_len:number;\r\n\t\tvar asset:CubeTextureBase;\r\n\t\tvar i:number;\r\n\r\n\t\tthis._cubeTextures = new Array<any>();\r\n\t\tthis._texture_users[ this._cur_block_id.toString() ] = [];\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\tthis._texture_users[this._cur_block_id.toString()] = [];\r\n\t\t\tthis._cubeTextures.push(null);\r\n\r\n\t\t\t// External\r\n\t\t\tif (type == 0) {\r\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar url:string;\r\n\t\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\r\n\r\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString() + \"#\" + i, new URLRequest(url), false, null, true);\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar data:ByteArray;\r\n\t\t\t\tdata = new ByteArray();\r\n\r\n\t\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString() + \"#\" + i, null, false, ParserUtils.byteArrayToImage(data), true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing 6 \" + textureStylesNames[type] + \" Bitmaps for CubeTexture\");\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 91\r\n\tprivate parseSharedMethodBlock(blockID:number):void\r\n\t{\r\n\t\tvar asset:EffectMethodBase;\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\t\tasset = this.parseSharedMethodList(blockID);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._blocks[blockID].data = asset;\r\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 92\r\n\tprivate parseShadowMethodBlock(blockID:number):void\r\n\t{\r\n\t\tvar type:number;\r\n\t\tvar data_len:number;\r\n\t\tvar asset:ShadowMethodBase;\r\n\t\tvar shadowLightID:number;\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tshadowLightID = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar returnedArray:Array<any> = this.getAssetByID(shadowLightID, [AssetType.LIGHT]);\r\n\r\n\t\tif (!returnedArray[0]) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find the TargetLight (ID = \" + shadowLightID + \" ) for this ShadowMethod - ShadowMethod not created\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tasset = this.parseShadowMethodList(<LightBase> returnedArray[1], blockID);\r\n\r\n\t\tif (!asset)\r\n\t\t\treturn;\r\n\r\n\t\tthis.parseUserAttributes(); // Ignore for now\r\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", ( <LightBase> returnedArray[1] ).name);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//Block ID = 253\r\n\tprivate parseCommand(blockID:number):void\r\n\t{\r\n\t\tvar hasBlocks:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\r\n\t\tvar parentObject:DisplayObjectContainer;\r\n\t\tvar targetObject:DisplayObjectContainer;\r\n\r\n\t\tvar returnedArray:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH]);\r\n\r\n\t\tif (returnedArray[0]) {\r\n\t\t\tparentObject = <DisplayObjectContainer> returnedArray[1];\r\n\t\t}\r\n\r\n\t\tvar numCommands:number = this._newBlockBytes.readShort();\r\n\t\tvar typeCommand:number = this._newBlockBytes.readShort();\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR});\r\n\r\n\t\tswitch (typeCommand) {\r\n\t\t\tcase 1:\r\n\r\n\t\t\t\tvar targetID:number = props.get(1, 0);\r\n\t\t\t\tvar returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [AssetType.LIGHT, AssetType.TEXTURE_PROJECTOR]); //for no only light is requested!!!!\r\n\r\n\t\t\t\tif ((!returnedArrayTarget[0]) && (targetID != 0)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the light (ID = \" + targetID + \" ( for this CommandBock!\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetObject = returnedArrayTarget[1];\r\n\r\n\t\t\t\tif (parentObject) {\r\n\t\t\t\t\tparentObject.addChild(targetObject);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (targetObject) {\r\n\t\t\tprops = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\r\n\r\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t\ttargetObject.extra = this.parseUserAttributes();\r\n\r\n\t\t}\r\n\t\tthis._blocks[blockID].data = targetObject\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//blockID 255\r\n\tprivate parseMetaData(blockID:number):void\r\n\t{\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT32, 2:AWDParser.AWDSTRING, 3:AWDParser.AWDSTRING, 4:AWDParser.AWDSTRING, 5:AWDParser.AWDSTRING});\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\r\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\r\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\r\n\t\t}\r\n\t}\r\n\r\n\t//blockID 254\r\n\tprivate parseNameSpace(blockID:number):void\r\n\t{\r\n\t\tvar id:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar nameSpaceString:string = this.parseVarStr();\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\r\n\t}\r\n\r\n\t//--Parser UTILS---------------------------------------------------------------------------\r\n\r\n\t// this functions reads and creates a ShadowMethodMethod\r\n\tprivate parseShadowMethodList(light:LightBase, blockID:number):ShadowMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar shadowMethod:ShadowMethodBase;\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 201:AWDParser.UINT32, 202:AWDParser.UINT32, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 401:AWDParser.UINT8, 402:AWDParser.UINT8, 601:AWDParser.COLOR, 602:AWDParser.COLOR, 701:AWDParser.BOOL, 702:AWDParser.BOOL, 801:AWDParser.MTX4x4});\r\n\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>\r\n\t\tswitch (methodType) {\r\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [AssetType.SHADOW_MAP_METHOD]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this CascadeShadowMapMethod - ShadowMethod not created\");\r\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\r\n\t\t\t//\t\t\t\t\t}\r\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 1002: //ShadowNearMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.SHADOW_MAP_METHOD]);\r\n\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this ShadowNearMethod - ShadowMethod not created\");\r\n\t\t\t\t\treturn shadowMethod;\r\n\t\t\t\t}\r\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> returnedArray[1]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1101: //ShadowFilteredMethod\r\n\r\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 1102: //ShadowDitheredMethod\r\n\r\n\r\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1103: //ShadowSoftMethod\r\n\r\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1104: //ShadowHardMethod\r\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\treturn shadowMethod;\r\n\t}\r\n\r\n\t//Block ID 101\r\n\tprivate parseSkeleton(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar skeleton:Skeleton = new Skeleton();\r\n\t\tthis.parseProperties(null); // Discard properties for now\r\n\r\n\t\tvar joints_parsed:number /*uint*/ = 0;\r\n\t\twhile (joints_parsed < num_joints) {\r\n\t\t\tvar joint:SkeletonJoint;\r\n\t\t\tvar ibp:Matrix3D;\r\n\t\t\t// Ignore joint id\r\n\t\t\tthis._newBlockBytes.readUnsignedShort();\r\n\t\t\tjoint = new SkeletonJoint();\r\n\t\t\tjoint.parentIndex = this._newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\r\n\t\t\tjoint.name = this.parseVarStr();\r\n\r\n\t\t\tibp = this.parseMatrix3D();\r\n\t\t\tjoint.inverseBindPose = ibp.rawData;\r\n\t\t\t// Ignore joint props/attributes for now\r\n\t\t\tthis.parseProperties(null);\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\tskeleton.joints.push(joint);\r\n\t\t\tjoints_parsed++;\r\n\t\t}\r\n\r\n\t\t// Discard attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(skeleton, name);\r\n\t\tthis._blocks[blockID].data = skeleton;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + skeleton.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\t//Block ID = 102\r\n\tprivate parseSkeletonPose(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tthis.parseProperties(null); // Ignore properties for now\r\n\r\n\t\tvar pose:SkeletonPose = new SkeletonPose();\r\n\r\n\t\tvar joints_parsed:number /*uint*/ = 0;\r\n\t\twhile (joints_parsed < num_joints) {\r\n\t\t\tvar joint_pose:JointPose;\r\n\t\t\tvar has_transform:number /*uint*/;\r\n\t\t\tjoint_pose = new JointPose();\r\n\t\t\thas_transform = this._newBlockBytes.readUnsignedByte();\r\n\t\t\tif (has_transform == 1) {\r\n\t\t\t\tvar mtx_data:Array<number> = this.parseMatrix43RawData();\r\n\r\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\r\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\r\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\r\n\r\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\r\n\t\t\t}\r\n\t\t\tjoints_parsed++;\r\n\t\t}\r\n\t\t// Skip attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(pose, name);\r\n\t\tthis._blocks[blockID].data = pose;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + pose.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\t//blockID 103\r\n\tprivate parseSkeletonAnimation(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar frame_dur:number;\r\n\t\tvar pose_addr:number /*uint*/;\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\r\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tthis.parseProperties(null); // Ignore properties for now\r\n\r\n\t\tvar frames_parsed:number /*uint*/ = 0;\r\n\t\tvar returnedArray:Array<any>;\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tpose_addr = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\r\n\t\t\treturnedArray = this.getAssetByID(pose_addr, [AssetType.SKELETON_POSE]);\r\n\t\t\tif (!returnedArray[0])\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SkeletonPose Frame # \" + frames_parsed + \" (ID = \" + pose_addr + \" ) for this SkeletonClipNode\");\r\n\t\t\telse\r\n\t\t\t\tclip.addFrame(<SkeletonPose> this._blocks[pose_addr].data, frame_dur);\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tif (clip.frames.length == 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not this SkeletonClipNode, because no Frames where set.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Ignore attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(clip, name);\r\n\t\tthis._blocks[blockID].data = clip;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + clip.name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\t//Block ID = 111 /  Block ID = 112\r\n\tprivate parseMeshPoseAnimation(blockID:number /*uint*/, poseOnly:boolean = false):void\r\n\t{\r\n\t\tvar num_frames:number /*uint*/ = 1;\r\n\t\tvar num_submeshes:number /*uint*/;\r\n\t\tvar frames_parsed:number /*uint*/;\r\n\t\tvar subMeshParsed:number /*uint*/;\r\n\t\tvar frame_dur:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar str_len:number;\r\n\t\tvar str_end:number;\r\n\t\tvar geometry:Geometry;\r\n\t\tvar subGeom:TriangleSubGeometry;\r\n\t\tvar idx:number /*int*/ = 0;\r\n\t\tvar clip:VertexClipNode = new VertexClipNode();\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar verts:Array<number>;\r\n\t\tvar num_Streams:number /*int*/ = 0;\r\n\t\tvar streamsParsed:number /*int*/ = 0;\r\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar thisGeo:Geometry;\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar geoAdress:number /*int*/ = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar returnedArray:Array<any> = this.getAssetByID(geoAdress, [AssetType.GEOMETRY]);\r\n\t\tif (!returnedArray[0]) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find the target-Geometry-Object \" + geoAdress + \" ) for this VertexClipNode\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar uvs:Array<Array<number>> = this.getUVForVertexAnimation(geoAdress);\r\n\t\tif (!poseOnly)\r\n\t\t\tnum_frames = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\tnum_submeshes = this._newBlockBytes.readUnsignedShort();\r\n\t\tnum_Streams = this._newBlockBytes.readUnsignedShort();\r\n\t\tstreamsParsed = 0;\r\n\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\tstreamtypes.push(this._newBlockBytes.readUnsignedShort());\r\n\t\t\tstreamsParsed++;\r\n\t\t}\r\n\t\tprops = this.parseProperties({1:AWDParser.BOOL, 2:AWDParser.BOOL});\r\n\r\n\t\tclip.looping = props.get(1, true);\r\n\t\tclip.stitchFinalFrame = props.get(2, false);\r\n\r\n\t\tframes_parsed = 0;\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tgeometry = new Geometry();\r\n\t\t\tsubMeshParsed = 0;\r\n\t\t\twhile (subMeshParsed < num_submeshes) {\r\n\t\t\t\tstreamsParsed = 0;\r\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\r\n\t\t\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\r\n\t\t\t\t\t\tindices = (<Geometry> returnedArray[1]).subGeometries[subMeshParsed].indices;\r\n\t\t\t\t\t\tverts = new Array<number>();\r\n\t\t\t\t\t\tidx = 0;\r\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo)\r\n\t\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo)\r\n\t\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo)\r\n\t\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsubGeom = new TriangleSubGeometry(true);\r\n\t\t\t\t\t\tsubGeom.updateIndices(indices);\r\n\t\t\t\t\t\tsubGeom.updatePositions(verts);\r\n\t\t\t\t\t\tsubGeom.updateUVs(uvs[subMeshParsed]);\r\n\t\t\t\t\t\tsubGeom.updateVertexNormals(null);\r\n\t\t\t\t\t\tsubGeom.updateVertexTangents(null);\r\n\t\t\t\t\t\tsubGeom.autoDeriveNormals = false;\r\n\t\t\t\t\t\tsubGeom.autoDeriveTangents = false;\r\n\t\t\t\t\t\tsubMeshParsed++;\r\n\t\t\t\t\t\tgeometry.addSubGeometry(subGeom)\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t\tstreamsParsed++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tclip.addFrame(geometry, frame_dur);\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(clip, name);\r\n\r\n\t\tthis._blocks[blockID].data = clip;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + (<Geometry> returnedArray[1]).name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\t//BlockID 113\r\n\tprivate parseVertexAnimationSet(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar poseBlockAdress:number /*int*/\r\n\t\tvar outputString:string = \"\";\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT16});\r\n\t\tvar frames_parsed:number /*uint*/ = 0;\r\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\r\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tposeBlockAdress = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar returnedArray:Array<any> = this.getAssetByID(poseBlockAdress, [AssetType.ANIMATION_NODE]);\r\n\t\t\tif (!returnedArray[0])\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the AnimationClipNode Nr \" + frames_parsed + \" ( \" + poseBlockAdress + \" ) for this AnimationSet\");\r\n\t\t\telse {\r\n\t\t\t\tif (returnedArray[1] instanceof VertexClipNode)\r\n\t\t\t\t\tvertexFrames.push(returnedArray[1])\r\n\t\t\t\tif (returnedArray[1] instanceof SkeletonClipNode)\r\n\t\t\t\t\tskeletonFrames.push(returnedArray[1])\r\n\t\t\t}\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not create this AnimationSet, because it contains no animations\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\tif (vertexFrames.length > 0) {\r\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\r\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\r\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\r\n\t\t\tthis._pFinalizeAsset(newVertexAnimationSet, name);\r\n\t\t\tthis._blocks[blockID].data = newVertexAnimationSet;\r\n\t\t\tif (this._debug)\r\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames.toString());\r\n\r\n\t\t} else if (skeletonFrames.length > 0) {\r\n\t\t\treturnedArray = this.getAssetByID(poseBlockAdress, [AssetType.ANIMATION_NODE]);\r\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\r\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\r\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\r\n\t\t\tthis._pFinalizeAsset(newSkeletonAnimationSet, name);\r\n\t\t\tthis._blocks[blockID].data = newSkeletonAnimationSet;\r\n\t\t\tif (this._debug)\r\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames.toString());\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t//BlockID 122\r\n\tprivate parseAnimatorSet(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar targetMesh:Mesh;\r\n\t\tvar animSetBlockAdress:number /*int*/\r\n\t\tvar targetAnimationSet:AnimationSetBase;\r\n\t\tvar outputString:string = \"\";\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar type:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR});\r\n\r\n\t\tanimSetBlockAdress = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar targetMeshLength:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar meshAdresses:Array<number> /*uint*/ = new Array<number>() /*uint*/;\r\n\t\tfor (var i:number /*int*/ = 0; i < targetMeshLength; i++)\r\n\t\t\tmeshAdresses.push(this._newBlockBytes.readUnsignedInt());\r\n\r\n\t\tvar activeState:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar autoplay:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis.parseUserAttributes();\r\n\r\n\t\tvar returnedArray:Array<any>;\r\n\t\tvar targetMeshes:Array<Mesh> = new Array<Mesh>();\r\n\r\n\t\tfor (i = 0; i < meshAdresses.length; i++) {\r\n\t\t\treturnedArray = this.getAssetByID(meshAdresses[i], [AssetType.MESH]);\r\n\t\t\tif (returnedArray[0])\r\n\t\t\t\ttargetMeshes.push(<Mesh> returnedArray[1]);\r\n\t\t}\r\n\t\treturnedArray = this.getAssetByID(animSetBlockAdress, [AssetType.ANIMATION_SET]);\r\n\t\tif (!returnedArray[0]) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find the AnimationSet ( \" + animSetBlockAdress + \" ) for this Animator\");;\r\n\t\t\treturn\r\n\t\t}\r\n\t\ttargetAnimationSet = <AnimationSetBase> returnedArray[1];\r\n\t\tvar thisAnimator:AnimatorBase;\r\n\t\tif (type == 1) {\r\n\r\n\t\t\treturnedArray = this.getAssetByID(props.get(1, 0), [AssetType.SKELETON]);\r\n\t\t\tif (!returnedArray[0]) {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Skeleton ( \" + props.get(1, 0) + \" ) for this Animator\");\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, <Skeleton> returnedArray[1]);\r\n\r\n\t\t} else if (type == 2)\r\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\r\n\r\n\t\tthis._pFinalizeAsset(thisAnimator, name);\r\n\t\tthis._blocks[blockID].data = thisAnimator;\r\n\t\tfor (i = 0; i < targetMeshes.length; i++) {\r\n\t\t\tif (type == 1)\r\n\t\t\t\ttargetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\r\n\t\t\tif (type == 2)\r\n\t\t\t\ttargetMeshes[i].animator = (<VertexAnimator> thisAnimator);\r\n\r\n\t\t}\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + name);\r\n\t}\r\n\r\n\t// this functions reads and creates a EffectMethod\r\n\tprivate parseSharedMethodList(blockID:number):EffectMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar effectMethodReturn:EffectMethodBase;\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 104:this._propsNrType, 105:this._propsNrType, 106:this._propsNrType, 107:this._propsNrType, 201:AWDParser.UINT32, 202:AWDParser.UINT32, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 401:AWDParser.UINT8, 402:AWDParser.UINT8, 601:AWDParser.COLOR, 602:AWDParser.COLOR, 701:AWDParser.BOOL, 702:AWDParser.BOOL});\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tswitch (methodType) {\r\n\t\t\t// Effect Methods\r\n\t\t\tcase 401: //ColorMatrix\r\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 402: //ColorTransform\r\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\r\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\r\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 403: //EnvMap\r\n\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\tconsole.log('ENV MAP', targetID);\r\n\r\n\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [ AssetType.TEXTURE ], \"CubeTexture\");\r\n\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this EnvMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(<CubeTextureBase> returnedArray[1], <number> props.get(101, 1));\r\n\t\t\t\ttargetID = props.get(2, 0);\r\n\t\t\t\tif (targetID > 0) {\r\n\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\r\n\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Mask-texture (ID = \" + targetID + \" ) for this EnvMapMethod\");\r\n\r\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\r\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <Texture2DBase> returnedArray[1];\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 404: //LightMapMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\r\n\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this LightMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(returnedArray[1], this.blendModeDic[props.get(401, 10)]); //usesecondaryUV not set\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [AssetType.TEXTURE_PROJECTOR]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this ProjectiveTextureMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 406: //RimLightMethod\r\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\r\n\t\t\t\tbreak;\r\n\t\t\tcase 407: //AlphaMaskMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\r\n\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Alpha-texture (ID = \" + targetID + \" ) for this AlphaMaskMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(returnedArray[1], props.get(701, false));\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [AssetType.TEXTURE], \"CubeTexture\");\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this RefractionEnvMapMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\r\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 410: //FresnelEnvMapMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE], \"CubeTexture\");\r\n\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this FresnelEnvMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(returnedArray[1], props.get(101, 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 411: //FogMethod\r\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\treturn effectMethodReturn;\r\n\r\n\t}\r\n\r\n\tprivate parseUserAttributes():Object\r\n\t{\r\n\t\tvar attributes:Object;\r\n\t\tvar list_len:number;\r\n\t\tvar attibuteCnt:number;\r\n\r\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\tif (list_len > 0) {\r\n\r\n\t\t\tvar list_end:number;\r\n\r\n\t\t\tattributes = {};\r\n\r\n\t\t\tlist_end = this._newBlockBytes.position + list_len;\r\n\r\n\t\t\twhile (this._newBlockBytes.position < list_end) {\r\n\t\t\t\tvar ns_id:number;\r\n\t\t\t\tvar attr_key:string;\r\n\t\t\t\tvar attr_type:number;\r\n\t\t\t\tvar attr_len:number;\r\n\t\t\t\tvar attr_val:any;\r\n\r\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\r\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_key = this.parseVarStr();\r\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn attributes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (attr_type) {\r\n\t\t\t\t\tcase AWDParser.AWDSTRING:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.BOOL:\r\n\t\t\t\t\tcase AWDParser.UINT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.UINT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.UINT32:\r\n\t\t\t\t\tcase AWDParser.BADDR:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.FLOAT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.FLOAT64:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\r\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattributes[attr_key] = attr_val;\r\n\t\t\t\tattibuteCnt += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\t}\r\n\r\n\tprivate parseProperties(expected:Object):AWDProperties\r\n\t{\r\n\t\tvar list_end:number;\r\n\t\tvar list_len:number;\r\n\t\tvar propertyCnt:number = 0;\r\n\t\tvar props:AWDProperties = new AWDProperties();\r\n\r\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\r\n\t\tlist_end = this._newBlockBytes.position + list_len;\r\n\r\n\t\tif (expected) {\r\n\r\n\t\t\twhile (this._newBlockBytes.position < list_end) {\r\n\t\t\t\tvar len:number;\r\n\t\t\t\tvar key:number;\r\n\t\t\t\tvar type:number;\r\n\r\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn props;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (expected.hasOwnProperty(key.toString())) {\r\n\t\t\t\t\ttype = expected[key];\r\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newBlockBytes.position += len;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpropertyCnt += 1;\r\n\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t}\r\n\r\n\t\treturn props;\r\n\r\n\t}\r\n\r\n\tprivate parseAttrValue(type:number, len:number):any\r\n\t{\r\n\t\tvar elem_len:number;\r\n\t\tvar read_func:Function;\r\n\r\n\t\tswitch (type) {\r\n\r\n\t\t\tcase AWDParser.BOOL:\r\n\t\t\tcase AWDParser.INT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.INT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.INT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT32:\r\n\t\t\tcase AWDParser.COLOR:\r\n\t\t\tcase AWDParser.BADDR:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.FLOAT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.FLOAT64:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.AWDSTRING:\r\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\r\n\t\t\tcase AWDParser.VECTOR2x1:\r\n\t\t\tcase AWDParser.VECTOR3x1:\r\n\t\t\tcase AWDParser.VECTOR4x1:\r\n\t\t\tcase AWDParser.MTX3x2:\r\n\t\t\tcase AWDParser.MTX3x3:\r\n\t\t\tcase AWDParser.MTX4x3:\r\n\t\t\tcase AWDParser.MTX4x4:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif (elem_len < len) {\r\n\t\t\tvar list:Array<any> = [];\r\n\t\t\tvar num_read:number = 0;\r\n\t\t\tvar num_elems:number = len/elem_len;\r\n\r\n\t\t\twhile (num_read < num_elems) {\r\n\t\t\t\tlist.push(read_func.apply(this._newBlockBytes)); // list.push(read_func());\r\n\t\t\t\tnum_read++;\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\t\t} else {\r\n\r\n\t\t\tvar val:any = read_func.apply(this._newBlockBytes);//read_func();\r\n\t\t\treturn val;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseHeader():void\r\n\t{\r\n\t\tvar flags:number;\r\n\t\tvar body_len:number;\r\n\r\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\r\n\r\n\t\tthis._version[0] = this._byteData.readUnsignedByte();\r\n\t\tthis._version[1] = this._byteData.readUnsignedByte();\r\n\r\n\t\tflags = this._byteData.readUnsignedShort(); // Parse bit flags\r\n\r\n\t\tthis._streaming = BitFlags.test(flags, BitFlags.FLAG1);\r\n\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG2);\r\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG3);\r\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG4);\r\n\t\t}\r\n\r\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\r\n\r\n\t\t// set storagePrecision types\r\n\t\tthis._geoNrType = AWDParser.FLOAT32;\r\n\r\n\t\tif (this._accuracyGeo) {\r\n\t\t\tthis._geoNrType = AWDParser.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._matrixNrType = AWDParser.FLOAT32;\r\n\r\n\t\tif (this._accuracyMatrix) {\r\n\t\t\tthis._matrixNrType = AWDParser.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._propsNrType = AWDParser.FLOAT32;\r\n\r\n\t\tif (this._accuracyProps) {\r\n\t\t\tthis._propsNrType = AWDParser.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._version[0] + \" - \" + this._version[1]);\r\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\r\n\t\t}\r\n\r\n\t\t// Check file integrity\r\n\t\tbody_len = this._byteData.readUnsignedInt();\r\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\r\n\t\t}\r\n\r\n\t}\r\n\t// Helper - functions\r\n\tprivate getUVForVertexAnimation(meshID:number /*uint*/):Array<Array<number>>\r\n\t{\r\n\t\tif (this._blocks[meshID].data instanceof Mesh)\r\n\t\t\tmeshID = this._blocks[meshID].geoID;\r\n\t\tif (this._blocks[meshID].uvsForVertexAnimation)\r\n\t\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\t\tvar geometry:Geometry = (<Geometry> this._blocks[meshID].data);\r\n\t\tvar geoCnt:number /*int*/ = 0;\r\n\t\tvar ud:Array<number>;\r\n\t\tvar uStride:number /*uint*/;\r\n\t\tvar uOffs:number /*uint*/;\r\n\t\tvar numPoints:number /*uint*/;\r\n\t\tvar i:number /*int*/;\r\n\t\tvar newUvs:Array<number>;\r\n\t\tvar sub_geom:TriangleSubGeometry;\r\n\t\tthis._blocks[meshID].uvsForVertexAnimation = new Array<Array<number>>();\r\n\t\twhile (geoCnt < geometry.subGeometries.length) {\r\n\t\t\tnewUvs = new Array<number>();\r\n\t\t\tsub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\r\n\t\t\tnumPoints = sub_geom.numVertices;\r\n\t\t\tud = sub_geom.uvs;\r\n\t\t\tuStride = sub_geom.getStride(TriangleSubGeometry.UV_DATA);\r\n\t\t\tuOffs = sub_geom.getOffset(TriangleSubGeometry.UV_DATA);\r\n\t\t\tfor (i = 0; i < numPoints; i++) {\r\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 0]);\r\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 1]);\r\n\t\t\t}\r\n\t\t\tthis._blocks[meshID].uvsForVertexAnimation.push(newUvs);\r\n\t\t\tgeoCnt++;\r\n\t\t}\r\n\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\t}\r\n\r\n\tprivate parseVarStr():string\r\n\t{\r\n\r\n\t\tvar len:number = this._newBlockBytes.readUnsignedShort();\r\n\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\t}\r\n\r\n\tprivate getAssetByID(assetID:number, assetTypesToGet:Array<string>, extraTypeInfo:string = \"SingleTexture\"):Array<any>\r\n\t{\r\n\t\tvar returnArray:Array<any> = new Array<any>();\r\n\t\tvar typeCnt:number = 0;\r\n\t\tif (assetID > 0) {\r\n\t\t\tif (this._blocks[assetID]) {\r\n\t\t\t\tif (this._blocks[assetID].data) {\r\n\t\t\t\t\twhile (typeCnt < assetTypesToGet.length) {\r\n\r\n\t\t\t\t\t\tvar iasset:IAsset = <IAsset> this._blocks[assetID].data;\r\n\r\n\t\t\t\t\t\tif (iasset.assetType == assetTypesToGet[typeCnt]) {\r\n\t\t\t\t\t\t\t//if the right assetType was found\r\n\t\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == AssetType.TEXTURE) && (extraTypeInfo == \"CubeTexture\")) {\r\n\t\t\t\t\t\t\t\tif (this._blocks[assetID].data instanceof ImageCubeTexture) {\r\n\t\t\t\t\t\t\t\t\treturnArray.push(true);\r\n\t\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\r\n\t\t\t\t\t\t\t\t\treturn returnArray;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == AssetType.TEXTURE) && (extraTypeInfo == \"SingleTexture\")) {\r\n\t\t\t\t\t\t\t\tif (this._blocks[assetID].data instanceof ImageTexture) {\r\n\t\t\t\t\t\t\t\t\treturnArray.push(true);\r\n\t\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\r\n\t\t\t\t\t\t\t\t\treturn returnArray;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturnArray.push(true);\r\n\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\r\n\t\t\t\t\t\t\t\treturn returnArray;\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//if ((assetTypesToGet[typeCnt] == AssetType.GEOMETRY) && (IAsset(_blocks[assetID].data).assetType == AssetType.MESH)) {\r\n\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == AssetType.GEOMETRY) && (iasset.assetType == AssetType.MESH)) {\r\n\r\n\t\t\t\t\t\t\tvar mesh:Mesh = <Mesh> this._blocks[assetID].data\r\n\r\n\t\t\t\t\t\t\treturnArray.push(true);\r\n\t\t\t\t\t\t\treturnArray.push(mesh.geometry);\r\n\t\t\t\t\t\t\treturn returnArray;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttypeCnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// if the has not returned anything yet, the asset is not found, or the found asset is not the right type.\r\n\t\treturnArray.push(false);\r\n\t\treturnArray.push(this.getDefaultAsset(assetTypesToGet[0], extraTypeInfo));\r\n\t\treturn returnArray;\r\n\t}\r\n\r\n\tprivate getDefaultAsset(assetType:string, extraTypeInfo:string):IAsset\r\n\t{\r\n\t\tswitch (true) {\r\n\t\t\tcase (assetType == AssetType.TEXTURE):\r\n\t\t\t\tif (extraTypeInfo == \"CubeTexture\")\r\n\t\t\t\t\treturn this.getDefaultCubeTexture();\r\n\t\t\t\tif (extraTypeInfo == \"SingleTexture\")\r\n\t\t\t\t\treturn DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\tbreak;\r\n\t\t\tcase (assetType == AssetType.MATERIAL):\r\n\t\t\t\treturn DefaultMaterialManager.getDefaultMaterial();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate getDefaultCubeTexture():IAsset\r\n\t{\r\n\t\tif (!this._defaultCubeTexture) {\r\n\t\t\tvar defaultBitmap:BitmapData = DefaultMaterialManager.createCheckeredBitmapData();\r\n\r\n\t\t\tthis._defaultCubeTexture = new BitmapCubeTexture(defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap);\r\n\t\t\tthis._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t\t}\r\n\r\n\t\treturn <IAsset> this._defaultCubeTexture;\r\n\t}\r\n\r\n\tprivate readNumber(precision:boolean = false):number\r\n\t{\r\n\t\tif (precision)\r\n\t\t\treturn this._newBlockBytes.readDouble();\r\n\t\treturn this._newBlockBytes.readFloat();\r\n\r\n\t}\r\n\r\n\tprivate parseMatrix3D():Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\r\n\t}\r\n\r\n\tprivate parseMatrix32RawData():Array<number>\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n\tprivate parseMatrix43RawData():Array<number>\r\n\t{\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(16);\r\n\r\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[3] = 0.0;\r\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[7] = 0.0;\r\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[11] = 0.0;\r\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[15] = 1.0;\r\n\r\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\r\n\r\n\t\tif (isNaN(mtx_raw[0])) {\r\n\t\t\tmtx_raw[0] = 1;\r\n\t\t\tmtx_raw[1] = 0;\r\n\t\t\tmtx_raw[2] = 0;\r\n\t\t\tmtx_raw[4] = 0;\r\n\t\t\tmtx_raw[5] = 1;\r\n\t\t\tmtx_raw[6] = 0;\r\n\t\t\tmtx_raw[8] = 0;\r\n\t\t\tmtx_raw[9] = 0;\r\n\t\t\tmtx_raw[10] = 1;\r\n\t\t\tmtx_raw[12] = 0;\r\n\t\t\tmtx_raw[13] = 0;\r\n\t\t\tmtx_raw[14] = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n}\r\n\r\nexport = AWDParser;\r\n\r\nclass AWDBlock\r\n{\r\n\tpublic id:number;\r\n\tpublic name:string;\r\n\tpublic data:any;\r\n\tpublic len:any;\r\n\tpublic geoID:number;\r\n\tpublic extras:Object;\r\n\tpublic bytes:ByteArray;\r\n\tpublic errorMessages:Array<string>;\r\n\tpublic uvsForVertexAnimation:Array<Array<number>>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t\tthis.id = null;\r\n\t\tthis.bytes = null;\r\n\t\tthis.errorMessages = null;\r\n\t\tthis.uvsForVertexAnimation = null;\r\n\r\n\t}\r\n\r\n\tpublic addError(errorMsg:string):void\r\n\t{\r\n\t\tif (!this.errorMessages)\r\n\t\t\tthis.errorMessages = new Array<string>();\r\n\r\n\t\tthis.errorMessages.push(errorMsg);\r\n\t}\r\n}\r\n\r\nclass AWDProperties\r\n{\r\n\tpublic set(key:number, value:any):void\r\n\t{\r\n\t\tthis[ key.toString() ] = value;\r\n\t}\r\n\r\n\tpublic get(key:number, fallback:any):any\r\n\t{\r\n\t\tif (this.hasOwnProperty(key.toString())) {\r\n\t\t\treturn this[key.toString()];\r\n\t\t} else {\r\n\t\t\treturn fallback;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass BitFlags\r\n{\r\n\tpublic static FLAG1:number = 1;\r\n\tpublic static FLAG2:number = 2;\r\n\tpublic static FLAG3:number = 4;\r\n\tpublic static FLAG4:number = 8;\r\n\tpublic static FLAG5:number = 16;\r\n\tpublic static FLAG6:number = 32;\r\n\tpublic static FLAG7:number = 64;\r\n\tpublic static FLAG8:number = 128;\r\n\tpublic static FLAG9:number = 256;\r\n\tpublic static FLAG10:number = 512;\r\n\tpublic static FLAG11:number = 1024;\r\n\tpublic static FLAG12:number = 2048;\r\n\tpublic static FLAG13:number = 4096;\r\n\tpublic static FLAG14:number = 8192;\r\n\tpublic static FLAG15:number = 16384;\r\n\tpublic static FLAG16:number = 32768;\r\n\r\n\tpublic static test(flags:number, testFlag:number):boolean\r\n\t{\r\n\t\treturn (flags & testFlag) == testFlag;\r\n\t}\r\n}\r\n","import BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-renderergl/lib/managers/DefaultMaterialManager\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\n\r\n/**\r\n * MD2Parser provides a parser for the MD2 data type.\r\n */\r\nclass MD2Parser extends ParserBase\r\n{\r\n\tpublic static FPS:number /*int*/ = 6;\r\n\r\n\tprivate _clipNodes:Object = new Object();\r\n\tprivate _byteData:ByteArray;\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _parsedHeader:boolean;\r\n\tprivate _parsedUV:boolean;\r\n\tprivate _parsedFaces:boolean;\r\n\tprivate _parsedFrames:boolean;\r\n\r\n\tprivate _ident:number /*uint*/;\r\n\tprivate _version:number /*uint*/;\r\n\tprivate _skinWidth:number /*uint*/;\r\n\tprivate _skinHeight:number /*uint*/;\r\n\t//private _frameSize : number /*uint*/;\r\n\tprivate _numSkins:number /*uint*/;\r\n\tprivate _numVertices:number /*uint*/;\r\n\tprivate _numST:number /*uint*/;\r\n\tprivate _numTris:number /*uint*/;\r\n\t//private _numGlCmds : number /*uint*/;\r\n\tprivate _numFrames:number /*uint*/;\r\n\tprivate _offsetSkins:number /*uint*/;\r\n\tprivate _offsetST:number /*uint*/;\r\n\tprivate _offsetTris:number /*uint*/;\r\n\tprivate _offsetFrames:number /*uint*/;\r\n\t//private _offsetGlCmds : number /*uint*/;\r\n\tprivate _offsetEnd:number /*uint*/;\r\n\r\n\tprivate _uvIndices:Array<number>;\r\n\tprivate _indices:Array<number> /*uint*/;\r\n\tprivate _vertIndices:Array<number>;\r\n\r\n\t// the current subgeom being built\r\n\tprivate _animationSet:VertexAnimationSet = new VertexAnimationSet();\r\n\tprivate _firstSubGeom:TriangleSubGeometry;\r\n\tprivate _uvs:Array<number>;\r\n\tprivate _finalUV:Array<number>;\r\n\r\n\tprivate _materialNames:Array<string>;\r\n\tprivate _textureType:string;\r\n\tprivate _ignoreTexturePath:boolean;\r\n\tprivate _mesh:Mesh;\r\n\tprivate _geometry:Geometry;\r\n\r\n\tprivate materialFinal:boolean = false;\r\n\tprivate geoCreated:boolean = false;\r\n\r\n\t/**\r\n\t * Creates a new MD2Parser object.\r\n\t * @param textureType The extension of the texture (e.g. jpg/png/...)\r\n\t * @param ignoreTexturePath If true, the path of the texture is ignored\r\n\t */\r\n\tconstructor(textureType:string = \"jpg\", ignoreTexturePath:boolean = true)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\t\tthis._textureType = textureType;\r\n\t\tthis._ignoreTexturePath = ignoreTexturePath;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md2\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn (ParserUtils.toString(data, 4) == 'IDP2');\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.assets.length != 1)\r\n\t\t\treturn;\r\n\r\n\t\tvar asset:Texture2DBase = <Texture2DBase> resourceDependency.assets[0];\r\n\r\n\t\tif (asset) {\r\n\t\t\tvar material:MethodMaterial = new MethodMaterial(asset);\r\n\r\n\t\t\tif (this.materialMode >= 2)\r\n\t\t\t\tmaterial.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\tmaterial.name = this._mesh.material.name;\r\n\t\t\tthis._mesh.material = material;\r\n\t\t\tthis._pFinalizeAsset(material);\r\n\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t}\r\n\t\tthis.materialFinal = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t// apply system default\r\n\t\tif (this.materialMode < 2) {\r\n\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\r\n\t\t} else {\r\n\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t}\r\n\r\n\t\t//add to the content property\r\n\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\tthis.materialFinal = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._byteData = this._pGetByteData();\r\n\t\t\tthis._startedParsing = true;\r\n\r\n\t\t\t// Reset bytearray read position (which may have been\r\n\t\t\t// moved forward by the supportsData() function.)\r\n\t\t\tthis._byteData.position = 0;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\tif (!this._parsedHeader) {\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n\r\n\t\t\t\t// TODO: Create a mesh only when encountered (if it makes sense\r\n\t\t\t\t// for this file format) and return it using this._pFinalizeAsset()\r\n\t\t\t\tthis._geometry = new Geometry();\r\n\t\t\t\tthis._mesh = new Mesh(this._geometry, null);\r\n\t\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\t\t\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//_geometry.animation = new VertexAnimation(2, VertexAnimationMode.ABSOLUTE);\r\n\t\t\t\t//_animator = new VertexAnimator(VertexAnimationState(_mesh.animationState));\r\n\r\n\t\t\t\t// Parse header and decompress body\r\n\t\t\t\tthis.parseHeader();\r\n\t\t\t\tthis.parseMaterialNames();\r\n\t\t\t} else if (!this._parsedUV) {\r\n\t\t\t\tthis.parseUV();\r\n\t\t\t} else if (!this._parsedFaces) {\r\n\t\t\t\tthis.parseFaces();\r\n\t\t\t} else if (!this._parsedFrames) {\r\n\t\t\t\tthis.parseFrames();\r\n\t\t\t} else if ((this.geoCreated) && (this.materialFinal)) {\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t} else if (!this.geoCreated) {\r\n\t\t\t\tthis.geoCreated = true;\r\n\t\t\t\t//create default subgeometry\r\n\t\t\t\tthis._geometry.addSubGeometry(this._firstSubGeom.clone());\r\n\t\t\t\t// Force name to be chosen by this._pFinalizeAsset()\r\n\t\t\t\tthis._mesh.name = \"\";\r\n\t\t\t\tif (this.materialFinal) {\r\n\t\t\t\t\t//add to the content property\r\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\t/**\r\n\t * Reads in all that MD2 Header data that is declared as private variables.\r\n\t * I know its a lot, and it looks ugly, but only way to do it in Flash\r\n\t */\r\n\tprivate parseHeader()\r\n\t{\r\n\t\tthis._ident = this._byteData.readInt();\r\n\t\tthis._version = this._byteData.readInt();\r\n\t\tthis._skinWidth = this._byteData.readInt();\r\n\t\tthis._skinHeight = this._byteData.readInt();\r\n\t\t//skip this._frameSize\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._numSkins = this._byteData.readInt();\r\n\t\tthis._numVertices = this._byteData.readInt();\r\n\t\tthis._numST = this._byteData.readInt();\r\n\t\tthis._numTris = this._byteData.readInt();\r\n\t\t//skip this._numGlCmds\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._numFrames = this._byteData.readInt();\r\n\t\tthis._offsetSkins = this._byteData.readInt();\r\n\t\tthis._offsetST = this._byteData.readInt();\r\n\t\tthis._offsetTris = this._byteData.readInt();\r\n\t\tthis._offsetFrames = this._byteData.readInt();\r\n\t\t//skip this._offsetGlCmds\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._offsetEnd = this._byteData.readInt();\r\n\r\n\t\tthis._parsedHeader = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the file names for the materials.\r\n\t */\r\n\tprivate parseMaterialNames()\r\n\t{\r\n\t\tvar url:string;\r\n\t\tvar name:string;\r\n\t\tvar extIndex:number /*int*/;\r\n\t\tvar slashIndex:number /*int*/;\r\n\t\tthis._materialNames = new Array<string>();\r\n\t\tthis._byteData.position = this._offsetSkins;\r\n\r\n\t\tvar regExp:RegExp = new RegExp(\"[^a-zA-Z0-9\\\\_\\/.]\", \"g\");\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numSkins; ++i) {\r\n\t\t\tname = this._byteData.readUTFBytes(64);\r\n\t\t\tname = name.replace(regExp, \"\");\r\n\t\t\textIndex = name.lastIndexOf(\".\");\r\n\t\t\tif (this._ignoreTexturePath)\r\n\t\t\t\tslashIndex = name.lastIndexOf(\"/\");\r\n\t\t\tif (name.toLowerCase().indexOf(\".jpg\") == -1 && name.toLowerCase().indexOf(\".png\") == -1) {\r\n\t\t\t\tname = name.substring(slashIndex + 1, extIndex);\r\n\t\t\t\turl = name + \".\" + this._textureType;\r\n\t\t\t} else {\r\n\t\t\t\turl = name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._materialNames[i] = name;\r\n\r\n\t\t\t// only support 1 skin TODO: really?\r\n\t\t\tif (this.dependencies.length == 0)\r\n\t\t\t\tthis._pAddDependency(name, new URLRequest(url));\r\n\t\t}\r\n\r\n\t\tif (this._materialNames.length > 0)\r\n\t\t\tthis._mesh.material.name = this._materialNames[0]; else\r\n\t\t\tthis.materialFinal = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the uv data for the mesh.\r\n\t */\r\n\tprivate parseUV()\r\n\t{\r\n\t\tvar j:number /*uint*/ = 0;\r\n\r\n\t\tthis._uvs = new Array<number>(this._numST*2);\r\n\t\tthis._byteData.position = this._offsetST;\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numST; i++) {\r\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinWidth;\r\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinHeight;\r\n\t\t}\r\n\r\n\t\tthis._parsedUV = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses unique indices for the faces.\r\n\t */\r\n\tprivate parseFaces()\r\n\t{\r\n\t\tvar a:number /*uint*/, b:number /*uint*/, c:number /*uint*/, ta:number /*uint*/, tb:number /*uint*/, tc:number /*uint*/;\r\n\t\tvar i:number /*uint*/;\r\n\r\n\t\tthis._vertIndices = new Array<number>();\r\n\t\tthis._uvIndices = new Array<number>();\r\n\t\tthis._indices = new Array<number>() /*uint*/;\r\n\r\n\t\tthis._byteData.position = this._offsetTris;\r\n\r\n\t\tfor (i = 0; i < this._numTris; i++) {\r\n\t\t\t//collect vertex indices\r\n\t\t\ta = this._byteData.readUnsignedShort();\r\n\t\t\tb = this._byteData.readUnsignedShort();\r\n\t\t\tc = this._byteData.readUnsignedShort();\r\n\r\n\t\t\t//collect uv indices\r\n\t\t\tta = this._byteData.readUnsignedShort();\r\n\t\t\ttb = this._byteData.readUnsignedShort();\r\n\t\t\ttc = this._byteData.readUnsignedShort();\r\n\r\n\t\t\tthis.addIndex(a, ta);\r\n\t\t\tthis.addIndex(b, tb);\r\n\t\t\tthis.addIndex(c, tc);\r\n\t\t}\r\n\r\n\t\tvar len:number /*uint*/ = this._uvIndices.length;\r\n\t\tthis._finalUV = new Array<number>(len*2);\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tthis._finalUV[i << 1] = this._uvs[this._uvIndices[i] << 1];\r\n\t\t\tthis._finalUV[(i << 1) + 1] = this._uvs[(this._uvIndices[i] << 1) + 1];\r\n\t\t}\r\n\r\n\t\tthis._parsedFaces = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a face index to the list if it doesn't exist yet, based on vertexIndex and uvIndex, and adds the\r\n\t * corresponding vertex and uv data in the correct location.\r\n\t * @param vertexIndex The original index in the vertex list.\r\n\t * @param uvIndex The original index in the uv list.\r\n\t */\r\n\tprivate addIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/)\r\n\t{\r\n\t\tvar index:number /*int*/ = this.findIndex(vertexIndex, uvIndex);\r\n\r\n\t\tif (index == -1) {\r\n\t\t\tthis._indices.push(this._vertIndices.length);\r\n\t\t\tthis._vertIndices.push(vertexIndex);\r\n\t\t\tthis._uvIndices.push(uvIndex);\r\n\t\t} else\r\n\t\t\tthis._indices.push(index);\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the final index corresponding to the original MD2's vertex and uv indices. Returns -1 if it wasn't added yet.\r\n\t * @param vertexIndex The original index in the vertex list.\r\n\t * @param uvIndex The original index in the uv list.\r\n\t * @return The index of the final mesh corresponding to the original vertex and uv index. -1 if it doesn't exist yet.\r\n\t */\r\n\tprivate findIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/):number /*int*/\r\n\t{\r\n\t\tvar len:number /*uint*/ = this._vertIndices.length;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\r\n\t\t\tif (this._vertIndices[i] == vertexIndex && this._uvIndices[i] == uvIndex)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses all the frame geometries.\r\n\t */\r\n\tprivate parseFrames()\r\n\t{\r\n\t\tvar sx:number, sy:number, sz:number;\r\n\t\tvar tx:number, ty:number, tz:number;\r\n\t\tvar geometry:Geometry;\r\n\t\tvar subGeom:TriangleSubGeometry;\r\n\t\tvar vertLen:number /*uint*/ = this._vertIndices.length;\r\n\t\tvar fvertices:Array<number>;\r\n\t\tvar tvertices:Array<number>;\r\n\t\tvar i:number /*uint*/, j:number /*int*/, k:number /*uint*/;\r\n\t\t//var ch : number /*uint*/;\r\n\t\tvar name:string = \"\";\r\n\t\tvar prevClip:VertexClipNode = null;\r\n\r\n\t\tthis._byteData.position = this._offsetFrames;\r\n\r\n\t\tfor (i = 0; i < this._numFrames; i++) {\r\n\r\n\t\t\ttvertices = new Array<number>();\r\n\t\t\tfvertices = new Array<number>(vertLen*3);\r\n\r\n\t\t\tsx = this._byteData.readFloat();\r\n\t\t\tsy = this._byteData.readFloat();\r\n\t\t\tsz = this._byteData.readFloat();\r\n\r\n\t\t\ttx = this._byteData.readFloat();\r\n\t\t\tty = this._byteData.readFloat();\r\n\t\t\ttz = this._byteData.readFloat();\r\n\r\n\t\t\tname = this.readFrameName();\r\n\r\n\t\t\t// Note, the extra data.position++ in the for loop is there\r\n\t\t\t// to skip over a byte that holds the \"vertex normal index\"\r\n\t\t\tfor (j = 0; j < this._numVertices; j++, this._byteData.position++)\r\n\t\t\t\ttvertices.push(sx*this._byteData.readUnsignedByte() + tx, sy*this._byteData.readUnsignedByte() + ty, sz*this._byteData.readUnsignedByte() + tz);\r\n\r\n\t\t\tk = 0;\r\n\t\t\tfor (j = 0; j < vertLen; j++) {\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3];\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 2];\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 1];\r\n\t\t\t}\r\n\r\n\t\t\tsubGeom = new TriangleSubGeometry(true);\r\n\r\n\t\t\tif (this._firstSubGeom == null)\r\n\t\t\t\tthis._firstSubGeom = subGeom;\r\n\r\n\t\t\tgeometry = new Geometry();\r\n\t\t\tgeometry.addSubGeometry(subGeom);\r\n\r\n\t\t\tsubGeom.updateIndices(this._indices);\r\n\t\t\tsubGeom.updatePositions(fvertices);\r\n\t\t\tsubGeom.updateUVs(this._finalUV);\r\n\t\t\tsubGeom.vertexNormals;\r\n\t\t\tsubGeom.vertexTangents;\r\n\t\t\tsubGeom.autoDeriveNormals = false;\r\n\t\t\tsubGeom.autoDeriveTangents = false;\r\n\r\n\t\t\tvar clip:VertexClipNode = this._clipNodes[name];\r\n\r\n\t\t\tif (!clip) {\r\n\t\t\t\t// If another sequence was parsed before this one, starting\r\n\t\t\t\t// a new state means the previous one is complete and can\r\n\t\t\t\t// hence be finalized.\r\n\t\t\t\tif (prevClip) {\r\n\t\t\t\t\tthis._pFinalizeAsset(prevClip);\r\n\t\t\t\t\tthis._animationSet.addAnimation(prevClip);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tclip = new VertexClipNode();\r\n\t\t\t\tclip.name = name;\r\n\t\t\t\tclip.stitchFinalFrame = true;\r\n\r\n\t\t\t\tthis._clipNodes[name] = clip;\r\n\r\n\t\t\t\tprevClip = clip;\r\n\t\t\t}\r\n\t\t\tclip.addFrame(geometry, 1000/MD2Parser.FPS);\r\n\t\t}\r\n\r\n\t\t// Finalize the last state\r\n\t\tif (prevClip) {\r\n\t\t\tthis._pFinalizeAsset(prevClip);\r\n\t\t\tthis._animationSet.addAnimation(prevClip);\r\n\t\t}\r\n\r\n\t\t// Force this._pFinalizeAsset() to decide name\r\n\t\tthis._pFinalizeAsset(this._animationSet);\r\n\r\n\t\tthis._parsedFrames = true;\r\n\t}\r\n\r\n\tprivate readFrameName():string\r\n\t{\r\n\t\tvar name:string = \"\";\r\n\t\tvar k:number /*uint*/ = 0;\r\n\t\tfor (var j:number /*uint*/ = 0; j < 16; j++) {\r\n\t\t\tvar ch:number /*uint*/ = this._byteData.readUnsignedByte();\r\n\r\n\t\t\tif (Math.floor(ch) > 0x39 && Math.floor(ch) <= 0x7A && k == 0)\r\n\t\t\t\tname += String.fromCharCode(ch);\r\n\r\n\t\t\tif (Math.floor(ch) >= 0x30 && Math.floor(ch) <= 0x39)\r\n\t\t\t\tk++;\r\n\t\t}\r\n\t\treturn name;\r\n\t}\r\n}\r\n\r\nexport = MD2Parser;","import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\n\r\n/**\r\n * MD5AnimParser provides a parser for the md5anim data type, providing an animation sequence for the md5 format.\r\n *\r\n * todo: optimize\r\n */\r\nclass MD5AnimParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\r\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\r\n\tpublic static NUM_FRAMES_TOKEN:string = \"numFrames\";\r\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\r\n\tpublic static FRAME_RATE_TOKEN:string = \"frameRate\";\r\n\tpublic static NUM_ANIMATED_COMPONENTS_TOKEN:string = \"numAnimatedComponents\";\r\n\r\n\tpublic static HIERARCHY_TOKEN:string = \"hierarchy\";\r\n\tpublic static BOUNDS_TOKEN:string = \"bounds\";\r\n\tpublic static BASE_FRAME_TOKEN:string = \"baseframe\";\r\n\tpublic static FRAME_TOKEN:string = \"frame\";\r\n\r\n\tpublic static COMMENT_TOKEN:string = \"//\";\r\n\r\n\tprivate _parseIndex:number /*int*/ = 0;\r\n\tprivate _reachedEOF:boolean;\r\n\tprivate _line:number /*int*/ = 0;\r\n\tprivate _charLineIndex:number /*int*/ = 0;\r\n\tprivate _version:number /*int*/;\r\n\tprivate _frameRate:number /*int*/;\r\n\tprivate _numFrames:number /*int*/;\r\n\tprivate _numJoints:number /*int*/;\r\n\tprivate _numAnimatedComponents:number /*int*/;\r\n\r\n\tprivate _hierarchy:Array<HierarchyData>;\r\n\tprivate _bounds:Array<BoundsData>;\r\n\tprivate _frameData:Array<FrameData>;\r\n\tprivate _baseFrameData:Array<BaseFrameData>;\r\n\r\n\tprivate _rotationQuat:Quaternion;\r\n\tprivate _clip:SkeletonClipNode;\r\n\r\n\t/**\r\n\t * Creates a new MD5AnimParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._rotationQuat = new Quaternion();\r\n\t\tvar t1:Quaternion = new Quaternion();\r\n\t\tvar t2:Quaternion = new Quaternion();\r\n\r\n\t\tt1.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\r\n\t\tt2.fromAxisAngle(Vector3D.Y_AXIS, -Math.PI*.5);\r\n\r\n\t\tthis._rotationQuat.multiply(t2, t1);\r\n\r\n\t\tif (additionalRotationAxis) {\r\n\t\t\tthis._rotationQuat.multiply(t2, t1);\r\n\t\t\tt1.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\r\n\t\t\tthis._rotationQuat.multiply(t1, this._rotationQuat);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md5anim\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar token:string;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\ttoken = this.getNextToken();\r\n\t\t\tswitch (token) {\r\n\t\t\t\tcase MD5AnimParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"\":\r\n\t\t\t\t\t// can occur at the end of a file\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.VERSION_TOKEN:\r\n\t\t\t\t\tthis._version = this.getNextInt();\r\n\t\t\t\t\tif (this._version != 10)\r\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.COMMAND_LINE_TOKEN:\r\n\t\t\t\t\tthis.parseCMD();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_FRAMES_TOKEN:\r\n\t\t\t\t\tthis._numFrames = this.getNextInt();\r\n\t\t\t\t\tthis._bounds = new Array<BoundsData>();\r\n\t\t\t\t\tthis._frameData = new Array<FrameData>();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_JOINTS_TOKEN:\r\n\t\t\t\t\tthis._numJoints = this.getNextInt();\r\n\t\t\t\t\tthis._hierarchy = new Array<HierarchyData>(this._numJoints);\r\n\t\t\t\t\tthis._baseFrameData = new Array<BaseFrameData>(this._numJoints);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.FRAME_RATE_TOKEN:\r\n\t\t\t\t\tthis._frameRate = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_ANIMATED_COMPONENTS_TOKEN:\r\n\t\t\t\t\tthis._numAnimatedComponents = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.HIERARCHY_TOKEN:\r\n\t\t\t\t\tthis.parseHierarchy();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.BOUNDS_TOKEN:\r\n\t\t\t\t\tthis.parseBounds();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.BASE_FRAME_TOKEN:\r\n\t\t\t\t\tthis.parseBaseFrame();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.FRAME_TOKEN:\r\n\t\t\t\t\tthis.parseFrame();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (!this._reachedEOF)\r\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._reachedEOF) {\r\n\t\t\t\tthis._clip = new SkeletonClipNode();\r\n\t\t\t\tthis.translateClip();\r\n\t\t\t\tthis._pFinalizeAsset(this._clip);\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts all key frame data to an SkinnedAnimationSequence.\r\n\t */\r\n\tprivate translateClip():void\r\n\t{\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numFrames; ++i)\r\n\t\t\tthis._clip.addFrame(this.translatePose(this._frameData[i]), 1000/this._frameRate);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a single key frame data to a SkeletonPose.\r\n\t * @param frameData The actual frame data.\r\n\t * @return A SkeletonPose containing the frame data's pose.\r\n\t */\r\n\tprivate translatePose(frameData:FrameData):SkeletonPose\r\n\t{\r\n\t\tvar hierarchy:HierarchyData;\r\n\t\tvar pose:JointPose;\r\n\t\tvar base:BaseFrameData;\r\n\t\tvar flags:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar translate:Vector3D = new Vector3D();\r\n\t\tvar orientation:Quaternion = new Quaternion();\r\n\t\tvar components:Array<number> = frameData.components;\r\n\t\tvar skelPose:SkeletonPose = new SkeletonPose();\r\n\t\tvar jointPoses:Array<JointPose> = skelPose.jointPoses;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numJoints; ++i) {\r\n\t\t\tj = 0;\r\n\t\t\tpose = new JointPose();\r\n\t\t\thierarchy = this._hierarchy[i];\r\n\t\t\tbase = this._baseFrameData[i];\r\n\t\t\tflags = hierarchy.flags;\r\n\t\t\ttranslate.x = base.position.x;\r\n\t\t\ttranslate.y = base.position.y;\r\n\t\t\ttranslate.z = base.position.z;\r\n\t\t\torientation.x = base.orientation.x;\r\n\t\t\torientation.y = base.orientation.y;\r\n\t\t\torientation.z = base.orientation.z;\r\n\r\n\t\t\tif (flags & 1)\r\n\t\t\t\ttranslate.x = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 2)\r\n\t\t\t\ttranslate.y = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 4)\r\n\t\t\t\ttranslate.z = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 8)\r\n\t\t\t\torientation.x = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 16)\r\n\t\t\t\torientation.y = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 32)\r\n\t\t\t\torientation.z = components[hierarchy.startIndex + (j++)];\r\n\r\n\t\t\tvar w:number = 1 - orientation.x*orientation.x - orientation.y*orientation.y - orientation.z*orientation.z;\r\n\t\t\torientation.w = w < 0? 0 : -Math.sqrt(w);\r\n\r\n\t\t\tif (hierarchy.parentIndex < 0) {\r\n\t\t\t\tpose.orientation.multiply(this._rotationQuat, orientation);\r\n\t\t\t\tpose.translation = this._rotationQuat.rotatePoint(translate);\r\n\t\t\t} else {\r\n\t\t\t\tpose.orientation.copyFrom(orientation);\r\n\t\t\t\tpose.translation.x = translate.x;\r\n\t\t\t\tpose.translation.y = translate.y;\r\n\t\t\t\tpose.translation.z = translate.z;\r\n\t\t\t}\r\n\t\t\tpose.orientation.y = -pose.orientation.y;\r\n\t\t\tpose.orientation.z = -pose.orientation.z;\r\n\t\t\tpose.translation.x = -pose.translation.x;\r\n\r\n\t\t\tjointPoses[i] = pose;\r\n\t\t}\r\n\r\n\t\treturn skelPose;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the skeleton's hierarchy data.\r\n\t */\r\n\tprivate parseHierarchy():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:HierarchyData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new HierarchyData();\r\n\t\t\tdata.name = this.parseLiteralstring();\r\n\t\t\tdata.parentIndex = this.getNextInt();\r\n\t\t\tdata.flags = this.getNextInt();\r\n\t\t\tdata.startIndex = this.getNextInt();\r\n\t\t\tthis._hierarchy[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses frame bounds.\r\n\t */\r\n\tprivate parseBounds():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:BoundsData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new BoundsData();\r\n\t\t\tdata.min = this.parseVector3D();\r\n\t\t\tdata.max = this.parseVector3D();\r\n\t\t\tthis._bounds[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the base frame.\r\n\t */\r\n\tprivate parseBaseFrame():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:BaseFrameData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new BaseFrameData();\r\n\t\t\tdata.position = this.parseVector3D();\r\n\t\t\tdata.orientation = this.parseQuaternion();\r\n\t\t\tthis._baseFrameData[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a single frame.\r\n\t */\r\n\tprivate parseFrame():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:FrameData;\r\n\t\tvar token:string;\r\n\t\tvar frameIndex:number /*int*/;\r\n\r\n\t\tframeIndex = this.getNextInt();\r\n\r\n\t\ttoken = this.getNextToken();\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new FrameData();\r\n\t\t\tdata.components = new Array<number>(this._numAnimatedComponents);\r\n\r\n\t\t\tfor (var i:number /*int*/ = 0; i < this._numAnimatedComponents; ++i)\r\n\t\t\t\tdata.components[i] = this.getNextNumber();\r\n\r\n\t\t\tthis._frameData[frameIndex] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Puts back the last read character into the data stream.\r\n\t */\r\n\tprivate putBack():void\r\n\t{\r\n\t\tthis._parseIndex--;\r\n\t\tthis._charLineIndex--;\r\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the next token in the data stream.\r\n\t */\r\n\tprivate getNextToken():string\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar token:string = \"\";\r\n\r\n\t\twhile (!this._reachedEOF) {\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\r\n\t\t\t\tif (token != MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.skipWhiteSpace();\r\n\t\t\t\tif (token != \"\")\r\n\t\t\t\t\treturn token;\r\n\t\t\t} else\r\n\t\t\t\ttoken += ch;\r\n\r\n\t\t\tif (token == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\treturn token;\r\n\t\t}\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Skips all whitespace in the data stream.\r\n\t */\r\n\tprivate skipWhiteSpace():void\r\n\t{\r\n\t\tvar ch:string;\r\n\r\n\t\tdo\r\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\r\n\r\n\t\tthis.putBack();\r\n\t}\r\n\r\n\t/**\r\n\t * Skips to the next line.\r\n\t */\r\n\tprivate ignoreLine():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\r\n\t\t\tch = this.getNextChar();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next single character in the data stream.\r\n\t */\r\n\tprivate getNextChar():string\r\n\t{\r\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\r\n\r\n\t\tif (ch == \"\\n\") {\r\n\t\t\t++this._line;\r\n\t\t\tthis._charLineIndex = 0;\r\n\t\t} else if (ch != \"\\r\")\r\n\t\t\t++this._charLineIndex;\r\n\r\n\t\tif (this._parseIndex == this._textData.length)\r\n\t\t\tthis._reachedEOF = true;\r\n\r\n\t\treturn ch;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next integer in the data stream.\r\n\t */\r\n\tprivate getNextInt():number /*int*/\r\n\t{\r\n\t\tvar i:number = parseInt(this.getNextToken());\r\n\t\tif (isNaN(i))\r\n\t\t\tthis.sendParseError(\"int type\");\r\n\t\treturn i;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next floating point number in the data stream.\r\n\t */\r\n\tprivate getNextNumber():number\r\n\t{\r\n\t\tvar f:number = parseFloat(this.getNextToken());\r\n\t\tif (isNaN(f))\r\n\t\t\tthis.sendParseError(\"float type\");\r\n\t\treturn f;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next 3d vector in the data stream.\r\n\t */\r\n\tprivate parseVector3D():Vector3D\r\n\t{\r\n\t\tvar vec:Vector3D = new Vector3D();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvec.x = this.getNextNumber();\r\n\t\tvec.y = this.getNextNumber();\r\n\t\tvec.z = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next quaternion in the data stream.\r\n\t */\r\n\tprivate parseQuaternion():Quaternion\r\n\t{\r\n\t\tvar quat:Quaternion = new Quaternion();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tquat.x = this.getNextNumber();\r\n\t\tquat.y = this.getNextNumber();\r\n\t\tquat.z = this.getNextNumber();\r\n\r\n\t\t// quat supposed to be unit length\r\n\t\tvar t:number = 1 - (quat.x*quat.x) - (quat.y*quat.y) - (quat.z*quat.z);\r\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn quat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the command line data.\r\n\t */\r\n\tprivate parseCMD():void\r\n\t{\r\n\t\t// just ignore the command line property\r\n\t\tthis.parseLiteralstring();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\r\n\t * by double quotes.\r\n\t */\r\n\tprivate parseLiteralstring():string\r\n\t{\r\n\t\tthis.skipWhiteSpace();\r\n\r\n\t\tvar ch:string = this.getNextChar();\r\n\t\tvar str:string = \"\";\r\n\r\n\t\tif (ch != \"\\\"\")\r\n\t\t\tthis.sendParseError(\"\\\"\");\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch != \"\\\"\")\r\n\t\t\t\tstr += ch;\r\n\t\t} while (ch != \"\\\"\");\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an end-of-file error when a premature end of file was encountered.\r\n\t */\r\n\tprivate sendEOFError():void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected end of file\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unexpected token was encountered.\r\n\t * @param expected The token type that was actually expected.\r\n\t */\r\n\tprivate sendParseError(expected:string):void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unknown keyword was encountered.\r\n\t */\r\n\tprivate sendUnknownKeywordError():void\r\n\t{\r\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\r\n\t}\r\n}\r\n\r\nexport = MD5AnimParser;\r\n\r\n\r\n/**\r\n *\r\n */\r\nclass BaseFrameData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic position:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientation:Quaternion;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass BoundsData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic min:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic max:Vector3D;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass FrameData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic index:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic components:Array<number>;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass HierarchyData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic name:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic parentIndex:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic flags:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic startIndex:number /*int*/;\r\n}","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\n\r\n// todo: create animation system, parse skeleton\r\n\r\n/**\r\n * MD5MeshParser provides a parser for the md5mesh data type, providing the geometry of the md5 format.\r\n *\r\n * todo: optimize\r\n */\r\nclass MD5MeshParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\r\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\r\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\r\n\tpublic static NUM_MESHES_TOKEN:string = \"numMeshes\";\r\n\tpublic static COMMENT_TOKEN:string = \"//\";\r\n\tpublic static JOINTS_TOKEN:string = \"joints\";\r\n\tpublic static MESH_TOKEN:string = \"mesh\";\r\n\r\n\tpublic static MESH_SHADER_TOKEN:string = \"shader\";\r\n\tpublic static MESH_NUM_VERTS_TOKEN:string = \"numverts\";\r\n\tpublic static MESH_VERT_TOKEN:string = \"vert\";\r\n\tpublic static MESH_NUM_TRIS_TOKEN:string = \"numtris\";\r\n\tpublic static MESH_TRI_TOKEN:string = \"tri\";\r\n\tpublic static MESH_NUM_WEIGHTS_TOKEN:string = \"numweights\";\r\n\tpublic static MESH_WEIGHT_TOKEN:string = \"weight\";\r\n\r\n\tprivate _parseIndex:number /*int*/ = 0;\r\n\tprivate _reachedEOF:boolean;\r\n\tprivate _line:number /*int*/ = 0;\r\n\tprivate _charLineIndex:number /*int*/ = 0;\r\n\tprivate _version:number /*int*/;\r\n\tprivate _numJoints:number /*int*/;\r\n\tprivate _numMeshes:number /*int*/;\r\n\r\n\tprivate _mesh:Mesh;\r\n\tprivate _shaders:Array<string>;\r\n\r\n\tprivate _maxJointCount:number /*int*/;\r\n\tprivate _meshData:Array<MeshData>;\r\n\tprivate _bindPoses:Array<Matrix3D>;\r\n\tprivate _geometry:Geometry;\r\n\r\n\tprivate _skeleton:Skeleton;\r\n\tprivate _animationSet:SkeletonAnimationSet;\r\n\r\n\tprivate _rotationQuat:Quaternion;\r\n\r\n\t/**\r\n\t * Creates a new MD5MeshParser object.\r\n\t */\r\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._rotationQuat = new Quaternion();\r\n\r\n\t\tthis._rotationQuat.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\r\n\r\n\t\tif (additionalRotationAxis) {\r\n\t\t\tvar quat:Quaternion = new Quaternion();\r\n\t\t\tquat.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\r\n\t\t\tthis._rotationQuat.multiply(this._rotationQuat, quat);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md5mesh\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar token:string;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\ttoken = this.getNextToken();\r\n\t\t\tswitch (token) {\r\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.VERSION_TOKEN:\r\n\t\t\t\t\tthis._version = this.getNextInt();\r\n\t\t\t\t\tif (this._version != 10)\r\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.COMMAND_LINE_TOKEN:\r\n\t\t\t\t\tthis.parseCMD();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.NUM_JOINTS_TOKEN:\r\n\t\t\t\t\tthis._numJoints = this.getNextInt();\r\n\t\t\t\t\tthis._bindPoses = new Array<Matrix3D>(this._numJoints);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.NUM_MESHES_TOKEN:\r\n\t\t\t\t\tthis._numMeshes = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.JOINTS_TOKEN:\r\n\t\t\t\t\tthis.parseJoints();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_TOKEN:\r\n\t\t\t\t\tthis.parseMesh();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (!this._reachedEOF)\r\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._reachedEOF) {\r\n\t\t\t\tthis.calculateMaxJointCount();\r\n\t\t\t\tthis._animationSet = new SkeletonAnimationSet(this._maxJointCount);\r\n\r\n\t\t\t\tthis._mesh = new Mesh(new Geometry(), null);\r\n\t\t\t\tthis._geometry = this._mesh.geometry;\r\n\r\n\t\t\t\tfor (var i:number /*int*/ = 0; i < this._meshData.length; ++i)\r\n\t\t\t\t\tthis._geometry.addSubGeometry(this.translateGeom(this._meshData[i].vertexData, this._meshData[i].weightData, this._meshData[i].indices));\r\n\r\n\t\t\t\t//_geometry.animation = _animation;\r\n\t\t\t\t//\t\t\t\t\t_mesh.animationController = _animationController;\r\n\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(this._geometry);\r\n\t\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t\t\tthis._pFinalizeAsset(this._skeleton);\r\n\t\t\t\tthis._pFinalizeAsset(this._animationSet);\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate calculateMaxJointCount():void\r\n\t{\r\n\t\tthis._maxJointCount = 0;\r\n\r\n\t\tvar numMeshData:number /*int*/ = this._meshData.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < numMeshData; ++i) {\r\n\t\t\tvar meshData:MeshData = this._meshData[i];\r\n\t\t\tvar vertexData:Array<VertexData> = meshData.vertexData;\r\n\t\t\tvar numVerts:number /*int*/ = vertexData.length;\r\n\r\n\t\t\tfor (var j:number /*int*/ = 0; j < numVerts; ++j) {\r\n\t\t\t\tvar zeroWeights:number /*int*/ = this.countZeroWeightJoints(vertexData[j], meshData.weightData);\r\n\t\t\t\tvar totalJoints:number /*int*/ = vertexData[j].countWeight - zeroWeights;\r\n\t\t\t\tif (totalJoints > this._maxJointCount)\r\n\t\t\t\t\tthis._maxJointCount = totalJoints;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate countZeroWeightJoints(vertex:VertexData, weights:Array<JointData>):number /*int*/\r\n\t{\r\n\t\tvar start:number /*int*/ = vertex.startWeight;\r\n\t\tvar end:number /*int*/ = vertex.startWeight + vertex.countWeight;\r\n\t\tvar count:number /*int*/ = 0;\r\n\t\tvar weight:number;\r\n\r\n\t\tfor (var i:number /*int*/ = start; i < end; ++i) {\r\n\t\t\tweight = weights[i].bias;\r\n\t\t\tif (weight == 0)\r\n\t\t\t\t++count;\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the skeleton's joints.\r\n\t */\r\n\tprivate parseJoints():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar joint:SkeletonJoint;\r\n\t\tvar pos:Vector3D;\r\n\t\tvar quat:Quaternion;\r\n\t\tvar i:number /*int*/ = 0;\r\n\t\tvar token:string = this.getNextToken();\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tthis._skeleton = new Skeleton();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tjoint = new SkeletonJoint();\r\n\t\t\tjoint.name = this.parseLiteralstring();\r\n\t\t\tjoint.parentIndex = this.getNextInt();\r\n\t\t\tpos = this.parseVector3D();\r\n\t\t\tpos = this._rotationQuat.rotatePoint(pos);\r\n\t\t\tquat = this.parseQuaternion();\r\n\r\n\t\t\t// todo: check if this is correct, or maybe we want to actually store it as quats?\r\n\t\t\tthis._bindPoses[i] = quat.toMatrix3D();\r\n\t\t\tthis._bindPoses[i].appendTranslation(pos.x, pos.y, pos.z);\r\n\t\t\tvar inv:Matrix3D = this._bindPoses[i].clone();\r\n\t\t\tinv.invert();\r\n\t\t\tjoint.inverseBindPose = inv.rawData;\r\n\r\n\t\t\tthis._skeleton.joints[i++] = joint;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Puts back the last read character into the data stream.\r\n\t */\r\n\tprivate putBack():void\r\n\t{\r\n\t\tthis._parseIndex--;\r\n\t\tthis._charLineIndex--;\r\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the mesh geometry.\r\n\t */\r\n\tprivate parseMesh():void\r\n\t{\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar ch:string;\r\n\t\tvar vertexData:Array<VertexData>;\r\n\t\tvar weights:Array<JointData>;\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tif (this._shaders == null)\r\n\t\t\tthis._shaders = new Array<string>();\r\n\r\n\t\twhile (ch != \"}\") {\r\n\t\t\tch = this.getNextToken();\r\n\t\t\tswitch (ch) {\r\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_SHADER_TOKEN:\r\n\t\t\t\t\tthis._shaders.push(this.parseLiteralstring());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_VERTS_TOKEN:\r\n\t\t\t\t\tvertexData = new Array<VertexData>(this.getNextInt());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_TRIS_TOKEN:\r\n\t\t\t\t\tindices = new Array<number>(this.getNextInt()*3) /*uint*/;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_WEIGHTS_TOKEN:\r\n\t\t\t\t\tweights = new Array<JointData>(this.getNextInt());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_VERT_TOKEN:\r\n\t\t\t\t\tthis.parseVertex(vertexData);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_TRI_TOKEN:\r\n\t\t\t\t\tthis.parseTri(indices);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_WEIGHT_TOKEN:\r\n\t\t\t\t\tthis.parseJoint(weights);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._meshData == null)\r\n\t\t\tthis._meshData = new Array<MeshData>();\r\n\r\n\t\tvar i:number /*uint*/ = this._meshData.length;\r\n\t\tthis._meshData[i] = new MeshData();\r\n\t\tthis._meshData[i].vertexData = vertexData;\r\n\t\tthis._meshData[i].weightData = weights;\r\n\t\tthis._meshData[i].indices = indices;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the mesh data to a SkinnedSub instance.\r\n\t * @param vertexData The mesh's vertices.\r\n\t * @param weights The joint weights per vertex.\r\n\t * @param indices The indices for the faces.\r\n\t * @return A SubGeometry instance containing all geometrical data for the current mesh.\r\n\t */\r\n\tprivate translateGeom(vertexData:Array<VertexData>, weights:Array<JointData>, indices:Array<number> /*uint*/):TriangleSubGeometry\r\n\t{\r\n\t\tvar len:number /*int*/ = vertexData.length;\r\n\t\tvar v1:number /*int*/, v2:number /*int*/, v3:number /*int*/;\r\n\t\tvar vertex:VertexData;\r\n\t\tvar weight:JointData;\r\n\t\tvar bindPose:Matrix3D;\r\n\t\tvar pos:Vector3D;\r\n\t\tvar subGeom:TriangleSubGeometry = new TriangleSubGeometry(true);\r\n\t\tvar uvs:Array<number> = new Array<number>(len*2);\r\n\t\tvar vertices:Array<number> = new Array<number>(len*3);\r\n\t\tvar jointIndices:Array<number> = new Array<number>(len*this._maxJointCount);\r\n\t\tvar jointWeights:Array<number> = new Array<number>(len*this._maxJointCount);\r\n\t\tvar l:number /*int*/ = 0;\r\n\t\tvar nonZeroWeights:number /*int*/;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i) {\r\n\t\t\tvertex = vertexData[i];\r\n\t\t\tv1 = vertex.index*3;\r\n\t\t\tv2 = v1 + 1;\r\n\t\t\tv3 = v1 + 2;\r\n\t\t\tvertices[v1] = vertices[v2] = vertices[v3] = 0;\r\n\r\n\t\t\tnonZeroWeights = 0;\r\n\t\t\tfor (var j:number /*int*/ = 0; j < vertex.countWeight; ++j) {\r\n\t\t\t\tweight = weights[vertex.startWeight + j];\r\n\t\t\t\tif (weight.bias > 0) {\r\n\t\t\t\t\tbindPose = this._bindPoses[weight.joint];\r\n\t\t\t\t\tpos = bindPose.transformVector(weight.pos);\r\n\t\t\t\t\tvertices[v1] += pos.x*weight.bias;\r\n\t\t\t\t\tvertices[v2] += pos.y*weight.bias;\r\n\t\t\t\t\tvertices[v3] += pos.z*weight.bias;\r\n\r\n\t\t\t\t\t// indices need to be multiplied by 3 (amount of matrix registers)\r\n\t\t\t\t\tjointIndices[l] = weight.joint*3;\r\n\t\t\t\t\tjointWeights[l++] = weight.bias;\r\n\t\t\t\t\t++nonZeroWeights;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = nonZeroWeights; j < this._maxJointCount; ++j) {\r\n\t\t\t\tjointIndices[l] = 0;\r\n\t\t\t\tjointWeights[l++] = 0;\r\n\t\t\t}\r\n\r\n\t\t\tv1 = vertex.index << 1;\r\n\t\t\tuvs[v1++] = vertex.s;\r\n\t\t\tuvs[v1] = vertex.t;\r\n\t\t}\r\n\r\n\t\tsubGeom.jointsPerVertex = this._maxJointCount;\r\n\t\tsubGeom.updateIndices(indices);\r\n\t\tsubGeom.updatePositions(vertices);\r\n\t\tsubGeom.updateUVs(uvs);\r\n\t\tsubGeom.updateJointIndices(jointIndices);\r\n\t\tsubGeom.updateJointWeights(jointWeights);\r\n\t\t// cause explicit updates\r\n\t\tsubGeom.vertexNormals;\r\n\t\tsubGeom.vertexTangents;\r\n\t\t// turn auto updates off because they may be animated and set explicitly\r\n\t\tsubGeom.autoDeriveTangents = false;\r\n\t\tsubGeom.autoDeriveNormals = false;\r\n\r\n\t\treturn subGeom;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve the next triplet of vertex indices that form a face.\r\n\t * @param indices The index list in which to store the read data.\r\n\t */\r\n\tprivate parseTri(indices:Array<number> /*uint*/):void\r\n\t{\r\n\t\tvar index:number /*int*/ = this.getNextInt()*3;\r\n\t\tindices[index] = this.getNextInt();\r\n\t\tindices[index + 1] = this.getNextInt();\r\n\t\tindices[index + 2] = this.getNextInt();\r\n\t}\r\n\r\n\t/**\r\n\t * Reads a new joint data set for a single joint.\r\n\t * @param weights the target list to contain the weight data.\r\n\t */\r\n\tprivate parseJoint(weights:Array<JointData>):void\r\n\t{\r\n\t\tvar weight:JointData = new JointData();\r\n\t\tweight.index = this.getNextInt();\r\n\t\tweight.joint = this.getNextInt();\r\n\t\tweight.bias = this.getNextNumber();\r\n\t\tweight.pos = this.parseVector3D();\r\n\t\tweights[weight.index] = weight;\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the data for a single vertex.\r\n\t * @param vertexData The list to contain the vertex data.\r\n\t */\r\n\tprivate parseVertex(vertexData:Array<VertexData>):void\r\n\t{\r\n\t\tvar vertex:VertexData = new VertexData();\r\n\t\tvertex.index = this.getNextInt();\r\n\t\tthis.parseUV(vertex);\r\n\t\tvertex.startWeight = this.getNextInt();\r\n\t\tvertex.countWeight = this.getNextInt();\r\n\t\t//\t\t\tif (vertex.countWeight > _maxJointCount) _maxJointCount = vertex.countWeight;\r\n\t\tvertexData[vertex.index] = vertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next uv coordinate.\r\n\t * @param vertexData The vertexData to contain the UV coordinates.\r\n\t */\r\n\tprivate parseUV(vertexData:VertexData):void\r\n\t{\r\n\t\tvar ch:string = this.getNextToken();\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvertexData.s = this.getNextNumber();\r\n\t\tvertexData.t = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the next token in the data stream.\r\n\t */\r\n\tprivate getNextToken():string\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar token:string = \"\";\r\n\r\n\t\twhile (!this._reachedEOF) {\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\r\n\t\t\t\tif (token != MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.skipWhiteSpace();\r\n\t\t\t\tif (token != \"\")\r\n\t\t\t\t\treturn token;\r\n\t\t\t} else\r\n\t\t\t\ttoken += ch;\r\n\r\n\t\t\tif (token == MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\treturn token;\r\n\t\t}\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Skips all whitespace in the data stream.\r\n\t */\r\n\tprivate skipWhiteSpace():void\r\n\t{\r\n\t\tvar ch:string;\r\n\r\n\t\tdo\r\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\r\n\r\n\t\tthis.putBack();\r\n\t}\r\n\r\n\t/**\r\n\t * Skips to the next line.\r\n\t */\r\n\tprivate ignoreLine():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\r\n\t\t\tch = this.getNextChar();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next single character in the data stream.\r\n\t */\r\n\tprivate getNextChar():string\r\n\t{\r\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\r\n\r\n\t\tif (ch == \"\\n\") {\r\n\t\t\t++this._line;\r\n\t\t\tthis._charLineIndex = 0;\r\n\t\t} else if (ch != \"\\r\")\r\n\t\t\t++this._charLineIndex;\r\n\r\n\t\tif (this._parseIndex >= this._textData.length)\r\n\t\t\tthis._reachedEOF = true;\r\n\r\n\t\treturn ch;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next integer in the data stream.\r\n\t */\r\n\tprivate getNextInt():number /*int*/\r\n\t{\r\n\t\tvar i:number = parseInt(this.getNextToken());\r\n\t\tif (isNaN(i))\r\n\t\t\tthis.sendParseError(\"int type\");\r\n\t\treturn i;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next floating point number in the data stream.\r\n\t */\r\n\tprivate getNextNumber():number\r\n\t{\r\n\t\tvar f:number = parseFloat(this.getNextToken());\r\n\t\tif (isNaN(f))\r\n\t\t\tthis.sendParseError(\"float type\");\r\n\t\treturn f;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next 3d vector in the data stream.\r\n\t */\r\n\tprivate parseVector3D():Vector3D\r\n\t{\r\n\t\tvar vec:Vector3D = new Vector3D();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvec.x = -this.getNextNumber();\r\n\t\tvec.y = this.getNextNumber();\r\n\t\tvec.z = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next quaternion in the data stream.\r\n\t */\r\n\tprivate parseQuaternion():Quaternion\r\n\t{\r\n\t\tvar quat:Quaternion = new Quaternion();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tquat.x = this.getNextNumber();\r\n\t\tquat.y = -this.getNextNumber();\r\n\t\tquat.z = -this.getNextNumber();\r\n\r\n\t\t// quat supposed to be unit length\r\n\t\tvar t:number = 1 - quat.x*quat.x - quat.y*quat.y - quat.z*quat.z;\r\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\tvar rotQuat:Quaternion = new Quaternion();\r\n\t\trotQuat.multiply(this._rotationQuat, quat);\r\n\t\treturn rotQuat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the command line data.\r\n\t */\r\n\tprivate parseCMD():void\r\n\t{\r\n\t\t// just ignore the command line property\r\n\t\tthis.parseLiteralstring();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\r\n\t * by double quotes.\r\n\t */\r\n\tprivate parseLiteralstring():string\r\n\t{\r\n\t\tthis.skipWhiteSpace();\r\n\r\n\t\tvar ch:string = this.getNextChar();\r\n\t\tvar str:string = \"\";\r\n\r\n\t\tif (ch != \"\\\"\")\r\n\t\t\tthis.sendParseError(\"\\\"\");\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch != \"\\\"\")\r\n\t\t\t\tstr += ch;\r\n\t\t} while (ch != \"\\\"\");\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an end-of-file error when a premature end of file was encountered.\r\n\t */\r\n\tprivate sendEOFError():void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected end of file\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unexpected token was encountered.\r\n\t * @param expected The token type that was actually expected.\r\n\t */\r\n\tprivate sendParseError(expected:string):void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unknown keyword was encountered.\r\n\t */\r\n\tprivate sendUnknownKeywordError():void\r\n\t{\r\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\r\n\t}\r\n}\r\n\r\nexport = MD5MeshParser;\r\n\r\n\r\nclass VertexData\r\n{\r\n\tpublic index:number /*int*/;\r\n\tpublic s:number;\r\n\tpublic t:number;\r\n\tpublic startWeight:number /*int*/;\r\n\tpublic countWeight:number /*int*/;\r\n}\r\n\r\nclass JointData\r\n{\r\n\tpublic index:number /*int*/;\r\n\tpublic joint:number /*int*/;\r\n\tpublic bias:number;\r\n\tpublic pos:Vector3D;\r\n}\r\n\r\nclass MeshData\r\n{\r\n\tpublic vertexData:Array<VertexData>;\r\n\tpublic weightData:Array<JointData>;\r\n\tpublic indices:Array<number> /*uint*/;\r\n}","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport TextureProxyBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-renderergl/lib/managers/DefaultMaterialManager\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\n\r\n/**\r\n * Max3DSParser provides a parser for the 3ds data type.\r\n */\r\nclass Max3DSParser extends ParserBase\r\n{\r\n\tprivate _byteData:ByteArray;\r\n\r\n\tprivate _textures:Object;\r\n\tprivate _materials:Object;\r\n\tprivate _unfinalized_objects:Object;\r\n\r\n\tprivate _cur_obj_end:number;\r\n\tprivate _cur_obj:ObjectVO;\r\n\r\n\tprivate _cur_mat_end:number;\r\n\tprivate _cur_mat:MaterialVO;\r\n\tprivate _useSmoothingGroups:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>Max3DSParser</code> object.\r\n\t *\r\n\t * @param useSmoothingGroups Determines whether the parser looks for smoothing groups in the 3ds file or assumes uniform smoothing. Defaults to true.\r\n\t */\r\n\tconstructor(useSmoothingGroups:boolean = true)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n\t\tthis._useSmoothingGroups = useSmoothingGroups;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"3ds\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\tvar ba:ByteArray;\r\n\r\n\t\tba = ParserUtils.toByteArray(data);\r\n\t\tif (ba) {\r\n\t\t\tba.position = 0;\r\n\t\t\tif (ba.readShort() == 0x4d4d)\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\tif (resourceDependency.assets.length == 1) {\r\n\t\t\tvar asset:IAsset;\r\n\r\n\t\t\tasset = resourceDependency.assets[0];\r\n\t\t\tif (asset.assetType == AssetType.TEXTURE) {\r\n\t\t\t\tvar tex:TextureVO;\r\n\r\n\t\t\t\ttex = this._textures[resourceDependency.id];\r\n\t\t\t\ttex.texture = <Texture2DBase> asset;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\t// TODO: Implement\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (!this._byteData) {\r\n\t\t\tthis._byteData = this._pGetByteData();\r\n\t\t\tthis._byteData.position = 0;\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\tthis._textures = {};\r\n\t\t\tthis._materials = {};\r\n\t\t\tthis._unfinalized_objects = {};\r\n\t\t}\r\n\r\n\t\t// TODO: With this construct, the loop will run no-op for as long\r\n\t\t// as there is time once file has finished reading. Consider a nice\r\n\t\t// way to stop loop when byte array is empty, without putting it in\r\n\t\t// the while-conditional, which will prevent finalizations from\r\n\t\t// happening after the last chunk.\r\n\t\twhile (this._pHasTime()) {\r\n\r\n\t\t\t// If we are currently working on an object, and the most recent chunk was\r\n\t\t\t// the last one in that object, finalize the current object.\r\n\t\t\tif (this._cur_mat && this._byteData.position >= this._cur_mat_end)\r\n\t\t\t\tthis.finalizeCurrentMaterial();\r\n\t\t\telse if (this._cur_obj && this._byteData.position >= this._cur_obj_end) {\r\n\t\t\t\t// Can't finalize at this point, because we have to wait until the full\r\n\t\t\t\t// animation section has been parsed for any potential pivot definitions\r\n\t\t\t\tthis._unfinalized_objects[this._cur_obj.name] = this._cur_obj;\r\n\t\t\t\tthis._cur_obj_end = Number.MAX_VALUE /*uint*/;\r\n\t\t\t\tthis._cur_obj = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._byteData.getBytesAvailable() > 0) {\r\n\t\t\t\tvar cid:number /*uint*/;\r\n\t\t\t\tvar len:number /*uint*/;\r\n\t\t\t\tvar end:number /*uint*/;\r\n\r\n\t\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\t\tlen = this._byteData.readUnsignedInt();\r\n\t\t\t\tend = this._byteData.position + (len - 6);\r\n\r\n\t\t\t\tswitch (cid) {\r\n\t\t\t\t\tcase 0x4D4D: // MAIN3DS\r\n\t\t\t\t\tcase 0x3D3D: // EDIT3DS\r\n\t\t\t\t\tcase 0xB000: // KEYF3DS\r\n\t\t\t\t\t\t// This types are \"container chunks\" and contain only\r\n\t\t\t\t\t\t// sub-chunks (no data on their own.) This means that\r\n\t\t\t\t\t\t// there is nothing more to parse at this point, and\r\n\t\t\t\t\t\t// instead we should progress to the next chunk, which\r\n\t\t\t\t\t\t// will be the first sub-chunk of this one.\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0xAFFF: // MATERIAL\r\n\t\t\t\t\t\tthis._cur_mat_end = end;\r\n\t\t\t\t\t\tthis._cur_mat = this.parseMaterial();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4000: // EDIT_OBJECT\r\n\t\t\t\t\t\tthis._cur_obj_end = end;\r\n\t\t\t\t\t\tthis._cur_obj = new ObjectVO();\r\n\t\t\t\t\t\tthis._cur_obj.name = this.readNulTermstring();\r\n\t\t\t\t\t\tthis._cur_obj.materials = new Array<string>();\r\n\t\t\t\t\t\tthis._cur_obj.materialFaces = {};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4100: // OBJ_TRIMESH\r\n\t\t\t\t\t\tthis._cur_obj.type = AssetType.MESH;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4110: // TRI_VERTEXL\r\n\t\t\t\t\t\tthis.parseVertexList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4120: // TRI_FACELIST\r\n\t\t\t\t\t\tthis.parseFaceList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4140: // TRI_MAPPINGCOORDS\r\n\t\t\t\t\t\tthis.parseUVList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4130: // Face materials\r\n\t\t\t\t\t\tthis.parseFaceMaterialList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4160: // Transform\r\n\t\t\t\t\t\tthis._cur_obj.transform = this.readTransform();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0xB002: // Object animation (including pivot)\r\n\t\t\t\t\t\tthis.parseObjectAnimation(end);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4150: // Smoothing groups\r\n\t\t\t\t\t\tthis.parseSmoothingGroups();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// Skip this (unknown) chunk\r\n\t\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Pause parsing if there were any dependencies found during this\r\n\t\t\t\t// iteration (i.e. if there are any dependencies that need to be\r\n\t\t\t\t// retrieved at this time.)\r\n\t\t\t\tif (this.dependencies.length) {\r\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// More parsing is required if the entire byte array has not yet\r\n\t\t// been read, or if there is a currently non-finalized object in\r\n\t\t// the pipeline.\r\n\t\tif (this._byteData.getBytesAvailable() || this._cur_obj || this._cur_mat) {\r\n\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t} else {\r\n\t\t\tvar name:string;\r\n\r\n\t\t\t// Finalize any remaining objects before ending.\r\n\t\t\tfor (name in this._unfinalized_objects) {\r\n\t\t\t\tvar obj:DisplayObjectContainer;\r\n\t\t\t\tobj = this.constructObject(this._unfinalized_objects[name]);\r\n\t\t\t\tif (obj) {\r\n\t\t\t\t\t//add to the content property\r\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(obj, name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate parseMaterial():MaterialVO\r\n\t{\r\n\t\tvar mat:MaterialVO;\r\n\r\n\t\tmat = new MaterialVO();\r\n\r\n\t\twhile (this._byteData.position < this._cur_mat_end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\t\t\tvar end:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\t\t\tend = this._byteData.position + (len - 6);\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xA000: // Material name\r\n\t\t\t\t\tmat.name = this.readNulTermstring();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA010: // Ambient color\r\n\t\t\t\t\tmat.ambientColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA020: // Diffuse color\r\n\t\t\t\t\tmat.diffuseColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA030: // Specular color\r\n\t\t\t\t\tmat.specularColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA081: // Two-sided, existence indicates \"true\"\r\n\t\t\t\t\tmat.twoSided = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA200: // Main (color) texture\r\n\t\t\t\t\tmat.colorMap = this.parseTexture(end);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA204: // Specular map\r\n\t\t\t\t\tmat.specularMap = this.parseTexture(end);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._byteData.position = end;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn mat;\r\n\t}\r\n\r\n\tprivate parseTexture(end:number /*uint*/):TextureVO\r\n\t{\r\n\t\tvar tex:TextureVO;\r\n\r\n\t\ttex = new TextureVO();\r\n\r\n\t\twhile (this._byteData.position < end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xA300:\r\n\t\t\t\t\ttex.url = this.readNulTermstring();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// Skip this unknown texture sub-chunk\r\n\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._textures[tex.url] = tex;\r\n\t\tthis._pAddDependency(tex.url, new URLRequest(tex.url));\r\n\r\n\t\treturn tex;\r\n\t}\r\n\r\n\tprivate parseVertexList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.verts = new Array<number>(count*3);\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.verts.length;\r\n\t\twhile (i < len) {\r\n\t\t\tvar x:number, y:number, z:number;\r\n\r\n\t\t\tx = this._byteData.readFloat();\r\n\t\t\ty = this._byteData.readFloat();\r\n\t\t\tz = this._byteData.readFloat();\r\n\r\n\t\t\tthis._cur_obj.verts[i++] = x;\r\n\t\t\tthis._cur_obj.verts[i++] = z;\r\n\t\t\tthis._cur_obj.verts[i++] = y;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseFaceList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.indices = new Array<number>(count*3) /*uint*/;\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.indices.length;\r\n\t\twhile (i < len) {\r\n\t\t\tvar i0:number /*uint*/, i1:number /*uint*/, i2:number /*uint*/;\r\n\r\n\t\t\ti0 = this._byteData.readUnsignedShort();\r\n\t\t\ti1 = this._byteData.readUnsignedShort();\r\n\t\t\ti2 = this._byteData.readUnsignedShort();\r\n\r\n\t\t\tthis._cur_obj.indices[i++] = i0;\r\n\t\t\tthis._cur_obj.indices[i++] = i2;\r\n\t\t\tthis._cur_obj.indices[i++] = i1;\r\n\r\n\t\t\t// Skip \"face info\", irrelevant in Away3D\r\n\t\t\tthis._byteData.position += 2;\r\n\t\t}\r\n\r\n\t\tthis._cur_obj.smoothingGroups = new Array<number>(count) /*uint*/;\r\n\t}\r\n\r\n\tprivate parseSmoothingGroups():void\r\n\t{\r\n\t\tvar len:number /*uint*/ = this._cur_obj.indices.length/3;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\t\twhile (i < len) {\r\n\t\t\tthis._cur_obj.smoothingGroups[i] = this._byteData.readUnsignedInt();\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseUVList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.uvs = new Array<number>(count*2);\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.uvs.length;\r\n\t\twhile (i < len) {\r\n\t\t\tthis._cur_obj.uvs[i++] = this._byteData.readFloat();\r\n\t\t\tthis._cur_obj.uvs[i++] = 1.0 - this._byteData.readFloat();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseFaceMaterialList():void\r\n\t{\r\n\t\tvar mat:string;\r\n\t\tvar count:number /*uint*/;\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar faces:Array<number> /*uint*/;\r\n\r\n\t\tmat = this.readNulTermstring();\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\r\n\t\tfaces = new Array<number>(count) /*uint*/;\r\n\t\ti = 0;\r\n\t\twhile (i < faces.length)\r\n\t\t\tfaces[i++] = this._byteData.readUnsignedShort();\r\n\r\n\t\tthis._cur_obj.materials.push(mat);\r\n\t\tthis._cur_obj.materialFaces[mat] = faces;\r\n\t}\r\n\r\n\tprivate parseObjectAnimation(end:number):void\r\n\t{\r\n\t\tvar vo:ObjectVO;\r\n\t\tvar obj:DisplayObjectContainer;\r\n\t\tvar pivot:Vector3D;\r\n\t\tvar name:string;\r\n\t\tvar hier:number /*uint*/;\r\n\r\n\t\t// Pivot defaults to origin\r\n\t\tpivot = new Vector3D;\r\n\r\n\t\twhile (this._byteData.position < end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xb010: // Name/hierarchy\r\n\t\t\t\t\tname = this.readNulTermstring();\r\n\t\t\t\t\tthis._byteData.position += 4;\r\n\t\t\t\t\thier = this._byteData.readShort();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xb013: // Pivot\r\n\t\t\t\t\tpivot.x = this._byteData.readFloat();\r\n\t\t\t\t\tpivot.z = this._byteData.readFloat();\r\n\t\t\t\t\tpivot.y = this._byteData.readFloat();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If name is \"$$$DUMMY\" this is an empty object (e.g. a container)\r\n\t\t// and will be ignored in this version of the parser\r\n\t\t// TODO: Implement containers in 3DS parser.\r\n\t\tif (name != '$$$DUMMY' && this._unfinalized_objects.hasOwnProperty(name)) {\r\n\t\t\tvo = this._unfinalized_objects[name];\r\n\t\t\tobj = this.constructObject(vo, pivot);\r\n\r\n\t\t\tif (obj) {\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(obj, vo.name);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tdelete this._unfinalized_objects[name];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate constructObject(obj:ObjectVO, pivot:Vector3D = null):DisplayObjectContainer\r\n\t{\r\n\t\tif (obj.type == AssetType.MESH) {\r\n\t\t\tvar i:number /*uint*/;\r\n\t\t\tvar sub:TriangleSubGeometry;\r\n\t\t\tvar geom:Geometry;\r\n\t\t\tvar mat:MaterialBase;\r\n\t\t\tvar mesh:Mesh;\r\n\t\t\tvar mtx:Matrix3D;\r\n\t\t\tvar vertices:Array<VertexVO>;\r\n\t\t\tvar faces:Array<FaceVO>;\r\n\r\n\t\t\tif (obj.materials.length > 1)\r\n\t\t\t\tconsole.log(\"The Away3D 3DS parser does not support multiple materials per mesh at this point.\");\r\n\r\n\t\t\t// Ignore empty objects\r\n\t\t\tif (!obj.indices || obj.indices.length == 0)\r\n\t\t\t\treturn null;\r\n\r\n\t\t\tvertices = new Array<VertexVO>(obj.verts.length/3);\r\n\t\t\tfaces = new Array<FaceVO>(obj.indices.length/3);\r\n\r\n\t\t\tthis.prepareData(vertices, faces, obj);\r\n\r\n\t\t\tif (this._useSmoothingGroups)\r\n\t\t\t\tthis.applySmoothGroups(vertices, faces);\r\n\r\n\t\t\tobj.verts = new Array<number>(vertices.length*3);\r\n\t\t\tfor (i = 0; i < vertices.length; i++) {\r\n\t\t\t\tobj.verts[i*3] = vertices[i].x;\r\n\t\t\t\tobj.verts[i*3 + 1] = vertices[i].y;\r\n\t\t\t\tobj.verts[i*3 + 2] = vertices[i].z;\r\n\t\t\t}\r\n\t\t\tobj.indices = new Array<number>(faces.length*3) /*uint*/;\r\n\r\n\t\t\tfor (i = 0; i < faces.length; i++) {\r\n\t\t\t\tobj.indices[i*3] = faces[i].a;\r\n\t\t\t\tobj.indices[i*3 + 1] = faces[i].b;\r\n\t\t\t\tobj.indices[i*3 + 2] = faces[i].c;\r\n\t\t\t}\r\n\r\n\t\t\tif (obj.uvs) {\r\n\t\t\t\t// If the object had UVs to start with, use UVs generated by\r\n\t\t\t\t// smoothing group splitting algorithm. Otherwise those UVs\r\n\t\t\t\t// will be nonsense and should be skipped.\r\n\t\t\t\tobj.uvs = new Array<number>(vertices.length*2);\r\n\t\t\t\tfor (i = 0; i < vertices.length; i++) {\r\n\t\t\t\t\tobj.uvs[i*2] = vertices[i].u;\r\n\t\t\t\t\tobj.uvs[i*2 + 1] = vertices[i].v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tgeom = new Geometry();\r\n\r\n\t\t\t// Construct sub-geometries (potentially splitting buffers)\r\n\t\t\t// and add them to geometry.\r\n\t\t\tsub = new TriangleSubGeometry(true);\r\n\t\t\tsub.updateIndices(obj.indices);\r\n\t\t\tsub.updatePositions(obj.verts);\r\n\t\t\tsub.updateUVs(obj.uvs);\r\n\r\n\t\t\tgeom.addSubGeometry(sub);\r\n\r\n\t\t\tif (obj.materials.length > 0) {\r\n\t\t\t\tvar mname:string;\r\n\t\t\t\tmname = obj.materials[0];\r\n\t\t\t\tmat = this._materials[mname].material;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply pivot translation to geometry if a pivot was\r\n\t\t\t// found while parsing the keyframe chunk earlier.\r\n\t\t\tif (pivot) {\r\n\t\t\t\tif (obj.transform) {\r\n\t\t\t\t\t// If a transform was found while parsing the\r\n\t\t\t\t\t// object chunk, use it to find the local pivot vector\r\n\t\t\t\t\tvar dat:Array<number> = obj.transform.concat();\r\n\t\t\t\t\tdat[12] = 0;\r\n\t\t\t\t\tdat[13] = 0;\r\n\t\t\t\t\tdat[14] = 0;\r\n\t\t\t\t\tmtx = new Matrix3D(dat);\r\n\t\t\t\t\tpivot = mtx.transformVector(pivot);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpivot.scaleBy(-1);\r\n\r\n\t\t\t\tmtx = new Matrix3D();\r\n\t\t\t\tmtx.appendTranslation(pivot.x, pivot.y, pivot.z);\r\n\t\t\t\tgeom.applyTransformation(mtx);\r\n\t\t\t}\r\n\r\n\t\t\t// Apply transformation to geometry if a transformation\r\n\t\t\t// was found while parsing the object chunk earlier.\r\n\t\t\tif (obj.transform) {\r\n\t\t\t\tmtx = new Matrix3D(obj.transform);\r\n\t\t\t\tmtx.invert();\r\n\t\t\t\tgeom.applyTransformation(mtx);\r\n\t\t\t}\r\n\r\n\t\t\t// Final transform applied to geometry. Finalize the geometry,\r\n\t\t\t// which will no longer be modified after this point.\r\n\t\t\tthis._pFinalizeAsset(geom, obj.name.concat('_geom'));\r\n\r\n\t\t\t// Build mesh and return it\r\n\t\t\tmesh = new Mesh(geom, mat);\r\n\t\t\tmesh.transform.matrix3D = new Matrix3D(obj.transform);\r\n\t\t\treturn mesh;\r\n\t\t}\r\n\r\n\t\t// If reached, unknown\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate prepareData(vertices:Array<VertexVO>, faces:Array<FaceVO>, obj:ObjectVO):void\r\n\t{\r\n\t\t// convert raw ObjectVO's data to structured VertexVO and FaceVO\r\n\t\tvar i:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar k:number /*int*/;\r\n\t\tvar len:number /*int*/ = obj.verts.length;\r\n\t\tfor (i = 0, j = 0, k = 0; i < len;) {\r\n\t\t\tvar v:VertexVO = new VertexVO;\r\n\t\t\tv.x = obj.verts[i++];\r\n\t\t\tv.y = obj.verts[i++];\r\n\t\t\tv.z = obj.verts[i++];\r\n\t\t\tif (obj.uvs) {\r\n\t\t\t\tv.u = obj.uvs[j++];\r\n\t\t\t\tv.v = obj.uvs[j++];\r\n\t\t\t}\r\n\t\t\tvertices[k++] = v;\r\n\t\t}\r\n\t\tlen = obj.indices.length;\r\n\t\tfor (i = 0, k = 0; i < len;) {\r\n\t\t\tvar f:FaceVO = new FaceVO();\r\n\t\t\tf.a = obj.indices[i++];\r\n\t\t\tf.b = obj.indices[i++];\r\n\t\t\tf.c = obj.indices[i++];\r\n\t\t\tf.smoothGroup = obj.smoothingGroups[k] || 0;\r\n\t\t\tfaces[k++] = f;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate applySmoothGroups(vertices:Array<VertexVO>, faces:Array<FaceVO>):void\r\n\t{\r\n\t\t// clone vertices according to following rule:\r\n\t\t// clone if vertex's in faces from groups 1+2 and 3\r\n\t\t// don't clone if vertex's in faces from groups 1+2, 3 and 1+3\r\n\r\n\t\tvar i:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar k:number /*int*/;\r\n\t\tvar l:number /*int*/;\r\n\t\tvar len:number /*int*/;\r\n\t\tvar numVerts:number /*uint*/ = vertices.length;\r\n\t\tvar numFaces:number /*uint*/ = faces.length;\r\n\r\n\t\t// extract groups data for vertices\r\n\t\tvar vGroups:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\r\n\t\tfor (i = 0; i < numVerts; i++)\r\n\t\t\tvGroups[i] = new Array<number>() /*uint*/;\r\n\t\tfor (i = 0; i < numFaces; i++) {\r\n\t\t\tvar face:FaceVO = faces[i];\r\n\t\t\tfor (j = 0; j < 3; j++) {\r\n\t\t\t\tvar groups:Array<number> /*uint*/ = vGroups[(j == 0)? face.a : ((j == 1)? face.b : face.c)];\r\n\t\t\t\tvar group:number /*uint*/ = face.smoothGroup;\r\n\t\t\t\tfor (k = groups.length - 1; k >= 0; k--) {\r\n\t\t\t\t\tif ((group & groups[k]) > 0) {\r\n\t\t\t\t\t\tgroup |= groups[k];\r\n\t\t\t\t\t\tgroups.splice(k, 1);\r\n\t\t\t\t\t\tk = groups.length - 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tgroups.push(group);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// clone vertices\r\n\t\tvar vClones:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\r\n\t\tfor (i = 0; i < numVerts; i++) {\r\n\t\t\tif ((len = vGroups[i].length) < 1)\r\n\t\t\t\tcontinue;\r\n\t\t\tvar clones:Array<number> /*uint*/ = new Array<number>(len) /*uint*/;\r\n\t\t\tvClones[i] = clones;\r\n\t\t\tclones[0] = i;\r\n\t\t\tvar v0:VertexVO = vertices[i];\r\n\t\t\tfor (j = 1; j < len; j++) {\r\n\t\t\t\tvar v1:VertexVO = new VertexVO;\r\n\t\t\t\tv1.x = v0.x;\r\n\t\t\t\tv1.y = v0.y;\r\n\t\t\t\tv1.z = v0.z;\r\n\t\t\t\tv1.u = v0.u;\r\n\t\t\t\tv1.v = v0.v;\r\n\t\t\t\tclones[j] = vertices.length;\r\n\t\t\t\tvertices.push(v1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tnumVerts = vertices.length;\r\n\r\n\t\tfor (i = 0; i < numFaces; i++) {\r\n\t\t\tface = faces[i];\r\n\t\t\tgroup = face.smoothGroup;\r\n\t\t\tfor (j = 0; j < 3; j++) {\r\n\t\t\t\tk = (j == 0)? face.a : ((j == 1)? face.b : face.c);\r\n\t\t\t\tgroups = vGroups[k];\r\n\t\t\t\tlen = groups.length;\r\n\t\t\t\tclones = vClones[k];\r\n\t\t\t\tfor (l = 0; l < len; l++) {\r\n\t\t\t\t\tif (((group == 0) && (groups[l] == 0)) || ((group & groups[l]) > 0)) {\r\n\t\t\t\t\t\tvar index:number /*uint*/ = clones[l];\r\n\t\t\t\t\t\tif (group == 0) {\r\n\t\t\t\t\t\t\t// vertex is unique if no smoothGroup found\r\n\t\t\t\t\t\t\tgroups.splice(l, 1);\r\n\t\t\t\t\t\t\tclones.splice(l, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (j == 0)\r\n\t\t\t\t\t\t\tface.a = index; else if (j == 1)\r\n\t\t\t\t\t\t\tface.b = index; else\r\n\t\t\t\t\t\t\tface.c = index;\r\n\t\t\t\t\t\tl = len;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate finalizeCurrentMaterial():void\r\n\t{\r\n\t\tvar mat:MethodMaterial;\r\n\r\n\t\tif (this._cur_mat.colorMap)\r\n\t\t\tmat = new MethodMaterial(this._cur_mat.colorMap.texture || DefaultMaterialManager.getDefaultTexture());\r\n\t\telse\r\n\t\t\tmat = new MethodMaterial(this._cur_mat.ambientColor);\r\n\r\n\t\tmat.diffuseColor = this._cur_mat.diffuseColor;\r\n\t\tmat.specularColor = this._cur_mat.specularColor;\r\n\r\n\t\tif (this.materialMode >= 2)\r\n\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS\r\n\r\n\t\tmat.bothSides = this._cur_mat.twoSided;\r\n\r\n\t\tthis._pFinalizeAsset(mat, this._cur_mat.name);\r\n\r\n\t\tthis._materials[this._cur_mat.name] = this._cur_mat;\r\n\t\tthis._cur_mat.material = mat;\r\n\r\n\t\tthis._cur_mat = null;\r\n\t}\r\n\r\n\tprivate readNulTermstring():string\r\n\t{\r\n\t\tvar chr:number /*int*/;\r\n\t\tvar str:string = \"\";\r\n\r\n\t\twhile ((chr = this._byteData.readUnsignedByte()) > 0)\r\n\t\t\tstr += String.fromCharCode(chr);\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\tprivate readTransform():Array<number>\r\n\t{\r\n\t\tvar data:Array<number>;\r\n\r\n\t\tdata = new Array<number>(16);\r\n\r\n\t\t// X axis\r\n\t\tdata[0] = this._byteData.readFloat(); // X\r\n\t\tdata[2] = this._byteData.readFloat(); // Z\r\n\t\tdata[1] = this._byteData.readFloat(); // Y\r\n\t\tdata[3] = 0;\r\n\r\n\t\t// Z axis\r\n\t\tdata[8] = this._byteData.readFloat(); // X\r\n\t\tdata[10] = this._byteData.readFloat(); // Z\r\n\t\tdata[9] = this._byteData.readFloat(); // Y\r\n\t\tdata[11] = 0;\r\n\r\n\t\t// Y Axis\r\n\t\tdata[4] = this._byteData.readFloat(); // X\r\n\t\tdata[6] = this._byteData.readFloat(); // Z\r\n\t\tdata[5] = this._byteData.readFloat(); // Y\r\n\t\tdata[7] = 0;\r\n\r\n\t\t// Translation\r\n\t\tdata[12] = this._byteData.readFloat(); // X\r\n\t\tdata[14] = this._byteData.readFloat(); // Z\r\n\t\tdata[13] = this._byteData.readFloat(); // Y\r\n\t\tdata[15] = 1;\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tprivate readColor():number /*int*/\r\n\t{\r\n\t\tvar cid:number /*int*/;\r\n\t\tvar len:number /*int*/;\r\n\t\tvar r:number /*int*/, g:number /*int*/, b:number /*int*/;\r\n\r\n\t\tcid = this._byteData.readUnsignedShort();\r\n\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\tswitch (cid) {\r\n\t\t\tcase 0x0010: // Floats\r\n\t\t\t\tr = this._byteData.readFloat()*255;\r\n\t\t\t\tg = this._byteData.readFloat()*255;\r\n\t\t\t\tb = this._byteData.readFloat()*255;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0x0011: // 24-bit color\r\n\t\t\t\tr = this._byteData.readUnsignedByte();\r\n\t\t\t\tg = this._byteData.readUnsignedByte();\r\n\t\t\t\tb = this._byteData.readUnsignedByte();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn (r << 16) | (g << 8) | b;\r\n\t}\r\n}\r\n\r\nexport = Max3DSParser;\r\n\r\n/**\r\n *\r\n */\r\nclass FaceVO\r\n{\r\n\tpublic a:number /*int*/;\r\n\tpublic b:number /*int*/;\r\n\tpublic c:number /*int*/;\r\n\tpublic smoothGroup:number /*int*/;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass MaterialVO\r\n{\r\n\tpublic name:string;\r\n\tpublic ambientColor:number /*int*/;\r\n\tpublic diffuseColor:number /*int*/;\r\n\tpublic specularColor:number /*int*/;\r\n\tpublic twoSided:boolean;\r\n\tpublic colorMap:TextureVO;\r\n\tpublic specularMap:TextureVO;\r\n\tpublic material:MaterialBase;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass ObjectVO\r\n{\r\n\tpublic name:string;\r\n\tpublic type:string;\r\n\tpublic pivotX:number;\r\n\tpublic pivotY:number;\r\n\tpublic pivotZ:number;\r\n\tpublic transform:Array<number>;\r\n\tpublic verts:Array<number>;\r\n\tpublic indices:Array<number> /*int*/;\r\n\tpublic uvs:Array<number>;\r\n\tpublic materialFaces:Object;\r\n\tpublic materials:Array<string>;\r\n\tpublic smoothingGroups:Array<number> /*int*/;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass TextureVO\r\n{\r\n\tpublic url:string;\r\n\tpublic texture:Texture2DBase;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass VertexVO\r\n{\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n\tpublic z:number;\r\n\tpublic u:number;\r\n\tpublic v:number;\r\n\tpublic normal:Vector3D;\r\n\tpublic tangent:Vector3D;\r\n}","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-renderergl/lib/managers/DefaultMaterialManager\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\r\n\r\n/**\r\n * OBJParser provides a parser for the OBJ data type.\r\n */\r\nclass OBJParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _charIndex:number;\r\n\tprivate _oldIndex:number;\r\n\tprivate _stringLength:number;\r\n\tprivate _currentObject:ObjectGroup;\r\n\tprivate _currentGroup:Group;\r\n\tprivate _currentMaterialGroup:MaterialGroup;\r\n\tprivate _objects:Array<ObjectGroup>;\r\n\tprivate _materialIDs:string[];\r\n\tprivate _materialLoaded:Array<LoadedMaterial>;\r\n\tprivate _materialSpecularData:Array<SpecularData>;\r\n\tprivate _meshes:Array<Mesh>;\r\n\tprivate _lastMtlID:string;\r\n\tprivate _objectIndex:number;\r\n\tprivate _realIndices;\r\n\tprivate _vertexIndex:number;\r\n\tprivate _vertices:Array<Vertex>;\r\n\tprivate _vertexNormals:Array<Vertex>;\r\n\tprivate _uvs:Array<UV>;\r\n\tprivate _scale:number;\r\n\tprivate _mtlLib:boolean;\r\n\tprivate _mtlLibLoaded:boolean = true;\r\n\tprivate _activeMaterialID:string = \"\";\r\n\r\n\t/**\r\n\t * Creates a new OBJParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(scale:number = 1)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._scale = scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Scaling factor applied directly to vertices data\r\n\t * @param value The scaling factor.\r\n\t */\r\n\tpublic set scale(value:number)\r\n\t{\r\n\t\tthis._scale = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"obj\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\tvar content:string = ParserUtils.toString(data);\r\n\t\tvar hasV:boolean = false;\r\n\t\tvar hasF:boolean = false;\r\n\r\n\t\tif (content) {\r\n\t\t\thasV = content.indexOf(\"\\nv \") != -1;\r\n\t\t\thasF = content.indexOf(\"\\nf \") != -1;\r\n\t\t}\r\n\r\n\t\treturn hasV && hasF;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.id == 'mtl') {\r\n\t\t\tvar str:string = ParserUtils.toString(resourceDependency.data);\r\n\t\t\tthis.parseMtl(str);\r\n\r\n\t\t} else {\r\n\t\t\tvar asset:IAsset;\r\n\r\n\t\t\tif (resourceDependency.assets.length != 1) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tasset = resourceDependency.assets[0];\r\n\r\n\t\t\tif (asset.assetType == AssetType.TEXTURE) {\r\n\r\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\t\tlm.materialID = resourceDependency.id;\r\n\t\t\t\tlm.texture = <Texture2DBase> asset;\r\n\r\n\t\t\t\tthis._materialLoaded.push(lm);\r\n\r\n\t\t\t\tif (this._meshes.length > 0) {\r\n\t\t\t\t\tthis.applyMaterial(lm);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.id == \"mtl\") {\r\n\t\t\tthis._mtlLib = false;\r\n\t\t\tthis._mtlLibLoaded = false;\r\n\t\t} else {\r\n\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\tlm.materialID = resourceDependency.id;\r\n\t\t\tthis._materialLoaded.push(lm);\r\n\t\t}\r\n\r\n\t\tif (this._meshes.length > 0)\r\n\t\t\tthis.applyMaterial(lm);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar line:string;\r\n\t\tvar creturn:string = String.fromCharCode(10);\r\n\t\tvar trunk;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\t// Merge linebreaks that are immediately preceeded by\r\n\t\t\t// the \"escape\" backward slash into single lines.\r\n\t\t\tthis._textData = this._textData.replace(/\\\\[\\r\\n]+\\s*/gm, ' ');\r\n\t\t}\r\n\r\n\t\tif (this._textData.indexOf(creturn) == -1)\r\n\t\t\tcreturn = String.fromCharCode(13);\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._startedParsing = true;\r\n\t\t\tthis._vertices = new Array<Vertex>();\r\n\t\t\tthis._vertexNormals = new Array<Vertex>();\r\n\t\t\tthis._materialIDs = new Array<string>();\r\n\t\t\tthis._materialLoaded = new Array<LoadedMaterial>();\r\n\t\t\tthis._meshes = new Array<Mesh>();\r\n\t\t\tthis._uvs = new Array<UV>();\r\n\t\t\tthis._stringLength = this._textData.length;\r\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, 0);\r\n\t\t\tthis._oldIndex = 0;\r\n\t\t\tthis._objects = new Array<ObjectGroup>();\r\n\t\t\tthis._objectIndex = 0;\r\n\t\t}\r\n\r\n\t\twhile (this._charIndex < this._stringLength && this._pHasTime()) {\r\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, this._oldIndex);\r\n\r\n\t\t\tif (this._charIndex == -1)\r\n\t\t\t\tthis._charIndex = this._stringLength;\r\n\r\n\t\t\tline = this._textData.substring(this._oldIndex, this._charIndex);\r\n\t\t\tline = line.split('\\r').join(\"\");\r\n\t\t\tline = line.replace(\"  \", \" \");\r\n\t\t\ttrunk = line.split(\" \");\r\n\t\t\tthis._oldIndex = this._charIndex + 1;\r\n\t\t\tthis.parseLine(trunk);\r\n\r\n\t\t\t// If whatever was parsed on this line resulted in the\r\n\t\t\t// parsing being paused to retrieve dependencies, break\r\n\t\t\t// here and do not continue parsing until un-paused.\r\n\t\t\tif (this.parsingPaused) {\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._charIndex >= this._stringLength) {\r\n\r\n\t\t\tif (this._mtlLib && !this._mtlLibLoaded) {\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\r\n\t\t\tthis.translate();\r\n\t\t\tthis.applyMaterials();\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a single line in the OBJ file.\r\n\t */\r\n\tprivate parseLine(trunk)\r\n\t{\r\n\t\tswitch (trunk[0]) {\r\n\r\n\t\t\tcase \"mtllib\":\r\n\r\n\t\t\t\tthis._mtlLib = true;\r\n\t\t\t\tthis._mtlLibLoaded = false;\r\n\t\t\t\tthis.loadMtl(trunk[1]);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"g\":\r\n\r\n\t\t\t\tthis.createGroup(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"o\":\r\n\r\n\t\t\t\tthis.createObject(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"usemtl\":\r\n\r\n\t\t\t\tif (this._mtlLib) {\r\n\r\n\t\t\t\t\tif (!trunk[1])\r\n\t\t\t\t\t\ttrunk[1] = \"def000\";\r\n\r\n\t\t\t\t\tthis._materialIDs.push(trunk[1]);\r\n\t\t\t\t\tthis._activeMaterialID = trunk[1];\r\n\r\n\t\t\t\t\tif (this._currentGroup)\r\n\t\t\t\t\t\tthis._currentGroup.materialID = this._activeMaterialID;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"v\":\r\n\r\n\t\t\t\tthis.parseVertex(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"vt\":\r\n\r\n\t\t\t\tthis.parseUV(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"vn\":\r\n\r\n\t\t\t\tthis.parseVertexNormal(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"f\":\r\n\r\n\t\t\t\tthis.parseFace(trunk);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the parsed data into an Away3D scenegraph structure\r\n\t */\r\n\tprivate translate()\r\n\t{\r\n\t\tfor (var objIndex:number = 0; objIndex < this._objects.length; ++objIndex) {\r\n\t\t\tvar groups:Array<Group> = this._objects[objIndex].groups;\r\n\t\t\tvar numGroups:number = groups.length;\r\n\t\t\tvar materialGroups:Array<MaterialGroup>;\r\n\t\t\tvar numMaterialGroups:number;\r\n\t\t\tvar geometry:Geometry;\r\n\t\t\tvar mesh:Mesh;\r\n\r\n\t\t\tvar m:number;\r\n\t\t\tvar sm:number;\r\n\t\t\tvar bmMaterial:MethodMaterial;\r\n\r\n\t\t\tfor (var g:number = 0; g < numGroups; ++g) {\r\n\t\t\t\tgeometry = new Geometry();\r\n\t\t\t\tmaterialGroups = groups[g].materialGroups;\r\n\t\t\t\tnumMaterialGroups = materialGroups.length;\r\n\r\n\t\t\t\tfor (m = 0; m < numMaterialGroups; ++m)\r\n\t\t\t\t\tthis.translateMaterialGroup(materialGroups[m], geometry);\r\n\r\n\t\t\t\tif (geometry.subGeometries.length == 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Finalize and force type-based name\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> geometry);//, \"\");\r\n\r\n\t\t\t\tbmMaterial = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\r\n\t\t\t\t//check for multipass\r\n\t\t\t\tif (this.materialMode >= 2)\r\n\t\t\t\t\tbmMaterial.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\tmesh = new Mesh(geometry, bmMaterial);\r\n\r\n\t\t\t\tif (this._objects[objIndex].name) {\r\n\t\t\t\t\t// this is a full independent object ('o' tag in OBJ file)\r\n\t\t\t\t\tmesh.name = this._objects[objIndex].name;\r\n\r\n\t\t\t\t} else if (groups[g].name) {\r\n\r\n\t\t\t\t\t// this is a group so the sub groups contain the actual mesh object names ('g' tag in OBJ file)\r\n\t\t\t\t\tmesh.name = groups[g].name;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// No name stored. Use empty string which will force it\r\n\t\t\t\t\t// to be overridden by finalizeAsset() to type default.\r\n\t\t\t\t\tmesh.name = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._meshes.push(mesh);\r\n\r\n\t\t\t\tif (groups[g].materialID != \"\")\r\n\t\t\t\t\tbmMaterial.name = groups[g].materialID + \"~\" + mesh.name; else\r\n\t\t\t\t\tbmMaterial.name = this._lastMtlID + \"~\" + mesh.name;\r\n\r\n\t\t\t\tif (mesh.subMeshes.length > 1) {\r\n\t\t\t\t\tfor (sm = 1; sm < mesh.subMeshes.length; ++sm)\r\n\t\t\t\t\t\tmesh.subMeshes[sm].material = bmMaterial;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> mesh);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Translates an obj's material group to a subgeometry.\r\n\t * @param materialGroup The material group data to convert.\r\n\t * @param geometry The Geometry to contain the converted SubGeometry.\r\n\t */\r\n\tprivate translateMaterialGroup(materialGroup:MaterialGroup, geometry:Geometry)\r\n\t{\r\n\t\tvar faces:Array<FaceData> = materialGroup.faces;\r\n\t\tvar face:FaceData;\r\n\t\tvar numFaces:number = faces.length;\r\n\t\tvar numVerts:number;\r\n\t\tvar sub:TriangleSubGeometry;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\tvar normals:Array<number> = new Array<number>();\r\n\t\tvar indices:Array<number> /*uint*/ = new Array<number>();\r\n\r\n\t\tthis._realIndices = [];\r\n\t\tthis._vertexIndex = 0;\r\n\r\n\t\tvar j:number;\r\n\t\tfor (var i:number = 0; i < numFaces; ++i) {\r\n\r\n\t\t\tface = faces[i];\r\n\t\t\tnumVerts = face.indexIds.length - 1;\r\n\r\n\t\t\tfor (j = 1; j < numVerts; ++j) {\r\n\r\n\t\t\t\tthis.translateVertexData(face, j, vertices, uvs, indices, normals);\r\n\t\t\t\tthis.translateVertexData(face, 0, vertices, uvs, indices, normals);\r\n\t\t\t\tthis.translateVertexData(face, j + 1, vertices, uvs, indices, normals);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (vertices.length > 0) {\r\n\t\t\tsub = new TriangleSubGeometry(true);\r\n\t\t\tsub.autoDeriveNormals = normals.length? false : true;\r\n\t\t\tsub.updateIndices(indices);\r\n\t\t\tsub.updatePositions(vertices);\r\n\t\t\tsub.updateVertexNormals(normals);\r\n\t\t\tsub.updateUVs(uvs);\r\n\r\n\t\t\tgeometry.addSubGeometry(sub);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate translateVertexData(face:FaceData, vertexIndex:number, vertices:Array<number>, uvs:Array<number>, indices:Array<number> /*uint*/, normals:Array<number>)\r\n\t{\r\n\t\tvar index:number;\r\n\t\tvar vertex:Vertex;\r\n\t\tvar vertexNormal:Vertex;\r\n\t\tvar uv:UV;\r\n\r\n\t\tif (!this._realIndices[face.indexIds[vertexIndex]]) {\r\n\r\n\t\t\tindex = this._vertexIndex;\r\n\t\t\tthis._realIndices[face.indexIds[vertexIndex]] = ++this._vertexIndex;\r\n\t\t\tvertex = this._vertices[face.vertexIndices[vertexIndex] - 1];\r\n\t\t\tvertices.push(vertex.x*this._scale, vertex.y*this._scale, vertex.z*this._scale);\r\n\r\n\t\t\tif (face.normalIndices.length > 0) {\r\n\t\t\t\tvertexNormal = this._vertexNormals[face.normalIndices[vertexIndex] - 1];\r\n\t\t\t\tnormals.push(vertexNormal.x, vertexNormal.y, vertexNormal.z);\r\n\t\t\t}\r\n\r\n\t\t\tif (face.uvIndices.length > 0) {\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tuv = this._uvs[face.uvIndices[vertexIndex] - 1];\r\n\t\t\t\t\tuvs.push(uv.u, uv.v);\r\n\r\n\t\t\t\t} catch (e) {\r\n\r\n\t\t\t\t\tswitch (vertexIndex) {\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\tuvs.push(0, 1);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\tuvs.push(.5, 0);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\tuvs.push(1, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tindex = this._realIndices[face.indexIds[vertexIndex]] - 1;\r\n\t\t}\r\n\r\n\t\tindices.push(index);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new object group.\r\n\t * @param trunk The data block containing the object tag and its parameters\r\n\t */\r\n\tprivate createObject(trunk)\r\n\t{\r\n\t\tthis._currentGroup = null;\r\n\t\tthis._currentMaterialGroup = null;\r\n\t\tthis._objects.push(this._currentObject = new ObjectGroup());\r\n\r\n\t\tif (trunk)\r\n\t\t\tthis._currentObject.name = trunk[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new group.\r\n\t * @param trunk The data block containing the group tag and its parameters\r\n\t */\r\n\tprivate createGroup(trunk)\r\n\t{\r\n\t\tif (!this._currentObject)\r\n\t\t\tthis.createObject(null);\r\n\t\tthis._currentGroup = new Group();\r\n\r\n\t\tthis._currentGroup.materialID = this._activeMaterialID;\r\n\r\n\t\tif (trunk)\r\n\t\t\tthis._currentGroup.name = trunk[1];\r\n\t\tthis._currentObject.groups.push(this._currentGroup);\r\n\r\n\t\tthis.createMaterialGroup(null);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new material group.\r\n\t * @param trunk The data block containing the material tag and its parameters\r\n\t */\r\n\tprivate createMaterialGroup(trunk)\r\n\t{\r\n\t\tthis._currentMaterialGroup = new MaterialGroup();\r\n\t\tif (trunk)\r\n\t\t\tthis._currentMaterialGroup.url = trunk[1];\r\n\t\tthis._currentGroup.materialGroups.push(this._currentMaterialGroup);\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next vertex coordinates.\r\n\t * @param trunk The data block containing the vertex tag and its parameters\r\n\t */\r\n\tprivate parseVertex(trunk)\r\n\t{\r\n\t\t//for the very rare cases of other delimiters/charcodes seen in some obj files\r\n\r\n\t\tvar v1:number, v2:number , v3:number;\r\n\t\tif (trunk.length > 4) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\r\n\t\t\tv1 = <number> nTrunk[0];\r\n\t\t\tv2 = <number> nTrunk[1];\r\n\t\t\tv3 = <number> -nTrunk[2];\r\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\r\n\r\n\t\t} else {\r\n\t\t\tv1 = <number> parseFloat(trunk[1]);\r\n\t\t\tv2 = <number> parseFloat(trunk[2]);\r\n\t\t\tv3 = <number> -parseFloat(trunk[3]);\r\n\r\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next uv coordinates.\r\n\t * @param trunk The data block containing the uv tag and its parameters\r\n\t */\r\n\tprivate parseUV(trunk)\r\n\t{\r\n\t\tif (trunk.length > 3) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\t\t\tthis._uvs.push(new UV(nTrunk[0], 1 - nTrunk[1]));\r\n\r\n\t\t} else {\r\n\t\t\tthis._uvs.push(new UV(parseFloat(trunk[1]), 1 - parseFloat(trunk[2])));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next vertex normal coordinates.\r\n\t * @param trunk The data block containing the vertex normal tag and its parameters\r\n\t */\r\n\tprivate parseVertexNormal(trunk)\r\n\t{\r\n\t\tif (trunk.length > 4) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\t\t\tthis._vertexNormals.push(new Vertex(nTrunk[0], nTrunk[1], -nTrunk[2]));\r\n\r\n\t\t} else {\r\n\t\t\tthis._vertexNormals.push(new Vertex(parseFloat(trunk[1]), parseFloat(trunk[2]), -parseFloat(trunk[3])));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next face's indices.\r\n\t * @param trunk The data block containing the face tag and its parameters\r\n\t */\r\n\tprivate parseFace(trunk)\r\n\t{\r\n\t\tvar len:number = trunk.length;\r\n\t\tvar face:FaceData = new FaceData();\r\n\r\n\t\tif (!this._currentGroup) {\r\n\t\t\tthis.createGroup(null);\r\n\t\t}\r\n\r\n\t\tvar indices;\r\n\t\tfor (var i:number = 1; i < len; ++i) {\r\n\r\n\t\t\tif (trunk[i] == \"\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tindices = trunk[i].split(\"/\");\r\n\t\t\tface.vertexIndices.push(this.parseIndex(parseInt(indices[0]), this._vertices.length));\r\n\r\n\t\t\tif (indices[1] && String(indices[1]).length > 0)\r\n\t\t\t\tface.uvIndices.push(this.parseIndex(parseInt(indices[1]), this._uvs.length));\r\n\r\n\t\t\tif (indices[2] && String(indices[2]).length > 0)\r\n\t\t\t\tface.normalIndices.push(this.parseIndex(parseInt(indices[2]), this._vertexNormals.length));\r\n\r\n\t\t\tface.indexIds.push(trunk[i]);\r\n\t\t}\r\n\r\n\t\tthis._currentMaterialGroup.faces.push(face);\r\n\t}\r\n\r\n\t/**\r\n\t * This is a hack around negative face coords\r\n\t */\r\n\tprivate parseIndex(index:number, length:number):number\r\n\t{\r\n\t\tif (index < 0)\r\n\t\t\treturn index + length + 1; else\r\n\t\t\treturn index;\r\n\t}\r\n\r\n\tprivate parseMtl(data:string)\r\n\t{\r\n\t\tvar materialDefinitions = data.split('newmtl');\r\n\t\tvar lines;\r\n\t\tvar trunk;\r\n\t\tvar j:number;\r\n\r\n\t\tvar basicSpecularMethod:SpecularBasicMethod;\r\n\t\tvar useSpecular:boolean;\r\n\t\tvar useColor:boolean;\r\n\t\tvar diffuseColor:number;\r\n\t\tvar color:number;\r\n\t\tvar specularColor:number;\r\n\t\tvar specular:number;\r\n\t\tvar alpha:number;\r\n\t\tvar mapkd:string;\r\n\r\n\t\tfor (var i:number = 0; i < materialDefinitions.length; ++i) {\r\n\r\n\r\n\t\t\tlines = (materialDefinitions[i].split('\\r')).join(\"\").split('\\n');\r\n\t\t\t//lines = (materialDefinitions[i].split('\\r') as Array).join(\"\").split('\\n');\r\n\r\n\t\t\tif (lines.length == 1)\r\n\t\t\t\tlines = materialDefinitions[i].split(String.fromCharCode(13));\r\n\r\n\t\t\tdiffuseColor = color = specularColor = 0xFFFFFF;\r\n\t\t\tspecular = 0;\r\n\t\t\tuseSpecular = false;\r\n\t\t\tuseColor = false;\r\n\t\t\talpha = 1;\r\n\t\t\tmapkd = \"\";\r\n\r\n\t\t\tfor (j = 0; j < lines.length; ++j) {\r\n\r\n\t\t\t\tlines[j] = lines[j].replace(/\\s+$/, \"\");\r\n\r\n\t\t\t\tif (lines[j].substring(0, 1) != \"#\" && (j == 0 || lines[j] != \"\")) {\r\n\t\t\t\t\ttrunk = lines[j].split(\" \");\r\n\r\n\t\t\t\t\tif (String(trunk[0]).charCodeAt(0) == 9 || String(trunk[0]).charCodeAt(0) == 32)\r\n\t\t\t\t\t\ttrunk[0] = trunk[0].substring(1, trunk[0].length);\r\n\r\n\t\t\t\t\tif (j == 0) {\r\n\t\t\t\t\t\tthis._lastMtlID = trunk.join(\"\");\r\n\t\t\t\t\t\tthis._lastMtlID = (this._lastMtlID == \"\")? \"def000\" : this._lastMtlID;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tswitch (trunk[0]) {\r\n\r\n\t\t\t\t\t\t\tcase \"Ka\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3])))\r\n\t\t\t\t\t\t\t\t\tcolor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Ks\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\r\n\t\t\t\t\t\t\t\t\tspecularColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\t\tuseSpecular = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Ns\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\r\n\t\t\t\t\t\t\t\t\tspecular = Number(trunk[1])*0.001;\r\n\t\t\t\t\t\t\t\tif (specular == 0)\r\n\t\t\t\t\t\t\t\t\tuseSpecular = false;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Kd\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\r\n\t\t\t\t\t\t\t\t\tdiffuseColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\t\tuseColor = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"tr\":\r\n\t\t\t\t\t\t\tcase \"d\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\r\n\t\t\t\t\t\t\t\t\talpha = Number(trunk[1]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"map_Kd\":\r\n\t\t\t\t\t\t\t\tmapkd = this.parseMapKdString(trunk);\r\n\t\t\t\t\t\t\t\tmapkd = mapkd.replace(/\\\\/g, \"/\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (mapkd != \"\") {\r\n\r\n\t\t\t\tif (useSpecular) {\r\n\r\n\t\t\t\t\tbasicSpecularMethod = new SpecularBasicMethod();\r\n\t\t\t\t\tbasicSpecularMethod.specularColor = specularColor;\r\n\t\t\t\t\tbasicSpecularMethod.specular = specular;\r\n\r\n\t\t\t\t\tvar specularData:SpecularData = new SpecularData();\r\n\t\t\t\t\tspecularData.alpha = alpha;\r\n\t\t\t\t\tspecularData.basicSpecularMethod = basicSpecularMethod;\r\n\t\t\t\t\tspecularData.materialID = this._lastMtlID;\r\n\r\n\t\t\t\t\tif (!this._materialSpecularData)\r\n\t\t\t\t\t\tthis._materialSpecularData = new Array<SpecularData>();\r\n\r\n\t\t\t\t\tthis._materialSpecularData.push(specularData);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pAddDependency(this._lastMtlID, new URLRequest(mapkd));\r\n\r\n\t\t\t} else if (useColor && !isNaN(color)) {\r\n\r\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\t\tlm.materialID = this._lastMtlID;\r\n\r\n\t\t\t\tif (alpha == 0)\r\n\t\t\t\t\tconsole.log(\"Warning: an alpha value of 0 was found in mtl color tag (Tr or d) ref:\" + this._lastMtlID + \", mesh(es) using it will be invisible!\");\r\n\r\n\t\t\t\tvar cm:MethodMaterial;\r\n\r\n\t\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\t\tcm = new MethodMaterial(color);\r\n\r\n\t\t\t\t\tvar colorMat:MethodMaterial = <MethodMaterial> cm;\r\n\r\n\t\t\t\t\tcolorMat.alpha = alpha;\r\n\t\t\t\t\tcolorMat.diffuseColor = diffuseColor;\r\n\t\t\t\t\tcolorMat.repeat = true;\r\n\r\n\t\t\t\t\tif (useSpecular) {\r\n\t\t\t\t\t\tcolorMat.specularColor = specularColor;\r\n\t\t\t\t\t\tcolorMat.specular = specular;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcm = new MethodMaterial(color);\r\n\t\t\t\t\tcm.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\tvar colorMultiMat:MethodMaterial = <MethodMaterial> cm;\r\n\r\n\r\n\t\t\t\t\tcolorMultiMat.diffuseColor = diffuseColor;\r\n\t\t\t\t\tcolorMultiMat.repeat = true;\r\n\r\n\t\t\t\t\tif (useSpecular) {\r\n\t\t\t\t\t\tcolorMultiMat.specularColor = specularColor;\r\n\t\t\t\t\t\tcolorMultiMat.specular = specular;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlm.cm = cm;\r\n\r\n\t\t\t\tthis._materialLoaded.push(lm);\r\n\r\n\t\t\t\tif (this._meshes.length > 0)\r\n\t\t\t\t\tthis.applyMaterial(lm);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._mtlLibLoaded = true;\r\n\t}\r\n\r\n\tprivate parseMapKdString(trunk):string\r\n\t{\r\n\t\tvar url:string = \"\";\r\n\t\tvar i:number;\r\n\t\tvar breakflag:boolean;\r\n\r\n\t\tfor (i = 1; i < trunk.length;) {\r\n\t\t\tswitch (trunk[i]) {\r\n\t\t\t\tcase \"-blendu\":\r\n\t\t\t\tcase \"-blendv\":\r\n\t\t\t\tcase \"-cc\":\r\n\t\t\t\tcase \"-clamp\":\r\n\t\t\t\tcase \"-texres\":\r\n\t\t\t\t\ti += 2; //Skip ahead 1 attribute\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"-mm\":\r\n\t\t\t\t\ti += 3; //Skip ahead 2 attributes\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"-o\":\r\n\t\t\t\tcase \"-s\":\r\n\t\t\t\tcase \"-t\":\r\n\t\t\t\t\ti += 4; //Skip ahead 3 attributes\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreakflag = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (breakflag)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t//Reconstruct URL/filename\r\n\t\tfor (i; i < trunk.length; i++) {\r\n\t\t\turl += trunk[i];\r\n\t\t\turl += \" \";\r\n\t\t}\r\n\r\n\t\t//Remove the extraneous space and/or newline from the right side\r\n\t\turl = url.replace(/\\s+$/, \"\");\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\tprivate loadMtl(mtlurl:string)\r\n\t{\r\n\t\t// Add raw-data dependency to queue and load dependencies now,\r\n\t\t// which will pause the parsing in the meantime.\r\n\t\tthis._pAddDependency('mtl', new URLRequest(mtlurl), true);\r\n\t\tthis._pPauseAndRetrieveDependencies();//\r\n\t}\r\n\r\n\tprivate applyMaterial(lm:LoadedMaterial)\r\n\t{\r\n\t\tvar decomposeID;\r\n\t\tvar mesh:Mesh;\r\n\t\tvar tm:MethodMaterial;\r\n\t\tvar j:number;\r\n\t\tvar specularData:SpecularData;\r\n\r\n\t\tfor (var i:number = 0; i < this._meshes.length; ++i) {\r\n\t\t\tmesh = this._meshes[i];\r\n\t\t\tdecomposeID = mesh.material.name.split(\"~\");\r\n\r\n\t\t\tif (decomposeID[0] == lm.materialID) {\r\n\r\n\t\t\t\tif (lm.cm) {\r\n\t\t\t\t\tif (mesh.material)\r\n\t\t\t\t\t\tmesh.material = null;\r\n\t\t\t\t\tmesh.material = lm.cm;\r\n\r\n\t\t\t\t} else if (lm.texture) {\r\n\t\t\t\t\tif (this.materialMode < 2) { // if materialMode is 0 or 1, we create a SinglePass\r\n\t\t\t\t\t\ttm = <MethodMaterial > mesh.material;\r\n\r\n\t\t\t\t\t\ttm.texture = lm.texture;\r\n\t\t\t\t\t\ttm.color = lm.color;\r\n\t\t\t\t\t\ttm.alpha = lm.alpha;\r\n\t\t\t\t\t\ttm.repeat = true;\r\n\r\n\t\t\t\t\t\tif (lm.specularMethod) {\r\n\r\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\r\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\r\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\r\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\r\n\t\t\t\t\t\t\ttm.specularMethod = null;\r\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\r\n\r\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\r\n\r\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\r\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\r\n\r\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\r\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\r\n\t\t\t\t\t\t\t\t\ttm.alpha = specularData.alpha;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else { //if materialMode==2 this is a MultiPassTexture\r\n\t\t\t\t\t\ttm = <MethodMaterial> mesh.material;\r\n\t\t\t\t\t\ttm.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\t\ttm.texture = lm.texture;\r\n\t\t\t\t\t\ttm.color = lm.color;\r\n\t\t\t\t\t\ttm.repeat = true;\r\n\r\n\t\t\t\t\t\tif (lm.specularMethod) {\r\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\r\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\r\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\r\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\r\n\t\t\t\t\t\t\ttm.specularMethod = null;\r\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\r\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\r\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\r\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\r\n\r\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\r\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmesh.material.name = decomposeID[1]? decomposeID[1] : decomposeID[0];\r\n\t\t\t\tthis._meshes.splice(i, 1);\r\n\t\t\t\t--i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lm.cm || tm)\r\n\t\t\tthis._pFinalizeAsset(lm.cm || tm);\r\n\t}\r\n\r\n\tprivate applyMaterials()\r\n\t{\r\n\t\tif (this._materialLoaded.length == 0)\r\n\t\t\treturn;\r\n\r\n\t\tfor (var i:number = 0; i < this._materialLoaded.length; ++i)\r\n\t\t\tthis.applyMaterial(this._materialLoaded[i]);\r\n\t}\r\n}\r\n\r\nexport = OBJParser;\r\n\r\nclass ObjectGroup\r\n{\r\n\tpublic name:string;\r\n\tpublic groups:Group[] = new Array<Group>();\r\n}\r\n\r\nclass Group\r\n{\r\n\tpublic name:string;\r\n\tpublic materialID:string;\r\n\tpublic materialGroups:MaterialGroup[] = new Array<MaterialGroup>();\r\n}\r\n\r\nclass MaterialGroup\r\n{\r\n\tpublic url:string;\r\n\tpublic faces:FaceData[] = new Array<FaceData>();\r\n}\r\n\r\nclass SpecularData\r\n{\r\n\tpublic materialID:string;\r\n\tpublic basicSpecularMethod:SpecularBasicMethod;\r\n\tpublic color:number = 0xFFFFFF;\r\n\tpublic alpha:number = 1;\r\n}\r\n\r\nclass LoadedMaterial\r\n{\r\n\tpublic materialID:string;\r\n\tpublic texture:Texture2DBase;\r\n\tpublic cm:MaterialBase;\r\n\tpublic specularMethod:SpecularBasicMethod;\r\n\tpublic color:number = 0xFFFFFF;\r\n\tpublic alpha:number = 1;\r\n}\r\n\r\nclass FaceData\r\n{\r\n\tpublic vertexIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic uvIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic normalIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic indexIds:string[] = new Array<string>(); // used for real index lookups\r\n}\r\n\r\n/**\r\n* Texture coordinates value object.\r\n*/\r\nclass UV\r\n{\r\n\tprivate _u:number;\r\n\tprivate _v:number;\r\n\r\n\t/**\r\n\t * Creates a new <code>UV</code> object.\r\n\t *\r\n\t * @param    u        [optional]    The horizontal coordinate of the texture value. Defaults to 0.\r\n\t * @param    v        [optional]    The vertical coordinate of the texture value. Defaults to 0.\r\n\t */\r\n\tconstructor(u:number = 0, v:number = 0)\r\n\t{\r\n\t\tthis._u = u;\r\n\t\tthis._v = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the vertical coordinate of the texture value.\r\n\t */\r\n\tpublic get v():number\r\n\t{\r\n\t\treturn this._v;\r\n\t}\r\n\r\n\tpublic set v(value:number)\r\n\t{\r\n\t\tthis._v = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the horizontal coordinate of the texture value.\r\n\t */\r\n\tpublic get u():number\r\n\t{\r\n\t\treturn this._u;\r\n\t}\r\n\r\n\tpublic set u(value:number)\r\n\t{\r\n\t\tthis._u = value;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new UV value Object\r\n\t */\r\n\tpublic clone():UV\r\n\t{\r\n\t\treturn new UV(this._u, this._v);\r\n\t}\r\n\r\n\t/**\r\n\t * returns the value object as a string for trace/debug purpose\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn this._u + \",\" + this._v;\r\n\t}\r\n}\r\n\r\nclass Vertex\r\n{\r\n\tprivate _x:number;\r\n\tprivate _y:number;\r\n\tprivate _z:number;\r\n\tprivate _index:number;\r\n\r\n\t/**\r\n\t * Creates a new <code>Vertex</code> value object.\r\n\t *\r\n\t * @param    x            [optional]    The x value. Defaults to 0.\r\n\t * @param    y            [optional]    The y value. Defaults to 0.\r\n\t * @param    z            [optional]    The z value. Defaults to 0.\r\n\t * @param    index        [optional]    The index value. Defaults is NaN.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, index:number = 0)\r\n\t{\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._index = index;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the index of value object\r\n\t * @param    ind        The index\r\n\t */\r\n\tpublic set index(ind:number)\r\n\t{\r\n\t\tthis._index = ind;\r\n\t}\r\n\r\n\tpublic get index():number\r\n\t{\r\n\t\treturn this._index;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the x value of the value object\r\n\t * @param    value        The x value\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tthis._x = value;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the y value of the value object\r\n\t * @param    value        The y value\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tthis._y = value;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the z value of the value object\r\n\t * @param    value        The z value\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(value:number)\r\n\t{\r\n\t\tthis._z = value;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new Vertex value Object\r\n\t */\r\n\tpublic clone():Vertex\r\n\t{\r\n\t\treturn new Vertex(this._x, this._y, this._z);\r\n\t}\r\n}","import AssetLoader\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\n\r\nimport AWDParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWDParser\");\r\nimport Max3DSParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/Max3DSParser\");\r\nimport MD2Parser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/MD2Parser\");\r\nimport OBJParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/OBJParser\");\r\n\r\n/**\r\n *\r\n */\r\nclass Parsers\r\n{\r\n\t/**\r\n\t * A list of all parsers that come bundled with Away3D. Use this to quickly\r\n\t * enable support for all bundled parsers to the file format auto-detection\r\n\t * feature, using any of the enableParsers() methods on loaders, e.g.:\r\n\t *\r\n\t * <code>AssetLibrary.enableParsers(Parsers.ALL_BUNDLED);</code>\r\n\t *\r\n\t * Beware however that this requires all parser classes to be included in the\r\n\t * SWF file, which will add 50-100 kb to the file. When only a limited set of\r\n\t * file formats are used, SWF file size can be saved by adding the parsers\r\n\t * individually using AssetLibrary.enableParser()\r\n\t *\r\n\t * A third way is to specify a parser for each loaded file, thereby bypassing\r\n\t * the auto-detection mechanisms altogether, while at the same time allowing\r\n\t * any properties that are unique to that parser to be set for that load.\r\n\t *\r\n\t * The bundled parsers are:\r\n\t *\r\n\t * <ul>\r\n\t * <li>AC3D (.ac)</li>\r\n\t * <li>Away Data version 1 ASCII and version 2 binary (.awd). AWD1 BSP unsupported</li>\r\n\t * <li>3DMax (.3ds)</li>\r\n\t * <li>DXF (.dxf)</li>\r\n\t * <li>Quake 2 MD2 models (.md2)</li>\r\n\t * <li>Doom 3 MD5 animation clips (.md5anim)</li>\r\n\t * <li>Doom 3 MD5 meshes (.md5mesh)</li>\r\n\t * <li>Wavefront OBJ (.obj)</li>\r\n\t * <li>Collada (.dae)</li>\r\n\t * <li>Images (.jpg, .png)</li>\r\n\t * </ul>\r\n\t *\r\n\t * @see away.library.AssetLibrary.enableParser\r\n\t */\r\n\tpublic static ALL_BUNDLED:Array<Object> = Array<Object>(AWDParser, Max3DSParser, MD2Parser, OBJParser);\r\n\r\n\t/**\r\n\t * Short-hand function to enable all bundled parsers for auto-detection. In practice,\r\n\t * this is the same as invoking enableParsers(Parsers.ALL_BUNDLED) on any of the\r\n\t * loader classes SingleFileLoader, AssetLoader, AssetLibrary or Loader3D.\r\n\t *\r\n\t * See notes about file size in the documentation for the ALL_BUNDLED constant.\r\n\t *\r\n\t * @see away.parsers.Parsers.ALL_BUNDLED\r\n\t */\r\n\tpublic static enableAllBundled():void\r\n\t{\r\n\t\tAssetLoader.enableParsers(Parsers.ALL_BUNDLED);\r\n\t}\r\n}\r\n\r\nexport = Parsers;"],"sourceRoot":"./"}