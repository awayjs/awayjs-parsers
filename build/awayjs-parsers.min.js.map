{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase.ts",
    "awayjs-parsers.js",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBlock.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDProperties.ts",
    "awayjs-parsers/lib/AWD3Parser.ts",
    "awayjs-parsers/lib/AWDParser.ts",
    "awayjs-parsers/lib/MD2Parser.ts",
    "awayjs-parsers/lib/MD5AnimParser.ts",
    "awayjs-parsers/lib/MD5MeshParser.ts",
    "awayjs-parsers/lib/Max3DSParser.ts",
    "awayjs-parsers/lib/OBJParser.ts",
    "awayjs-parsers/lib/Parsers.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase",
    "module",
    "AbstractMethodError",
    "AWDAssetParserBase",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "this",
    "_awd_file_data",
    "set",
    "awd_file_data",
    "enumerable",
    "configurable",
    "parseFromBytes",
    "awayjs-core/lib/errors/AbstractMethodError",
    "undefined",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers",
    "GeometryAWDParser",
    "PrefabAWDParser",
    "DisplayObjectContainerAWDParser",
    "MeshAWDParser",
    "BillboardAWDParser",
    "Single2DTextureAWDParser",
    "CameraAWDParser",
    "SingleCubeTextureAWDParser",
    "LightAWDParser",
    "LightPickerAWDParser",
    "MaterialAWDParser",
    "MovieClipAWDParser",
    "ShadowMethodAWDParser",
    "SharedMethodAWDParser",
    "SkeletonAnimClipAWDParser",
    "SkeletonAWDParser",
    "SkeletonPoseAWDParser",
    "SkyboxAWDParser",
    "TesselatedFontAWDParser",
    "TextfieldAWDParser",
    "TextformatAWDParser",
    "VertexAnimationSetAWDParser",
    "VertexAnimClipAWDParser",
    "CommandAWDParser",
    "MetadataAWDParser",
    "BlockNameSpaceAWDParser",
    "AnimatorAWDParser",
    "AudioAWDParser",
    "AWDBlockParsers",
    "_supported_asset_blocks",
    "_all_block_parsers",
    "Array",
    "add_block_parser",
    "block_parser",
    "block_types",
    "push",
    "init_parser",
    "file_data",
    "parseAsset",
    "type",
    "this_parser",
    "awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser",
    "__extends",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "AWDBlockParserBase",
    "VertexAnimator",
    "SkeletonAnimator",
    "AWD3Utils",
    "_super",
    "animSetBlockAdress",
    "targetAnimationSet",
    "cur_block",
    "name",
    "parseVarStr",
    "newBlockBytes",
    "readUnsignedShort",
    "props",
    "parseProperties",
    1,
    "BADDR",
    "readUnsignedInt",
    "targetMeshLength",
    "meshAdresses",
    "activeState",
    "autoplay",
    "readUnsignedByte",
    "parseUserAttributes",
    "returnedArray",
    "targetMeshes",
    "targetMesh",
    "getAssetByID",
    "thisAnimator",
    "skeleton",
    "animator",
    "data",
    "debug",
    "console",
    "log",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "ByteArray",
    "data_len",
    "url",
    "readUTFBytes",
    "dependencies_urls",
    "readBytes",
    "dependencies_data",
    "state",
    "BLOCKSTATE_LOAD_DEPENDENICES",
    "audioStylesNames",
    "awayjs-core/lib/utils/ByteArray",
    "Billboard",
    "BasicMaterial",
    "data_id",
    "mat",
    "bothSides",
    "billboard",
    "extra",
    "awayjs-display/lib/entities/Billboard",
    "awayjs-display/lib/materials/BasicMaterial",
    "BLOCKSTATE_NO_ASSET",
    "id",
    "nameSpaceString",
    "Camera",
    "PerspectiveProjection",
    "OrthographicProjection",
    "OrthographicOffCenterProjection",
    "Vector3D",
    "CameraAWD3Parser",
    "par_id",
    "mtx",
    "parseMatrix3D",
    "parentName",
    "projection",
    "readShort",
    "projectiontype",
    101,
    "propsNrType",
    102,
    103,
    104,
    "camera",
    "transform",
    "matrix3D",
    "parent",
    "addChild",
    "matrixNrType",
    2,
    3,
    4,
    "UINT8",
    "pivot",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "awayjs-core/lib/projections/OrthographicProjection",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/Camera",
    "hasBlocks",
    "parentObject",
    "targetObject",
    "numCommands",
    "typeCommand",
    "targetID",
    "DisplayObjectContainer",
    "ctr",
    "major_version",
    "minor_version",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "Geometry",
    "CurveSubGeometry",
    "TriangleSubGeometry",
    "geom",
    "num_subs",
    "geoNrType",
    "geoScaleU",
    "geoScaleV",
    "subs_parsed",
    "is_curve_geom",
    "sm_len",
    "sm_end",
    "w_indices",
    "weights",
    "position",
    "subProps",
    "idx",
    "str_ftype",
    "str_type",
    "str_len",
    "str_end",
    "x",
    "y",
    "z",
    "verts",
    "readNumber",
    "accuracyGeo",
    "indices",
    "uvs",
    "normals",
    "idx_pos",
    "idx_curves",
    "idx_uvs",
    "positions",
    "curveData",
    "curve_sub_geom",
    "updateIndices",
    "updatePositions",
    "updateCurves",
    "updateUVs",
    "addSubGeometry",
    "triangle_sub_geom",
    "jointsPerVertex",
    "autoDeriveNormals",
    "autoDeriveUVs",
    "autoDeriveTangents",
    "updateVertexNormals",
    "updateVertexTangents",
    "updateJointWeights",
    "updateJointIndices",
    "scaleU",
    "scaleV",
    "setSubUVs",
    "scaleUV",
    "awayjs-core/lib/data/CurveSubGeometry",
    "awayjs-core/lib/data/Geometry",
    "awayjs-core/lib/data/TriangleSubGeometry",
    "CubeMapShadowMapper",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "PointLight",
    "light",
    "newShadowMapper",
    "lightType",
    "COLOR",
    5,
    6,
    "BOOL",
    7,
    8,
    9,
    10,
    11,
    12,
    "UINT16",
    21,
    22,
    23,
    "shadowMapperType",
    "lightTypes",
    "shadowMapperTypes",
    "radius",
    "fallOff",
    "color",
    "specular",
    "diffuse",
    "ambientColor",
    "ambient",
    "depthMapSize",
    "getDepthSizeFromEnum",
    "shadowMapper",
    "castsShadows",
    "awayjs-display/lib/entities/DirectionalLight",
    "awayjs-display/lib/entities/PointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "StaticLightPicker",
    "numLights",
    "lightsArray",
    "k",
    "lightID",
    "returnedArrayLight",
    "lightsArrayNames",
    "lightPicker",
    "toString",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "MethodMaterialMode",
    "MethodMaterial",
    "DefaultMaterialManager",
    "AmbientEnvMapMethod",
    "DiffuseDepthMethod",
    "DiffuseCelMethod",
    "DiffuseGradientMethod",
    "DiffuseLightMapMethod",
    "DiffuseWrapMethod",
    "NormalSimpleWaterMethod",
    "SpecularFresnelMethod",
    "SpecularAnisotropicMethod",
    "SpecularCelMethod",
    "SpecularPhongMethod",
    "attributes",
    "finalize",
    "num_methods",
    "methods_parsed",
    "normalTexture",
    "specTexture",
    "INT32",
    13,
    "method_type",
    "debugString",
    "tex_addr",
    "texture",
    "getDefaultTexture",
    "alphaThreshold",
    "repeat",
    "UINT32",
    15,
    16,
    17,
    18,
    19,
    20,
    "spezialType",
    "mode",
    "MULTI_PASS",
    "alphaBlending",
    "diftexture",
    "alpha",
    "diffuseTex_addr",
    "diffuseTexture",
    "normalTex_addr",
    "specTex_addr",
    "lightPickerAddr",
    "smooth",
    "mipmap",
    "alphaPremultiplied",
    "blendMode",
    "getBlendModeStringFromEnum",
    "normalMap",
    "specularMap",
    "diffuseColor",
    "gloss",
    "specularColor",
    201,
    202,
    301,
    302,
    401,
    402,
    601,
    602,
    701,
    702,
    801,
    "MTX4x4",
    "fx_method",
    "addEffectMethod",
    "shadow_method",
    "shadowMethod",
    "cubeTex",
    "getDefaultCubeTexture",
    "ambientMethod",
    "diffuseMethod",
    "thisTex",
    "smoothness",
    "specularMethod",
    "fresnelPower",
    "normalReflectance",
    "normalMethod",
    "basic_mat",
    "preserveAlpha",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-methodmaterials/lib/MethodMaterial",
    "awayjs-methodmaterials/lib/MethodMaterialMode",
    "awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseCelMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseDepthMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseGradientMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseWrapMethod",
    "awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod",
    "awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod",
    "awayjs-methodmaterials/lib/methods/SpecularCelMethod",
    "awayjs-methodmaterials/lib/methods/SpecularFresnelMethod",
    "awayjs-methodmaterials/lib/methods/SpecularPhongMethod",
    "Mesh",
    "num_materials",
    "materials_parsed",
    "geoID",
    "materials",
    "materialNames",
    "mat_id",
    "m",
    "mesh",
    "subMeshes",
    "material",
    "Math",
    "min",
    "awayjs-display/lib/entities/Mesh",
    "AWDSTRING",
    "AWDBitFlags",
    "ColorTransform",
    "Matrix3D",
    "TimelineKeyFrame",
    "AddChildAtDepthCommand",
    "ApplyAS2DepthsCommand",
    "ExecuteScriptCommand",
    "RemoveChildrenAtDepthCommand",
    "SetInstanceNameCommand",
    "UpdatePropertyCommand",
    "SetMaskCommand",
    "TextField",
    "AS2SceneGraphFactory",
    "factory",
    "j",
    "c",
    "new_mc",
    "createMovieClip",
    "isScene",
    "sceneID",
    "fps",
    "readFloat",
    "ms_per_frame",
    "num_instances",
    "num_all_display_instances",
    "num_potential_childs",
    "resourceID",
    "cmd_asset",
    "registerPotentialChild",
    "num_potential_childs_multi_instanced",
    "num_potential_sounds",
    "numFrames",
    "totalDuration",
    "frameDuration",
    "numLabels",
    "objectID",
    "target_depth",
    "number_of_obj",
    "commandType",
    "frame",
    "label",
    "hasDepthChanges",
    "setFrameTime",
    "remove_depths",
    "addConstructCommand",
    "potChild",
    "getPotentialChildPrototype",
    "isAsset",
    "props_flag",
    "test",
    "FLAG1",
    "thisMatrix",
    "FLAG2",
    "rawData",
    "FLAG3",
    "thisColorTransform",
    "FLAG4",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "FLAG5",
    "blendmode_int",
    "blendmode_string",
    "FLAG6",
    "readByte",
    "FLAG7",
    "instanceName",
    "FLAG8",
    "mask_id_nums",
    "mask_ids",
    "mi_cnt",
    "length_code",
    "frame_code",
    "addFrame",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-display/lib/entities/TextField",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags",
    "awayjs-player/lib/factories/AS2SceneGraphFactory",
    "awayjs-player/lib/timeline/TimelineKeyFrame",
    "awayjs-player/lib/timeline/commands/AddChildAtDepthCommand",
    "awayjs-player/lib/timeline/commands/ApplyAS2DepthsCommand",
    "awayjs-player/lib/timeline/commands/ExecuteScriptCommand",
    "awayjs-player/lib/timeline/commands/RemoveChildrenAtDepthCommand",
    "awayjs-player/lib/timeline/commands/SetInstanceNameCommand",
    "awayjs-player/lib/timeline/commands/SetMaskCommand",
    "awayjs-player/lib/timeline/commands/UpdatePropertyCommand",
    "PrefabBase",
    "PrimitiveCapsulePrefab",
    "PrimitiveConePrefab",
    "PrimitiveCubePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitivePlanePrefab",
    "PrimitiveSpherePrefab",
    "PrimitiveTorusPrefab",
    "prefab",
    "primType",
    "bsm",
    110,
    111,
    303,
    703,
    704,
    "primitiveTypes",
    "topClosed",
    "bottomClosed",
    "yUp",
    "awayjs-display/lib/prefabs/PrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "ShadowDitheredMethod",
    "ShadowFilteredMethod",
    "ShadowHardMethod",
    "ShadowNearMethod",
    "ShadowSoftMethod",
    "asset",
    "shadowLightID",
    "parseShadowMethodList",
    "methodType",
    "shadow_meth",
    "epsilon",
    "range",
    "awayjs-methodmaterials/lib/methods/ShadowDitheredMethod",
    "awayjs-methodmaterials/lib/methods/ShadowFilteredMethod",
    "awayjs-methodmaterials/lib/methods/ShadowHardMethod",
    "awayjs-methodmaterials/lib/methods/ShadowNearMethod",
    "awayjs-methodmaterials/lib/methods/ShadowSoftMethod",
    "EffectColorMatrixMethod",
    "EffectColorTransformMethod",
    "EffectFogMethod",
    "EffectRimLightMethod",
    "parseSharedMethodList",
    "effectMethodReturn",
    105,
    106,
    107,
    "offCol",
    "colorTransform",
    "awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod",
    "awayjs-methodmaterials/lib/methods/EffectColorTransformMethod",
    "awayjs-methodmaterials/lib/methods/EffectFogMethod",
    "awayjs-methodmaterials/lib/methods/EffectRimLightMethod",
    "textureStylesNames",
    "Skeleton",
    "SkeletonJoint",
    "num_joints",
    "joints_parsed",
    "joint",
    "ibp",
    "parentIndex",
    "inverseBindPose",
    "joints",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonClipNode",
    "frame_dur",
    "pose_addr",
    "clip",
    "num_frames",
    "frames_parsed",
    "skel_pose",
    "frames",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "SkeletonPose",
    "JointPose",
    "pose",
    "joint_pose",
    "has_transform",
    "mtx_data",
    "parseMatrix43RawData",
    "orientation",
    "fromMatrix",
    "translation",
    "copyFrom",
    "jointPoses",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "Skybox",
    "cubeTexAddr",
    "cube_tex",
    "new_skybox",
    "awayjs-display/lib/entities/Skybox",
    "Font",
    "new_font",
    "font_style_cnt",
    "font_style_name",
    "new_font_style",
    "get_font_table",
    "set_font_em_size",
    "font_style_char_cnt",
    "font_style_char",
    "set_subgeo_for_char",
    "awayjs-display/lib/text/Font",
    "TextFormat",
    "newTextField",
    "createTextField",
    "text_field_type",
    "displayAsPassword",
    "width",
    "height",
    "num_paragraphs",
    "complete_text",
    "text_format",
    "paracnt",
    "num_textruns",
    "textrun_cnt",
    "format_id",
    "textFormat",
    "txt_length",
    "this_txt",
    "text",
    "selectable",
    "border",
    "awayjs-display/lib/text/TextFormat",
    "newTextFormat",
    "font_id",
    "font",
    "font_name",
    "font_table",
    "font_style",
    "num_uv_values",
    "uv_values",
    "uvcnt",
    "uv_value",
    "format_props",
    "size",
    "letterSpacing",
    "kerning",
    "indent",
    "leftMargin",
    "rightMargin",
    "VertexClipNode",
    "poseOnly",
    "num_submeshes",
    "subMeshParsed",
    "geometry",
    "subGeom",
    "num_Streams",
    "streamsParsed",
    "streamtypes",
    "thisGeo",
    "geoAdress",
    "getUVForVertexAnimation",
    "looping",
    "stitchFinalFrame",
    "subGeometries",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexAnimationSet",
    "SkeletonAnimationSet",
    "poseBlockAdress",
    "skeletonFrames",
    "vertexFrames",
    "animNode",
    "newVertexAnimationSet",
    "addAnimation",
    "animations",
    "animationNames",
    "newSkeletonAnimationSet",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData",
    "BitmapImageCube",
    "BlendMode",
    "SingleCubeTexture",
    "Single2DTexture",
    "AWDProperties",
    "AWDBlock",
    "AWD3FileData",
    "_debug",
    "_accuracyOnBlocks",
    "_blocks",
    "_cur_block",
    "blendModeDic",
    "NORMAL",
    "ADD",
    "ALPHA",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "_depthSizeDic",
    "depthSize",
    "blendmode",
    "dispose",
    "_accuracyMatrix",
    "new_accuracyMatrix",
    "_accuracyProps",
    "new_accuracyProps",
    "_accuracyGeo",
    "new_accuracyGeo",
    "_matrixNrType",
    "newmatrixNrType",
    "_propsNrType",
    "new_props_nr",
    "_geoNrType",
    "new_geoNrType",
    "_newBlockBytes",
    "new_newBlockBytes",
    "create_new_block",
    "new_block",
    "block_cnt",
    "list_len",
    "attibuteCnt",
    "list_end",
    "ns_id",
    "attr_key",
    "attr_type",
    "attr_len",
    "attr_val",
    "INT8",
    "INT16",
    "readInt",
    "FLOAT32",
    "FLOAT64",
    "readDouble",
    "expected",
    "propertyCnt",
    "len",
    "key",
    "parseAttrValue",
    "elem_len",
    "read_func",
    "VECTOR2x1",
    "VECTOR3x1",
    "VECTOR4x1",
    "MTX3x2",
    "MTX3x3",
    "MTX4x3",
    "list",
    "num_read",
    "num_elems",
    "apply",
    "val",
    "meshID",
    "uvsForVertexAnimation",
    "geoCnt",
    "ud",
    "uStride",
    "uOffs",
    "numPoints",
    "newUvs",
    "sub_geom",
    "numVertices",
    "getStride",
    "UV_DATA",
    "getOffset",
    "getBlockByID",
    "assetID",
    "getDefaultAsset",
    "assetType",
    "getDefaultMaterial",
    "_defaultCubeTexture",
    "defaultBitmap",
    "createCheckeredBitmapImage2D",
    "bitmapImageCube",
    "draw",
    "precision",
    "parseMatrix32RawData",
    "mtx_raw",
    "isNaN",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBlock",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDProperties",
    "BLOCKSTATE_FINALIZE",
    "BLOCKSTATE_INVALID",
    "COMPRESSIONMODE_LZMA",
    "UNCOMPRESSED",
    "DEFLATE",
    "LZMA",
    "AWDBYTEARRAY",
    "flags",
    "testFlag",
    "FLAG9",
    "FLAG10",
    "FLAG11",
    "FLAG12",
    "FLAG13",
    "FLAG14",
    "FLAG15",
    "FLAG16",
    "this_id",
    "this_type",
    "loaded_dependencies",
    "loaded_dependencies_cnt",
    "bytes",
    "errorMessages",
    "addError",
    "errorMsg",
    "value",
    "fallback",
    "awayjs-parsers/lib/AWD3Parser",
    "URLLoaderDataFormat",
    "URLRequest",
    "ParserBase",
    "ParserUtils",
    "DisplayObject",
    "AWDAssetParsers",
    "AWD3Parser",
    "ARRAY_BUFFER",
    "_startedParsing",
    "_parsed_header",
    "total_time",
    "geom_time",
    "timeline_time",
    "_block_parser",
    "_awd_data",
    "supportsType",
    "extension",
    "toLowerCase",
    "supportsData",
    "_iResolveDependency",
    "resourceDependency",
    "assets",
    "this_block",
    "parseInt",
    "testure_asset",
    "_pFinalizeAsset",
    "sub_id",
    "cube_image_asset",
    "cube_tex_asset",
    "_iResolveDependencyFailure",
    "_iResolveDependencyName",
    "oldName",
    "block",
    "resetAssetPath",
    "newName",
    "_pProceedParsing",
    "_byteData",
    "_pGetByteData",
    "parseHeader",
    "_compression",
    "_pDieWithError",
    "_body",
    "getBytesAvailable",
    "parsingPaused",
    "parseNextBlock",
    "PARSING_DONE",
    "MORE_TO_PARSE",
    "_pStartParsing",
    "frameLimit",
    "_pContent",
    "block_id",
    "ns",
    "block_type",
    "blockCompression",
    "blockCompressionLZMA",
    "accuracyOnBlocks",
    "accuracyMatrix",
    "accuracyProps",
    "blockEndAll",
    "time_start",
    "performance",
    "now",
    "_pAddDependency",
    "byteArrayToImage",
    "_pPauseAndRetrieveDependencies",
    "time_end",
    "thisTime",
    "body_len",
    "_streaming",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/net/URLRequest",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-display/lib/base/DisplayObject",
    "awayjs-parsers/lib/AWDParser",
    "AnimationNodeBase",
    "LightBase",
    "LightPickerBase",
    "AnimationSetBase",
    "EffectAlphaMaskMethod",
    "EffectEnvMapMethod",
    "EffectFresnelEnvMapMethod",
    "EffectLightMapMethod",
    "EffectMethodBase",
    "ShadowMapMethodBase",
    "AWDParser",
    "_texture_users",
    "_time_all",
    "_time_geom",
    "_time_timeline",
    "_time_fonts",
    "_version",
    "isCubeTextureArray",
    "split",
    "ressourceID",
    "_cubeBitmaps",
    "assetData",
    "isParsed",
    "_cur_block_id",
    "BitFlags",
    "blockEndBlock",
    "parseMeshLibraryBlock",
    "parseBillBoardLibraryBlock",
    "parseAudioBlock",
    "parseTimeLine",
    "paresTextField",
    "parseTesselatedFont",
    "parseTextFormat",
    "parsePrimitves",
    "parseSkyboxInstance",
    "parseLight",
    "parseCamera",
    "parseLightPicker",
    "parseMaterial_v1",
    "parseCubeTexture",
    "parseSharedMethodBlock",
    "parseShadowMethodBlock",
    "parseMeshPoseAnimation",
    "parseVertexAnimationSet",
    "parseAnimatorSet",
    "parseCommand",
    "parseTriangleGeometrieBlock",
    "parseContainer",
    "parseMeshInstance",
    "parseMaterial",
    "parseTexture",
    "parseSkeleton",
    "parseSkeletonPose",
    "parseSkeletonAnimation",
    "parseNameSpace",
    "parseMetaData",
    "msgCnt",
    "blockID",
    "returnArrayFont",
    "returnedArrayMaterial",
    "textFormatArray",
    "returnedArrayGeometry",
    "useColorTransform",
    "extras",
    "timeLineContainer",
    "addPostConstructCommand",
    "obj",
    "returnedArrayParent",
    "objC",
    "returnedArrayCubeTex",
    "lightPick",
    "materialMode",
    "returnedArrayTarget",
    "outputString",
    "assetTypesToGet",
    "returnArray",
    "typeCnt",
    "iasset",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "awayjs-display/lib/base/LightBase",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod",
    "awayjs-methodmaterials/lib/methods/EffectEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectLightMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectMethodBase",
    "awayjs-methodmaterials/lib/methods/ShadowMapMethodBase",
    "awayjs-renderergl/lib/animators/AnimationSetBase",
    "awayjs-parsers/lib/MD2Parser",
    "MD2Parser",
    "textureType",
    "ignoreTexturePath",
    "_clipNodes",
    "_animationSet",
    "materialFinal",
    "geoCreated",
    "_textureType",
    "_ignoreTexturePath",
    "_mesh",
    "_pHasTime",
    "_parsedHeader",
    "_geometry",
    "parseMaterialNames",
    "_parsedUV",
    "parseUV",
    "_parsedFaces",
    "parseFaces",
    "_parsedFrames",
    "parseFrames",
    "_firstSubGeom",
    "clone",
    "_ident",
    "_skinWidth",
    "_skinHeight",
    "_numSkins",
    "_numVertices",
    "_numST",
    "_numTris",
    "_numFrames",
    "_offsetSkins",
    "_offsetST",
    "_offsetTris",
    "_offsetFrames",
    "_offsetEnd",
    "extIndex",
    "slashIndex",
    "_materialNames",
    "regExp",
    "RegExp",
    "replace",
    "lastIndexOf",
    "indexOf",
    "substring",
    "dependencies",
    "_uvs",
    "ta",
    "tb",
    "tc",
    "_vertIndices",
    "_uvIndices",
    "_indices",
    "addIndex",
    "_finalUV",
    "vertexIndex",
    "uvIndex",
    "index",
    "findIndex",
    "sx",
    "sy",
    "sz",
    "tx",
    "ty",
    "tz",
    "vertLen",
    "fvertices",
    "tvertices",
    "prevClip",
    "readFrameName",
    "vertexNormals",
    "vertexTangents",
    "FPS",
    "ch",
    "floor",
    "String",
    "fromCharCode",
    "awayjs-parsers/lib/MD5AnimParser",
    "Quaternion",
    "MD5AnimParser",
    "additionalRotationAxis",
    "additionalRotationRadians",
    "TEXT",
    "_parseIndex",
    "_line",
    "_charLineIndex",
    "_rotationQuat",
    "t1",
    "t2",
    "fromAxisAngle",
    "X_AXIS",
    "PI",
    "Y_AXIS",
    "multiply",
    "token",
    "_textData",
    "_pGetTextData",
    "getNextToken",
    "COMMENT_TOKEN",
    "ignoreLine",
    "VERSION_TOKEN",
    "getNextInt",
    "COMMAND_LINE_TOKEN",
    "parseCMD",
    "NUM_FRAMES_TOKEN",
    "_bounds",
    "_frameData",
    "NUM_JOINTS_TOKEN",
    "_numJoints",
    "_hierarchy",
    "_baseFrameData",
    "FRAME_RATE_TOKEN",
    "_frameRate",
    "NUM_ANIMATED_COMPONENTS_TOKEN",
    "_numAnimatedComponents",
    "HIERARCHY_TOKEN",
    "parseHierarchy",
    "BOUNDS_TOKEN",
    "parseBounds",
    "BASE_FRAME_TOKEN",
    "parseBaseFrame",
    "FRAME_TOKEN",
    "parseFrame",
    "_reachedEOF",
    "sendUnknownKeywordError",
    "_clip",
    "translateClip",
    "translatePose",
    "frameData",
    "hierarchy",
    "base",
    "translate",
    "components",
    "skelPose",
    "startIndex",
    "w",
    "sqrt",
    "rotatePoint",
    "sendEOFError",
    "HierarchyData",
    "parseLiteralstring",
    "getNextChar",
    "putBack",
    "BoundsData",
    "parseVector3D",
    "max",
    "BaseFrameData",
    "parseQuaternion",
    "frameIndex",
    "FrameData",
    "getNextNumber",
    "skipWhiteSpace",
    "charAt",
    "sendParseError",
    "parseFloat",
    "vec",
    "quat",
    "str",
    "awayjs-core/lib/geom/Quaternion",
    "awayjs-parsers/lib/MD5MeshParser",
    "MD5MeshParser",
    "_bindPoses",
    "NUM_MESHES_TOKEN",
    "_numMeshes",
    "JOINTS_TOKEN",
    "parseJoints",
    "MESH_TOKEN",
    "parseMesh",
    "calculateMaxJointCount",
    "_maxJointCount",
    "_meshData",
    "translateGeom",
    "vertexData",
    "weightData",
    "_skeleton",
    "numMeshData",
    "meshData",
    "numVerts",
    "zeroWeights",
    "countZeroWeightJoints",
    "totalJoints",
    "countWeight",
    "vertex",
    "start",
    "startWeight",
    "end",
    "count",
    "weight",
    "bias",
    "pos",
    "toMatrix3D",
    "appendTranslation",
    "inv",
    "invert",
    "_shaders",
    "MESH_SHADER_TOKEN",
    "MESH_NUM_VERTS_TOKEN",
    "MESH_NUM_TRIS_TOKEN",
    "MESH_NUM_WEIGHTS_TOKEN",
    "MESH_VERT_TOKEN",
    "parseVertex",
    "MESH_TRI_TOKEN",
    "parseTri",
    "MESH_WEIGHT_TOKEN",
    "parseJoint",
    "MeshData",
    "v1",
    "v2",
    "v3",
    "bindPose",
    "vertices",
    "jointIndices",
    "jointWeights",
    "nonZeroWeights",
    "transformVector",
    "JointData",
    "VertexData",
    "rotQuat",
    "awayjs-parsers/lib/Max3DSParser",
    "BitmapImage2D",
    "Max3DSParser",
    "useSmoothingGroups",
    "_useSmoothingGroups",
    "ba",
    "toByteArray",
    "tex",
    "_textures",
    "_materials",
    "_unfinalized_objects",
    "_cur_mat",
    "_cur_mat_end",
    "finalizeCurrentMaterial",
    "_cur_obj",
    "_cur_obj_end",
    "Number",
    "MAX_VALUE",
    "cid",
    "ObjectVO",
    "readNulTermstring",
    "materialFaces",
    "parseVertexList",
    "parseFaceList",
    "parseUVList",
    "parseFaceMaterialList",
    "readTransform",
    "parseObjectAnimation",
    "parseSmoothingGroups",
    "constructObject",
    "MaterialVO",
    "readColor",
    "twoSided",
    "colorMap",
    "TextureVO",
    "i0",
    "i1",
    "i2",
    "smoothingGroups",
    "faces",
    "vo",
    "hier",
    "sub",
    "prepareData",
    "applySmoothGroups",
    "v",
    "mname",
    "dat",
    "concat",
    "scaleBy",
    "applyTransformation",
    "VertexVO",
    "FaceVO",
    "smoothGroup",
    "numFaces",
    "vGroups",
    "face",
    "groups",
    "group",
    "splice",
    "vClones",
    "clones",
    "v0",
    "chr",
    "g",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-parsers/lib/OBJParser",
    "SpecularBasicMethod",
    "OBJParser",
    "scale",
    "_mtlLibLoaded",
    "_activeMaterialID",
    "_scale",
    "content",
    "hasV",
    "hasF",
    "parseMtl",
    "lm",
    "LoadedMaterial",
    "materialID",
    "_materialLoaded",
    "_meshes",
    "applyMaterial",
    "_mtlLib",
    "line",
    "creturn",
    "trunk",
    "_vertices",
    "_vertexNormals",
    "_materialIDs",
    "_stringLength",
    "_charIndex",
    "_oldIndex",
    "_objects",
    "_objectIndex",
    "join",
    "parseLine",
    "applyMaterials",
    "loadMtl",
    "createGroup",
    "createObject",
    "_currentGroup",
    "parseVertexNormal",
    "parseFace",
    "objIndex",
    "numGroups",
    "materialGroups",
    "numMaterialGroups",
    "sm",
    "bmMaterial",
    "translateMaterialGroup",
    "_lastMtlID",
    "materialGroup",
    "_realIndices",
    "_vertexIndex",
    "indexIds",
    "translateVertexData",
    "vertexNormal",
    "uv",
    "vertexIndices",
    "normalIndices",
    "uvIndices",
    "_currentMaterialGroup",
    "_currentObject",
    "ObjectGroup",
    "Group",
    "createMaterialGroup",
    "MaterialGroup",
    "nTrunk",
    "Vertex",
    "UV",
    "FaceData",
    "parseIndex",
    "materialDefinitions",
    "lines",
    "basicSpecularMethod",
    "useSpecular",
    "useColor",
    "mapkd",
    "charCodeAt",
    "parseMapKdString",
    "specularData",
    "SpecularData",
    "_materialSpecularData",
    "cm",
    "colorMat",
    "colorMultiMat",
    "breakflag",
    "mtlurl",
    "decomposeID",
    "tm",
    "_u",
    "_v",
    "_x",
    "_y",
    "_z",
    "_index",
    "ind",
    "awayjs-methodmaterials/lib/methods/SpecularBasicMethod",
    "awayjs-parsers/lib/Parsers",
    "AssetLoader",
    "Parsers",
    "enableAllBundled",
    "enableParsers",
    "ALL_BUNDLED",
    "awayjs-core/lib/library/AssetLoader"
  ],
  "mappings": "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",
  "file": "awayjs-parsers.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3FileData\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\r\n\r\n\r\nclass AWDAssetParserBase\r\n{\r\n\r\n\tprivate _awd_file_data:AWD3FileData;\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\r\n\tpublic get awd_file_data():AWD3FileData\r\n\t{\r\n\t\treturn this._awd_file_data;\r\n\t}\r\n\tpublic set awd_file_data(awd_file_data:AWD3FileData)\r\n\t{\r\n\t\tthis._awd_file_data=awd_file_data;\r\n\t}\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = AWDAssetParserBase;\r\n\r\n",
    null,
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport AWDAssetParserBase\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWD3FileData \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\r\n\r\nimport GeometryAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser\");\r\nimport PrefabAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser\");\r\nimport DisplayObjectContainerAWDParser \t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser\");\r\nimport MeshAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser\");\r\nimport BillboardAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser\");\r\nimport Single2DTextureAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser\");\r\nimport CameraAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser\");\r\nimport SingleCubeTextureAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser\");\r\nimport LightAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser\");\r\nimport LightPickerAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser\");\r\nimport MaterialAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser\");\r\nimport MovieClipAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser\");\r\nimport ShadowMethodAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser\");\r\nimport SharedMethodAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser\");\r\nimport SkeletonAnimClipAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser\");\r\nimport SkeletonAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser\");\r\nimport SkeletonPoseAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser\");\r\nimport SkyboxAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser\");\r\nimport TesselatedFontAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser\");\r\nimport TextfieldAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser\");\r\nimport TextformatAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser\");\r\nimport VertexAnimationSetAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser\");\r\nimport VertexAnimClipAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser\");\r\nimport CommandAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser\");\r\nimport MetadataAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser\");\r\nimport BlockNameSpaceAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser\");\r\nimport AnimatorAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser\");\r\nimport AudioAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser\");\r\n\r\n\r\n\r\nclass AWDBlockParsers\r\n{\r\n\r\n\tprivate _supported_asset_blocks:Object = {};\r\n\tprivate _all_block_parsers:Array<AWDAssetParserBase>;\r\n\tconstructor()\r\n\t{\r\n\t\tthis._all_block_parsers=new Array<AWDAssetParserBase>();\r\n\r\n\t\tthis.add_block_parser(new GeometryAWDParser(), [1]);\r\n\t\tthis.add_block_parser(new PrefabAWDParser(), [11]);\r\n\t\tthis.add_block_parser(new DisplayObjectContainerAWDParser(), [22]);\r\n\t\tthis.add_block_parser(new MeshAWDParser(), [23, 24]);\r\n\r\n\t\tthis.add_block_parser(new BillboardAWDParser(), [25]);\r\n\t\tthis.add_block_parser(new SkyboxAWDParser(), [31]);\r\n\t\tthis.add_block_parser(new LightAWDParser(), [41]);\r\n\t\tthis.add_block_parser(new CameraAWDParser(), [42]);\r\n\t\t//this.add_block_parser(new TextureprojectorAWDParser(), [43]);\r\n\t\tthis.add_block_parser(new AudioAWDParser(), [44]);\r\n\t\tthis.add_block_parser(new LightPickerAWDParser(), [51]);\r\n\t\tthis.add_block_parser(new MaterialAWDParser(), [81]);\r\n\t\tthis.add_block_parser(new Single2DTextureAWDParser(), [82]);\r\n\t\tthis.add_block_parser(new SingleCubeTextureAWDParser(), [83]);\r\n\t\tthis.add_block_parser(new SharedMethodAWDParser(), [91]);\r\n\t\tthis.add_block_parser(new ShadowMethodAWDParser(), [92]);\r\n\t\tthis.add_block_parser(new SkeletonAWDParser(), [101]);\r\n\t\tthis.add_block_parser(new SkeletonPoseAWDParser(), [102]);\r\n\t\tthis.add_block_parser(new SkeletonAnimClipAWDParser(), [103]);\r\n\t\tthis.add_block_parser(new VertexAnimClipAWDParser(), [111, 112]);\r\n\t\tthis.add_block_parser(new VertexAnimationSetAWDParser(), [113]);\r\n\t\t//this.add_block_parser(new UVAnimationClipAWDParser(), [121]);\r\n\t\tthis.add_block_parser(new AnimatorAWDParser(), [122]);\r\n\t\tthis.add_block_parser(new MovieClipAWDParser(), [133]);\r\n\t\tthis.add_block_parser(new TextfieldAWDParser(), [134]);\r\n\t\tthis.add_block_parser(new TesselatedFontAWDParser(), [135]);\r\n\t\tthis.add_block_parser(new TextformatAWDParser(), [136]);\r\n\r\n\r\n\t\tthis.add_block_parser(new CommandAWDParser(), [253]);\r\n\t\tthis.add_block_parser(new BlockNameSpaceAWDParser(), [254]);\r\n\t\tthis.add_block_parser(new MetadataAWDParser(), [255]);\r\n\r\n\r\n\t}\r\n\r\n\tpublic add_block_parser(block_parser:AWDAssetParserBase, block_types:Array<number>):void\r\n\t{\r\n\t\tfor(var i:number=0; i<block_types.length;i++){\r\n\t\t\tthis._supported_asset_blocks[block_types[i]]  = block_parser;\r\n\t\t}\r\n\t\tthis._all_block_parsers.push(block_parser);\r\n\r\n\t}\r\n\r\n\tpublic init_parser(file_data:AWD3FileData):void\r\n\t{\r\n\t\tfor(var i:number=0; i<this._all_block_parsers.length;i++){\r\n\t\t\tthis._all_block_parsers[i].awd_file_data=file_data;\r\n\t\t}\r\n\r\n\t}\r\n\tpublic parseAsset(type:number):boolean\r\n\t{\r\n\r\n\t\tvar this_parser:AWDAssetParserBase=this._supported_asset_blocks[type];\r\n\t\tif(this_parser!=undefined){\r\n\t\t\tthis_parser.parseFromBytes();\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\nexport = AWDBlockParsers;",
    "/**\r\n * Created by 80prozent on 4/18/2015.\r\n */\r\n\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass AnimatorAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar animSetBlockAdress:number; /*int*/\r\n\t\tvar targetAnimationSet:AnimationSetBase;\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar type:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR});\r\n\r\n\t\tanimSetBlockAdress = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar targetMeshLength:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar meshAdresses:Array<number> /*uint*/ = new Array<number>() /*uint*/;\r\n\t\tfor (var i:number /*int*/ = 0; i < targetMeshLength; i++)\r\n\t\t\tmeshAdresses.push(this.awd_file_data.newBlockBytes.readUnsignedInt());\r\n\r\n\t\tvar activeState:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar autoplay:boolean = ( this.awd_file_data.newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\r\n\t\tvar returnedArray:Array<any>;\r\n\t\tvar targetMeshes:Array<Mesh> = new Array<Mesh>();\r\n\r\n\t\tfor (i = 0; i < meshAdresses.length; i++) {\r\n\t\t\tvar targetMesh:Mesh = <Mesh>this.awd_file_data.getAssetByID(meshAdresses[i]);\r\n\t\t\tif (targetMesh!=undefined)\r\n\t\t\t\ttargetMeshes.push(targetMesh);\r\n\t\t}\r\n\t\tvar targetAnimationSet:AnimationSetBase = <AnimationSetBase>this.awd_file_data.getAssetByID(animSetBlockAdress);\r\n\t\tif (targetAnimationSet==undefined) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the AnimationSet ( \" + animSetBlockAdress + \" ) for this.awd_file_data Animator\");\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tvar thisAnimator:AnimatorBase;\r\n\t\tif (type == 1) {\r\n\r\n\t\t\tvar skeleton:Skeleton = <Skeleton>this.awd_file_data.getAssetByID(props.get(1, 0));\r\n\t\t\tif (skeleton==undefined) {\r\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the Skeleton ( \" + props.get(1, 0) + \" ) for this.awd_file_data Animator\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, skeleton);\r\n\r\n\t\t} else if (type == 2)\r\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\r\n\r\n\t\tfor (i = 0; i < targetMeshes.length; i++) {\r\n\t\t\tif (type == 1)\r\n\t\t\t\ttargetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\r\n\t\t\tif (type == 2)\r\n\t\t\t\ttargetMeshes[i].animator = (<VertexAnimator> thisAnimator);\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.data = thisAnimator;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + this.awd_file_data.cur_block.name);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = AnimatorAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nclass AudioAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\t//this.awd_file_data._texture_users[this.awd_file_data._cur_block_id.toString()] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\r\n\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\r\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block.id.toString(), new URLRequest(url), false, null, true);\r\n\r\n\t\t} else {\r\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray;\r\n\t\t\tdata = new ByteArray();\r\n\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\r\n\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\r\n\r\n\t\t\t//\r\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\r\n\t\t\t//\r\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\r\n\t\t\t// This gives the browser time to initialise image width / height.\r\n\r\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\r\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\r\n\t\t// Ignore for now\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t//this.awd_file_data._pPauseAndRetrieveDependencies();\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tvar audioStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing a \" + audioStylesNames[type] + \" AudioFile\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = AudioAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\n\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nclass BillboardAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar mat:MaterialBase= <MaterialBase> this.awd_file_data.getAssetByID(data_id);\r\n\r\n\t\tif (mat==undefined) {\r\n\t\t\tmat = new BasicMaterial();\r\n\t\t}\r\n\t\tmat.bothSides=true;\r\n\t\tvar billboard:Billboard = new Billboard(mat);\r\n\t\tthis.awd_file_data.cur_block.data = billboard;\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\r\n\t\tbillboard.extra = this.awd_file_data.parseUserAttributes();\r\n\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a Library-Billboard: Name = '\" + billboard.name + \"| Material-Name = \" + mat.name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = BillboardAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass BlockNameSpaceAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\r\n\t\tvar id:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar nameSpaceString:string = this.awd_file_data.parseVarStr();\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = BlockNameSpaceAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Parser\t\t\t\t= require(\"awayjs-parsers/lib/AWD3Parser\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\r\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass CameraAWD3Parser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void {\r\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar projection:ProjectionBase;\r\n\r\n\t\tthis.awd_file_data.newBlockBytes.readUnsignedByte(); //set as active camera\r\n\t\tthis.awd_file_data.newBlockBytes.readShort(); //lengthof lenses - not used yet\r\n\r\n\t\tvar projectiontype:number = this.awd_file_data.newBlockBytes.readShort();\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({\r\n\t\t\t101: this.awd_file_data.propsNrType,\r\n\t\t\t102: this.awd_file_data.propsNrType,\r\n\t\t\t103: this.awd_file_data.propsNrType,\r\n\t\t\t104: this.awd_file_data.propsNrType\r\n\t\t});\r\n\r\n\t\tswitch (projectiontype) {\r\n\t\t\tcase 5001:\r\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5002:\r\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5003:\r\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar camera:Camera = new Camera(projection);\r\n\t\tcamera.transform.matrix3D = mtx;\r\n\t\tif (par_id > 0) {\r\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id);\r\n\t\t\tif (parent != undefined) {\r\n\t\t\t\tparent.addChild(camera);\r\n\t\t\t\tparentName = parent.name;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcamera.name = name;\r\n\t\tprops = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\r\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\tcamera.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = camera;\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + camera.name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = CameraAWD3Parser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass CommandAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\r\n\t\tvar hasBlocks:boolean = ( this.awd_file_data.newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\r\n\t\tvar name:string = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar parentObject:DisplayObjectContainer;\r\n\t\tvar targetObject:DisplayObject;\r\n\r\n\t\tif(par_id>0)\r\n\t\t\tparentObject = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id); //for no only light is requested!!!!\r\n\r\n\t\tvar numCommands:number = this.awd_file_data.newBlockBytes.readShort();\r\n\t\tvar typeCommand:number = this.awd_file_data.newBlockBytes.readShort();\r\n\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR});\r\n\r\n\t\tswitch (typeCommand) {\r\n\t\t\tcase 1:\r\n\r\n\t\t\t\tvar targetID:number = props.get(1, 0);\r\n\t\t\t\t//var returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [LightBase.assetType, TextureProjector.assetType]); //for no only light is requested!!!!\r\n\t\t\t\ttargetObject = <DisplayObject>this.awd_file_data.getAssetByID(targetID); //for no only light is requested!!!!\r\n\t\t\t\tif(targetObject==undefined){\r\n\t\t\t\t\t//this._awd_data._blocks[blockID].addError(\"Could not find the light (ID = \" + targetID + \" ( for this CommandBock!\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (parentObject) {\r\n\t\t\t\t\tparentObject.addChild(targetObject);\r\n\t\t\t\t}\r\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (targetObject) {\r\n\t\t\tprops = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\r\n\r\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t\ttargetObject.extra = this.awd_file_data.parseUserAttributes();\r\n\r\n\t\t}\r\n\t\t//this._awd_data._blocks[blockID].data = targetObject\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = CommandAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AWDProperties\t\t\t= require(\"../AWD3ParserUtils/AWDProperties\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nclass DisplayObjectContainerAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tvar par_id:number;\r\n\t\tvar mtx:Matrix3D;\r\n\t\tvar ctr:DisplayObjectContainer;\r\n\t\tvar parent:DisplayObjectContainer;\r\n\r\n\t\tctr = new DisplayObjectContainer();\r\n\t\tpar_id = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tmtx = this.awd_file_data.parseMatrix3D();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tctr.transform.matrix3D = mtx;\r\n\r\n\r\n\t\tif (par_id > 0) {\r\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id);\r\n\t\t\tif (parent != undefined) {\r\n\t\t\t\tparent.addChild(ctr);\r\n\t\t\t\tparentName = parent.name;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// in AWD version 2.1 we read the Container properties\r\n\t\tif ((this.awd_file_data.major_version > 2)||((this.awd_file_data.major_version >= 2) && (this.awd_file_data.minor_version == 1))) {\r\n\t\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\r\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t}\r\n\t\t// in other versions we do not read the Container properties\r\n\t\telse {\r\n\t\t\tthis.awd_file_data.parseProperties(null);\r\n\t\t}\r\n\r\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\r\n\t\tctr.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data=ctr;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + ctr.name + \"' | Parent-Name = \" + parentName);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = DisplayObjectContainerAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\n\r\nclass GeometryAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar geom:Geometry = new Geometry();\r\n\r\n\t\t// Read name and sub count\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_subs:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\t// Read optional properties\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.geoNrType, 2:this.awd_file_data.geoNrType});\r\n\t\tvar geoScaleU:number = props.get(1, 1);\r\n\t\tvar geoScaleV:number = props.get(2, 1);\r\n\r\n\t\t// Loop through sub meshes\r\n\t\tvar subs_parsed:number = 0;\r\n\t\twhile (subs_parsed < num_subs) {\r\n\t\t\tvar is_curve_geom:boolean=false;\r\n\t\t\tvar i:number;\r\n\t\t\tvar sm_len:number, sm_end:number;\r\n\t\t\tvar w_indices:Array<number>;\r\n\t\t\tvar weights:Array<number>;\r\n\r\n\t\t\tsm_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tsm_end = this.awd_file_data.newBlockBytes.position + sm_len;\r\n\r\n\t\t\tvar subProps:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.geoNrType, 2:this.awd_file_data.geoNrType});\r\n\t\t\t// Loop through data streams\r\n\t\t\twhile (this.awd_file_data.newBlockBytes.position < sm_end) {\r\n\t\t\t\tvar idx:number = 0;\r\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n\t\t\t\t// Type, field type, length\r\n\t\t\t\tstr_type = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_ftype = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\r\n\r\n\t\t\t\tvar x:number, y:number, z:number;\r\n\r\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\r\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\tx = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t\ty = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t\tz = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\r\n\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\r\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tindices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 3) {\r\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tuvs[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 4) {\r\n\r\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tnormals[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 6) {\r\n\t\t\t\t\tw_indices = Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tw_indices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort()*3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 7) {\r\n\r\n\t\t\t\t\tweights = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tweights[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\r\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\r\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\r\n\t\t\t\t\tis_curve_geom=true;\r\n\t\t\t\t\tvar idx_pos:number = 0;\r\n\t\t\t\t\tvar idx_curves:number = 0;\r\n\t\t\t\t\tvar idx_uvs:number = 0;\r\n\r\n\t\t\t\t\tvar positions:Array<number> = new Array<number>();\r\n\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\r\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// x\r\n\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// y\r\n\t\t\t\t\t\tpositions[idx_pos++] =  this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// type\r\n\r\n\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 2\r\n\r\n\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.awd_file_data.parseUserAttributes(); // Ignore sub-mesh attributes for now\r\n\t\t\tif(is_curve_geom){\r\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\r\n\t\t\t\tcurve_sub_geom.updateIndices(indices);\r\n\t\t\t\tcurve_sub_geom.updatePositions(positions);\r\n\t\t\t\tcurve_sub_geom.updateCurves(curveData);\r\n\t\t\t\tcurve_sub_geom.updateUVs(uvs);\r\n\t\t\t\tgeom.addSubGeometry(curve_sub_geom);\r\n\t\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a CurveSubGeometry\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar triangle_sub_geom = new TriangleSubGeometry(true);\r\n\t\t\t\tif (weights)\r\n\t\t\t\t\ttriangle_sub_geom.jointsPerVertex = weights.length / (verts.length / 3);\r\n\t\t\t\tif (normals)\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveNormals = false;\r\n\t\t\t\tif (uvs)\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveUVs = false;\r\n\t\t\t\t//triangle_sub_geom.autoDeriveNormals = false;\r\n\t\t\t\tif (true) {\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveTangents = true;\r\n\t\t\t\t}\r\n\t\t\t\ttriangle_sub_geom.updateIndices(indices);\r\n\t\t\t\ttriangle_sub_geom.updatePositions(verts);\r\n\t\t\t\ttriangle_sub_geom.updateVertexNormals(normals);\r\n\t\t\t\ttriangle_sub_geom.updateUVs(uvs);\r\n\t\t\t\ttriangle_sub_geom.updateVertexTangents(null);\r\n\t\t\t\ttriangle_sub_geom.updateJointWeights(weights);\r\n\t\t\t\ttriangle_sub_geom.updateJointIndices(w_indices);\r\n\r\n\t\t\t\tvar scaleU:number = subProps.get(1, 1);\r\n\t\t\t\tvar scaleV:number = subProps.get(2, 1);\r\n\t\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\r\n\r\n\t\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\r\n\t\t\t\t\tsetSubUVs = true;\r\n\t\t\t\t\tscaleU = geoScaleU / scaleU;\r\n\t\t\t\t\tscaleV = geoScaleV / scaleV;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (setSubUVs)\r\n\t\t\t\t\ttriangle_sub_geom.scaleUV(scaleU, scaleV);\r\n\t\t\t\tgeom.addSubGeometry(triangle_sub_geom);\r\n\t\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a TriangleSubGeometry\");\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\r\n\t\t\t// when creating meshes (and their material assignments.)\r\n\r\n\t\t\tsubs_parsed++;\r\n\t\t}\r\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\r\n\t\t\tgeom.scaleUV(geoScaleU, geoScaleV);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data=geom;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a TriangleGeometry: Name = \" + name);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = GeometryAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass LightAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\t\r\n\t\tvar light:LightBase;\r\n\t\tvar newShadowMapper:ShadowMapperBase;\r\n\r\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar lightType:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.propsNrType, 2:this.awd_file_data.propsNrType, 3:AWD3Utils.COLOR, 4:this.awd_file_data.propsNrType, 5:this.awd_file_data.propsNrType, 6:AWD3Utils.BOOL, 7:AWD3Utils.COLOR, 8:this.awd_file_data.propsNrType, 9:AWD3Utils.UINT8, 10:AWD3Utils.UINT8, 11:this.awd_file_data.propsNrType, 12:AWD3Utils.UINT16, 21:this.awd_file_data.matrixNrType, 22:this.awd_file_data.matrixNrType, 23:this.awd_file_data.matrixNrType});\r\n\t\tvar shadowMapperType:number = props.get(9, 0);\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\r\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\r\n\r\n\t\tif (lightType == 1) {\r\n\t\t\tlight = new PointLight();\r\n\r\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\r\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 4) {\r\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.transform.matrix3D = mtx;\r\n\r\n\t\t}\r\n\r\n\t\tif (lightType == 2) {\r\n\r\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 1) {\r\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//if (shadowMapperType == 2)\r\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\r\n\t\t\t\t//if (shadowMapperType == 3)\r\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tlight.name=name;\r\n\t\tlight.color = props.get(3, 0xffffff);\r\n\t\tlight.specular = props.get(4, 1.0);\r\n\t\tlight.diffuse = props.get(5, 1.0);\r\n\t\tlight.ambientColor = props.get(7, 0xffffff);\r\n\t\tlight.ambient = props.get(8, 0.0);\r\n\r\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\r\n\t\tif (newShadowMapper) {\r\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\r\n\t\t\t\tif (props.get(10, 1) != 1) {\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this.awd_file_data.getDepthSizeFromEnum(props.get(10, 1));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (props.get(10, 2) != 2) {\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this.awd_file_data.getDepthSizeFromEnum(props.get(10, 2));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.shadowMapper = newShadowMapper;\r\n\t\t\tlight.castsShadows = true;\r\n\t\t}\r\n\r\n\t\tif (par_id != 0) {\r\n\r\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id)\r\n\r\n\t\t\tif (parent!=undefined){\r\n\t\t\t\tparent.addChild(light);\r\n\t\t\t\tparentName = parent.name;\r\n\t\t\t} else {\r\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find a parent for this.awd_file_data Light\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t//(<DisplayObjectContainer> this.awd_file_data._pContent).addChild(light);\r\n\t\t}\r\n\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = light;\r\n\r\n\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + this.awd_file_data.cur_block.name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = LightAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\n\r\nclass LightPickerAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar numLights:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\r\n\t\tvar k:number = 0;\r\n\t\tvar lightID:number = 0;\r\n\r\n\t\tvar returnedArrayLight:Array<any>;\r\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\r\n\r\n\t\tfor (k = 0; k < numLights; k++) {\r\n\t\t\tlightID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar light:LightBase = <LightBase>this.awd_file_data.getAssetByID(lightID)\r\n\r\n\t\t\tif (light!=undefined) {\r\n\t\t\t\tlightsArray.push(<LightBase> light);\r\n\t\t\t\tlightsArrayNames.push(( <LightBase> light).name);\r\n\r\n\t\t\t} else {\r\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find a Light Nr \" + k + \" (ID = \" + lightID + \" ) for this.awd_file_data LightPicker\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lightsArray.length == 0) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not create this.awd_file_data LightPicker, cause no Light was found.\");\r\n\t\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t\treturn undefined; //return without any more parsing for this.awd_file_data block\r\n\t\t}\r\n\r\n\t\tvar lightPicker:LightPickerBase = new StaticLightPicker(lightsArray);\r\n\t\tthis.awd_file_data.cur_block.data = lightPicker;\r\n\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + lightsArrayNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = LightPickerAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\n\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\")\r\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\r\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\r\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\r\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\r\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\r\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\r\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\r\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\r\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\r\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\r\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\r\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass MaterialAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\t// version 2.0\r\n\t\t////blockLength = block.len;\r\n\t\tvar name:string;\r\n\t\tvar type:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar attributes:Object;\r\n\t\tvar finalize:boolean;\r\n\t\tvar num_methods:number;\r\n\t\tvar methods_parsed:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar normalTexture:Single2DTexture;\r\n\t\tvar specTexture:Single2DTexture;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\ttype = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tnum_methods = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\r\n\t\tif((this.awd_file_data.major_version==2)&&(this.awd_file_data.major_version==0)) {\r\n\r\n\t\t\t// Read material numerical properties\r\n\t\t\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\r\n\t\t\tprops = this.awd_file_data.parseProperties({\r\n\t\t\t\t1: AWD3Utils.INT32,\r\n\t\t\t\t2: AWD3Utils.BADDR,\r\n\t\t\t\t10: this.awd_file_data.propsNrType,\r\n\t\t\t\t11: AWD3Utils.BOOL,\r\n\t\t\t\t12: this.awd_file_data.propsNrType,\r\n\t\t\t\t13: AWD3Utils.BOOL\r\n\t\t\t});\r\n\t\t\tmethods_parsed = 0;\r\n\t\t\twhile (methods_parsed < num_methods) {\r\n\t\t\t\tvar method_type:number;\r\n\r\n\t\t\t\tmethod_type = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\tthis.awd_file_data.parseProperties(null);\r\n\t\t\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t\t\tmethods_parsed += 1;\r\n\t\t\t}\r\n\t\t\tvar debugString:string = \"\";\r\n\t\t\tattributes = this.awd_file_data.parseUserAttributes();\r\n\t\t\tif (type === 1) { // Color material\r\n\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\t\tvar color:number;\r\n\t\t\t\tcolor = props.get(1, 0xffffff);\r\n\t\t\t\t/*if (this.awd_file_data.materialMode < 2) {\r\n\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t}*/\r\n\t\t\t} else if (type === 2) {\r\n\t\t\t\tvar tex_addr:number = props.get(2, 0);\r\n\t\t\t\tvar texture:TextureBase=undefined;\r\n\t\t\t\tif (tex_addr > 0) {\r\n\t\t\t\t\tvar texture:TextureBase = <TextureBase> this.awd_file_data.getAssetByID(tex_addr);\r\n\t\t\t\t}\r\n\t\t\t\tif (texture==undefined) {\r\n\t\t\t\t\ttexture= DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmat = new MethodMaterial(<Single2DTexture>texture);\r\n\t\t\t\t/*\r\n\t\t\t\tif (this.awd_file_data.materialMode < 2) {\r\n\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t}\r\n\r\n\t\t\tmat.extra = attributes;\r\n\t\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\t\tmat.repeat = props.get(13, false);\r\n\t\t\tmat.name=name;\r\n\t\t\tif (this.awd_file_data.debug) {\r\n\t\t\t\tconsole.log(debugString);\r\n\r\n\t\t\t}\r\n\t\t\tthis.awd_file_data.cur_block.data=mat;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// version 2.1+\r\n\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT32, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 4:AWD3Utils.UINT8, 5:AWD3Utils.BOOL, 6:AWD3Utils.BOOL, 7:AWD3Utils.BOOL, 8:AWD3Utils.BOOL, 9:AWD3Utils.UINT8, 10:this.awd_file_data.propsNrType, 11:AWD3Utils.BOOL, 12:this.awd_file_data.propsNrType, 13:AWD3Utils.BOOL, 15:this.awd_file_data.propsNrType, 16:AWD3Utils.UINT32, 17:AWD3Utils.BADDR, 18:this.awd_file_data.propsNrType, 19:this.awd_file_data.propsNrType, 20:AWD3Utils.UINT32, 21:AWD3Utils.BADDR, 22:AWD3Utils.BADDR});\r\n\t\tvar spezialType:number = props.get(4, 0);\r\n\t\tvar debugString:string = \"Parsed Material \";\r\n\r\n\t\tif (spezialType >= 2) {//this.awd_file_data is no supported material\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (type <= 2) {// Color material\r\n\t\t\t/*\r\n\t\t\tif (this.awd_file_data.materialMode == 1)\r\n\t\t\t\tspezialType = 0;\r\n\t\t\telse if (this.awd_file_data.materialMode == 2)\r\n\t\t\t\tspezialType = 1;\r\n\t\t\t\t*/\r\n\r\n\t\t\tif (spezialType < 2) {//this.awd_file_data is SinglePass or MultiPass\r\n\r\n\t\t\t\tif (type == 1) {// Color material\r\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\r\n\r\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\r\n\r\n\t\t\t\t\t} else { //\tSinglePassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (type == 2) {// texture material\r\n\t\t\t\t\tvar tex_addr:number = props.get(2, 0);//TODO temporarily swapped so that diffuse texture goes to ambient\r\n\t\t\t\t\tvar diftexture:TextureBase=undefined;\r\n\t\t\t\t\tif (tex_addr > 0) {\r\n\t\t\t\t\t\tdiftexture = <TextureBase> this.awd_file_data.getAssetByID(tex_addr);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (diftexture==undefined) {\r\n\t\t\t\t\t\tdiftexture= DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmat = new MethodMaterial(<Single2DTexture>diftexture);\r\n\r\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + diftexture.name;\r\n\t\t\t\t\t} else {//\tSinglePassMaterial\r\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + diftexture.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tvar diffuseTex_addr:number = props.get(17, 0);\r\n\r\n\t\t\t\tvar diffuseTexture:TextureBase = undefined;\r\n\t\t\t\tif (diffuseTex_addr > 0) {\r\n\t\t\t\t\tdiffuseTexture = <Single2DTexture> this.awd_file_data.getAssetByID(diffuseTex_addr);\r\n\t\t\t\t}\r\n\t\t\t\tif (diffuseTexture) {\r\n\t\t\t\t\tmat.diffuseTexture = <Single2DTexture>diffuseTexture;\r\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normalTex_addr:number = props.get(3, 0);\r\n\r\n\r\n\t\t\t\tnormalTexture = undefined;\r\n\t\t\t\tif (normalTex_addr > 0) {\r\n\t\t\t\t\tnormalTexture = <Single2DTexture> this.awd_file_data.getAssetByID(normalTex_addr);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar specTex_addr:number = props.get(21, 0);\r\n\t\t\t\tspecTexture=undefined;\r\n\t\t\t\tif (specTex_addr > 0) {\r\n\t\t\t\t\tspecTexture = <Single2DTexture> this.awd_file_data.getAssetByID(specTex_addr);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar lightPickerAddr:number = props.get(22, 0);\r\n\t\t\t\tif(lightPickerAddr>0) {\r\n\t\t\t\t\tmat.lightPicker = <LightPickerBase> this.awd_file_data.getAssetByID(lightPickerAddr);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmat.smooth = props.get(5, true);\r\n\t\t\t\tmat.mipmap = props.get(6, true);\r\n\t\t\t\tmat.bothSides = props.get(7, false);\r\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\r\n\t\t\t\tmat.blendMode = this.awd_file_data.getBlendModeStringFromEnum(props.get(9, 0));\r\n\t\t\t\tmat.repeat = props.get(13, false);\r\n\r\n\t\t\t\tif (normalTexture)\r\n\t\t\t\t\tmat.normalMap = normalTexture;\r\n\r\n\t\t\t\tif (specTexture)\r\n\t\t\t\t\tmat.specularMap = specTexture;\r\n\r\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\t\t\tmat.ambient = props.get(15, 1.0);\r\n\t\t\t\tmat.diffuseColor = props.get(16, 0xffffff);\r\n\t\t\t\tmat.specular = props.get(18, 1.0);\r\n\t\t\t\tmat.gloss = props.get(19, 50);\r\n\t\t\t\tmat.specularColor = props.get(20, 0xffffff);\r\n\r\n\t\t\t\tvar methods_parsed:number = 0;\r\n\t\t\t\tvar targetID:number;\r\n\r\n\t\t\t\twhile (methods_parsed < num_methods) {\r\n\t\t\t\t\tvar method_type:number;\r\n\t\t\t\t\tmethod_type = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\t\t\t\tprops = this.awd_file_data.parseProperties({\r\n\t\t\t\t\t\t1: AWD3Utils.BADDR,\r\n\t\t\t\t\t\t2: AWD3Utils.BADDR,\r\n\t\t\t\t\t\t3: AWD3Utils.BADDR,\r\n\t\t\t\t\t\t101: this.awd_file_data.propsNrType,\r\n\t\t\t\t\t\t102: this.awd_file_data.propsNrType,\r\n\t\t\t\t\t\t103: this.awd_file_data.propsNrType,\r\n\t\t\t\t\t\t201: AWD3Utils.UINT32,\r\n\t\t\t\t\t\t202: AWD3Utils.UINT32,\r\n\t\t\t\t\t\t301: AWD3Utils.UINT16,\r\n\t\t\t\t\t\t302: AWD3Utils.UINT16,\r\n\t\t\t\t\t\t401: AWD3Utils.UINT8,\r\n\t\t\t\t\t\t402: AWD3Utils.UINT8,\r\n\t\t\t\t\t\t601: AWD3Utils.COLOR,\r\n\t\t\t\t\t\t602: AWD3Utils.COLOR,\r\n\t\t\t\t\t\t701: AWD3Utils.BOOL,\r\n\t\t\t\t\t\t702: AWD3Utils.BOOL,\r\n\t\t\t\t\t\t801: AWD3Utils.MTX4x4\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tswitch (method_type) {\r\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffectMethod\r\n\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tvar fx_method:EffectMethodBase = <EffectMethodBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t\tmat.addEffectMethod(fx_method);\r\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<EffectMethodBase> fx_method).name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\r\n\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tvar shadow_method:ShadowMethodBase = <ShadowMethodBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t\tmat.shadowMethod=shadow_method;\r\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<ShadowMethodBase> shadow_method).name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tvar cubeTex:SingleCubeTexture=undefined;\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tcubeTex = <SingleCubeTexture>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(cubeTex==undefined){\r\n\t\t\t\t\t\t\t\tcubeTex=<SingleCubeTexture>this.awd_file_data.getDefaultCubeTexture();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data EnvMapAmbientMethodMaterial\");\r\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod();\r\n\t\t\t\t\t\t\tmat.texture = cubeTex;\r\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + (<SingleCubeTexture> cubeTex).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(thisTex==undefined){\r\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the GradientDiffuseTexture (ID = \" + targetID + \" ) for this.awd_file_data GradientDiffuseMethod\");\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(<Single2DTexture>thisTex);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + (<Single2DTexture>thisTex).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(thisTex==undefined){\r\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this.awd_file_data LightMapDiffuseMethod\");\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(<Single2DTexture>thisTex, this.awd_file_data.getBlendModeStringFromEnum(props.get(401, 10)), false, mat.diffuseMethod);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + (<Single2DTexture> thisTex).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\r\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(thisTex==undefined){\r\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the SecoundNormalMap (ID = \" + targetID + \" ) for this.awd_file_data SimpleWaterNormalMethod\");\r\n\t\t\t\t\t\t\t//if (!mat.normalMap)\r\n\t\t\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find a normal Map on this.awd_file_data Material to use with this.awd_file_data SimpleWaterNormalMethod\");\r\n\t\t\t\t\t\t\tif(mat.normalMap==undefined)\r\n\t\t\t\t\t\t\t\tmat.normalMap = <Single2DTexture>thisTex;\r\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(<Single2DTexture>mat.normalMap, <Single2DTexture>thisTex);\r\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + (<Single2DTexture> thisTex).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t\t\t\tmethods_parsed += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// todo: we should not need this.awd_file_data anymore (if using texture-atlas)\r\n\t\telse if ((type>=3)&&(type<=7)){\r\n\t\t\t// if this.awd_file_data is a curve material, we create it, finalize it, assign it to block-cache and return and return.\r\n\t\t\tvar color:number = props.get(1, 0xcccccc);\r\n\t\t\tdebugString+=color;\r\n\t\t\r\n\t\t\tvar diffuseTex_addr:number = props.get(2, 0);\r\n\t\t\r\n\t\t\tvar diffuseTexture:TextureBase=undefined;\r\n\t\t\tif (diffuseTex_addr>0) {\r\n\t\t\t\tdiffuseTexture = <TextureBase>this.awd_file_data.getAssetByID(diffuseTex_addr);\r\n\t\t\t}\r\n\t\t\tif(diffuseTex_addr==undefined){\r\n\t\t\t\tdiffuseTexture=DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t}\r\n\t\t\r\n\t\t\tvar basic_mat:BasicMaterial = new BasicMaterial(<Single2DTexture>diffuseTexture);\r\n\t\t\t//debugString+= \" alpha = \"+props.get(10, 1.0)+\" \";\r\n\t\t\tdebugString+= \" texture = \"+diffuseTex_addr+\" \";\r\n\t\t\tbasic_mat.bothSides = true;\r\n\t\t\tbasic_mat.preserveAlpha = true;\r\n\t\t\tbasic_mat.alphaBlending = true;\r\n\t\t\tbasic_mat.extra = this.awd_file_data.parseUserAttributes();\r\n\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\tconsole.log(debugString);\r\n\t\t\tthis.awd_file_data.cur_block.data=basic_mat;\r\n\t\t\treturn;\r\n\t\t\r\n\t\t}\r\n\t\tmat.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data=mat;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(debugString);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = MaterialAWDParser;",
    "/**\r\n * Created by 80prozent on 4/18/2015.\r\n */\r\n\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AWD3Utils\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass MeshAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar num_materials:number;\r\n\t\tvar materials_parsed:number;\r\n\t\tif(this.awd_file_data.cur_block.type==23) {\r\n\t\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar geom:Geometry = <Geometry>this.awd_file_data.getAssetByID(data_id)\r\n\r\n\t\tif (geom==undefined) {\r\n\t\t\tgeom = new Geometry();\r\n\t\t}\r\n\r\n\t\tthis.awd_file_data.cur_block.geoID = data_id;\r\n\t\tvar materials:Array<MaterialBase> = new Array<MaterialBase>();\r\n\t\tnum_materials = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar materialNames:Array<string> = new Array<string>();\r\n\t\tmaterials_parsed = 0;\r\n\r\n\r\n\t\twhile (materials_parsed < num_materials) {\r\n\t\t\tvar mat_id:number;\r\n\t\t\tmat_id = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar m:MaterialBase = <MaterialBase> this.awd_file_data.getAssetByID(mat_id);\r\n\t\t\tif(m!=undefined) {\r\n\t\t\t\tmaterials.push(m);\r\n\t\t\t\tmaterialNames.push(m.name);\r\n\t\t\t}\r\n\t\t\tmaterials_parsed++;\r\n\t\t}\r\n\r\n\t\tvar mesh:Mesh = new Mesh(geom, null);\r\n\r\n\t\tif(this.awd_file_data.cur_block.type==23) {\r\n\r\n\t\t\tmesh.transform.matrix3D = mtx;\r\n\t\t\tif(par_id>0) {\r\n\t\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id)\r\n\r\n\t\t\t\tif (parent != undefined) {\r\n\t\t\t\t\tparent.addChild(mesh);\r\n\t\t\t\t\tparentName = parent.name;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\r\n\t\t\tmesh.material = materials[0];\r\n\t\t} else if (materials.length > 1) {\r\n\t\t\tvar i:number;\r\n\r\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\r\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\r\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\r\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ((this.awd_file_data.major_version > 2)||((this.awd_file_data.major_version >= 2) && (this.awd_file_data.minor_version == 1))) {\r\n\t\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8, 5:AWD3Utils.BOOL});\r\n\t\t\tmesh.pivot = new Vector3D(<number>props.get(1, 0), <number>props.get(2, 0), <number> props.get(3, 0));\r\n\t\t\tmesh.castsShadows = props.get(5, true);\r\n\t\t} else {\r\n\t\t\tthis.awd_file_data.parseProperties(null);\r\n\t\t}\r\n\r\n\t\tmesh.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = mesh;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a Mesh: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = MeshAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass MetadataAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT32, 2:AWD3Utils.AWDSTRING, 3:AWD3Utils.AWDSTRING, 4:AWD3Utils.AWDSTRING, 5:AWD3Utils.AWDSTRING});\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\r\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\r\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = MetadataAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDBitFlags\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport MovieClip \t\t\t\t\t= require(\"awayjs-player/lib/display/MovieClip\");\r\nimport TimelineKeyFrame \t\t\t= require(\"awayjs-player/lib/timeline/TimelineKeyFrame\");\r\nimport AddChildCommand \t\t\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildCommand\");\r\nimport AddChildAtDepthCommand\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildAtDepthCommand\");\r\nimport ApplyAS2DepthsCommand\t\t= require(\"awayjs-player/lib/timeline/commands/ApplyAS2DepthsCommand\");\r\nimport ExecuteScriptCommand \t\t= require(\"awayjs-player/lib/timeline/commands/ExecuteScriptCommand\");\r\nimport RemoveChildCommand \t\t\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildCommand\");\r\nimport RemoveChildrenAtDepthCommand\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildrenAtDepthCommand\");\r\nimport SetInstanceNameCommand \t\t= require(\"awayjs-player/lib/timeline/commands/SetInstanceNameCommand\");\r\nimport UpdatePropertyCommand \t\t= require(\"awayjs-player/lib/timeline/commands/UpdatePropertyCommand\");\r\nimport SetMaskCommand \t\t        = require(\"awayjs-player/lib/timeline/commands/SetMaskCommand\");\r\n\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\r\n\r\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\r\n\r\nclass MovieClipAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tprivate factory:AS2SceneGraphFactory;\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.factory = new AS2SceneGraphFactory();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar c:number;\r\n\t\tvar new_mc = this.factory.createMovieClip();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar isScene = !!this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar sceneID = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar fps:number = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t//console.log(\"fps = \"+fps);\r\n\t\t//new_mc.fps=fps;\r\n\t\tvar ms_per_frame = 1000 / fps;\r\n\t\tvar num_instances:number=0;\r\n\t\tvar num_all_display_instances:number=0;\r\n\r\n\r\n\t\t// register list of potential childs\r\n\t\t// a potential child can be reused on a timeline (added / removed / added)\r\n\t\t// However, for each potential child, we need to register the max-number of instances that a frame contains\r\n\t\t// we parse 2 lists of potential-childs:\r\n\t\t// -\tthe first list contains potential-childs that are only ever instanced once per frame.\r\n\t\t// -\tthe second list contains potential-childs that are instanced multiple times on some frames.\r\n\r\n\t\t// on registering a child, the child gets a incremental-id assigned. This is the id, that the commands are using to access the childs.\r\n\t\t// hence we need to be careful to register all objects in correct order.\r\n\r\n\t\tvar num_potential_childs:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_childs; i++) {\r\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\tnew_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tnum_all_display_instances+=num_potential_childs;\r\n\t\tvar num_potential_childs_multi_instanced = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tnum_potential_childs+=num_potential_childs_multi_instanced;\r\n\t\tfor (i = 0; i < num_potential_childs_multi_instanced; i++) {\r\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tnum_instances = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\tnum_all_display_instances+=num_instances;\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\r\n\t\t\t\t\tnew_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\r\n\t\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(\"Parsed \"+num_potential_childs+\" potential childs. They will be used by \"+num_all_display_instances+\" instances.\");\r\n\r\n\t\t// register list of potential sounds\r\n\t\t// a potential child can be reused on a timeline (added / removed / added)\r\n\t\tvar num_potential_sounds = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_sounds; i++) {\r\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\t//todo: register sound objects on movieclip\r\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//todo: this.awd_file_data is a error that might break complete timeline, because all sound obj-id shift\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(\"Parsed \"+num_potential_sounds+\" potential sounds\");\r\n\r\n\t\tvar numFrames = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\t//console.log(\"numFrames \"+numFrames);\r\n\r\n\t\tvar totalDuration:number;\r\n\t\tvar frameDuration:number;\r\n\t\tvar numLabels:number;\r\n\t\tvar numCommands:number;\r\n\t\tvar objectID:number;\r\n\t\tvar target_depth:number;\r\n\t\tvar resourceID:number;\r\n\t\tvar number_of_obj:number;\r\n\t\tvar commandType:number;\r\n\t\tvar frame:TimelineKeyFrame;\r\n\t\tvar label:string;\r\n\t\tvar hasDepthChanges:boolean;\r\n\t\ttotalDuration=0;\r\n\t\tfor (i = 0; i < numFrames; i++) {\r\n\t\t\tframe = new TimelineKeyFrame();\r\n\t\t\t// todo: remove the ms_per_frame to set the duration in frames\r\n\t\t\tframeDuration = this.awd_file_data.newBlockBytes.readUnsignedInt()*ms_per_frame;\r\n\t\t\tframe.setFrameTime(totalDuration, frameDuration);\r\n\t\t\ttotalDuration += frameDuration;\r\n\t\t\t//console.log(\"duration = \" + frameDuration);\r\n\r\n\t\t\tnumLabels = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\tfor (j = 0; j < numLabels; j++) {\r\n\t\t\t\tframe.label = this.awd_file_data.parseVarStr();\r\n\t\t\t\t//console.log(\"label \"+label);\r\n\t\t\t}\r\n\r\n\t\t\tnumCommands = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t//console.log(\"numCommands \"+numCommands);\r\n\t\t\t//traceString += \"\\n      Commands \" + numCommands;\r\n\t\t\thasDepthChanges = false;\r\n\t\t\tfor (j = 0; j < numCommands; j++) {\r\n\t\t\t\tcommandType = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\r\n\t\t\t\t// 1 = remove a number of objects by depth\r\n\t\t\t\t// 2 = add a object by child-id at specific depth\r\n\t\t\t\t// 3 = update a object by child-id\r\n\t\t\t\t// 4 = add / update sound - (not finished)\r\n\r\n\t\t\t\tswitch (commandType) {\r\n\r\n\t\t\t\t\tcase 1:// remove a number of objects at specific depth\r\n\t\t\t\t\t\tnumber_of_obj = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t//console.log(\"number_of_obj \", number_of_obj);\r\n\t\t\t\t\t\tvar remove_depths:Array<number>=new Array<number>();\r\n\t\t\t\t\t\tfor (c = 0; c < number_of_obj; c++) {\r\n\t\t\t\t\t\t\t// Remove Object Command\r\n\t\t\t\t\t\t\ttarget_depth = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\tremove_depths.push(target_depth);\r\n\t\t\t\t\t\t\t//console.log(\"\\n       - Remove object at depth: \" + target_depth);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tframe.addConstructCommand(new RemoveChildrenAtDepthCommand(remove_depths));\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2:// add a of object by child-id at specific depth\r\n\t\t\t\t\tcase 3:// update a object by child-id\r\n\t\t\t\t\t\tobjectID = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t//console.log(\"add / update objectID \", objectID);\r\n\t\t\t\t\t\tif (commandType == 2) {\r\n\t\t\t\t\t\t\thasDepthChanges=true;\r\n\t\t\t\t\t\t\ttarget_depth = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t//console.log(\"target_depth \", target_depth);\r\n\t\t\t\t\t\t\tvar potChild = new_mc.getPotentialChildPrototype(objectID);\r\n\t\t\t\t\t\t\tif (potChild != undefined) {\r\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new AddChildAtDepthCommand(objectID, target_depth));\r\n\t\t\t\t\t\t\t\t// if the object is a tetfield, we set the textfield-name as instancename\r\n\t\t\t\t\t\t\t\tif(potChild.isAsset(TextField)) {\r\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetInstanceNameCommand(objectID, potChild.name));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tconsole.log(\"ERROR: could not find the objectID \", objectID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar props_flag = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t/*\tProps_flags\r\n\t\t\t\t\t\t 1: read display matrix - 6 x float,\r\n\t\t\t\t\t\t 2: read display matrix - read another UINT8-bitflag that determinates what matrix components to parse\r\n\t\t\t\t\t\t 3: read color matrix - 4 x float, 4 x uint16\r\n\t\t\t\t\t\t 4: read color matrix - read another UINT8-bitflag that determinates what matrix components to parse\r\n\t\t\t\t\t\t 5: blendmode - uint8\r\n\t\t\t\t\t\t 6: visible - boolean\r\n\t\t\t\t\t\t 7: AWD3Parser.UINT8\r\n\t\t\t\t\t\t });*/\r\n\t\t\t\t\t\t// read display matrix\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG1)) {\r\n\t\t\t\t\t\t\tvar thisMatrix = new Matrix3D();\r\n\t\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG2)) {\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[0] = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[1] = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[4] = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[5] = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.position = new Vector3D(this.awd_file_data.newBlockBytes.readFloat(), this.awd_file_data.newBlockBytes.readFloat(), 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"_iMatrix3D\", thisMatrix));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// read colortransforms\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG3)) {\r\n\t\t\t\t\t\t\tvar thisColorTransform = new ColorTransform();\r\n\t\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG4)) {\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthisColorTransform.redMultiplier = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.greenMultiplier = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.blueMultiplier = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.alphaMultiplier = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.redOffset = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.greenOffset = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.blueOffset = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.alphaOffset = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG5)) {\r\n\t\t\t\t\t\t\tvar blendmode_int = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\t\t\tvar blendmode_string = this.awd_file_data.getBlendModeStringFromEnum(blendmode_int);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG6)) {\r\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"visible\", this.awd_file_data.newBlockBytes.readByte()));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG7)) {\r\n\t\t\t\t\t\t\tvar instanceName = this.awd_file_data.parseVarStr();\r\n\t\t\t\t\t\t\tif (instanceName.length) {\r\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetInstanceNameCommand(objectID, instanceName));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG8)) {\r\n\t\t\t\t\t\t\tvar mask_id_nums = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t\tvar mask_ids = new Array();\r\n\t\t\t\t\t\t\tfor (var mi_cnt = 0; mi_cnt < mask_id_nums; mi_cnt++) {\r\n\t\t\t\t\t\t\t\tmask_ids.push(this.awd_file_data.newBlockBytes.readShort());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (mask_ids.length > 0) {\r\n\t\t\t\t\t\t\t\tif ((mask_ids.length == 1) && (mask_ids[0] == -1)) {\r\n\t\t\t\t\t\t\t\t\t// TODO: this.awd_file_data object is used as mask\r\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"_iMaskID\", objectID));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetMaskCommand(objectID, mask_ids));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 4:\r\n\r\n\t\t\t\t\t\t// Add Sound Command\r\n\t\t\t\t\t\t// TODO: create CommandPropsSound and check which asset to use\r\n\t\t\t\t\t\tobjectID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\t// TODO: implement sound in timeline\r\n\t\t\t\t\t\t//commandString += \"\\n      - Add new Sound AWD-ID = \" + resourceID.toString() + \" as object_id = \" + objectID.toString();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t//commandString += \"\\n       - Unknown Command Type = \" + commandType;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (hasDepthChanges) {\r\n\t\t\t\t// only want to do this.awd_file_data once after all children's depth values are updated\r\n\t\t\t\tframe.addConstructCommand(new ApplyAS2DepthsCommand());\r\n\t\t\t\thasDepthChanges = false;\r\n\t\t\t}\r\n\r\n\t\t\tvar length_code = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tif (length_code > 0) {\r\n\t\t\t\t// TODO: Script should probably not be attached to keyframes?\r\n\t\t\t\tvar frame_code = this.awd_file_data.newBlockBytes.readUTFBytes(length_code);\r\n\t\t\t\tframe.addConstructCommand(new ExecuteScriptCommand(frame_code));\r\n\t\t\t\t//traceString += \"\\nframe-code = \" + frame_code;\r\n\t\t\t}\r\n\t\t\t//traceString += commandString;\r\n\t\t\t//trace(\"length_code = \"+length_code+\" frame_code = \"+frame_code);\r\n\t\t\tthis.awd_file_data.newBlockBytes.readUnsignedInt();// user attributes - skip for now\r\n\t\t\t//console.log(traceString);\r\n\t\t\tnew_mc.addFrame(frame);\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = new_mc;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| isScene = \" + isScene + \"| sceneID = \" + sceneID + \"| numFrames = \" + numFrames);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = MovieClipAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\r\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\r\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\r\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nclass PrefabAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar name:string;\r\n\t\tvar prefab:PrefabBase;\r\n\t\tvar primType:number;\r\n\t\tvar subs_parsed:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar bsm:Matrix3D;\r\n\r\n\t\t// Read name and sub count\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tprimType = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tprops = this.awd_file_data.parseProperties({101:this.awd_file_data.geoNrType, 102:this.awd_file_data.geoNrType, 103:this.awd_file_data.geoNrType, 110:this.awd_file_data.geoNrType, 111:this.awd_file_data.geoNrType, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 303:AWD3Utils.UINT16, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL, 703:AWD3Utils.BOOL, 704:AWD3Utils.BOOL});\r\n\r\n\t\tvar primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"]\r\n\r\n\t\tswitch (primType) {\r\n\t\t\t// to do, not all properties are set on all primitives\r\n\r\n\t\t\tcase 1:\r\n\t\t\t\tprefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tprefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\tprefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\r\n\t\t\t\tif (!props.get(701, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\r\n\t\t\t\tif (!props.get(702, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\r\n\t\t\t\tif (!props.get(703, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 5:\r\n\t\t\t\tprefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 7:\r\n\t\t\t\tprefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tprefab = new PrefabBase();\r\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\r\n\t\t\t//geom.subGeometries;\r\n\t\t\t//geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\r\n\t\t}\r\n\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = prefab;\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tif ((primType < 0) || (primType > 7)) {\r\n\t\t\t\tprimType = 0;\r\n\t\t\t}\r\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + this.awd_file_data.cur_block.name + \"| type = \" + primitiveTypes[primType]);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = PrefabAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\r\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\r\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\r\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\r\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\r\n\r\nclass ShadowMethodAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar type:number;\r\n\t\tvar data_len:number;\r\n\t\tvar asset:ShadowMethodBase;\r\n\t\tvar shadowLightID:number;\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tshadowLightID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar light:LightBase=<LightBase> this.awd_file_data.getAssetByID(shadowLightID);\r\n\r\n\t\tif (light==undefined) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the TargetLight (ID = \" + shadowLightID + \" ) for this.awd_file_data ShadowMethod - ShadowMethod not created\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tasset = this.parseShadowMethodList(light);\r\n\r\n\t\tif (!asset)\r\n\t\t\treturn;\r\n\t\tthis.awd_file_data.parseUserAttributes(); // Ignore for now\r\n\t\tthis.awd_file_data.cur_block.data = asset;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", light.name);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// this.awd_file_data functions reads and creates a ShadowMethodMethod\r\n\tprivate parseShadowMethodList(light:LightBase):ShadowMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar shadowMethod:ShadowMethodBase;\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 101:this.awd_file_data.propsNrType, 102:this.awd_file_data.propsNrType, 103:this.awd_file_data.propsNrType, 201:AWD3Utils.UINT32, 202:AWD3Utils.UINT32, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 401:AWD3Utils.UINT8, 402:AWD3Utils.UINT8, 601:AWD3Utils.COLOR, 602:AWD3Utils.COLOR, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL, 801:AWD3Utils.MTX4x4});\r\n\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>\r\n\t\tswitch (methodType) {\r\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this.awd_file_data CascadeShadowMapMethod - ShadowMethod not created\");\r\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\r\n\t\t\t//\t\t\t\t\t}\r\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 1002: //ShadowNearMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\tvar shadow_meth:ShadowMapMethodBase = <ShadowMapMethodBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\tif (shadow_meth==undefined) {\r\n\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this.awd_file_data ShadowNearMethod - ShadowMethod not created\");\r\n\t\t\t\t\treturn shadowMethod;\r\n\t\t\t\t}\r\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> shadow_meth);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1101: //ShadowFilteredMethod\r\n\r\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 1102: //ShadowDitheredMethod\r\n\r\n\r\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1103: //ShadowSoftMethod\r\n\r\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1104: //ShadowHardMethod\r\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\treturn shadowMethod;\r\n\t}\r\n}\r\n\r\nexport = ShadowMethodAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\r\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\r\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\r\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\r\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\r\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\r\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\r\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\r\n\r\nclass SharedMethodAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tvar asset:EffectMethodBase;\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tasset = this.parseSharedMethodList();\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = asset;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\r\n\t\t}\r\n\t}\r\n\r\n\t// this.awd_file_data functions reads and creates a EffectMethod\r\n\tprivate parseSharedMethodList():EffectMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar effectMethodReturn:EffectMethodBase;\r\n\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 101:this.awd_file_data.propsNrType, 102:this.awd_file_data.propsNrType, 103:this.awd_file_data.propsNrType, 104:this.awd_file_data.propsNrType, 105:this.awd_file_data.propsNrType, 106:this.awd_file_data.propsNrType, 107:this.awd_file_data.propsNrType, 201:AWD3Utils.UINT32, 202:AWD3Utils.UINT32, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 401:AWD3Utils.UINT8, 402:AWD3Utils.UINT8, 601:AWD3Utils.COLOR, 602:AWD3Utils.COLOR, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL});\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tswitch (methodType) {\r\n\t\t\t// Effect Methods\r\n\t\t\tcase 401: //ColorMatrix\r\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 402: //ColorTransform\r\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\r\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\r\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 403: //EnvMap\r\n\r\n\t\t\t\t/*\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\tconsole.log('ENV MAP', targetID);\r\n\r\n\r\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [ TextureBase.assetType ], \"CubeTexture\");\r\n\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data EnvMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(<SingleCubeTexture> returnedArray[1], <number> props.get(101, 1));\r\n\t\t\t\ttargetID = props.get(2, 0);\r\n\t\t\t\tif (targetID > 0) {\r\n\t\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the Mask-texture (ID = \" + targetID + \" ) for this.awd_file_data EnvMapMethod\");\r\n\r\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\r\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <Texture2DBase> returnedArray[1];\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t\tcase 404: //LightMapMethod\r\n\t\t\t\t/*\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this.awd_file_data LightMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(returnedArray[1], this.awd_file_data.getBlendModeStringFromEnum(props.get(401, 10))); //usesecondaryUV not set\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureProjector.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this.awd_file_data ProjectiveTextureMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 406: //RimLightMethod\r\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\r\n\t\t\t\tbreak;\r\n\t\t\tcase 407: //AlphaMaskMethod\r\n\t\t\t\t/*\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the Alpha-texture (ID = \" + targetID + \" ) for this.awd_file_data AlphaMaskMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(returnedArray[1], props.get(701, false));\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data RefractionEnvMapMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\r\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 410: //FresnelEnvMapMethod\r\n\t\t\t\t/*\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\r\n\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data FresnelEnvMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(returnedArray[1], props.get(101, 1));\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t\tcase 411: //FogMethod\r\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\treturn effectMethodReturn;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport = SharedMethodAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass Single2DTextureAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tvar asset:Single2DTexture;\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\t//this.awd_file_data._texture_users[this.awd_file_data._cur_block_id.toString()] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\r\n\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\r\n\r\n\t\t} else {\r\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray;\r\n\t\t\tdata = new ByteArray();\r\n\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\r\n\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\r\n\r\n\t\t\t//\r\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\r\n\t\t\t//\r\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\r\n\t\t\t// This gives the browser time to initialise image width / height.\r\n\r\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\r\n\t\t// Ignore for now\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Bitmap for Texture\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = Single2DTextureAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\n\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nclass SingleCubeTextureAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar data_len:number;\r\n\t\tvar i:number;\r\n\r\n\t\t//this.awd_file_data._cubeTextures = new Array<any>();\r\n\t\t//this.awd_file_data._texture_users[ this.awd_file_data._cur_block_id.toString() ] = [];\r\n\r\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\r\n\t\t//this.awd_file_data._blocks[blockID].name =\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\t//this.awd_file_data.texture_users[this.awd_file_data.cur_block_id.toString()] = [];\r\n\t\t\t//this.awd_file_data.cubeTextures.push(null);\r\n\r\n\t\t\t// External\r\n\t\t\tif (type == 0) {\r\n\t\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar url:string;\r\n\t\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\r\n\r\n\t\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\r\n\t\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block_id.toString() + \"#\" + i, new URLRequest(url), false, null, true);\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar data:ByteArray;\r\n\t\t\t\tdata = new ByteArray();\r\n\r\n\t\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\r\n\t\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block_id.toString() + \"#\" + i, null, false, ParserUtils.byteArrayToImage(data), true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\r\n\t\t// Ignore for now\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t//this.awd_file_data._pPauseAndRetrieveDependencies();\r\n\t\t//this.awd_file_data._blocks[blockID].data = asset;\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing 6 \" + textureStylesNames[type] + \" Bitmaps for CubeTexture\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SingleCubeTextureAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nclass SkeletonAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar skeleton:Skeleton = new Skeleton();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tthis.awd_file_data.parseProperties(null); // Discard properties for now\r\n\r\n\t\tvar joints_parsed:number /*uint*/ = 0;\r\n\t\twhile (joints_parsed < num_joints) {\r\n\t\t\tvar joint:SkeletonJoint;\r\n\t\t\tvar ibp:Matrix3D;\r\n\t\t\t// Ignore joint id\r\n\t\t\tthis.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\tjoint = new SkeletonJoint();\r\n\t\t\tjoint.parentIndex = this.awd_file_data.newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\r\n\t\t\tjoint.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\t\tibp = this.awd_file_data.parseMatrix3D();\r\n\t\t\tjoint.inverseBindPose = ibp.rawData;\r\n\t\t\t// Ignore joint props/attributes for now\r\n\t\t\tthis.awd_file_data.parseProperties(null);\r\n\t\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t\tskeleton.joints.push(joint);\r\n\t\t\tjoints_parsed++;\r\n\t\t}\r\n\r\n\t\t// Discard attributes for now\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = skeleton;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SkeletonAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\n\r\nclass SkeletonAnimClipAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar frame_dur:number;\r\n\t\tvar pose_addr:number /*uint*/;\r\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_frames:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tthis.awd_file_data.parseProperties(null); // Ignore properties for now\r\n\r\n\t\tvar frames_parsed:number /*uint*/ = 0;\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tpose_addr = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tframe_dur = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\tvar skel_pose:SkeletonPose = <SkeletonPose>this.awd_file_data.getAssetByID(pose_addr);\r\n\t\t\tif (skel_pose!=undefined) {\r\n\t\t\t\tclip.addFrame(skel_pose, frame_dur);\r\n\t\t\t}\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\t// Ignore attributes for now\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = clip;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SkeletonAnimClipAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nclass SkeletonPoseAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar pose:SkeletonPose = new SkeletonPose();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tthis.awd_file_data.parseProperties(null); // Ignore properties for now\r\n\r\n\r\n\t\tvar joints_parsed:number /*uint*/ = 0;\r\n\t\twhile (joints_parsed < num_joints) {\r\n\t\t\tvar joint_pose:JointPose;\r\n\t\t\tvar has_transform:number /*uint*/;\r\n\t\t\tjoint_pose = new JointPose();\r\n\t\t\thas_transform = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\tif (has_transform == 1) {\r\n\t\t\t\tvar mtx_data:Array<number> = this.awd_file_data.parseMatrix43RawData();\r\n\r\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\r\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\r\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\r\n\r\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\r\n\t\t\t}\r\n\t\t\tjoints_parsed++;\r\n\t\t}\r\n\t\t// Skip attributes for now\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = pose;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SkeletonPoseAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass SkyboxAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar cubeTexAddr:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\r\n\t\tvar cube_tex:SingleCubeTexture = undefined;\r\n\t\tif(cubeTexAddr>0) {\r\n\t\t\tcube_tex = <SingleCubeTexture> this.awd_file_data.getAssetByID(cubeTexAddr);\r\n\t\t}\r\n\t\tif(cube_tex==undefined){\r\n\t\t\tcube_tex=<SingleCubeTexture>this.awd_file_data.getDefaultCubeTexture();\r\n\t\t}\r\n\t\t//if ((!returnedArrayCubeTex[0]) && (cubeTexAddr != 0))\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the Cubetexture (ID = \" + cubeTexAddr + \" ) for this.awd_file_data Skybox\");\r\n\t\tvar new_skybox:Skybox = new Skybox(<SingleCubeTexture> cube_tex);\r\n\r\n\t\tthis.awd_file_data.parseProperties(null)\r\n\t\tnew_skybox.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = new_skybox;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + this.awd_file_data.cur_block.name + \"' | CubeTexture-Name = \" + cube_tex.name);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SkyboxAWDParser;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\n\r\nclass TesselatedFontAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar new_font:Font=new Font();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar font_style_cnt:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"Font font_style_cnt = \"+font_style_cnt);\r\n\t\tfor (var i:number = 0; i < font_style_cnt; ++i) {\r\n\t\t\tvar font_style_name:string = this.awd_file_data.parseVarStr();\r\n\t\t\t//console.log(\"Font font_style_name = \"+font_style_name);\r\n\t\t\tvar new_font_style:TesselatedFontTable=new_font.get_font_table(font_style_name);\r\n\t\t\tnew_font_style.set_font_em_size(this.awd_file_data.newBlockBytes.readUnsignedInt());\r\n\t\t\t//console.log(\"Font new_font_style.font_em_size = \"+new_font_style.get_font_em_size);\r\n\t\t\tvar font_style_char_cnt:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t//console.log(\"Font font_style_char_cnt = \"+font_style_char_cnt);\r\n\t\t\tfor (var i:number = 0; i < font_style_char_cnt; ++i) {\r\n\r\n\t\t\t\tvar font_style_char:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"Font font_style_char = \"+font_style_char);\r\n\t\t\t\t// todo: this.awd_file_data is basically a simplified version of the subgeom-parsing done in parseTriangleGeometry. Make a parseSubGeom() instead (?)\r\n\t\t\t\tvar sm_len:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar sm_end:number = this.awd_file_data.newBlockBytes.position + sm_len;\r\n\t\t\t\t//console.log(\"Font sm_len = \"+sm_len);\r\n\r\n\t\t\t\t//this.awd_file_data.parseProperties(null); // no properties for font-table subgeos\r\n\t\t\t\t// Loop through data streams\r\n\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < sm_end) {\r\n\t\t\t\t\tvar idx:number = 0;\r\n\t\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n\t\t\t\t\t// Type, field type, length\r\n\t\t\t\t\tstr_type = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_ftype = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\r\n\r\n\t\t\t\t\tif (str_type == 2) {//face indicies positions\r\n\t\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\t\tindices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\r\n\t\t\t\t\t\tvar idx_pos:number = 0;\r\n\t\t\t\t\t\tvar idx_curves:number = 0;\r\n\t\t\t\t\t\tvar idx_uvs:number = 0;\r\n\r\n\t\t\t\t\t\tvar positions:Array<number> = new Array<number>();\r\n\t\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\r\n\t\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// x\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// y\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// type\r\n\r\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 2\r\n\r\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.awd_file_data.parseProperties(null);// no attributes for font-table subgeos\r\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\r\n\t\t\t\tcurve_sub_geom.updateIndices(indices);\r\n\t\t\t\tcurve_sub_geom.updatePositions(positions);\r\n\t\t\t\tcurve_sub_geom.updateCurves(curveData);\r\n\t\t\t\tcurve_sub_geom.updateUVs(uvs);\r\n\t\t\t\tnew_font_style.set_subgeo_for_char(font_style_char.toString(), curve_sub_geom);\r\n\t\t\t}\r\n\t\t\t//console.log(\"Parsed a font-table\");\r\n\r\n\t\t}\r\n\t\t//console.log(\"Parsed a font\");\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = new_font;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a font: Name = '\" + this.awd_file_data.cur_block.name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\n\r\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\r\n\r\nclass TextfieldAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tprivate factory:AS2SceneGraphFactory;\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.factory = new AS2SceneGraphFactory();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar newTextField = this.factory.createTextField();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar text_field_type:number=this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tif(text_field_type==0) {\r\n\t\t\tnewTextField.type = \"static\";\r\n\t\t}\r\n\t\telse if(text_field_type==1) {\r\n\t\t\tnewTextField.type = \"dynamic\";\r\n\t\t}\r\n\t\telse if(text_field_type==2) {\r\n\t\t\tnewTextField.type = \"input\";\r\n\t\t}\r\n\t\telse if(text_field_type==3) {\r\n\t\t\tnewTextField.type =\"input\";\r\n\t\t\tnewTextField.displayAsPassword=true;\r\n\t\t}\r\n\r\n\t\tnewTextField.width=this.awd_file_data.newBlockBytes.readFloat();\r\n\t\tnewTextField.height=this.awd_file_data.newBlockBytes.readFloat();\r\n\t\tvar num_paragraphs:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar complete_text:string = \"\";\r\n\t\t//console.log(\"num_paragraphs  '\" + num_paragraphs);\r\n\t\tvar text_format:TextFormat;\r\n\t\tfor(var paracnt:number=0; paracnt<num_paragraphs; paracnt++){\r\n\r\n\t\t\tvar num_textruns:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t//console.log(\"num_textruns  '\" + num_textruns);\r\n\t\t\tfor(var textrun_cnt:number=0; textrun_cnt<num_textruns; textrun_cnt++) {\r\n\r\n\t\t\t\tvar format_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"format_id  '\" + format_id);\r\n\t\t\t\tvar textFormat:TextFormat = <TextFormat>this.awd_file_data.getAssetByID(format_id);\r\n\t\t\t\tif (textFormat==undefined) {\r\n\t\t\t\t\ttext_format = new TextFormat();\r\n\t\t\t\t}\r\n\t\t\t\t//console.log(\"text_format  '\" + text_format.name);\r\n\t\t\t\tvar txt_length = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"txt_length  '\" + txt_length);\r\n\t\t\t\tif (txt_length > 0) {\r\n\t\t\t\t\tvar this_txt:string = this.awd_file_data.newBlockBytes.readUTFBytes(txt_length);\r\n\t\t\t\t\t//newTextField.appendText(this_txt, text_format);\r\n\t\t\t\t\tcomplete_text+=this_txt;\r\n\t\t\t\t\t//console.log(\"this_txt  '\" + this_txt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//newTextField.closeParagraph();\r\n\t\t}\r\n\t\tnewTextField.textFormat=text_format;\r\n\t\tnewTextField.text=complete_text;\r\n\r\n\t\t//newTextField.construct_geometry();\r\n\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BOOL, 3:AWD3Utils.BOOL, 4:AWD3Utils.BOOL, 5:AWD3Utils.BOOL, 7:AWD3Utils.UINT8, 8:AWD3Utils.UINT8, 9:AWD3Utils.UINT8});\r\n\t\tnewTextField.selectable = props.get(1, false);\r\n\t\tnewTextField.border =  props.get(3, false);\r\n\t\t//newTextField.renderHTML =  props.get(4, false);\r\n\t\t//newTextField.scrollable =  props.get(5, false);\r\n\t\t//newTextField.text_flow =  props.get(7, 0);\r\n\t\t//newTextField.orientationMode =  props.get(8, 0);\r\n\t\t//newTextField.line_mode =  props.get(9, 0);\r\n\r\n\t\tnewTextField.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = newTextField;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a TextField: Name = '\" + newTextField.name + \"| text  = \" + complete_text);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = TextfieldAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\r\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TextformatAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar newTextFormat:TextFormat = new TextFormat();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\t//console.log(\"this.awd_file_data._blocks[blockID].name  '\" + this.awd_file_data._blocks[blockID].name );\r\n\t\tvar font_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"font_id  '\" + font_id);\r\n\t\tvar font_style_name:string = this.awd_file_data.parseVarStr();\r\n\t\t//console.log(\"font_style_name  '\" + font_style_name);\r\n\t\tvar font:Font = <Font>this.awd_file_data.getAssetByID(font_id);\r\n\t\tif (font==undefined) {\r\n\t\t\tfont = new Font();\r\n\t\t}\r\n\t\tnewTextFormat.font_name = font.name;\r\n\t\tvar font_table:TesselatedFontTable = font.get_font_table(font_style_name);\r\n\t\tif(font_table!=null){\r\n\t\t\tnewTextFormat.font_style = font_style_name;\r\n\t\t\tnewTextFormat.font_table = font_table;\r\n\t\t}\r\n\r\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"mat  '\" + data_id);\r\n\t\tvar mat:BasicMaterial = <BasicMaterial> this.awd_file_data.getAssetByID(data_id);\r\n\r\n\t\tif (mat==undefined) {\r\n\t\t\tmat = new BasicMaterial();\r\n\t\t}\r\n\t\tmat.bothSides=true;\r\n\r\n\t\tvar num_uv_values:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t//console.log(\"num_uv_values  '\" + num_uv_values);\r\n\t\tvar uv_values:Array<number>=[];\r\n\t\tfor(var uvcnt:number=0; uvcnt<num_uv_values; uvcnt++){\r\n\t\t\tvar uv_value:number=this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\tuv_values.push(uv_value);\r\n\t\t\t//console.log(\"uv_value  '\" + uv_value);\r\n\t\t}\r\n\t\tnewTextFormat.uv_values=uv_values;\r\n\t\tvar format_props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT16, 2:AWD3Utils.UINT16, 3:AWD3Utils.UINT8,4:AWD3Utils.UINT8,5:AWD3Utils.UINT8,6:AWD3Utils.UINT8, 7:AWD3Utils.UINT16, 8:AWD3Utils.UINT16, 9:AWD3Utils.UINT16, 10:AWD3Utils.UINT16});\r\n\r\n\t\tnewTextFormat.size = format_props.get(1,12);\r\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\r\n\t\t//newTextFormat.rotated = format_props.get(3,false);\r\n\t\tnewTextFormat.kerning = format_props.get(4,true);\r\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\r\n\t\t//newTextFormat.align = format_props.get(6,0);\r\n\t\tnewTextFormat.indent = format_props.get(7,0);\r\n\t\tnewTextFormat.leftMargin = format_props.get(8,0);\r\n\t\tnewTextFormat.rightMargin = format_props.get(9,0);\r\n\t\t//newTextFormat.linespacing = format_props.get(10,0);\r\n\t\tnewTextFormat.size = format_props.get(1,12);\r\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\r\n\t\t//newTextFormat.rotated = format_props.get(3,false);\r\n\t\tnewTextFormat.kerning = format_props.get(4,true);\r\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\r\n\t\tnewTextFormat.material = mat;\r\n\t\tthis.awd_file_data.parseUserAttributes();// textformat has no extra-properties\r\n\t\t//newTextFormat.extra =\r\n\r\n\t\tthis.awd_file_data.cur_block.data = newTextFormat;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a TextFormat: Name = '\" + name + \" font: \"+font.name);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = TextformatAWDParser;/**\r\n * Created by 80prozent on 4/18/2015.\r\n */\r\n",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\n\r\nclass VertexAnimClipAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar poseOnly:boolean=false;\r\n\t\tif(this.awd_file_data.cur_block.type==111){\r\n\t\t\tposeOnly=true\r\n\t\t}\r\n\t\tvar num_frames:number /*uint*/ = 1;\r\n\t\tvar num_submeshes:number /*uint*/;\r\n\t\tvar frames_parsed:number /*uint*/;\r\n\t\tvar subMeshParsed:number /*uint*/;\r\n\t\tvar frame_dur:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar str_len:number;\r\n\t\tvar str_end:number;\r\n\t\tvar geometry:Geometry;\r\n\t\tvar subGeom:TriangleSubGeometry;\r\n\t\tvar idx:number /*int*/ = 0;\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar verts:Array<number>;\r\n\t\tvar num_Streams:number /*int*/ = 0;\r\n\t\tvar streamsParsed:number /*int*/ = 0;\r\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar thisGeo:Geometry;\r\n\t\tvar clip:VertexClipNode = new VertexClipNode();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar geoAdress:number /*int*/ = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar geom:Geometry = <Geometry>this.awd_file_data.getAssetByID(geoAdress);\r\n\t\tif (geom==undefined) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the target-Geometry-Object \" + geoAdress + \" ) for this.awd_file_data VertexClipNode\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar uvs:Array<Array<number>> = this.awd_file_data.getUVForVertexAnimation(geoAdress);\r\n\t\tif (!poseOnly)\r\n\t\t\tnum_frames = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\tnum_submeshes = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tnum_Streams = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tstreamsParsed = 0;\r\n\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\tstreamtypes.push(this.awd_file_data.newBlockBytes.readUnsignedShort());\r\n\t\t\tstreamsParsed++;\r\n\t\t}\r\n\t\tprops = this.awd_file_data.parseProperties({1:AWD3Utils.BOOL, 2:AWD3Utils.BOOL});\r\n\r\n\t\tclip.looping = props.get(1, true);\r\n\t\tclip.stitchFinalFrame = props.get(2, false);\r\n\r\n\t\tframes_parsed = 0;\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tframe_dur = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\tgeometry = new Geometry();\r\n\t\t\tsubMeshParsed = 0;\r\n\t\t\twhile (subMeshParsed < num_submeshes) {\r\n\t\t\t\tstreamsParsed = 0;\r\n\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\r\n\t\t\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\r\n\t\t\t\t\t\tindices = geom.subGeometries[subMeshParsed].indices;\r\n\t\t\t\t\t\tverts = new Array<number>();\r\n\t\t\t\t\t\tidx = 0;\r\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\t\tx = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo)\r\n\t\t\t\t\t\t\ty = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo)\r\n\t\t\t\t\t\t\tz = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo)\r\n\t\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsubGeom = new TriangleSubGeometry(true);\r\n\t\t\t\t\t\tsubGeom.updateIndices(indices);\r\n\t\t\t\t\t\tsubGeom.updatePositions(verts);\r\n\t\t\t\t\t\tsubGeom.updateUVs(uvs[subMeshParsed]);\r\n\t\t\t\t\t\tsubGeom.updateVertexNormals(null);\r\n\t\t\t\t\t\tsubGeom.updateVertexTangents(null);\r\n\t\t\t\t\t\tsubGeom.autoDeriveNormals = false;\r\n\t\t\t\t\t\tsubGeom.autoDeriveTangents = false;\r\n\t\t\t\t\t\tsubMeshParsed++;\r\n\t\t\t\t\t\tgeometry.addSubGeometry(subGeom)\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t\tstreamsParsed++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tclip.addFrame(geometry, frame_dur);\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data=clip;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + geom.name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = VertexAnimClipAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\n\r\nclass VertexAnimationSetAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar poseBlockAdress:number /*int*/\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_frames:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT16});\r\n\t\tvar frames_parsed:number /*uint*/ = 0;\r\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\r\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tposeBlockAdress = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar animNode:AnimationNodeBase = <AnimationNodeBase>this.awd_file_data.getAssetByID(poseBlockAdress);\r\n\t\t\tif (animNode==undefined) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the AnimationClipNode Nr \" + frames_parsed + \" ( \" + poseBlockAdress + \" ) for this.awd_file_data AnimationSet\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (animNode instanceof VertexClipNode)\r\n\t\t\t\t\tvertexFrames.push(<VertexClipNode>animNode)\r\n\t\t\t\tif (animNode instanceof SkeletonClipNode)\r\n\t\t\t\t\tskeletonFrames.push(<SkeletonClipNode>animNode)\r\n\t\t\t}\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not create this.awd_file_data AnimationSet, because it contains no animations\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tif (vertexFrames.length > 0) {\r\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\r\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\r\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\r\n\t\t\tthis.awd_file_data.cur_block.data = newVertexAnimationSet;\r\n\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + newVertexAnimationSet.name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames.toString());\r\n\t\t\treturn;\r\n\t\t} else if (skeletonFrames.length > 0) {\r\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\r\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\r\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\r\n\t\t\tthis.awd_file_data.cur_block.data = newSkeletonAnimationSet;\r\n\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + newSkeletonAnimationSet.name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = VertexAnimationSetAWDParser;",
    "import BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\n\r\nimport AWDBitFlags\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport AWDBlock\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\r\nimport AWD3Utils\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\n\r\n/**\r\n * AWD3FileData stores the data loaded for a AWD-file. It also gives access to some helper functions.\r\n */\r\nclass AWD3FileData\r\n{\r\n\t//set to \"true\" to have some console.logs in the Console\r\n\tprivate _debug:boolean = false;\r\n\r\n\tprivate _cur_block:AWDBlock;\r\n\tprivate _blocks:Array<AWDBlock>;\r\n\tprivate _newBlockBytes:ByteArray;\r\n\r\n\tpublic  major_version:number;\r\n\tpublic  minor_version:number;\r\n\r\n\tprivate _accuracyOnBlocks:boolean = false;\r\n\r\n\tprivate _accuracyMatrix:boolean;\r\n\tprivate _accuracyGeo:boolean;\r\n\tprivate _accuracyProps:boolean;\r\n\tprivate _matrixNrType:number;\r\n\tprivate _geoNrType:number;\r\n\tprivate _propsNrType:number;\r\n\r\n\tprivate blendModeDic:Array<string>;\r\n\tprivate _depthSizeDic:Array<number>;\r\n\r\n\tprivate _defaultCubeTexture:SingleCubeTexture;\r\n\t/**\r\n\t * Creates a new AWD3FileData object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.major_version=0;\r\n\t\tthis.minor_version=0;\r\n\r\n\t\tthis._blocks = new Array<AWDBlock>();\r\n\t\tthis._blocks.push(new AWDBlock(255, 0));\r\n\t\tthis._cur_block=this._blocks[0];\r\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.ADD);\r\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\r\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\r\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\r\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\r\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\r\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\r\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\r\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\r\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\r\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\r\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\r\n\t\tthis._depthSizeDic.push(256);\r\n\t\tthis._depthSizeDic.push(512);\r\n\t\tthis._depthSizeDic.push(2048);\r\n\t\tthis._depthSizeDic.push(1024);\r\n\t}\r\n\r\n\tpublic getDepthSizeFromEnum(depthSize:number):number\r\n\t{\r\n\t\treturn this._depthSizeDic[depthSize];\r\n\t}\r\n\tpublic getBlendModeStringFromEnum(blendmode:number):string\r\n\t{\r\n\t\treturn this.blendModeDic[blendmode];\r\n\t}\r\n\r\n\tpublic dispose():void\r\n\t{\r\n\r\n\t\tfor (var c in this._blocks) {\r\n\r\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[ c ];\r\n\t\t\tb.dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tpublic get accuracyOnBlocks():boolean\r\n\t{\r\n\t\treturn this._accuracyOnBlocks;\r\n\t}\r\n\tpublic get accuracyMatrix():boolean\r\n\t{\r\n\t\treturn this._accuracyMatrix;\r\n\t}\r\n\tpublic set accuracyMatrix(new_accuracyMatrix:boolean)\r\n\t{\r\n\t\tthis._accuracyMatrix = new_accuracyMatrix;\r\n\t}\r\n\tpublic get accuracyProps():boolean\r\n\t{\r\n\t\treturn this._accuracyProps;\r\n\t}\r\n\tpublic set accuracyProps(new_accuracyProps:boolean)\r\n\t{\r\n\t\tthis._accuracyProps = new_accuracyProps;\r\n\t}\r\n\tpublic set accuracyGeo(new_accuracyGeo:boolean)\r\n\t{\r\n\t\tthis._accuracyGeo = new_accuracyGeo;\r\n\t}\r\n\tpublic get accuracyGeo():boolean\r\n\t{\r\n\t\treturn this._accuracyGeo;\r\n\t}\r\n\tpublic get debug():boolean\r\n\t{\r\n\t\treturn this._debug;\r\n\t}\r\n\r\n\tpublic get matrixNrType():number\r\n\t{\r\n\t\treturn this._matrixNrType;\r\n\t}\r\n\tpublic set matrixNrType(newmatrixNrType:number)\r\n\t{\r\n\t\tthis._matrixNrType = newmatrixNrType;\r\n\t}\r\n\r\n\tpublic get propsNrType():number\r\n\t{\r\n\t\treturn this._propsNrType;\r\n\t}\r\n\tpublic set propsNrType(new_props_nr:number)\r\n\t{\r\n\t\tthis._propsNrType = new_props_nr;\r\n\t}\r\n\r\n\tpublic get geoNrType():number\r\n\t{\r\n\t\treturn this._geoNrType;\r\n\t}\r\n\tpublic set geoNrType(new_geoNrType:number)\r\n\t{\r\n\t\tthis._geoNrType = new_geoNrType;\r\n\t}\r\n\r\n\r\n\tpublic set newBlockBytes(new_newBlockBytes:ByteArray)\r\n\t{\r\n\t\tthis._newBlockBytes = new_newBlockBytes;\r\n\t}\r\n\tpublic get newBlockBytes():ByteArray\r\n\t{\r\n\t\treturn this._newBlockBytes;\r\n\t}\r\n\tpublic create_new_block(type:number, id:number)\r\n\t{\r\n\t\tvar new_block:AWDBlock= new AWDBlock(this._blocks.length, type);\r\n\t\tthis._cur_block=new_block;\r\n\t\tthis._blocks[id]=new_block;\r\n\t}\r\n\tpublic get cur_block():AWDBlock\r\n\t{\r\n\t\treturn this._cur_block;\r\n\t}\r\n\tpublic block_cnt():number\r\n\t{\r\n\t\treturn this._blocks.length;\r\n\t}\r\n\r\n\t//--Parser UTILS---------------------------------------------------------------------------\r\n\r\n\tpublic parseUserAttributes():Object\r\n\t{\r\n\t\tvar attributes:Object;\r\n\t\tvar list_len:number;\r\n\t\tvar attibuteCnt:number;\r\n\r\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\tif (list_len > 0) {\r\n\r\n\t\t\tvar list_end:number;\r\n\r\n\t\t\tattributes = {};\r\n\r\n\t\t\tlist_end = this._newBlockBytes.position + list_len;\r\n\r\n\t\t\twhile (this._newBlockBytes.position < list_end) {\r\n\t\t\t\tvar ns_id:number;\r\n\t\t\t\tvar attr_key:string;\r\n\t\t\t\tvar attr_type:number;\r\n\t\t\t\tvar attr_len:number;\r\n\t\t\t\tvar attr_val:any;\r\n\r\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\r\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_key = this.parseVarStr();\r\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn attributes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (attr_type) {\r\n\t\t\t\t\tcase AWD3Utils.AWDSTRING:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.INT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.INT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.INT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.BOOL:\r\n\t\t\t\t\tcase AWD3Utils.UINT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.UINT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.UINT32:\r\n\t\t\t\t\tcase AWD3Utils.BADDR:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.FLOAT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.FLOAT64:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\r\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattributes[attr_key] = attr_val;\r\n\t\t\t\tattibuteCnt += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\t}\r\n\r\n\tpublic parseProperties(expected:Object):AWDProperties\r\n\t{\r\n\t\tvar list_end:number;\r\n\t\tvar list_len:number;\r\n\t\tvar propertyCnt:number = 0;\r\n\t\tvar props:AWDProperties = new AWDProperties();\r\n\r\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\r\n\t\tlist_end = this._newBlockBytes.position + list_len;\r\n\r\n\t\tif (expected) {\r\n\r\n\t\t\twhile (this._newBlockBytes.position < list_end) {\r\n\t\t\t\tvar len:number;\r\n\t\t\t\tvar key:number;\r\n\t\t\t\tvar type:number;\r\n\r\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn props;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (expected.hasOwnProperty(key.toString())) {\r\n\t\t\t\t\ttype = expected[key];\r\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newBlockBytes.position += len;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpropertyCnt += 1;\r\n\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t}\r\n\r\n\t\treturn props;\r\n\r\n\t}\r\n\r\n\tprivate parseAttrValue(type:number, len:number):any\r\n\t{\r\n\t\tvar elem_len:number;\r\n\t\tvar read_func:Function;\r\n\r\n\t\tswitch (type) {\r\n\r\n\t\t\tcase AWD3Utils.BOOL:\r\n\t\t\tcase AWD3Utils.INT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.INT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.INT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.UINT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.UINT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.UINT32:\r\n\t\t\tcase AWD3Utils.COLOR:\r\n\t\t\tcase AWD3Utils.BADDR:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.FLOAT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.FLOAT64:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.AWDSTRING:\r\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\r\n\t\t\tcase AWD3Utils.VECTOR2x1:\r\n\t\t\tcase AWD3Utils.VECTOR3x1:\r\n\t\t\tcase AWD3Utils.VECTOR4x1:\r\n\t\t\tcase AWD3Utils.MTX3x2:\r\n\t\t\tcase AWD3Utils.MTX3x3:\r\n\t\t\tcase AWD3Utils.MTX4x3:\r\n\t\t\tcase AWD3Utils.MTX4x4:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif (elem_len < len) {\r\n\t\t\tvar list:Array<any> = [];\r\n\t\t\tvar num_read:number = 0;\r\n\t\t\tvar num_elems:number = len/elem_len;\r\n\r\n\t\t\twhile (num_read < num_elems) {\r\n\t\t\t\tlist.push(read_func.apply(this._newBlockBytes)); // list.push(read_func());\r\n\t\t\t\tnum_read++;\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\t\t} else {\r\n\r\n\t\t\tvar val:any = read_func.apply(this._newBlockBytes);//read_func();\r\n\t\t\treturn val;\r\n\t\t}\r\n\t}\r\n\r\n\t// Helper - functions\r\n\tpublic getUVForVertexAnimation(meshID:number /*uint*/):Array<Array<number>>\r\n\t{\r\n\t\tif (this._blocks[meshID].data instanceof Mesh)\r\n\t\t\tmeshID = this._blocks[meshID].geoID;\r\n\t\tif (this._blocks[meshID].uvsForVertexAnimation)\r\n\t\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\t\tvar geometry:Geometry = (<Geometry> this._blocks[meshID].data);\r\n\t\tvar geoCnt:number /*int*/ = 0;\r\n\t\tvar ud:Array<number>;\r\n\t\tvar uStride:number /*uint*/;\r\n\t\tvar uOffs:number /*uint*/;\r\n\t\tvar numPoints:number /*uint*/;\r\n\t\tvar i:number /*int*/;\r\n\t\tvar newUvs:Array<number>;\r\n\t\tvar sub_geom:TriangleSubGeometry;\r\n\t\tthis._blocks[meshID].uvsForVertexAnimation = new Array<Array<number>>();\r\n\t\twhile (geoCnt < geometry.subGeometries.length) {\r\n\t\t\tnewUvs = new Array<number>();\r\n\t\t\tsub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\r\n\t\t\tnumPoints = sub_geom.numVertices;\r\n\t\t\tud = sub_geom.uvs;\r\n\t\t\tuStride = sub_geom.getStride(TriangleSubGeometry.UV_DATA);\r\n\t\t\tuOffs = sub_geom.getOffset(TriangleSubGeometry.UV_DATA);\r\n\t\t\tfor (i = 0; i < numPoints; i++) {\r\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 0]);\r\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 1]);\r\n\t\t\t}\r\n\t\t\tthis._blocks[meshID].uvsForVertexAnimation.push(newUvs);\r\n\t\t\tgeoCnt++;\r\n\t\t}\r\n\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\t}\r\n\r\n\tpublic parseVarStr():string\r\n\t{\r\n\r\n\t\tvar len:number = this._newBlockBytes.readUnsignedShort();\r\n\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\t}\r\n\r\n\tpublic getBlockByID(assetID:number):AWDBlock\r\n\t{\r\n\t\treturn this._blocks[assetID];\r\n\t}\r\n\tpublic getAssetByID(assetID:number):IAsset\r\n\t{\r\n\t\treturn this._blocks[assetID].data;\r\n\t}\r\n\tprivate getDefaultAsset(assetType:string):IAsset\r\n\t{\r\n\t\tswitch (true) {\r\n\t\t\tcase (assetType == SingleCubeTexture.assetType):\r\n\t\t\t\treturn this.getDefaultCubeTexture();\r\n\t\t\t\tbreak;\r\n\t\t\tcase (assetType == Single2DTexture.assetType):\r\n\t\t\t\treturn DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\tbreak;\r\n\t\t\tcase (assetType == MethodMaterial.assetType):\r\n\t\t\t\treturn DefaultMaterialManager.getDefaultMaterial();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic getDefaultCubeTexture():IAsset\r\n\t{\r\n\t\tif (!this._defaultCubeTexture) {\r\n\t\t\tvar defaultBitmap:BitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\t\tvar bitmapImageCube = new BitmapImageCube(defaultBitmap.width);\r\n\r\n\t\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\t\tbitmapImageCube.draw(i, defaultBitmap);\r\n\r\n\r\n\t\t\tthis._defaultCubeTexture = new SingleCubeTexture(bitmapImageCube);\r\n\t\t\tthis._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t\t}\r\n\r\n\t\treturn <IAsset> this._defaultCubeTexture;\r\n\t}\r\n\r\n\tpublic  readNumber(precision:boolean = false):number\r\n\t{\r\n\t\tif (precision)\r\n\t\t\treturn this._newBlockBytes.readDouble();\r\n\t\treturn this._newBlockBytes.readFloat();\r\n\r\n\t}\r\n\r\n\tpublic parseMatrix3D():Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\r\n\t}\r\n\r\n\tprivate parseMatrix32RawData():Array<number>\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n\tpublic parseMatrix43RawData():Array<number>\r\n\t{\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(16);\r\n\r\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[3] = 0.0;\r\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[7] = 0.0;\r\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[11] = 0.0;\r\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[15] = 1.0;\r\n\r\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\r\n\r\n\t\tif (isNaN(mtx_raw[0])) {\r\n\t\t\tmtx_raw[0] = 1;\r\n\t\t\tmtx_raw[1] = 0;\r\n\t\t\tmtx_raw[2] = 0;\r\n\t\t\tmtx_raw[4] = 0;\r\n\t\t\tmtx_raw[5] = 1;\r\n\t\t\tmtx_raw[6] = 0;\r\n\t\t\tmtx_raw[8] = 0;\r\n\t\t\tmtx_raw[9] = 0;\r\n\t\t\tmtx_raw[10] = 1;\r\n\t\t\tmtx_raw[12] = 0;\r\n\t\t\tmtx_raw[13] = 0;\r\n\t\t\tmtx_raw[14] = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n}\r\n\r\nexport = AWD3FileData;\r\n\r\n\r\n\r\n",
    "\r\nclass AWD3Utils {\r\n\tpublic static BLOCKSTATE_FINALIZE:number = 0;\r\n\tpublic static BLOCKSTATE_INVALID:number = 1;\r\n\tpublic static BLOCKSTATE_LOAD_DEPENDENICES:number = 2;\r\n\tpublic static BLOCKSTATE_NO_ASSET:number = 3;\r\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\r\n\tpublic static UNCOMPRESSED:number = 0;\r\n\tpublic static DEFLATE:number = 1;\r\n\tpublic static LZMA:number = 2;\r\n\tpublic static INT8:number = 1;\r\n\tpublic static INT16:number = 2;\r\n\tpublic static INT32:number = 3;\r\n\tpublic static UINT8:number = 4;\r\n\tpublic static UINT16:number = 5;\r\n\tpublic static UINT32:number = 6;\r\n\tpublic static FLOAT32:number = 7;\r\n\tpublic static FLOAT64:number = 8;\r\n\tpublic static BOOL:number = 21;\r\n\tpublic static COLOR:number = 22;\r\n\tpublic static BADDR:number = 23;\r\n\tpublic static AWDSTRING:number = 31;\r\n\tpublic static AWDBYTEARRAY:number = 32;\r\n\tpublic static VECTOR2x1:number = 41;\r\n\tpublic static VECTOR3x1:number = 42;\r\n\tpublic static VECTOR4x1:number = 43;\r\n\tpublic static MTX3x2:number = 44;\r\n\tpublic static MTX3x3:number = 45;\r\n\tpublic static MTX4x3:number = 46;\r\n\tpublic static MTX4x4:number = 47;\r\n}\r\nexport = AWD3Utils;",
    "\r\n/**\r\n *\r\n */\r\nclass AWDBitFlags\r\n{\r\n\tpublic static FLAG1:number = 1;\r\n\tpublic static FLAG2:number = 2;\r\n\tpublic static FLAG3:number = 4;\r\n\tpublic static FLAG4:number = 8;\r\n\tpublic static FLAG5:number = 16;\r\n\tpublic static FLAG6:number = 32;\r\n\tpublic static FLAG7:number = 64;\r\n\tpublic static FLAG8:number = 128;\r\n\tpublic static FLAG9:number = 256;\r\n\tpublic static FLAG10:number = 512;\r\n\tpublic static FLAG11:number = 1024;\r\n\tpublic static FLAG12:number = 2048;\r\n\tpublic static FLAG13:number = 4096;\r\n\tpublic static FLAG14:number = 8192;\r\n\tpublic static FLAG15:number = 16384;\r\n\tpublic static FLAG16:number = 32768;\r\n\r\n\tpublic static test(flags:number, testFlag:number):boolean\r\n\t{\r\n\t\treturn (flags & testFlag) == testFlag;\r\n\t}\r\n}\r\nexport = AWDBitFlags;",
    "import ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nclass AWDBlock\r\n{\r\n\tpublic id:number;\r\n\tpublic name:string;\r\n\tpublic type:number;\r\n\tpublic data:any;\r\n\tpublic dependencies_data:Array<ByteArray>;\r\n\tpublic dependencies_urls:Array<string>;\r\n\tpublic loaded_dependencies:Array<any>;\r\n\tpublic loaded_dependencies_cnt:number;\r\n\tpublic len:number;\r\n\tpublic geoID:number;\r\n\tpublic state:number;\r\n\tpublic extras:Object;\r\n\tpublic bytes:ByteArray;\r\n\tpublic errorMessages:Array<string>;\r\n\tpublic uvsForVertexAnimation:Array<Array<number>>;\r\n\r\n\tconstructor(this_id:number, this_type:number)\r\n\t{\r\n\t\tthis.type=this_type;\r\n\t\tthis.id=this_id;\r\n\t\tthis.state = AWD3Utils.BLOCKSTATE_FINALIZE;\r\n\t\tthis.dependencies_data=Array<any>();\r\n\t\tthis.dependencies_urls=Array<string>();\r\n\t\tif(this_type==83){\r\n\t\t\tthis.loaded_dependencies=Array<any>(6);\r\n\t\t}\r\n\t\tthis.loaded_dependencies_cnt=0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t\tthis.id = null;\r\n\t\tthis.bytes = null;\r\n\t\tthis.errorMessages = null;\r\n\t\tthis.uvsForVertexAnimation = null;\r\n\r\n\t}\r\n\r\n\tpublic addError(errorMsg:string):void\r\n\t{\r\n\t\tif (!this.errorMessages)\r\n\t\t\tthis.errorMessages = new Array<string>();\r\n\r\n\t\tthis.errorMessages.push(errorMsg);\r\n\t}\r\n}\r\nexport = AWDBlock;",
    "\r\nclass AWDProperties\r\n{\r\n\tpublic set(key:number, value:any):void\r\n\t{\r\n\t\tthis[ key.toString() ] = value;\r\n\t}\r\n\r\n\tpublic get(key:number, fallback:any):any\r\n\t{\r\n\t\tif (this.hasOwnProperty(key.toString())) {\r\n\t\t\treturn this[key.toString()];\r\n\t\t} else {\r\n\t\t\treturn fallback;\r\n\t\t}\r\n\t}\r\n}\r\nexport = AWDProperties;",
    "import BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\n\r\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\n\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\n\r\n\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\n\r\n\r\n\r\nimport AWDBitFlags\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport AWDAssetParsers\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers\");\r\nimport AWDBlock\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\r\nimport AWD3FileData\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\n\r\n/**\r\n * AWD3Utils provides a parser for the AWD data type.\r\n */\r\nclass AWD3Parser extends ParserBase\r\n{\r\n\t//set to \"true\" to have some console.logs in the Console\r\n\tprivate _debug:boolean = false;\r\n\tprivate _byteData:ByteArray;\r\n\tprivate _startedParsing:boolean = false;\r\n\tprivate _compression:number;\r\n\tprivate _streaming:boolean;\r\n\tprivate _parsed_header:boolean = false;\r\n\tprivate _body:ByteArray;\r\n\tprivate _awd_data:AWD3FileData;\r\n\tprivate _block_parser:AWDAssetParsers;\r\n\r\n\t// temp for checking stats\r\n\tpublic total_time:number = 0;\r\n\tpublic geom_time:number = 0;\r\n\tpublic timeline_time:number = 0;\r\n\r\n\t/**\r\n\t * Creates a new AWD3Utils object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(block_parser:AWDAssetParsers = undefined)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n\t\tthis._block_parser=block_parser;\r\n\t\tif(this._block_parser==undefined){\r\n\t\t\tthis._block_parser=new AWDAssetParsers();\r\n\t\t}\r\n\t\tthis._awd_data=new AWD3FileData();\r\n\t\tthis._block_parser.init_parser(this._awd_data);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"awd\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t// this will be called when Dependency has finished loading.\r\n\t\t// the ressource dependecniy has a id that point to the awd_block waiting for it.\r\n\t\tif (resourceDependency.assets.length == 1) {\r\n\t\t\tvar this_block:AWDBlock = this._awd_data.getBlockByID(parseInt(resourceDependency.id));\r\n\t\t\tif(this_block.type==82){\r\n\t\t\t\tvar testure_asset:Single2DTexture = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\r\n\t\t\t\tthis_block.data = testure_asset; // Store finished asset\r\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> testure_asset, this_block.name);\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap for texture\");\r\n\t\t\t\t\tconsole.log(\"Parsed texture: Name = \" + this_block.name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(this_block.type==44){\r\n\t\t\t\t// todo: implement parsing of Audio block data\r\n\t\t\t\t/*asset = <Single2DTexture> resourceDependency.assets[0];\r\n\t\t\t\tthis_block.data = asset; // Store finished asset\r\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this_block.name);\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap for texture\");\r\n\t\t\t\t\tconsole.log(\"Parsed texture: Name = \" + this_block.name);\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t\telse if(this_block.type==83){\r\n\t\t\t\tthis_block.loaded_dependencies[resourceDependency.sub_id]= resourceDependency.assets[0];\r\n\t\t\t\tthis_block.loaded_dependencies_cnt++;\r\n\t\t\t\tif(this_block.loaded_dependencies_cnt==6){\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + resourceDependency.sub_id + \" / 6 for Cubetexture\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar cube_image_asset = new BitmapImageCube(this_block.loaded_dependencies[0].width);\r\n\r\n\t\t\t\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\t\t\t\tcube_image_asset.draw(i, this_block.loaded_dependencies[i]);\r\n\r\n\r\n\t\t\t\t\tvar cube_tex_asset = new SingleCubeTexture(cube_image_asset);\r\n\t\t\t\t\tthis_block.data = cube_tex_asset; // Store finished asset\r\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> cube_tex_asset, this_block.name);\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + this_block.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t//\tnot used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\r\n\t\t// \tthis means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency name\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\r\n\t{\r\n\t\tvar oldName:string = asset.name;\r\n\r\n\t\tif (asset) {\r\n\t\t\tvar block:AWDBlock = this._awd_data.getBlockByID(parseInt(resourceDependency.id));\r\n\t\t\t// Reset name of texture to the one defined in the AWD file,\r\n\t\t\t// as opposed to whatever the image parser came up with.\r\n\t\t\tasset.resetAssetPath(block.name, null, true);\r\n\t\t}\r\n\r\n\t\tvar newName:string = asset.name;\r\n\r\n\t\tasset.name = oldName;\r\n\r\n\t\treturn newName;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\tif (!this._parsed_header) {\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Parse header and decompress body if needed\r\n\t\t\tthis.parseHeader();\r\n\r\n\t\t\tswitch (this._compression) {\r\n\r\n\t\t\t\tcase AWD3Utils.DEFLATE:\r\n\t\t\t\tcase AWD3Utils.LZMA:\r\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase AWD3Utils.UNCOMPRESSED:\r\n\t\t\t\t\tthis._body = this._byteData;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t// Compressed AWD Formats not yet supported\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t case AWD3Parserutils.DEFLATE:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress();\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t case AWD3Parserutils.LZMA:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t //*/\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._parsed_header = true;\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t}\r\n\r\n\t\tif (this._body) {\r\n\r\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\r\n\t\t\t{\r\n\t\t\t\tthis.parseNextBlock();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Return complete status\r\n\t\t\tif (this._body.getBytesAvailable() == 0) {\r\n\t\t\t\tthis.dispose();\r\n\t\t\t\treturn  ParserBase.PARSING_DONE;\r\n\t\t\t} else {\r\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\tswitch (this._compression) {\r\n\r\n\t\t\t\tcase AWD3Utils.DEFLATE:\r\n\t\t\t\tcase AWD3Utils.LZMA:\r\n\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"(!) AWD3Utils Error: Compressed AWD formats not yet supported (!)\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\t\t\t// Error - most likely _body not set because we do not support compression.\r\n\t\t\treturn  ParserBase.PARSING_DONE;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate dispose():void\r\n\t{\r\n\t\tthis._awd_data.dispose();\r\n\t}\r\n\r\n\tprivate parseNextBlock():void\r\n\t{\r\n\t\tvar block_id:number = this._body.readUnsignedInt();\r\n\r\n\t\tvar ns:number = this._body.readUnsignedByte();\r\n\t\tvar block_type:number = this._body.readUnsignedByte();\r\n\t\tvar flags:number = this._body.readUnsignedByte();\r\n\t\tvar len:number = this._body.readUnsignedInt();\r\n\r\n\t\tvar blockCompression:boolean = AWDBitFlags.test(flags, AWDBitFlags.FLAG4);\r\n\t\tvar blockCompressionLZMA:boolean = AWDBitFlags.test(flags, AWDBitFlags.FLAG5);\r\n\r\n\t\tif (this._awd_data.accuracyOnBlocks) {\r\n\t\t\tthis._awd_data.accuracyMatrix = AWDBitFlags.test(flags, AWDBitFlags.FLAG1);\r\n\t\t\tthis._awd_data.accuracyGeo = AWDBitFlags.test(flags, AWDBitFlags.FLAG2);\r\n\t\t\tthis._awd_data.accuracyProps = AWDBitFlags.test(flags, AWDBitFlags.FLAG3);\r\n\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\t\tif (this._awd_data.accuracyGeo) {\r\n\t\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT64;\r\n\t\t\t}\r\n\r\n\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\t\tif (this._awd_data.accuracyMatrix) {\r\n\t\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT64;\r\n\t\t\t}\r\n\r\n\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\t\tif (this._awd_data.accuracyProps) {\r\n\t\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT64;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar blockEndAll:number = this._body.position + len;\r\n\r\n\t\tif (len > this._body.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\r\n\t\t\tthis._body.position += this._body.getBytesAvailable();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar newBlockBytes:ByteArray = new ByteArray();\r\n\t\tthis._body.readBytes(newBlockBytes, 0, len);\r\n\t\tthis._awd_data.newBlockBytes = newBlockBytes;\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// Compressed AWD Formats not yet supported\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\r\n\t\t\t/*\r\n\t\t\t if (blockCompressionLZMA)\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress(AWD3Parserutils.COMPRESSIONMODE_LZMA);\r\n\t\t\t }\r\n\t\t\t else\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress();\r\n\t\t\t }\r\n\t\t\t */\r\n\r\n\t\t}\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\r\n\t\t//----------------------------------------------------------------------------\r\n\r\n\t\tthis._awd_data.newBlockBytes.position = 0;\r\n\r\n\t\t// we create AWDBlock for all exept the metadata. the metadata block has is the first awdblock in the list by default.\r\n\t\t//if(block_type!=255)\r\n\t\tthis._awd_data.create_new_block(block_type, block_id);\r\n\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\r\n\t\t\t//block.len       = blockEndBlock;\r\n\t\t}\r\n\r\n\t\t//if (this._debug) {\r\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + block_id + \" | TypeID = \" + block_type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._awd_data.accuracyMatrix + \" | Geometry-Precision = \" + this._awd_data.accuracyGeo + \" | Properties-Precision = \" + this._awd_data.accuracyProps);\r\n\t\t//}\r\n\r\n\t\tvar time_start = performance.now();\r\n\r\n\t\t// first check if the block is any of the 3 blocks that does not produce a asset.\r\n\t\t\t// this block contains a asset.\r\n\t\tif(this._block_parser.parseAsset(block_type)){\r\n\t\t\tif(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_FINALIZE){\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset>this._awd_data.cur_block.data, this._awd_data.cur_block.name);\r\n\t\t\t\tif(this._awd_data.cur_block.data instanceof DisplayObject){\r\n\t\t\t\t\tif((<DisplayObjectContainer> this._awd_data.cur_block.data).parent==undefined){\r\n\t\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild((<DisplayObjectContainer> this._awd_data.cur_block.data));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_INVALID){\r\n\t\t\t\tconsole.log(\"ERROR while parsing block - type = \", block_type, \" id = \", block_id);\r\n\t\t\t}\r\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES){\r\n\t\t\t\t// trigger No asset created yet, because the block has dependencies. load the dependencies:.\r\n\t\t\t\tfor(var r:number=0; r<this._awd_data.cur_block.dependencies_urls.length;r++){\r\n\t\t\t\t\t// load dependencies by url. let the parser system decide how to parse it\r\n\t\t\t\t\tthis._pAddDependency(this._awd_data.cur_block.id.toString(), new URLRequest(this._awd_data.cur_block.dependencies_urls[r]), false, null, true, r);\r\n\t\t\t\t}\r\n\t\t\t\tfor(var r:number=0; r<this._awd_data.cur_block.dependencies_data.length;r++) {\r\n\t\t\t\t\t// load dependencies from data. need to prepare the data based on block_type (image vs audio).\r\n\t\t\t\t\tif ((block_type == 82) || (block_type == 83)) {\r\n\t\t\t\t\t\tthis._pAddDependency(this._awd_data.cur_block.id.toString(), null, false, ParserUtils.byteArrayToImage(this._awd_data.cur_block.dependencies_data[r]), true, r);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (block_type == 44) {\r\n\t\t\t\t\t\t// todo: parse audio data\r\n\t\t\t\t\t\t// this._pAddDependency(this._awd_data.cur_block.id.toString(), null, false, this._awd_data.cur_block.dependencies_data[r], true, r);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t}\r\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_NO_ASSET){\r\n\t\t\t\t// this block does not produce any asset (metadata, namespace, command)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Encountered unknown blocktype - type = \", block_type, \" id = \", block_id);\r\n\t\t}\r\n\r\n\t\tvar time_end = performance.now();\r\n\t\tvar thisTime:number=time_end-time_start;\r\n\t\tthis.total_time+=thisTime;\r\n\t\tif(block_type==1){\r\n\t\t\tthis.geom_time+=thisTime;\r\n\t\t}\r\n\t\telse if(block_type==133){\r\n\t\t\tthis.timeline_time+=thisTime;\r\n\t\t}\r\n\t\tconsole.log(\"'parsed '\"+block_type+\"'  block in \"+thisTime+ \" ms\", \" total: \",this.total_time,\" geom: \",this.geom_time,\"timelines:\",this.timeline_time);\r\n\r\n\t\tthis._body.position = blockEndAll;\r\n\t\tthis._awd_data.newBlockBytes = null;\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\tprivate parseHeader():void\r\n\t{\r\n\t\tvar flags:number;\r\n\t\tvar body_len:number;\r\n\r\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\r\n\r\n\t\tthis._awd_data.major_version = this._byteData.readUnsignedByte();\r\n\t\tthis._awd_data.minor_version = this._byteData.readUnsignedByte();\r\n\r\n\t\tflags = this._byteData.readUnsignedShort(); // Parse bit flags\r\n\r\n\t\tthis._streaming = AWDBitFlags.test(flags, AWDBitFlags.FLAG1);\r\n\r\n\t\tif ((this._awd_data.major_version == 2) && (this._awd_data.minor_version == 1)) {\r\n\t\t\tthis._awd_data.accuracyMatrix = AWDBitFlags.test(flags, AWDBitFlags.FLAG2);\r\n\t\t\tthis._awd_data.accuracyGeo = AWDBitFlags.test(flags, AWDBitFlags.FLAG3);\r\n\t\t\tthis._awd_data.accuracyProps = AWDBitFlags.test(flags, AWDBitFlags.FLAG4);\r\n\t\t}\r\n\r\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\r\n\r\n\t\t// set storagePrecision types\r\n\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\tif (this._awd_data.accuracyGeo) {\r\n\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\tif (this._awd_data.accuracyMatrix) {\r\n\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\tif (this._awd_data.accuracyProps) {\r\n\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._awd_data.major_version + \" - \" + this._awd_data.minor_version );\r\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._awd_data.accuracyMatrix + \" | Geometry-Precision = \" + this._awd_data.accuracyGeo + \" | Properties-Precision = \" + this._awd_data.accuracyProps);\r\n\t\t}\r\n\r\n\t\t// Check file integrity\r\n\t\tbody_len = this._byteData.readUnsignedInt();\r\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = AWD3Parser;\r\n\r\n",
    "import BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\r\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport TextField\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\r\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\r\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\r\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\r\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\n\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\r\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\r\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\r\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\r\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\r\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\r\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\r\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\r\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\r\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\r\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\r\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\r\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\r\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\r\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\r\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\r\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\r\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\r\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\r\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\r\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\r\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\r\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\r\n\r\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nimport TimelineSceneGraphFactory \t= require(\"awayjs-player/lib/factories/TimelineSceneGraphFactory\");\r\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\r\nimport MovieClip \t\t\t\t\t= require(\"awayjs-player/lib/display/MovieClip\");\r\nimport TimelineKeyFrame \t\t\t= require(\"awayjs-player/lib/timeline/TimelineKeyFrame\");\r\nimport AddChildCommand \t\t\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildCommand\");\r\nimport AddChildAtDepthCommand\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildAtDepthCommand\");\r\nimport ApplyAS2DepthsCommand\t\t= require(\"awayjs-player/lib/timeline/commands/ApplyAS2DepthsCommand\");\r\nimport ExecuteScriptCommand \t\t= require(\"awayjs-player/lib/timeline/commands/ExecuteScriptCommand\");\r\nimport RemoveChildCommand \t\t\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildCommand\");\r\nimport RemoveChildrenAtDepthCommand\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildrenAtDepthCommand\");\r\nimport SetInstanceNameCommand \t\t= require(\"awayjs-player/lib/timeline/commands/SetInstanceNameCommand\");\r\nimport UpdatePropertyCommand \t\t= require(\"awayjs-player/lib/timeline/commands/UpdatePropertyCommand\");\r\nimport SetMaskCommand \t\t        = require(\"awayjs-player/lib/timeline/commands/SetMaskCommand\");\r\n\r\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport TextFormat\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextFieldType\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\n\r\n/**\r\n * AWDParser provides a parser for the AWD data type.\r\n */\r\nclass AWDParser extends ParserBase\r\n{\r\n\t//set to \"true\" to have some console.logs in the Console\r\n\tprivate _debug:boolean = false;\r\n\tprivate _byteData:ByteArray;\r\n\tprivate _startedParsing:boolean = false;\r\n\tprivate _cur_block_id:number;\r\n\tprivate _blocks:Array<AWDBlock>;\r\n\tprivate _newBlockBytes:ByteArray;\r\n\tprivate _version:Array<number>;\r\n\tprivate _compression:number;\r\n\tprivate _accuracyOnBlocks:boolean;\r\n\tprivate _accuracyMatrix:boolean;\r\n\tprivate _accuracyGeo:boolean;\r\n\tprivate _accuracyProps:boolean;\r\n\tprivate _matrixNrType:number;\r\n\tprivate _geoNrType:number;\r\n\tprivate _propsNrType:number;\r\n\tprivate _streaming:boolean;\r\n\tprivate _texture_users:Object = {};\r\n\tprivate _parsed_header:boolean = false;\r\n\tprivate _body:ByteArray;\r\n\tprivate _defaultTexture:Single2DTexture;     // HTML IMAGE TEXTURE >? !\r\n\tprivate _cubeBitmaps:Array<BitmapImage2D>;\r\n\tprivate _defaultBitmapMaterial:MethodMaterial;\r\n\tprivate _defaultCubeTexture:SingleCubeTexture;\r\n\r\n\r\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\r\n\tpublic static UNCOMPRESSED:number = 0;\r\n\tpublic static DEFLATE:number = 1;\r\n\tpublic static LZMA:number = 2;\r\n\tpublic static INT8:number = 1;\r\n\tpublic static INT16:number = 2;\r\n\tpublic static INT32:number = 3;\r\n\tpublic static UINT8:number = 4;\r\n\tpublic static UINT16:number = 5;\r\n\tpublic static UINT32:number = 6;\r\n\tpublic static FLOAT32:number = 7;\r\n\tpublic static FLOAT64:number = 8;\r\n\tpublic static BOOL:number = 21;\r\n\tpublic static COLOR:number = 22;\r\n\tpublic static BADDR:number = 23;\r\n\tpublic static AWDSTRING:number = 31;\r\n\tpublic static AWDBYTEARRAY:number = 32;\r\n\tpublic static VECTOR2x1:number = 41;\r\n\tpublic static VECTOR3x1:number = 42;\r\n\tpublic static VECTOR4x1:number = 43;\r\n\tpublic static MTX3x2:number = 44;\r\n\tpublic static MTX3x3:number = 45;\r\n\tpublic static MTX4x3:number = 46;\r\n\tpublic static MTX4x4:number = 47;\r\n\r\n\tprivate blendModeDic:Array<string>;\r\n\tprivate _depthSizeDic:Array<number>;\r\n\r\n\tprivate _time_all:number=0;\r\n\tprivate _time_geom:number=0;\r\n\tprivate _time_timeline:number=0;\r\n\tprivate _time_fonts:number=0;\r\n\r\n\t/**\r\n\t * Creates a new AWD3Parserutils object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n\t\tthis._blocks = new Array<AWDBlock>();\r\n\t\tthis._blocks[0] = new AWDBlock();\r\n\t\tthis._blocks[0].data = null; // Zero address means null in AWD\r\n\r\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.ADD);\r\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\r\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\r\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\r\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\r\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\r\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\r\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\r\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\r\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\r\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\r\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\r\n\t\tthis._depthSizeDic.push(256);\r\n\t\tthis._depthSizeDic.push(512);\r\n\t\tthis._depthSizeDic.push(2048);\r\n\t\tthis._depthSizeDic.push(1024);\r\n\t\tthis._version = Array<number>(); // will contain 2 int (major-version, minor-version) for awd-version-check\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"awd\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t// this will be called when Dependency has finished loading.\r\n\t\t// the Assets waiting for this Bitmap, can be Texture or CubeTexture.\r\n\t\t// if the Bitmap is awaited by a CubeTexture, we need to check if its the last Bitmap of the CubeTexture,\r\n\t\t// so we know if we have to finalize the Asset (CubeTexture) or not.\r\n\t\tif (resourceDependency.assets.length == 1) {\r\n\t\t\tvar isCubeTextureArray:Array<string> = resourceDependency.id.split(\"#\");\r\n\t\t\tvar ressourceID:string = isCubeTextureArray[0];\r\n\t\t\tvar asset:TextureBase;\r\n\t\t\tvar block:AWDBlock;\r\n\r\n\t\t\tif (isCubeTextureArray.length == 1) // Not a cube texture\r\n\t\t\t{\r\n\t\t\t\tasset = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\r\n\t\t\t\tif (asset) {\r\n\r\n\t\t\t\t\tblock = this._blocks[ resourceDependency.id ];\r\n\t\t\t\t\tblock.data = asset; // Store finished asset\r\n\r\n\t\t\t\t\t// Reset name of texture to the one defined in the AWD file,\r\n\t\t\t\t\t// as opposed to whatever the image parser came up with.\r\n\t\t\t\t\tasset.resetAssetPath(block.name, null, true);\r\n\t\t\t\t\tblock.name = asset.name;\r\n\t\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> asset);\r\n\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap for texture\");\r\n\t\t\t\t\t\tconsole.log(\"Parsed texture: Name = \" + block.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (isCubeTextureArray.length > 1) // Cube Texture\r\n\t\t\t{\r\n\t\t\t\tthis._cubeBitmaps[ isCubeTextureArray[1] ] = <BitmapImage2D> resourceDependency.assets[0];\r\n\t\t\t\tthis._texture_users[ressourceID].push(1);\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + this._texture_users[ressourceID].length + \" / 6 for Cubetexture\");\r\n\t\t\t\t}\r\n\t\t\t\tif (this._texture_users[ressourceID].length == this._cubeBitmaps.length) {\r\n\r\n\t\t\t\t\tvar cube_image_asset = new BitmapImageCube(this._cubeBitmaps[0].width);\r\n\r\n\t\t\t\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\t\t\t\tcube_image_asset.draw(i, this._cubeBitmaps[i]);\r\n\r\n\t\t\t\t\tasset = new SingleCubeTexture(cube_image_asset);\r\n\t\t\t\t\tblock = this._blocks[ressourceID];\r\n\t\t\t\t\tblock.data = asset; // Store finished asset\r\n\r\n\t\t\t\t\t// Reset name of texture to the one defined in the AWD file,\r\n\t\t\t\t\t// as opposed to whatever the image parser came up with.\r\n\t\t\t\t\tasset.resetAssetPath(block.name, null, true);\r\n\t\t\t\t\tblock.name = asset.name;\r\n\t\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> asset);\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + block.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t//not used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\r\n\t\t// this means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency name\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\r\n\t{\r\n\t\tvar oldName:string = asset.name;\r\n\r\n\t\tif (asset) {\r\n\t\t\tvar block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\r\n\t\t\t// Reset name of texture to the one defined in the AWD file,\r\n\t\t\t// as opposed to whatever the image parser came up with.\r\n\t\t\tasset.resetAssetPath(block.name, null, true);\r\n\t\t}\r\n\r\n\t\tvar newName:string = asset.name;\r\n\r\n\t\tasset.name = oldName;\r\n\r\n\t\treturn newName;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\tif (!this._parsed_header) {\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Parse header and decompress body if needed\r\n\t\t\tthis.parseHeader();\r\n\r\n\t\t\tswitch (this._compression) {\r\n\r\n\t\t\t\tcase AWDParser.DEFLATE:\r\n\t\t\t\tcase AWDParser.LZMA:\r\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase AWDParser.UNCOMPRESSED:\r\n\t\t\t\t\tthis._body = this._byteData;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t// Compressed AWD Formats not yet supported\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t case AWD3Parserutils.DEFLATE:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress();\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t case AWD3Parserutils.LZMA:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t //*/\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._parsed_header = true;\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t}\r\n\r\n\t\tif (this._body) {\r\n\r\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\r\n\t\t\t{\r\n\t\t\t\tthis.parseNextBlock();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Return complete status\r\n\t\t\tif (this._body.getBytesAvailable() == 0) {\r\n\t\t\t\tthis.dispose();\r\n\t\t\t\treturn  ParserBase.PARSING_DONE;\r\n\t\t\t} else {\r\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\tswitch (this._compression) {\r\n\r\n\t\t\t\tcase AWDParser.DEFLATE:\r\n\t\t\t\tcase AWDParser.LZMA:\r\n\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"(!) AWDParser Error: Compressed AWD formats not yet supported (!)\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\t\t\t// Error - most likely _body not set because we do not support compression.\r\n\t\t\treturn  ParserBase.PARSING_DONE;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate dispose():void\r\n\t{\r\n\r\n\t\tfor (var c in this._blocks) {\r\n\r\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[ c ];\r\n\t\t\tb.dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate parseNextBlock():void\r\n\t{\r\n\t\tvar block:AWDBlock;\r\n\t\tvar assetData:IAsset;\r\n\t\tvar isParsed:boolean = false;\r\n\t\tvar ns:number;\r\n\t\tvar type:number;\r\n\t\tvar flags:number;\r\n\t\tvar len:number;\r\n/*\r\n\t\tvar start_timeing = 0;\r\n\t\tstart_timeing = performance.now();\r\n*/\r\n\t\tthis._cur_block_id = this._body.readUnsignedInt();\r\n\r\n\t\tns = this._body.readUnsignedByte();\r\n\t\ttype = this._body.readUnsignedByte();\r\n\t\tflags = this._body.readUnsignedByte();\r\n\t\tlen = this._body.readUnsignedInt();\r\n\r\n\t\tvar blockCompression:boolean = BitFlags.test(flags, BitFlags.FLAG4);\r\n\t\tvar blockCompressionLZMA:boolean = BitFlags.test(flags, BitFlags.FLAG5);\r\n\r\n\t\tif (this._accuracyOnBlocks) {\r\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG1);\r\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG2);\r\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG3);\r\n\t\t\tthis._geoNrType = AWDParser.FLOAT32;\r\n\r\n\t\t\tif (this._accuracyGeo) {\r\n\t\t\t\tthis._geoNrType = AWDParser.FLOAT64;\r\n\t\t\t}\r\n\r\n\t\t\tthis._matrixNrType = AWDParser.FLOAT32;\r\n\r\n\t\t\tif (this._accuracyMatrix) {\r\n\t\t\t\tthis._matrixNrType = AWDParser.FLOAT64;\r\n\t\t\t}\r\n\r\n\t\t\tthis._propsNrType = AWDParser.FLOAT32;\r\n\r\n\t\t\tif (this._accuracyProps) {\r\n\t\t\t\tthis._propsNrType = AWDParser.FLOAT64;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar blockEndAll:number = this._body.position + len;\r\n\r\n\t\tif (len > this._body.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\r\n\t\t\tthis._body.position += this._body.getBytesAvailable();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._newBlockBytes = new ByteArray();\r\n\r\n\r\n\t\tthis._body.readBytes(this._newBlockBytes, 0, len);\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// Compressed AWD Formats not yet supported\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\r\n\t\t\t/*\r\n\t\t\t if (blockCompressionLZMA)\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress(AWD3Parserutils.COMPRESSIONMODE_LZMA);\r\n\t\t\t }\r\n\t\t\t else\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress();\r\n\t\t\t }\r\n\t\t\t */\r\n\r\n\t\t}\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\r\n\t\t//----------------------------------------------------------------------------\r\n\r\n\t\tthis._newBlockBytes.position = 0;\r\n\t\tblock = new AWDBlock();\r\n\t\tblock.len = this._newBlockBytes.position + len;\r\n\t\tblock.id = this._cur_block_id;\r\n\r\n\t\tvar blockEndBlock:number = this._newBlockBytes.position + len;\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\r\n\t\t\t//block.len       = blockEndBlock;\r\n\t\t}\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + this._cur_block_id + \" | TypeID = \" + type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\r\n\t\t}\r\n\r\n\t\tthis._blocks[this._cur_block_id] = block;\r\n\r\n\t\tif ((this._version[0] == 3) && (this._version[1] == 0)) {\r\n\t\t\t// probably should contain some info about the type of animation\r\n\t\t\tvar factory = new AS2SceneGraphFactory();\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 24:\r\n\t\t\t\t\tthis.parseMeshLibraryBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 25:\r\n\t\t\t\t\tthis.parseBillBoardLibraryBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 44:\r\n\t\t\t\t\tthis.parseAudioBlock(this._cur_block_id, factory);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 133:\r\n\t\t\t\t\tthis.parseTimeLine(this._cur_block_id, factory);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 134:\r\n\t\t\t\t\tthis.paresTextField(this._cur_block_id, factory);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 135:\r\n\t\t\t\t\tthis.parseTesselatedFont(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 136:\r\n\t\t\t\t\tthis.parseTextFormat(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ((this._version[0] > 2)||((this._version[0] >= 2) && (this._version[1] >= 1))) {\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 11:\r\n\t\t\t\t\tthis.parsePrimitves(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 31:\r\n\t\t\t\t\tthis.parseSkyboxInstance(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 41:\r\n\t\t\t\t\tthis.parseLight(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 42:\r\n\t\t\t\t\tthis.parseCamera(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//  case 43:\r\n\t\t\t\t//      parseTextureProjector(_cur_block_id);\r\n\t\t\t\t//      isParsed = true;\r\n\t\t\t\t//      break;\r\n\r\n\t\t\t\tcase 51:\r\n\t\t\t\t\tthis.parseLightPicker(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 81:\r\n\t\t\t\t\tthis.parseMaterial_v1(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 83:\r\n\t\t\t\t\tthis.parseCubeTexture(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 91:\r\n\t\t\t\t\tthis.parseSharedMethodBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 92:\r\n\t\t\t\t\tthis.parseShadowMethodBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 111:\r\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id, true);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 112:\r\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 113:\r\n\t\t\t\t\tthis.parseVertexAnimationSet(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 122:\r\n\t\t\t\t\tthis.parseAnimatorSet(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 253:\r\n\t\t\t\t\tthis.parseCommand(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t//*/\r\n\t\t}\r\n\t\t//*\r\n\t\tif (isParsed == false) {\r\n\t\t\tswitch (type) {\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.parseTriangleGeometrieBlock(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 22:\r\n\t\t\t\t\tthis.parseContainer(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 23:\r\n\t\t\t\t\tthis.parseMeshInstance(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 81:\r\n\t\t\t\t\tthis.parseMaterial(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 82:\r\n\t\t\t\t\tthis.parseTexture(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 101:\r\n\t\t\t\t\tthis.parseSkeleton(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 102:\r\n\t\t\t\t\tthis.parseSkeletonPose(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 103:\r\n\t\t\t\t\tthis.parseSkeletonAnimation(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 121:\r\n\t\t\t\t//this.parseUVAnimation(this._cur_block_id);\r\n\t\t\t\t//break;\r\n\t\t\t\tcase 254:\r\n\t\t\t\t\tthis.parseNameSpace(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 255:\r\n\t\t\t\t\tthis.parseMetaData(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"AWDBlock:   Unknown BlockType  (BlockID = \" + this._cur_block_id + \") - Skip \" + len + \" bytes\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._newBlockBytes.position += len;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tvar msgCnt:number = 0;\r\n\t\tif (this._newBlockBytes.position == blockEndBlock) {\r\n\t\t\tif (this._debug) {\r\n\t\t\t\tif (block.errorMessages) {\r\n\t\t\t\t\twhile (msgCnt < block.errorMessages.length) {\r\n\t\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\r\n\t\t\t\t\t\tmsgCnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this._debug) {\r\n\t\t\t\tconsole.log(\"\\n\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._debug) {\r\n\r\n\t\t\t\tconsole.log(\"  (!)(!)(!) Error while reading AWDBlock ID \" + this._cur_block_id + \" = skip to next block\");\r\n\r\n\t\t\t\tif (block.errorMessages) {\r\n\t\t\t\t\twhile (msgCnt < block.errorMessages.length) {\r\n\t\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\r\n\t\t\t\t\t\tmsgCnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._body.position = blockEndAll;\r\n\t\tthis._newBlockBytes = null;\r\n/*\r\n\t\tvar end_timing = performance.now();\r\n\t\tvar time_delta = end_timing - start_timeing;\r\n\t\tthis._time_all+=time_delta;\r\n\t\tif(type==1){\r\n\t\t\tthis._time_geom+=time_delta;\r\n\t\t}\r\n\t\telse if(type==133){\r\n\t\t\tthis._time_timeline+=time_delta;\r\n\t\t}\r\n\t\telse if(type==135){\r\n\t\t\tthis._time_fonts+=time_delta;\r\n\t\t}\r\n\t\tconsole.log(\"Parsed block of type: \"+type +\" in \"+time_delta+\" ms | parsing total: \"+this._time_all+\" | geoms: \"+this._time_geom+\" | timelines: \"+this._time_timeline+\" | fonts: \"+this._time_fonts);\r\n*/\r\n\t}\r\n\r\n\r\n\t//--Parser Blocks---------------------------------------------------------------------------\r\n\r\n\r\n\tprivate parseTesselatedFont(blockID:number):void {\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tthis._blocks[blockID].name = name;\r\n\t\t//console.log(\"Font name = \"+this._blocks[blockID].name);\r\n\t\tvar font_style_cnt:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"Font font_style_cnt = \"+font_style_cnt);\r\n\t\tvar new_font:Font=new Font();\r\n\t\tfor (var i:number = 0; i < font_style_cnt; ++i) {\r\n\t\t\tvar font_style_name:string = this.parseVarStr();\r\n\t\t\t//console.log(\"Font font_style_name = \"+font_style_name);\r\n\t\t\tvar new_font_style:TesselatedFontTable=new_font.get_font_table(font_style_name);\r\n\t\t\tnew_font_style.set_font_em_size(this._newBlockBytes.readUnsignedInt());\r\n\t\t\t//console.log(\"Font new_font_style.font_em_size = \"+new_font_style.get_font_em_size);\r\n\t\t\tvar font_style_char_cnt:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t//console.log(\"Font font_style_char_cnt = \"+font_style_char_cnt);\r\n\t\t\tfor (var i:number = 0; i < font_style_char_cnt; ++i) {\r\n\r\n\t\t\t\tvar font_style_char:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"Font font_style_char = \"+font_style_char);\r\n\t\t\t\t// todo: this is basically a simplified version of the subgeom-parsing done in parseTriangleGeometry. Make a parseSubGeom() instead (?)\r\n\t\t\t\tvar sm_len:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar sm_end:number = this._newBlockBytes.position + sm_len;\r\n\t\t\t\t//console.log(\"Font sm_len = \"+sm_len);\r\n\r\n\t\t\t\t//this.parseProperties(null); // no properties for font-table subgeos\r\n\t\t\t\t// Loop through data streams\r\n\t\t\t\twhile (this._newBlockBytes.position < sm_end) {\r\n\t\t\t\t\tvar idx:number = 0;\r\n\t\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n\t\t\t\t\t// Type, field type, length\r\n\t\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\r\n\r\n\t\t\t\t\tif (str_type == 2) {//face indicies positions\r\n\t\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\t\tindices[idx++] = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\r\n\t\t\t\t\t\tvar idx_pos:number = 0;\r\n\t\t\t\t\t\tvar idx_curves:number = 0;\r\n\t\t\t\t\t\tvar idx_uvs:number = 0;\r\n\r\n\t\t\t\t\t\tvar positions:Array<number> = new Array<number>();\r\n\t\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\r\n\t\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// x\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// y\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// type\r\n\r\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.readNumber(this._accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.readNumber(this._accuracyGeo);// curve value 2\r\n\r\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.readNumber(this._accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.readNumber(this._accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.parseProperties(null);// no attributes for font-table subgeos\r\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\r\n\t\t\t\tcurve_sub_geom.updateIndices(indices);\r\n\t\t\t\tcurve_sub_geom.updatePositions(positions);\r\n\t\t\t\tcurve_sub_geom.updateCurves(curveData);\r\n\t\t\t\tcurve_sub_geom.updateUVs(uvs);\r\n\t\t\t\tnew_font_style.set_subgeo_for_char(font_style_char.toString(), curve_sub_geom);\r\n\t\t\t}\r\n\t\t\t//console.log(\"Parsed a font-table\");\r\n\r\n\t\t}\r\n\t\t//console.log(\"Parsed a font\");\r\n\t\tthis.parseProperties(null);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset>new_font, name);\r\n\t\tthis._blocks[blockID].data = new_font;\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a font: Name = '\" + name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate parseTextFormat(blockID:number):void {\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tthis._blocks[blockID].name = name;\r\n\t\t//console.log(\"this._blocks[blockID].name  '\" + this._blocks[blockID].name );\r\n\t\tvar font_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"font_id  '\" + font_id);\r\n\t\tvar font_style_name:string = this.parseVarStr();\r\n\t\t//console.log(\"font_style_name  '\" + font_style_name);\r\n\t\tvar returnArrayFont:Array<any> = this.getAssetByID(font_id, [Font.assetType]);\r\n\t\tvar font:Font;\r\n\t\tif (returnArrayFont[0]) {\r\n\t\t\tfont = <Font> returnArrayFont[1];\r\n\t\t} else {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Font for this TextFormat. A empty Font is created!\");\r\n\t\t\tfont = new Font();\r\n\t\t}\r\n\t\tvar newTextFormat:TextFormat = new TextFormat();\r\n\t\tnewTextFormat.font_name = font.name;\r\n\t\tvar font_table:TesselatedFontTable = font.get_font_table(font_style_name);\r\n\t\tif(font_table!=null){\r\n\t\t\tnewTextFormat.font_style = font_style_name;\r\n\t\t\tnewTextFormat.font_table = font_table;\r\n\t\t}\r\n\r\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"mat  '\" + data_id);\r\n\t\tvar mat:BasicMaterial;\r\n\t\tvar returnedArrayMaterial:Array<any> = this.getAssetByID(data_id, [MethodMaterial.assetType, BasicMaterial.assetType]);\r\n\r\n\t\tif (returnedArrayMaterial[0]) {\r\n\t\t\tmat = <BasicMaterial> returnedArrayMaterial[1];\r\n\t\t} else {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Material for this TextFormat. Default Material will be used!\");\r\n\t\t\tmat = new BasicMaterial();\r\n\t\t}\r\n\t\tmat.bothSides=true;\r\n\r\n\t\tvar num_uv_values:number = this._newBlockBytes.readUnsignedByte();\r\n\t\t//console.log(\"num_uv_values  '\" + num_uv_values);\r\n\t\tvar uv_values:Array<number>=[];\r\n\t\tfor(var uvcnt:number=0; uvcnt<num_uv_values; uvcnt++){\r\n\t\t\tvar uv_value:number=this._newBlockBytes.readFloat();\r\n\t\t\tuv_values.push(uv_value);\r\n\t\t\t//console.log(\"uv_value  '\" + uv_value);\r\n\t\t}\r\n\t\tnewTextFormat.uv_values=uv_values;\r\n\t\tvar format_props:AWDProperties = this.parseProperties({1:AWDParser.UINT16, 2:AWDParser.UINT16, 3:AWDParser.UINT8,4:AWDParser.UINT8,5:AWDParser.UINT8,6:AWDParser.UINT8, 7:AWDParser.UINT16, 8:AWDParser.UINT16, 9:AWDParser.UINT16, 10:AWDParser.UINT16});\r\n\r\n\t\tnewTextFormat.size = format_props.get(1,12);\r\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\r\n\t\t//newTextFormat.rotated = format_props.get(3,false);\r\n\t\tnewTextFormat.kerning = format_props.get(4,true);\r\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\r\n\t\t//newTextFormat.align = format_props.get(6,0);\r\n\t\tnewTextFormat.indent = format_props.get(7,0);\r\n\t\tnewTextFormat.leftMargin = format_props.get(8,0);\r\n\t\tnewTextFormat.rightMargin = format_props.get(9,0);\r\n\t\t//newTextFormat.linespacing = format_props.get(10,0);\r\n\t\tnewTextFormat.material = mat;\r\n\t\tthis.parseUserAttributes();// textformat has no extra-properties\r\n\t\t//newTextFormat.extra =\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> newTextFormat, name);\r\n\t\tthis._blocks[blockID].data = newTextFormat;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a TextFormat: Name = '\" + name + \" font: \"+font.name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate paresTextField(blockID:number, factory:TimelineSceneGraphFactory):void {\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tthis._blocks[blockID].name = name;\r\n\t\t//console.log(\"name  '\" + name);\r\n        var newTextField = factory.createTextField();\r\n\t\tvar text_field_type:number=this._newBlockBytes.readUnsignedByte();\r\n\t\tif(text_field_type==0) {\r\n\t\t\tnewTextField.type = \"static\";\r\n\t\t}\r\n\t\telse if(text_field_type==1) {\r\n\t\t\tnewTextField.type = \"dynamic\";\r\n\t\t}\r\n\t\telse if(text_field_type==2) {\r\n\t\t\tnewTextField.type = \"input\";\r\n\t\t}\r\n\t\telse if(text_field_type==3) {\r\n\t\t\tnewTextField.type =\"input\";\r\n\t\t\tnewTextField.displayAsPassword=true;\r\n\t\t}\r\n\r\n\t\tnewTextField.width=this._newBlockBytes.readFloat();\r\n\t\tnewTextField.height=this._newBlockBytes.readFloat();\r\n\t\tvar num_paragraphs:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar complete_text:string = \"\";\r\n\t\t//console.log(\"num_paragraphs  '\" + num_paragraphs);\r\n\t\tvar text_format:TextFormat;\r\n\t\tfor(var paracnt:number=0; paracnt<num_paragraphs; paracnt++){\r\n\r\n\t\t\tvar num_textruns:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t//console.log(\"num_textruns  '\" + num_textruns);\r\n\t\t\tfor(var textrun_cnt:number=0; textrun_cnt<num_textruns; textrun_cnt++) {\r\n\r\n\t\t\t\tvar format_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"format_id  '\" + format_id);\r\n\t\t\t\tvar textFormatArray:Array<any> = this.getAssetByID(format_id, [TextFormat.assetType]);\r\n\t\t\t\tif (textFormatArray[0]) {\r\n\t\t\t\t\ttext_format = <TextFormat> textFormatArray[1];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find a Material for this Billboard. A empty material is created!\");\r\n\t\t\t\t\ttext_format = new TextFormat();\r\n\t\t\t\t}\r\n\t\t\t\t//console.log(\"text_format  '\" + text_format.name);\r\n\t\t\t\tvar txt_length = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"txt_length  '\" + txt_length);\r\n\t\t\t\tif (txt_length > 0) {\r\n\t\t\t\t\tvar this_txt:string = this._newBlockBytes.readUTFBytes(txt_length);\r\n\t\t\t\t\t//newTextField.appendText(this_txt, text_format);\r\n\t\t\t\t\tcomplete_text+=this_txt;\r\n\t\t\t\t\t//console.log(\"this_txt  '\" + this_txt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//newTextField.closeParagraph();\r\n\t\t}\r\n\t\tnewTextField.textFormat=text_format;\r\n\t\tnewTextField.text=complete_text;\r\n\t\t//newTextField.construct_geometry();\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BOOL, 3:AWDParser.BOOL, 4:AWDParser.BOOL, 5:AWDParser.BOOL, 7:AWDParser.UINT8, 8:AWDParser.UINT8, 9:AWDParser.UINT8});\r\n\t\tnewTextField.selectable = props.get(1, false);\r\n\t\tnewTextField.border =  props.get(3, false);\r\n\t\t//newTextField.renderHTML =  props.get(4, false);\r\n\t\t//newTextField.scrollable =  props.get(5, false);\r\n\t\t//newTextField.text_flow =  props.get(7, 0);\r\n\t\t//newTextField.orientationMode =  props.get(8, 0);\r\n\t\t//newTextField.line_mode =  props.get(9, 0);\r\n\t\tnewTextField.extra = this.parseUserAttributes();\r\n\r\n\t\t//console.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\r\n\t\tthis._pFinalizeAsset(<IAsset> newTextField, name);\r\n\t\tthis._blocks[blockID].data = newTextField;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Block ID = 25\r\n\tprivate parseBillBoardLibraryBlock(blockID:number):void {\r\n\r\n\t\tvar name:string = this.parseVarStr();\r\n\r\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mat:BasicMaterial;\r\n\t\tvar returnedArrayMaterial:Array<any> = this.getAssetByID(data_id, [MethodMaterial.assetType, BasicMaterial.assetType]);\r\n\r\n\t\tif (returnedArrayMaterial[0]) {\r\n\t\t\tmat = <BasicMaterial> returnedArrayMaterial[1];\r\n\t\t} else {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Material for this Billboard. A empty material is created!\");\r\n\t\t\tmat = new BasicMaterial();\r\n\t\t}\r\n\t\tmat.bothSides=true;\r\n\t\tvar billboard:Billboard = new Billboard(mat);\r\n\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\t\tthis.parseProperties(null);\r\n\r\n\t\tbillboard.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> billboard, name);\r\n\t\tthis._blocks[blockID].data = billboard;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a Library-Billboard: Name = '\" + name + \"| Material-Name = \" + mat.name);\r\n\t\t}\r\n\t}\r\n\t// Block ID = 24\r\n\tprivate parseMeshLibraryBlock(blockID:number):void {\r\n\t\tvar num_materials:number;\r\n\t\tvar materials_parsed:number;\r\n\r\n\t\tvar name:string = this.parseVarStr();\r\n\r\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar geom:Geometry;\r\n\t\tvar returnedArrayGeometry:Array<any> = this.getAssetByID(data_id, [Geometry.assetType])\r\n\r\n\t\tif (returnedArrayGeometry[0]) {\r\n\t\t\tgeom = <Geometry> returnedArrayGeometry[1];\r\n\t\t} else {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Geometry for this Mesh. A empty Geometry is created!\");\r\n\t\t\tgeom = new Geometry();\r\n\t\t}\r\n\r\n\t\tthis._blocks[blockID].geoID = data_id;\r\n\t\tvar materials:Array<MethodMaterial> = new Array<MethodMaterial>();\r\n\t\tnum_materials = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar materialNames:Array<string> = new Array<string>();\r\n\t\tmaterials_parsed = 0;\r\n\r\n\t\tvar returnedArrayMaterial:Array<any>;\r\n\r\n\t\twhile (materials_parsed < num_materials) {\r\n\t\t\tvar mat_id:number;\r\n\t\t\tmat_id = this._newBlockBytes.readUnsignedInt();\r\n\t\t\treturnedArrayMaterial = this.getAssetByID(mat_id, [MethodMaterial.assetType, BasicMaterial.assetType])\r\n\t\t\tif ((!returnedArrayMaterial[0]) && (mat_id > 0)) {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find Material Nr \" + materials_parsed + \" (ID = \" + mat_id + \" ) for this Mesh\");\r\n\t\t\t}\r\n\r\n\t\t\tvar m:MethodMaterial = <MethodMaterial> returnedArrayMaterial[1];\r\n\t\t\t//m.preserveAlpha = true;\r\n\t\t\tm.alphaBlending = true;\r\n\t\t\tm.useColorTransform = true;\r\n\t\t\tmaterials.push(m);\r\n\t\t\tmaterialNames.push(m.name);\r\n\r\n\t\t\tmaterials_parsed++;\r\n\t\t}\r\n\r\n\t\tvar mesh:Mesh = new Mesh(geom, null);\r\n\r\n\r\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\r\n\t\t\tmesh.material = materials[0];\r\n\t\t} else if (materials.length > 1) {\r\n\t\t\tvar i:number;\r\n\r\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\r\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\r\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\r\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.parseProperties(null);\r\n\t\tmesh.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\r\n\t\tthis._blocks[blockID].data = mesh;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a Library-Mesh: Name = '\" + name + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\r\n\t\t}\r\n\t}\r\n\tprivate parseAudioBlock(blockID:number, factory:TimelineSceneGraphFactory):void {\r\n\r\n\t\t//var asset:Audio;todo create asset for audio\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\t//this._texture_users[this._cur_block_id.toString()] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\r\n\t\t\t// todo parser needs to be able to handle mp3 and wav files if we trigger the loading of external ressource\r\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\r\n\t\t\tconsole.log(\"Audio url = \"+url);\r\n\r\n\t\t} else {\r\n\t\t\t// todo: exporter does not export embed sounds yet\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray;\r\n\t\t\tdata = new ByteArray();\r\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t// todo parse sound from bytes\r\n\t\t\t// this._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.by(data), true);\r\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t//this._blocks[blockID].data = asset;todo\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Audio file\");\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 4\r\n\tprivate parseTimeLine(blockID:number, factory:TimelineSceneGraphFactory):void {\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar c:number;\r\n\t\tvar timeLineContainer = factory.createMovieClip();\r\n\t\tvar name = this.parseVarStr();\r\n\t\tvar isScene = !!this._newBlockBytes.readUnsignedByte();\r\n\t\tvar sceneID = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar fps:number = this._newBlockBytes.readFloat();\r\n\t\t//console.log(\"fps = \"+fps);\r\n\t\ttimeLineContainer.fps=fps;\r\n\t\tvar ms_per_frame = 1000 / fps;\r\n\t\tvar num_instances:number=0;\r\n\t\tvar num_all_display_instances:number=0;\r\n\r\n\r\n\t\t// register list of potential childs\r\n\t\t// a potential child can be reused on a timeline (added / removed / added)\r\n\t\t// However, for each potential child, we need to register the max-number of instances that a frame contains\r\n\t\t// we parse 2 lists of potential-childs:\r\n\t\t// -\tthe first list contains potential-childs that are only ever instanced once per frame.\r\n\t\t// -\tthe second list contains potential-childs that are instanced multiple times on some frames.\r\n\r\n\t\t// on registering a child, the child gets a incremental-id assigned. This is the id, that the commands are using to access the childs.\r\n\t\t// hence we need to be careful to register all objects in correct order.\r\n\r\n\t\tvar num_potential_childs:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_childs; i++) {\r\n\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this._blocks[resourceID].data;\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\ttimeLineContainer.registerPotentialChild(cmd_asset);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\r\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tnum_all_display_instances+=num_potential_childs;\r\n\t\tvar num_potential_childs_multi_instanced = this._newBlockBytes.readUnsignedShort();\r\n\t\tnum_potential_childs+=num_potential_childs_multi_instanced;\r\n\t\tfor (i = 0; i < num_potential_childs_multi_instanced; i++) {\r\n\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tnum_instances = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tnum_all_display_instances+=num_instances;\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this._blocks[resourceID].data;\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\r\n\t\t\t\t\ttimeLineContainer.registerPotentialChild(cmd_asset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\r\n\t\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\r\n\t\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(\"Parsed \"+num_potential_childs+\" potential childs. They will be used by \"+num_all_display_instances+\" instances.\");\r\n\r\n\t\t// register list of potential sounds\r\n\t\t// a potential child can be reused on a timeline (added / removed / added)\r\n\t\tvar num_potential_sounds = this._newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_sounds; i++) {\r\n\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this._blocks[resourceID].data;\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\t//todo: register sound objects on movieclip\r\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//todo: this is a error that might break complete timeline, because all sound obj-id shift\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(\"Parsed \"+num_potential_sounds+\" potential sounds\");\r\n\r\n\t\tvar numFrames = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t//console.log(\"numFrames \"+numFrames);\r\n\t\t// var previousTimeLine:TimeLineFrame;\r\n\t\t// var fill_props:AWDProperties = this.parseProperties({1:AWD3Parserutils.UINT32});// { 1:UINT32, 6:AWDSTRING }  ); //; , 2:UINT32, 3:UINT32, 5:BOOL } );\r\n\r\n\r\n\t\tvar totalDuration:number;\r\n\t\tvar frameDuration:number;\r\n\t\tvar numLabels:number;\r\n\t\tvar numCommands:number;\r\n\t\tvar objectID:number;\r\n\t\tvar target_depth:number;\r\n\t\tvar resourceID:number;\r\n\t\tvar number_of_obj:number;\r\n\t\tvar commandType:number;\r\n\t\tvar frame:TimelineKeyFrame;\r\n\t\tvar label:string;\r\n\t\tvar hasDepthChanges:boolean;\r\n\t\ttotalDuration=0;\r\n\t\tfor (i = 0; i < numFrames; i++) {\r\n\t\t\tframe = new TimelineKeyFrame();\r\n\t\t\t// todo: remove the ms_per_frame to set the duration in frames\r\n\t\t\tframeDuration = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tframe.setFrameTime(totalDuration, frameDuration);\r\n\t\t\ttotalDuration += frameDuration;\r\n\t\t\t//console.log(\"duration = \" + frameDuration);\r\n\r\n\t\t\tnumLabels = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\t\tfor (j = 0; j < numLabels; j++) {\r\n\t\t\t\t// TODO: Temporary way to handle labels\r\n\t\t\t\tframe.label = this.parseVarStr();\r\n\t\t\t}\r\n\r\n\t\t\tnumCommands = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t//console.log(\"numCommands \"+numCommands);\r\n\t\t\t//traceString += \"\\n      Commands \" + numCommands;\r\n\t\t\thasDepthChanges = false;\r\n\t\t\tfor (j = 0; j < numCommands; j++) {\r\n\t\t\t\tcommandType = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\t\t\t// 1 = remove a number of objects by depth\r\n\t\t\t\t// 2 = add a object by child-id at specific depth\r\n\t\t\t\t// 3 = update a object by child-id\r\n\t\t\t\t// 4 = add / update sound - (not finished)\r\n\r\n\t\t\t\tswitch (commandType) {\r\n\r\n\t\t\t\t\tcase 1:// remove a number of objects at specific depth\r\n\t\t\t\t\t\tnumber_of_obj = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t//console.log(\"number_of_obj \", number_of_obj);\r\n\t\t\t\t\t\tvar remove_depths:Array<number>=new Array<number>();\r\n\t\t\t\t\t\tfor (c = 0; c < number_of_obj; c++) {\r\n\t\t\t\t\t\t\t// Remove Object Command\r\n\t\t\t\t\t\t\ttarget_depth = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\tremove_depths.push(target_depth);\r\n\t\t\t\t\t\t\t//console.log(\"\\n       - Remove object at depth: \" + target_depth);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tframe.addConstructCommand(new RemoveChildrenAtDepthCommand(remove_depths));\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2:// add a of object by child-id at specific depth\r\n\t\t\t\t\tcase 3:// update a object by child-id\r\n\t\t\t\t\t\tobjectID = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t//console.log(\"add / update objectID \", objectID);\r\n\t\t\t\t\t\tif (commandType == 2) {\r\n\t\t\t\t\t\t\thasDepthChanges=true;\r\n\t\t\t\t\t\t\ttarget_depth = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t//console.log(\"target_depth \", target_depth);\r\n                            var potChild = timeLineContainer.getPotentialChildPrototype(objectID);\r\n\t\t\t\t\t\t\tif (potChild != undefined) {\r\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new AddChildAtDepthCommand(objectID, target_depth));\r\n\t\t\t\t\t\t\t\t// if the object is a tetfield, we set the textfield-name as instancename\r\n                                if(potChild.isAsset(TextField)) {\r\n                                    frame.addConstructCommand(new SetInstanceNameCommand(objectID, potChild.name));\r\n                                }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tconsole.log(\"ERROR: could not find the objectID \", objectID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar props_flag = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t/*\tProps_flags\r\n\t\t\t\t\t\t 1: read display matrix - 6 x float,\r\n\t\t\t\t\t\t 2: read display matrix - read another UINT8-bitflag that determinates what matrix components to parse\r\n\t\t\t\t\t\t 3: read color matrix - 4 x float, 4 x uint16\r\n\t\t\t\t\t\t 4: read color matrix - read another UINT8-bitflag that determinates what matrix components to parse\r\n\t\t\t\t\t\t 5: blendmode - uint8\r\n\t\t\t\t\t\t 6: visible - boolean\r\n\t\t\t\t\t\t 7: AWD3Parserutils.UINT8\r\n\t\t\t\t\t\t });*/\r\n\t\t\t\t\t\t// read display matrix\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG1)) {\r\n\t\t\t\t\t\t\tvar thisMatrix = new Matrix3D();\r\n\t\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG2)) {\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[0] = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[1] = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[4] = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[5] = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.position = new Vector3D(this._newBlockBytes.readFloat(), this._newBlockBytes.readFloat(), 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"_iMatrix3D\", thisMatrix));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// read colortransforms\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG3)) {\r\n\t\t\t\t\t\t\tvar thisColorTransform = new ColorTransform();\r\n\t\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG4)) {\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthisColorTransform.redMultiplier = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.greenMultiplier = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.blueMultiplier = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.alphaMultiplier = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.redOffset = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.greenOffset = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.blueOffset = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.alphaOffset = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"colorTransform\", thisColorTransform));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG5)) {\r\n\t\t\t\t\t\t\tvar blendmode_int = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\t\t\tvar blendmode_string = this.blendModeDic[blendmode_int];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG6)) {\r\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"visible\", this._newBlockBytes.readByte()));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG7)) {\r\n\t\t\t\t\t\t\tvar instanceName = this.parseVarStr();\r\n\t\t\t\t\t\t\tif (instanceName.length) {\r\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetInstanceNameCommand(objectID, instanceName));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG8)) {\r\n\t\t\t\t\t\t\tvar mask_id_nums = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t\tvar mask_ids = new Array();\r\n\t\t\t\t\t\t\tfor (var mi_cnt = 0; mi_cnt < mask_id_nums; mi_cnt++) {\r\n\t\t\t\t\t\t\t\tmask_ids.push(this._newBlockBytes.readShort());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (mask_ids.length > 0) {\r\n\t\t\t\t\t\t\t\tif ((mask_ids.length == 1) && (mask_ids[0] == -1)) {\r\n\t\t\t\t\t\t\t\t\t// TODO: this object is used as mask\r\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"_iMaskID\", objectID));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetMaskCommand(objectID, mask_ids));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 4:\r\n\r\n\t\t\t\t\t\t// Add Sound Command\r\n\t\t\t\t\t\t// TODO: create CommandPropsSound and check which asset to use\r\n\t\t\t\t\t\tobjectID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\t// TODO: implement sound in timeline\r\n\t\t\t\t\t\t//commandString += \"\\n      - Add new Sound AWD-ID = \" + resourceID.toString() + \" as object_id = \" + objectID.toString();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t//commandString += \"\\n       - Unknown Command Type = \" + commandType;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (hasDepthChanges) {\r\n\t\t\t\t// only want to do this once after all children's depth values are updated\r\n\t\t\t\tframe.addConstructCommand(new ApplyAS2DepthsCommand());\r\n\t\t\t\thasDepthChanges = false;\r\n\t\t\t}\r\n\r\n\t\t\tvar length_code = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tif (length_code > 0) {\r\n\t\t\t\t// TODO: Script should probably not be attached to keyframes?\r\n\t\t\t\tvar frame_code = this._newBlockBytes.readUTFBytes(length_code);\r\n\t\t\t\tframe.addPostConstructCommand(new ExecuteScriptCommand(frame_code));\r\n\t\t\t\t//traceString += \"\\nframe-code = \" + frame_code;\r\n\t\t\t}\r\n\t\t\t//traceString += commandString;\r\n\t\t\t//trace(\"length_code = \"+length_code+\" frame_code = \"+frame_code);\r\n\t\t\tthis._newBlockBytes.readUnsignedInt();// user attributes - skip for now\r\n\t\t\t//console.log(traceString);\r\n\t\t\ttimeLineContainer.addFrame(frame);\r\n\r\n\t\t}\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset>timeLineContainer, name);\r\n\t\tthis._blocks[blockID].data = timeLineContainer;\r\n\t\tthis.parseProperties(null);\r\n\t\tthis.parseUserAttributes();\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| isScene = \" + isScene + \"| sceneID = \" + sceneID + \"| numFrames = \" + numFrames);\r\n\t}\r\n\r\n\t//Block ID = 1\r\n\tprivate parseTriangleGeometrieBlock(blockID:number):void\r\n\t{\r\n\r\n\t\tvar geom:Geometry = new Geometry();\r\n\r\n\t\t// Read name and sub count\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_subs:number = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t// Read optional properties\r\n\t\tvar props:AWDProperties = this.parseProperties({1:this._geoNrType, 2:this._geoNrType});\r\n\t\tvar geoScaleU:number = props.get(1, 1);\r\n\t\tvar geoScaleV:number = props.get(2, 1);\r\n\r\n\t\t// Loop through sub meshes\r\n\t\tvar subs_parsed:number = 0;\r\n\t\twhile (subs_parsed < num_subs) {\r\n\t\t\tvar is_curve_geom:boolean=false;\r\n\t\t\tvar i:number;\r\n\t\t\tvar sm_len:number, sm_end:number;\r\n\t\t\tvar w_indices:Array<number>;\r\n\t\t\tvar weights:Array<number>;\r\n\r\n\t\t\tsm_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tsm_end = this._newBlockBytes.position + sm_len;\r\n\r\n\t\t\tvar subProps:AWDProperties = this.parseProperties({1:this._geoNrType, 2:this._geoNrType});\r\n\t\t\t// Loop through data streams\r\n\t\t\twhile (this._newBlockBytes.position < sm_end) {\r\n\t\t\t\tvar idx:number = 0;\r\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n\t\t\t\t// Type, field type, length\r\n\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\r\n\r\n\t\t\t\tvar x:number, y:number, z:number;\r\n\r\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\r\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo);\r\n\r\n\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\r\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tindices[idx++] = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 3) {\r\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tuvs[idx++] = this.readNumber(this._accuracyGeo);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 4) {\r\n\r\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tnormals[idx++] = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 6) {\r\n\t\t\t\t\tw_indices = Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tw_indices[idx++] = this._newBlockBytes.readUnsignedShort()*3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 7) {\r\n\r\n\t\t\t\t\tweights = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tweights[idx++] = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\r\n\t\t\t\t\tis_curve_geom=true;\r\n\t\t\t\t\tvar idx_pos:number = 0;\r\n\t\t\t\t\tvar idx_curves:number = 0;\r\n\t\t\t\t\tvar idx_uvs:number = 0;\r\n\r\n\t\t\t\t\tvar positions:Array<number> = new Array<number>();\r\n\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\r\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// x\r\n\t\t\t\t\t\tpositions[idx_pos++] = this.readNumber(this._accuracyGeo);// y\r\n\t\t\t\t\t\tpositions[idx_pos++] =  this.readNumber(this._accuracyGeo);// type\r\n\r\n\t\t\t\t\t\tcurveData[idx_curves++] = this.readNumber(this._accuracyGeo);// curve value 1\r\n\t\t\t\t\t\tcurveData[idx_curves++] = this.readNumber(this._accuracyGeo);// curve value 2\r\n\r\n\t\t\t\t\t\tuvs[idx_uvs++] = this.readNumber(this._accuracyGeo);// curve value 1\r\n\t\t\t\t\t\tuvs[idx_uvs++] = this.readNumber(this._accuracyGeo);// curve value 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.parseUserAttributes(); // Ignore sub-mesh attributes for now\r\n\t\t\tif(is_curve_geom){\r\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\r\n\t\t\t\tcurve_sub_geom.updateIndices(indices);\r\n\t\t\t\tcurve_sub_geom.updatePositions(positions);\r\n\t\t\t\tcurve_sub_geom.updateCurves(curveData);\r\n\t\t\t\tcurve_sub_geom.updateUVs(uvs);\r\n\t\t\t\tgeom.addSubGeometry(curve_sub_geom);\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a CurveSubGeometry\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar triangle_sub_geom = new TriangleSubGeometry(true);\r\n\t\t\t\tif (weights)\r\n\t\t\t\t\ttriangle_sub_geom.jointsPerVertex = weights.length / (verts.length / 3);\r\n\t\t\t\tif (normals)\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveNormals = false;\r\n\t\t\t\tif (uvs)\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveUVs = false;\r\n\t\t\t\t//triangle_sub_geom.autoDeriveNormals = false;\r\n\t\t\t\tif (true) {\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveTangents = true;\r\n\t\t\t\t}\r\n\t\t\t\ttriangle_sub_geom.updateIndices(indices);\r\n\t\t\t\ttriangle_sub_geom.updatePositions(verts);\r\n\t\t\t\ttriangle_sub_geom.updateVertexNormals(normals);\r\n\t\t\t\ttriangle_sub_geom.updateUVs(uvs);\r\n\t\t\t\ttriangle_sub_geom.updateVertexTangents(null);\r\n\t\t\t\ttriangle_sub_geom.updateJointWeights(weights);\r\n\t\t\t\ttriangle_sub_geom.updateJointIndices(w_indices);\r\n\r\n\t\t\t\tvar scaleU:number = subProps.get(1, 1);\r\n\t\t\t\tvar scaleV:number = subProps.get(2, 1);\r\n\t\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\r\n\r\n\t\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\r\n\t\t\t\t\tsetSubUVs = true;\r\n\t\t\t\t\tscaleU = geoScaleU / scaleU;\r\n\t\t\t\t\tscaleV = geoScaleV / scaleV;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (setSubUVs)\r\n\t\t\t\t\ttriangle_sub_geom.scaleUV(scaleU, scaleV);\r\n\t\t\t\tgeom.addSubGeometry(triangle_sub_geom);\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a TriangleSubGeometry\");\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\r\n\t\t\t// when creating meshes (and their material assignments.)\r\n\r\n\t\t\tsubs_parsed++;\r\n\t\t}\r\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\r\n\t\t\tgeom.scaleUV(geoScaleU, geoScaleV);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> geom, name);\r\n\t\tthis._blocks[blockID].data = geom;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a TriangleGeometry: Name = \" + name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t//Block ID = 11\r\n\tprivate parsePrimitves(blockID:number):void\r\n\t{\r\n\t\tvar name:string;\r\n\t\tvar prefab:PrefabBase;\r\n\t\tvar primType:number;\r\n\t\tvar subs_parsed:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar bsm:Matrix3D;\r\n\r\n\t\t// Read name and sub count\r\n\t\tname = this.parseVarStr();\r\n\t\tprimType = this._newBlockBytes.readUnsignedByte();\r\n\t\tprops = this.parseProperties({101:this._geoNrType, 102:this._geoNrType, 103:this._geoNrType, 110:this._geoNrType, 111:this._geoNrType, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 303:AWDParser.UINT16, 701:AWDParser.BOOL, 702:AWDParser.BOOL, 703:AWDParser.BOOL, 704:AWDParser.BOOL});\r\n\r\n\t\tvar primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"]\r\n\r\n\t\tswitch (primType) {\r\n\t\t\t// to do, not all properties are set on all primitives\r\n\r\n\t\t\tcase 1:\r\n\t\t\t\tprefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tprefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\tprefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\r\n\t\t\t\tif (!props.get(701, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\r\n\t\t\t\tif (!props.get(702, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\r\n\t\t\t\tif (!props.get(703, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 5:\r\n\t\t\t\tprefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 7:\r\n\t\t\t\tprefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tprefab = new PrefabBase();\r\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\r\n\t\t\t//geom.subGeometries;\r\n\t\t\t//geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\r\n\t\t}\r\n\r\n\t\tthis.parseUserAttributes();\r\n\t\tprefab.name = name;\r\n\t\tthis._pFinalizeAsset(prefab, name);\r\n\t\tthis._blocks[blockID].data = prefab;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tif ((primType < 0) || (primType > 7)) {\r\n\t\t\t\tprimType = 0;\r\n\t\t\t}\r\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + name + \"| type = \" + primitiveTypes[primType]);\r\n\t\t}\r\n\t}\r\n\r\n\t// Block ID = 22\r\n\tprivate parseContainer(blockID:number):void\r\n\t{\r\n\t\tvar name:string;\r\n\t\tvar par_id:number;\r\n\t\tvar mtx:Matrix3D;\r\n\t\tvar ctr:DisplayObjectContainer;\r\n\t\tvar parent:DisplayObjectContainer;\r\n\r\n\t\tpar_id = this._newBlockBytes.readUnsignedInt();\r\n\t\tmtx = this.parseMatrix3D();\r\n\t\tname = this.parseVarStr();\r\n\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tctr = new DisplayObjectContainer();\r\n\t\tctr.transform.matrix3D = mtx;\r\n\r\n\t\tvar returnedArray:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType]);\r\n\r\n\t\tif (returnedArray[0]) {\r\n\t\t\tvar obj:DisplayObject = (<DisplayObjectContainer> returnedArray[1]).addChild(ctr);\r\n\t\t\tparentName = (<DisplayObjectContainer> returnedArray[1]).name;\r\n\t\t} else if (par_id > 0) {\r\n\t\t\tthis._blocks[ blockID ].addError(\"Could not find a parent for this ObjectContainer3D\");\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(ctr);\r\n\t\t}\r\n\r\n\t\t// in AWD version 2.1 we read the Container properties\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tvar props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\r\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t}\r\n\t\t// in other versions we do not read the Container properties\r\n\t\telse {\r\n\t\t\tthis.parseProperties(null);\r\n\t\t}\r\n\r\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\r\n\t\tctr.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> ctr, name);\r\n\t\tthis._blocks[blockID].data = ctr;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + name + \"' | Parent-Name = \" + parentName);\r\n\t\t}\r\n\t}\r\n\r\n\t// Block ID = 23\r\n\tprivate parseMeshInstance(blockID:number):void\r\n\t{\r\n\t\tvar num_materials:number;\r\n\t\tvar materials_parsed:number;\r\n\t\tvar parent:DisplayObjectContainer;\r\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar geom:Geometry;\r\n\t\tvar returnedArrayGeometry:Array<any> = this.getAssetByID(data_id, [Geometry.assetType])\r\n\r\n\t\tif (returnedArrayGeometry[0]) {\r\n\t\t\tgeom = <Geometry> returnedArrayGeometry[1];\r\n\t\t} else {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Geometry for this Mesh. A empty Geometry is created!\");\r\n\t\t\tgeom = new Geometry();\r\n\t\t}\r\n\r\n\t\tthis._blocks[blockID].geoID = data_id;\r\n\t\tvar materials:Array<MethodMaterial> = new Array<MethodMaterial>();\r\n\t\tnum_materials = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar materialNames:Array<string> = new Array<string>();\r\n\t\tmaterials_parsed = 0;\r\n\r\n\t\tvar returnedArrayMaterial:Array<any>;\r\n\r\n\t\twhile (materials_parsed < num_materials) {\r\n\t\t\tvar mat_id:number;\r\n\t\t\tmat_id = this._newBlockBytes.readUnsignedInt();\r\n\t\t\treturnedArrayMaterial = this.getAssetByID(mat_id, [MethodMaterial.assetType, BasicMaterial.assetType])\r\n\t\t\tif ((!returnedArrayMaterial[0]) && (mat_id > 0)) {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find Material Nr \" + materials_parsed + \" (ID = \" + mat_id + \" ) for this Mesh\");\r\n\t\t\t}\r\n\r\n\t\t\tvar m:MethodMaterial = <MethodMaterial> returnedArrayMaterial[1];\r\n\r\n\t\t\tmaterials.push(m);\r\n\t\t\tmaterialNames.push(m.name);\r\n\r\n\t\t\tmaterials_parsed++;\r\n\t\t}\r\n\r\n\t\tvar mesh:Mesh = new Mesh(geom, null);\r\n\t\tmesh.transform.matrix3D = mtx;\r\n\r\n\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType])\r\n\r\n\t\tif (returnedArrayParent[0]) {\r\n\t\t\tvar objC:DisplayObjectContainer = <DisplayObjectContainer> returnedArrayParent[1];\r\n\t\t\tobjC.addChild(mesh);\r\n\t\t\tparentName = objC.name;\r\n\t\t} else if (par_id > 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Mesh\");\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\r\n\t\t}\r\n\r\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\r\n\t\t\tmesh.material = materials[0];\r\n\t\t} else if (materials.length > 1) {\r\n\t\t\tvar i:number;\r\n\r\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\r\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\r\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\r\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tvar props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8, 5:AWDParser.BOOL});\r\n\t\t\tmesh.pivot = new Vector3D(<number>props.get(1, 0), <number>props.get(2, 0), <number> props.get(3, 0));\r\n\t\t\tmesh.castsShadows = props.get(5, true);\r\n\t\t} else {\r\n\t\t\tthis.parseProperties(null);\r\n\t\t}\r\n\r\n\t\tmesh.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\r\n\t\tthis._blocks[blockID].data = mesh;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a Mesh: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//Block ID 31\r\n\tprivate parseSkyboxInstance(blockID:number):void\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar cubeTexAddr:number = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\tvar returnedArrayCubeTex:Array<any> = this.getAssetByID(cubeTexAddr, [SingleCubeTexture.assetType]);\r\n\t\tif ((!returnedArrayCubeTex[0]) && (cubeTexAddr != 0))\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find the Cubetexture (ID = \" + cubeTexAddr + \" ) for this Skybox\");\r\n\t\tvar asset:Skybox = new Skybox(<SingleCubeTexture> returnedArrayCubeTex[1]);\r\n\r\n\t\tthis.parseProperties(null)\r\n\t\tasset.extra = this.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(asset, name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + name + \"' | CubeTexture-Name = \" + (<SingleCubeTexture> returnedArrayCubeTex[1]).name);\r\n\r\n\t}\r\n\r\n\t//Block ID = 41\r\n\tprivate parseLight(blockID:number):void\r\n\t{\r\n\t\tvar light:LightBase;\r\n\t\tvar newShadowMapper:ShadowMapperBase;\r\n\r\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar lightType:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar props:AWDProperties = this.parseProperties({1:this._propsNrType, 2:this._propsNrType, 3:AWDParser.COLOR, 4:this._propsNrType, 5:this._propsNrType, 6:AWDParser.BOOL, 7:AWDParser.COLOR, 8:this._propsNrType, 9:AWDParser.UINT8, 10:AWDParser.UINT8, 11:this._propsNrType, 12:AWDParser.UINT16, 21:this._matrixNrType, 22:this._matrixNrType, 23:this._matrixNrType});\r\n\t\tvar shadowMapperType:number = props.get(9, 0);\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\r\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\r\n\r\n\t\tif (lightType == 1) {\r\n\t\t\tlight = new PointLight();\r\n\r\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\r\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 4) {\r\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.transform.matrix3D = mtx;\r\n\r\n\t\t}\r\n\r\n\t\tif (lightType == 2) {\r\n\r\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 1) {\r\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//if (shadowMapperType == 2)\r\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\r\n\t\t\t\t//if (shadowMapperType == 3)\r\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tlight.color = props.get(3, 0xffffff);\r\n\t\tlight.specular = props.get(4, 1.0);\r\n\t\tlight.diffuse = props.get(5, 1.0);\r\n\t\tlight.ambientColor = props.get(7, 0xffffff);\r\n\t\tlight.ambient = props.get(8, 0.0);\r\n\r\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\r\n\t\tif (newShadowMapper) {\r\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\r\n\t\t\t\tif (props.get(10, 1) != 1) {\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 1)];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (props.get(10, 2) != 2) {\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 2)];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.shadowMapper = newShadowMapper;\r\n\t\t\tlight.castsShadows = true;\r\n\t\t}\r\n\r\n\t\tif (par_id != 0) {\r\n\r\n\t\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType])\r\n\r\n\t\t\tif (returnedArrayParent[0]) {\r\n\t\t\t\t(<DisplayObjectContainer> returnedArrayParent[1]).addChild(light);\r\n\t\t\t\tparentName = (<DisplayObjectContainer> returnedArrayParent[1]).name;\r\n\t\t\t} else {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Light\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(light);\r\n\t\t}\r\n\r\n\t\tthis.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(< IAsset> light, name);\r\n\r\n\t\tthis._blocks[blockID].data = light;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\r\n\r\n\t}\r\n\r\n\t//Block ID = 43\r\n\tprivate parseCamera(blockID:number):void\r\n\t{\r\n\r\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar projection:ProjectionBase;\r\n\r\n\t\tthis._newBlockBytes.readUnsignedByte(); //set as active camera\r\n\t\tthis._newBlockBytes.readShort(); //lengthof lenses - not used yet\r\n\r\n\t\tvar projectiontype:number = this._newBlockBytes.readShort();\r\n\t\tvar props:AWDProperties = this.parseProperties({101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 104:this._propsNrType});\r\n\r\n\t\tswitch (projectiontype) {\r\n\t\t\tcase 5001:\r\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5002:\r\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5003:\r\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar camera:Camera = new Camera(projection);\r\n\t\tcamera.transform.matrix3D = mtx;\r\n\r\n\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType])\r\n\r\n\t\tif (returnedArrayParent[0]) {\r\n\r\n\t\t\tvar objC:DisplayObjectContainer = <DisplayObjectContainer> returnedArrayParent[1];\r\n\t\t\tobjC.addChild(camera);\r\n\r\n\t\t\tparentName = objC.name;\r\n\r\n\t\t} else if (par_id > 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Camera\");\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(camera);\r\n\t\t}\r\n\r\n\t\tcamera.name = name;\r\n\t\tprops = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\r\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\tcamera.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(camera, name);\r\n\r\n\t\tthis._blocks[blockID].data = camera\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//Block ID = 51\r\n\tprivate parseLightPicker(blockID:number):void\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar numLights:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\r\n\t\tvar k:number = 0;\r\n\t\tvar lightID:number = 0;\r\n\r\n\t\tvar returnedArrayLight:Array<any>;\r\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\r\n\r\n\t\tfor (k = 0; k < numLights; k++) {\r\n\t\t\tlightID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\treturnedArrayLight = this.getAssetByID(lightID, [LightBase.assetType])\r\n\r\n\t\t\tif (returnedArrayLight[0]) {\r\n\t\t\t\tlightsArray.push(<LightBase> returnedArrayLight[1]);\r\n\t\t\t\tlightsArrayNames.push(( <LightBase> returnedArrayLight[1]).name);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find a Light Nr \" + k + \" (ID = \" + lightID + \" ) for this LightPicker\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lightsArray.length == 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not create this LightPicker, cause no Light was found.\");\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\treturn; //return without any more parsing for this block\r\n\t\t}\r\n\r\n\t\tvar lightPick:LightPickerBase = new StaticLightPicker(lightsArray);\r\n\t\tlightPick.name = name;\r\n\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> lightPick, name);\r\n\r\n\t\tthis._blocks[blockID].data = lightPick\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + name + \"' | Texture-Name = \" + lightsArrayNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 81\r\n\tprivate parseMaterial(blockID:number):void\r\n\t{\r\n\t\t// TODO: not used\r\n\t\t////blockLength = block.len;\r\n\t\tvar name:string;\r\n\t\tvar type:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar attributes:Object;\r\n\t\tvar finalize:boolean;\r\n\t\tvar num_methods:number;\r\n\t\tvar methods_parsed:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tname = this.parseVarStr();\r\n\t\ttype = this._newBlockBytes.readUnsignedByte();\r\n\t\tnum_methods = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\t// Read material numerical properties\r\n\t\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\r\n\t\tprops = this.parseProperties({ 1:AWDParser.INT32, 2:AWDParser.BADDR, 10:this._propsNrType, 11:AWDParser.BOOL, 12:this._propsNrType, 13:AWDParser.BOOL});\r\n\r\n\t\tmethods_parsed = 0;\r\n\t\twhile (methods_parsed < num_methods) {\r\n\t\t\tvar method_type:number;\r\n\r\n\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tthis.parseProperties(null);\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\tmethods_parsed += 1;\r\n\t\t}\r\n\t\tvar debugString:string = \"\";\r\n\t\tattributes = this.parseUserAttributes();\r\n\t\tif (type === 1) { // Color material\r\n\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\tvar color:number;\r\n\t\t\tcolor = props.get(1, 0xffffff);\r\n\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t} else {\r\n\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t}\r\n\t\t} else if (type === 2) {\r\n\t\t\tvar tex_addr:number = props.get(2, 0);\r\n\r\n\t\t\treturnedArray = this.getAssetByID(tex_addr, [Single2DTexture.assetType]);\r\n\r\n\t\t\tif ((!returnedArray[0]) && (tex_addr > 0))\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffsueTexture (ID = \" + tex_addr + \" ) for this Material\");\r\n\r\n\t\t\tmat = new MethodMaterial(<TextureBase> returnedArray[1]);\r\n\r\n\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n\t\t\t} else {\r\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmat.extra = attributes;\r\n\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\tmat.repeat = props.get(13, false);\r\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\r\n\t\tthis._blocks[blockID].data = mat;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(debugString);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t// Block ID = 81 AWD2.1\r\n\tprivate parseMaterial_v1(blockID:number):void\r\n\t{\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar normalTexture:TextureBase;\r\n\t\tvar specTexture:TextureBase;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar num_methods:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT32, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 4:AWDParser.UINT8, 5:AWDParser.BOOL, 6:AWDParser.BOOL, 7:AWDParser.BOOL, 8:AWDParser.BOOL, 9:AWDParser.UINT8, 10:this._propsNrType, 11:AWDParser.BOOL, 12:this._propsNrType, 13:AWDParser.BOOL, 15:this._propsNrType, 16:AWDParser.UINT32, 17:AWDParser.BADDR, 18:this._propsNrType, 19:this._propsNrType, 20:AWDParser.UINT32, 21:AWDParser.BADDR, 22:AWDParser.BADDR});\r\n\t\tvar spezialType:number = props.get(4, 0);\r\n\t\tvar debugString:string = \"Parsed Material \";\r\n\r\n\t\tif (spezialType >= 2) {//this is no supported material\r\n\t\t\tthis._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (type <= 2) {// Color material\r\n\t\t\tif (this.materialMode == 1)\r\n\t\t\t\tspezialType = 0;\r\n\t\t\telse if (this.materialMode == 2)\r\n\t\t\t\tspezialType = 1;\r\n\r\n\t\t\tif (spezialType < 2) {//this is SinglePass or MultiPass\r\n\r\n\t\t\t\tif (type == 1) {// Color material\r\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\r\n\r\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\r\n\r\n\t\t\t\t\t} else { //\tSinglePassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (type == 2) {// texture material\r\n\t\t\t\t\tvar tex_addr:number = props.get(2, 0);//TODO temporarily swapped so that diffuse texture goes to ambient\r\n\t\t\t\t\treturnedArray = this.getAssetByID(tex_addr, [Single2DTexture.assetType]);\r\n\r\n\t\t\t\t\tif ((!returnedArray[0]) && (tex_addr > 0))\r\n\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the AmbientTexture (ID = \" + tex_addr + \" ) for this MethodMaterial\");\r\n\r\n\t\t\t\t\tvar texture:Single2DTexture = returnedArray[1];\r\n\r\n\t\t\t\t\tmat = new MethodMaterial(texture);\r\n\r\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + texture.name;\r\n\t\t\t\t\t} else {//\tSinglePassMaterial\r\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + texture.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar diffuseTexture:Single2DTexture;\r\n\t\t\t\tvar diffuseTex_addr:number = props.get(17, 0);\r\n\r\n\t\t\t\treturnedArray = this.getAssetByID(diffuseTex_addr, [Single2DTexture.assetType]);\r\n\r\n\t\t\t\tif ((!returnedArray[0]) && (diffuseTex_addr != 0)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffuseTexture (ID = \" + diffuseTex_addr + \" ) for this MethodMaterial\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (returnedArray[0])\r\n\t\t\t\t\tdiffuseTexture = returnedArray[1];\r\n\r\n\t\t\t\tif (diffuseTexture) {\r\n\t\t\t\t\tmat.diffuseTexture = diffuseTexture;\r\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normalTex_addr:number = props.get(3, 0);\r\n\r\n\t\t\t\treturnedArray = this.getAssetByID(normalTex_addr, [Single2DTexture.assetType]);\r\n\r\n\t\t\t\tif ((!returnedArray[0]) && (normalTex_addr != 0)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the NormalTexture (ID = \" + normalTex_addr + \" ) for this MethodMaterial\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (returnedArray[0]) {\r\n\t\t\t\t\tnormalTexture = returnedArray[1];\r\n\t\t\t\t\tdebugString += \" | NormalTexture-Name = \" + normalTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar specTex_addr:number = props.get(21, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(specTex_addr, [Single2DTexture.assetType]);\r\n\r\n\t\t\t\tif ((!returnedArray[0]) && (specTex_addr != 0)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SpecularTexture (ID = \" + specTex_addr + \" ) for this MethodMaterial\");\r\n\t\t\t\t}\r\n\t\t\t\tif (returnedArray[0]) {\r\n\t\t\t\t\tspecTexture = returnedArray[1];\r\n\t\t\t\t\tdebugString += \" | SpecularTexture-Name = \" + specTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar lightPickerAddr:number = props.get(22, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(lightPickerAddr, [LightPickerBase.assetType])\r\n\r\n\t\t\t\tif ((!returnedArray[0]) && (lightPickerAddr)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightPicker (ID = \" + lightPickerAddr + \" ) for this MethodMaterial\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmat.lightPicker = <LightPickerBase> returnedArray[1];\r\n\t\t\t\t\t//debugString+=\" | Lightpicker-Name = \"+LightPickerBase(returnedArray[1]).name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmat.smooth = props.get(5, true);\r\n\t\t\t\tmat.mipmap = props.get(6, true);\r\n\t\t\t\tmat.bothSides = props.get(7, false);\r\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\r\n\t\t\t\tmat.blendMode = this.blendModeDic[props.get(9, 0)];\r\n\t\t\t\tmat.repeat = props.get(13, false);\r\n\r\n\t\t\t\tif (normalTexture)\r\n\t\t\t\t\tmat.normalMap = normalTexture;\r\n\r\n\t\t\t\tif (specTexture)\r\n\t\t\t\t\tmat.specularMap = specTexture;\r\n\r\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\t\t\tmat.ambient = props.get(15, 1.0);\r\n\t\t\t\tmat.diffuseColor = props.get(16, 0xffffff);\r\n\t\t\t\tmat.specular = props.get(18, 1.0);\r\n\t\t\t\tmat.gloss = props.get(19, 50);\r\n\t\t\t\tmat.specularColor = props.get(20, 0xffffff);\r\n\r\n\t\t\t\tvar methods_parsed:number = 0;\r\n\t\t\t\tvar targetID:number;\r\n\r\n\t\t\t\twhile (methods_parsed < num_methods) {\r\n\t\t\t\t\tvar method_type:number;\r\n\t\t\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t\t\t\tprops = this.parseProperties({\r\n\t\t\t\t\t\t1: AWDParser.BADDR,\r\n\t\t\t\t\t\t2: AWDParser.BADDR,\r\n\t\t\t\t\t\t3: AWDParser.BADDR,\r\n\t\t\t\t\t\t101: this._propsNrType,\r\n\t\t\t\t\t\t102: this._propsNrType,\r\n\t\t\t\t\t\t103: this._propsNrType,\r\n\t\t\t\t\t\t201: AWDParser.UINT32,\r\n\t\t\t\t\t\t202: AWDParser.UINT32,\r\n\t\t\t\t\t\t301: AWDParser.UINT16,\r\n\t\t\t\t\t\t302: AWDParser.UINT16,\r\n\t\t\t\t\t\t401: AWDParser.UINT8,\r\n\t\t\t\t\t\t402: AWDParser.UINT8,\r\n\t\t\t\t\t\t601: AWDParser.COLOR,\r\n\t\t\t\t\t\t602: AWDParser.COLOR,\r\n\t\t\t\t\t\t701: AWDParser.BOOL,\r\n\t\t\t\t\t\t702: AWDParser.BOOL,\r\n\t\t\t\t\t\t801: AWDParser.MTX4x4\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tswitch (method_type) {\r\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffektMethod returned\r\n\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [EffectMethodBase.assetType]);\r\n\r\n\t\t\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EffectMethod (ID = \" + targetID + \" ) for this Material\");\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tmat.addEffectMethod(returnedArray[1]);\r\n\r\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<EffectMethodBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\r\n\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\r\n\r\n\t\t\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the ShadowMethod (ID = \" + targetID + \" ) for this Material\");\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tmat.shadowMethod = returnedArray[1];\r\n\t\t\t\t\t\t\t\tdebugString += \" | ShadowMethod-Name = \" + (<ShadowMethodBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [SingleCubeTexture.assetType]);\r\n\t\t\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this EnvMapAmbientMethodMaterial\");\r\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod();\r\n\t\t\t\t\t\t\tmat.texture = returnedArray[1];\r\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + (<SingleCubeTexture> returnedArray[1]).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\r\n\t\t\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the GradientDiffuseTexture (ID = \" + targetID + \" ) for this GradientDiffuseMethod\");\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(returnedArray[1]);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + (<TextureBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\r\n\t\t\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this LightMapDiffuseMethod\");\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(returnedArray[1], this.blendModeDic[props.get(401, 10)], false, mat.diffuseMethod);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + (<TextureBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\r\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\r\n\t\t\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SecoundNormalMap (ID = \" + targetID + \" ) for this SimpleWaterNormalMethod\");\r\n\t\t\t\t\t\t\tif (!mat.normalMap)\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find a normal Map on this Material to use with this SimpleWaterNormalMethod\");\r\n\r\n\t\t\t\t\t\t\tmat.normalMap = returnedArray[1];\r\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(mat.normalMap, returnedArray[1]);\r\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + (<TextureBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.parseUserAttributes();\r\n\t\t\t\t\tmethods_parsed += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// todo: we should not need this anymore (if using texture-atlas)\r\n\t\telse if ((type>=3)&&(type<=7)){\r\n\t\t\t// if this is a basic material, we create it, finalize it, assign it to block-cache and return and return.\r\n\t\t\tvar color:number = props.get(1, 0xcccccc);\r\n\t\t\tdebugString+=color;\r\n\t\t\r\n\t\t\tvar diffuseTexture:Single2DTexture;\r\n\t\t\tvar diffuseTex_addr:number = props.get(2, 0);\r\n\t\t\r\n\t\t\treturnedArray = this.getAssetByID(diffuseTex_addr, [Single2DTexture.assetType]);\r\n\t\t\r\n\t\t\tif ((!returnedArray[0]) && (diffuseTex_addr != 0)) {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffuseTexture (ID = \" + diffuseTex_addr + \" ) for this MethodMaterial\");\r\n\t\t\t\tdiffuseTexture = DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (returnedArray[0])\r\n\t\t\t\tdiffuseTexture = returnedArray[1];\r\n\t\t\tvar basic_mat:BasicMaterial = new BasicMaterial(diffuseTexture);\r\n\t\t\t//debugString+= \" alpha = \"+props.get(10, 1.0)+\" \";\r\n\t\t\tdebugString+= \" texture = \"+diffuseTex_addr+\" \";\r\n\t\t\tbasic_mat.bothSides = true;\r\n\t\t\tbasic_mat.preserveAlpha = true;\r\n\t\t\tbasic_mat.alphaBlending = true;\r\n\t\t\tbasic_mat.extra = this.parseUserAttributes();\r\n\t\t\tthis._pFinalizeAsset(<IAsset> basic_mat, name);\r\n\t\t\tthis._blocks[blockID].data = basic_mat;\r\n\t\t\tif (this._debug)\r\n\t\t\t\tconsole.log(debugString);\r\n\t\t\treturn;\r\n\t\t\r\n\t\t}\r\n\t\tmat.extra = this.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\r\n\r\n\t\tthis._blocks[blockID].data = mat;\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(debugString);\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 82\r\n\tprivate parseTexture(blockID:number):void\r\n\t{\r\n\r\n\t\tvar asset:TextureBase;\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\tthis._texture_users[this._cur_block_id.toString()] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\r\n\r\n\t\t} else {\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray;\r\n\t\t\tdata = new ByteArray();\r\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t//\r\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\r\n\t\t\t//\r\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\r\n\t\t\t// This gives the browser time to initialise image width / height.\r\n\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\r\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Bitmap for Texture\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//Block ID = 83\r\n\tprivate parseCubeTexture(blockID:number):void\r\n\t{\r\n\t\t//blockLength = block.len;\r\n\t\tvar data_len:number;\r\n\t\tvar asset:SingleCubeTexture;\r\n\t\tvar i:number;\r\n\r\n\t\tthis._cubeBitmaps = new Array<BitmapImage2D>();\r\n\t\tthis._texture_users[ this._cur_block_id.toString() ] = [];\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\tthis._texture_users[this._cur_block_id.toString()] = [];\r\n\t\t\tthis._cubeBitmaps.push(null);\r\n\r\n\t\t\t// External\r\n\t\t\tif (type == 0) {\r\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar url:string;\r\n\t\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\r\n\r\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString() + \"#\" + i, new URLRequest(url), false, null, true);\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar data:ByteArray;\r\n\t\t\t\tdata = new ByteArray();\r\n\r\n\t\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString() + \"#\" + i, null, false, ParserUtils.byteArrayToImage(data), true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing 6 \" + textureStylesNames[type] + \" Bitmaps for CubeTexture\");\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 91\r\n\tprivate parseSharedMethodBlock(blockID:number):void\r\n\t{\r\n\t\tvar asset:EffectMethodBase;\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\t\tasset = this.parseSharedMethodList(blockID);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._blocks[blockID].data = asset;\r\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 92\r\n\tprivate parseShadowMethodBlock(blockID:number):void\r\n\t{\r\n\t\tvar type:number;\r\n\t\tvar data_len:number;\r\n\t\tvar asset:ShadowMethodBase;\r\n\t\tvar shadowLightID:number;\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tshadowLightID = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar returnedArray:Array<any> = this.getAssetByID(shadowLightID, [LightBase.assetType]);\r\n\r\n\t\tif (!returnedArray[0]) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find the TargetLight (ID = \" + shadowLightID + \" ) for this ShadowMethod - ShadowMethod not created\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tasset = this.parseShadowMethodList(<LightBase> returnedArray[1], blockID);\r\n\r\n\t\tif (!asset)\r\n\t\t\treturn;\r\n\r\n\t\tthis.parseUserAttributes(); // Ignore for now\r\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", ( <LightBase> returnedArray[1] ).name);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//Block ID = 253\r\n\tprivate parseCommand(blockID:number):void\r\n\t{\r\n\t\tvar hasBlocks:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\r\n\t\tvar parentObject:DisplayObjectContainer;\r\n\t\tvar targetObject:DisplayObjectContainer;\r\n\r\n\t\tvar returnedArray:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType]);\r\n\r\n\t\tif (returnedArray[0]) {\r\n\t\t\tparentObject = <DisplayObjectContainer> returnedArray[1];\r\n\t\t}\r\n\r\n\t\tvar numCommands:number = this._newBlockBytes.readShort();\r\n\t\tvar typeCommand:number = this._newBlockBytes.readShort();\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR});\r\n\r\n\t\tswitch (typeCommand) {\r\n\t\t\tcase 1:\r\n\r\n\t\t\t\tvar targetID:number = props.get(1, 0);\r\n\t\t\t\t//var returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [LightBase.assetType, TextureProjector.assetType]); //for no only light is requested!!!!\r\n\t\t\t\tvar returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [LightBase.assetType]); //for no only light is requested!!!!\r\n\r\n\t\t\t\tif ((!returnedArrayTarget[0]) && (targetID != 0)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the light (ID = \" + targetID + \" ( for this CommandBock!\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetObject = returnedArrayTarget[1];\r\n\r\n\t\t\t\tif (parentObject) {\r\n\t\t\t\t\tparentObject.addChild(targetObject);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (targetObject) {\r\n\t\t\tprops = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\r\n\r\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t\ttargetObject.extra = this.parseUserAttributes();\r\n\r\n\t\t}\r\n\t\tthis._blocks[blockID].data = targetObject\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//blockID 255\r\n\tprivate parseMetaData(blockID:number):void\r\n\t{\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT32, 2:AWDParser.AWDSTRING, 3:AWDParser.AWDSTRING, 4:AWDParser.AWDSTRING, 5:AWDParser.AWDSTRING});\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\r\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\r\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\r\n\t\t}\r\n\t}\r\n\r\n\t//blockID 254\r\n\tprivate parseNameSpace(blockID:number):void\r\n\t{\r\n\t\tvar id:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar nameSpaceString:string = this.parseVarStr();\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\r\n\t}\r\n\r\n\t//--Parser UTILS---------------------------------------------------------------------------\r\n\r\n\t// this functions reads and creates a ShadowMethodMethod\r\n\tprivate parseShadowMethodList(light:LightBase, blockID:number):ShadowMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar shadowMethod:ShadowMethodBase;\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 201:AWDParser.UINT32, 202:AWDParser.UINT32, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 401:AWDParser.UINT8, 402:AWDParser.UINT8, 601:AWDParser.COLOR, 602:AWDParser.COLOR, 701:AWDParser.BOOL, 702:AWDParser.BOOL, 801:AWDParser.MTX4x4});\r\n\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>\r\n\t\tswitch (methodType) {\r\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this CascadeShadowMapMethod - ShadowMethod not created\");\r\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\r\n\t\t\t//\t\t\t\t\t}\r\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 1002: //ShadowNearMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\r\n\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this ShadowNearMethod - ShadowMethod not created\");\r\n\t\t\t\t\treturn shadowMethod;\r\n\t\t\t\t}\r\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> returnedArray[1]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1101: //ShadowFilteredMethod\r\n\r\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 1102: //ShadowDitheredMethod\r\n\r\n\r\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1103: //ShadowSoftMethod\r\n\r\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1104: //ShadowHardMethod\r\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\treturn shadowMethod;\r\n\t}\r\n\r\n\t//Block ID 101\r\n\tprivate parseSkeleton(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar skeleton:Skeleton = new Skeleton();\r\n\t\tthis.parseProperties(null); // Discard properties for now\r\n\r\n\t\tvar joints_parsed:number /*uint*/ = 0;\r\n\t\twhile (joints_parsed < num_joints) {\r\n\t\t\tvar joint:SkeletonJoint;\r\n\t\t\tvar ibp:Matrix3D;\r\n\t\t\t// Ignore joint id\r\n\t\t\tthis._newBlockBytes.readUnsignedShort();\r\n\t\t\tjoint = new SkeletonJoint();\r\n\t\t\tjoint.parentIndex = this._newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\r\n\t\t\tjoint.name = this.parseVarStr();\r\n\r\n\t\t\tibp = this.parseMatrix3D();\r\n\t\t\tjoint.inverseBindPose = ibp.rawData;\r\n\t\t\t// Ignore joint props/attributes for now\r\n\t\t\tthis.parseProperties(null);\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\tskeleton.joints.push(joint);\r\n\t\t\tjoints_parsed++;\r\n\t\t}\r\n\r\n\t\t// Discard attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(skeleton, name);\r\n\t\tthis._blocks[blockID].data = skeleton;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + skeleton.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\t//Block ID = 102\r\n\tprivate parseSkeletonPose(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tthis.parseProperties(null); // Ignore properties for now\r\n\r\n\t\tvar pose:SkeletonPose = new SkeletonPose();\r\n\r\n\t\tvar joints_parsed:number /*uint*/ = 0;\r\n\t\twhile (joints_parsed < num_joints) {\r\n\t\t\tvar joint_pose:JointPose;\r\n\t\t\tvar has_transform:number /*uint*/;\r\n\t\t\tjoint_pose = new JointPose();\r\n\t\t\thas_transform = this._newBlockBytes.readUnsignedByte();\r\n\t\t\tif (has_transform == 1) {\r\n\t\t\t\tvar mtx_data:Array<number> = this.parseMatrix43RawData();\r\n\r\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\r\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\r\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\r\n\r\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\r\n\t\t\t}\r\n\t\t\tjoints_parsed++;\r\n\t\t}\r\n\t\t// Skip attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(pose, name);\r\n\t\tthis._blocks[blockID].data = pose;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + pose.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\t//blockID 103\r\n\tprivate parseSkeletonAnimation(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar frame_dur:number;\r\n\t\tvar pose_addr:number /*uint*/;\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\r\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tthis.parseProperties(null); // Ignore properties for now\r\n\r\n\t\tvar frames_parsed:number /*uint*/ = 0;\r\n\t\tvar returnedArray:Array<any>;\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tpose_addr = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\r\n\t\t\treturnedArray = this.getAssetByID(pose_addr, [SkeletonPose.assetType]);\r\n\t\t\tif (!returnedArray[0])\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SkeletonPose Frame # \" + frames_parsed + \" (ID = \" + pose_addr + \" ) for this SkeletonClipNode\");\r\n\t\t\telse\r\n\t\t\t\tclip.addFrame(<SkeletonPose> this._blocks[pose_addr].data, frame_dur);\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tif (clip.frames.length == 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not this SkeletonClipNode, because no Frames where set.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Ignore attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(clip, name);\r\n\t\tthis._blocks[blockID].data = clip;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + clip.name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\t//Block ID = 111 /  Block ID = 112\r\n\tprivate parseMeshPoseAnimation(blockID:number /*uint*/, poseOnly:boolean = false):void\r\n\t{\r\n\t\tvar num_frames:number /*uint*/ = 1;\r\n\t\tvar num_submeshes:number /*uint*/;\r\n\t\tvar frames_parsed:number /*uint*/;\r\n\t\tvar subMeshParsed:number /*uint*/;\r\n\t\tvar frame_dur:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar str_len:number;\r\n\t\tvar str_end:number;\r\n\t\tvar geometry:Geometry;\r\n\t\tvar subGeom:TriangleSubGeometry;\r\n\t\tvar idx:number /*int*/ = 0;\r\n\t\tvar clip:VertexClipNode = new VertexClipNode();\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar verts:Array<number>;\r\n\t\tvar num_Streams:number /*int*/ = 0;\r\n\t\tvar streamsParsed:number /*int*/ = 0;\r\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar thisGeo:Geometry;\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar geoAdress:number /*int*/ = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar returnedArray:Array<any> = this.getAssetByID(geoAdress, [Geometry.assetType]);\r\n\t\tif (!returnedArray[0]) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find the target-Geometry-Object \" + geoAdress + \" ) for this VertexClipNode\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar uvs:Array<Array<number>> = this.getUVForVertexAnimation(geoAdress);\r\n\t\tif (!poseOnly)\r\n\t\t\tnum_frames = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\tnum_submeshes = this._newBlockBytes.readUnsignedShort();\r\n\t\tnum_Streams = this._newBlockBytes.readUnsignedShort();\r\n\t\tstreamsParsed = 0;\r\n\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\tstreamtypes.push(this._newBlockBytes.readUnsignedShort());\r\n\t\t\tstreamsParsed++;\r\n\t\t}\r\n\t\tprops = this.parseProperties({1:AWDParser.BOOL, 2:AWDParser.BOOL});\r\n\r\n\t\tclip.looping = props.get(1, true);\r\n\t\tclip.stitchFinalFrame = props.get(2, false);\r\n\r\n\t\tframes_parsed = 0;\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tgeometry = new Geometry();\r\n\t\t\tsubMeshParsed = 0;\r\n\t\t\twhile (subMeshParsed < num_submeshes) {\r\n\t\t\t\tstreamsParsed = 0;\r\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\r\n\t\t\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\r\n\t\t\t\t\t\tindices = (<Geometry> returnedArray[1]).subGeometries[subMeshParsed].indices;\r\n\t\t\t\t\t\tverts = new Array<number>();\r\n\t\t\t\t\t\tidx = 0;\r\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo)\r\n\t\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo)\r\n\t\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo)\r\n\t\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsubGeom = new TriangleSubGeometry(true);\r\n\t\t\t\t\t\tsubGeom.updateIndices(indices);\r\n\t\t\t\t\t\tsubGeom.updatePositions(verts);\r\n\t\t\t\t\t\tsubGeom.updateUVs(uvs[subMeshParsed]);\r\n\t\t\t\t\t\tsubGeom.updateVertexNormals(null);\r\n\t\t\t\t\t\tsubGeom.updateVertexTangents(null);\r\n\t\t\t\t\t\tsubGeom.autoDeriveNormals = false;\r\n\t\t\t\t\t\tsubGeom.autoDeriveTangents = false;\r\n\t\t\t\t\t\tsubMeshParsed++;\r\n\t\t\t\t\t\tgeometry.addSubGeometry(subGeom)\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t\tstreamsParsed++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tclip.addFrame(geometry, frame_dur);\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(clip, name);\r\n\r\n\t\tthis._blocks[blockID].data = clip;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + (<Geometry> returnedArray[1]).name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\t//BlockID 113\r\n\tprivate parseVertexAnimationSet(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar poseBlockAdress:number /*int*/\r\n\t\tvar outputString:string = \"\";\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT16});\r\n\t\tvar frames_parsed:number /*uint*/ = 0;\r\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\r\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tposeBlockAdress = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar returnedArray:Array<any> = this.getAssetByID(poseBlockAdress, [AnimationNodeBase.assetType]);\r\n\t\t\tif (!returnedArray[0])\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the AnimationClipNode Nr \" + frames_parsed + \" ( \" + poseBlockAdress + \" ) for this AnimationSet\");\r\n\t\t\telse {\r\n\t\t\t\tif (returnedArray[1] instanceof VertexClipNode)\r\n\t\t\t\t\tvertexFrames.push(returnedArray[1])\r\n\t\t\t\tif (returnedArray[1] instanceof SkeletonClipNode)\r\n\t\t\t\t\tskeletonFrames.push(returnedArray[1])\r\n\t\t\t}\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not create this AnimationSet, because it contains no animations\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\tif (vertexFrames.length > 0) {\r\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\r\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\r\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\r\n\t\t\tthis._pFinalizeAsset(newVertexAnimationSet, name);\r\n\t\t\tthis._blocks[blockID].data = newVertexAnimationSet;\r\n\t\t\tif (this._debug)\r\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames.toString());\r\n\r\n\t\t} else if (skeletonFrames.length > 0) {\r\n\t\t\treturnedArray = this.getAssetByID(poseBlockAdress, [AnimationNodeBase.assetType]);\r\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\r\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\r\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\r\n\t\t\tthis._pFinalizeAsset(newSkeletonAnimationSet, name);\r\n\t\t\tthis._blocks[blockID].data = newSkeletonAnimationSet;\r\n\t\t\tif (this._debug)\r\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames.toString());\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t//BlockID 122\r\n\tprivate parseAnimatorSet(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar targetMesh:Mesh;\r\n\t\tvar animSetBlockAdress:number /*int*/\r\n\t\tvar targetAnimationSet:AnimationSetBase;\r\n\t\tvar outputString:string = \"\";\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar type:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR});\r\n\r\n\t\tanimSetBlockAdress = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar targetMeshLength:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar meshAdresses:Array<number> /*uint*/ = new Array<number>() /*uint*/;\r\n\t\tfor (var i:number /*int*/ = 0; i < targetMeshLength; i++)\r\n\t\t\tmeshAdresses.push(this._newBlockBytes.readUnsignedInt());\r\n\r\n\t\tvar activeState:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar autoplay:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis.parseUserAttributes();\r\n\r\n\t\tvar returnedArray:Array<any>;\r\n\t\tvar targetMeshes:Array<Mesh> = new Array<Mesh>();\r\n\r\n\t\tfor (i = 0; i < meshAdresses.length; i++) {\r\n\t\t\treturnedArray = this.getAssetByID(meshAdresses[i], [Mesh.assetType]);\r\n\t\t\tif (returnedArray[0])\r\n\t\t\t\ttargetMeshes.push(<Mesh> returnedArray[1]);\r\n\t\t}\r\n\t\treturnedArray = this.getAssetByID(animSetBlockAdress, [AnimationSetBase.assetType]);\r\n\t\tif (!returnedArray[0]) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find the AnimationSet ( \" + animSetBlockAdress + \" ) for this Animator\");;\r\n\t\t\treturn\r\n\t\t}\r\n\t\ttargetAnimationSet = <AnimationSetBase> returnedArray[1];\r\n\t\tvar thisAnimator:AnimatorBase;\r\n\t\tif (type == 1) {\r\n\r\n\t\t\treturnedArray = this.getAssetByID(props.get(1, 0), [Skeleton.assetType]);\r\n\t\t\tif (!returnedArray[0]) {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Skeleton ( \" + props.get(1, 0) + \" ) for this Animator\");\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, <Skeleton> returnedArray[1]);\r\n\r\n\t\t} else if (type == 2)\r\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\r\n\r\n\t\tthis._pFinalizeAsset(thisAnimator, name);\r\n\t\tthis._blocks[blockID].data = thisAnimator;\r\n\t\tfor (i = 0; i < targetMeshes.length; i++) {\r\n\t\t\tif (type == 1)\r\n\t\t\t\ttargetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\r\n\t\t\tif (type == 2)\r\n\t\t\t\ttargetMeshes[i].animator = (<VertexAnimator> thisAnimator);\r\n\r\n\t\t}\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + name);\r\n\t}\r\n\r\n\t// this functions reads and creates a EffectMethod\r\n\tprivate parseSharedMethodList(blockID:number):EffectMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar effectMethodReturn:EffectMethodBase;\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 104:this._propsNrType, 105:this._propsNrType, 106:this._propsNrType, 107:this._propsNrType, 201:AWDParser.UINT32, 202:AWDParser.UINT32, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 401:AWDParser.UINT8, 402:AWDParser.UINT8, 601:AWDParser.COLOR, 602:AWDParser.COLOR, 701:AWDParser.BOOL, 702:AWDParser.BOOL});\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tswitch (methodType) {\r\n\t\t\t// Effect Methods\r\n\t\t\tcase 401: //ColorMatrix\r\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 402: //ColorTransform\r\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\r\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\r\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 403: //EnvMap\r\n\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\tconsole.log('ENV MAP', targetID);\r\n\r\n\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [ SingleCubeTexture.assetType ]);\r\n\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this EnvMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(<SingleCubeTexture> returnedArray[1], <number> props.get(101, 1));\r\n\t\t\t\ttargetID = props.get(2, 0);\r\n\t\t\t\tif (targetID > 0) {\r\n\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\r\n\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Mask-texture (ID = \" + targetID + \" ) for this EnvMapMethod\");\r\n\r\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\r\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <TextureBase> returnedArray[1];\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 404: //LightMapMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\r\n\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this LightMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(returnedArray[1], this.blendModeDic[props.get(401, 10)]); //usesecondaryUV not set\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureProjector.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this ProjectiveTextureMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 406: //RimLightMethod\r\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\r\n\t\t\t\tbreak;\r\n\t\t\tcase 407: //AlphaMaskMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\r\n\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Alpha-texture (ID = \" + targetID + \" ) for this AlphaMaskMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(returnedArray[1], props.get(701, false));\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this RefractionEnvMapMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\r\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 410: //FresnelEnvMapMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [SingleCubeTexture.assetType]);\r\n\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this FresnelEnvMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(returnedArray[1], props.get(101, 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 411: //FogMethod\r\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\treturn effectMethodReturn;\r\n\r\n\t}\r\n\r\n\tprivate parseUserAttributes():Object\r\n\t{\r\n\t\tvar attributes:Object;\r\n\t\tvar list_len:number;\r\n\t\tvar attibuteCnt:number;\r\n\r\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\tif (list_len > 0) {\r\n\r\n\t\t\tvar list_end:number;\r\n\r\n\t\t\tattributes = {};\r\n\r\n\t\t\tlist_end = this._newBlockBytes.position + list_len;\r\n\r\n\t\t\twhile (this._newBlockBytes.position < list_end) {\r\n\t\t\t\tvar ns_id:number;\r\n\t\t\t\tvar attr_key:string;\r\n\t\t\t\tvar attr_type:number;\r\n\t\t\t\tvar attr_len:number;\r\n\t\t\t\tvar attr_val:any;\r\n\r\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\r\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_key = this.parseVarStr();\r\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn attributes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (attr_type) {\r\n\t\t\t\t\tcase AWDParser.AWDSTRING:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.BOOL:\r\n\t\t\t\t\tcase AWDParser.UINT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.UINT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.UINT32:\r\n\t\t\t\t\tcase AWDParser.BADDR:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.FLOAT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.FLOAT64:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\r\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattributes[attr_key] = attr_val;\r\n\t\t\t\tattibuteCnt += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\t}\r\n\r\n\tprivate parseProperties(expected:Object):AWDProperties\r\n\t{\r\n\t\tvar list_end:number;\r\n\t\tvar list_len:number;\r\n\t\tvar propertyCnt:number = 0;\r\n\t\tvar props:AWDProperties = new AWDProperties();\r\n\r\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\r\n\t\tlist_end = this._newBlockBytes.position + list_len;\r\n\r\n\t\tif (expected) {\r\n\r\n\t\t\twhile (this._newBlockBytes.position < list_end) {\r\n\t\t\t\tvar len:number;\r\n\t\t\t\tvar key:number;\r\n\t\t\t\tvar type:number;\r\n\r\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn props;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (expected.hasOwnProperty(key.toString())) {\r\n\t\t\t\t\ttype = expected[key];\r\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newBlockBytes.position += len;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpropertyCnt += 1;\r\n\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t}\r\n\r\n\t\treturn props;\r\n\r\n\t}\r\n\r\n\tprivate parseAttrValue(type:number, len:number):any\r\n\t{\r\n\t\tvar elem_len:number;\r\n\t\tvar read_func:Function;\r\n\r\n\t\tswitch (type) {\r\n\r\n\t\t\tcase AWDParser.BOOL:\r\n\t\t\tcase AWDParser.INT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.INT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.INT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT32:\r\n\t\t\tcase AWDParser.COLOR:\r\n\t\t\tcase AWDParser.BADDR:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.FLOAT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.FLOAT64:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.AWDSTRING:\r\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\r\n\t\t\tcase AWDParser.VECTOR2x1:\r\n\t\t\tcase AWDParser.VECTOR3x1:\r\n\t\t\tcase AWDParser.VECTOR4x1:\r\n\t\t\tcase AWDParser.MTX3x2:\r\n\t\t\tcase AWDParser.MTX3x3:\r\n\t\t\tcase AWDParser.MTX4x3:\r\n\t\t\tcase AWDParser.MTX4x4:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif (elem_len < len) {\r\n\t\t\tvar list:Array<any> = [];\r\n\t\t\tvar num_read:number = 0;\r\n\t\t\tvar num_elems:number = len/elem_len;\r\n\r\n\t\t\twhile (num_read < num_elems) {\r\n\t\t\t\tlist.push(read_func.apply(this._newBlockBytes)); // list.push(read_func());\r\n\t\t\t\tnum_read++;\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\t\t} else {\r\n\r\n\t\t\tvar val:any = read_func.apply(this._newBlockBytes);//read_func();\r\n\t\t\treturn val;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseHeader():void\r\n\t{\r\n\t\tvar flags:number;\r\n\t\tvar body_len:number;\r\n\r\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\r\n\r\n\t\tthis._version[0] = this._byteData.readUnsignedByte();\r\n\t\tthis._version[1] = this._byteData.readUnsignedByte();\r\n\r\n\t\tflags = this._byteData.readUnsignedShort(); // Parse bit flags\r\n\r\n\t\tthis._streaming = BitFlags.test(flags, BitFlags.FLAG1);\r\n\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG2);\r\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG3);\r\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG4);\r\n\t\t}\r\n\r\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\r\n\r\n\t\t// set storagePrecision types\r\n\t\tthis._geoNrType = AWDParser.FLOAT32;\r\n\r\n\t\tif (this._accuracyGeo) {\r\n\t\t\tthis._geoNrType = AWDParser.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._matrixNrType = AWDParser.FLOAT32;\r\n\r\n\t\tif (this._accuracyMatrix) {\r\n\t\t\tthis._matrixNrType = AWDParser.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._propsNrType = AWDParser.FLOAT32;\r\n\r\n\t\tif (this._accuracyProps) {\r\n\t\t\tthis._propsNrType = AWDParser.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._version[0] + \" - \" + this._version[1]);\r\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\r\n\t\t}\r\n\r\n\t\t// Check file integrity\r\n\t\tbody_len = this._byteData.readUnsignedInt();\r\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\r\n\t\t}\r\n\r\n\t}\r\n\t// Helper - functions\r\n\tprivate getUVForVertexAnimation(meshID:number /*uint*/):Array<Array<number>>\r\n\t{\r\n\t\tif (this._blocks[meshID].data instanceof Mesh)\r\n\t\t\tmeshID = this._blocks[meshID].geoID;\r\n\t\tif (this._blocks[meshID].uvsForVertexAnimation)\r\n\t\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\t\tvar geometry:Geometry = (<Geometry> this._blocks[meshID].data);\r\n\t\tvar geoCnt:number /*int*/ = 0;\r\n\t\tvar ud:Array<number>;\r\n\t\tvar uStride:number /*uint*/;\r\n\t\tvar uOffs:number /*uint*/;\r\n\t\tvar numPoints:number /*uint*/;\r\n\t\tvar i:number /*int*/;\r\n\t\tvar newUvs:Array<number>;\r\n\t\tvar sub_geom:TriangleSubGeometry;\r\n\t\tthis._blocks[meshID].uvsForVertexAnimation = new Array<Array<number>>();\r\n\t\twhile (geoCnt < geometry.subGeometries.length) {\r\n\t\t\tnewUvs = new Array<number>();\r\n\t\t\tsub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\r\n\t\t\tnumPoints = sub_geom.numVertices;\r\n\t\t\tud = sub_geom.uvs;\r\n\t\t\tuStride = sub_geom.getStride(TriangleSubGeometry.UV_DATA);\r\n\t\t\tuOffs = sub_geom.getOffset(TriangleSubGeometry.UV_DATA);\r\n\t\t\tfor (i = 0; i < numPoints; i++) {\r\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 0]);\r\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 1]);\r\n\t\t\t}\r\n\t\t\tthis._blocks[meshID].uvsForVertexAnimation.push(newUvs);\r\n\t\t\tgeoCnt++;\r\n\t\t}\r\n\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\t}\r\n\r\n\tprivate parseVarStr():string\r\n\t{\r\n\r\n\t\tvar len:number = this._newBlockBytes.readUnsignedShort();\r\n\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\t}\r\n\r\n\tprivate getAssetByID(assetID:number, assetTypesToGet:Array<string>):Array<any>\r\n\t{\r\n\t\tvar returnArray:Array<any> = new Array<any>();\r\n\t\tvar typeCnt:number = 0;\r\n\t\tif (assetID > 0) {\r\n\t\t\tif (this._blocks[assetID]) {\r\n\t\t\t\tif (this._blocks[assetID].data) {\r\n\t\t\t\t\twhile (typeCnt < assetTypesToGet.length) {\r\n\r\n\t\t\t\t\t\tvar iasset:IAsset = <IAsset> this._blocks[assetID].data;\r\n\r\n\t\t\t\t\t\tif (iasset.assetType == assetTypesToGet[typeCnt]) {\r\n\t\t\t\t\t\t\t//if the right assetType was found\r\n\t\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == SingleCubeTexture.assetType)) {\r\n\t\t\t\t\t\t\t\tif (this._blocks[assetID].data instanceof SingleCubeTexture) {\r\n\t\t\t\t\t\t\t\t\treturnArray.push(true);\r\n\t\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\r\n\t\t\t\t\t\t\t\t\treturn returnArray;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == Single2DTexture.assetType)) {\r\n\t\t\t\t\t\t\t\tif (this._blocks[assetID].data instanceof Single2DTexture) {\r\n\t\t\t\t\t\t\t\t\treturnArray.push(true);\r\n\t\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\r\n\t\t\t\t\t\t\t\t\treturn returnArray;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturnArray.push(true);\r\n\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\r\n\t\t\t\t\t\t\t\treturn returnArray;\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//if ((assetTypesToGet[typeCnt] == Geometry.assetType) && (IAsset(_blocks[assetID].data).assetType == Mesh.assetType)) {\r\n\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == Geometry.assetType) && (iasset.assetType == Mesh.assetType)) {\r\n\r\n\t\t\t\t\t\t\tvar mesh:Mesh = <Mesh> this._blocks[assetID].data\r\n\r\n\t\t\t\t\t\t\treturnArray.push(true);\r\n\t\t\t\t\t\t\treturnArray.push(mesh.geometry);\r\n\t\t\t\t\t\t\treturn returnArray;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttypeCnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// if the has not returned anything yet, the asset is not found, or the found asset is not the right type.\r\n\t\treturnArray.push(false);\r\n\t\treturnArray.push(this.getDefaultAsset(assetTypesToGet[0]));\r\n\t\treturn returnArray;\r\n\t}\r\n\tprivate getDefaultAsset(assetType:string):IAsset\r\n\t{\r\n\t\tswitch (true) {\r\n\t\t\tcase (assetType == SingleCubeTexture.assetType):\r\n\t\t\t\treturn this.getDefaultCubeTexture();\r\n\t\t\t\tbreak;\r\n\t\t\tcase (assetType == Single2DTexture.assetType):\r\n\t\t\t\treturn DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\tbreak;\r\n\t\t\tcase (assetType == MethodMaterial.assetType):\r\n\t\t\t\treturn DefaultMaterialManager.getDefaultMaterial();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic getDefaultCubeTexture():IAsset\r\n\t{\r\n\t\tif (!this._defaultCubeTexture) {\r\n\t\t\tvar defaultBitmap:BitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\t\tvar bitmapImageCube = new BitmapImageCube(defaultBitmap.width);\r\n\r\n\t\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\t\tbitmapImageCube.draw(i, defaultBitmap);\r\n\r\n\r\n\t\t\tthis._defaultCubeTexture = new SingleCubeTexture(bitmapImageCube);\r\n\t\t\tthis._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t\t}\r\n\r\n\t\treturn <IAsset> this._defaultCubeTexture;\r\n\t}\r\n\r\n\tprivate readNumber(precision:boolean = false):number\r\n\t{\r\n\t\tif (precision)\r\n\t\t\treturn this._newBlockBytes.readDouble();\r\n\t\treturn this._newBlockBytes.readFloat();\r\n\r\n\t}\r\n\r\n\tprivate parseMatrix3D():Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\r\n\t}\r\n\r\n\tprivate parseMatrix32RawData():Array<number>\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n\tprivate parseMatrix43RawData():Array<number>\r\n\t{\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(16);\r\n\r\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[3] = 0.0;\r\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[7] = 0.0;\r\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[11] = 0.0;\r\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[15] = 1.0;\r\n\r\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\r\n\r\n\t\tif (isNaN(mtx_raw[0])) {\r\n\t\t\tmtx_raw[0] = 1;\r\n\t\t\tmtx_raw[1] = 0;\r\n\t\t\tmtx_raw[2] = 0;\r\n\t\t\tmtx_raw[4] = 0;\r\n\t\t\tmtx_raw[5] = 1;\r\n\t\t\tmtx_raw[6] = 0;\r\n\t\t\tmtx_raw[8] = 0;\r\n\t\t\tmtx_raw[9] = 0;\r\n\t\t\tmtx_raw[10] = 1;\r\n\t\t\tmtx_raw[12] = 0;\r\n\t\t\tmtx_raw[13] = 0;\r\n\t\t\tmtx_raw[14] = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n}\r\n\r\nexport = AWDParser;\r\n\r\nclass AWDBlock\r\n{\r\n\tpublic id:number;\r\n\tpublic name:string;\r\n\tpublic data:any;\r\n\tpublic len:any;\r\n\tpublic geoID:number;\r\n\tpublic extras:Object;\r\n\tpublic bytes:ByteArray;\r\n\tpublic errorMessages:Array<string>;\r\n\tpublic uvsForVertexAnimation:Array<Array<number>>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t\tthis.id = null;\r\n\t\tthis.bytes = null;\r\n\t\tthis.errorMessages = null;\r\n\t\tthis.uvsForVertexAnimation = null;\r\n\r\n\t}\r\n\r\n\tpublic addError(errorMsg:string):void\r\n\t{\r\n\t\tif (!this.errorMessages)\r\n\t\t\tthis.errorMessages = new Array<string>();\r\n\r\n\t\tthis.errorMessages.push(errorMsg);\r\n\t}\r\n}\r\n\r\nclass AWDProperties\r\n{\r\n\tpublic set(key:number, value:any):void\r\n\t{\r\n\t\tthis[ key.toString() ] = value;\r\n\t}\r\n\r\n\tpublic get(key:number, fallback:any):any\r\n\t{\r\n\t\tif (this.hasOwnProperty(key.toString())) {\r\n\t\t\treturn this[key.toString()];\r\n\t\t} else {\r\n\t\t\treturn fallback;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass BitFlags\r\n{\r\n\tpublic static FLAG1:number = 1;\r\n\tpublic static FLAG2:number = 2;\r\n\tpublic static FLAG3:number = 4;\r\n\tpublic static FLAG4:number = 8;\r\n\tpublic static FLAG5:number = 16;\r\n\tpublic static FLAG6:number = 32;\r\n\tpublic static FLAG7:number = 64;\r\n\tpublic static FLAG8:number = 128;\r\n\tpublic static FLAG9:number = 256;\r\n\tpublic static FLAG10:number = 512;\r\n\tpublic static FLAG11:number = 1024;\r\n\tpublic static FLAG12:number = 2048;\r\n\tpublic static FLAG13:number = 4096;\r\n\tpublic static FLAG14:number = 8192;\r\n\tpublic static FLAG15:number = 16384;\r\n\tpublic static FLAG16:number = 32768;\r\n\r\n\tpublic static test(flags:number, testFlag:number):boolean\r\n\t{\r\n\t\treturn (flags & testFlag) == testFlag;\r\n\t}\r\n}\r\n",
    "import BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\n\r\n/**\r\n * MD2Parser provides a parser for the MD2 data type.\r\n */\r\nclass MD2Parser extends ParserBase\r\n{\r\n\tpublic static FPS:number /*int*/ = 6;\r\n\r\n\tprivate _clipNodes:Object = new Object();\r\n\tprivate _byteData:ByteArray;\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _parsedHeader:boolean;\r\n\tprivate _parsedUV:boolean;\r\n\tprivate _parsedFaces:boolean;\r\n\tprivate _parsedFrames:boolean;\r\n\r\n\tprivate _ident:number /*uint*/;\r\n\tprivate _version:number /*uint*/;\r\n\tprivate _skinWidth:number /*uint*/;\r\n\tprivate _skinHeight:number /*uint*/;\r\n\t//private _frameSize : number /*uint*/;\r\n\tprivate _numSkins:number /*uint*/;\r\n\tprivate _numVertices:number /*uint*/;\r\n\tprivate _numST:number /*uint*/;\r\n\tprivate _numTris:number /*uint*/;\r\n\t//private _numGlCmds : number /*uint*/;\r\n\tprivate _numFrames:number /*uint*/;\r\n\tprivate _offsetSkins:number /*uint*/;\r\n\tprivate _offsetST:number /*uint*/;\r\n\tprivate _offsetTris:number /*uint*/;\r\n\tprivate _offsetFrames:number /*uint*/;\r\n\t//private _offsetGlCmds : number /*uint*/;\r\n\tprivate _offsetEnd:number /*uint*/;\r\n\r\n\tprivate _uvIndices:Array<number>;\r\n\tprivate _indices:Array<number> /*uint*/;\r\n\tprivate _vertIndices:Array<number>;\r\n\r\n\t// the current subgeom being built\r\n\tprivate _animationSet:VertexAnimationSet = new VertexAnimationSet();\r\n\tprivate _firstSubGeom:TriangleSubGeometry;\r\n\tprivate _uvs:Array<number>;\r\n\tprivate _finalUV:Array<number>;\r\n\r\n\tprivate _materialNames:Array<string>;\r\n\tprivate _textureType:string;\r\n\tprivate _ignoreTexturePath:boolean;\r\n\tprivate _mesh:Mesh;\r\n\tprivate _geometry:Geometry;\r\n\r\n\tprivate materialFinal:boolean = false;\r\n\tprivate geoCreated:boolean = false;\r\n\r\n\t/**\r\n\t * Creates a new MD2Parser object.\r\n\t * @param textureType The extension of the texture (e.g. jpg/png/...)\r\n\t * @param ignoreTexturePath If true, the path of the texture is ignored\r\n\t */\r\n\tconstructor(textureType:string = \"jpg\", ignoreTexturePath:boolean = true)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\t\tthis._textureType = textureType;\r\n\t\tthis._ignoreTexturePath = ignoreTexturePath;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md2\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn (ParserUtils.toString(data, 4) == 'IDP2');\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.assets.length != 1)\r\n\t\t\treturn;\r\n\r\n\t\tvar asset:Single2DTexture = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\r\n\r\n\t\tif (asset) {\r\n\t\t\tvar material:MethodMaterial = new MethodMaterial(asset);\r\n\r\n\t\t\tif (this.materialMode >= 2)\r\n\t\t\t\tmaterial.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\tmaterial.name = this._mesh.material.name;\r\n\t\t\tthis._mesh.material = material;\r\n\t\t\tthis._pFinalizeAsset(material);\r\n\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t}\r\n\t\tthis.materialFinal = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t// apply system default\r\n\t\tif (this.materialMode < 2) {\r\n\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\r\n\t\t} else {\r\n\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t}\r\n\r\n\t\t//add to the content property\r\n\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\tthis.materialFinal = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._byteData = this._pGetByteData();\r\n\t\t\tthis._startedParsing = true;\r\n\r\n\t\t\t// Reset bytearray read position (which may have been\r\n\t\t\t// moved forward by the supportsData() function.)\r\n\t\t\tthis._byteData.position = 0;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\tif (!this._parsedHeader) {\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n\r\n\t\t\t\t// TODO: Create a mesh only when encountered (if it makes sense\r\n\t\t\t\t// for this file format) and return it using this._pFinalizeAsset()\r\n\t\t\t\tthis._geometry = new Geometry();\r\n\t\t\t\tthis._mesh = new Mesh(this._geometry, null);\r\n\t\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\t\t\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//_geometry.animation = new VertexAnimation(2, VertexAnimationMode.ABSOLUTE);\r\n\t\t\t\t//_animator = new VertexAnimator(VertexAnimationState(_mesh.animationState));\r\n\r\n\t\t\t\t// Parse header and decompress body\r\n\t\t\t\tthis.parseHeader();\r\n\t\t\t\tthis.parseMaterialNames();\r\n\t\t\t} else if (!this._parsedUV) {\r\n\t\t\t\tthis.parseUV();\r\n\t\t\t} else if (!this._parsedFaces) {\r\n\t\t\t\tthis.parseFaces();\r\n\t\t\t} else if (!this._parsedFrames) {\r\n\t\t\t\tthis.parseFrames();\r\n\t\t\t} else if ((this.geoCreated) && (this.materialFinal)) {\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t} else if (!this.geoCreated) {\r\n\t\t\t\tthis.geoCreated = true;\r\n\t\t\t\t//create default subgeometry\r\n\t\t\t\tthis._geometry.addSubGeometry(this._firstSubGeom.clone());\r\n\t\t\t\t// Force name to be chosen by this._pFinalizeAsset()\r\n\t\t\t\tthis._mesh.name = \"\";\r\n\t\t\t\tif (this.materialFinal) {\r\n\t\t\t\t\t//add to the content property\r\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\t/**\r\n\t * Reads in all that MD2 Header data that is declared as private variables.\r\n\t * I know its a lot, and it looks ugly, but only way to do it in Flash\r\n\t */\r\n\tprivate parseHeader()\r\n\t{\r\n\t\tthis._ident = this._byteData.readInt();\r\n\t\tthis._version = this._byteData.readInt();\r\n\t\tthis._skinWidth = this._byteData.readInt();\r\n\t\tthis._skinHeight = this._byteData.readInt();\r\n\t\t//skip this._frameSize\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._numSkins = this._byteData.readInt();\r\n\t\tthis._numVertices = this._byteData.readInt();\r\n\t\tthis._numST = this._byteData.readInt();\r\n\t\tthis._numTris = this._byteData.readInt();\r\n\t\t//skip this._numGlCmds\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._numFrames = this._byteData.readInt();\r\n\t\tthis._offsetSkins = this._byteData.readInt();\r\n\t\tthis._offsetST = this._byteData.readInt();\r\n\t\tthis._offsetTris = this._byteData.readInt();\r\n\t\tthis._offsetFrames = this._byteData.readInt();\r\n\t\t//skip this._offsetGlCmds\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._offsetEnd = this._byteData.readInt();\r\n\r\n\t\tthis._parsedHeader = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the file names for the materials.\r\n\t */\r\n\tprivate parseMaterialNames()\r\n\t{\r\n\t\tvar url:string;\r\n\t\tvar name:string;\r\n\t\tvar extIndex:number /*int*/;\r\n\t\tvar slashIndex:number /*int*/;\r\n\t\tthis._materialNames = new Array<string>();\r\n\t\tthis._byteData.position = this._offsetSkins;\r\n\r\n\t\tvar regExp:RegExp = new RegExp(\"[^a-zA-Z0-9\\\\_\\/.]\", \"g\");\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numSkins; ++i) {\r\n\t\t\tname = this._byteData.readUTFBytes(64);\r\n\t\t\tname = name.replace(regExp, \"\");\r\n\t\t\textIndex = name.lastIndexOf(\".\");\r\n\t\t\tif (this._ignoreTexturePath)\r\n\t\t\t\tslashIndex = name.lastIndexOf(\"/\");\r\n\t\t\tif (name.toLowerCase().indexOf(\".jpg\") == -1 && name.toLowerCase().indexOf(\".png\") == -1) {\r\n\t\t\t\tname = name.substring(slashIndex + 1, extIndex);\r\n\t\t\t\turl = name + \".\" + this._textureType;\r\n\t\t\t} else {\r\n\t\t\t\turl = name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._materialNames[i] = name;\r\n\r\n\t\t\t// only support 1 skin TODO: really?\r\n\t\t\tif (this.dependencies.length == 0)\r\n\t\t\t\tthis._pAddDependency(name, new URLRequest(url));\r\n\t\t}\r\n\r\n\t\tif (this._materialNames.length > 0)\r\n\t\t\tthis._mesh.material.name = this._materialNames[0]; else\r\n\t\t\tthis.materialFinal = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the uv data for the mesh.\r\n\t */\r\n\tprivate parseUV()\r\n\t{\r\n\t\tvar j:number /*uint*/ = 0;\r\n\r\n\t\tthis._uvs = new Array<number>(this._numST*2);\r\n\t\tthis._byteData.position = this._offsetST;\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numST; i++) {\r\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinWidth;\r\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinHeight;\r\n\t\t}\r\n\r\n\t\tthis._parsedUV = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses unique indices for the faces.\r\n\t */\r\n\tprivate parseFaces()\r\n\t{\r\n\t\tvar a:number /*uint*/, b:number /*uint*/, c:number /*uint*/, ta:number /*uint*/, tb:number /*uint*/, tc:number /*uint*/;\r\n\t\tvar i:number /*uint*/;\r\n\r\n\t\tthis._vertIndices = new Array<number>();\r\n\t\tthis._uvIndices = new Array<number>();\r\n\t\tthis._indices = new Array<number>() /*uint*/;\r\n\r\n\t\tthis._byteData.position = this._offsetTris;\r\n\r\n\t\tfor (i = 0; i < this._numTris; i++) {\r\n\t\t\t//collect vertex indices\r\n\t\t\ta = this._byteData.readUnsignedShort();\r\n\t\t\tb = this._byteData.readUnsignedShort();\r\n\t\t\tc = this._byteData.readUnsignedShort();\r\n\r\n\t\t\t//collect uv indices\r\n\t\t\tta = this._byteData.readUnsignedShort();\r\n\t\t\ttb = this._byteData.readUnsignedShort();\r\n\t\t\ttc = this._byteData.readUnsignedShort();\r\n\r\n\t\t\tthis.addIndex(a, ta);\r\n\t\t\tthis.addIndex(b, tb);\r\n\t\t\tthis.addIndex(c, tc);\r\n\t\t}\r\n\r\n\t\tvar len:number /*uint*/ = this._uvIndices.length;\r\n\t\tthis._finalUV = new Array<number>(len*2);\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tthis._finalUV[i << 1] = this._uvs[this._uvIndices[i] << 1];\r\n\t\t\tthis._finalUV[(i << 1) + 1] = this._uvs[(this._uvIndices[i] << 1) + 1];\r\n\t\t}\r\n\r\n\t\tthis._parsedFaces = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a face index to the list if it doesn't exist yet, based on vertexIndex and uvIndex, and adds the\r\n\t * corresponding vertex and uv data in the correct location.\r\n\t * @param vertexIndex The original index in the vertex list.\r\n\t * @param uvIndex The original index in the uv list.\r\n\t */\r\n\tprivate addIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/)\r\n\t{\r\n\t\tvar index:number /*int*/ = this.findIndex(vertexIndex, uvIndex);\r\n\r\n\t\tif (index == -1) {\r\n\t\t\tthis._indices.push(this._vertIndices.length);\r\n\t\t\tthis._vertIndices.push(vertexIndex);\r\n\t\t\tthis._uvIndices.push(uvIndex);\r\n\t\t} else\r\n\t\t\tthis._indices.push(index);\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the final index corresponding to the original MD2's vertex and uv indices. Returns -1 if it wasn't added yet.\r\n\t * @param vertexIndex The original index in the vertex list.\r\n\t * @param uvIndex The original index in the uv list.\r\n\t * @return The index of the final mesh corresponding to the original vertex and uv index. -1 if it doesn't exist yet.\r\n\t */\r\n\tprivate findIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/):number /*int*/\r\n\t{\r\n\t\tvar len:number /*uint*/ = this._vertIndices.length;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\r\n\t\t\tif (this._vertIndices[i] == vertexIndex && this._uvIndices[i] == uvIndex)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses all the frame geometries.\r\n\t */\r\n\tprivate parseFrames()\r\n\t{\r\n\t\tvar sx:number, sy:number, sz:number;\r\n\t\tvar tx:number, ty:number, tz:number;\r\n\t\tvar geometry:Geometry;\r\n\t\tvar subGeom:TriangleSubGeometry;\r\n\t\tvar vertLen:number /*uint*/ = this._vertIndices.length;\r\n\t\tvar fvertices:Array<number>;\r\n\t\tvar tvertices:Array<number>;\r\n\t\tvar i:number /*uint*/, j:number /*int*/, k:number /*uint*/;\r\n\t\t//var ch : number /*uint*/;\r\n\t\tvar name:string = \"\";\r\n\t\tvar prevClip:VertexClipNode = null;\r\n\r\n\t\tthis._byteData.position = this._offsetFrames;\r\n\r\n\t\tfor (i = 0; i < this._numFrames; i++) {\r\n\r\n\t\t\ttvertices = new Array<number>();\r\n\t\t\tfvertices = new Array<number>(vertLen*3);\r\n\r\n\t\t\tsx = this._byteData.readFloat();\r\n\t\t\tsy = this._byteData.readFloat();\r\n\t\t\tsz = this._byteData.readFloat();\r\n\r\n\t\t\ttx = this._byteData.readFloat();\r\n\t\t\tty = this._byteData.readFloat();\r\n\t\t\ttz = this._byteData.readFloat();\r\n\r\n\t\t\tname = this.readFrameName();\r\n\r\n\t\t\t// Note, the extra data.position++ in the for loop is there\r\n\t\t\t// to skip over a byte that holds the \"vertex normal index\"\r\n\t\t\tfor (j = 0; j < this._numVertices; j++, this._byteData.position++)\r\n\t\t\t\ttvertices.push(sx*this._byteData.readUnsignedByte() + tx, sy*this._byteData.readUnsignedByte() + ty, sz*this._byteData.readUnsignedByte() + tz);\r\n\r\n\t\t\tk = 0;\r\n\t\t\tfor (j = 0; j < vertLen; j++) {\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3];\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 2];\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 1];\r\n\t\t\t}\r\n\r\n\t\t\tsubGeom = new TriangleSubGeometry(true);\r\n\r\n\t\t\tif (this._firstSubGeom == null)\r\n\t\t\t\tthis._firstSubGeom = subGeom;\r\n\r\n\t\t\tgeometry = new Geometry();\r\n\t\t\tgeometry.addSubGeometry(subGeom);\r\n\r\n\t\t\tsubGeom.updateIndices(this._indices);\r\n\t\t\tsubGeom.updatePositions(fvertices);\r\n\t\t\tsubGeom.updateUVs(this._finalUV);\r\n\t\t\tsubGeom.vertexNormals;\r\n\t\t\tsubGeom.vertexTangents;\r\n\t\t\tsubGeom.autoDeriveNormals = false;\r\n\t\t\tsubGeom.autoDeriveTangents = false;\r\n\r\n\t\t\tvar clip:VertexClipNode = this._clipNodes[name];\r\n\r\n\t\t\tif (!clip) {\r\n\t\t\t\t// If another sequence was parsed before this one, starting\r\n\t\t\t\t// a new state means the previous one is complete and can\r\n\t\t\t\t// hence be finalized.\r\n\t\t\t\tif (prevClip) {\r\n\t\t\t\t\tthis._pFinalizeAsset(prevClip);\r\n\t\t\t\t\tthis._animationSet.addAnimation(prevClip);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tclip = new VertexClipNode();\r\n\t\t\t\tclip.name = name;\r\n\t\t\t\tclip.stitchFinalFrame = true;\r\n\r\n\t\t\t\tthis._clipNodes[name] = clip;\r\n\r\n\t\t\t\tprevClip = clip;\r\n\t\t\t}\r\n\t\t\tclip.addFrame(geometry, 1000/MD2Parser.FPS);\r\n\t\t}\r\n\r\n\t\t// Finalize the last state\r\n\t\tif (prevClip) {\r\n\t\t\tthis._pFinalizeAsset(prevClip);\r\n\t\t\tthis._animationSet.addAnimation(prevClip);\r\n\t\t}\r\n\r\n\t\t// Force this._pFinalizeAsset() to decide name\r\n\t\tthis._pFinalizeAsset(this._animationSet);\r\n\r\n\t\tthis._parsedFrames = true;\r\n\t}\r\n\r\n\tprivate readFrameName():string\r\n\t{\r\n\t\tvar name:string = \"\";\r\n\t\tvar k:number /*uint*/ = 0;\r\n\t\tfor (var j:number /*uint*/ = 0; j < 16; j++) {\r\n\t\t\tvar ch:number /*uint*/ = this._byteData.readUnsignedByte();\r\n\r\n\t\t\tif (Math.floor(ch) > 0x39 && Math.floor(ch) <= 0x7A && k == 0)\r\n\t\t\t\tname += String.fromCharCode(ch);\r\n\r\n\t\t\tif (Math.floor(ch) >= 0x30 && Math.floor(ch) <= 0x39)\r\n\t\t\t\tk++;\r\n\t\t}\r\n\t\treturn name;\r\n\t}\r\n}\r\n\r\nexport = MD2Parser;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\n\r\n/**\r\n * MD5AnimParser provides a parser for the md5anim data type, providing an animation sequence for the md5 format.\r\n *\r\n * todo: optimize\r\n */\r\nclass MD5AnimParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\r\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\r\n\tpublic static NUM_FRAMES_TOKEN:string = \"numFrames\";\r\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\r\n\tpublic static FRAME_RATE_TOKEN:string = \"frameRate\";\r\n\tpublic static NUM_ANIMATED_COMPONENTS_TOKEN:string = \"numAnimatedComponents\";\r\n\r\n\tpublic static HIERARCHY_TOKEN:string = \"hierarchy\";\r\n\tpublic static BOUNDS_TOKEN:string = \"bounds\";\r\n\tpublic static BASE_FRAME_TOKEN:string = \"baseframe\";\r\n\tpublic static FRAME_TOKEN:string = \"frame\";\r\n\r\n\tpublic static COMMENT_TOKEN:string = \"//\";\r\n\r\n\tprivate _parseIndex:number /*int*/ = 0;\r\n\tprivate _reachedEOF:boolean;\r\n\tprivate _line:number /*int*/ = 0;\r\n\tprivate _charLineIndex:number /*int*/ = 0;\r\n\tprivate _version:number /*int*/;\r\n\tprivate _frameRate:number /*int*/;\r\n\tprivate _numFrames:number /*int*/;\r\n\tprivate _numJoints:number /*int*/;\r\n\tprivate _numAnimatedComponents:number /*int*/;\r\n\r\n\tprivate _hierarchy:Array<HierarchyData>;\r\n\tprivate _bounds:Array<BoundsData>;\r\n\tprivate _frameData:Array<FrameData>;\r\n\tprivate _baseFrameData:Array<BaseFrameData>;\r\n\r\n\tprivate _rotationQuat:Quaternion;\r\n\tprivate _clip:SkeletonClipNode;\r\n\r\n\t/**\r\n\t * Creates a new MD5AnimParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._rotationQuat = new Quaternion();\r\n\t\tvar t1:Quaternion = new Quaternion();\r\n\t\tvar t2:Quaternion = new Quaternion();\r\n\r\n\t\tt1.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\r\n\t\tt2.fromAxisAngle(Vector3D.Y_AXIS, -Math.PI*.5);\r\n\r\n\t\tthis._rotationQuat.multiply(t2, t1);\r\n\r\n\t\tif (additionalRotationAxis) {\r\n\t\t\tthis._rotationQuat.multiply(t2, t1);\r\n\t\t\tt1.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\r\n\t\t\tthis._rotationQuat.multiply(t1, this._rotationQuat);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md5anim\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar token:string;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\ttoken = this.getNextToken();\r\n\t\t\tswitch (token) {\r\n\t\t\t\tcase MD5AnimParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"\":\r\n\t\t\t\t\t// can occur at the end of a file\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.VERSION_TOKEN:\r\n\t\t\t\t\tthis._version = this.getNextInt();\r\n\t\t\t\t\tif (this._version != 10)\r\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.COMMAND_LINE_TOKEN:\r\n\t\t\t\t\tthis.parseCMD();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_FRAMES_TOKEN:\r\n\t\t\t\t\tthis._numFrames = this.getNextInt();\r\n\t\t\t\t\tthis._bounds = new Array<BoundsData>();\r\n\t\t\t\t\tthis._frameData = new Array<FrameData>();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_JOINTS_TOKEN:\r\n\t\t\t\t\tthis._numJoints = this.getNextInt();\r\n\t\t\t\t\tthis._hierarchy = new Array<HierarchyData>(this._numJoints);\r\n\t\t\t\t\tthis._baseFrameData = new Array<BaseFrameData>(this._numJoints);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.FRAME_RATE_TOKEN:\r\n\t\t\t\t\tthis._frameRate = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_ANIMATED_COMPONENTS_TOKEN:\r\n\t\t\t\t\tthis._numAnimatedComponents = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.HIERARCHY_TOKEN:\r\n\t\t\t\t\tthis.parseHierarchy();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.BOUNDS_TOKEN:\r\n\t\t\t\t\tthis.parseBounds();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.BASE_FRAME_TOKEN:\r\n\t\t\t\t\tthis.parseBaseFrame();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.FRAME_TOKEN:\r\n\t\t\t\t\tthis.parseFrame();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (!this._reachedEOF)\r\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._reachedEOF) {\r\n\t\t\t\tthis._clip = new SkeletonClipNode();\r\n\t\t\t\tthis.translateClip();\r\n\t\t\t\tthis._pFinalizeAsset(this._clip);\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts all key frame data to an SkinnedAnimationSequence.\r\n\t */\r\n\tprivate translateClip():void\r\n\t{\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numFrames; ++i)\r\n\t\t\tthis._clip.addFrame(this.translatePose(this._frameData[i]), 1000/this._frameRate);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a single key frame data to a SkeletonPose.\r\n\t * @param frameData The actual frame data.\r\n\t * @return A SkeletonPose containing the frame data's pose.\r\n\t */\r\n\tprivate translatePose(frameData:FrameData):SkeletonPose\r\n\t{\r\n\t\tvar hierarchy:HierarchyData;\r\n\t\tvar pose:JointPose;\r\n\t\tvar base:BaseFrameData;\r\n\t\tvar flags:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar translate:Vector3D = new Vector3D();\r\n\t\tvar orientation:Quaternion = new Quaternion();\r\n\t\tvar components:Array<number> = frameData.components;\r\n\t\tvar skelPose:SkeletonPose = new SkeletonPose();\r\n\t\tvar jointPoses:Array<JointPose> = skelPose.jointPoses;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numJoints; ++i) {\r\n\t\t\tj = 0;\r\n\t\t\tpose = new JointPose();\r\n\t\t\thierarchy = this._hierarchy[i];\r\n\t\t\tbase = this._baseFrameData[i];\r\n\t\t\tflags = hierarchy.flags;\r\n\t\t\ttranslate.x = base.position.x;\r\n\t\t\ttranslate.y = base.position.y;\r\n\t\t\ttranslate.z = base.position.z;\r\n\t\t\torientation.x = base.orientation.x;\r\n\t\t\torientation.y = base.orientation.y;\r\n\t\t\torientation.z = base.orientation.z;\r\n\r\n\t\t\tif (flags & 1)\r\n\t\t\t\ttranslate.x = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 2)\r\n\t\t\t\ttranslate.y = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 4)\r\n\t\t\t\ttranslate.z = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 8)\r\n\t\t\t\torientation.x = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 16)\r\n\t\t\t\torientation.y = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 32)\r\n\t\t\t\torientation.z = components[hierarchy.startIndex + (j++)];\r\n\r\n\t\t\tvar w:number = 1 - orientation.x*orientation.x - orientation.y*orientation.y - orientation.z*orientation.z;\r\n\t\t\torientation.w = w < 0? 0 : -Math.sqrt(w);\r\n\r\n\t\t\tif (hierarchy.parentIndex < 0) {\r\n\t\t\t\tpose.orientation.multiply(this._rotationQuat, orientation);\r\n\t\t\t\tpose.translation = this._rotationQuat.rotatePoint(translate);\r\n\t\t\t} else {\r\n\t\t\t\tpose.orientation.copyFrom(orientation);\r\n\t\t\t\tpose.translation.x = translate.x;\r\n\t\t\t\tpose.translation.y = translate.y;\r\n\t\t\t\tpose.translation.z = translate.z;\r\n\t\t\t}\r\n\t\t\tpose.orientation.y = -pose.orientation.y;\r\n\t\t\tpose.orientation.z = -pose.orientation.z;\r\n\t\t\tpose.translation.x = -pose.translation.x;\r\n\r\n\t\t\tjointPoses[i] = pose;\r\n\t\t}\r\n\r\n\t\treturn skelPose;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the skeleton's hierarchy data.\r\n\t */\r\n\tprivate parseHierarchy():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:HierarchyData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new HierarchyData();\r\n\t\t\tdata.name = this.parseLiteralstring();\r\n\t\t\tdata.parentIndex = this.getNextInt();\r\n\t\t\tdata.flags = this.getNextInt();\r\n\t\t\tdata.startIndex = this.getNextInt();\r\n\t\t\tthis._hierarchy[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses frame bounds.\r\n\t */\r\n\tprivate parseBounds():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:BoundsData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new BoundsData();\r\n\t\t\tdata.min = this.parseVector3D();\r\n\t\t\tdata.max = this.parseVector3D();\r\n\t\t\tthis._bounds[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the base frame.\r\n\t */\r\n\tprivate parseBaseFrame():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:BaseFrameData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new BaseFrameData();\r\n\t\t\tdata.position = this.parseVector3D();\r\n\t\t\tdata.orientation = this.parseQuaternion();\r\n\t\t\tthis._baseFrameData[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a single frame.\r\n\t */\r\n\tprivate parseFrame():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:FrameData;\r\n\t\tvar token:string;\r\n\t\tvar frameIndex:number /*int*/;\r\n\r\n\t\tframeIndex = this.getNextInt();\r\n\r\n\t\ttoken = this.getNextToken();\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new FrameData();\r\n\t\t\tdata.components = new Array<number>(this._numAnimatedComponents);\r\n\r\n\t\t\tfor (var i:number /*int*/ = 0; i < this._numAnimatedComponents; ++i)\r\n\t\t\t\tdata.components[i] = this.getNextNumber();\r\n\r\n\t\t\tthis._frameData[frameIndex] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Puts back the last read character into the data stream.\r\n\t */\r\n\tprivate putBack():void\r\n\t{\r\n\t\tthis._parseIndex--;\r\n\t\tthis._charLineIndex--;\r\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the next token in the data stream.\r\n\t */\r\n\tprivate getNextToken():string\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar token:string = \"\";\r\n\r\n\t\twhile (!this._reachedEOF) {\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\r\n\t\t\t\tif (token != MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.skipWhiteSpace();\r\n\t\t\t\tif (token != \"\")\r\n\t\t\t\t\treturn token;\r\n\t\t\t} else\r\n\t\t\t\ttoken += ch;\r\n\r\n\t\t\tif (token == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\treturn token;\r\n\t\t}\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Skips all whitespace in the data stream.\r\n\t */\r\n\tprivate skipWhiteSpace():void\r\n\t{\r\n\t\tvar ch:string;\r\n\r\n\t\tdo\r\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\r\n\r\n\t\tthis.putBack();\r\n\t}\r\n\r\n\t/**\r\n\t * Skips to the next line.\r\n\t */\r\n\tprivate ignoreLine():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\r\n\t\t\tch = this.getNextChar();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next single character in the data stream.\r\n\t */\r\n\tprivate getNextChar():string\r\n\t{\r\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\r\n\r\n\t\tif (ch == \"\\n\") {\r\n\t\t\t++this._line;\r\n\t\t\tthis._charLineIndex = 0;\r\n\t\t} else if (ch != \"\\r\")\r\n\t\t\t++this._charLineIndex;\r\n\r\n\t\tif (this._parseIndex == this._textData.length)\r\n\t\t\tthis._reachedEOF = true;\r\n\r\n\t\treturn ch;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next integer in the data stream.\r\n\t */\r\n\tprivate getNextInt():number /*int*/\r\n\t{\r\n\t\tvar i:number = parseInt(this.getNextToken());\r\n\t\tif (isNaN(i))\r\n\t\t\tthis.sendParseError(\"int type\");\r\n\t\treturn i;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next floating point number in the data stream.\r\n\t */\r\n\tprivate getNextNumber():number\r\n\t{\r\n\t\tvar f:number = parseFloat(this.getNextToken());\r\n\t\tif (isNaN(f))\r\n\t\t\tthis.sendParseError(\"float type\");\r\n\t\treturn f;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next 3d vector in the data stream.\r\n\t */\r\n\tprivate parseVector3D():Vector3D\r\n\t{\r\n\t\tvar vec:Vector3D = new Vector3D();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvec.x = this.getNextNumber();\r\n\t\tvec.y = this.getNextNumber();\r\n\t\tvec.z = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next quaternion in the data stream.\r\n\t */\r\n\tprivate parseQuaternion():Quaternion\r\n\t{\r\n\t\tvar quat:Quaternion = new Quaternion();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tquat.x = this.getNextNumber();\r\n\t\tquat.y = this.getNextNumber();\r\n\t\tquat.z = this.getNextNumber();\r\n\r\n\t\t// quat supposed to be unit length\r\n\t\tvar t:number = 1 - (quat.x*quat.x) - (quat.y*quat.y) - (quat.z*quat.z);\r\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn quat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the command line data.\r\n\t */\r\n\tprivate parseCMD():void\r\n\t{\r\n\t\t// just ignore the command line property\r\n\t\tthis.parseLiteralstring();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\r\n\t * by double quotes.\r\n\t */\r\n\tprivate parseLiteralstring():string\r\n\t{\r\n\t\tthis.skipWhiteSpace();\r\n\r\n\t\tvar ch:string = this.getNextChar();\r\n\t\tvar str:string = \"\";\r\n\r\n\t\tif (ch != \"\\\"\")\r\n\t\t\tthis.sendParseError(\"\\\"\");\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch != \"\\\"\")\r\n\t\t\t\tstr += ch;\r\n\t\t} while (ch != \"\\\"\");\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an end-of-file error when a premature end of file was encountered.\r\n\t */\r\n\tprivate sendEOFError():void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected end of file\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unexpected token was encountered.\r\n\t * @param expected The token type that was actually expected.\r\n\t */\r\n\tprivate sendParseError(expected:string):void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unknown keyword was encountered.\r\n\t */\r\n\tprivate sendUnknownKeywordError():void\r\n\t{\r\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\r\n\t}\r\n}\r\n\r\nexport = MD5AnimParser;\r\n\r\n\r\n/**\r\n *\r\n */\r\nclass BaseFrameData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic position:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientation:Quaternion;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass BoundsData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic min:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic max:Vector3D;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass FrameData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic index:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic components:Array<number>;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass HierarchyData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic name:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic parentIndex:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic flags:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic startIndex:number /*int*/;\r\n}",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\n\r\n// todo: create animation system, parse skeleton\r\n\r\n/**\r\n * MD5MeshParser provides a parser for the md5mesh data type, providing the geometry of the md5 format.\r\n *\r\n * todo: optimize\r\n */\r\nclass MD5MeshParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\r\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\r\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\r\n\tpublic static NUM_MESHES_TOKEN:string = \"numMeshes\";\r\n\tpublic static COMMENT_TOKEN:string = \"//\";\r\n\tpublic static JOINTS_TOKEN:string = \"joints\";\r\n\tpublic static MESH_TOKEN:string = \"mesh\";\r\n\r\n\tpublic static MESH_SHADER_TOKEN:string = \"shader\";\r\n\tpublic static MESH_NUM_VERTS_TOKEN:string = \"numverts\";\r\n\tpublic static MESH_VERT_TOKEN:string = \"vert\";\r\n\tpublic static MESH_NUM_TRIS_TOKEN:string = \"numtris\";\r\n\tpublic static MESH_TRI_TOKEN:string = \"tri\";\r\n\tpublic static MESH_NUM_WEIGHTS_TOKEN:string = \"numweights\";\r\n\tpublic static MESH_WEIGHT_TOKEN:string = \"weight\";\r\n\r\n\tprivate _parseIndex:number /*int*/ = 0;\r\n\tprivate _reachedEOF:boolean;\r\n\tprivate _line:number /*int*/ = 0;\r\n\tprivate _charLineIndex:number /*int*/ = 0;\r\n\tprivate _version:number /*int*/;\r\n\tprivate _numJoints:number /*int*/;\r\n\tprivate _numMeshes:number /*int*/;\r\n\r\n\tprivate _mesh:Mesh;\r\n\tprivate _shaders:Array<string>;\r\n\r\n\tprivate _maxJointCount:number /*int*/;\r\n\tprivate _meshData:Array<MeshData>;\r\n\tprivate _bindPoses:Array<Matrix3D>;\r\n\tprivate _geometry:Geometry;\r\n\r\n\tprivate _skeleton:Skeleton;\r\n\tprivate _animationSet:SkeletonAnimationSet;\r\n\r\n\tprivate _rotationQuat:Quaternion;\r\n\r\n\t/**\r\n\t * Creates a new MD5MeshParser object.\r\n\t */\r\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._rotationQuat = new Quaternion();\r\n\r\n\t\tthis._rotationQuat.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\r\n\r\n\t\tif (additionalRotationAxis) {\r\n\t\t\tvar quat:Quaternion = new Quaternion();\r\n\t\t\tquat.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\r\n\t\t\tthis._rotationQuat.multiply(this._rotationQuat, quat);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md5mesh\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar token:string;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\ttoken = this.getNextToken();\r\n\t\t\tswitch (token) {\r\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.VERSION_TOKEN:\r\n\t\t\t\t\tthis._version = this.getNextInt();\r\n\t\t\t\t\tif (this._version != 10)\r\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.COMMAND_LINE_TOKEN:\r\n\t\t\t\t\tthis.parseCMD();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.NUM_JOINTS_TOKEN:\r\n\t\t\t\t\tthis._numJoints = this.getNextInt();\r\n\t\t\t\t\tthis._bindPoses = new Array<Matrix3D>(this._numJoints);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.NUM_MESHES_TOKEN:\r\n\t\t\t\t\tthis._numMeshes = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.JOINTS_TOKEN:\r\n\t\t\t\t\tthis.parseJoints();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_TOKEN:\r\n\t\t\t\t\tthis.parseMesh();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (!this._reachedEOF)\r\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._reachedEOF) {\r\n\t\t\t\tthis.calculateMaxJointCount();\r\n\t\t\t\tthis._animationSet = new SkeletonAnimationSet(this._maxJointCount);\r\n\r\n\t\t\t\tthis._mesh = new Mesh(new Geometry(), null);\r\n\t\t\t\tthis._geometry = this._mesh.geometry;\r\n\r\n\t\t\t\tfor (var i:number /*int*/ = 0; i < this._meshData.length; ++i)\r\n\t\t\t\t\tthis._geometry.addSubGeometry(this.translateGeom(this._meshData[i].vertexData, this._meshData[i].weightData, this._meshData[i].indices));\r\n\r\n\t\t\t\t//_geometry.animation = _animation;\r\n\t\t\t\t//\t\t\t\t\t_mesh.animationController = _animationController;\r\n\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(this._geometry);\r\n\t\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t\t\tthis._pFinalizeAsset(this._skeleton);\r\n\t\t\t\tthis._pFinalizeAsset(this._animationSet);\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate calculateMaxJointCount():void\r\n\t{\r\n\t\tthis._maxJointCount = 0;\r\n\r\n\t\tvar numMeshData:number /*int*/ = this._meshData.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < numMeshData; ++i) {\r\n\t\t\tvar meshData:MeshData = this._meshData[i];\r\n\t\t\tvar vertexData:Array<VertexData> = meshData.vertexData;\r\n\t\t\tvar numVerts:number /*int*/ = vertexData.length;\r\n\r\n\t\t\tfor (var j:number /*int*/ = 0; j < numVerts; ++j) {\r\n\t\t\t\tvar zeroWeights:number /*int*/ = this.countZeroWeightJoints(vertexData[j], meshData.weightData);\r\n\t\t\t\tvar totalJoints:number /*int*/ = vertexData[j].countWeight - zeroWeights;\r\n\t\t\t\tif (totalJoints > this._maxJointCount)\r\n\t\t\t\t\tthis._maxJointCount = totalJoints;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate countZeroWeightJoints(vertex:VertexData, weights:Array<JointData>):number /*int*/\r\n\t{\r\n\t\tvar start:number /*int*/ = vertex.startWeight;\r\n\t\tvar end:number /*int*/ = vertex.startWeight + vertex.countWeight;\r\n\t\tvar count:number /*int*/ = 0;\r\n\t\tvar weight:number;\r\n\r\n\t\tfor (var i:number /*int*/ = start; i < end; ++i) {\r\n\t\t\tweight = weights[i].bias;\r\n\t\t\tif (weight == 0)\r\n\t\t\t\t++count;\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the skeleton's joints.\r\n\t */\r\n\tprivate parseJoints():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar joint:SkeletonJoint;\r\n\t\tvar pos:Vector3D;\r\n\t\tvar quat:Quaternion;\r\n\t\tvar i:number /*int*/ = 0;\r\n\t\tvar token:string = this.getNextToken();\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tthis._skeleton = new Skeleton();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tjoint = new SkeletonJoint();\r\n\t\t\tjoint.name = this.parseLiteralstring();\r\n\t\t\tjoint.parentIndex = this.getNextInt();\r\n\t\t\tpos = this.parseVector3D();\r\n\t\t\tpos = this._rotationQuat.rotatePoint(pos);\r\n\t\t\tquat = this.parseQuaternion();\r\n\r\n\t\t\t// todo: check if this is correct, or maybe we want to actually store it as quats?\r\n\t\t\tthis._bindPoses[i] = quat.toMatrix3D();\r\n\t\t\tthis._bindPoses[i].appendTranslation(pos.x, pos.y, pos.z);\r\n\t\t\tvar inv:Matrix3D = this._bindPoses[i].clone();\r\n\t\t\tinv.invert();\r\n\t\t\tjoint.inverseBindPose = inv.rawData;\r\n\r\n\t\t\tthis._skeleton.joints[i++] = joint;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Puts back the last read character into the data stream.\r\n\t */\r\n\tprivate putBack():void\r\n\t{\r\n\t\tthis._parseIndex--;\r\n\t\tthis._charLineIndex--;\r\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the mesh geometry.\r\n\t */\r\n\tprivate parseMesh():void\r\n\t{\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar ch:string;\r\n\t\tvar vertexData:Array<VertexData>;\r\n\t\tvar weights:Array<JointData>;\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tif (this._shaders == null)\r\n\t\t\tthis._shaders = new Array<string>();\r\n\r\n\t\twhile (ch != \"}\") {\r\n\t\t\tch = this.getNextToken();\r\n\t\t\tswitch (ch) {\r\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_SHADER_TOKEN:\r\n\t\t\t\t\tthis._shaders.push(this.parseLiteralstring());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_VERTS_TOKEN:\r\n\t\t\t\t\tvertexData = new Array<VertexData>(this.getNextInt());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_TRIS_TOKEN:\r\n\t\t\t\t\tindices = new Array<number>(this.getNextInt()*3) /*uint*/;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_WEIGHTS_TOKEN:\r\n\t\t\t\t\tweights = new Array<JointData>(this.getNextInt());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_VERT_TOKEN:\r\n\t\t\t\t\tthis.parseVertex(vertexData);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_TRI_TOKEN:\r\n\t\t\t\t\tthis.parseTri(indices);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_WEIGHT_TOKEN:\r\n\t\t\t\t\tthis.parseJoint(weights);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._meshData == null)\r\n\t\t\tthis._meshData = new Array<MeshData>();\r\n\r\n\t\tvar i:number /*uint*/ = this._meshData.length;\r\n\t\tthis._meshData[i] = new MeshData();\r\n\t\tthis._meshData[i].vertexData = vertexData;\r\n\t\tthis._meshData[i].weightData = weights;\r\n\t\tthis._meshData[i].indices = indices;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the mesh data to a SkinnedSub instance.\r\n\t * @param vertexData The mesh's vertices.\r\n\t * @param weights The joint weights per vertex.\r\n\t * @param indices The indices for the faces.\r\n\t * @return A SubGeometry instance containing all geometrical data for the current mesh.\r\n\t */\r\n\tprivate translateGeom(vertexData:Array<VertexData>, weights:Array<JointData>, indices:Array<number> /*uint*/):TriangleSubGeometry\r\n\t{\r\n\t\tvar len:number /*int*/ = vertexData.length;\r\n\t\tvar v1:number /*int*/, v2:number /*int*/, v3:number /*int*/;\r\n\t\tvar vertex:VertexData;\r\n\t\tvar weight:JointData;\r\n\t\tvar bindPose:Matrix3D;\r\n\t\tvar pos:Vector3D;\r\n\t\tvar subGeom:TriangleSubGeometry = new TriangleSubGeometry(true);\r\n\t\tvar uvs:Array<number> = new Array<number>(len*2);\r\n\t\tvar vertices:Array<number> = new Array<number>(len*3);\r\n\t\tvar jointIndices:Array<number> = new Array<number>(len*this._maxJointCount);\r\n\t\tvar jointWeights:Array<number> = new Array<number>(len*this._maxJointCount);\r\n\t\tvar l:number /*int*/ = 0;\r\n\t\tvar nonZeroWeights:number /*int*/;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i) {\r\n\t\t\tvertex = vertexData[i];\r\n\t\t\tv1 = vertex.index*3;\r\n\t\t\tv2 = v1 + 1;\r\n\t\t\tv3 = v1 + 2;\r\n\t\t\tvertices[v1] = vertices[v2] = vertices[v3] = 0;\r\n\r\n\t\t\tnonZeroWeights = 0;\r\n\t\t\tfor (var j:number /*int*/ = 0; j < vertex.countWeight; ++j) {\r\n\t\t\t\tweight = weights[vertex.startWeight + j];\r\n\t\t\t\tif (weight.bias > 0) {\r\n\t\t\t\t\tbindPose = this._bindPoses[weight.joint];\r\n\t\t\t\t\tpos = bindPose.transformVector(weight.pos);\r\n\t\t\t\t\tvertices[v1] += pos.x*weight.bias;\r\n\t\t\t\t\tvertices[v2] += pos.y*weight.bias;\r\n\t\t\t\t\tvertices[v3] += pos.z*weight.bias;\r\n\r\n\t\t\t\t\t// indices need to be multiplied by 3 (amount of matrix registers)\r\n\t\t\t\t\tjointIndices[l] = weight.joint*3;\r\n\t\t\t\t\tjointWeights[l++] = weight.bias;\r\n\t\t\t\t\t++nonZeroWeights;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = nonZeroWeights; j < this._maxJointCount; ++j) {\r\n\t\t\t\tjointIndices[l] = 0;\r\n\t\t\t\tjointWeights[l++] = 0;\r\n\t\t\t}\r\n\r\n\t\t\tv1 = vertex.index << 1;\r\n\t\t\tuvs[v1++] = vertex.s;\r\n\t\t\tuvs[v1] = vertex.t;\r\n\t\t}\r\n\r\n\t\tsubGeom.jointsPerVertex = this._maxJointCount;\r\n\t\tsubGeom.updateIndices(indices);\r\n\t\tsubGeom.updatePositions(vertices);\r\n\t\tsubGeom.updateUVs(uvs);\r\n\t\tsubGeom.updateJointIndices(jointIndices);\r\n\t\tsubGeom.updateJointWeights(jointWeights);\r\n\t\t// cause explicit updates\r\n\t\tsubGeom.vertexNormals;\r\n\t\tsubGeom.vertexTangents;\r\n\t\t// turn auto updates off because they may be animated and set explicitly\r\n\t\tsubGeom.autoDeriveTangents = false;\r\n\t\tsubGeom.autoDeriveNormals = false;\r\n\r\n\t\treturn subGeom;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve the next triplet of vertex indices that form a face.\r\n\t * @param indices The index list in which to store the read data.\r\n\t */\r\n\tprivate parseTri(indices:Array<number> /*uint*/):void\r\n\t{\r\n\t\tvar index:number /*int*/ = this.getNextInt()*3;\r\n\t\tindices[index] = this.getNextInt();\r\n\t\tindices[index + 1] = this.getNextInt();\r\n\t\tindices[index + 2] = this.getNextInt();\r\n\t}\r\n\r\n\t/**\r\n\t * Reads a new joint data set for a single joint.\r\n\t * @param weights the target list to contain the weight data.\r\n\t */\r\n\tprivate parseJoint(weights:Array<JointData>):void\r\n\t{\r\n\t\tvar weight:JointData = new JointData();\r\n\t\tweight.index = this.getNextInt();\r\n\t\tweight.joint = this.getNextInt();\r\n\t\tweight.bias = this.getNextNumber();\r\n\t\tweight.pos = this.parseVector3D();\r\n\t\tweights[weight.index] = weight;\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the data for a single vertex.\r\n\t * @param vertexData The list to contain the vertex data.\r\n\t */\r\n\tprivate parseVertex(vertexData:Array<VertexData>):void\r\n\t{\r\n\t\tvar vertex:VertexData = new VertexData();\r\n\t\tvertex.index = this.getNextInt();\r\n\t\tthis.parseUV(vertex);\r\n\t\tvertex.startWeight = this.getNextInt();\r\n\t\tvertex.countWeight = this.getNextInt();\r\n\t\t//\t\t\tif (vertex.countWeight > _maxJointCount) _maxJointCount = vertex.countWeight;\r\n\t\tvertexData[vertex.index] = vertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next uv coordinate.\r\n\t * @param vertexData The vertexData to contain the UV coordinates.\r\n\t */\r\n\tprivate parseUV(vertexData:VertexData):void\r\n\t{\r\n\t\tvar ch:string = this.getNextToken();\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvertexData.s = this.getNextNumber();\r\n\t\tvertexData.t = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the next token in the data stream.\r\n\t */\r\n\tprivate getNextToken():string\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar token:string = \"\";\r\n\r\n\t\twhile (!this._reachedEOF) {\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\r\n\t\t\t\tif (token != MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.skipWhiteSpace();\r\n\t\t\t\tif (token != \"\")\r\n\t\t\t\t\treturn token;\r\n\t\t\t} else\r\n\t\t\t\ttoken += ch;\r\n\r\n\t\t\tif (token == MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\treturn token;\r\n\t\t}\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Skips all whitespace in the data stream.\r\n\t */\r\n\tprivate skipWhiteSpace():void\r\n\t{\r\n\t\tvar ch:string;\r\n\r\n\t\tdo\r\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\r\n\r\n\t\tthis.putBack();\r\n\t}\r\n\r\n\t/**\r\n\t * Skips to the next line.\r\n\t */\r\n\tprivate ignoreLine():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\r\n\t\t\tch = this.getNextChar();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next single character in the data stream.\r\n\t */\r\n\tprivate getNextChar():string\r\n\t{\r\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\r\n\r\n\t\tif (ch == \"\\n\") {\r\n\t\t\t++this._line;\r\n\t\t\tthis._charLineIndex = 0;\r\n\t\t} else if (ch != \"\\r\")\r\n\t\t\t++this._charLineIndex;\r\n\r\n\t\tif (this._parseIndex >= this._textData.length)\r\n\t\t\tthis._reachedEOF = true;\r\n\r\n\t\treturn ch;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next integer in the data stream.\r\n\t */\r\n\tprivate getNextInt():number /*int*/\r\n\t{\r\n\t\tvar i:number = parseInt(this.getNextToken());\r\n\t\tif (isNaN(i))\r\n\t\t\tthis.sendParseError(\"int type\");\r\n\t\treturn i;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next floating point number in the data stream.\r\n\t */\r\n\tprivate getNextNumber():number\r\n\t{\r\n\t\tvar f:number = parseFloat(this.getNextToken());\r\n\t\tif (isNaN(f))\r\n\t\t\tthis.sendParseError(\"float type\");\r\n\t\treturn f;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next 3d vector in the data stream.\r\n\t */\r\n\tprivate parseVector3D():Vector3D\r\n\t{\r\n\t\tvar vec:Vector3D = new Vector3D();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvec.x = -this.getNextNumber();\r\n\t\tvec.y = this.getNextNumber();\r\n\t\tvec.z = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next quaternion in the data stream.\r\n\t */\r\n\tprivate parseQuaternion():Quaternion\r\n\t{\r\n\t\tvar quat:Quaternion = new Quaternion();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tquat.x = this.getNextNumber();\r\n\t\tquat.y = -this.getNextNumber();\r\n\t\tquat.z = -this.getNextNumber();\r\n\r\n\t\t// quat supposed to be unit length\r\n\t\tvar t:number = 1 - quat.x*quat.x - quat.y*quat.y - quat.z*quat.z;\r\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\tvar rotQuat:Quaternion = new Quaternion();\r\n\t\trotQuat.multiply(this._rotationQuat, quat);\r\n\t\treturn rotQuat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the command line data.\r\n\t */\r\n\tprivate parseCMD():void\r\n\t{\r\n\t\t// just ignore the command line property\r\n\t\tthis.parseLiteralstring();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\r\n\t * by double quotes.\r\n\t */\r\n\tprivate parseLiteralstring():string\r\n\t{\r\n\t\tthis.skipWhiteSpace();\r\n\r\n\t\tvar ch:string = this.getNextChar();\r\n\t\tvar str:string = \"\";\r\n\r\n\t\tif (ch != \"\\\"\")\r\n\t\t\tthis.sendParseError(\"\\\"\");\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch != \"\\\"\")\r\n\t\t\t\tstr += ch;\r\n\t\t} while (ch != \"\\\"\");\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an end-of-file error when a premature end of file was encountered.\r\n\t */\r\n\tprivate sendEOFError():void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected end of file\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unexpected token was encountered.\r\n\t * @param expected The token type that was actually expected.\r\n\t */\r\n\tprivate sendParseError(expected:string):void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unknown keyword was encountered.\r\n\t */\r\n\tprivate sendUnknownKeywordError():void\r\n\t{\r\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\r\n\t}\r\n}\r\n\r\nexport = MD5MeshParser;\r\n\r\n\r\nclass VertexData\r\n{\r\n\tpublic index:number /*int*/;\r\n\tpublic s:number;\r\n\tpublic t:number;\r\n\tpublic startWeight:number /*int*/;\r\n\tpublic countWeight:number /*int*/;\r\n}\r\n\r\nclass JointData\r\n{\r\n\tpublic index:number /*int*/;\r\n\tpublic joint:number /*int*/;\r\n\tpublic bias:number;\r\n\tpublic pos:Vector3D;\r\n}\r\n\r\nclass MeshData\r\n{\r\n\tpublic vertexData:Array<VertexData>;\r\n\tpublic weightData:Array<JointData>;\r\n\tpublic indices:Array<number> /*uint*/;\r\n}",
    "import BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\n\r\n/**\r\n * Max3DSParser provides a parser for the 3ds data type.\r\n */\r\nclass Max3DSParser extends ParserBase\r\n{\r\n\tprivate _byteData:ByteArray;\r\n\r\n\tprivate _textures:Object;\r\n\tprivate _materials:Object;\r\n\tprivate _unfinalized_objects:Object;\r\n\r\n\tprivate _cur_obj_end:number;\r\n\tprivate _cur_obj:ObjectVO;\r\n\r\n\tprivate _cur_mat_end:number;\r\n\tprivate _cur_mat:MaterialVO;\r\n\tprivate _useSmoothingGroups:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>Max3DSParser</code> object.\r\n\t *\r\n\t * @param useSmoothingGroups Determines whether the parser looks for smoothing groups in the 3ds file or assumes uniform smoothing. Defaults to true.\r\n\t */\r\n\tconstructor(useSmoothingGroups:boolean = true)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n\t\tthis._useSmoothingGroups = useSmoothingGroups;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"3ds\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\tvar ba:ByteArray;\r\n\r\n\t\tba = ParserUtils.toByteArray(data);\r\n\t\tif (ba) {\r\n\t\t\tba.position = 0;\r\n\t\t\tif (ba.readShort() == 0x4d4d)\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\tif (resourceDependency.assets.length == 1) {\r\n\t\t\tvar asset:IAsset;\r\n\r\n\t\t\tasset = resourceDependency.assets[0];\r\n\t\t\tif (asset.isAsset(BitmapImage2D)) {\r\n\t\t\t\tvar tex:TextureVO;\r\n\r\n\t\t\t\ttex = this._textures[resourceDependency.id];\r\n\t\t\t\ttex.texture = new Single2DTexture(<BitmapImage2D> asset);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\t// TODO: Implement\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (!this._byteData) {\r\n\t\t\tthis._byteData = this._pGetByteData();\r\n\t\t\tthis._byteData.position = 0;\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\tthis._textures = {};\r\n\t\t\tthis._materials = {};\r\n\t\t\tthis._unfinalized_objects = {};\r\n\t\t}\r\n\r\n\t\t// TODO: With this construct, the loop will run no-op for as long\r\n\t\t// as there is time once file has finished reading. Consider a nice\r\n\t\t// way to stop loop when byte array is empty, without putting it in\r\n\t\t// the while-conditional, which will prevent finalizations from\r\n\t\t// happening after the last chunk.\r\n\t\twhile (this._pHasTime()) {\r\n\r\n\t\t\t// If we are currently working on an object, and the most recent chunk was\r\n\t\t\t// the last one in that object, finalize the current object.\r\n\t\t\tif (this._cur_mat && this._byteData.position >= this._cur_mat_end)\r\n\t\t\t\tthis.finalizeCurrentMaterial();\r\n\t\t\telse if (this._cur_obj && this._byteData.position >= this._cur_obj_end) {\r\n\t\t\t\t// Can't finalize at this point, because we have to wait until the full\r\n\t\t\t\t// animation section has been parsed for any potential pivot definitions\r\n\t\t\t\tthis._unfinalized_objects[this._cur_obj.name] = this._cur_obj;\r\n\t\t\t\tthis._cur_obj_end = Number.MAX_VALUE /*uint*/;\r\n\t\t\t\tthis._cur_obj = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._byteData.getBytesAvailable() > 0) {\r\n\t\t\t\tvar cid:number /*uint*/;\r\n\t\t\t\tvar len:number /*uint*/;\r\n\t\t\t\tvar end:number /*uint*/;\r\n\r\n\t\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\t\tlen = this._byteData.readUnsignedInt();\r\n\t\t\t\tend = this._byteData.position + (len - 6);\r\n\r\n\t\t\t\tswitch (cid) {\r\n\t\t\t\t\tcase 0x4D4D: // MAIN3DS\r\n\t\t\t\t\tcase 0x3D3D: // EDIT3DS\r\n\t\t\t\t\tcase 0xB000: // KEYF3DS\r\n\t\t\t\t\t\t// This types are \"container chunks\" and contain only\r\n\t\t\t\t\t\t// sub-chunks (no data on their own.) This means that\r\n\t\t\t\t\t\t// there is nothing more to parse at this point, and\r\n\t\t\t\t\t\t// instead we should progress to the next chunk, which\r\n\t\t\t\t\t\t// will be the first sub-chunk of this one.\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0xAFFF: // MATERIAL\r\n\t\t\t\t\t\tthis._cur_mat_end = end;\r\n\t\t\t\t\t\tthis._cur_mat = this.parseMaterial();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4000: // EDIT_OBJECT\r\n\t\t\t\t\t\tthis._cur_obj_end = end;\r\n\t\t\t\t\t\tthis._cur_obj = new ObjectVO();\r\n\t\t\t\t\t\tthis._cur_obj.name = this.readNulTermstring();\r\n\t\t\t\t\t\tthis._cur_obj.materials = new Array<string>();\r\n\t\t\t\t\t\tthis._cur_obj.materialFaces = {};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4100: // OBJ_TRIMESH\r\n\t\t\t\t\t\tthis._cur_obj.type = Mesh.assetType;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4110: // TRI_VERTEXL\r\n\t\t\t\t\t\tthis.parseVertexList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4120: // TRI_FACELIST\r\n\t\t\t\t\t\tthis.parseFaceList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4140: // TRI_MAPPINGCOORDS\r\n\t\t\t\t\t\tthis.parseUVList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4130: // Face materials\r\n\t\t\t\t\t\tthis.parseFaceMaterialList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4160: // Transform\r\n\t\t\t\t\t\tthis._cur_obj.transform = this.readTransform();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0xB002: // Object animation (including pivot)\r\n\t\t\t\t\t\tthis.parseObjectAnimation(end);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4150: // Smoothing groups\r\n\t\t\t\t\t\tthis.parseSmoothingGroups();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// Skip this (unknown) chunk\r\n\t\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Pause parsing if there were any dependencies found during this\r\n\t\t\t\t// iteration (i.e. if there are any dependencies that need to be\r\n\t\t\t\t// retrieved at this time.)\r\n\t\t\t\tif (this.dependencies.length) {\r\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// More parsing is required if the entire byte array has not yet\r\n\t\t// been read, or if there is a currently non-finalized object in\r\n\t\t// the pipeline.\r\n\t\tif (this._byteData.getBytesAvailable() || this._cur_obj || this._cur_mat) {\r\n\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t} else {\r\n\t\t\tvar name:string;\r\n\r\n\t\t\t// Finalize any remaining objects before ending.\r\n\t\t\tfor (name in this._unfinalized_objects) {\r\n\t\t\t\tvar obj:DisplayObjectContainer;\r\n\t\t\t\tobj = this.constructObject(this._unfinalized_objects[name]);\r\n\t\t\t\tif (obj) {\r\n\t\t\t\t\t//add to the content property\r\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(obj, name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate parseMaterial():MaterialVO\r\n\t{\r\n\t\tvar mat:MaterialVO;\r\n\r\n\t\tmat = new MaterialVO();\r\n\r\n\t\twhile (this._byteData.position < this._cur_mat_end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\t\t\tvar end:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\t\t\tend = this._byteData.position + (len - 6);\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xA000: // Material name\r\n\t\t\t\t\tmat.name = this.readNulTermstring();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA010: // Ambient color\r\n\t\t\t\t\tmat.ambientColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA020: // Diffuse color\r\n\t\t\t\t\tmat.diffuseColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA030: // Specular color\r\n\t\t\t\t\tmat.specularColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA081: // Two-sided, existence indicates \"true\"\r\n\t\t\t\t\tmat.twoSided = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA200: // Main (color) texture\r\n\t\t\t\t\tmat.colorMap = this.parseTexture(end);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA204: // Specular map\r\n\t\t\t\t\tmat.specularMap = this.parseTexture(end);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._byteData.position = end;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn mat;\r\n\t}\r\n\r\n\tprivate parseTexture(end:number /*uint*/):TextureVO\r\n\t{\r\n\t\tvar tex:TextureVO;\r\n\r\n\t\ttex = new TextureVO();\r\n\r\n\t\twhile (this._byteData.position < end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xA300:\r\n\t\t\t\t\ttex.url = this.readNulTermstring();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// Skip this unknown texture sub-chunk\r\n\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._textures[tex.url] = tex;\r\n\t\tthis._pAddDependency(tex.url, new URLRequest(tex.url));\r\n\r\n\t\treturn tex;\r\n\t}\r\n\r\n\tprivate parseVertexList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.verts = new Array<number>(count*3);\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.verts.length;\r\n\t\twhile (i < len) {\r\n\t\t\tvar x:number, y:number, z:number;\r\n\r\n\t\t\tx = this._byteData.readFloat();\r\n\t\t\ty = this._byteData.readFloat();\r\n\t\t\tz = this._byteData.readFloat();\r\n\r\n\t\t\tthis._cur_obj.verts[i++] = x;\r\n\t\t\tthis._cur_obj.verts[i++] = z;\r\n\t\t\tthis._cur_obj.verts[i++] = y;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseFaceList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.indices = new Array<number>(count*3) /*uint*/;\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.indices.length;\r\n\t\twhile (i < len) {\r\n\t\t\tvar i0:number /*uint*/, i1:number /*uint*/, i2:number /*uint*/;\r\n\r\n\t\t\ti0 = this._byteData.readUnsignedShort();\r\n\t\t\ti1 = this._byteData.readUnsignedShort();\r\n\t\t\ti2 = this._byteData.readUnsignedShort();\r\n\r\n\t\t\tthis._cur_obj.indices[i++] = i0;\r\n\t\t\tthis._cur_obj.indices[i++] = i2;\r\n\t\t\tthis._cur_obj.indices[i++] = i1;\r\n\r\n\t\t\t// Skip \"face info\", irrelevant in Away3D\r\n\t\t\tthis._byteData.position += 2;\r\n\t\t}\r\n\r\n\t\tthis._cur_obj.smoothingGroups = new Array<number>(count) /*uint*/;\r\n\t}\r\n\r\n\tprivate parseSmoothingGroups():void\r\n\t{\r\n\t\tvar len:number /*uint*/ = this._cur_obj.indices.length/3;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\t\twhile (i < len) {\r\n\t\t\tthis._cur_obj.smoothingGroups[i] = this._byteData.readUnsignedInt();\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseUVList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.uvs = new Array<number>(count*2);\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.uvs.length;\r\n\t\twhile (i < len) {\r\n\t\t\tthis._cur_obj.uvs[i++] = this._byteData.readFloat();\r\n\t\t\tthis._cur_obj.uvs[i++] = 1.0 - this._byteData.readFloat();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseFaceMaterialList():void\r\n\t{\r\n\t\tvar mat:string;\r\n\t\tvar count:number /*uint*/;\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar faces:Array<number> /*uint*/;\r\n\r\n\t\tmat = this.readNulTermstring();\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\r\n\t\tfaces = new Array<number>(count) /*uint*/;\r\n\t\ti = 0;\r\n\t\twhile (i < faces.length)\r\n\t\t\tfaces[i++] = this._byteData.readUnsignedShort();\r\n\r\n\t\tthis._cur_obj.materials.push(mat);\r\n\t\tthis._cur_obj.materialFaces[mat] = faces;\r\n\t}\r\n\r\n\tprivate parseObjectAnimation(end:number):void\r\n\t{\r\n\t\tvar vo:ObjectVO;\r\n\t\tvar obj:DisplayObjectContainer;\r\n\t\tvar pivot:Vector3D;\r\n\t\tvar name:string;\r\n\t\tvar hier:number /*uint*/;\r\n\r\n\t\t// Pivot defaults to origin\r\n\t\tpivot = new Vector3D;\r\n\r\n\t\twhile (this._byteData.position < end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xb010: // Name/hierarchy\r\n\t\t\t\t\tname = this.readNulTermstring();\r\n\t\t\t\t\tthis._byteData.position += 4;\r\n\t\t\t\t\thier = this._byteData.readShort();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xb013: // Pivot\r\n\t\t\t\t\tpivot.x = this._byteData.readFloat();\r\n\t\t\t\t\tpivot.z = this._byteData.readFloat();\r\n\t\t\t\t\tpivot.y = this._byteData.readFloat();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If name is \"$$$DUMMY\" this is an empty object (e.g. a container)\r\n\t\t// and will be ignored in this version of the parser\r\n\t\t// TODO: Implement containers in 3DS parser.\r\n\t\tif (name != '$$$DUMMY' && this._unfinalized_objects.hasOwnProperty(name)) {\r\n\t\t\tvo = this._unfinalized_objects[name];\r\n\t\t\tobj = this.constructObject(vo, pivot);\r\n\r\n\t\t\tif (obj) {\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(obj, vo.name);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tdelete this._unfinalized_objects[name];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate constructObject(obj:ObjectVO, pivot:Vector3D = null):DisplayObjectContainer\r\n\t{\r\n\t\tif (obj.type == Mesh.assetType) {\r\n\t\t\tvar i:number /*uint*/;\r\n\t\t\tvar sub:TriangleSubGeometry;\r\n\t\t\tvar geom:Geometry;\r\n\t\t\tvar mat:MaterialBase;\r\n\t\t\tvar mesh:Mesh;\r\n\t\t\tvar mtx:Matrix3D;\r\n\t\t\tvar vertices:Array<VertexVO>;\r\n\t\t\tvar faces:Array<FaceVO>;\r\n\r\n\t\t\tif (obj.materials.length > 1)\r\n\t\t\t\tconsole.log(\"The Away3D 3DS parser does not support multiple materials per mesh at this point.\");\r\n\r\n\t\t\t// Ignore empty objects\r\n\t\t\tif (!obj.indices || obj.indices.length == 0)\r\n\t\t\t\treturn null;\r\n\r\n\t\t\tvertices = new Array<VertexVO>(obj.verts.length/3);\r\n\t\t\tfaces = new Array<FaceVO>(obj.indices.length/3);\r\n\r\n\t\t\tthis.prepareData(vertices, faces, obj);\r\n\r\n\t\t\tif (this._useSmoothingGroups)\r\n\t\t\t\tthis.applySmoothGroups(vertices, faces);\r\n\r\n\t\t\tobj.verts = new Array<number>(vertices.length*3);\r\n\t\t\tfor (i = 0; i < vertices.length; i++) {\r\n\t\t\t\tobj.verts[i*3] = vertices[i].x;\r\n\t\t\t\tobj.verts[i*3 + 1] = vertices[i].y;\r\n\t\t\t\tobj.verts[i*3 + 2] = vertices[i].z;\r\n\t\t\t}\r\n\t\t\tobj.indices = new Array<number>(faces.length*3) /*uint*/;\r\n\r\n\t\t\tfor (i = 0; i < faces.length; i++) {\r\n\t\t\t\tobj.indices[i*3] = faces[i].a;\r\n\t\t\t\tobj.indices[i*3 + 1] = faces[i].b;\r\n\t\t\t\tobj.indices[i*3 + 2] = faces[i].c;\r\n\t\t\t}\r\n\r\n\t\t\tif (obj.uvs) {\r\n\t\t\t\t// If the object had UVs to start with, use UVs generated by\r\n\t\t\t\t// smoothing group splitting algorithm. Otherwise those UVs\r\n\t\t\t\t// will be nonsense and should be skipped.\r\n\t\t\t\tobj.uvs = new Array<number>(vertices.length*2);\r\n\t\t\t\tfor (i = 0; i < vertices.length; i++) {\r\n\t\t\t\t\tobj.uvs[i*2] = vertices[i].u;\r\n\t\t\t\t\tobj.uvs[i*2 + 1] = vertices[i].v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tgeom = new Geometry();\r\n\r\n\t\t\t// Construct sub-geometries (potentially splitting buffers)\r\n\t\t\t// and add them to geometry.\r\n\t\t\tsub = new TriangleSubGeometry(true);\r\n\t\t\tsub.updateIndices(obj.indices);\r\n\t\t\tsub.updatePositions(obj.verts);\r\n\t\t\tsub.updateUVs(obj.uvs);\r\n\r\n\t\t\tgeom.addSubGeometry(sub);\r\n\r\n\t\t\tif (obj.materials.length > 0) {\r\n\t\t\t\tvar mname:string;\r\n\t\t\t\tmname = obj.materials[0];\r\n\t\t\t\tmat = this._materials[mname].material;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply pivot translation to geometry if a pivot was\r\n\t\t\t// found while parsing the keyframe chunk earlier.\r\n\t\t\tif (pivot) {\r\n\t\t\t\tif (obj.transform) {\r\n\t\t\t\t\t// If a transform was found while parsing the\r\n\t\t\t\t\t// object chunk, use it to find the local pivot vector\r\n\t\t\t\t\tvar dat:Array<number> = obj.transform.concat();\r\n\t\t\t\t\tdat[12] = 0;\r\n\t\t\t\t\tdat[13] = 0;\r\n\t\t\t\t\tdat[14] = 0;\r\n\t\t\t\t\tmtx = new Matrix3D(dat);\r\n\t\t\t\t\tpivot = mtx.transformVector(pivot);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpivot.scaleBy(-1);\r\n\r\n\t\t\t\tmtx = new Matrix3D();\r\n\t\t\t\tmtx.appendTranslation(pivot.x, pivot.y, pivot.z);\r\n\t\t\t\tgeom.applyTransformation(mtx);\r\n\t\t\t}\r\n\r\n\t\t\t// Apply transformation to geometry if a transformation\r\n\t\t\t// was found while parsing the object chunk earlier.\r\n\t\t\tif (obj.transform) {\r\n\t\t\t\tmtx = new Matrix3D(obj.transform);\r\n\t\t\t\tmtx.invert();\r\n\t\t\t\tgeom.applyTransformation(mtx);\r\n\t\t\t}\r\n\r\n\t\t\t// Final transform applied to geometry. Finalize the geometry,\r\n\t\t\t// which will no longer be modified after this point.\r\n\t\t\tthis._pFinalizeAsset(geom, obj.name.concat('_geom'));\r\n\r\n\t\t\t// Build mesh and return it\r\n\t\t\tmesh = new Mesh(geom, mat);\r\n\t\t\tmesh.transform.matrix3D = new Matrix3D(obj.transform);\r\n\t\t\treturn mesh;\r\n\t\t}\r\n\r\n\t\t// If reached, unknown\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate prepareData(vertices:Array<VertexVO>, faces:Array<FaceVO>, obj:ObjectVO):void\r\n\t{\r\n\t\t// convert raw ObjectVO's data to structured VertexVO and FaceVO\r\n\t\tvar i:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar k:number /*int*/;\r\n\t\tvar len:number /*int*/ = obj.verts.length;\r\n\t\tfor (i = 0, j = 0, k = 0; i < len;) {\r\n\t\t\tvar v:VertexVO = new VertexVO;\r\n\t\t\tv.x = obj.verts[i++];\r\n\t\t\tv.y = obj.verts[i++];\r\n\t\t\tv.z = obj.verts[i++];\r\n\t\t\tif (obj.uvs) {\r\n\t\t\t\tv.u = obj.uvs[j++];\r\n\t\t\t\tv.v = obj.uvs[j++];\r\n\t\t\t}\r\n\t\t\tvertices[k++] = v;\r\n\t\t}\r\n\t\tlen = obj.indices.length;\r\n\t\tfor (i = 0, k = 0; i < len;) {\r\n\t\t\tvar f:FaceVO = new FaceVO();\r\n\t\t\tf.a = obj.indices[i++];\r\n\t\t\tf.b = obj.indices[i++];\r\n\t\t\tf.c = obj.indices[i++];\r\n\t\t\tf.smoothGroup = obj.smoothingGroups[k] || 0;\r\n\t\t\tfaces[k++] = f;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate applySmoothGroups(vertices:Array<VertexVO>, faces:Array<FaceVO>):void\r\n\t{\r\n\t\t// clone vertices according to following rule:\r\n\t\t// clone if vertex's in faces from groups 1+2 and 3\r\n\t\t// don't clone if vertex's in faces from groups 1+2, 3 and 1+3\r\n\r\n\t\tvar i:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar k:number /*int*/;\r\n\t\tvar l:number /*int*/;\r\n\t\tvar len:number /*int*/;\r\n\t\tvar numVerts:number /*uint*/ = vertices.length;\r\n\t\tvar numFaces:number /*uint*/ = faces.length;\r\n\r\n\t\t// extract groups data for vertices\r\n\t\tvar vGroups:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\r\n\t\tfor (i = 0; i < numVerts; i++)\r\n\t\t\tvGroups[i] = new Array<number>() /*uint*/;\r\n\t\tfor (i = 0; i < numFaces; i++) {\r\n\t\t\tvar face:FaceVO = faces[i];\r\n\t\t\tfor (j = 0; j < 3; j++) {\r\n\t\t\t\tvar groups:Array<number> /*uint*/ = vGroups[(j == 0)? face.a : ((j == 1)? face.b : face.c)];\r\n\t\t\t\tvar group:number /*uint*/ = face.smoothGroup;\r\n\t\t\t\tfor (k = groups.length - 1; k >= 0; k--) {\r\n\t\t\t\t\tif ((group & groups[k]) > 0) {\r\n\t\t\t\t\t\tgroup |= groups[k];\r\n\t\t\t\t\t\tgroups.splice(k, 1);\r\n\t\t\t\t\t\tk = groups.length - 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tgroups.push(group);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// clone vertices\r\n\t\tvar vClones:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\r\n\t\tfor (i = 0; i < numVerts; i++) {\r\n\t\t\tif ((len = vGroups[i].length) < 1)\r\n\t\t\t\tcontinue;\r\n\t\t\tvar clones:Array<number> /*uint*/ = new Array<number>(len) /*uint*/;\r\n\t\t\tvClones[i] = clones;\r\n\t\t\tclones[0] = i;\r\n\t\t\tvar v0:VertexVO = vertices[i];\r\n\t\t\tfor (j = 1; j < len; j++) {\r\n\t\t\t\tvar v1:VertexVO = new VertexVO;\r\n\t\t\t\tv1.x = v0.x;\r\n\t\t\t\tv1.y = v0.y;\r\n\t\t\t\tv1.z = v0.z;\r\n\t\t\t\tv1.u = v0.u;\r\n\t\t\t\tv1.v = v0.v;\r\n\t\t\t\tclones[j] = vertices.length;\r\n\t\t\t\tvertices.push(v1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tnumVerts = vertices.length;\r\n\r\n\t\tfor (i = 0; i < numFaces; i++) {\r\n\t\t\tface = faces[i];\r\n\t\t\tgroup = face.smoothGroup;\r\n\t\t\tfor (j = 0; j < 3; j++) {\r\n\t\t\t\tk = (j == 0)? face.a : ((j == 1)? face.b : face.c);\r\n\t\t\t\tgroups = vGroups[k];\r\n\t\t\t\tlen = groups.length;\r\n\t\t\t\tclones = vClones[k];\r\n\t\t\t\tfor (l = 0; l < len; l++) {\r\n\t\t\t\t\tif (((group == 0) && (groups[l] == 0)) || ((group & groups[l]) > 0)) {\r\n\t\t\t\t\t\tvar index:number /*uint*/ = clones[l];\r\n\t\t\t\t\t\tif (group == 0) {\r\n\t\t\t\t\t\t\t// vertex is unique if no smoothGroup found\r\n\t\t\t\t\t\t\tgroups.splice(l, 1);\r\n\t\t\t\t\t\t\tclones.splice(l, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (j == 0)\r\n\t\t\t\t\t\t\tface.a = index; else if (j == 1)\r\n\t\t\t\t\t\t\tface.b = index; else\r\n\t\t\t\t\t\t\tface.c = index;\r\n\t\t\t\t\t\tl = len;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate finalizeCurrentMaterial():void\r\n\t{\r\n\t\tvar mat:MethodMaterial;\r\n\r\n\t\tif (this._cur_mat.colorMap)\r\n\t\t\tmat = new MethodMaterial(this._cur_mat.colorMap.texture || DefaultMaterialManager.getDefaultTexture());\r\n\t\telse\r\n\t\t\tmat = new MethodMaterial(this._cur_mat.ambientColor);\r\n\r\n\t\tmat.diffuseColor = this._cur_mat.diffuseColor;\r\n\t\tmat.specularColor = this._cur_mat.specularColor;\r\n\r\n\t\tif (this.materialMode >= 2)\r\n\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS\r\n\r\n\t\tmat.bothSides = this._cur_mat.twoSided;\r\n\r\n\t\tthis._pFinalizeAsset(mat, this._cur_mat.name);\r\n\r\n\t\tthis._materials[this._cur_mat.name] = this._cur_mat;\r\n\t\tthis._cur_mat.material = mat;\r\n\r\n\t\tthis._cur_mat = null;\r\n\t}\r\n\r\n\tprivate readNulTermstring():string\r\n\t{\r\n\t\tvar chr:number /*int*/;\r\n\t\tvar str:string = \"\";\r\n\r\n\t\twhile ((chr = this._byteData.readUnsignedByte()) > 0)\r\n\t\t\tstr += String.fromCharCode(chr);\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\tprivate readTransform():Array<number>\r\n\t{\r\n\t\tvar data:Array<number>;\r\n\r\n\t\tdata = new Array<number>(16);\r\n\r\n\t\t// X axis\r\n\t\tdata[0] = this._byteData.readFloat(); // X\r\n\t\tdata[2] = this._byteData.readFloat(); // Z\r\n\t\tdata[1] = this._byteData.readFloat(); // Y\r\n\t\tdata[3] = 0;\r\n\r\n\t\t// Z axis\r\n\t\tdata[8] = this._byteData.readFloat(); // X\r\n\t\tdata[10] = this._byteData.readFloat(); // Z\r\n\t\tdata[9] = this._byteData.readFloat(); // Y\r\n\t\tdata[11] = 0;\r\n\r\n\t\t// Y Axis\r\n\t\tdata[4] = this._byteData.readFloat(); // X\r\n\t\tdata[6] = this._byteData.readFloat(); // Z\r\n\t\tdata[5] = this._byteData.readFloat(); // Y\r\n\t\tdata[7] = 0;\r\n\r\n\t\t// Translation\r\n\t\tdata[12] = this._byteData.readFloat(); // X\r\n\t\tdata[14] = this._byteData.readFloat(); // Z\r\n\t\tdata[13] = this._byteData.readFloat(); // Y\r\n\t\tdata[15] = 1;\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tprivate readColor():number /*int*/\r\n\t{\r\n\t\tvar cid:number /*int*/;\r\n\t\tvar len:number /*int*/;\r\n\t\tvar r:number /*int*/, g:number /*int*/, b:number /*int*/;\r\n\r\n\t\tcid = this._byteData.readUnsignedShort();\r\n\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\tswitch (cid) {\r\n\t\t\tcase 0x0010: // Floats\r\n\t\t\t\tr = this._byteData.readFloat()*255;\r\n\t\t\t\tg = this._byteData.readFloat()*255;\r\n\t\t\t\tb = this._byteData.readFloat()*255;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0x0011: // 24-bit color\r\n\t\t\t\tr = this._byteData.readUnsignedByte();\r\n\t\t\t\tg = this._byteData.readUnsignedByte();\r\n\t\t\t\tb = this._byteData.readUnsignedByte();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn (r << 16) | (g << 8) | b;\r\n\t}\r\n}\r\n\r\nexport = Max3DSParser;\r\n\r\n/**\r\n *\r\n */\r\nclass FaceVO\r\n{\r\n\tpublic a:number /*int*/;\r\n\tpublic b:number /*int*/;\r\n\tpublic c:number /*int*/;\r\n\tpublic smoothGroup:number /*int*/;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass MaterialVO\r\n{\r\n\tpublic name:string;\r\n\tpublic ambientColor:number /*int*/;\r\n\tpublic diffuseColor:number /*int*/;\r\n\tpublic specularColor:number /*int*/;\r\n\tpublic twoSided:boolean;\r\n\tpublic colorMap:TextureVO;\r\n\tpublic specularMap:TextureVO;\r\n\tpublic material:MaterialBase;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass ObjectVO\r\n{\r\n\tpublic name:string;\r\n\tpublic type:string;\r\n\tpublic pivotX:number;\r\n\tpublic pivotY:number;\r\n\tpublic pivotZ:number;\r\n\tpublic transform:Array<number>;\r\n\tpublic verts:Array<number>;\r\n\tpublic indices:Array<number> /*int*/;\r\n\tpublic uvs:Array<number>;\r\n\tpublic materialFaces:Object;\r\n\tpublic materials:Array<string>;\r\n\tpublic smoothingGroups:Array<number> /*int*/;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass TextureVO\r\n{\r\n\tpublic url:string;\r\n\tpublic texture:Single2DTexture;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass VertexVO\r\n{\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n\tpublic z:number;\r\n\tpublic u:number;\r\n\tpublic v:number;\r\n\tpublic normal:Vector3D;\r\n\tpublic tangent:Vector3D;\r\n}",
    "import BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\r\n\r\n/**\r\n * OBJParser provides a parser for the OBJ data type.\r\n */\r\nclass OBJParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _charIndex:number;\r\n\tprivate _oldIndex:number;\r\n\tprivate _stringLength:number;\r\n\tprivate _currentObject:ObjectGroup;\r\n\tprivate _currentGroup:Group;\r\n\tprivate _currentMaterialGroup:MaterialGroup;\r\n\tprivate _objects:Array<ObjectGroup>;\r\n\tprivate _materialIDs:string[];\r\n\tprivate _materialLoaded:Array<LoadedMaterial>;\r\n\tprivate _materialSpecularData:Array<SpecularData>;\r\n\tprivate _meshes:Array<Mesh>;\r\n\tprivate _lastMtlID:string;\r\n\tprivate _objectIndex:number;\r\n\tprivate _realIndices;\r\n\tprivate _vertexIndex:number;\r\n\tprivate _vertices:Array<Vertex>;\r\n\tprivate _vertexNormals:Array<Vertex>;\r\n\tprivate _uvs:Array<UV>;\r\n\tprivate _scale:number;\r\n\tprivate _mtlLib:boolean;\r\n\tprivate _mtlLibLoaded:boolean = true;\r\n\tprivate _activeMaterialID:string = \"\";\r\n\r\n\t/**\r\n\t * Creates a new OBJParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(scale:number = 1)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._scale = scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Scaling factor applied directly to vertices data\r\n\t * @param value The scaling factor.\r\n\t */\r\n\tpublic set scale(value:number)\r\n\t{\r\n\t\tthis._scale = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"obj\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\tvar content:string = ParserUtils.toString(data);\r\n\t\tvar hasV:boolean = false;\r\n\t\tvar hasF:boolean = false;\r\n\r\n\t\tif (content) {\r\n\t\t\thasV = content.indexOf(\"\\nv \") != -1;\r\n\t\t\thasF = content.indexOf(\"\\nf \") != -1;\r\n\t\t}\r\n\r\n\t\treturn hasV && hasF;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.id == 'mtl') {\r\n\t\t\tvar str:string = ParserUtils.toString(resourceDependency.data);\r\n\t\t\tthis.parseMtl(str);\r\n\r\n\t\t} else {\r\n\t\t\tvar asset:IAsset;\r\n\r\n\t\t\tif (resourceDependency.assets.length != 1) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tasset = resourceDependency.assets[0];\r\n\r\n\t\t\tif (asset.isAsset(BitmapImage2D)) {\r\n\r\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\t\tlm.materialID = resourceDependency.id;\r\n\t\t\t\tlm.texture = new Single2DTexture(<BitmapImage2D> asset);\r\n\r\n\t\t\t\tthis._materialLoaded.push(lm);\r\n\r\n\t\t\t\tif (this._meshes.length > 0) {\r\n\t\t\t\t\tthis.applyMaterial(lm);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.id == \"mtl\") {\r\n\t\t\tthis._mtlLib = false;\r\n\t\t\tthis._mtlLibLoaded = false;\r\n\t\t} else {\r\n\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\tlm.materialID = resourceDependency.id;\r\n\t\t\tthis._materialLoaded.push(lm);\r\n\t\t}\r\n\r\n\t\tif (this._meshes.length > 0)\r\n\t\t\tthis.applyMaterial(lm);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar line:string;\r\n\t\tvar creturn:string = String.fromCharCode(10);\r\n\t\tvar trunk;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\t// Merge linebreaks that are immediately preceeded by\r\n\t\t\t// the \"escape\" backward slash into single lines.\r\n\t\t\tthis._textData = this._textData.replace(/\\\\[\\r\\n]+\\s*/gm, ' ');\r\n\t\t}\r\n\r\n\t\tif (this._textData.indexOf(creturn) == -1)\r\n\t\t\tcreturn = String.fromCharCode(13);\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._startedParsing = true;\r\n\t\t\tthis._vertices = new Array<Vertex>();\r\n\t\t\tthis._vertexNormals = new Array<Vertex>();\r\n\t\t\tthis._materialIDs = new Array<string>();\r\n\t\t\tthis._materialLoaded = new Array<LoadedMaterial>();\r\n\t\t\tthis._meshes = new Array<Mesh>();\r\n\t\t\tthis._uvs = new Array<UV>();\r\n\t\t\tthis._stringLength = this._textData.length;\r\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, 0);\r\n\t\t\tthis._oldIndex = 0;\r\n\t\t\tthis._objects = new Array<ObjectGroup>();\r\n\t\t\tthis._objectIndex = 0;\r\n\t\t}\r\n\r\n\t\twhile (this._charIndex < this._stringLength && this._pHasTime()) {\r\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, this._oldIndex);\r\n\r\n\t\t\tif (this._charIndex == -1)\r\n\t\t\t\tthis._charIndex = this._stringLength;\r\n\r\n\t\t\tline = this._textData.substring(this._oldIndex, this._charIndex);\r\n\t\t\tline = line.split('\\r').join(\"\");\r\n\t\t\tline = line.replace(\"  \", \" \");\r\n\t\t\ttrunk = line.split(\" \");\r\n\t\t\tthis._oldIndex = this._charIndex + 1;\r\n\t\t\tthis.parseLine(trunk);\r\n\r\n\t\t\t// If whatever was parsed on this line resulted in the\r\n\t\t\t// parsing being paused to retrieve dependencies, break\r\n\t\t\t// here and do not continue parsing until un-paused.\r\n\t\t\tif (this.parsingPaused) {\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._charIndex >= this._stringLength) {\r\n\r\n\t\t\tif (this._mtlLib && !this._mtlLibLoaded) {\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\r\n\t\t\tthis.translate();\r\n\t\t\tthis.applyMaterials();\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a single line in the OBJ file.\r\n\t */\r\n\tprivate parseLine(trunk)\r\n\t{\r\n\t\tswitch (trunk[0]) {\r\n\r\n\t\t\tcase \"mtllib\":\r\n\r\n\t\t\t\tthis._mtlLib = true;\r\n\t\t\t\tthis._mtlLibLoaded = false;\r\n\t\t\t\tthis.loadMtl(trunk[1]);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"g\":\r\n\r\n\t\t\t\tthis.createGroup(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"o\":\r\n\r\n\t\t\t\tthis.createObject(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"usemtl\":\r\n\r\n\t\t\t\tif (this._mtlLib) {\r\n\r\n\t\t\t\t\tif (!trunk[1])\r\n\t\t\t\t\t\ttrunk[1] = \"def000\";\r\n\r\n\t\t\t\t\tthis._materialIDs.push(trunk[1]);\r\n\t\t\t\t\tthis._activeMaterialID = trunk[1];\r\n\r\n\t\t\t\t\tif (this._currentGroup)\r\n\t\t\t\t\t\tthis._currentGroup.materialID = this._activeMaterialID;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"v\":\r\n\r\n\t\t\t\tthis.parseVertex(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"vt\":\r\n\r\n\t\t\t\tthis.parseUV(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"vn\":\r\n\r\n\t\t\t\tthis.parseVertexNormal(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"f\":\r\n\r\n\t\t\t\tthis.parseFace(trunk);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the parsed data into an Away3D scenegraph structure\r\n\t */\r\n\tprivate translate()\r\n\t{\r\n\t\tfor (var objIndex:number = 0; objIndex < this._objects.length; ++objIndex) {\r\n\t\t\tvar groups:Array<Group> = this._objects[objIndex].groups;\r\n\t\t\tvar numGroups:number = groups.length;\r\n\t\t\tvar materialGroups:Array<MaterialGroup>;\r\n\t\t\tvar numMaterialGroups:number;\r\n\t\t\tvar geometry:Geometry;\r\n\t\t\tvar mesh:Mesh;\r\n\r\n\t\t\tvar m:number;\r\n\t\t\tvar sm:number;\r\n\t\t\tvar bmMaterial:MethodMaterial;\r\n\r\n\t\t\tfor (var g:number = 0; g < numGroups; ++g) {\r\n\t\t\t\tgeometry = new Geometry();\r\n\t\t\t\tmaterialGroups = groups[g].materialGroups;\r\n\t\t\t\tnumMaterialGroups = materialGroups.length;\r\n\r\n\t\t\t\tfor (m = 0; m < numMaterialGroups; ++m)\r\n\t\t\t\t\tthis.translateMaterialGroup(materialGroups[m], geometry);\r\n\r\n\t\t\t\tif (geometry.subGeometries.length == 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Finalize and force type-based name\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> geometry);//, \"\");\r\n\r\n\t\t\t\tbmMaterial = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\r\n\t\t\t\t//check for multipass\r\n\t\t\t\tif (this.materialMode >= 2)\r\n\t\t\t\t\tbmMaterial.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\tmesh = new Mesh(geometry, bmMaterial);\r\n\r\n\t\t\t\tif (this._objects[objIndex].name) {\r\n\t\t\t\t\t// this is a full independent object ('o' tag in OBJ file)\r\n\t\t\t\t\tmesh.name = this._objects[objIndex].name;\r\n\r\n\t\t\t\t} else if (groups[g].name) {\r\n\r\n\t\t\t\t\t// this is a group so the sub groups contain the actual mesh object names ('g' tag in OBJ file)\r\n\t\t\t\t\tmesh.name = groups[g].name;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// No name stored. Use empty string which will force it\r\n\t\t\t\t\t// to be overridden by finalizeAsset() to type default.\r\n\t\t\t\t\tmesh.name = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._meshes.push(mesh);\r\n\r\n\t\t\t\tif (groups[g].materialID != \"\")\r\n\t\t\t\t\tbmMaterial.name = groups[g].materialID + \"~\" + mesh.name; else\r\n\t\t\t\t\tbmMaterial.name = this._lastMtlID + \"~\" + mesh.name;\r\n\r\n\t\t\t\tif (mesh.subMeshes.length > 1) {\r\n\t\t\t\t\tfor (sm = 1; sm < mesh.subMeshes.length; ++sm)\r\n\t\t\t\t\t\tmesh.subMeshes[sm].material = bmMaterial;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> mesh);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Translates an obj's material group to a subgeometry.\r\n\t * @param materialGroup The material group data to convert.\r\n\t * @param geometry The Geometry to contain the converted SubGeometry.\r\n\t */\r\n\tprivate translateMaterialGroup(materialGroup:MaterialGroup, geometry:Geometry)\r\n\t{\r\n\t\tvar faces:Array<FaceData> = materialGroup.faces;\r\n\t\tvar face:FaceData;\r\n\t\tvar numFaces:number = faces.length;\r\n\t\tvar numVerts:number;\r\n\t\tvar sub:TriangleSubGeometry;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\tvar normals:Array<number> = new Array<number>();\r\n\t\tvar indices:Array<number> /*uint*/ = new Array<number>();\r\n\r\n\t\tthis._realIndices = [];\r\n\t\tthis._vertexIndex = 0;\r\n\r\n\t\tvar j:number;\r\n\t\tfor (var i:number = 0; i < numFaces; ++i) {\r\n\r\n\t\t\tface = faces[i];\r\n\t\t\tnumVerts = face.indexIds.length - 1;\r\n\r\n\t\t\tfor (j = 1; j < numVerts; ++j) {\r\n\r\n\t\t\t\tthis.translateVertexData(face, j, vertices, uvs, indices, normals);\r\n\t\t\t\tthis.translateVertexData(face, 0, vertices, uvs, indices, normals);\r\n\t\t\t\tthis.translateVertexData(face, j + 1, vertices, uvs, indices, normals);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (vertices.length > 0) {\r\n\t\t\tsub = new TriangleSubGeometry(true);\r\n\t\t\tsub.autoDeriveNormals = normals.length? false : true;\r\n\t\t\tsub.updateIndices(indices);\r\n\t\t\tsub.updatePositions(vertices);\r\n\t\t\tsub.updateVertexNormals(normals);\r\n\t\t\tsub.updateUVs(uvs);\r\n\r\n\t\t\tgeometry.addSubGeometry(sub);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate translateVertexData(face:FaceData, vertexIndex:number, vertices:Array<number>, uvs:Array<number>, indices:Array<number> /*uint*/, normals:Array<number>)\r\n\t{\r\n\t\tvar index:number;\r\n\t\tvar vertex:Vertex;\r\n\t\tvar vertexNormal:Vertex;\r\n\t\tvar uv:UV;\r\n\r\n\t\tif (!this._realIndices[face.indexIds[vertexIndex]]) {\r\n\r\n\t\t\tindex = this._vertexIndex;\r\n\t\t\tthis._realIndices[face.indexIds[vertexIndex]] = ++this._vertexIndex;\r\n\t\t\tvertex = this._vertices[face.vertexIndices[vertexIndex] - 1];\r\n\t\t\tvertices.push(vertex.x*this._scale, vertex.y*this._scale, vertex.z*this._scale);\r\n\r\n\t\t\tif (face.normalIndices.length > 0) {\r\n\t\t\t\tvertexNormal = this._vertexNormals[face.normalIndices[vertexIndex] - 1];\r\n\t\t\t\tnormals.push(vertexNormal.x, vertexNormal.y, vertexNormal.z);\r\n\t\t\t}\r\n\r\n\t\t\tif (face.uvIndices.length > 0) {\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tuv = this._uvs[face.uvIndices[vertexIndex] - 1];\r\n\t\t\t\t\tuvs.push(uv.u, uv.v);\r\n\r\n\t\t\t\t} catch (e) {\r\n\r\n\t\t\t\t\tswitch (vertexIndex) {\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\tuvs.push(0, 1);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\tuvs.push(.5, 0);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\tuvs.push(1, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tindex = this._realIndices[face.indexIds[vertexIndex]] - 1;\r\n\t\t}\r\n\r\n\t\tindices.push(index);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new object group.\r\n\t * @param trunk The data block containing the object tag and its parameters\r\n\t */\r\n\tprivate createObject(trunk)\r\n\t{\r\n\t\tthis._currentGroup = null;\r\n\t\tthis._currentMaterialGroup = null;\r\n\t\tthis._objects.push(this._currentObject = new ObjectGroup());\r\n\r\n\t\tif (trunk)\r\n\t\t\tthis._currentObject.name = trunk[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new group.\r\n\t * @param trunk The data block containing the group tag and its parameters\r\n\t */\r\n\tprivate createGroup(trunk)\r\n\t{\r\n\t\tif (!this._currentObject)\r\n\t\t\tthis.createObject(null);\r\n\t\tthis._currentGroup = new Group();\r\n\r\n\t\tthis._currentGroup.materialID = this._activeMaterialID;\r\n\r\n\t\tif (trunk)\r\n\t\t\tthis._currentGroup.name = trunk[1];\r\n\t\tthis._currentObject.groups.push(this._currentGroup);\r\n\r\n\t\tthis.createMaterialGroup(null);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new material group.\r\n\t * @param trunk The data block containing the material tag and its parameters\r\n\t */\r\n\tprivate createMaterialGroup(trunk)\r\n\t{\r\n\t\tthis._currentMaterialGroup = new MaterialGroup();\r\n\t\tif (trunk)\r\n\t\t\tthis._currentMaterialGroup.url = trunk[1];\r\n\t\tthis._currentGroup.materialGroups.push(this._currentMaterialGroup);\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next vertex coordinates.\r\n\t * @param trunk The data block containing the vertex tag and its parameters\r\n\t */\r\n\tprivate parseVertex(trunk)\r\n\t{\r\n\t\t//for the very rare cases of other delimiters/charcodes seen in some obj files\r\n\r\n\t\tvar v1:number, v2:number , v3:number;\r\n\t\tif (trunk.length > 4) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\r\n\t\t\tv1 = <number> nTrunk[0];\r\n\t\t\tv2 = <number> nTrunk[1];\r\n\t\t\tv3 = <number> -nTrunk[2];\r\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\r\n\r\n\t\t} else {\r\n\t\t\tv1 = <number> parseFloat(trunk[1]);\r\n\t\t\tv2 = <number> parseFloat(trunk[2]);\r\n\t\t\tv3 = <number> -parseFloat(trunk[3]);\r\n\r\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next uv coordinates.\r\n\t * @param trunk The data block containing the uv tag and its parameters\r\n\t */\r\n\tprivate parseUV(trunk)\r\n\t{\r\n\t\tif (trunk.length > 3) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\t\t\tthis._uvs.push(new UV(nTrunk[0], 1 - nTrunk[1]));\r\n\r\n\t\t} else {\r\n\t\t\tthis._uvs.push(new UV(parseFloat(trunk[1]), 1 - parseFloat(trunk[2])));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next vertex normal coordinates.\r\n\t * @param trunk The data block containing the vertex normal tag and its parameters\r\n\t */\r\n\tprivate parseVertexNormal(trunk)\r\n\t{\r\n\t\tif (trunk.length > 4) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\t\t\tthis._vertexNormals.push(new Vertex(nTrunk[0], nTrunk[1], -nTrunk[2]));\r\n\r\n\t\t} else {\r\n\t\t\tthis._vertexNormals.push(new Vertex(parseFloat(trunk[1]), parseFloat(trunk[2]), -parseFloat(trunk[3])));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next face's indices.\r\n\t * @param trunk The data block containing the face tag and its parameters\r\n\t */\r\n\tprivate parseFace(trunk)\r\n\t{\r\n\t\tvar len:number = trunk.length;\r\n\t\tvar face:FaceData = new FaceData();\r\n\r\n\t\tif (!this._currentGroup) {\r\n\t\t\tthis.createGroup(null);\r\n\t\t}\r\n\r\n\t\tvar indices;\r\n\t\tfor (var i:number = 1; i < len; ++i) {\r\n\r\n\t\t\tif (trunk[i] == \"\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tindices = trunk[i].split(\"/\");\r\n\t\t\tface.vertexIndices.push(this.parseIndex(parseInt(indices[0]), this._vertices.length));\r\n\r\n\t\t\tif (indices[1] && String(indices[1]).length > 0)\r\n\t\t\t\tface.uvIndices.push(this.parseIndex(parseInt(indices[1]), this._uvs.length));\r\n\r\n\t\t\tif (indices[2] && String(indices[2]).length > 0)\r\n\t\t\t\tface.normalIndices.push(this.parseIndex(parseInt(indices[2]), this._vertexNormals.length));\r\n\r\n\t\t\tface.indexIds.push(trunk[i]);\r\n\t\t}\r\n\r\n\t\tthis._currentMaterialGroup.faces.push(face);\r\n\t}\r\n\r\n\t/**\r\n\t * This is a hack around negative face coords\r\n\t */\r\n\tprivate parseIndex(index:number, length:number):number\r\n\t{\r\n\t\tif (index < 0)\r\n\t\t\treturn index + length + 1; else\r\n\t\t\treturn index;\r\n\t}\r\n\r\n\tprivate parseMtl(data:string)\r\n\t{\r\n\t\tvar materialDefinitions = data.split('newmtl');\r\n\t\tvar lines;\r\n\t\tvar trunk;\r\n\t\tvar j:number;\r\n\r\n\t\tvar basicSpecularMethod:SpecularBasicMethod;\r\n\t\tvar useSpecular:boolean;\r\n\t\tvar useColor:boolean;\r\n\t\tvar diffuseColor:number;\r\n\t\tvar color:number;\r\n\t\tvar specularColor:number;\r\n\t\tvar specular:number;\r\n\t\tvar alpha:number;\r\n\t\tvar mapkd:string;\r\n\r\n\t\tfor (var i:number = 0; i < materialDefinitions.length; ++i) {\r\n\r\n\r\n\t\t\tlines = (materialDefinitions[i].split('\\r')).join(\"\").split('\\n');\r\n\t\t\t//lines = (materialDefinitions[i].split('\\r') as Array).join(\"\").split('\\n');\r\n\r\n\t\t\tif (lines.length == 1)\r\n\t\t\t\tlines = materialDefinitions[i].split(String.fromCharCode(13));\r\n\r\n\t\t\tdiffuseColor = color = specularColor = 0xFFFFFF;\r\n\t\t\tspecular = 0;\r\n\t\t\tuseSpecular = false;\r\n\t\t\tuseColor = false;\r\n\t\t\talpha = 1;\r\n\t\t\tmapkd = \"\";\r\n\r\n\t\t\tfor (j = 0; j < lines.length; ++j) {\r\n\r\n\t\t\t\tlines[j] = lines[j].replace(/\\s+$/, \"\");\r\n\r\n\t\t\t\tif (lines[j].substring(0, 1) != \"#\" && (j == 0 || lines[j] != \"\")) {\r\n\t\t\t\t\ttrunk = lines[j].split(\" \");\r\n\r\n\t\t\t\t\tif (String(trunk[0]).charCodeAt(0) == 9 || String(trunk[0]).charCodeAt(0) == 32)\r\n\t\t\t\t\t\ttrunk[0] = trunk[0].substring(1, trunk[0].length);\r\n\r\n\t\t\t\t\tif (j == 0) {\r\n\t\t\t\t\t\tthis._lastMtlID = trunk.join(\"\");\r\n\t\t\t\t\t\tthis._lastMtlID = (this._lastMtlID == \"\")? \"def000\" : this._lastMtlID;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tswitch (trunk[0]) {\r\n\r\n\t\t\t\t\t\t\tcase \"Ka\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3])))\r\n\t\t\t\t\t\t\t\t\tcolor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Ks\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\r\n\t\t\t\t\t\t\t\t\tspecularColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\t\tuseSpecular = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Ns\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\r\n\t\t\t\t\t\t\t\t\tspecular = Number(trunk[1])*0.001;\r\n\t\t\t\t\t\t\t\tif (specular == 0)\r\n\t\t\t\t\t\t\t\t\tuseSpecular = false;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Kd\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\r\n\t\t\t\t\t\t\t\t\tdiffuseColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\t\tuseColor = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"tr\":\r\n\t\t\t\t\t\t\tcase \"d\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\r\n\t\t\t\t\t\t\t\t\talpha = Number(trunk[1]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"map_Kd\":\r\n\t\t\t\t\t\t\t\tmapkd = this.parseMapKdString(trunk);\r\n\t\t\t\t\t\t\t\tmapkd = mapkd.replace(/\\\\/g, \"/\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (mapkd != \"\") {\r\n\r\n\t\t\t\tif (useSpecular) {\r\n\r\n\t\t\t\t\tbasicSpecularMethod = new SpecularBasicMethod();\r\n\t\t\t\t\tbasicSpecularMethod.specularColor = specularColor;\r\n\t\t\t\t\tbasicSpecularMethod.specular = specular;\r\n\r\n\t\t\t\t\tvar specularData:SpecularData = new SpecularData();\r\n\t\t\t\t\tspecularData.alpha = alpha;\r\n\t\t\t\t\tspecularData.basicSpecularMethod = basicSpecularMethod;\r\n\t\t\t\t\tspecularData.materialID = this._lastMtlID;\r\n\r\n\t\t\t\t\tif (!this._materialSpecularData)\r\n\t\t\t\t\t\tthis._materialSpecularData = new Array<SpecularData>();\r\n\r\n\t\t\t\t\tthis._materialSpecularData.push(specularData);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pAddDependency(this._lastMtlID, new URLRequest(mapkd));\r\n\r\n\t\t\t} else if (useColor && !isNaN(color)) {\r\n\r\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\t\tlm.materialID = this._lastMtlID;\r\n\r\n\t\t\t\tif (alpha == 0)\r\n\t\t\t\t\tconsole.log(\"Warning: an alpha value of 0 was found in mtl color tag (Tr or d) ref:\" + this._lastMtlID + \", mesh(es) using it will be invisible!\");\r\n\r\n\t\t\t\tvar cm:MethodMaterial;\r\n\r\n\t\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\t\tcm = new MethodMaterial(color);\r\n\r\n\t\t\t\t\tvar colorMat:MethodMaterial = <MethodMaterial> cm;\r\n\r\n\t\t\t\t\tcolorMat.alpha = alpha;\r\n\t\t\t\t\tcolorMat.diffuseColor = diffuseColor;\r\n\t\t\t\t\tcolorMat.repeat = true;\r\n\r\n\t\t\t\t\tif (useSpecular) {\r\n\t\t\t\t\t\tcolorMat.specularColor = specularColor;\r\n\t\t\t\t\t\tcolorMat.specular = specular;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcm = new MethodMaterial(color);\r\n\t\t\t\t\tcm.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\tvar colorMultiMat:MethodMaterial = <MethodMaterial> cm;\r\n\r\n\r\n\t\t\t\t\tcolorMultiMat.diffuseColor = diffuseColor;\r\n\t\t\t\t\tcolorMultiMat.repeat = true;\r\n\r\n\t\t\t\t\tif (useSpecular) {\r\n\t\t\t\t\t\tcolorMultiMat.specularColor = specularColor;\r\n\t\t\t\t\t\tcolorMultiMat.specular = specular;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlm.cm = cm;\r\n\r\n\t\t\t\tthis._materialLoaded.push(lm);\r\n\r\n\t\t\t\tif (this._meshes.length > 0)\r\n\t\t\t\t\tthis.applyMaterial(lm);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._mtlLibLoaded = true;\r\n\t}\r\n\r\n\tprivate parseMapKdString(trunk):string\r\n\t{\r\n\t\tvar url:string = \"\";\r\n\t\tvar i:number;\r\n\t\tvar breakflag:boolean;\r\n\r\n\t\tfor (i = 1; i < trunk.length;) {\r\n\t\t\tswitch (trunk[i]) {\r\n\t\t\t\tcase \"-blendu\":\r\n\t\t\t\tcase \"-blendv\":\r\n\t\t\t\tcase \"-cc\":\r\n\t\t\t\tcase \"-clamp\":\r\n\t\t\t\tcase \"-texres\":\r\n\t\t\t\t\ti += 2; //Skip ahead 1 attribute\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"-mm\":\r\n\t\t\t\t\ti += 3; //Skip ahead 2 attributes\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"-o\":\r\n\t\t\t\tcase \"-s\":\r\n\t\t\t\tcase \"-t\":\r\n\t\t\t\t\ti += 4; //Skip ahead 3 attributes\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreakflag = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (breakflag)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t//Reconstruct URL/filename\r\n\t\tfor (i; i < trunk.length; i++) {\r\n\t\t\turl += trunk[i];\r\n\t\t\turl += \" \";\r\n\t\t}\r\n\r\n\t\t//Remove the extraneous space and/or newline from the right side\r\n\t\turl = url.replace(/\\s+$/, \"\");\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\tprivate loadMtl(mtlurl:string)\r\n\t{\r\n\t\t// Add raw-data dependency to queue and load dependencies now,\r\n\t\t// which will pause the parsing in the meantime.\r\n\t\tthis._pAddDependency('mtl', new URLRequest(mtlurl), true);\r\n\t\tthis._pPauseAndRetrieveDependencies();//\r\n\t}\r\n\r\n\tprivate applyMaterial(lm:LoadedMaterial)\r\n\t{\r\n\t\tvar decomposeID;\r\n\t\tvar mesh:Mesh;\r\n\t\tvar tm:MethodMaterial;\r\n\t\tvar j:number;\r\n\t\tvar specularData:SpecularData;\r\n\r\n\t\tfor (var i:number = 0; i < this._meshes.length; ++i) {\r\n\t\t\tmesh = this._meshes[i];\r\n\t\t\tdecomposeID = mesh.material.name.split(\"~\");\r\n\r\n\t\t\tif (decomposeID[0] == lm.materialID) {\r\n\r\n\t\t\t\tif (lm.cm) {\r\n\t\t\t\t\tif (mesh.material)\r\n\t\t\t\t\t\tmesh.material = null;\r\n\t\t\t\t\tmesh.material = lm.cm;\r\n\r\n\t\t\t\t} else if (lm.texture) {\r\n\t\t\t\t\tif (this.materialMode < 2) { // if materialMode is 0 or 1, we create a SinglePass\r\n\t\t\t\t\t\ttm = <MethodMaterial > mesh.material;\r\n\r\n\t\t\t\t\t\ttm.texture = lm.texture;\r\n\t\t\t\t\t\ttm.color = lm.color;\r\n\t\t\t\t\t\ttm.alpha = lm.alpha;\r\n\t\t\t\t\t\ttm.repeat = true;\r\n\r\n\t\t\t\t\t\tif (lm.specularMethod) {\r\n\r\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\r\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\r\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\r\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\r\n\t\t\t\t\t\t\ttm.specularMethod = null;\r\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\r\n\r\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\r\n\r\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\r\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\r\n\r\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\r\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\r\n\t\t\t\t\t\t\t\t\ttm.alpha = specularData.alpha;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else { //if materialMode==2 this is a MultiPassTexture\r\n\t\t\t\t\t\ttm = <MethodMaterial> mesh.material;\r\n\t\t\t\t\t\ttm.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\t\ttm.texture = lm.texture;\r\n\t\t\t\t\t\ttm.color = lm.color;\r\n\t\t\t\t\t\ttm.repeat = true;\r\n\r\n\t\t\t\t\t\tif (lm.specularMethod) {\r\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\r\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\r\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\r\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\r\n\t\t\t\t\t\t\ttm.specularMethod = null;\r\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\r\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\r\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\r\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\r\n\r\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\r\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmesh.material.name = decomposeID[1]? decomposeID[1] : decomposeID[0];\r\n\t\t\t\tthis._meshes.splice(i, 1);\r\n\t\t\t\t--i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lm.cm || tm)\r\n\t\t\tthis._pFinalizeAsset(lm.cm || tm);\r\n\t}\r\n\r\n\tprivate applyMaterials()\r\n\t{\r\n\t\tif (this._materialLoaded.length == 0)\r\n\t\t\treturn;\r\n\r\n\t\tfor (var i:number = 0; i < this._materialLoaded.length; ++i)\r\n\t\t\tthis.applyMaterial(this._materialLoaded[i]);\r\n\t}\r\n}\r\n\r\nexport = OBJParser;\r\n\r\nclass ObjectGroup\r\n{\r\n\tpublic name:string;\r\n\tpublic groups:Group[] = new Array<Group>();\r\n}\r\n\r\nclass Group\r\n{\r\n\tpublic name:string;\r\n\tpublic materialID:string;\r\n\tpublic materialGroups:MaterialGroup[] = new Array<MaterialGroup>();\r\n}\r\n\r\nclass MaterialGroup\r\n{\r\n\tpublic url:string;\r\n\tpublic faces:FaceData[] = new Array<FaceData>();\r\n}\r\n\r\nclass SpecularData\r\n{\r\n\tpublic materialID:string;\r\n\tpublic basicSpecularMethod:SpecularBasicMethod;\r\n\tpublic color:number = 0xFFFFFF;\r\n\tpublic alpha:number = 1;\r\n}\r\n\r\nclass LoadedMaterial\r\n{\r\n\tpublic materialID:string;\r\n\tpublic texture:Single2DTexture;\r\n\tpublic cm:MaterialBase;\r\n\tpublic specularMethod:SpecularBasicMethod;\r\n\tpublic color:number = 0xFFFFFF;\r\n\tpublic alpha:number = 1;\r\n}\r\n\r\nclass FaceData\r\n{\r\n\tpublic vertexIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic uvIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic normalIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic indexIds:string[] = new Array<string>(); // used for real index lookups\r\n}\r\n\r\n/**\r\n* Texture coordinates value object.\r\n*/\r\nclass UV\r\n{\r\n\tprivate _u:number;\r\n\tprivate _v:number;\r\n\r\n\t/**\r\n\t * Creates a new <code>UV</code> object.\r\n\t *\r\n\t * @param    u        [optional]    The horizontal coordinate of the texture value. Defaults to 0.\r\n\t * @param    v        [optional]    The vertical coordinate of the texture value. Defaults to 0.\r\n\t */\r\n\tconstructor(u:number = 0, v:number = 0)\r\n\t{\r\n\t\tthis._u = u;\r\n\t\tthis._v = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the vertical coordinate of the texture value.\r\n\t */\r\n\tpublic get v():number\r\n\t{\r\n\t\treturn this._v;\r\n\t}\r\n\r\n\tpublic set v(value:number)\r\n\t{\r\n\t\tthis._v = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the horizontal coordinate of the texture value.\r\n\t */\r\n\tpublic get u():number\r\n\t{\r\n\t\treturn this._u;\r\n\t}\r\n\r\n\tpublic set u(value:number)\r\n\t{\r\n\t\tthis._u = value;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new UV value Object\r\n\t */\r\n\tpublic clone():UV\r\n\t{\r\n\t\treturn new UV(this._u, this._v);\r\n\t}\r\n\r\n\t/**\r\n\t * returns the value object as a string for trace/debug purpose\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn this._u + \",\" + this._v;\r\n\t}\r\n}\r\n\r\nclass Vertex\r\n{\r\n\tprivate _x:number;\r\n\tprivate _y:number;\r\n\tprivate _z:number;\r\n\tprivate _index:number;\r\n\r\n\t/**\r\n\t * Creates a new <code>Vertex</code> value object.\r\n\t *\r\n\t * @param    x            [optional]    The x value. Defaults to 0.\r\n\t * @param    y            [optional]    The y value. Defaults to 0.\r\n\t * @param    z            [optional]    The z value. Defaults to 0.\r\n\t * @param    index        [optional]    The index value. Defaults is NaN.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, index:number = 0)\r\n\t{\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._index = index;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the index of value object\r\n\t * @param    ind        The index\r\n\t */\r\n\tpublic set index(ind:number)\r\n\t{\r\n\t\tthis._index = ind;\r\n\t}\r\n\r\n\tpublic get index():number\r\n\t{\r\n\t\treturn this._index;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the x value of the value object\r\n\t * @param    value        The x value\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tthis._x = value;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the y value of the value object\r\n\t * @param    value        The y value\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tthis._y = value;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the z value of the value object\r\n\t * @param    value        The z value\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(value:number)\r\n\t{\r\n\t\tthis._z = value;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new Vertex value Object\r\n\t */\r\n\tpublic clone():Vertex\r\n\t{\r\n\t\treturn new Vertex(this._x, this._y, this._z);\r\n\t}\r\n}",
    "import AssetLoader\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\n\r\nimport AWDParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWDParser\");\r\nimport Max3DSParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/Max3DSParser\");\r\nimport MD2Parser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/MD2Parser\");\r\nimport OBJParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/OBJParser\");\r\n\r\n/**\r\n *\r\n */\r\nclass Parsers\r\n{\r\n\t/**\r\n\t * A list of all parsers that come bundled with Away3D. Use this to quickly\r\n\t * enable support for all bundled parsers to the file format auto-detection\r\n\t * feature, using any of the enableParsers() methods on loaders, e.g.:\r\n\t *\r\n\t * <code>AssetLibrary.enableParsers(Parsers.ALL_BUNDLED);</code>\r\n\t *\r\n\t * Beware however that this requires all parser classes to be included in the\r\n\t * SWF file, which will add 50-100 kb to the file. When only a limited set of\r\n\t * file formats are used, SWF file size can be saved by adding the parsers\r\n\t * individually using AssetLibrary.enableParser()\r\n\t *\r\n\t * A third way is to specify a parser for each loaded file, thereby bypassing\r\n\t * the auto-detection mechanisms altogether, while at the same time allowing\r\n\t * any properties that are unique to that parser to be set for that load.\r\n\t *\r\n\t * The bundled parsers are:\r\n\t *\r\n\t * <ul>\r\n\t * <li>AC3D (.ac)</li>\r\n\t * <li>Away Data version 1 ASCII and version 2 binary (.awd). AWD1 BSP unsupported</li>\r\n\t * <li>3DMax (.3ds)</li>\r\n\t * <li>DXF (.dxf)</li>\r\n\t * <li>Quake 2 MD2 models (.md2)</li>\r\n\t * <li>Doom 3 MD5 animation clips (.md5anim)</li>\r\n\t * <li>Doom 3 MD5 meshes (.md5mesh)</li>\r\n\t * <li>Wavefront OBJ (.obj)</li>\r\n\t * <li>Collada (.dae)</li>\r\n\t * <li>Images (.jpg, .png)</li>\r\n\t * </ul>\r\n\t *\r\n\t * @see away.library.AssetLibrary.enableParser\r\n\t */\r\n\tpublic static ALL_BUNDLED:Array<Object> = Array<Object>(AWDParser, Max3DSParser, MD2Parser, OBJParser);\r\n\r\n\t/**\r\n\t * Short-hand function to enable all bundled parsers for auto-detection. In practice,\r\n\t * this is the same as invoking enableParsers(Parsers.ALL_BUNDLED) on any of the\r\n\t * loader classes SingleFileLoader, AssetLoader, AssetLibrary or Loader3D.\r\n\t *\r\n\t * See notes about file size in the documentation for the ALL_BUNDLED constant.\r\n\t *\r\n\t * @see away.parsers.Parsers.ALL_BUNDLED\r\n\t */\r\n\tpublic static enableAllBundled():void\r\n\t{\r\n\t\tAssetLoader.enableParsers(Parsers.ALL_BUNDLED);\r\n\t}\r\n}\r\n\r\nexport = Parsers;"
  ],
  "sourceRoot": ""
}