{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase.ts",
    "awayjs-parsers.js",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser.ts",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBlock.ts",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDProperties.ts",
    "awayjs-parsers/lib/AWD3Parser.ts",
    "awayjs-parsers/lib/AWDParser.ts",
    "awayjs-parsers/lib/MD2Parser.ts",
    "awayjs-parsers/lib/MD5AnimParser.ts",
    "awayjs-parsers/lib/MD5MeshParser.ts",
    "awayjs-parsers/lib/Max3DSParser.ts",
    "awayjs-parsers/lib/OBJParser.ts",
    "awayjs-parsers/lib/Parsers.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase",
    "module",
    "AbstractMethodError",
    "AWDAssetParserBase",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "this",
    "_awd_file_data",
    "set",
    "awd_file_data",
    "enumerable",
    "configurable",
    "parseFromBytes",
    "awayjs-core/lib/errors/AbstractMethodError",
    "undefined",
    "awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers",
    "GeometryAWDParser",
    "PrefabAWDParser",
    "DisplayObjectContainerAWDParser",
    "MeshAWDParser",
    "BillboardAWDParser",
    "Single2DTextureAWDParser",
    "CameraAWDParser",
    "SingleCubeTextureAWDParser",
    "LightAWDParser",
    "LightPickerAWDParser",
    "MaterialAWDParser",
    "MovieClipAWDParser",
    "ShadowMethodAWDParser",
    "SharedMethodAWDParser",
    "SkeletonAnimClipAWDParser",
    "SkeletonAWDParser",
    "SkeletonPoseAWDParser",
    "SkyboxAWDParser",
    "TesselatedFontAWDParser",
    "TextfieldAWDParser",
    "TextformatAWDParser",
    "VertexAnimationSetAWDParser",
    "VertexAnimClipAWDParser",
    "CommandAWDParser",
    "MetadataAWDParser",
    "BlockNameSpaceAWDParser",
    "AnimatorAWDParser",
    "AudioAWDParser",
    "AWDBlockParsers",
    "_supported_asset_blocks",
    "_all_block_parsers",
    "Array",
    "add_block_parser",
    "block_parser",
    "block_types",
    "push",
    "init_parser",
    "file_data",
    "parseAsset",
    "type",
    "this_parser",
    "awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser",
    "awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser",
    "__extends",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "AWDBlockParserBase",
    "VertexAnimator",
    "SkeletonAnimator",
    "AWD3Utils",
    "_super",
    "animSetBlockAdress",
    "targetAnimationSet",
    "cur_block",
    "name",
    "parseVarStr",
    "newBlockBytes",
    "readUnsignedShort",
    "props",
    "parseProperties",
    1,
    "BADDR",
    "readUnsignedInt",
    "targetMeshLength",
    "meshAdresses",
    "activeState",
    "autoplay",
    "readUnsignedByte",
    "parseUserAttributes",
    "returnedArray",
    "targetMeshes",
    "targetMesh",
    "getAssetByID",
    "thisAnimator",
    "skeleton",
    "animator",
    "data",
    "debug",
    "console",
    "log",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "ByteArray",
    "data_len",
    "url",
    "readUTFBytes",
    "dependencies_urls",
    "readBytes",
    "dependencies_data",
    "state",
    "BLOCKSTATE_LOAD_DEPENDENICES",
    "audioStylesNames",
    "awayjs-core/lib/utils/ByteArray",
    "Billboard",
    "BasicMaterial",
    "data_id",
    "mat",
    "bothSides",
    "billboard",
    "extra",
    "awayjs-display/lib/entities/Billboard",
    "awayjs-display/lib/materials/BasicMaterial",
    "BLOCKSTATE_NO_ASSET",
    "id",
    "nameSpaceString",
    "Camera",
    "PerspectiveProjection",
    "OrthographicProjection",
    "OrthographicOffCenterProjection",
    "Vector3D",
    "CameraAWD3Parser",
    "par_id",
    "mtx",
    "parseMatrix3D",
    "parentName",
    "projection",
    "readShort",
    "projectiontype",
    101,
    "propsNrType",
    102,
    103,
    104,
    "camera",
    "transform",
    "matrix3D",
    "parent",
    "addChild",
    "matrixNrType",
    2,
    3,
    4,
    "UINT8",
    "pivot",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "awayjs-core/lib/projections/OrthographicProjection",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/Camera",
    "hasBlocks",
    "parentObject",
    "targetObject",
    "numCommands",
    "typeCommand",
    "targetID",
    "DisplayObjectContainer",
    "ctr",
    "major_version",
    "minor_version",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "AttributesBuffer",
    "Geometry",
    "CurveSubGeometry",
    "TriangleSubGeometry",
    "geom",
    "num_subs",
    "geoNrType",
    "geoScaleU",
    "geoScaleV",
    "subs_parsed",
    "is_curve_geom",
    "sm_len",
    "sm_end",
    "w_indices",
    "weights",
    "position",
    "subProps",
    "idx",
    "str_ftype",
    "str_type",
    "str_len",
    "str_end",
    "x",
    "y",
    "z",
    "verts",
    "readNumber",
    "accuracyGeo",
    "indices",
    "uvs",
    "normals",
    "idx_pos",
    "idx_curves",
    "idx_uvs",
    "positions",
    "curveData",
    "curve_sub_geom",
    "setIndices",
    "setPositions",
    "setCurves",
    "setUVs",
    "addSubGeometry",
    "triangle_sub_geom",
    "jointsPerVertex",
    "autoDeriveNormals",
    "autoDeriveUVs",
    "autoDeriveTangents",
    "setNormals",
    "setTangents",
    "setJointWeights",
    "setJointIndices",
    "scaleU",
    "scaleV",
    "setSubUVs",
    "scaleUV",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/base/CurveSubGeometry",
    "awayjs-display/lib/base/Geometry",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "CubeMapShadowMapper",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "PointLight",
    "light",
    "newShadowMapper",
    "lightType",
    "COLOR",
    5,
    6,
    "BOOL",
    7,
    8,
    9,
    10,
    11,
    12,
    "UINT16",
    21,
    22,
    23,
    "shadowMapperType",
    "lightTypes",
    "shadowMapperTypes",
    "radius",
    "fallOff",
    "color",
    "specular",
    "diffuse",
    "ambientColor",
    "ambient",
    "depthMapSize",
    "getDepthSizeFromEnum",
    "shadowMapper",
    "castsShadows",
    "awayjs-display/lib/entities/DirectionalLight",
    "awayjs-display/lib/entities/PointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "StaticLightPicker",
    "numLights",
    "lightsArray",
    "k",
    "lightID",
    "returnedArrayLight",
    "lightsArrayNames",
    "lightPicker",
    "toString",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "MethodMaterialMode",
    "MethodMaterial",
    "DefaultMaterialManager",
    "AmbientEnvMapMethod",
    "DiffuseDepthMethod",
    "DiffuseCelMethod",
    "DiffuseGradientMethod",
    "DiffuseLightMapMethod",
    "DiffuseWrapMethod",
    "NormalSimpleWaterMethod",
    "SpecularFresnelMethod",
    "SpecularAnisotropicMethod",
    "SpecularCelMethod",
    "SpecularPhongMethod",
    "attributes",
    "finalize",
    "num_methods",
    "methods_parsed",
    "normalTexture",
    "specTexture",
    "INT32",
    13,
    "method_type",
    "debugString",
    "tex_addr",
    "texture",
    "getDefaultTexture",
    "alphaThreshold",
    "repeat",
    "UINT32",
    15,
    16,
    17,
    18,
    19,
    20,
    "spezialType",
    "mode",
    "MULTI_PASS",
    "alphaBlending",
    "diftexture",
    "alpha",
    "diffuseTex_addr",
    "diffuseTexture",
    "normalTex_addr",
    "specTex_addr",
    "lightPickerAddr",
    "smooth",
    "mipmap",
    "alphaPremultiplied",
    "blendMode",
    "getBlendModeStringFromEnum",
    "normalMap",
    "specularMap",
    "diffuseColor",
    "gloss",
    "specularColor",
    201,
    202,
    301,
    302,
    401,
    402,
    601,
    602,
    701,
    702,
    801,
    "MTX4x4",
    "fx_method",
    "addEffectMethod",
    "shadow_method",
    "shadowMethod",
    "cubeTex",
    "getDefaultCubeTexture",
    "ambientMethod",
    "diffuseMethod",
    "thisTex",
    "smoothness",
    "specularMethod",
    "fresnelPower",
    "normalReflectance",
    "normalMethod",
    "basic_mat",
    "preserveAlpha",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-methodmaterials/lib/MethodMaterial",
    "awayjs-methodmaterials/lib/MethodMaterialMode",
    "awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseCelMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseDepthMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseGradientMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseWrapMethod",
    "awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod",
    "awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod",
    "awayjs-methodmaterials/lib/methods/SpecularCelMethod",
    "awayjs-methodmaterials/lib/methods/SpecularFresnelMethod",
    "awayjs-methodmaterials/lib/methods/SpecularPhongMethod",
    "Mesh",
    "num_materials",
    "materials_parsed",
    "geoID",
    "materials",
    "materialNames",
    "mat_id",
    "m",
    "mesh",
    "subMeshes",
    "material",
    "Math",
    "min",
    "awayjs-display/lib/entities/Mesh",
    "AWDSTRING",
    "AWDBitFlags",
    "ColorTransform",
    "Matrix3D",
    "TimelineKeyFrame",
    "AddChildAtDepthCommand",
    "ApplyAS2DepthsCommand",
    "ExecuteScriptCommand",
    "RemoveChildrenAtDepthCommand",
    "SetInstanceNameCommand",
    "UpdatePropertyCommand",
    "SetMaskCommand",
    "TextField",
    "AS2SceneGraphFactory",
    "factory",
    "j",
    "c",
    "new_mc",
    "createMovieClip",
    "isScene",
    "sceneID",
    "fps",
    "readFloat",
    "ms_per_frame",
    "num_instances",
    "num_all_display_instances",
    "num_potential_childs",
    "resourceID",
    "cmd_asset",
    "registerPotentialChild",
    "num_potential_childs_multi_instanced",
    "num_potential_sounds",
    "numFrames",
    "totalDuration",
    "frameDuration",
    "numLabels",
    "objectID",
    "target_depth",
    "number_of_obj",
    "commandType",
    "frame",
    "label",
    "hasDepthChanges",
    "setFrameTime",
    "remove_depths",
    "addConstructCommand",
    "potChild",
    "getPotentialChildPrototype",
    "isAsset",
    "props_flag",
    "test",
    "FLAG1",
    "thisMatrix",
    "FLAG2",
    "rawData",
    "FLAG3",
    "thisColorTransform",
    "FLAG4",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "FLAG5",
    "blendmode_int",
    "blendmode_string",
    "FLAG6",
    "readByte",
    "FLAG7",
    "instanceName",
    "FLAG8",
    "mask_id_nums",
    "mask_ids",
    "mi_cnt",
    "length_code",
    "frame_code",
    "addPostConstructCommand",
    "addFrame",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-display/lib/entities/TextField",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags",
    "awayjs-player/lib/factories/AS2SceneGraphFactory",
    "awayjs-player/lib/timeline/TimelineKeyFrame",
    "awayjs-player/lib/timeline/commands/AddChildAtDepthCommand",
    "awayjs-player/lib/timeline/commands/ApplyAS2DepthsCommand",
    "awayjs-player/lib/timeline/commands/ExecuteScriptCommand",
    "awayjs-player/lib/timeline/commands/RemoveChildrenAtDepthCommand",
    "awayjs-player/lib/timeline/commands/SetInstanceNameCommand",
    "awayjs-player/lib/timeline/commands/SetMaskCommand",
    "awayjs-player/lib/timeline/commands/UpdatePropertyCommand",
    "PrefabBase",
    "PrimitiveCapsulePrefab",
    "PrimitiveConePrefab",
    "PrimitiveCubePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitivePlanePrefab",
    "PrimitiveSpherePrefab",
    "PrimitiveTorusPrefab",
    "prefab",
    "primType",
    "bsm",
    110,
    111,
    303,
    703,
    704,
    "primitiveTypes",
    "topClosed",
    "bottomClosed",
    "yUp",
    "awayjs-display/lib/prefabs/PrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "ShadowDitheredMethod",
    "ShadowFilteredMethod",
    "ShadowHardMethod",
    "ShadowNearMethod",
    "ShadowSoftMethod",
    "asset",
    "shadowLightID",
    "parseShadowMethodList",
    "methodType",
    "shadow_meth",
    "epsilon",
    "range",
    "awayjs-methodmaterials/lib/methods/ShadowDitheredMethod",
    "awayjs-methodmaterials/lib/methods/ShadowFilteredMethod",
    "awayjs-methodmaterials/lib/methods/ShadowHardMethod",
    "awayjs-methodmaterials/lib/methods/ShadowNearMethod",
    "awayjs-methodmaterials/lib/methods/ShadowSoftMethod",
    "EffectColorMatrixMethod",
    "EffectColorTransformMethod",
    "EffectFogMethod",
    "EffectRimLightMethod",
    "parseSharedMethodList",
    "effectMethodReturn",
    105,
    106,
    107,
    "offCol",
    "colorTransform",
    "awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod",
    "awayjs-methodmaterials/lib/methods/EffectColorTransformMethod",
    "awayjs-methodmaterials/lib/methods/EffectFogMethod",
    "awayjs-methodmaterials/lib/methods/EffectRimLightMethod",
    "textureStylesNames",
    "Skeleton",
    "SkeletonJoint",
    "num_joints",
    "joints_parsed",
    "joint",
    "ibp",
    "parentIndex",
    "inverseBindPose",
    "joints",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonClipNode",
    "frame_dur",
    "pose_addr",
    "clip",
    "num_frames",
    "frames_parsed",
    "skel_pose",
    "frames",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "SkeletonPose",
    "JointPose",
    "pose",
    "joint_pose",
    "has_transform",
    "mtx_data",
    "parseMatrix43RawData",
    "orientation",
    "fromMatrix",
    "translation",
    "copyFrom",
    "jointPoses",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "Skybox",
    "cubeTexAddr",
    "cube_tex",
    "new_skybox",
    "awayjs-display/lib/entities/Skybox",
    "Font",
    "new_font",
    "font_style_cnt",
    "font_style_name",
    "new_font_style",
    "get_font_table",
    "set_font_em_size",
    "font_style_char_cnt",
    "font_style_char",
    "set_subgeo_for_char",
    "awayjs-display/lib/text/Font",
    "TextFormat",
    "newTextField",
    "createTextField",
    "text_field_type",
    "displayAsPassword",
    "width",
    "height",
    "num_paragraphs",
    "complete_text",
    "text_format",
    "paracnt",
    "num_textruns",
    "textrun_cnt",
    "format_id",
    "textFormat",
    "txt_length",
    "this_txt",
    "text",
    "selectable",
    "border",
    "awayjs-display/lib/text/TextFormat",
    "newTextFormat",
    "font_id",
    "font",
    "font_name",
    "font_table",
    "font_style",
    "num_uv_values",
    "uv_values",
    "uvcnt",
    "uv_value",
    "format_props",
    "size",
    "letterSpacing",
    "kerning",
    "indent",
    "leftMargin",
    "rightMargin",
    "VertexClipNode",
    "poseOnly",
    "num_submeshes",
    "subMeshParsed",
    "geometry",
    "subGeom",
    "num_Streams",
    "streamsParsed",
    "streamtypes",
    "thisGeo",
    "geoAdress",
    "getUVForVertexAnimation",
    "looping",
    "stitchFinalFrame",
    "subGeometries",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexAnimationSet",
    "SkeletonAnimationSet",
    "poseBlockAdress",
    "skeletonFrames",
    "vertexFrames",
    "animNode",
    "newVertexAnimationSet",
    "addAnimation",
    "animations",
    "animationNames",
    "newSkeletonAnimationSet",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData",
    "BitmapImageCube",
    "BlendMode",
    "SingleCubeTexture",
    "Single2DTexture",
    "AWDProperties",
    "AWDBlock",
    "AWD3FileData",
    "_debug",
    "_accuracyOnBlocks",
    "_blocks",
    "_cur_block",
    "blendModeDic",
    "NORMAL",
    "ADD",
    "ALPHA",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "_depthSizeDic",
    "depthSize",
    "blendmode",
    "dispose",
    "_accuracyMatrix",
    "new_accuracyMatrix",
    "_accuracyProps",
    "new_accuracyProps",
    "_accuracyGeo",
    "new_accuracyGeo",
    "_matrixNrType",
    "newmatrixNrType",
    "_propsNrType",
    "new_props_nr",
    "_geoNrType",
    "new_geoNrType",
    "_newBlockBytes",
    "new_newBlockBytes",
    "create_new_block",
    "new_block",
    "block_cnt",
    "list_len",
    "attibuteCnt",
    "list_end",
    "ns_id",
    "attr_key",
    "attr_type",
    "attr_len",
    "attr_val",
    "INT8",
    "INT16",
    "readInt",
    "FLOAT32",
    "FLOAT64",
    "readDouble",
    "expected",
    "propertyCnt",
    "len",
    "key",
    "parseAttrValue",
    "elem_len",
    "read_func",
    "VECTOR2x1",
    "VECTOR3x1",
    "VECTOR4x1",
    "MTX3x2",
    "MTX3x3",
    "MTX4x3",
    "list",
    "num_read",
    "num_elems",
    "apply",
    "val",
    "meshID",
    "uvsForVertexAnimation",
    "geoCnt",
    "sub_geom",
    "numVertices",
    "getBlockByID",
    "assetID",
    "getDefaultAsset",
    "assetType",
    "getDefaultMaterial",
    "_defaultCubeTexture",
    "defaultBitmap",
    "createCheckeredBitmapImage2D",
    "bitmapImageCube",
    "draw",
    "precision",
    "parseMatrix32RawData",
    "mtx_raw",
    "isNaN",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDBlock",
    "awayjs-parsers/lib/AWD3ParserUtils/AWDProperties",
    "BLOCKSTATE_FINALIZE",
    "BLOCKSTATE_INVALID",
    "COMPRESSIONMODE_LZMA",
    "UNCOMPRESSED",
    "DEFLATE",
    "LZMA",
    "AWDBYTEARRAY",
    "flags",
    "testFlag",
    "FLAG9",
    "FLAG10",
    "FLAG11",
    "FLAG12",
    "FLAG13",
    "FLAG14",
    "FLAG15",
    "FLAG16",
    "this_id",
    "this_type",
    "loaded_dependencies",
    "loaded_dependencies_cnt",
    "bytes",
    "errorMessages",
    "addError",
    "errorMsg",
    "value",
    "fallback",
    "awayjs-parsers/lib/AWD3Parser",
    "URLLoaderDataFormat",
    "URLRequest",
    "ParserBase",
    "ParserUtils",
    "DisplayObject",
    "AWDAssetParsers",
    "AWD3Parser",
    "ARRAY_BUFFER",
    "_startedParsing",
    "_parsed_header",
    "total_time",
    "geom_time",
    "timeline_time",
    "_block_parser",
    "_awd_data",
    "supportsType",
    "extension",
    "toLowerCase",
    "supportsData",
    "_iResolveDependency",
    "resourceDependency",
    "assets",
    "this_block",
    "parseInt",
    "testure_asset",
    "_pFinalizeAsset",
    "sub_id",
    "cube_image_asset",
    "cube_tex_asset",
    "_iResolveDependencyFailure",
    "_iResolveDependencyName",
    "oldName",
    "block",
    "resetAssetPath",
    "newName",
    "_pProceedParsing",
    "_byteData",
    "_pGetByteData",
    "parseHeader",
    "_compression",
    "_pDieWithError",
    "_body",
    "getBytesAvailable",
    "parsingPaused",
    "parseNextBlock",
    "PARSING_DONE",
    "MORE_TO_PARSE",
    "_pStartParsing",
    "frameLimit",
    "_pContent",
    "block_id",
    "ns",
    "block_type",
    "blockCompression",
    "blockCompressionLZMA",
    "accuracyOnBlocks",
    "accuracyMatrix",
    "accuracyProps",
    "blockEndAll",
    "time_start",
    "performance",
    "now",
    "_pAddDependency",
    "byteArrayToImage",
    "_pPauseAndRetrieveDependencies",
    "time_end",
    "thisTime",
    "body_len",
    "_streaming",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/net/URLRequest",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-display/lib/base/DisplayObject",
    "awayjs-parsers/lib/AWDParser",
    "Float3Attributes",
    "Float2Attributes",
    "AnimationNodeBase",
    "LightBase",
    "LightPickerBase",
    "PrimitivePrefabBase",
    "AnimationSetBase",
    "EffectAlphaMaskMethod",
    "EffectEnvMapMethod",
    "EffectFresnelEnvMapMethod",
    "EffectLightMapMethod",
    "EffectMethodBase",
    "ShadowMapMethodBase",
    "SetButtonCommand",
    "AWDParser",
    "_texture_users",
    "_time_all",
    "_time_geom",
    "_time_timeline",
    "_time_fonts",
    "_time_textfields",
    "_time_sounds",
    "_time_textures",
    "_time_materials",
    "_time_meshes",
    "_version",
    "texture_asset",
    "audio_asset",
    "assetData",
    "isParsed",
    "start_timeing",
    "_cur_block_id",
    "BitFlags",
    "blockEndBlock",
    "parseMeshLibraryBlock",
    "parseBillBoardLibraryBlock",
    "parseAudioBlock",
    "parseTimeLine",
    "paresTextField",
    "parseTesselatedFont",
    "parseTextFormat",
    "parsePrimitves",
    "parseSkyboxInstance",
    "parseLight",
    "parseCamera",
    "parseLightPicker",
    "parseMaterial_v1",
    "parseCubeTexture",
    "parseSharedMethodBlock",
    "parseShadowMethodBlock",
    "parseMeshPoseAnimation",
    "parseVertexAnimationSet",
    "parseAnimatorSet",
    "parseCommand",
    "parseTriangleGeometrieBlock",
    "parseContainer",
    "parseMeshInstance",
    "parseMaterial",
    "parseTexture",
    "parseSkeleton",
    "parseSkeletonPose",
    "parseSkeletonAnimation",
    "parseNameSpace",
    "parseMetaData",
    "msgCnt",
    "end_timing",
    "time_delta",
    "blockID",
    "vertexBuffer",
    "bufferView",
    "Uint8Array",
    "arraybytes",
    "returnArrayFont",
    "returnedArrayMaterial",
    "textFormatArray",
    "returnedArrayGeometry",
    "useColorTransform",
    "extras",
    "timeLineContainer",
    "obj",
    "isPrefab",
    "returnedArrayGeometry2",
    "getNewObject",
    "returnedArrayParent",
    "objC",
    "returnedArrayCubeTex",
    "lightPick",
    "materialMode",
    "_cubeBitmaps",
    "returnedArrayTarget",
    "outputString",
    "assetTypesToGet",
    "returnArray",
    "typeCnt",
    "iasset",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "awayjs-display/lib/base/LightBase",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod",
    "awayjs-methodmaterials/lib/methods/EffectEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectLightMapMethod",
    "awayjs-methodmaterials/lib/methods/EffectMethodBase",
    "awayjs-methodmaterials/lib/methods/ShadowMapMethodBase",
    "awayjs-player/lib/timeline/commands/SetButtonCommand",
    "awayjs-renderergl/lib/animators/AnimationSetBase",
    "awayjs-parsers/lib/MD2Parser",
    "MD2Parser",
    "textureType",
    "ignoreTexturePath",
    "_clipNodes",
    "_animationSet",
    "materialFinal",
    "geoCreated",
    "_textureType",
    "_ignoreTexturePath",
    "_mesh",
    "_pHasTime",
    "_parsedHeader",
    "_geometry",
    "parseMaterialNames",
    "_parsedUV",
    "parseUV",
    "_parsedFaces",
    "parseFaces",
    "_parsedFrames",
    "parseFrames",
    "_firstSubGeom",
    "clone",
    "_ident",
    "_skinWidth",
    "_skinHeight",
    "_numSkins",
    "_numVertices",
    "_numST",
    "_numTris",
    "_numFrames",
    "_offsetSkins",
    "_offsetST",
    "_offsetTris",
    "_offsetFrames",
    "_offsetEnd",
    "extIndex",
    "slashIndex",
    "_materialNames",
    "regExp",
    "RegExp",
    "replace",
    "lastIndexOf",
    "indexOf",
    "substring",
    "dependencies",
    "_uvs",
    "ta",
    "tb",
    "tc",
    "_vertIndices",
    "_uvIndices",
    "_indices",
    "addIndex",
    "_finalUV",
    "vertexIndex",
    "uvIndex",
    "index",
    "findIndex",
    "sx",
    "sy",
    "sz",
    "tx",
    "ty",
    "tz",
    "vertLen",
    "fvertices",
    "tvertices",
    "prevClip",
    "readFrameName",
    "FPS",
    "ch",
    "floor",
    "String",
    "fromCharCode",
    "awayjs-parsers/lib/MD5AnimParser",
    "Quaternion",
    "MD5AnimParser",
    "additionalRotationAxis",
    "additionalRotationRadians",
    "TEXT",
    "_parseIndex",
    "_line",
    "_charLineIndex",
    "_rotationQuat",
    "t1",
    "t2",
    "fromAxisAngle",
    "X_AXIS",
    "PI",
    "Y_AXIS",
    "multiply",
    "token",
    "_textData",
    "_pGetTextData",
    "getNextToken",
    "COMMENT_TOKEN",
    "ignoreLine",
    "VERSION_TOKEN",
    "getNextInt",
    "COMMAND_LINE_TOKEN",
    "parseCMD",
    "NUM_FRAMES_TOKEN",
    "_bounds",
    "_frameData",
    "NUM_JOINTS_TOKEN",
    "_numJoints",
    "_hierarchy",
    "_baseFrameData",
    "FRAME_RATE_TOKEN",
    "_frameRate",
    "NUM_ANIMATED_COMPONENTS_TOKEN",
    "_numAnimatedComponents",
    "HIERARCHY_TOKEN",
    "parseHierarchy",
    "BOUNDS_TOKEN",
    "parseBounds",
    "BASE_FRAME_TOKEN",
    "parseBaseFrame",
    "FRAME_TOKEN",
    "parseFrame",
    "_reachedEOF",
    "sendUnknownKeywordError",
    "_clip",
    "translateClip",
    "translatePose",
    "frameData",
    "hierarchy",
    "base",
    "translate",
    "components",
    "skelPose",
    "startIndex",
    "w",
    "sqrt",
    "rotatePoint",
    "sendEOFError",
    "HierarchyData",
    "parseLiteralstring",
    "getNextChar",
    "putBack",
    "BoundsData",
    "parseVector3D",
    "max",
    "BaseFrameData",
    "parseQuaternion",
    "frameIndex",
    "FrameData",
    "getNextNumber",
    "skipWhiteSpace",
    "charAt",
    "sendParseError",
    "parseFloat",
    "vec",
    "quat",
    "str",
    "awayjs-core/lib/geom/Quaternion",
    "awayjs-parsers/lib/MD5MeshParser",
    "MD5MeshParser",
    "_bindPoses",
    "NUM_MESHES_TOKEN",
    "_numMeshes",
    "JOINTS_TOKEN",
    "parseJoints",
    "MESH_TOKEN",
    "parseMesh",
    "calculateMaxJointCount",
    "_maxJointCount",
    "_meshData",
    "translateGeom",
    "vertexData",
    "weightData",
    "_skeleton",
    "numMeshData",
    "meshData",
    "numVerts",
    "zeroWeights",
    "countZeroWeightJoints",
    "totalJoints",
    "countWeight",
    "vertex",
    "start",
    "startWeight",
    "end",
    "count",
    "weight",
    "bias",
    "pos",
    "toMatrix3D",
    "appendTranslation",
    "inv",
    "invert",
    "_shaders",
    "MESH_SHADER_TOKEN",
    "MESH_NUM_VERTS_TOKEN",
    "MESH_NUM_TRIS_TOKEN",
    "MESH_NUM_WEIGHTS_TOKEN",
    "MESH_VERT_TOKEN",
    "parseVertex",
    "MESH_TRI_TOKEN",
    "parseTri",
    "MESH_WEIGHT_TOKEN",
    "parseJoint",
    "MeshData",
    "v1",
    "v2",
    "v3",
    "bindPose",
    "vertices",
    "jointIndices",
    "jointWeights",
    "nonZeroWeights",
    "transformVector",
    "JointData",
    "VertexData",
    "rotQuat",
    "awayjs-parsers/lib/Max3DSParser",
    "BitmapImage2D",
    "Max3DSParser",
    "useSmoothingGroups",
    "_useSmoothingGroups",
    "ba",
    "toByteArray",
    "tex",
    "_textures",
    "_materials",
    "_unfinalized_objects",
    "_cur_mat",
    "_cur_mat_end",
    "finalizeCurrentMaterial",
    "_cur_obj",
    "_cur_obj_end",
    "Number",
    "MAX_VALUE",
    "cid",
    "ObjectVO",
    "readNulTermstring",
    "materialFaces",
    "parseVertexList",
    "parseFaceList",
    "parseUVList",
    "parseFaceMaterialList",
    "readTransform",
    "parseObjectAnimation",
    "parseSmoothingGroups",
    "constructObject",
    "MaterialVO",
    "readColor",
    "twoSided",
    "colorMap",
    "TextureVO",
    "i0",
    "i1",
    "i2",
    "smoothingGroups",
    "faces",
    "vo",
    "hier",
    "sub",
    "prepareData",
    "applySmoothGroups",
    "v",
    "mname",
    "dat",
    "concat",
    "scaleBy",
    "applyTransformation",
    "VertexVO",
    "FaceVO",
    "smoothGroup",
    "numFaces",
    "vGroups",
    "face",
    "groups",
    "group",
    "splice",
    "vClones",
    "clones",
    "v0",
    "chr",
    "g",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-parsers/lib/OBJParser",
    "SpecularBasicMethod",
    "OBJParser",
    "scale",
    "_mtlLibLoaded",
    "_activeMaterialID",
    "_scale",
    "content",
    "hasV",
    "hasF",
    "parseMtl",
    "lm",
    "LoadedMaterial",
    "materialID",
    "_materialLoaded",
    "_meshes",
    "applyMaterial",
    "_mtlLib",
    "line",
    "creturn",
    "trunk",
    "_vertices",
    "_vertexNormals",
    "_materialIDs",
    "_stringLength",
    "_charIndex",
    "_oldIndex",
    "_objects",
    "_objectIndex",
    "split",
    "join",
    "parseLine",
    "applyMaterials",
    "loadMtl",
    "createGroup",
    "createObject",
    "_currentGroup",
    "parseVertexNormal",
    "parseFace",
    "objIndex",
    "numGroups",
    "materialGroups",
    "numMaterialGroups",
    "sm",
    "bmMaterial",
    "translateMaterialGroup",
    "_lastMtlID",
    "materialGroup",
    "_realIndices",
    "_vertexIndex",
    "indexIds",
    "translateVertexData",
    "vertexNormal",
    "uv",
    "vertexIndices",
    "normalIndices",
    "uvIndices",
    "_currentMaterialGroup",
    "_currentObject",
    "ObjectGroup",
    "Group",
    "createMaterialGroup",
    "MaterialGroup",
    "nTrunk",
    "Vertex",
    "UV",
    "FaceData",
    "parseIndex",
    "materialDefinitions",
    "lines",
    "basicSpecularMethod",
    "useSpecular",
    "useColor",
    "mapkd",
    "charCodeAt",
    "parseMapKdString",
    "specularData",
    "SpecularData",
    "_materialSpecularData",
    "cm",
    "colorMat",
    "colorMultiMat",
    "breakflag",
    "mtlurl",
    "decomposeID",
    "tm",
    "_u",
    "_v",
    "_x",
    "_y",
    "_z",
    "_index",
    "ind",
    "awayjs-methodmaterials/lib/methods/SpecularBasicMethod",
    "awayjs-parsers/lib/Parsers",
    "AssetLoader",
    "Parsers",
    "enableAllBundled",
    "enableParsers",
    "ALL_BUNDLED",
    "awayjs-core/lib/library/AssetLoader"
  ],
  "mappings": "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",
  "file": "awayjs-parsers.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3FileData\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\r\n\r\n\r\nclass AWDAssetParserBase\r\n{\r\n\r\n\tprivate _awd_file_data:AWD3FileData;\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\r\n\tpublic get awd_file_data():AWD3FileData\r\n\t{\r\n\t\treturn this._awd_file_data;\r\n\t}\r\n\tpublic set awd_file_data(awd_file_data:AWD3FileData)\r\n\t{\r\n\t\tthis._awd_file_data=awd_file_data;\r\n\t}\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = AWDAssetParserBase;\r\n\r\n",
    null,
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport AWDAssetParserBase\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWD3FileData \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\r\n\r\nimport GeometryAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/GeometryAWDParser\");\r\nimport PrefabAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/PrefabAWDParser\");\r\nimport DisplayObjectContainerAWDParser \t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/DisplayObjectContainerAWDParser\");\r\nimport MeshAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MeshAWDParser\");\r\nimport BillboardAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/BillboardAWDParser\");\r\nimport Single2DTextureAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/Single2DTextureAWDParser\");\r\nimport CameraAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/CameraAWDParser\");\r\nimport SingleCubeTextureAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SingleCubeTextureAWDParser\");\r\nimport LightAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/LightAWDParser\");\r\nimport LightPickerAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/LightPickerAWDParser\");\r\nimport MaterialAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MaterialAWDParser\");\r\nimport MovieClipAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MovieClipAWDParser\");\r\nimport ShadowMethodAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/ShadowMethodAWDParser\");\r\nimport SharedMethodAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SharedMethodAWDParser\");\r\nimport SkeletonAnimClipAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonAnimClipAWDParser\");\r\nimport SkeletonAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonAWDParser\");\r\nimport SkeletonPoseAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkeletonPoseAWDParser\");\r\nimport SkyboxAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/SkyboxAWDParser\");\r\nimport TesselatedFontAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TesselatedFontAWDParser\");\r\nimport TextfieldAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TextfieldAWDParser\");\r\nimport TextformatAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/TextformatAWDParser\");\r\nimport VertexAnimationSetAWDParser \t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/VertexAnimationSetAWDParser\");\r\nimport VertexAnimClipAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/VertexAnimClipAWDParser\");\r\nimport CommandAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/CommandAWDParser\");\r\nimport MetadataAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/MetadataAWDParser\");\r\nimport BlockNameSpaceAWDParser \t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/BlockNameSpaceAWDParser\");\r\nimport AnimatorAWDParser \t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AnimatorAWDParser\");\r\nimport AudioAWDParser \t\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AudioAWDParser\");\r\n\r\n\r\n\r\nclass AWDBlockParsers\r\n{\r\n\r\n\tprivate _supported_asset_blocks:Object = {};\r\n\tprivate _all_block_parsers:Array<AWDAssetParserBase>;\r\n\tconstructor()\r\n\t{\r\n\t\tthis._all_block_parsers=new Array<AWDAssetParserBase>();\r\n\r\n\t\tthis.add_block_parser(new GeometryAWDParser(), [1]);\r\n\t\tthis.add_block_parser(new PrefabAWDParser(), [11]);\r\n\t\tthis.add_block_parser(new DisplayObjectContainerAWDParser(), [22]);\r\n\t\tthis.add_block_parser(new MeshAWDParser(), [23, 24]);\r\n\r\n\t\tthis.add_block_parser(new BillboardAWDParser(), [25]);\r\n\t\tthis.add_block_parser(new SkyboxAWDParser(), [31]);\r\n\t\tthis.add_block_parser(new LightAWDParser(), [41]);\r\n\t\tthis.add_block_parser(new CameraAWDParser(), [42]);\r\n\t\t//this.add_block_parser(new TextureprojectorAWDParser(), [43]);\r\n\t\tthis.add_block_parser(new AudioAWDParser(), [44]);\r\n\t\tthis.add_block_parser(new LightPickerAWDParser(), [51]);\r\n\t\tthis.add_block_parser(new MaterialAWDParser(), [81]);\r\n\t\tthis.add_block_parser(new Single2DTextureAWDParser(), [82]);\r\n\t\tthis.add_block_parser(new SingleCubeTextureAWDParser(), [83]);\r\n\t\tthis.add_block_parser(new SharedMethodAWDParser(), [91]);\r\n\t\tthis.add_block_parser(new ShadowMethodAWDParser(), [92]);\r\n\t\tthis.add_block_parser(new SkeletonAWDParser(), [101]);\r\n\t\tthis.add_block_parser(new SkeletonPoseAWDParser(), [102]);\r\n\t\tthis.add_block_parser(new SkeletonAnimClipAWDParser(), [103]);\r\n\t\tthis.add_block_parser(new VertexAnimClipAWDParser(), [111, 112]);\r\n\t\tthis.add_block_parser(new VertexAnimationSetAWDParser(), [113]);\r\n\t\t//this.add_block_parser(new UVAnimationClipAWDParser(), [121]);\r\n\t\tthis.add_block_parser(new AnimatorAWDParser(), [122]);\r\n\t\tthis.add_block_parser(new MovieClipAWDParser(), [133]);\r\n\t\tthis.add_block_parser(new TextfieldAWDParser(), [134]);\r\n\t\tthis.add_block_parser(new TesselatedFontAWDParser(), [135]);\r\n\t\tthis.add_block_parser(new TextformatAWDParser(), [136]);\r\n\r\n\r\n\t\tthis.add_block_parser(new CommandAWDParser(), [253]);\r\n\t\tthis.add_block_parser(new BlockNameSpaceAWDParser(), [254]);\r\n\t\tthis.add_block_parser(new MetadataAWDParser(), [255]);\r\n\r\n\r\n\t}\r\n\r\n\tpublic add_block_parser(block_parser:AWDAssetParserBase, block_types:Array<number>):void\r\n\t{\r\n\t\tfor(var i:number=0; i<block_types.length;i++){\r\n\t\t\tthis._supported_asset_blocks[block_types[i]]  = block_parser;\r\n\t\t}\r\n\t\tthis._all_block_parsers.push(block_parser);\r\n\r\n\t}\r\n\r\n\tpublic init_parser(file_data:AWD3FileData):void\r\n\t{\r\n\t\tfor(var i:number=0; i<this._all_block_parsers.length;i++){\r\n\t\t\tthis._all_block_parsers[i].awd_file_data=file_data;\r\n\t\t}\r\n\r\n\t}\r\n\tpublic parseAsset(type:number):boolean\r\n\t{\r\n\r\n\t\tvar this_parser:AWDAssetParserBase=this._supported_asset_blocks[type];\r\n\t\tif(this_parser!=undefined){\r\n\t\t\tthis_parser.parseFromBytes();\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\nexport = AWDBlockParsers;",
    "/**\r\n * Created by 80prozent on 4/18/2015.\r\n */\r\n\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass AnimatorAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar animSetBlockAdress:number; /*int*/\r\n\t\tvar targetAnimationSet:AnimationSetBase;\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar type:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR});\r\n\r\n\t\tanimSetBlockAdress = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar targetMeshLength:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar meshAdresses:Array<number> /*uint*/ = new Array<number>() /*uint*/;\r\n\t\tfor (var i:number /*int*/ = 0; i < targetMeshLength; i++)\r\n\t\t\tmeshAdresses.push(this.awd_file_data.newBlockBytes.readUnsignedInt());\r\n\r\n\t\tvar activeState:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar autoplay:boolean = ( this.awd_file_data.newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\r\n\t\tvar returnedArray:Array<any>;\r\n\t\tvar targetMeshes:Array<Mesh> = new Array<Mesh>();\r\n\r\n\t\tfor (i = 0; i < meshAdresses.length; i++) {\r\n\t\t\tvar targetMesh:Mesh = <Mesh>this.awd_file_data.getAssetByID(meshAdresses[i]);\r\n\t\t\tif (targetMesh!=undefined)\r\n\t\t\t\ttargetMeshes.push(targetMesh);\r\n\t\t}\r\n\t\tvar targetAnimationSet:AnimationSetBase = <AnimationSetBase>this.awd_file_data.getAssetByID(animSetBlockAdress);\r\n\t\tif (targetAnimationSet==undefined) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the AnimationSet ( \" + animSetBlockAdress + \" ) for this.awd_file_data Animator\");\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tvar thisAnimator:AnimatorBase;\r\n\t\tif (type == 1) {\r\n\r\n\t\t\tvar skeleton:Skeleton = <Skeleton>this.awd_file_data.getAssetByID(props.get(1, 0));\r\n\t\t\tif (skeleton==undefined) {\r\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the Skeleton ( \" + props.get(1, 0) + \" ) for this.awd_file_data Animator\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, skeleton);\r\n\r\n\t\t} else if (type == 2)\r\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\r\n\r\n\t\tfor (i = 0; i < targetMeshes.length; i++) {\r\n\t\t\tif (type == 1)\r\n\t\t\t\ttargetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\r\n\t\t\tif (type == 2)\r\n\t\t\t\ttargetMeshes[i].animator = (<VertexAnimator> thisAnimator);\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.data = thisAnimator;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + this.awd_file_data.cur_block.name);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = AnimatorAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nclass AudioAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\t//this.awd_file_data._texture_users[this.awd_file_data._cur_block_id.toString()] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\r\n\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\r\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block.id.toString(), new URLRequest(url), false, null, true);\r\n\r\n\t\t} else {\r\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray;\r\n\t\t\tdata = new ByteArray();\r\n\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\r\n\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\r\n\r\n\t\t\t//\r\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\r\n\t\t\t//\r\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\r\n\t\t\t// This gives the browser time to initialise image width / height.\r\n\r\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\r\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\r\n\t\t// Ignore for now\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t//this.awd_file_data._pPauseAndRetrieveDependencies();\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tvar audioStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing a \" + audioStylesNames[type] + \" AudioFile\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = AudioAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\n\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nclass BillboardAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar mat:MaterialBase= <MaterialBase> this.awd_file_data.getAssetByID(data_id);\r\n\r\n\t\tif (mat==undefined) {\r\n\t\t\tmat = new BasicMaterial();\r\n\t\t}\r\n\t\tmat.bothSides=true;\r\n\t\tvar billboard:Billboard = new Billboard(mat);\r\n\t\tthis.awd_file_data.cur_block.data = billboard;\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\r\n\t\tbillboard.extra = this.awd_file_data.parseUserAttributes();\r\n\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a Library-Billboard: Name = '\" + billboard.name + \"| Material-Name = \" + mat.name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = BillboardAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass BlockNameSpaceAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\r\n\t\tvar id:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar nameSpaceString:string = this.awd_file_data.parseVarStr();\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = BlockNameSpaceAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Parser\t\t\t\t= require(\"awayjs-parsers/lib/AWD3Parser\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\r\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass CameraAWD3Parser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void {\r\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar projection:ProjectionBase;\r\n\r\n\t\tthis.awd_file_data.newBlockBytes.readUnsignedByte(); //set as active camera\r\n\t\tthis.awd_file_data.newBlockBytes.readShort(); //lengthof lenses - not used yet\r\n\r\n\t\tvar projectiontype:number = this.awd_file_data.newBlockBytes.readShort();\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({\r\n\t\t\t101: this.awd_file_data.propsNrType,\r\n\t\t\t102: this.awd_file_data.propsNrType,\r\n\t\t\t103: this.awd_file_data.propsNrType,\r\n\t\t\t104: this.awd_file_data.propsNrType\r\n\t\t});\r\n\r\n\t\tswitch (projectiontype) {\r\n\t\t\tcase 5001:\r\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5002:\r\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5003:\r\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar camera:Camera = new Camera(projection);\r\n\t\tcamera.transform.matrix3D = mtx;\r\n\t\tif (par_id > 0) {\r\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id);\r\n\t\t\tif (parent != undefined) {\r\n\t\t\t\tparent.addChild(camera);\r\n\t\t\t\tparentName = parent.name;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcamera.name = name;\r\n\t\tprops = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\r\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\tcamera.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = camera;\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + camera.name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = CameraAWD3Parser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass CommandAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\r\n\t\tvar hasBlocks:boolean = ( this.awd_file_data.newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\r\n\t\tvar name:string = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar parentObject:DisplayObjectContainer;\r\n\t\tvar targetObject:DisplayObject;\r\n\r\n\t\tif(par_id>0)\r\n\t\t\tparentObject = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id); //for no only light is requested!!!!\r\n\r\n\t\tvar numCommands:number = this.awd_file_data.newBlockBytes.readShort();\r\n\t\tvar typeCommand:number = this.awd_file_data.newBlockBytes.readShort();\r\n\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR});\r\n\r\n\t\tswitch (typeCommand) {\r\n\t\t\tcase 1:\r\n\r\n\t\t\t\tvar targetID:number = props.get(1, 0);\r\n\t\t\t\t//var returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [LightBase.assetType, TextureProjector.assetType]); //for no only light is requested!!!!\r\n\t\t\t\ttargetObject = <DisplayObject>this.awd_file_data.getAssetByID(targetID); //for no only light is requested!!!!\r\n\t\t\t\tif(targetObject==undefined){\r\n\t\t\t\t\t//this._awd_data._blocks[blockID].addError(\"Could not find the light (ID = \" + targetID + \" ( for this CommandBock!\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (parentObject) {\r\n\t\t\t\t\tparentObject.addChild(targetObject);\r\n\t\t\t\t}\r\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (targetObject) {\r\n\t\t\tprops = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\r\n\r\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t\ttargetObject.extra = this.awd_file_data.parseUserAttributes();\r\n\r\n\t\t}\r\n\t\t//this._awd_data._blocks[blockID].data = targetObject\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = CommandAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AWDProperties\t\t\t= require(\"../AWD3ParserUtils/AWDProperties\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nclass DisplayObjectContainerAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tvar par_id:number;\r\n\t\tvar mtx:Matrix3D;\r\n\t\tvar ctr:DisplayObjectContainer;\r\n\t\tvar parent:DisplayObjectContainer;\r\n\r\n\t\tctr = new DisplayObjectContainer();\r\n\t\tpar_id = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tmtx = this.awd_file_data.parseMatrix3D();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tctr.transform.matrix3D = mtx;\r\n\r\n\r\n\t\tif (par_id > 0) {\r\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id);\r\n\t\t\tif (parent != undefined) {\r\n\t\t\t\tparent.addChild(ctr);\r\n\t\t\t\tparentName = parent.name;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// in AWD version 2.1 we read the Container properties\r\n\t\tif ((this.awd_file_data.major_version > 2)||((this.awd_file_data.major_version >= 2) && (this.awd_file_data.minor_version == 1))) {\r\n\t\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8});\r\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t}\r\n\t\t// in other versions we do not read the Container properties\r\n\t\telse {\r\n\t\t\tthis.awd_file_data.parseProperties(null);\r\n\t\t}\r\n\r\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\r\n\t\tctr.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data=ctr;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + ctr.name + \"' | Parent-Name = \" + parentName);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = DisplayObjectContainerAWDParser;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\n\r\nclass GeometryAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar geom:Geometry = new Geometry();\r\n\r\n\t\t// Read name and sub count\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_subs:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\t// Read optional properties\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.geoNrType, 2:this.awd_file_data.geoNrType});\r\n\t\tvar geoScaleU:number = props.get(1, 1);\r\n\t\tvar geoScaleV:number = props.get(2, 1);\r\n\r\n\t\t// Loop through sub meshes\r\n\t\tvar subs_parsed:number = 0;\r\n\t\twhile (subs_parsed < num_subs) {\r\n\t\t\tvar is_curve_geom:boolean=false;\r\n\t\t\tvar i:number;\r\n\t\t\tvar sm_len:number, sm_end:number;\r\n\t\t\tvar w_indices:Array<number>;\r\n\t\t\tvar weights:Array<number>;\r\n\r\n\t\t\tsm_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tsm_end = this.awd_file_data.newBlockBytes.position + sm_len;\r\n\r\n\t\t\tvar subProps:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.geoNrType, 2:this.awd_file_data.geoNrType});\r\n\t\t\t// Loop through data streams\r\n\t\t\twhile (this.awd_file_data.newBlockBytes.position < sm_end) {\r\n\t\t\t\tvar idx:number = 0;\r\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n\t\t\t\t// Type, field type, length\r\n\t\t\t\tstr_type = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_ftype = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\r\n\r\n\t\t\t\tvar x:number, y:number, z:number;\r\n\r\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\r\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\tx = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t\ty = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t\tz = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\r\n\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\r\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tindices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 3) {\r\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tuvs[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 4) {\r\n\r\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tnormals[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 6) {\r\n\t\t\t\t\tw_indices = Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tw_indices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort()*3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 7) {\r\n\r\n\t\t\t\t\tweights = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tweights[idx++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\r\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\r\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\r\n\t\t\t\t\tis_curve_geom=true;\r\n\t\t\t\t\tvar idx_pos:number = 0;\r\n\t\t\t\t\tvar idx_curves:number = 0;\r\n\t\t\t\t\tvar idx_uvs:number = 0;\r\n\r\n\t\t\t\t\tvar positions:Array<number> = new Array<number>();\r\n\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\r\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// x\r\n\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// y\r\n\t\t\t\t\t\tpositions[idx_pos++] =  this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// type\r\n\r\n\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 2\r\n\r\n\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.awd_file_data.parseUserAttributes(); // Ignore sub-mesh attributes for now\r\n\t\t\tif(is_curve_geom){\r\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(new AttributesBuffer());\r\n\t\t\t\tcurve_sub_geom.setIndices(indices);\r\n\t\t\t\tcurve_sub_geom.setPositions(positions);\r\n\t\t\t\tcurve_sub_geom.setCurves(curveData);\r\n\t\t\t\tcurve_sub_geom.setUVs(uvs);\r\n\t\t\t\tgeom.addSubGeometry(curve_sub_geom);\r\n\t\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a CurveSubGeometry\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar triangle_sub_geom = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\t\tif (weights)\r\n\t\t\t\t\ttriangle_sub_geom.jointsPerVertex = weights.length / (verts.length / 3);\r\n\t\t\t\tif (normals)\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveNormals = false;\r\n\t\t\t\tif (uvs)\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveUVs = false;\r\n\t\t\t\t//triangle_sub_geom.autoDeriveNormals = false;\r\n\t\t\t\tif (true) {\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveTangents = true;\r\n\t\t\t\t}\r\n\t\t\t\ttriangle_sub_geom.setIndices(indices);\r\n\t\t\t\ttriangle_sub_geom.setPositions(verts);\r\n\t\t\t\ttriangle_sub_geom.setNormals(normals);\r\n\t\t\t\ttriangle_sub_geom.setUVs(uvs);\r\n\t\t\t\ttriangle_sub_geom.setTangents(null);\r\n\t\t\t\ttriangle_sub_geom.setJointWeights(weights);\r\n\t\t\t\ttriangle_sub_geom.setJointIndices(w_indices);\r\n\r\n\t\t\t\tvar scaleU:number = subProps.get(1, 1);\r\n\t\t\t\tvar scaleV:number = subProps.get(2, 1);\r\n\t\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\r\n\r\n\t\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\r\n\t\t\t\t\tsetSubUVs = true;\r\n\t\t\t\t\tscaleU = geoScaleU / scaleU;\r\n\t\t\t\t\tscaleV = geoScaleV / scaleV;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (setSubUVs)\r\n\t\t\t\t\ttriangle_sub_geom.scaleUV(scaleU, scaleV);\r\n\t\t\t\tgeom.addSubGeometry(triangle_sub_geom);\r\n\t\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a TriangleSubGeometry\");\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\r\n\t\t\t// when creating meshes (and their material assignments.)\r\n\r\n\t\t\tsubs_parsed++;\r\n\t\t}\r\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\r\n\t\t\tgeom.scaleUV(geoScaleU, geoScaleV);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data=geom;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a TriangleGeometry: Name = \" + name);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = GeometryAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass LightAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\t\r\n\t\tvar light:LightBase;\r\n\t\tvar newShadowMapper:ShadowMapperBase;\r\n\r\n\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar lightType:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.propsNrType, 2:this.awd_file_data.propsNrType, 3:AWD3Utils.COLOR, 4:this.awd_file_data.propsNrType, 5:this.awd_file_data.propsNrType, 6:AWD3Utils.BOOL, 7:AWD3Utils.COLOR, 8:this.awd_file_data.propsNrType, 9:AWD3Utils.UINT8, 10:AWD3Utils.UINT8, 11:this.awd_file_data.propsNrType, 12:AWD3Utils.UINT16, 21:this.awd_file_data.matrixNrType, 22:this.awd_file_data.matrixNrType, 23:this.awd_file_data.matrixNrType});\r\n\t\tvar shadowMapperType:number = props.get(9, 0);\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\r\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\r\n\r\n\t\tif (lightType == 1) {\r\n\t\t\tlight = new PointLight();\r\n\r\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\r\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 4) {\r\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.transform.matrix3D = mtx;\r\n\r\n\t\t}\r\n\r\n\t\tif (lightType == 2) {\r\n\r\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 1) {\r\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//if (shadowMapperType == 2)\r\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\r\n\t\t\t\t//if (shadowMapperType == 3)\r\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tlight.name=name;\r\n\t\tlight.color = props.get(3, 0xffffff);\r\n\t\tlight.specular = props.get(4, 1.0);\r\n\t\tlight.diffuse = props.get(5, 1.0);\r\n\t\tlight.ambientColor = props.get(7, 0xffffff);\r\n\t\tlight.ambient = props.get(8, 0.0);\r\n\r\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\r\n\t\tif (newShadowMapper) {\r\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\r\n\t\t\t\tif (props.get(10, 1) != 1) {\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this.awd_file_data.getDepthSizeFromEnum(props.get(10, 1));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (props.get(10, 2) != 2) {\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this.awd_file_data.getDepthSizeFromEnum(props.get(10, 2));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.shadowMapper = newShadowMapper;\r\n\t\t\tlight.castsShadows = true;\r\n\t\t}\r\n\r\n\t\tif (par_id != 0) {\r\n\r\n\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id)\r\n\r\n\t\t\tif (parent!=undefined){\r\n\t\t\t\tparent.addChild(light);\r\n\t\t\t\tparentName = parent.name;\r\n\t\t\t} else {\r\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find a parent for this.awd_file_data Light\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t//(<DisplayObjectContainer> this.awd_file_data._pContent).addChild(light);\r\n\t\t}\r\n\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = light;\r\n\r\n\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + this.awd_file_data.cur_block.name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = LightAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\n\r\nclass LightPickerAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar numLights:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\r\n\t\tvar k:number = 0;\r\n\t\tvar lightID:number = 0;\r\n\r\n\t\tvar returnedArrayLight:Array<any>;\r\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\r\n\r\n\t\tfor (k = 0; k < numLights; k++) {\r\n\t\t\tlightID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar light:LightBase = <LightBase>this.awd_file_data.getAssetByID(lightID)\r\n\r\n\t\t\tif (light!=undefined) {\r\n\t\t\t\tlightsArray.push(<LightBase> light);\r\n\t\t\t\tlightsArrayNames.push(( <LightBase> light).name);\r\n\r\n\t\t\t} else {\r\n\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find a Light Nr \" + k + \" (ID = \" + lightID + \" ) for this.awd_file_data LightPicker\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lightsArray.length == 0) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not create this.awd_file_data LightPicker, cause no Light was found.\");\r\n\t\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t\treturn undefined; //return without any more parsing for this.awd_file_data block\r\n\t\t}\r\n\r\n\t\tvar lightPicker:LightPickerBase = new StaticLightPicker(lightsArray);\r\n\t\tthis.awd_file_data.cur_block.data = lightPicker;\r\n\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + lightsArrayNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = LightPickerAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\n\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\")\r\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\r\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\r\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\r\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\r\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\r\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\r\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\r\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\r\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\r\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\r\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\r\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass MaterialAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\t// version 2.0\r\n\t\t////blockLength = block.len;\r\n\t\tvar name:string;\r\n\t\tvar type:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar attributes:Object;\r\n\t\tvar finalize:boolean;\r\n\t\tvar num_methods:number;\r\n\t\tvar methods_parsed:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar normalTexture:Single2DTexture;\r\n\t\tvar specTexture:Single2DTexture;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\ttype = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tnum_methods = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\r\n\t\tif((this.awd_file_data.major_version==2)&&(this.awd_file_data.major_version==0)) {\r\n\r\n\t\t\t// Read material numerical properties\r\n\t\t\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\r\n\t\t\tprops = this.awd_file_data.parseProperties({\r\n\t\t\t\t1: AWD3Utils.INT32,\r\n\t\t\t\t2: AWD3Utils.BADDR,\r\n\t\t\t\t10: this.awd_file_data.propsNrType,\r\n\t\t\t\t11: AWD3Utils.BOOL,\r\n\t\t\t\t12: this.awd_file_data.propsNrType,\r\n\t\t\t\t13: AWD3Utils.BOOL\r\n\t\t\t});\r\n\t\t\tmethods_parsed = 0;\r\n\t\t\twhile (methods_parsed < num_methods) {\r\n\t\t\t\tvar method_type:number;\r\n\r\n\t\t\t\tmethod_type = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\tthis.awd_file_data.parseProperties(null);\r\n\t\t\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t\t\tmethods_parsed += 1;\r\n\t\t\t}\r\n\t\t\tvar debugString:string = \"\";\r\n\t\t\tattributes = this.awd_file_data.parseUserAttributes();\r\n\t\t\tif (type === 1) { // Color material\r\n\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\t\tvar color:number;\r\n\t\t\t\tcolor = props.get(1, 0xffffff);\r\n\t\t\t\t/*if (this.awd_file_data.materialMode < 2) {\r\n\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t}*/\r\n\t\t\t} else if (type === 2) {\r\n\t\t\t\tvar tex_addr:number = props.get(2, 0);\r\n\t\t\t\tvar texture:TextureBase=undefined;\r\n\t\t\t\tif (tex_addr > 0) {\r\n\t\t\t\t\tvar texture:TextureBase = <TextureBase> this.awd_file_data.getAssetByID(tex_addr);\r\n\t\t\t\t}\r\n\t\t\t\tif (texture==undefined) {\r\n\t\t\t\t\ttexture= DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmat = new MethodMaterial(<Single2DTexture>texture);\r\n\t\t\t\t/*\r\n\t\t\t\tif (this.awd_file_data.materialMode < 2) {\r\n\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t}\r\n\r\n\t\t\tmat.extra = attributes;\r\n\t\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\t\tmat.repeat = props.get(13, false);\r\n\t\t\tmat.name=name;\r\n\t\t\tif (this.awd_file_data.debug) {\r\n\t\t\t\tconsole.log(debugString);\r\n\r\n\t\t\t}\r\n\t\t\tthis.awd_file_data.cur_block.data=mat;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// version 2.1+\r\n\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT32, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 4:AWD3Utils.UINT8, 5:AWD3Utils.BOOL, 6:AWD3Utils.BOOL, 7:AWD3Utils.BOOL, 8:AWD3Utils.BOOL, 9:AWD3Utils.UINT8, 10:this.awd_file_data.propsNrType, 11:AWD3Utils.BOOL, 12:this.awd_file_data.propsNrType, 13:AWD3Utils.BOOL, 15:this.awd_file_data.propsNrType, 16:AWD3Utils.UINT32, 17:AWD3Utils.BADDR, 18:this.awd_file_data.propsNrType, 19:this.awd_file_data.propsNrType, 20:AWD3Utils.UINT32, 21:AWD3Utils.BADDR, 22:AWD3Utils.BADDR});\r\n\t\tvar spezialType:number = props.get(4, 0);\r\n\t\tvar debugString:string = \"Parsed Material \";\r\n\r\n\t\tif (spezialType >= 2) {//this.awd_file_data is no supported material\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (type <= 2) {// Color material\r\n\t\t\t/*\r\n\t\t\tif (this.awd_file_data.materialMode == 1)\r\n\t\t\t\tspezialType = 0;\r\n\t\t\telse if (this.awd_file_data.materialMode == 2)\r\n\t\t\t\tspezialType = 1;\r\n\t\t\t\t*/\r\n\r\n\t\t\tif (spezialType < 2) {//this.awd_file_data is SinglePass or MultiPass\r\n\r\n\t\t\t\tif (type == 1) {// Color material\r\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\r\n\r\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\r\n\r\n\t\t\t\t\t} else { //\tSinglePassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (type == 2) {// texture material\r\n\t\t\t\t\tvar tex_addr:number = props.get(2, 0);//TODO temporarily swapped so that diffuse texture goes to ambient\r\n\t\t\t\t\tvar diftexture:TextureBase=undefined;\r\n\t\t\t\t\tif (tex_addr > 0) {\r\n\t\t\t\t\t\tdiftexture = <TextureBase> this.awd_file_data.getAssetByID(tex_addr);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (diftexture==undefined) {\r\n\t\t\t\t\t\tdiftexture= DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmat = new MethodMaterial(<Single2DTexture>diftexture);\r\n\r\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + diftexture.name;\r\n\t\t\t\t\t} else {//\tSinglePassMaterial\r\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + this.awd_file_data.cur_block.name + \"' | Texture-Name = \" + diftexture.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tvar diffuseTex_addr:number = props.get(17, 0);\r\n\r\n\t\t\t\tvar diffuseTexture:TextureBase = undefined;\r\n\t\t\t\tif (diffuseTex_addr > 0) {\r\n\t\t\t\t\tdiffuseTexture = <Single2DTexture> this.awd_file_data.getAssetByID(diffuseTex_addr);\r\n\t\t\t\t}\r\n\t\t\t\tif (diffuseTexture) {\r\n\t\t\t\t\tmat.diffuseTexture = <Single2DTexture>diffuseTexture;\r\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normalTex_addr:number = props.get(3, 0);\r\n\r\n\r\n\t\t\t\tnormalTexture = undefined;\r\n\t\t\t\tif (normalTex_addr > 0) {\r\n\t\t\t\t\tnormalTexture = <Single2DTexture> this.awd_file_data.getAssetByID(normalTex_addr);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar specTex_addr:number = props.get(21, 0);\r\n\t\t\t\tspecTexture=undefined;\r\n\t\t\t\tif (specTex_addr > 0) {\r\n\t\t\t\t\tspecTexture = <Single2DTexture> this.awd_file_data.getAssetByID(specTex_addr);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar lightPickerAddr:number = props.get(22, 0);\r\n\t\t\t\tif(lightPickerAddr>0) {\r\n\t\t\t\t\tmat.lightPicker = <LightPickerBase> this.awd_file_data.getAssetByID(lightPickerAddr);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmat.smooth = props.get(5, true);\r\n\t\t\t\tmat.mipmap = props.get(6, true);\r\n\t\t\t\tmat.bothSides = props.get(7, false);\r\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\r\n\t\t\t\tmat.blendMode = this.awd_file_data.getBlendModeStringFromEnum(props.get(9, 0));\r\n\t\t\t\tmat.repeat = props.get(13, false);\r\n\r\n\t\t\t\tif (normalTexture)\r\n\t\t\t\t\tmat.normalMap = normalTexture;\r\n\r\n\t\t\t\tif (specTexture)\r\n\t\t\t\t\tmat.specularMap = specTexture;\r\n\r\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\t\t\tmat.ambient = props.get(15, 1.0);\r\n\t\t\t\tmat.diffuseColor = props.get(16, 0xffffff);\r\n\t\t\t\tmat.specular = props.get(18, 1.0);\r\n\t\t\t\tmat.gloss = props.get(19, 50);\r\n\t\t\t\tmat.specularColor = props.get(20, 0xffffff);\r\n\r\n\t\t\t\tvar methods_parsed:number = 0;\r\n\t\t\t\tvar targetID:number;\r\n\r\n\t\t\t\twhile (methods_parsed < num_methods) {\r\n\t\t\t\t\tvar method_type:number;\r\n\t\t\t\t\tmethod_type = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\t\t\t\tprops = this.awd_file_data.parseProperties({\r\n\t\t\t\t\t\t1: AWD3Utils.BADDR,\r\n\t\t\t\t\t\t2: AWD3Utils.BADDR,\r\n\t\t\t\t\t\t3: AWD3Utils.BADDR,\r\n\t\t\t\t\t\t101: this.awd_file_data.propsNrType,\r\n\t\t\t\t\t\t102: this.awd_file_data.propsNrType,\r\n\t\t\t\t\t\t103: this.awd_file_data.propsNrType,\r\n\t\t\t\t\t\t201: AWD3Utils.UINT32,\r\n\t\t\t\t\t\t202: AWD3Utils.UINT32,\r\n\t\t\t\t\t\t301: AWD3Utils.UINT16,\r\n\t\t\t\t\t\t302: AWD3Utils.UINT16,\r\n\t\t\t\t\t\t401: AWD3Utils.UINT8,\r\n\t\t\t\t\t\t402: AWD3Utils.UINT8,\r\n\t\t\t\t\t\t601: AWD3Utils.COLOR,\r\n\t\t\t\t\t\t602: AWD3Utils.COLOR,\r\n\t\t\t\t\t\t701: AWD3Utils.BOOL,\r\n\t\t\t\t\t\t702: AWD3Utils.BOOL,\r\n\t\t\t\t\t\t801: AWD3Utils.MTX4x4\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tswitch (method_type) {\r\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffectMethod\r\n\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tvar fx_method:EffectMethodBase = <EffectMethodBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t\tmat.addEffectMethod(fx_method);\r\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<EffectMethodBase> fx_method).name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\r\n\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tvar shadow_method:ShadowMethodBase = <ShadowMethodBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t\tmat.shadowMethod=shadow_method;\r\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<ShadowMethodBase> shadow_method).name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tvar cubeTex:SingleCubeTexture=undefined;\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tcubeTex = <SingleCubeTexture>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(cubeTex==undefined){\r\n\t\t\t\t\t\t\t\tcubeTex=<SingleCubeTexture>this.awd_file_data.getDefaultCubeTexture();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data EnvMapAmbientMethodMaterial\");\r\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod();\r\n\t\t\t\t\t\t\tmat.texture = cubeTex;\r\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + (<SingleCubeTexture> cubeTex).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(thisTex==undefined){\r\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the GradientDiffuseTexture (ID = \" + targetID + \" ) for this.awd_file_data GradientDiffuseMethod\");\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(<Single2DTexture>thisTex);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + (<Single2DTexture>thisTex).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(thisTex==undefined){\r\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this.awd_file_data LightMapDiffuseMethod\");\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(<Single2DTexture>thisTex, this.awd_file_data.getBlendModeStringFromEnum(props.get(401, 10)), false, mat.diffuseMethod);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + (<Single2DTexture> thisTex).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\r\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\tvar thisTex:TextureBase=undefined;\r\n\t\t\t\t\t\t\tif (targetID>0) {\r\n\t\t\t\t\t\t\t\tthisTex = <TextureBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(thisTex==undefined){\r\n\t\t\t\t\t\t\t\tthisTex=DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the SecoundNormalMap (ID = \" + targetID + \" ) for this.awd_file_data SimpleWaterNormalMethod\");\r\n\t\t\t\t\t\t\t//if (!mat.normalMap)\r\n\t\t\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find a normal Map on this.awd_file_data Material to use with this.awd_file_data SimpleWaterNormalMethod\");\r\n\t\t\t\t\t\t\tif(mat.normalMap==undefined)\r\n\t\t\t\t\t\t\t\tmat.normalMap = <Single2DTexture>thisTex;\r\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(<Single2DTexture>mat.normalMap, <Single2DTexture>thisTex);\r\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + (<Single2DTexture> thisTex).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t\t\t\tmethods_parsed += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// todo: we should not need this.awd_file_data anymore (if using texture-atlas)\r\n\t\telse if ((type>=3)&&(type<=7)){\r\n\t\t\t// if this.awd_file_data is a curve material, we create it, finalize it, assign it to block-cache and return and return.\r\n\t\t\tvar color:number = props.get(1, 0xcccccc);\r\n\t\t\tdebugString+=color;\r\n\t\t\r\n\t\t\tvar diffuseTex_addr:number = props.get(2, 0);\r\n\t\t\r\n\t\t\tvar diffuseTexture:TextureBase=undefined;\r\n\t\t\tif (diffuseTex_addr>0) {\r\n\t\t\t\tdiffuseTexture = <TextureBase>this.awd_file_data.getAssetByID(diffuseTex_addr);\r\n\t\t\t}\r\n\t\t\tif(diffuseTex_addr==undefined){\r\n\t\t\t\tdiffuseTexture=DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t}\r\n\t\t\r\n\t\t\tvar basic_mat:BasicMaterial = new BasicMaterial(<Single2DTexture>diffuseTexture);\r\n\t\t\t//debugString+= \" alpha = \"+props.get(10, 1.0)+\" \";\r\n\t\t\tdebugString+= \" texture = \"+diffuseTex_addr+\" \";\r\n\t\t\tbasic_mat.bothSides = true;\r\n\t\t\tbasic_mat.preserveAlpha = true;\r\n\t\t\tbasic_mat.alphaBlending = true;\r\n\t\t\tbasic_mat.extra = this.awd_file_data.parseUserAttributes();\r\n\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\tconsole.log(debugString);\r\n\t\t\tthis.awd_file_data.cur_block.data=basic_mat;\r\n\t\t\treturn;\r\n\t\t\r\n\t\t}\r\n\t\tmat.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data=mat;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(debugString);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = MaterialAWDParser;",
    "/**\r\n * Created by 80prozent on 4/18/2015.\r\n */\r\n\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AWD3Utils\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass MeshAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar num_materials:number;\r\n\t\tvar materials_parsed:number;\r\n\t\tif(this.awd_file_data.cur_block.type==23) {\r\n\t\t\tvar par_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar mtx:Matrix3D = this.awd_file_data.parseMatrix3D();\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar geom:Geometry = <Geometry>this.awd_file_data.getAssetByID(data_id)\r\n\r\n\t\tif (geom==undefined) {\r\n\t\t\tgeom = new Geometry();\r\n\t\t}\r\n\r\n\t\tthis.awd_file_data.cur_block.geoID = data_id;\r\n\t\tvar materials:Array<MaterialBase> = new Array<MaterialBase>();\r\n\t\tnum_materials = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar materialNames:Array<string> = new Array<string>();\r\n\t\tmaterials_parsed = 0;\r\n\r\n\r\n\t\twhile (materials_parsed < num_materials) {\r\n\t\t\tvar mat_id:number;\r\n\t\t\tmat_id = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar m:MaterialBase = <MaterialBase> this.awd_file_data.getAssetByID(mat_id);\r\n\t\t\tif(m!=undefined) {\r\n\t\t\t\tmaterials.push(m);\r\n\t\t\t\tmaterialNames.push(m.name);\r\n\t\t\t}\r\n\t\t\tmaterials_parsed++;\r\n\t\t}\r\n\r\n\t\tvar mesh:Mesh = new Mesh(geom, null);\r\n\r\n\t\tif(this.awd_file_data.cur_block.type==23) {\r\n\r\n\t\t\tmesh.transform.matrix3D = mtx;\r\n\t\t\tif(par_id>0) {\r\n\t\t\t\tvar parent:DisplayObjectContainer = <DisplayObjectContainer>this.awd_file_data.getAssetByID(par_id)\r\n\r\n\t\t\t\tif (parent != undefined) {\r\n\t\t\t\t\tparent.addChild(mesh);\r\n\t\t\t\t\tparentName = parent.name;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\r\n\t\t\tmesh.material = materials[0];\r\n\t\t} else if (materials.length > 1) {\r\n\t\t\tvar i:number;\r\n\r\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\r\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\r\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\r\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ((this.awd_file_data.major_version > 2)||((this.awd_file_data.major_version >= 2) && (this.awd_file_data.minor_version == 1))) {\r\n\t\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:this.awd_file_data.matrixNrType, 2:this.awd_file_data.matrixNrType, 3:this.awd_file_data.matrixNrType, 4:AWD3Utils.UINT8, 5:AWD3Utils.BOOL});\r\n\t\t\tmesh.pivot = new Vector3D(<number>props.get(1, 0), <number>props.get(2, 0), <number> props.get(3, 0));\r\n\t\t\tmesh.castsShadows = props.get(5, true);\r\n\t\t} else {\r\n\t\t\tthis.awd_file_data.parseProperties(null);\r\n\t\t}\r\n\r\n\t\tmesh.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = mesh;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a Mesh: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = MeshAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass MetadataAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_NO_ASSET;\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT32, 2:AWD3Utils.AWDSTRING, 3:AWD3Utils.AWDSTRING, 4:AWD3Utils.AWDSTRING, 5:AWD3Utils.AWDSTRING});\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\r\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\r\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = MetadataAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDBitFlags\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport MovieClip \t\t\t\t\t= require(\"awayjs-player/lib/display/MovieClip\");\r\nimport TimelineKeyFrame \t\t\t= require(\"awayjs-player/lib/timeline/TimelineKeyFrame\");\r\nimport AddChildCommand \t\t\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildCommand\");\r\nimport AddChildAtDepthCommand\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildAtDepthCommand\");\r\nimport ApplyAS2DepthsCommand\t\t= require(\"awayjs-player/lib/timeline/commands/ApplyAS2DepthsCommand\");\r\nimport ExecuteScriptCommand \t\t= require(\"awayjs-player/lib/timeline/commands/ExecuteScriptCommand\");\r\nimport RemoveChildCommand \t\t\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildCommand\");\r\nimport RemoveChildrenAtDepthCommand\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildrenAtDepthCommand\");\r\nimport SetInstanceNameCommand \t\t= require(\"awayjs-player/lib/timeline/commands/SetInstanceNameCommand\");\r\nimport UpdatePropertyCommand \t\t= require(\"awayjs-player/lib/timeline/commands/UpdatePropertyCommand\");\r\nimport SetMaskCommand \t\t        = require(\"awayjs-player/lib/timeline/commands/SetMaskCommand\");\r\n\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\r\n\r\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\r\n\r\nclass MovieClipAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tprivate factory:AS2SceneGraphFactory;\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.factory = new AS2SceneGraphFactory();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar c:number;\r\n\t\tvar new_mc = this.factory.createMovieClip();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar isScene = !!this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar sceneID = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar fps:number = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t//console.log(\"fps = \"+fps);\r\n\t\t//new_mc.fps=fps;\r\n\t\tvar ms_per_frame = 1000 / fps;\r\n\t\tvar num_instances:number=0;\r\n\t\tvar num_all_display_instances:number=0;\r\n\r\n\r\n\t\t// register list of potential childs\r\n\t\t// a potential child can be reused on a timeline (added / removed / added)\r\n\t\t// However, for each potential child, we need to register the max-number of instances that a frame contains\r\n\t\t// we parse 2 lists of potential-childs:\r\n\t\t// -\tthe first list contains potential-childs that are only ever instanced once per frame.\r\n\t\t// -\tthe second list contains potential-childs that are instanced multiple times on some frames.\r\n\r\n\t\t// on registering a child, the child gets a incremental-id assigned. This is the id, that the commands are using to access the childs.\r\n\t\t// hence we need to be careful to register all objects in correct order.\r\n\r\n\t\tvar num_potential_childs:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_childs; i++) {\r\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\tnew_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tnum_all_display_instances+=num_potential_childs;\r\n\t\tvar num_potential_childs_multi_instanced = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tnum_potential_childs+=num_potential_childs_multi_instanced;\r\n\t\tfor (i = 0; i < num_potential_childs_multi_instanced; i++) {\r\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tnum_instances = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\tnum_all_display_instances+=num_instances;\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\r\n\t\t\t\t\tnew_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\r\n\t\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(\"Parsed \"+num_potential_childs+\" potential childs. They will be used by \"+num_all_display_instances+\" instances.\");\r\n\r\n\t\t// register list of potential sounds\r\n\t\t// a potential child can be reused on a timeline (added / removed / added)\r\n\t\tvar num_potential_sounds = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_sounds; i++) {\r\n\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this.awd_file_data.getAssetByID(resourceID);\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\t//todo: register sound objects on movieclip\r\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t\t//new_mc.registerPotentialChild(cmd_asset);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//todo: this.awd_file_data is a error that might break complete timeline, because all sound obj-id shift\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(\"Parsed \"+num_potential_sounds+\" potential sounds\");\r\n\r\n\t\tvar numFrames = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\t//console.log(\"numFrames \"+numFrames);\r\n\r\n\t\tvar totalDuration:number;\r\n\t\tvar frameDuration:number;\r\n\t\tvar numLabels:number;\r\n\t\tvar numCommands:number;\r\n\t\tvar objectID:number;\r\n\t\tvar target_depth:number;\r\n\t\tvar resourceID:number;\r\n\t\tvar number_of_obj:number;\r\n\t\tvar commandType:number;\r\n\t\tvar frame:TimelineKeyFrame;\r\n\t\tvar label:string;\r\n\t\tvar hasDepthChanges:boolean;\r\n\t\ttotalDuration=0;\r\n\t\tfor (i = 0; i < numFrames; i++) {\r\n\t\t\tframe = new TimelineKeyFrame();\r\n\t\t\t// todo: remove the ms_per_frame to set the duration in frames\r\n\t\t\tframeDuration = this.awd_file_data.newBlockBytes.readUnsignedInt()*ms_per_frame;\r\n\t\t\tframe.setFrameTime(totalDuration, frameDuration);\r\n\t\t\ttotalDuration += frameDuration;\r\n\t\t\t//console.log(\"duration = \" + frameDuration);\r\n\r\n\t\t\tnumLabels = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\tfor (j = 0; j < numLabels; j++) {\r\n\t\t\t\tframe.label = this.awd_file_data.parseVarStr();\r\n\t\t\t\t//console.log(\"label \"+label);\r\n\t\t\t}\r\n\r\n\t\t\tnumCommands = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t//console.log(\"numCommands \"+numCommands);\r\n\t\t\t//traceString += \"\\n      Commands \" + numCommands;\r\n\t\t\thasDepthChanges = false;\r\n\t\t\tfor (j = 0; j < numCommands; j++) {\r\n\t\t\t\tcommandType = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\r\n\t\t\t\t// 1 = remove a number of objects by depth\r\n\t\t\t\t// 2 = add a object by child-id at specific depth\r\n\t\t\t\t// 3 = update a object by child-id\r\n\t\t\t\t// 4 = add / update sound - (not finished)\r\n\r\n\t\t\t\tswitch (commandType) {\r\n\r\n\t\t\t\t\tcase 1:// remove a number of objects at specific depth\r\n\t\t\t\t\t\tnumber_of_obj = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t//console.log(\"number_of_obj \", number_of_obj);\r\n\t\t\t\t\t\tvar remove_depths:Array<number>=new Array<number>();\r\n\t\t\t\t\t\tfor (c = 0; c < number_of_obj; c++) {\r\n\t\t\t\t\t\t\t// Remove Object Command\r\n\t\t\t\t\t\t\ttarget_depth = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\tremove_depths.push(target_depth);\r\n\t\t\t\t\t\t\t//console.log(\"\\n       - Remove object at depth: \" + target_depth);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tframe.addConstructCommand(new RemoveChildrenAtDepthCommand(remove_depths));\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2:// add a of object by child-id at specific depth\r\n\t\t\t\t\tcase 3:// update a object by child-id\r\n\t\t\t\t\t\tobjectID = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t//console.log(\"add / update objectID \", objectID);\r\n\t\t\t\t\t\tif (commandType == 2) {\r\n\t\t\t\t\t\t\thasDepthChanges=true;\r\n\t\t\t\t\t\t\ttarget_depth = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t//console.log(\"target_depth \", target_depth);\r\n\t\t\t\t\t\t\tvar potChild = new_mc.getPotentialChildPrototype(objectID);\r\n\t\t\t\t\t\t\tif (potChild != undefined) {\r\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new AddChildAtDepthCommand(objectID, target_depth));\r\n\t\t\t\t\t\t\t\t// if the object is a tetfield, we set the textfield-name as instancename\r\n\t\t\t\t\t\t\t\tif(potChild.isAsset(TextField)) {\r\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetInstanceNameCommand(objectID, potChild.name));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tconsole.log(\"ERROR: could not find the objectID \", objectID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar props_flag = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t/*\tProps_flags\r\n\t\t\t\t\t\t 1: read display matrix - 6 x float,\r\n\t\t\t\t\t\t 2: read display matrix - read another UINT8-bitflag that determinates what matrix components to parse\r\n\t\t\t\t\t\t 3: read color matrix - 4 x float, 4 x uint16\r\n\t\t\t\t\t\t 4: read color matrix - read another UINT8-bitflag that determinates what matrix components to parse\r\n\t\t\t\t\t\t 5: blendmode - uint8\r\n\t\t\t\t\t\t 6: visible - boolean\r\n\t\t\t\t\t\t 7: AWD3Parser.UINT8\r\n\t\t\t\t\t\t });*/\r\n\t\t\t\t\t\t// read display matrix\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG1)) {\r\n\t\t\t\t\t\t\tvar thisMatrix = new Matrix3D();\r\n\t\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG2)) {\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[0] = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[1] = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[4] = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[5] = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.position = new Vector3D(this.awd_file_data.newBlockBytes.readFloat(), this.awd_file_data.newBlockBytes.readFloat(), 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"_iMatrix3D\", thisMatrix));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// read colortransforms\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG3)) {\r\n\t\t\t\t\t\t\tvar thisColorTransform = new ColorTransform();\r\n\t\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG4)) {\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthisColorTransform.redMultiplier = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.greenMultiplier = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.blueMultiplier = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.alphaMultiplier = this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.redOffset = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.greenOffset = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.blueOffset = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.alphaOffset = this.awd_file_data.newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG5)) {\r\n\t\t\t\t\t\t\tvar blendmode_int = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\t\t\tvar blendmode_string = this.awd_file_data.getBlendModeStringFromEnum(blendmode_int);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG6)) {\r\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"visible\", this.awd_file_data.newBlockBytes.readByte()));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG7)) {\r\n\t\t\t\t\t\t\tvar instanceName = this.awd_file_data.parseVarStr();\r\n\t\t\t\t\t\t\tif (instanceName.length) {\r\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetInstanceNameCommand(objectID, instanceName));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (AWDBitFlags.test(props_flag, AWDBitFlags.FLAG8)) {\r\n\t\t\t\t\t\t\tvar mask_id_nums = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t\tvar mask_ids = new Array();\r\n\t\t\t\t\t\t\tfor (var mi_cnt = 0; mi_cnt < mask_id_nums; mi_cnt++) {\r\n\t\t\t\t\t\t\t\tmask_ids.push(this.awd_file_data.newBlockBytes.readShort());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (mask_ids.length > 0) {\r\n\t\t\t\t\t\t\t\tif ((mask_ids.length == 1) && (mask_ids[0] == -1)) {\r\n\t\t\t\t\t\t\t\t\t// TODO: this.awd_file_data object is used as mask\r\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"_iMaskID\", objectID));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetMaskCommand(objectID, mask_ids));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 4:\r\n\r\n\t\t\t\t\t\t// Add Sound Command\r\n\t\t\t\t\t\t// TODO: create CommandPropsSound and check which asset to use\r\n\t\t\t\t\t\tobjectID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tresourceID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\t// TODO: implement sound in timeline\r\n\t\t\t\t\t\t//commandString += \"\\n      - Add new Sound AWD-ID = \" + resourceID.toString() + \" as object_id = \" + objectID.toString();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t//commandString += \"\\n       - Unknown Command Type = \" + commandType;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (hasDepthChanges) {\r\n\t\t\t\t// only want to do this.awd_file_data once after all children's depth values are updated\r\n\t\t\t\tframe.addConstructCommand(new ApplyAS2DepthsCommand());\r\n\t\t\t\thasDepthChanges = false;\r\n\t\t\t}\r\n\r\n\t\t\tvar length_code = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tif (length_code > 0) {\r\n\t\t\t\t// TODO: Script should probably not be attached to keyframes?\r\n\t\t\t\tvar frame_code = this.awd_file_data.newBlockBytes.readUTFBytes(length_code);\r\n\t\t\t\tframe.addPostConstructCommand(new ExecuteScriptCommand(frame_code));\r\n\t\t\t\t//traceString += \"\\nframe-code = \" + frame_code;\r\n\t\t\t}\r\n\t\t\t//traceString += commandString;\r\n\t\t\t//trace(\"length_code = \"+length_code+\" frame_code = \"+frame_code);\r\n\t\t\tthis.awd_file_data.newBlockBytes.readUnsignedInt();// user attributes - skip for now\r\n\t\t\t//console.log(traceString);\r\n\t\t\tnew_mc.addFrame(frame);\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = new_mc;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| isScene = \" + isScene + \"| sceneID = \" + sceneID + \"| numFrames = \" + numFrames);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = MovieClipAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\r\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\r\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\r\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nclass PrefabAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar name:string;\r\n\t\tvar prefab:PrefabBase;\r\n\t\tvar primType:number;\r\n\t\tvar subs_parsed:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar bsm:Matrix3D;\r\n\r\n\t\t// Read name and sub count\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tprimType = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tprops = this.awd_file_data.parseProperties({101:this.awd_file_data.geoNrType, 102:this.awd_file_data.geoNrType, 103:this.awd_file_data.geoNrType, 110:this.awd_file_data.geoNrType, 111:this.awd_file_data.geoNrType, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 303:AWD3Utils.UINT16, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL, 703:AWD3Utils.BOOL, 704:AWD3Utils.BOOL});\r\n\r\n\t\tvar primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"]\r\n\r\n\t\tswitch (primType) {\r\n\t\t\t// to do, not all properties are set on all primitives\r\n\r\n\t\t\tcase 1:\r\n\t\t\t\tprefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tprefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\tprefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\r\n\t\t\t\tif (!props.get(701, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\r\n\t\t\t\tif (!props.get(702, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\r\n\t\t\t\tif (!props.get(703, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 5:\r\n\t\t\t\tprefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 7:\r\n\t\t\t\tprefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tprefab = new PrefabBase();\r\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\r\n\t\t\t//geom.subGeometries;\r\n\t\t\t//geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\r\n\t\t}\r\n\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = prefab;\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tif ((primType < 0) || (primType > 7)) {\r\n\t\t\t\tprimType = 0;\r\n\t\t\t}\r\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + this.awd_file_data.cur_block.name + \"| type = \" + primitiveTypes[primType]);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = PrefabAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\r\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\r\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\r\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\r\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\r\n\r\nclass ShadowMethodAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar type:number;\r\n\t\tvar data_len:number;\r\n\t\tvar asset:ShadowMethodBase;\r\n\t\tvar shadowLightID:number;\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tshadowLightID = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar light:LightBase=<LightBase> this.awd_file_data.getAssetByID(shadowLightID);\r\n\r\n\t\tif (light==undefined) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the TargetLight (ID = \" + shadowLightID + \" ) for this.awd_file_data ShadowMethod - ShadowMethod not created\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tasset = this.parseShadowMethodList(light);\r\n\r\n\t\tif (!asset)\r\n\t\t\treturn;\r\n\t\tthis.awd_file_data.parseUserAttributes(); // Ignore for now\r\n\t\tthis.awd_file_data.cur_block.data = asset;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", light.name);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// this.awd_file_data functions reads and creates a ShadowMethodMethod\r\n\tprivate parseShadowMethodList(light:LightBase):ShadowMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar shadowMethod:ShadowMethodBase;\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 101:this.awd_file_data.propsNrType, 102:this.awd_file_data.propsNrType, 103:this.awd_file_data.propsNrType, 201:AWD3Utils.UINT32, 202:AWD3Utils.UINT32, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 401:AWD3Utils.UINT8, 402:AWD3Utils.UINT8, 601:AWD3Utils.COLOR, 602:AWD3Utils.COLOR, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL, 801:AWD3Utils.MTX4x4});\r\n\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>\r\n\t\tswitch (methodType) {\r\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this.awd_file_data CascadeShadowMapMethod - ShadowMethod not created\");\r\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\r\n\t\t\t//\t\t\t\t\t}\r\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 1002: //ShadowNearMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\tvar shadow_meth:ShadowMapMethodBase = <ShadowMapMethodBase>this.awd_file_data.getAssetByID(targetID);\r\n\t\t\t\tif (shadow_meth==undefined) {\r\n\t\t\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this.awd_file_data ShadowNearMethod - ShadowMethod not created\");\r\n\t\t\t\t\treturn shadowMethod;\r\n\t\t\t\t}\r\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> shadow_meth);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1101: //ShadowFilteredMethod\r\n\r\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 1102: //ShadowDitheredMethod\r\n\r\n\r\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1103: //ShadowSoftMethod\r\n\r\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1104: //ShadowHardMethod\r\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\treturn shadowMethod;\r\n\t}\r\n}\r\n\r\nexport = ShadowMethodAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\r\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\r\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\r\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\r\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\r\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\r\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\r\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\r\n\r\nclass SharedMethodAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tvar asset:EffectMethodBase;\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tasset = this.parseSharedMethodList();\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = asset;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\r\n\t\t}\r\n\t}\r\n\r\n\t// this.awd_file_data functions reads and creates a EffectMethod\r\n\tprivate parseSharedMethodList():EffectMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar effectMethodReturn:EffectMethodBase;\r\n\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BADDR, 2:AWD3Utils.BADDR, 3:AWD3Utils.BADDR, 101:this.awd_file_data.propsNrType, 102:this.awd_file_data.propsNrType, 103:this.awd_file_data.propsNrType, 104:this.awd_file_data.propsNrType, 105:this.awd_file_data.propsNrType, 106:this.awd_file_data.propsNrType, 107:this.awd_file_data.propsNrType, 201:AWD3Utils.UINT32, 202:AWD3Utils.UINT32, 301:AWD3Utils.UINT16, 302:AWD3Utils.UINT16, 401:AWD3Utils.UINT8, 402:AWD3Utils.UINT8, 601:AWD3Utils.COLOR, 602:AWD3Utils.COLOR, 701:AWD3Utils.BOOL, 702:AWD3Utils.BOOL});\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tswitch (methodType) {\r\n\t\t\t// Effect Methods\r\n\t\t\tcase 401: //ColorMatrix\r\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 402: //ColorTransform\r\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\r\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\r\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 403: //EnvMap\r\n\r\n\t\t\t\t/*\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\tconsole.log('ENV MAP', targetID);\r\n\r\n\r\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [ TextureBase.assetType ], \"CubeTexture\");\r\n\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data EnvMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(<SingleCubeTexture> returnedArray[1], <number> props.get(101, 1));\r\n\t\t\t\ttargetID = props.get(2, 0);\r\n\t\t\t\tif (targetID > 0) {\r\n\t\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the Mask-texture (ID = \" + targetID + \" ) for this.awd_file_data EnvMapMethod\");\r\n\r\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\r\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <Texture2DBase> returnedArray[1];\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t\tcase 404: //LightMapMethod\r\n\t\t\t\t/*\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this.awd_file_data LightMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(returnedArray[1], this.awd_file_data.getBlendModeStringFromEnum(props.get(401, 10))); //usesecondaryUV not set\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureProjector.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this.awd_file_data ProjectiveTextureMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 406: //RimLightMethod\r\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\r\n\t\t\t\tbreak;\r\n\t\t\tcase 407: //AlphaMaskMethod\r\n\t\t\t\t/*\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType]);\r\n\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the Alpha-texture (ID = \" + targetID + \" ) for this.awd_file_data AlphaMaskMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(returnedArray[1], props.get(701, false));\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data RefractionEnvMapMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\r\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 410: //FresnelEnvMapMethod\r\n\t\t\t\t/*\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.awd_file_data.getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\r\n\t\t\t\t//if (!returnedArray[0])\r\n\t\t\t\t//\tthis.awd_file_data._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this.awd_file_data FresnelEnvMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(returnedArray[1], props.get(101, 1));\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t\tcase 411: //FogMethod\r\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\treturn effectMethodReturn;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport = SharedMethodAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass Single2DTextureAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\r\n\t\tvar asset:Single2DTexture;\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\t//this.awd_file_data._texture_users[this.awd_file_data._cur_block_id.toString()] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\r\n\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\r\n\r\n\t\t} else {\r\n\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray;\r\n\t\t\tdata = new ByteArray();\r\n\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\r\n\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\r\n\r\n\t\t\t//\r\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\r\n\t\t\t//\r\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\r\n\t\t\t// This gives the browser time to initialise image width / height.\r\n\r\n\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\r\n\t\t// Ignore for now\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Bitmap for Texture\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = Single2DTextureAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\n\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nclass SingleCubeTextureAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar data_len:number;\r\n\t\tvar i:number;\r\n\r\n\t\t//this.awd_file_data._cubeTextures = new Array<any>();\r\n\t\t//this.awd_file_data._texture_users[ this.awd_file_data._cur_block_id.toString() ] = [];\r\n\r\n\t\tvar type:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\r\n\t\t//this.awd_file_data._blocks[blockID].name =\r\n\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\t//this.awd_file_data.texture_users[this.awd_file_data.cur_block_id.toString()] = [];\r\n\t\t\t//this.awd_file_data.cubeTextures.push(null);\r\n\r\n\t\t\t// External\r\n\t\t\tif (type == 0) {\r\n\t\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar url:string;\r\n\t\t\t\turl = this.awd_file_data.newBlockBytes.readUTFBytes(data_len);\r\n\r\n\t\t\t\tthis.awd_file_data.cur_block.dependencies_urls.push(url);\r\n\t\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block_id.toString() + \"#\" + i, new URLRequest(url), false, null, true);\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdata_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar data:ByteArray;\r\n\t\t\t\tdata = new ByteArray();\r\n\r\n\t\t\t\tthis.awd_file_data.newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t\tthis.awd_file_data.cur_block.dependencies_data.push(data);\r\n\t\t\t\t//this.awd_file_data._pAddDependency(this.awd_file_data.cur_block_id.toString() + \"#\" + i, null, false, ParserUtils.byteArrayToImage(data), true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.awd_file_data.cur_block.state=AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES;\r\n\t\t// Ignore for now\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t//this.awd_file_data._pPauseAndRetrieveDependencies();\r\n\t\t//this.awd_file_data._blocks[blockID].data = asset;\r\n\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing 6 \" + textureStylesNames[type] + \" Bitmaps for CubeTexture\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SingleCubeTextureAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nclass SkeletonAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar skeleton:Skeleton = new Skeleton();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tthis.awd_file_data.parseProperties(null); // Discard properties for now\r\n\r\n\t\tvar joints_parsed:number /*uint*/ = 0;\r\n\t\twhile (joints_parsed < num_joints) {\r\n\t\t\tvar joint:SkeletonJoint;\r\n\t\t\tvar ibp:Matrix3D;\r\n\t\t\t// Ignore joint id\r\n\t\t\tthis.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\tjoint = new SkeletonJoint();\r\n\t\t\tjoint.parentIndex = this.awd_file_data.newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\r\n\t\t\tjoint.name = this.awd_file_data.parseVarStr();\r\n\r\n\t\t\tibp = this.awd_file_data.parseMatrix3D();\r\n\t\t\tjoint.inverseBindPose = ibp.rawData;\r\n\t\t\t// Ignore joint props/attributes for now\r\n\t\t\tthis.awd_file_data.parseProperties(null);\r\n\t\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\t\tskeleton.joints.push(joint);\r\n\t\t\tjoints_parsed++;\r\n\t\t}\r\n\r\n\t\t// Discard attributes for now\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = skeleton;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SkeletonAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\n\r\nclass SkeletonAnimClipAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar frame_dur:number;\r\n\t\tvar pose_addr:number /*uint*/;\r\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_frames:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tthis.awd_file_data.parseProperties(null); // Ignore properties for now\r\n\r\n\t\tvar frames_parsed:number /*uint*/ = 0;\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tpose_addr = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tframe_dur = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\tvar skel_pose:SkeletonPose = <SkeletonPose>this.awd_file_data.getAssetByID(pose_addr);\r\n\t\t\tif (skel_pose!=undefined) {\r\n\t\t\t\tclip.addFrame(skel_pose, frame_dur);\r\n\t\t\t}\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\t// Ignore attributes for now\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = clip;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SkeletonAnimClipAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nclass SkeletonPoseAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar pose:SkeletonPose = new SkeletonPose();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tthis.awd_file_data.parseProperties(null); // Ignore properties for now\r\n\r\n\r\n\t\tvar joints_parsed:number /*uint*/ = 0;\r\n\t\twhile (joints_parsed < num_joints) {\r\n\t\t\tvar joint_pose:JointPose;\r\n\t\t\tvar has_transform:number /*uint*/;\r\n\t\t\tjoint_pose = new JointPose();\r\n\t\t\thas_transform = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\tif (has_transform == 1) {\r\n\t\t\t\tvar mtx_data:Array<number> = this.awd_file_data.parseMatrix43RawData();\r\n\r\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\r\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\r\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\r\n\r\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\r\n\t\t\t}\r\n\t\t\tjoints_parsed++;\r\n\t\t}\r\n\t\t// Skip attributes for now\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = pose;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + this.awd_file_data.cur_block.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SkeletonPoseAWDParser;",
    "import EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nclass SkyboxAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar cubeTexAddr:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\r\n\t\tvar cube_tex:SingleCubeTexture = undefined;\r\n\t\tif(cubeTexAddr>0) {\r\n\t\t\tcube_tex = <SingleCubeTexture> this.awd_file_data.getAssetByID(cubeTexAddr);\r\n\t\t}\r\n\t\tif(cube_tex==undefined){\r\n\t\t\tcube_tex=<SingleCubeTexture>this.awd_file_data.getDefaultCubeTexture();\r\n\t\t}\r\n\t\t//if ((!returnedArrayCubeTex[0]) && (cubeTexAddr != 0))\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the Cubetexture (ID = \" + cubeTexAddr + \" ) for this.awd_file_data Skybox\");\r\n\t\tvar new_skybox:Skybox = new Skybox(<SingleCubeTexture> cube_tex);\r\n\r\n\t\tthis.awd_file_data.parseProperties(null)\r\n\t\tnew_skybox.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = new_skybox;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + this.awd_file_data.cur_block.name + \"' | CubeTexture-Name = \" + cube_tex.name);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = SkyboxAWDParser;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport Font\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\r\nimport TesselatedFontTable\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nclass TesselatedFontAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar new_font:Font=new Font();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar font_style_cnt:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"Font font_style_cnt = \"+font_style_cnt);\r\n\t\tfor (var i:number = 0; i < font_style_cnt; ++i) {\r\n\t\t\tvar font_style_name:string = this.awd_file_data.parseVarStr();\r\n\t\t\t//console.log(\"Font font_style_name = \"+font_style_name);\r\n\t\t\tvar new_font_style:TesselatedFontTable=new_font.get_font_table(font_style_name);\r\n\t\t\tnew_font_style.set_font_em_size(this.awd_file_data.newBlockBytes.readUnsignedInt());\r\n\t\t\t//console.log(\"Font new_font_style.font_em_size = \"+new_font_style.get_font_em_size);\r\n\t\t\tvar font_style_char_cnt:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t//console.log(\"Font font_style_char_cnt = \"+font_style_char_cnt);\r\n\t\t\tfor (var i:number = 0; i < font_style_char_cnt; ++i) {\r\n\r\n\t\t\t\tvar font_style_char:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"Font font_style_char = \"+font_style_char);\r\n\t\t\t\t// todo: this.awd_file_data is basically a simplified version of the subgeom-parsing done in parseTriangleGeometry. Make a parseSubGeom() instead (?)\r\n\t\t\t\tvar sm_len:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar sm_end:number = this.awd_file_data.newBlockBytes.position + sm_len;\r\n\t\t\t\t//console.log(\"Font sm_len = \"+sm_len);\r\n\r\n\t\t\t\t//this.awd_file_data.parseProperties(null); // no properties for font-table subgeos\r\n\t\t\t\t// Loop through data streams\r\n\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < sm_end) {\r\n\t\t\t\t\tvar idx:number = 0;\r\n\t\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n\t\t\t\t\t// Type, field type, length\r\n\t\t\t\t\tstr_type = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_ftype = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\r\n\r\n\t\t\t\t\tif (str_type == 2) {//face indicies positions\r\n\t\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\t\tindices[idx++] = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\r\n\t\t\t\t\t\tvar idx_pos:number = 0;\r\n\t\t\t\t\t\tvar idx_curves:number = 0;\r\n\t\t\t\t\t\tvar idx_uvs:number = 0;\r\n\r\n\t\t\t\t\t\tvar positions:Array<number> = new Array<number>();\r\n\t\t\t\t\t\tvar curveData:Array<number> = new Array<number>();\r\n\t\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// x\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// y\r\n\t\t\t\t\t\t\tpositions[idx_pos++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// type\r\n\r\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t\tcurveData[idx_curves++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 2\r\n\r\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t\tuvs[idx_uvs++] = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);// curve value 1\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.awd_file_data.parseProperties(null);// no attributes for font-table subgeos\r\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(new AttributesBuffer());\r\n\t\t\t\tcurve_sub_geom.setIndices(indices);\r\n\t\t\t\tcurve_sub_geom.setPositions(positions);\r\n\t\t\t\tcurve_sub_geom.setCurves(curveData);\r\n\t\t\t\tcurve_sub_geom.setUVs(uvs);\r\n\t\t\t\tnew_font_style.set_subgeo_for_char(font_style_char.toString(), curve_sub_geom);\r\n\t\t\t}\r\n\t\t\t//console.log(\"Parsed a font-table\");\r\n\r\n\t\t}\r\n\t\t//console.log(\"Parsed a font\");\r\n\t\tthis.awd_file_data.parseProperties(null);\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = new_font;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a font: Name = '\" + this.awd_file_data.cur_block.name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\n\r\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\r\n\r\nclass TextfieldAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tprivate factory:AS2SceneGraphFactory;\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.factory = new AS2SceneGraphFactory();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar newTextField = this.factory.createTextField();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar text_field_type:number=this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\tif(text_field_type==0) {\r\n\t\t\tnewTextField.type = \"static\";\r\n\t\t}\r\n\t\telse if(text_field_type==1) {\r\n\t\t\tnewTextField.type = \"dynamic\";\r\n\t\t}\r\n\t\telse if(text_field_type==2) {\r\n\t\t\tnewTextField.type = \"input\";\r\n\t\t}\r\n\t\telse if(text_field_type==3) {\r\n\t\t\tnewTextField.type =\"input\";\r\n\t\t\tnewTextField.displayAsPassword=true;\r\n\t\t}\r\n\r\n\t\tnewTextField.width=this.awd_file_data.newBlockBytes.readFloat();\r\n\t\tnewTextField.height=this.awd_file_data.newBlockBytes.readFloat();\r\n\t\tvar num_paragraphs:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar complete_text:string = \"\";\r\n\t\t//console.log(\"num_paragraphs  '\" + num_paragraphs);\r\n\t\tvar text_format:TextFormat;\r\n\t\tfor(var paracnt:number=0; paracnt<num_paragraphs; paracnt++){\r\n\r\n\t\t\tvar num_textruns:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t//console.log(\"num_textruns  '\" + num_textruns);\r\n\t\t\tfor(var textrun_cnt:number=0; textrun_cnt<num_textruns; textrun_cnt++) {\r\n\r\n\t\t\t\tvar format_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"format_id  '\" + format_id);\r\n\t\t\t\tvar textFormat:TextFormat = <TextFormat>this.awd_file_data.getAssetByID(format_id);\r\n\t\t\t\tif (textFormat==undefined) {\r\n\t\t\t\t\ttext_format = new TextFormat();\r\n\t\t\t\t}\r\n\t\t\t\t//console.log(\"text_format  '\" + text_format.name);\r\n\t\t\t\tvar txt_length = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"txt_length  '\" + txt_length);\r\n\t\t\t\tif (txt_length > 0) {\r\n\t\t\t\t\tvar this_txt:string = this.awd_file_data.newBlockBytes.readUTFBytes(txt_length);\r\n\t\t\t\t\t//newTextField.appendText(this_txt, text_format);\r\n\t\t\t\t\tcomplete_text+=this_txt;\r\n\t\t\t\t\t//console.log(\"this_txt  '\" + this_txt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//newTextField.closeParagraph();\r\n\t\t}\r\n\t\tnewTextField.textFormat=text_format;\r\n\t\tnewTextField.text=complete_text;\r\n\r\n\t\t//newTextField.construct_geometry();\r\n\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.BOOL, 3:AWD3Utils.BOOL, 4:AWD3Utils.BOOL, 5:AWD3Utils.BOOL, 7:AWD3Utils.UINT8, 8:AWD3Utils.UINT8, 9:AWD3Utils.UINT8});\r\n\t\tnewTextField.selectable = props.get(1, false);\r\n\t\tnewTextField.border =  props.get(3, false);\r\n\t\t//newTextField.renderHTML =  props.get(4, false);\r\n\t\t//newTextField.scrollable =  props.get(5, false);\r\n\t\t//newTextField.text_flow =  props.get(7, 0);\r\n\t\t//newTextField.orientationMode =  props.get(8, 0);\r\n\t\t//newTextField.line_mode =  props.get(9, 0);\r\n\r\n\t\tnewTextField.extra = this.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data = newTextField;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a TextField: Name = '\" + newTextField.name + \"| text  = \" + complete_text);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = TextfieldAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\r\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TextformatAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar newTextFormat:TextFormat = new TextFormat();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\t//console.log(\"this.awd_file_data._blocks[blockID].name  '\" + this.awd_file_data._blocks[blockID].name );\r\n\t\tvar font_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"font_id  '\" + font_id);\r\n\t\tvar font_style_name:string = this.awd_file_data.parseVarStr();\r\n\t\t//console.log(\"font_style_name  '\" + font_style_name);\r\n\t\tvar font:Font = <Font>this.awd_file_data.getAssetByID(font_id);\r\n\t\tif (font==undefined) {\r\n\t\t\tfont = new Font();\r\n\t\t}\r\n\t\tnewTextFormat.font_name = font.name;\r\n\t\tvar font_table:TesselatedFontTable = font.get_font_table(font_style_name);\r\n\t\tif(font_table!=null){\r\n\t\t\tnewTextFormat.font_style = font_style_name;\r\n\t\t\tnewTextFormat.font_table = font_table;\r\n\t\t}\r\n\r\n\t\tvar data_id:number = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"mat  '\" + data_id);\r\n\t\tvar mat:BasicMaterial = <BasicMaterial> this.awd_file_data.getAssetByID(data_id);\r\n\r\n\t\tif (mat==undefined) {\r\n\t\t\tmat = new BasicMaterial();\r\n\t\t}\r\n\t\tmat.bothSides=true;\r\n\r\n\t\tvar num_uv_values:number = this.awd_file_data.newBlockBytes.readUnsignedByte();\r\n\t\t//console.log(\"num_uv_values  '\" + num_uv_values);\r\n\t\tvar uv_values:Array<number>=[];\r\n\t\tfor(var uvcnt:number=0; uvcnt<num_uv_values; uvcnt++){\r\n\t\t\tvar uv_value:number=this.awd_file_data.newBlockBytes.readFloat();\r\n\t\t\tuv_values.push(uv_value);\r\n\t\t\t//console.log(\"uv_value  '\" + uv_value);\r\n\t\t}\r\n\t\tnewTextFormat.uv_values=uv_values;\r\n\t\tvar format_props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT16, 2:AWD3Utils.UINT16, 3:AWD3Utils.UINT8,4:AWD3Utils.UINT8,5:AWD3Utils.UINT8,6:AWD3Utils.UINT8, 7:AWD3Utils.UINT16, 8:AWD3Utils.UINT16, 9:AWD3Utils.UINT16, 10:AWD3Utils.UINT16});\r\n\r\n\t\tnewTextFormat.size = format_props.get(1,12);\r\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\r\n\t\t//newTextFormat.rotated = format_props.get(3,false);\r\n\t\tnewTextFormat.kerning = format_props.get(4,true);\r\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\r\n\t\t//newTextFormat.align = format_props.get(6,0);\r\n\t\tnewTextFormat.indent = format_props.get(7,0);\r\n\t\tnewTextFormat.leftMargin = format_props.get(8,0);\r\n\t\tnewTextFormat.rightMargin = format_props.get(9,0);\r\n\t\t//newTextFormat.linespacing = format_props.get(10,0);\r\n\t\tnewTextFormat.size = format_props.get(1,12);\r\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\r\n\t\t//newTextFormat.rotated = format_props.get(3,false);\r\n\t\tnewTextFormat.kerning = format_props.get(4,true);\r\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\r\n\t\tnewTextFormat.material = mat;\r\n\t\tthis.awd_file_data.parseUserAttributes();// textformat has no extra-properties\r\n\t\t//newTextFormat.extra =\r\n\r\n\t\tthis.awd_file_data.cur_block.data = newTextFormat;\r\n\t\tif (this.awd_file_data.debug) {\r\n\t\t\tconsole.log(\"Parsed a TextFormat: Name = '\" + name + \" font: \"+font.name);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = TextformatAWDParser;/**\r\n * Created by 80prozent on 4/18/2015.\r\n */\r\n",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Short3Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport EventDispatcher\t\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\n\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\n\r\nclass VertexAnimClipAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar poseOnly:boolean=false;\r\n\t\tif(this.awd_file_data.cur_block.type==111){\r\n\t\t\tposeOnly=true\r\n\t\t}\r\n\t\tvar num_frames:number /*uint*/ = 1;\r\n\t\tvar num_submeshes:number /*uint*/;\r\n\t\tvar frames_parsed:number /*uint*/;\r\n\t\tvar subMeshParsed:number /*uint*/;\r\n\t\tvar frame_dur:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar str_len:number;\r\n\t\tvar str_end:number;\r\n\t\tvar geometry:Geometry;\r\n\t\tvar subGeom:TriangleSubGeometry;\r\n\t\tvar idx:number /*int*/ = 0;\r\n\t\tvar indices:Short3Attributes;\r\n\t\tvar verts:Array<number>;\r\n\t\tvar num_Streams:number /*int*/ = 0;\r\n\t\tvar streamsParsed:number /*int*/ = 0;\r\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar thisGeo:Geometry;\r\n\t\tvar clip:VertexClipNode = new VertexClipNode();\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar geoAdress:number /*int*/ = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\tvar geom:Geometry = <Geometry>this.awd_file_data.getAssetByID(geoAdress);\r\n\t\tif (geom==undefined) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the target-Geometry-Object \" + geoAdress + \" ) for this.awd_file_data VertexClipNode\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar uvs:Array<Float32Array> = this.awd_file_data.getUVForVertexAnimation(geoAdress);\r\n\t\tif (!poseOnly)\r\n\t\t\tnum_frames = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\r\n\t\tnum_submeshes = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tnum_Streams = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tstreamsParsed = 0;\r\n\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\tstreamtypes.push(this.awd_file_data.newBlockBytes.readUnsignedShort());\r\n\t\t\tstreamsParsed++;\r\n\t\t}\r\n\t\tprops = this.awd_file_data.parseProperties({1:AWD3Utils.BOOL, 2:AWD3Utils.BOOL});\r\n\r\n\t\tclip.looping = props.get(1, true);\r\n\t\tclip.stitchFinalFrame = props.get(2, false);\r\n\r\n\t\tframes_parsed = 0;\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tframe_dur = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\t\tgeometry = new Geometry();\r\n\t\t\tsubMeshParsed = 0;\r\n\t\t\twhile (subMeshParsed < num_submeshes) {\r\n\t\t\t\tstreamsParsed = 0;\r\n\t\t\t\tstr_len = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this.awd_file_data.newBlockBytes.position + str_len;\r\n\t\t\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\r\n\t\t\t\t\t\tindices = geom.subGeometries[subMeshParsed].indices;\r\n\t\t\t\t\t\tverts = new Array<number>();\r\n\t\t\t\t\t\tidx = 0;\r\n\t\t\t\t\t\twhile (this.awd_file_data.newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\t\tx = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t\t\ty = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t\t\tz = this.awd_file_data.readNumber(this.awd_file_data.accuracyGeo);\r\n\t\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsubGeom = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\t\t\t\tsubGeom.setIndices(indices);\r\n\t\t\t\t\t\tsubGeom.setPositions(verts);\r\n\t\t\t\t\t\tsubGeom.setUVs(uvs[subMeshParsed]);\r\n\t\t\t\t\t\tsubGeom.setNormals(null);\r\n\t\t\t\t\t\tsubGeom.setTangents(null);\r\n\t\t\t\t\t\tsubGeom.autoDeriveNormals = false;\r\n\t\t\t\t\t\tsubGeom.autoDeriveTangents = false;\r\n\t\t\t\t\t\tsubMeshParsed++;\r\n\t\t\t\t\t\tgeometry.addSubGeometry(subGeom)\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tthis.awd_file_data.newBlockBytes.position = str_end;\r\n\t\t\t\t\tstreamsParsed++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tclip.addFrame(geometry, frame_dur);\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tthis.awd_file_data.cur_block.data=clip;\r\n\t\tif (this.awd_file_data.debug)\r\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + geom.name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = VertexAnimClipAWDParser;",
    "\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AWDBlockParserBase\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParserBase\");\r\nimport AWDProperties\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWD3Utils\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\n\r\nclass VertexAnimationSetAWDParser extends AWDBlockParserBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tpublic parseFromBytes():void\r\n\t{\r\n\t\tvar poseBlockAdress:number /*int*/\r\n\t\tthis.awd_file_data.cur_block.name = this.awd_file_data.parseVarStr();\r\n\t\tvar num_frames:number /*uint*/ = this.awd_file_data.newBlockBytes.readUnsignedShort();\r\n\t\tvar props:AWDProperties = this.awd_file_data.parseProperties({1:AWD3Utils.UINT16});\r\n\t\tvar frames_parsed:number /*uint*/ = 0;\r\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\r\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tposeBlockAdress = this.awd_file_data.newBlockBytes.readUnsignedInt();\r\n\t\t\tvar animNode:AnimationNodeBase = <AnimationNodeBase>this.awd_file_data.getAssetByID(poseBlockAdress);\r\n\t\t\tif (animNode==undefined) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not find the AnimationClipNode Nr \" + frames_parsed + \" ( \" + poseBlockAdress + \" ) for this.awd_file_data AnimationSet\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (animNode instanceof VertexClipNode)\r\n\t\t\t\t\tvertexFrames.push(<VertexClipNode>animNode)\r\n\t\t\t\tif (animNode instanceof SkeletonClipNode)\r\n\t\t\t\t\tskeletonFrames.push(<SkeletonClipNode>animNode)\r\n\t\t\t}\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\r\n\t\t\t//this.awd_file_data._blocks[blockID].addError(\"Could not create this.awd_file_data AnimationSet, because it contains no animations\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.awd_file_data.parseUserAttributes();\r\n\t\tif (vertexFrames.length > 0) {\r\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\r\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\r\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\r\n\t\t\tthis.awd_file_data.cur_block.data = newVertexAnimationSet;\r\n\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + newVertexAnimationSet.name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames.toString());\r\n\t\t\treturn;\r\n\t\t} else if (skeletonFrames.length > 0) {\r\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\r\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\r\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\r\n\t\t\tthis.awd_file_data.cur_block.data = newSkeletonAnimationSet;\r\n\t\t\tif (this.awd_file_data.debug)\r\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + newSkeletonAnimationSet.name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = VertexAnimationSetAWDParser;",
    "import BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\n\r\nimport AWDBitFlags\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\nimport AWDBlock\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\n\r\n/**\r\n * AWD3FileData stores the data loaded for a AWD-file. It also gives access to some helper functions.\r\n */\r\nclass AWD3FileData\r\n{\r\n\t//set to \"true\" to have some console.logs in the Console\r\n\tprivate _debug:boolean = false;\r\n\r\n\tprivate _cur_block:AWDBlock;\r\n\tprivate _blocks:Array<AWDBlock>;\r\n\tprivate _newBlockBytes:ByteArray;\r\n\r\n\tpublic  major_version:number;\r\n\tpublic  minor_version:number;\r\n\r\n\tprivate _accuracyOnBlocks:boolean = false;\r\n\r\n\tprivate _accuracyMatrix:boolean;\r\n\tprivate _accuracyGeo:boolean;\r\n\tprivate _accuracyProps:boolean;\r\n\tprivate _matrixNrType:number;\r\n\tprivate _geoNrType:number;\r\n\tprivate _propsNrType:number;\r\n\r\n\tprivate blendModeDic:Array<string>;\r\n\tprivate _depthSizeDic:Array<number>;\r\n\r\n\tprivate _defaultCubeTexture:SingleCubeTexture;\r\n\t/**\r\n\t * Creates a new AWD3FileData object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.major_version=0;\r\n\t\tthis.minor_version=0;\r\n\r\n\t\tthis._blocks = new Array<AWDBlock>();\r\n\t\tthis._blocks.push(new AWDBlock(255, 0));\r\n\t\tthis._cur_block=this._blocks[0];\r\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.ADD);\r\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\r\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\r\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\r\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\r\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\r\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\r\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\r\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\r\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\r\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\r\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\r\n\t\tthis._depthSizeDic.push(256);\r\n\t\tthis._depthSizeDic.push(512);\r\n\t\tthis._depthSizeDic.push(2048);\r\n\t\tthis._depthSizeDic.push(1024);\r\n\t}\r\n\r\n\tpublic getDepthSizeFromEnum(depthSize:number):number\r\n\t{\r\n\t\treturn this._depthSizeDic[depthSize];\r\n\t}\r\n\tpublic getBlendModeStringFromEnum(blendmode:number):string\r\n\t{\r\n\t\treturn this.blendModeDic[blendmode];\r\n\t}\r\n\r\n\tpublic dispose():void\r\n\t{\r\n\r\n\t\tfor (var c in this._blocks) {\r\n\r\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[ c ];\r\n\t\t\tb.dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tpublic get accuracyOnBlocks():boolean\r\n\t{\r\n\t\treturn this._accuracyOnBlocks;\r\n\t}\r\n\tpublic get accuracyMatrix():boolean\r\n\t{\r\n\t\treturn this._accuracyMatrix;\r\n\t}\r\n\tpublic set accuracyMatrix(new_accuracyMatrix:boolean)\r\n\t{\r\n\t\tthis._accuracyMatrix = new_accuracyMatrix;\r\n\t}\r\n\tpublic get accuracyProps():boolean\r\n\t{\r\n\t\treturn this._accuracyProps;\r\n\t}\r\n\tpublic set accuracyProps(new_accuracyProps:boolean)\r\n\t{\r\n\t\tthis._accuracyProps = new_accuracyProps;\r\n\t}\r\n\tpublic set accuracyGeo(new_accuracyGeo:boolean)\r\n\t{\r\n\t\tthis._accuracyGeo = new_accuracyGeo;\r\n\t}\r\n\tpublic get accuracyGeo():boolean\r\n\t{\r\n\t\treturn this._accuracyGeo;\r\n\t}\r\n\tpublic get debug():boolean\r\n\t{\r\n\t\treturn this._debug;\r\n\t}\r\n\r\n\tpublic get matrixNrType():number\r\n\t{\r\n\t\treturn this._matrixNrType;\r\n\t}\r\n\tpublic set matrixNrType(newmatrixNrType:number)\r\n\t{\r\n\t\tthis._matrixNrType = newmatrixNrType;\r\n\t}\r\n\r\n\tpublic get propsNrType():number\r\n\t{\r\n\t\treturn this._propsNrType;\r\n\t}\r\n\tpublic set propsNrType(new_props_nr:number)\r\n\t{\r\n\t\tthis._propsNrType = new_props_nr;\r\n\t}\r\n\r\n\tpublic get geoNrType():number\r\n\t{\r\n\t\treturn this._geoNrType;\r\n\t}\r\n\tpublic set geoNrType(new_geoNrType:number)\r\n\t{\r\n\t\tthis._geoNrType = new_geoNrType;\r\n\t}\r\n\r\n\r\n\tpublic set newBlockBytes(new_newBlockBytes:ByteArray)\r\n\t{\r\n\t\tthis._newBlockBytes = new_newBlockBytes;\r\n\t}\r\n\tpublic get newBlockBytes():ByteArray\r\n\t{\r\n\t\treturn this._newBlockBytes;\r\n\t}\r\n\tpublic create_new_block(type:number, id:number)\r\n\t{\r\n\t\tvar new_block:AWDBlock= new AWDBlock(this._blocks.length, type);\r\n\t\tthis._cur_block=new_block;\r\n\t\tthis._blocks[id]=new_block;\r\n\t}\r\n\tpublic get cur_block():AWDBlock\r\n\t{\r\n\t\treturn this._cur_block;\r\n\t}\r\n\tpublic block_cnt():number\r\n\t{\r\n\t\treturn this._blocks.length;\r\n\t}\r\n\r\n\t//--Parser UTILS---------------------------------------------------------------------------\r\n\r\n\tpublic parseUserAttributes():Object\r\n\t{\r\n\t\tvar attributes:Object;\r\n\t\tvar list_len:number;\r\n\t\tvar attibuteCnt:number;\r\n\r\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\tif (list_len > 0) {\r\n\r\n\t\t\tvar list_end:number;\r\n\r\n\t\t\tattributes = {};\r\n\r\n\t\t\tlist_end = this._newBlockBytes.position + list_len;\r\n\r\n\t\t\twhile (this._newBlockBytes.position < list_end) {\r\n\t\t\t\tvar ns_id:number;\r\n\t\t\t\tvar attr_key:string;\r\n\t\t\t\tvar attr_type:number;\r\n\t\t\t\tvar attr_len:number;\r\n\t\t\t\tvar attr_val:any;\r\n\r\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\r\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_key = this.parseVarStr();\r\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn attributes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (attr_type) {\r\n\t\t\t\t\tcase AWD3Utils.AWDSTRING:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.INT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.INT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.INT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.BOOL:\r\n\t\t\t\t\tcase AWD3Utils.UINT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.UINT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.UINT32:\r\n\t\t\t\t\tcase AWD3Utils.BADDR:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.FLOAT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWD3Utils.FLOAT64:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\r\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattributes[attr_key] = attr_val;\r\n\t\t\t\tattibuteCnt += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\t}\r\n\r\n\tpublic parseProperties(expected:Object):AWDProperties\r\n\t{\r\n\t\tvar list_end:number;\r\n\t\tvar list_len:number;\r\n\t\tvar propertyCnt:number = 0;\r\n\t\tvar props:AWDProperties = new AWDProperties();\r\n\r\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\r\n\t\tlist_end = this._newBlockBytes.position + list_len;\r\n\r\n\t\tif (expected) {\r\n\r\n\t\t\twhile (this._newBlockBytes.position < list_end) {\r\n\t\t\t\tvar len:number;\r\n\t\t\t\tvar key:number;\r\n\t\t\t\tvar type:number;\r\n\r\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn props;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (expected.hasOwnProperty(key.toString())) {\r\n\t\t\t\t\ttype = expected[key];\r\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newBlockBytes.position += len;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpropertyCnt += 1;\r\n\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t}\r\n\r\n\t\treturn props;\r\n\r\n\t}\r\n\r\n\tprivate parseAttrValue(type:number, len:number):any\r\n\t{\r\n\t\tvar elem_len:number;\r\n\t\tvar read_func:Function;\r\n\r\n\t\tswitch (type) {\r\n\r\n\t\t\tcase AWD3Utils.BOOL:\r\n\t\t\tcase AWD3Utils.INT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.INT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.INT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.UINT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.UINT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.UINT32:\r\n\t\t\tcase AWD3Utils.COLOR:\r\n\t\t\tcase AWD3Utils.BADDR:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.FLOAT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.FLOAT64:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWD3Utils.AWDSTRING:\r\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\r\n\t\t\tcase AWD3Utils.VECTOR2x1:\r\n\t\t\tcase AWD3Utils.VECTOR3x1:\r\n\t\t\tcase AWD3Utils.VECTOR4x1:\r\n\t\t\tcase AWD3Utils.MTX3x2:\r\n\t\t\tcase AWD3Utils.MTX3x3:\r\n\t\t\tcase AWD3Utils.MTX4x3:\r\n\t\t\tcase AWD3Utils.MTX4x4:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif (elem_len < len) {\r\n\t\t\tvar list:Array<any> = [];\r\n\t\t\tvar num_read:number = 0;\r\n\t\t\tvar num_elems:number = len/elem_len;\r\n\r\n\t\t\twhile (num_read < num_elems) {\r\n\t\t\t\tlist.push(read_func.apply(this._newBlockBytes)); // list.push(read_func());\r\n\t\t\t\tnum_read++;\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\t\t} else {\r\n\r\n\t\t\tvar val:any = read_func.apply(this._newBlockBytes);//read_func();\r\n\t\t\treturn val;\r\n\t\t}\r\n\t}\r\n\r\n\t// Helper - functions\r\n\tpublic getUVForVertexAnimation(meshID:number /*uint*/):Array<Float32Array>\r\n\t{\r\n\t\tif (this._blocks[meshID].data instanceof Mesh)\r\n\t\t\tmeshID = this._blocks[meshID].geoID;\r\n\t\tif (this._blocks[meshID].uvsForVertexAnimation)\r\n\t\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\t\tvar geometry:Geometry = (<Geometry> this._blocks[meshID].data);\r\n\t\tvar geoCnt:number /*int*/ = 0;\r\n\t\tvar sub_geom:TriangleSubGeometry;\r\n\t\tthis._blocks[meshID].uvsForVertexAnimation = new Array<Float32Array>();\r\n\t\twhile (geoCnt < geometry.subGeometries.length) {\r\n\t\t\tsub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\r\n\t\t\tthis._blocks[meshID].uvsForVertexAnimation.push(sub_geom.uvs.get(sub_geom.numVertices));\r\n\t\t\tgeoCnt++;\r\n\t\t}\r\n\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\t}\r\n\r\n\tpublic parseVarStr():string\r\n\t{\r\n\r\n\t\tvar len:number = this._newBlockBytes.readUnsignedShort();\r\n\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\t}\r\n\r\n\tpublic getBlockByID(assetID:number):AWDBlock\r\n\t{\r\n\t\treturn this._blocks[assetID];\r\n\t}\r\n\tpublic getAssetByID(assetID:number):IAsset\r\n\t{\r\n\t\treturn this._blocks[assetID].data;\r\n\t}\r\n\tprivate getDefaultAsset(assetType:string):IAsset\r\n\t{\r\n\t\tswitch (true) {\r\n\t\t\tcase (assetType == SingleCubeTexture.assetType):\r\n\t\t\t\treturn this.getDefaultCubeTexture();\r\n\t\t\t\tbreak;\r\n\t\t\tcase (assetType == Single2DTexture.assetType):\r\n\t\t\t\treturn DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\tbreak;\r\n\t\t\tcase (assetType == MethodMaterial.assetType):\r\n\t\t\t\treturn DefaultMaterialManager.getDefaultMaterial();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic getDefaultCubeTexture():IAsset\r\n\t{\r\n\t\tif (!this._defaultCubeTexture) {\r\n\t\t\tvar defaultBitmap:BitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\t\tvar bitmapImageCube = new BitmapImageCube(defaultBitmap.width);\r\n\r\n\t\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\t\tbitmapImageCube.draw(i, defaultBitmap);\r\n\r\n\r\n\t\t\tthis._defaultCubeTexture = new SingleCubeTexture(bitmapImageCube);\r\n\t\t\tthis._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t\t}\r\n\r\n\t\treturn <IAsset> this._defaultCubeTexture;\r\n\t}\r\n\r\n\tpublic  readNumber(precision:boolean = false):number\r\n\t{\r\n\t\tif (precision)\r\n\t\t\treturn this._newBlockBytes.readDouble();\r\n\t\treturn this._newBlockBytes.readFloat();\r\n\r\n\t}\r\n\r\n\tpublic parseMatrix3D():Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\r\n\t}\r\n\r\n\tprivate parseMatrix32RawData():Array<number>\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n\tpublic parseMatrix43RawData():Array<number>\r\n\t{\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(16);\r\n\r\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[3] = 0.0;\r\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[7] = 0.0;\r\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[11] = 0.0;\r\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[15] = 1.0;\r\n\r\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\r\n\r\n\t\tif (isNaN(mtx_raw[0])) {\r\n\t\t\tmtx_raw[0] = 1;\r\n\t\t\tmtx_raw[1] = 0;\r\n\t\t\tmtx_raw[2] = 0;\r\n\t\t\tmtx_raw[4] = 0;\r\n\t\t\tmtx_raw[5] = 1;\r\n\t\t\tmtx_raw[6] = 0;\r\n\t\t\tmtx_raw[8] = 0;\r\n\t\t\tmtx_raw[9] = 0;\r\n\t\t\tmtx_raw[10] = 1;\r\n\t\t\tmtx_raw[12] = 0;\r\n\t\t\tmtx_raw[13] = 0;\r\n\t\t\tmtx_raw[14] = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n}\r\n\r\nexport = AWD3FileData;\r\n\r\n\r\n\r\n",
    "\r\nclass AWD3Utils {\r\n\tpublic static BLOCKSTATE_FINALIZE:number = 0;\r\n\tpublic static BLOCKSTATE_INVALID:number = 1;\r\n\tpublic static BLOCKSTATE_LOAD_DEPENDENICES:number = 2;\r\n\tpublic static BLOCKSTATE_NO_ASSET:number = 3;\r\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\r\n\tpublic static UNCOMPRESSED:number = 0;\r\n\tpublic static DEFLATE:number = 1;\r\n\tpublic static LZMA:number = 2;\r\n\tpublic static INT8:number = 1;\r\n\tpublic static INT16:number = 2;\r\n\tpublic static INT32:number = 3;\r\n\tpublic static UINT8:number = 4;\r\n\tpublic static UINT16:number = 5;\r\n\tpublic static UINT32:number = 6;\r\n\tpublic static FLOAT32:number = 7;\r\n\tpublic static FLOAT64:number = 8;\r\n\tpublic static BOOL:number = 21;\r\n\tpublic static COLOR:number = 22;\r\n\tpublic static BADDR:number = 23;\r\n\tpublic static AWDSTRING:number = 31;\r\n\tpublic static AWDBYTEARRAY:number = 32;\r\n\tpublic static VECTOR2x1:number = 41;\r\n\tpublic static VECTOR3x1:number = 42;\r\n\tpublic static VECTOR4x1:number = 43;\r\n\tpublic static MTX3x2:number = 44;\r\n\tpublic static MTX3x3:number = 45;\r\n\tpublic static MTX4x3:number = 46;\r\n\tpublic static MTX4x4:number = 47;\r\n}\r\nexport = AWD3Utils;",
    "\r\n/**\r\n *\r\n */\r\nclass AWDBitFlags\r\n{\r\n\tpublic static FLAG1:number = 1;\r\n\tpublic static FLAG2:number = 2;\r\n\tpublic static FLAG3:number = 4;\r\n\tpublic static FLAG4:number = 8;\r\n\tpublic static FLAG5:number = 16;\r\n\tpublic static FLAG6:number = 32;\r\n\tpublic static FLAG7:number = 64;\r\n\tpublic static FLAG8:number = 128;\r\n\tpublic static FLAG9:number = 256;\r\n\tpublic static FLAG10:number = 512;\r\n\tpublic static FLAG11:number = 1024;\r\n\tpublic static FLAG12:number = 2048;\r\n\tpublic static FLAG13:number = 4096;\r\n\tpublic static FLAG14:number = 8192;\r\n\tpublic static FLAG15:number = 16384;\r\n\tpublic static FLAG16:number = 32768;\r\n\r\n\tpublic static test(flags:number, testFlag:number):boolean\r\n\t{\r\n\t\treturn (flags & testFlag) == testFlag;\r\n\t}\r\n}\r\nexport = AWDBitFlags;",
    "import ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\nclass AWDBlock\r\n{\r\n\tpublic id:number;\r\n\tpublic name:string;\r\n\tpublic type:number;\r\n\tpublic data:any;\r\n\tpublic dependencies_data:Array<ByteArray>;\r\n\tpublic dependencies_urls:Array<string>;\r\n\tpublic loaded_dependencies:Array<any>;\r\n\tpublic loaded_dependencies_cnt:number;\r\n\tpublic len:number;\r\n\tpublic geoID:number;\r\n\tpublic state:number;\r\n\tpublic extras:Object;\r\n\tpublic bytes:ByteArray;\r\n\tpublic errorMessages:Array<string>;\r\n\tpublic uvsForVertexAnimation:Array<Float32Array>;\r\n\r\n\tconstructor(this_id:number, this_type:number)\r\n\t{\r\n\t\tthis.type=this_type;\r\n\t\tthis.id=this_id;\r\n\t\tthis.state = AWD3Utils.BLOCKSTATE_FINALIZE;\r\n\t\tthis.dependencies_data=Array<any>();\r\n\t\tthis.dependencies_urls=Array<string>();\r\n\t\tif(this_type==83){\r\n\t\t\tthis.loaded_dependencies=Array<any>(6);\r\n\t\t}\r\n\t\tthis.loaded_dependencies_cnt=0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t\tthis.id = null;\r\n\t\tthis.bytes = null;\r\n\t\tthis.errorMessages = null;\r\n\t\tthis.uvsForVertexAnimation = null;\r\n\r\n\t}\r\n\r\n\tpublic addError(errorMsg:string):void\r\n\t{\r\n\t\tif (!this.errorMessages)\r\n\t\t\tthis.errorMessages = new Array<string>();\r\n\r\n\t\tthis.errorMessages.push(errorMsg);\r\n\t}\r\n}\r\nexport = AWDBlock;",
    "\r\nclass AWDProperties\r\n{\r\n\tpublic set(key:number, value:any):void\r\n\t{\r\n\t\tthis[ key.toString() ] = value;\r\n\t}\r\n\r\n\tpublic get(key:number, fallback:any):any\r\n\t{\r\n\t\tif (this.hasOwnProperty(key.toString())) {\r\n\t\t\treturn this[key.toString()];\r\n\t\t} else {\r\n\t\t\treturn fallback;\r\n\t\t}\r\n\t}\r\n}\r\nexport = AWDProperties;",
    "import BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\n\r\n\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\n\r\n\r\n\r\nimport AWDBitFlags\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBitFlags\");\r\nimport AWDProperties\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDProperties\");\r\n\r\nimport AWDAssetParsers\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3BlockParsers/AWDBlockParsers\");\r\nimport AWDBlock\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\r\nimport AWD3FileData\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3FileData\");\r\nimport AWD3Utils\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWD3Utils\");\r\n\r\n\r\n\r\n/**\r\n * AWD3Utils provides a parser for the AWD data type.\r\n */\r\nclass AWD3Parser extends ParserBase\r\n{\r\n\t//set to \"true\" to have some console.logs in the Console\r\n\tprivate _debug:boolean = false;\r\n\tprivate _byteData:ByteArray;\r\n\tprivate _startedParsing:boolean = false;\r\n\tprivate _compression:number;\r\n\tprivate _streaming:boolean;\r\n\tprivate _parsed_header:boolean = false;\r\n\tprivate _body:ByteArray;\r\n\tprivate _awd_data:AWD3FileData;\r\n\tprivate _block_parser:AWDAssetParsers;\r\n\r\n\t// temp for checking stats\r\n\tpublic total_time:number = 0;\r\n\tpublic geom_time:number = 0;\r\n\tpublic timeline_time:number = 0;\r\n\r\n\t/**\r\n\t * Creates a new AWD3Utils object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(block_parser:AWDAssetParsers = undefined)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n\t\tthis._block_parser=block_parser;\r\n\t\tif(this._block_parser==undefined){\r\n\t\t\tthis._block_parser=new AWDAssetParsers();\r\n\t\t}\r\n\t\tthis._awd_data=new AWD3FileData();\r\n\t\tthis._block_parser.init_parser(this._awd_data);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"awd\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t// this will be called when Dependency has finished loading.\r\n\t\t// the ressource dependecniy has a id that point to the awd_block waiting for it.\r\n\t\tif (resourceDependency.assets.length == 1) {\r\n\t\t\tvar this_block:AWDBlock = this._awd_data.getBlockByID(parseInt(resourceDependency.id));\r\n\t\t\tif(this_block.type==82){\r\n\t\t\t\tvar testure_asset:Single2DTexture = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\r\n\t\t\t\tthis_block.data = testure_asset; // Store finished asset\r\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> testure_asset, this_block.name);\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap for texture\");\r\n\t\t\t\t\tconsole.log(\"Parsed texture: Name = \" + this_block.name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(this_block.type==44){\r\n\t\t\t\t// todo: implement parsing of Audio block data\r\n\t\t\t\t/*\r\n\t\t\t\t var audio_asset:AudioAsset = <AudioAsset> resourceDependency.assets[0];\r\n\t\t\t\t this_block.data = audio_asset; // Store finished asset\r\n\t\t\t\t // Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t // previously suppressed while the dependency was loaded.\r\n\t\t\t\t this._pFinalizeAsset(<IAsset> audio_asset, this_block.name);\r\n\t\t\t\t */\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"Successfully loaded Sound into AudioAsset\");\r\n\t\t\t\t\tconsole.log(\"Loaded Sound: Name = \" + this_block.name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(this_block.type==83){\r\n\t\t\t\tthis_block.loaded_dependencies[resourceDependency.sub_id]= resourceDependency.assets[0];\r\n\t\t\t\tthis_block.loaded_dependencies_cnt++;\r\n\t\t\t\tif(this_block.loaded_dependencies_cnt==6){\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + resourceDependency.sub_id + \" / 6 for Cubetexture\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar cube_image_asset = new BitmapImageCube(this_block.loaded_dependencies[0].width);\r\n\r\n\t\t\t\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\t\t\t\tcube_image_asset.draw(i, this_block.loaded_dependencies[i]);\r\n\r\n\r\n\t\t\t\t\tvar cube_tex_asset = new SingleCubeTexture(cube_image_asset);\r\n\t\t\t\t\tthis_block.data = cube_tex_asset; // Store finished asset\r\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> cube_tex_asset, this_block.name);\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + this_block.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t//\tnot used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\r\n\t\t// \tthis means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency name\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\r\n\t{\r\n\t\tvar oldName:string = asset.name;\r\n\r\n\t\tif (asset) {\r\n\t\t\tvar block:AWDBlock = this._awd_data.getBlockByID(parseInt(resourceDependency.id));\r\n\t\t\t// Reset name of texture to the one defined in the AWD file,\r\n\t\t\t// as opposed to whatever the image parser came up with.\r\n\t\t\tasset.resetAssetPath(block.name, null, true);\r\n\t\t}\r\n\r\n\t\tvar newName:string = asset.name;\r\n\r\n\t\tasset.name = oldName;\r\n\r\n\t\treturn newName;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\tif (!this._parsed_header) {\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Parse header and decompress body if needed\r\n\t\t\tthis.parseHeader();\r\n\r\n\t\t\tswitch (this._compression) {\r\n\r\n\t\t\t\tcase AWD3Utils.DEFLATE:\r\n\t\t\t\tcase AWD3Utils.LZMA:\r\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase AWD3Utils.UNCOMPRESSED:\r\n\t\t\t\t\tthis._body = this._byteData;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t// Compressed AWD Formats not yet supported\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t case AWD3Parserutils.DEFLATE:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress();\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t case AWD3Parserutils.LZMA:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t //*/\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._parsed_header = true;\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t}\r\n\r\n\t\tif (this._body) {\r\n\r\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\r\n\t\t\t{\r\n\t\t\t\tthis.parseNextBlock();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Return complete status\r\n\t\t\tif (this._body.getBytesAvailable() == 0) {\r\n\t\t\t\tthis.dispose();\r\n\t\t\t\treturn  ParserBase.PARSING_DONE;\r\n\t\t\t} else {\r\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\tswitch (this._compression) {\r\n\r\n\t\t\t\tcase AWD3Utils.DEFLATE:\r\n\t\t\t\tcase AWD3Utils.LZMA:\r\n\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"(!) AWD3Utils Error: Compressed AWD formats not yet supported (!)\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\t\t\t// Error - most likely _body not set because we do not support compression.\r\n\t\t\treturn  ParserBase.PARSING_DONE;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate dispose():void\r\n\t{\r\n\t\tthis._awd_data.dispose();\r\n\t}\r\n\r\n\tprivate parseNextBlock():void\r\n\t{\r\n\t\tvar block_id:number = this._body.readUnsignedInt();\r\n\r\n\t\tvar ns:number = this._body.readUnsignedByte();\r\n\t\tvar block_type:number = this._body.readUnsignedByte();\r\n\t\tvar flags:number = this._body.readUnsignedByte();\r\n\t\tvar len:number = this._body.readUnsignedInt();\r\n\r\n\t\tvar blockCompression:boolean = AWDBitFlags.test(flags, AWDBitFlags.FLAG4);\r\n\t\tvar blockCompressionLZMA:boolean = AWDBitFlags.test(flags, AWDBitFlags.FLAG5);\r\n\r\n\t\tif (this._awd_data.accuracyOnBlocks) {\r\n\t\t\tthis._awd_data.accuracyMatrix = AWDBitFlags.test(flags, AWDBitFlags.FLAG1);\r\n\t\t\tthis._awd_data.accuracyGeo = AWDBitFlags.test(flags, AWDBitFlags.FLAG2);\r\n\t\t\tthis._awd_data.accuracyProps = AWDBitFlags.test(flags, AWDBitFlags.FLAG3);\r\n\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\t\tif (this._awd_data.accuracyGeo) {\r\n\t\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT64;\r\n\t\t\t}\r\n\r\n\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\t\tif (this._awd_data.accuracyMatrix) {\r\n\t\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT64;\r\n\t\t\t}\r\n\r\n\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\t\tif (this._awd_data.accuracyProps) {\r\n\t\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT64;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar blockEndAll:number = this._body.position + len;\r\n\r\n\t\tif (len > this._body.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\r\n\t\t\tthis._body.position += this._body.getBytesAvailable();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar newBlockBytes:ByteArray = new ByteArray();\r\n\t\tthis._body.readBytes(newBlockBytes, 0, len);\r\n\t\tthis._awd_data.newBlockBytes = newBlockBytes;\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// Compressed AWD Formats not yet supported\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\r\n\t\t\t/*\r\n\t\t\t if (blockCompressionLZMA)\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress(AWD3Parserutils.COMPRESSIONMODE_LZMA);\r\n\t\t\t }\r\n\t\t\t else\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress();\r\n\t\t\t }\r\n\t\t\t */\r\n\r\n\t\t}\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\r\n\t\t//----------------------------------------------------------------------------\r\n\r\n\t\tthis._awd_data.newBlockBytes.position = 0;\r\n\r\n\t\t// we create AWDBlock for all exept the metadata. the metadata block has is the first awdblock in the list by default.\r\n\t\t//if(block_type!=255)\r\n\t\tthis._awd_data.create_new_block(block_type, block_id);\r\n\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\r\n\t\t\t//block.len       = blockEndBlock;\r\n\t\t}\r\n\r\n\t\t//if (this._debug) {\r\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + block_id + \" | TypeID = \" + block_type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._awd_data.accuracyMatrix + \" | Geometry-Precision = \" + this._awd_data.accuracyGeo + \" | Properties-Precision = \" + this._awd_data.accuracyProps);\r\n\t\t//}\r\n\r\n\t\tvar time_start = performance.now();\r\n\r\n\t\t// first check if the block is any of the 3 blocks that does not produce a asset.\r\n\t\t\t// this block contains a asset.\r\n\t\tif(this._block_parser.parseAsset(block_type)){\r\n\t\t\tif(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_FINALIZE){\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset>this._awd_data.cur_block.data, this._awd_data.cur_block.name);\r\n\t\t\t\tif(this._awd_data.cur_block.data instanceof DisplayObject){\r\n\t\t\t\t\tif((<DisplayObjectContainer> this._awd_data.cur_block.data).parent==undefined){\r\n\t\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild((<DisplayObjectContainer> this._awd_data.cur_block.data));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_INVALID){\r\n\t\t\t\tconsole.log(\"ERROR while parsing block - type = \", block_type, \" id = \", block_id);\r\n\t\t\t}\r\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_LOAD_DEPENDENICES){\r\n\t\t\t\t// trigger No asset created yet, because the block has dependencies. load the dependencies:.\r\n\t\t\t\tfor(var r:number=0; r<this._awd_data.cur_block.dependencies_urls.length;r++){\r\n\t\t\t\t\t// load dependencies by url. let the parser system decide how to parse it\r\n\t\t\t\t\tthis._pAddDependency(this._awd_data.cur_block.id.toString(), new URLRequest(this._awd_data.cur_block.dependencies_urls[r]), false, null, true, r);\r\n\t\t\t\t}\r\n\t\t\t\tfor(var r:number=0; r<this._awd_data.cur_block.dependencies_data.length;r++) {\r\n\t\t\t\t\t// load dependencies from data. need to prepare the data based on block_type (image vs audio).\r\n\t\t\t\t\tif ((block_type == 82) || (block_type == 83)) {\r\n\t\t\t\t\t\tthis._pAddDependency(this._awd_data.cur_block.id.toString(), null, false, ParserUtils.byteArrayToImage(this._awd_data.cur_block.dependencies_data[r]), true, r);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (block_type == 44) {\r\n\t\t\t\t\t\t// todo: parse audio data\r\n\t\t\t\t\t\t// this._pAddDependency(this._awd_data.cur_block.id.toString(), null, false, this._awd_data.cur_block.dependencies_data[r], true, r);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t}\r\n\t\t\telse if(this._awd_data.cur_block.state==AWD3Utils.BLOCKSTATE_NO_ASSET){\r\n\t\t\t\t// this block does not produce any asset (metadata, namespace, command)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Encountered unknown blocktype - type = \", block_type, \" id = \", block_id);\r\n\t\t}\r\n\r\n\t\tvar time_end = performance.now();\r\n\t\tvar thisTime:number=time_end-time_start;\r\n\t\tthis.total_time+=thisTime;\r\n\t\tif(block_type==1){\r\n\t\t\tthis.geom_time+=thisTime;\r\n\t\t}\r\n\t\telse if(block_type==133){\r\n\t\t\tthis.timeline_time+=thisTime;\r\n\t\t}\r\n\t\tconsole.log(\"'parsed '\"+block_type+\"'  block in \"+thisTime+ \" ms\", \" total: \",this.total_time,\" geom: \",this.geom_time,\"timelines:\",this.timeline_time);\r\n\r\n\t\tthis._body.position = blockEndAll;\r\n\t\tthis._awd_data.newBlockBytes = null;\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\tprivate parseHeader():void\r\n\t{\r\n\t\tvar flags:number;\r\n\t\tvar body_len:number;\r\n\r\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\r\n\r\n\t\tthis._awd_data.major_version = this._byteData.readUnsignedByte();\r\n\t\tthis._awd_data.minor_version = this._byteData.readUnsignedByte();\r\n\r\n\t\tflags = this._byteData.readUnsignedShort(); // Parse bit flags\r\n\r\n\t\tthis._streaming = AWDBitFlags.test(flags, AWDBitFlags.FLAG1);\r\n\r\n\t\tif ((this._awd_data.major_version == 2) && (this._awd_data.minor_version == 1)) {\r\n\t\t\tthis._awd_data.accuracyMatrix = AWDBitFlags.test(flags, AWDBitFlags.FLAG2);\r\n\t\t\tthis._awd_data.accuracyGeo = AWDBitFlags.test(flags, AWDBitFlags.FLAG3);\r\n\t\t\tthis._awd_data.accuracyProps = AWDBitFlags.test(flags, AWDBitFlags.FLAG4);\r\n\t\t}\r\n\r\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\r\n\r\n\t\t// set storagePrecision types\r\n\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\tif (this._awd_data.accuracyGeo) {\r\n\t\t\tthis._awd_data.geoNrType = AWD3Utils.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\tif (this._awd_data.accuracyMatrix) {\r\n\t\t\tthis._awd_data.matrixNrType = AWD3Utils.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT32;\r\n\r\n\t\tif (this._awd_data.accuracyProps) {\r\n\t\t\tthis._awd_data.propsNrType = AWD3Utils.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._awd_data.major_version + \" - \" + this._awd_data.minor_version );\r\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._awd_data.accuracyMatrix + \" | Geometry-Precision = \" + this._awd_data.accuracyGeo + \" | Properties-Precision = \" + this._awd_data.accuracyProps);\r\n\t\t}\r\n\r\n\t\t// Check file integrity\r\n\t\tbody_len = this._byteData.readUnsignedInt();\r\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = AWD3Parser;\r\n\r\n",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Short3Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float3Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport WaveAudio\t\t\t\t\t\t= require(\"awayjs-core/lib/data/WaveAudio\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\r\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport TextField\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\r\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\nimport PrimitivePrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\r\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\r\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\r\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\r\nimport SingleCubeTexture\t\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\n\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod\");\r\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseDepthMethod\");\r\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCelMethod\");\r\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\r\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod\");\r\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseWrapMethod\");\r\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod\");\r\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod\");\r\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\r\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectEnvMapMethod\");\r\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFogMethod\");\r\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod\");\r\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectLightMapMethod\");\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectRimLightMethod\");\r\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod\");\r\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowDitheredMethod\");\r\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowFilteredMethod\");\r\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\r\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowHardMethod\");\r\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod\");\r\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCelMethod\");\r\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularPhongMethod\");\r\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowNearMethod\");\r\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\r\n\r\nimport BasicMaterial\t\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nimport TimelineSceneGraphFactory \t= require(\"awayjs-player/lib/factories/TimelineSceneGraphFactory\");\r\nimport AS2SceneGraphFactory \t\t= require(\"awayjs-player/lib/factories/AS2SceneGraphFactory\");\r\nimport MovieClip \t\t\t\t\t= require(\"awayjs-player/lib/display/MovieClip\");\r\nimport TimelineKeyFrame \t\t\t= require(\"awayjs-player/lib/timeline/TimelineKeyFrame\");\r\nimport AddChildCommand \t\t\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildCommand\");\r\nimport SetButtonCommand \t\t\t\t= require(\"awayjs-player/lib/timeline/commands/SetButtonCommand\");\r\n\r\nimport AddChildAtDepthCommand\t\t= require(\"awayjs-player/lib/timeline/commands/AddChildAtDepthCommand\");\r\nimport ApplyAS2DepthsCommand\t\t= require(\"awayjs-player/lib/timeline/commands/ApplyAS2DepthsCommand\");\r\nimport ExecuteScriptCommand \t\t= require(\"awayjs-player/lib/timeline/commands/ExecuteScriptCommand\");\r\nimport RemoveChildCommand \t\t\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildCommand\");\r\nimport RemoveChildrenAtDepthCommand\t= require(\"awayjs-player/lib/timeline/commands/RemoveChildrenAtDepthCommand\");\r\nimport SetInstanceNameCommand \t\t= require(\"awayjs-player/lib/timeline/commands/SetInstanceNameCommand\");\r\nimport UpdatePropertyCommand \t\t= require(\"awayjs-player/lib/timeline/commands/UpdatePropertyCommand\");\r\nimport SetMaskCommand \t\t        = require(\"awayjs-player/lib/timeline/commands/SetMaskCommand\");\r\n\r\nimport Font\t\t\t\t\t\t\t= require(\"awayjs-display/lib/text/Font\");\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport TextFormat\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextFieldType\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\n\r\nimport AWDBlock\t\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWD3ParserUtils/AWDBlock\");\r\n/**\r\n * AWDParser provides a parser for the AWD data type.\r\n */\r\nclass AWDParser extends ParserBase\r\n{\r\n\t//set to \"true\" to have some console.logs in the Console\r\n\tprivate _debug:boolean = true;\r\n\tprivate _byteData:ByteArray;\r\n\tprivate _startedParsing:boolean = false;\r\n\tprivate _cur_block_id:number;\r\n\tprivate _blocks:Array<AWDBlock>;\r\n\tprivate _newBlockBytes:ByteArray;\r\n\tprivate _version:Array<number>;\r\n\tprivate _compression:number;\r\n\tprivate _accuracyOnBlocks:boolean;\r\n\tprivate _accuracyMatrix:boolean;\r\n\tprivate _accuracyGeo:boolean;\r\n\tprivate _accuracyProps:boolean;\r\n\tprivate _matrixNrType:number;\r\n\tprivate _geoNrType:number;\r\n\tprivate _propsNrType:number;\r\n\tprivate _streaming:boolean;\r\n\tprivate _texture_users:Object = {};\r\n\tprivate _parsed_header:boolean = false;\r\n\tprivate _body:ByteArray;\r\n\tprivate _defaultTexture:Single2DTexture;     // HTML IMAGE TEXTURE >? !\r\n\tprivate _cubeBitmaps:Array<BitmapImage2D>;\r\n\tprivate _defaultBitmapMaterial:MethodMaterial;\r\n\tprivate _defaultCubeTexture:SingleCubeTexture;\r\n\r\n\r\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\r\n\tpublic static UNCOMPRESSED:number = 0;\r\n\tpublic static DEFLATE:number = 1;\r\n\tpublic static LZMA:number = 2;\r\n\tpublic static INT8:number = 1;\r\n\tpublic static INT16:number = 2;\r\n\tpublic static INT32:number = 3;\r\n\tpublic static UINT8:number = 4;\r\n\tpublic static UINT16:number = 5;\r\n\tpublic static UINT32:number = 6;\r\n\tpublic static FLOAT32:number = 7;\r\n\tpublic static FLOAT64:number = 8;\r\n\tpublic static BOOL:number = 21;\r\n\tpublic static COLOR:number = 22;\r\n\tpublic static BADDR:number = 23;\r\n\tpublic static AWDSTRING:number = 31;\r\n\tpublic static AWDBYTEARRAY:number = 32;\r\n\tpublic static VECTOR2x1:number = 41;\r\n\tpublic static VECTOR3x1:number = 42;\r\n\tpublic static VECTOR4x1:number = 43;\r\n\tpublic static MTX3x2:number = 44;\r\n\tpublic static MTX3x3:number = 45;\r\n\tpublic static MTX4x3:number = 46;\r\n\tpublic static MTX4x4:number = 47;\r\n\r\n\tprivate blendModeDic:Array<string>;\r\n\tprivate _depthSizeDic:Array<number>;\r\n\r\n\tprivate _time_all:number=0;\r\n\tprivate _time_geom:number=0;\r\n\tprivate _time_timeline:number=0;\r\n\tprivate _time_fonts:number=0;\r\n\tprivate _time_textfields:number=0;\r\n\tprivate _time_sounds:number=0;\r\n\tprivate _time_textures:number=0;\r\n\tprivate _time_materials:number=0;\r\n\tprivate _time_meshes:number=0;\r\n\r\n\r\n\t/**\r\n\t * Creates a new AWD3Parserutils object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n\t\tthis._blocks = new Array<AWDBlock>();\r\n\t\tthis._blocks[0] = new AWDBlock(0,255);\r\n\t\tthis._blocks[0].data = null; // Zero address means null in AWD\r\n\r\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.ADD);\r\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\r\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\r\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\r\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\r\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\r\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\r\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\r\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\r\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\r\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\r\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\r\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\r\n\r\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\r\n\t\tthis._depthSizeDic.push(256);\r\n\t\tthis._depthSizeDic.push(512);\r\n\t\tthis._depthSizeDic.push(2048);\r\n\t\tthis._depthSizeDic.push(1024);\r\n\t\tthis._version = Array<number>(); // will contain 2 int (major-version, minor-version) for awd-version-check\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"awd\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t// this will be called when Dependency has finished loading.\r\n\t\t// the ressource dependecniy has a id that point to the awd_block waiting for it.\r\n\t\t//console.log(\"AWDParser resolve dependencies\");\r\n\t\tif (resourceDependency.assets.length == 1) {\r\n\t\t\tvar this_block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\r\n\t\t\tif(this_block.type==82){\r\n\t\t\t\tvar texture_asset:Single2DTexture = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\r\n\t\t\t\tthis_block.data = texture_asset; // Store finished asset\r\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> texture_asset, this_block.name);\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap for texture\");\r\n\t\t\t\t\tconsole.log(\"Parsed texture: Name = \" + this_block.name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(this_block.type==44){\r\n\t\t\t\tvar audio_asset:WaveAudio = <WaveAudio> resourceDependency.assets[0];\r\n\t\t\t\tthis_block.data = audio_asset; // Store finished asset\r\n\t\t\t\t// Finalize texture asset to dispatch texture event, which was\r\n\t\t\t\t// previously suppressed while the dependency was loaded.\r\n\t\t\t\t//console.log(\"Parsing audio \" + this_block.name);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> audio_asset, this_block.name);\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"Successfully loaded Sound into WaveAudio\");\r\n\t\t\t\t\tconsole.log(\"Loaded audio: Name = \" + this_block.name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(this_block.type==83){\r\n\t\t\t\tthis_block.loaded_dependencies[resourceDependency.sub_id]= resourceDependency.assets[0];\r\n\t\t\t\tthis_block.loaded_dependencies_cnt++;\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + resourceDependency.sub_id + \" / 6 for Cubetexture\");\r\n\t\t\t\t}\r\n\t\t\t\tif(this_block.loaded_dependencies_cnt==6){\r\n\t\t\t\t\tvar cube_image_asset = new BitmapImageCube(this_block.loaded_dependencies[0].width);\r\n\r\n\t\t\t\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\t\t\t\tcube_image_asset.draw(i, this_block.loaded_dependencies[i]);\r\n\r\n\t\t\t\t\tvar cube_tex_asset = new SingleCubeTexture(cube_image_asset);\r\n\t\t\t\t\tthis_block.data = cube_tex_asset; // Store finished asset\r\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> cube_tex_asset, this_block.name);\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + this_block.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t//not used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\r\n\t\t// this means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency name\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\r\n\t{\r\n\t\tvar oldName:string = asset.name;\r\n\r\n\t\tif (asset) {\r\n\t\t\tvar block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\r\n\t\t\t// Reset name of texture to the one defined in the AWD file,\r\n\t\t\t// as opposed to whatever the image parser came up with.\r\n\t\t\tasset.resetAssetPath(block.name, null, true);\r\n\t\t}\r\n\r\n\t\tvar newName:string = asset.name;\r\n\r\n\t\tasset.name = oldName;\r\n\r\n\t\treturn newName;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\tif (!this._parsed_header) {\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Parse header and decompress body if needed\r\n\t\t\tthis.parseHeader();\r\n\r\n\t\t\tswitch (this._compression) {\r\n\r\n\t\t\t\tcase AWDParser.DEFLATE:\r\n\t\t\t\tcase AWDParser.LZMA:\r\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase AWDParser.UNCOMPRESSED:\r\n\t\t\t\t\tthis._body = this._byteData;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t// Compressed AWD Formats not yet supported\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t case AWD3Parserutils.DEFLATE:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress();\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t case AWD3Parserutils.LZMA:\r\n\r\n\t\t\t\t this._body = new ByteArray();\r\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\r\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\r\n\r\n\t\t\t\t break;\r\n\t\t\t\t //*/\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._parsed_header = true;\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t}\r\n\r\n\t\tif (this._body) {\r\n\r\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\r\n\t\t\t{\r\n\t\t\t\tthis.parseNextBlock();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// Return complete status\r\n\t\t\tif (this._body.getBytesAvailable() == 0) {\r\n\t\t\t\tthis.dispose();\r\n\t\t\t\treturn  ParserBase.PARSING_DONE;\r\n\t\t\t} else {\r\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\tswitch (this._compression) {\r\n\r\n\t\t\t\tcase AWDParser.DEFLATE:\r\n\t\t\t\tcase AWDParser.LZMA:\r\n\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"(!) AWDParser Error: Compressed AWD formats not yet supported (!)\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\t\t\t// Error - most likely _body not set because we do not support compression.\r\n\t\t\treturn  ParserBase.PARSING_DONE;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate dispose():void\r\n\t{\r\n\r\n\t\tfor (var c in this._blocks) {\r\n\r\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[ c ];\r\n\t\t\tb.dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate parseNextBlock():void\r\n\t{\r\n\t\tvar block:AWDBlock;\r\n\t\tvar assetData:IAsset;\r\n\t\tvar isParsed:boolean = false;\r\n\t\tvar ns:number;\r\n\t\tvar type:number;\r\n\t\tvar flags:number;\r\n\t\tvar len:number;\r\n\r\n\t\tvar start_timeing = 0;\r\n\t\tstart_timeing = performance.now();\r\n\r\n\t\tthis._cur_block_id = this._body.readUnsignedInt();\r\n\r\n\t\tns = this._body.readUnsignedByte();\r\n\t\ttype = this._body.readUnsignedByte();\r\n\t\tflags = this._body.readUnsignedByte();\r\n\t\tlen = this._body.readUnsignedInt();\r\n\r\n\t\tvar blockCompression:boolean = BitFlags.test(flags, BitFlags.FLAG4);\r\n\t\tvar blockCompressionLZMA:boolean = BitFlags.test(flags, BitFlags.FLAG5);\r\n\r\n\t\tif (this._accuracyOnBlocks) {\r\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG1);\r\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG2);\r\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG3);\r\n\t\t\tthis._geoNrType = AWDParser.FLOAT32;\r\n\r\n\t\t\tif (this._accuracyGeo) {\r\n\t\t\t\tthis._geoNrType = AWDParser.FLOAT64;\r\n\t\t\t}\r\n\r\n\t\t\tthis._matrixNrType = AWDParser.FLOAT32;\r\n\r\n\t\t\tif (this._accuracyMatrix) {\r\n\t\t\t\tthis._matrixNrType = AWDParser.FLOAT64;\r\n\t\t\t}\r\n\r\n\t\t\tthis._propsNrType = AWDParser.FLOAT32;\r\n\r\n\t\t\tif (this._accuracyProps) {\r\n\t\t\t\tthis._propsNrType = AWDParser.FLOAT64;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar blockEndAll:number = this._body.position + len;\r\n\r\n\t\tif (len > this._body.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\r\n\t\t\tthis._body.position += this._body.getBytesAvailable();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._newBlockBytes = new ByteArray();\r\n\r\n\r\n\t\tthis._body.readBytes(this._newBlockBytes, 0, len);\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// Compressed AWD Formats not yet supported\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\r\n\t\t\t/*\r\n\t\t\t if (blockCompressionLZMA)\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress(AWD3Parserutils.COMPRESSIONMODE_LZMA);\r\n\t\t\t }\r\n\t\t\t else\r\n\t\t\t {\r\n\t\t\t this._newBlockBytes.uncompress();\r\n\t\t\t }\r\n\t\t\t */\r\n\r\n\t\t}\r\n\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t//----------------------------------------------------------------------------\r\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\r\n\t\t//----------------------------------------------------------------------------\r\n\r\n\t\tthis._newBlockBytes.position = 0;\r\n\t\tblock = new AWDBlock(this._cur_block_id, type);\r\n\t\tblock.len = this._newBlockBytes.position + len;\r\n\t\tvar blockEndBlock:number = this._newBlockBytes.position + len;\r\n\r\n\t\tif (blockCompression) {\r\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\r\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\r\n\t\t\t//block.len       = blockEndBlock;\r\n\t\t}\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + this._cur_block_id + \" | TypeID = \" + type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\r\n\t\t}\r\n\r\n\t\tthis._blocks[this._cur_block_id] = block;\r\n\r\n\t\tif ((this._version[0] == 3) && (this._version[1] == 0)) {\r\n\t\t\t// probably should contain some info about the type of animation\r\n\t\t\tvar factory = new AS2SceneGraphFactory();\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 24:\r\n\t\t\t\t\tthis.parseMeshLibraryBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 25:\r\n\t\t\t\t\tthis.parseBillBoardLibraryBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 44:\r\n\t\t\t\t\tthis.parseAudioBlock(this._cur_block_id, factory);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 133:\r\n\t\t\t\t\tthis.parseTimeLine(this._cur_block_id, factory);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 134:\r\n\t\t\t\t\tthis.paresTextField(this._cur_block_id, factory);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 135:\r\n\t\t\t\t\tthis.parseTesselatedFont(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 136:\r\n\t\t\t\t\tthis.parseTextFormat(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ((this._version[0] > 2)||((this._version[0] >= 2) && (this._version[1] >= 1))) {\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 11:\r\n\t\t\t\t\tthis.parsePrimitves(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 31:\r\n\t\t\t\t\tthis.parseSkyboxInstance(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 41:\r\n\t\t\t\t\tthis.parseLight(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 42:\r\n\t\t\t\t\tthis.parseCamera(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//  case 43:\r\n\t\t\t\t//      parseTextureProjector(_cur_block_id);\r\n\t\t\t\t//      isParsed = true;\r\n\t\t\t\t//      break;\r\n\r\n\t\t\t\tcase 51:\r\n\t\t\t\t\tthis.parseLightPicker(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 81:\r\n\t\t\t\t\tthis.parseMaterial_v1(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 83:\r\n\t\t\t\t\tthis.parseCubeTexture(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 91:\r\n\t\t\t\t\tthis.parseSharedMethodBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 92:\r\n\t\t\t\t\tthis.parseShadowMethodBlock(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 111:\r\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id, true);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 112:\r\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 113:\r\n\t\t\t\t\tthis.parseVertexAnimationSet(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 122:\r\n\t\t\t\t\tthis.parseAnimatorSet(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 253:\r\n\t\t\t\t\tthis.parseCommand(this._cur_block_id);\r\n\t\t\t\t\tisParsed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t//*/\r\n\t\t}\r\n\t\t//*\r\n\t\tif (isParsed == false) {\r\n\t\t\tswitch (type) {\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.parseTriangleGeometrieBlock(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 22:\r\n\t\t\t\t\tthis.parseContainer(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 23:\r\n\t\t\t\t\tthis.parseMeshInstance(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 81:\r\n\t\t\t\t\tthis.parseMaterial(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 82:\r\n\t\t\t\t\tthis.parseTexture(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 101:\r\n\t\t\t\t\tthis.parseSkeleton(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 102:\r\n\t\t\t\t\tthis.parseSkeletonPose(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 103:\r\n\t\t\t\t\tthis.parseSkeletonAnimation(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 121:\r\n\t\t\t\t//this.parseUVAnimation(this._cur_block_id);\r\n\t\t\t\t//break;\r\n\t\t\t\tcase 254:\r\n\t\t\t\t\tthis.parseNameSpace(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 255:\r\n\t\t\t\t\tthis.parseMetaData(this._cur_block_id);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (this._debug) {\r\n\t\t\t\t\t\tconsole.log(\"AWDBlock:   Unknown BlockType  (BlockID = \" + this._cur_block_id + \") - Skip \" + len + \" bytes\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._newBlockBytes.position += len;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tvar msgCnt:number = 0;\r\n\t\tif (this._newBlockBytes.position == blockEndBlock) {\r\n\t\t\tif (this._debug) {\r\n\t\t\t\tif (block.errorMessages) {\r\n\t\t\t\t\twhile (msgCnt < block.errorMessages.length) {\r\n\t\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\r\n\t\t\t\t\t\tmsgCnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this._debug) {\r\n\t\t\t\tconsole.log(\"\\n\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._debug) {\r\n\r\n\t\t\t\tconsole.log(\"  (!)(!)(!) Error while reading AWDBlock ID \" + this._cur_block_id + \" = skip to next block\");\r\n\r\n\t\t\t\tif (block.errorMessages) {\r\n\t\t\t\t\twhile (msgCnt < block.errorMessages.length) {\r\n\t\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\r\n\t\t\t\t\t\tmsgCnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._body.position = blockEndAll;\r\n\t\tthis._newBlockBytes = null;\r\n\r\n\t\tvar end_timing = performance.now();\r\n\t\tvar time_delta = end_timing - start_timeing;\r\n\t\tthis._time_all+=time_delta;\r\n\t\tif(type==1){\r\n\t\t\tthis._time_geom+=time_delta;\r\n\t\t}\r\n\t\telse if(type==133){\r\n\t\t\tthis._time_timeline+=time_delta;\r\n\t\t}\r\n\t\telse if(type==135){\r\n\t\t\tthis._time_fonts+=time_delta;\r\n\t\t}\r\n\t\telse if(type==134){\r\n\t\t\tthis._time_textfields+=time_delta;\r\n\t\t}\r\n\t\telse if(type==44){\r\n\t\t\tthis._time_sounds+=time_delta;\r\n\t\t}\r\n\t\telse if(type==82){\r\n\t\t\tthis._time_materials+=time_delta;\r\n\t\t}\r\n\t\telse if(type==81){\r\n\t\t\tthis._time_textures+=time_delta;\r\n\t\t}\r\n\t\telse if(type==24){\r\n\t\t\tthis._time_meshes+=time_delta;\r\n\t\t}\r\n\t\tconsole.log(\"Parsed block of type: \"+type +\" in \"+time_delta+\" ms | parsing total: \"+this._time_all+\" | geoms: \"+this._time_geom+\" | timelines: \"+this._time_timeline+\" | fonts: \"+this._time_fonts);\r\n\r\n\t\tconsole.log(\"Parsed block of type: \"+type +\" in \"+time_delta+\" ms | sounbds: \"+this._time_sounds+\" | mats: \"+this._time_materials+\" | textures: \"+this._time_textures+\" | meshes: \"+this._time_meshes);\r\n\r\n\t}\r\n\r\n\r\n\t//--Parser Blocks---------------------------------------------------------------------------\r\n\r\n\r\n\tprivate parseTesselatedFont(blockID:number):void {\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tthis._blocks[blockID].name = name;\r\n\t\t//console.log(\"Font name = \"+this._blocks[blockID].name);\r\n\t\tvar font_style_cnt:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"Font font_style_cnt = \"+font_style_cnt);\r\n\t\tvar new_font:Font=new Font();\r\n\t\tfor (var i:number = 0; i < font_style_cnt; ++i) {\r\n\t\t\tvar font_style_name:string = this.parseVarStr();\r\n\t\t\t//console.log(\"Font font_style_name = \"+font_style_name);\r\n\t\t\tvar new_font_style:TesselatedFontTable=new_font.get_font_table(font_style_name);\r\n\t\t\tnew_font_style.set_font_em_size(this._newBlockBytes.readUnsignedInt());\r\n\t\t\t//console.log(\"Font new_font_style.font_em_size = \"+new_font_style.get_font_em_size);\r\n\t\t\tvar font_style_char_cnt:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t//console.log(\"Font font_style_char_cnt = \"+font_style_char_cnt);\r\n\t\t\tfor (var i:number = 0; i < font_style_char_cnt; ++i) {\r\n\r\n\t\t\t\tvar font_style_char:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"Font font_style_char = \"+font_style_char);\r\n\t\t\t\t// todo: this is basically a simplified version of the subgeom-parsing done in parseTriangleGeometry. Make a parseSubGeom() instead (?)\r\n\t\t\t\tvar sm_len:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar sm_end:number = this._newBlockBytes.position + sm_len;\r\n\t\t\t\t//console.log(\"Font sm_len = \"+sm_len);\r\n\r\n\t\t\t\t//this.parseProperties(null); // no properties for font-table subgeos\r\n\t\t\t\t// Loop through data streams\r\n\t\t\t\twhile (this._newBlockBytes.position < sm_end) {\r\n\t\t\t\t\tvar idx:number = 0;\r\n\t\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n\t\t\t\t\t// Type, field type, length\r\n\t\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\r\n\r\n\t\t\t\t\tif (str_type == 2) {//face indicies positions\r\n\t\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\t\tindices[idx++] = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\r\n\r\n\t\t\t\t\t\tvar curveData:ByteArray = new ByteArray();\r\n\t\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.parseProperties(null);// no attributes for font-table subgeos\r\n\r\n\t\t\t\tvar vertexBuffer:AttributesBuffer = new AttributesBuffer(28, str_len/28);\r\n\t\t\t\tvertexBuffer.bufferView = new Uint8Array(<ArrayBuffer> curveData.arraybytes);\r\n\r\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(vertexBuffer);\r\n\t\t\t\tcurve_sub_geom.setIndices(indices);\r\n\t\t\t\tcurve_sub_geom.setPositions(new Float3Attributes(vertexBuffer));\r\n\t\t\t\tcurve_sub_geom.setCurves(new Float2Attributes(vertexBuffer));\r\n\t\t\t\tcurve_sub_geom.setUVs(new Float2Attributes(vertexBuffer));\r\n\t\t\t\tnew_font_style.set_subgeo_for_char(font_style_char.toString(), curve_sub_geom);\r\n\t\t\t}\r\n\t\t\t//console.log(\"Parsed a font-table\");\r\n\r\n\t\t}\r\n\t\t//console.log(\"Parsed a font\");\r\n\t\tthis.parseProperties(null);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset>new_font, name);\r\n\t\tthis._blocks[blockID].data = new_font;\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a font: Name = '\" + name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate parseTextFormat(blockID:number):void {\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tthis._blocks[blockID].name = name;\r\n\t\t//console.log(\"this._blocks[blockID].name  '\" + this._blocks[blockID].name );\r\n\t\tvar font_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"font_id  '\" + font_id);\r\n\t\tvar font_style_name:string = this.parseVarStr();\r\n\t\t//console.log(\"font_style_name  '\" + font_style_name);\r\n\t\tvar returnArrayFont:Array<any> = this.getAssetByID(font_id, [Font.assetType]);\r\n\t\tvar font:Font;\r\n\t\tif (returnArrayFont[0]) {\r\n\t\t\tfont = <Font> returnArrayFont[1];\r\n\t\t} else {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Font for this TextFormat. A empty Font is created!\");\r\n\t\t\tfont = new Font();\r\n\t\t}\r\n\t\tvar newTextFormat:TextFormat = new TextFormat();\r\n\t\tnewTextFormat.font_name = font.name;\r\n\t\tvar font_table:TesselatedFontTable = font.get_font_table(font_style_name);\r\n\t\tif(font_table!=null){\r\n\t\t\tnewTextFormat.font_style = font_style_name;\r\n\t\t\tnewTextFormat.font_table = font_table;\r\n\t\t}\r\n\r\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t//console.log(\"mat  '\" + data_id);\r\n\t\tvar mat:BasicMaterial;\r\n\t\tvar returnedArrayMaterial:Array<any> = this.getAssetByID(data_id, [MethodMaterial.assetType, BasicMaterial.assetType]);\r\n\r\n\t\tif (returnedArrayMaterial[0]) {\r\n\t\t\tmat = <BasicMaterial> returnedArrayMaterial[1];\r\n\t\t} else {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Material for this TextFormat. Default Material will be used!\");\r\n\t\t\tmat = new BasicMaterial();\r\n\t\t}\r\n\t\tmat.bothSides=true;\r\n\r\n\t\tvar num_uv_values:number = this._newBlockBytes.readUnsignedByte();\r\n\t\t//console.log(\"num_uv_values  '\" + num_uv_values);\r\n\t\tvar uv_values:Array<number>=[];\r\n\t\tfor(var uvcnt:number=0; uvcnt<num_uv_values; uvcnt++){\r\n\t\t\tvar uv_value:number=this._newBlockBytes.readFloat();\r\n\t\t\tuv_values.push(uv_value);\r\n\t\t\t//console.log(\"uv_value  '\" + uv_value);\r\n\t\t}\r\n\t\tnewTextFormat.uv_values=uv_values;\r\n\t\tvar format_props:AWDProperties = this.parseProperties({1:AWDParser.UINT16, 2:AWDParser.UINT16, 3:AWDParser.UINT8,4:AWDParser.UINT8,5:AWDParser.UINT8,6:AWDParser.UINT8, 7:AWDParser.UINT16, 8:AWDParser.UINT16, 9:AWDParser.UINT16, 10:AWDParser.UINT16});\r\n\r\n\t\tnewTextFormat.size = format_props.get(1,12);\r\n\t\tnewTextFormat.letterSpacing = format_props.get(2,0);\r\n\t\t//newTextFormat.rotated = format_props.get(3,false);\r\n\t\tnewTextFormat.kerning = format_props.get(4,true);\r\n\t\t//newTextFormat.baseline_shift = format_props.get(5,1);\r\n\t\t//newTextFormat.align = format_props.get(6,0);\r\n\t\tnewTextFormat.indent = format_props.get(7,0);\r\n\t\tnewTextFormat.leftMargin = format_props.get(8,0);\r\n\t\tnewTextFormat.rightMargin = format_props.get(9,0);\r\n\t\t//newTextFormat.linespacing = format_props.get(10,0);\r\n\t\tnewTextFormat.material = mat;\r\n\t\tthis.parseUserAttributes();// textformat has no extra-properties\r\n\t\t//newTextFormat.extra =\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> newTextFormat, name);\r\n\t\tthis._blocks[blockID].data = newTextFormat;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a TextFormat: Name = '\" + name + \" font: \"+font.name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate paresTextField(blockID:number, factory:TimelineSceneGraphFactory):void {\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tthis._blocks[blockID].name = name;\r\n\t\t//console.log(\"name  '\" + name);\r\n        var newTextField = factory.createTextField();\r\n\t\tvar text_field_type:number=this._newBlockBytes.readUnsignedByte();\r\n\t\tif(text_field_type==0) {\r\n\t\t\tnewTextField.type = \"static\";\r\n\t\t}\r\n\t\telse if(text_field_type==1) {\r\n\t\t\tnewTextField.type = \"dynamic\";\r\n\t\t}\r\n\t\telse if(text_field_type==2) {\r\n\t\t\tnewTextField.type = \"input\";\r\n\t\t}\r\n\t\telse if(text_field_type==3) {\r\n\t\t\tnewTextField.type =\"input\";\r\n\t\t\tnewTextField.displayAsPassword=true;\r\n\t\t}\r\n\r\n\t\tnewTextField.width=this._newBlockBytes.readFloat();\r\n\t\tnewTextField.height=this._newBlockBytes.readFloat();\r\n\t\tvar num_paragraphs:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar complete_text:string = \"\";\r\n\t\t//console.log(\"num_paragraphs  '\" + num_paragraphs);\r\n\t\tvar text_format:TextFormat;\r\n\t\tfor(var paracnt:number=0; paracnt<num_paragraphs; paracnt++){\r\n\r\n\t\t\tvar num_textruns:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t//console.log(\"num_textruns  '\" + num_textruns);\r\n\t\t\tfor(var textrun_cnt:number=0; textrun_cnt<num_textruns; textrun_cnt++) {\r\n\r\n\t\t\t\tvar format_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"format_id  '\" + format_id);\r\n\t\t\t\tvar textFormatArray:Array<any> = this.getAssetByID(format_id, [TextFormat.assetType]);\r\n\t\t\t\tif (textFormatArray[0]) {\r\n\t\t\t\t\ttext_format = <TextFormat> textFormatArray[1];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find a Material for this Billboard. A empty material is created!\");\r\n\t\t\t\t\ttext_format = new TextFormat();\r\n\t\t\t\t}\r\n\t\t\t\t//console.log(\"text_format  '\" + text_format.name);\r\n\t\t\t\tvar txt_length = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t//console.log(\"txt_length  '\" + txt_length);\r\n\t\t\t\tif (txt_length > 0) {\r\n\t\t\t\t\tvar this_txt:string = this._newBlockBytes.readUTFBytes(txt_length);\r\n\t\t\t\t\t//newTextField.appendText(this_txt, text_format);\r\n\t\t\t\t\tcomplete_text+=this_txt;\r\n\t\t\t\t\t//console.log(\"this_txt  '\" + this_txt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//newTextField.closeParagraph();\r\n\t\t}\r\n\t\tnewTextField.textFormat=text_format;\r\n\t\tnewTextField.text=complete_text;\r\n\t\t//newTextField.construct_geometry();\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BOOL, 3:AWDParser.BOOL, 4:AWDParser.BOOL, 5:AWDParser.BOOL, 7:AWDParser.UINT8, 8:AWDParser.UINT8, 9:AWDParser.UINT8});\r\n\t\tnewTextField.selectable = props.get(1, false);\r\n\t\tnewTextField.border =  props.get(3, false);\r\n\t\t//newTextField.renderHTML =  props.get(4, false);\r\n\t\t//newTextField.scrollable =  props.get(5, false);\r\n\t\t//newTextField.text_flow =  props.get(7, 0);\r\n\t\t//newTextField.orientationMode =  props.get(8, 0);\r\n\t\t//newTextField.line_mode =  props.get(9, 0);\r\n\t\tnewTextField.extra = this.parseUserAttributes();\r\n\r\n\t\t//console.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\r\n\t\tthis._pFinalizeAsset(<IAsset> newTextField, name);\r\n\t\tthis._blocks[blockID].data = newTextField;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a TextField: Name = '\" + name + \"| text  = \" + complete_text);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Block ID = 25\r\n\tprivate parseBillBoardLibraryBlock(blockID:number):void {\r\n\r\n\t\tvar name:string = this.parseVarStr();\r\n\r\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mat:BasicMaterial;\r\n\t\tvar returnedArrayMaterial:Array<any> = this.getAssetByID(data_id, [MethodMaterial.assetType, BasicMaterial.assetType]);\r\n\r\n\t\tif (returnedArrayMaterial[0]) {\r\n\t\t\tmat = <BasicMaterial> returnedArrayMaterial[1];\r\n\t\t} else {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Material for this Billboard. A empty material is created!\");\r\n\t\t\tmat = new BasicMaterial();\r\n\t\t}\r\n\t\tmat.bothSides=true;\r\n\t\tvar billboard:Billboard = new Billboard(mat);\r\n\r\n\t\t// todo: optional matrix etc can be put in properties.\r\n\t\tthis.parseProperties(null);\r\n\r\n\t\tbillboard.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> billboard, name);\r\n\t\tthis._blocks[blockID].data = billboard;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a Library-Billboard: Name = '\" + name + \"| Material-Name = \" + mat.name);\r\n\t\t}\r\n\t}\r\n\t// Block ID = 24\r\n\tprivate parseMeshLibraryBlock(blockID:number):void {\r\n\t\tvar num_materials:number;\r\n\t\tvar materials_parsed:number;\r\n\r\n\t\tvar name:string = this.parseVarStr();\r\n\r\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar geom:Geometry;\r\n\t\tvar returnedArrayGeometry:Array<any> = this.getAssetByID(data_id, [Geometry.assetType]);\r\n\t\tif (returnedArrayGeometry[0]) {\r\n\t\t\tgeom = <Geometry> returnedArrayGeometry[1];\r\n\t\t} else {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Geometry for this Mesh. A empty Geometry is created!\");\r\n\t\t\tgeom = new Geometry();\r\n\t\t}\r\n\r\n\t\tthis._blocks[blockID].geoID = data_id;\r\n\t\tvar materials:Array<MethodMaterial> = new Array<MethodMaterial>();\r\n\t\tnum_materials = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar materialNames:Array<string> = new Array<string>();\r\n\t\tmaterials_parsed = 0;\r\n\r\n\t\tvar returnedArrayMaterial:Array<any>;\r\n\r\n\t\twhile (materials_parsed < num_materials) {\r\n\t\t\tvar mat_id:number;\r\n\t\t\tmat_id = this._newBlockBytes.readUnsignedInt();\r\n\t\t\treturnedArrayMaterial = this.getAssetByID(mat_id, [MethodMaterial.assetType, BasicMaterial.assetType])\r\n\t\t\tif ((!returnedArrayMaterial[0]) && (mat_id > 0)) {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find Material Nr \" + materials_parsed + \" (ID = \" + mat_id + \" ) for this Mesh\");\r\n\t\t\t}\r\n\r\n\t\t\tvar m:MethodMaterial = <MethodMaterial> returnedArrayMaterial[1];\r\n\t\t\t//m.preserveAlpha = true;\r\n\t\t\tm.alphaBlending = true;\r\n\t\t\tm.useColorTransform = true;\r\n\t\t\tmaterials.push(m);\r\n\t\t\tmaterialNames.push(m.name);\r\n\r\n\t\t\tmaterials_parsed++;\r\n\t\t}\r\n\r\n\t\tvar mesh:Mesh = new Mesh(geom, null);\r\n\r\n\r\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\r\n\t\t\tmesh.material = materials[0];\r\n\t\t} else if (materials.length > 1) {\r\n\t\t\tvar i:number;\r\n\r\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\r\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\r\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\r\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.parseProperties(null);\r\n\t\tmesh.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\r\n\t\tthis._blocks[blockID].data = mesh;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a Library-Mesh: Name = '\" + name + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\r\n\t\t}\r\n\t}\r\n\tprivate parseAudioBlock(blockID:number, factory:TimelineSceneGraphFactory):void {\r\n\r\n\t\t//var asset:Audio;todo create asset for audio\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\t//this._texture_users[this._cur_block_id.toString()] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\r\n\t\t\t// todo parser needs to be able to handle mp3 and wav files if we trigger the loading of external ressource\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\r\n\t\t\tconsole.log(\"Audio url = \"+url);\r\n\r\n\t\t} else {\r\n\t\t\t// todo: exporter does not export embed sounds yet\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray;\r\n\t\t\tdata = new ByteArray();\r\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t// todo parse sound from bytes\r\n\t\t\t// this._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.by(data), true);\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t//this._blocks[blockID].data = asset;todo\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"];\r\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Audio file\");\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 4\r\n\tprivate parseTimeLine(blockID:number, factory:TimelineSceneGraphFactory):void {\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar c:number;\r\n\t\tvar timeLineContainer = factory.createMovieClip();\r\n\t\tvar name = this.parseVarStr();\r\n\t\tvar isScene = !!this._newBlockBytes.readUnsignedByte();\r\n\t\tvar sceneID = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar fps:number = this._newBlockBytes.readFloat();\r\n\t\t//console.log(\"fps = \"+fps);\r\n\t\ttimeLineContainer.fps=fps;\r\n\t\tvar ms_per_frame = 1000 / fps;\r\n\t\tvar num_instances:number=0;\r\n\t\tvar num_all_display_instances:number=0;\r\n\r\n\r\n\t\t// register list of potential childs\r\n\t\t// a potential child can be reused on a timeline (added / removed / added)\r\n\t\t// However, for each potential child, we need to register the max-number of instances that a frame contains\r\n\t\t// we parse 2 lists of potential-childs:\r\n\t\t// -\tthe first list contains potential-childs that are only ever instanced once per frame.\r\n\t\t// -\tthe second list contains potential-childs that are instanced multiple times on some frames.\r\n\r\n\t\t// on registering a child, the child gets a incremental-id assigned. This is the id, that the commands are using to access the childs.\r\n\t\t// hence we need to be careful to register all objects in correct order.\r\n\r\n\t\tvar num_potential_childs:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_childs; i++) {\r\n\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this._blocks[resourceID].data;\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\ttimeLineContainer.registerPotentialChild(cmd_asset);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\r\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tnum_all_display_instances+=num_potential_childs;\r\n\t\tvar num_potential_childs_multi_instanced = this._newBlockBytes.readUnsignedShort();\r\n\t\tnum_potential_childs+=num_potential_childs_multi_instanced;\r\n\t\tfor (i = 0; i < num_potential_childs_multi_instanced; i++) {\r\n\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tnum_instances = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tnum_all_display_instances+=num_instances;\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this._blocks[resourceID].data;\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\r\n\t\t\t\t\ttimeLineContainer.registerPotentialChild(cmd_asset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tfor (j = 0; j < num_instances; j++) {\r\n\t\t\t\t\t//todo: register a default display object on timeline, so we do not mess up the incremental obj-id\r\n\t\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\r\n\t\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed \"+num_potential_childs+\" potential childs. They will be used by \"+num_all_display_instances+\" instances.\");\r\n\r\n\t\t// register list of potential sounds\r\n\t\t// a potential child can be reused on a timeline (added / removed / added)\r\n\t\tvar num_potential_sounds = this._newBlockBytes.readUnsignedShort();\r\n\t\tfor (i = 0; i < num_potential_sounds; i++) {\r\n\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar cmd_asset:DisplayObject = <DisplayObject>this._blocks[resourceID].data;\r\n\t\t\tif (cmd_asset != null) {\r\n\t\t\t\t//todo: register sound objects on movieclip\r\n\t\t\t\tconsole.log(\"ERROR when collecting objects for timeline\");\r\n\t\t\t\t//timeLineContainer.registerPotentialChild(cmd_asset);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//todo: this is a error that might break complete timeline, because all sound obj-id shift\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(\"Parsed \"+num_potential_sounds+\" potential sounds\");\r\n\r\n\t\tvar numFrames = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t//console.log(\"numFrames \"+numFrames);\r\n\t\t// var previousTimeLine:TimeLineFrame;\r\n\t\t// var fill_props:AWDProperties = this.parseProperties({1:AWD3Parserutils.UINT32});// { 1:UINT32, 6:AWDSTRING }  ); //; , 2:UINT32, 3:UINT32, 5:BOOL } );\r\n\r\n\r\n\t\tvar totalDuration:number;\r\n\t\tvar frameDuration:number;\r\n\t\tvar numLabels:number;\r\n\t\tvar numCommands:number;\r\n\t\tvar objectID:number;\r\n\t\tvar target_depth:number;\r\n\t\tvar resourceID:number;\r\n\t\tvar number_of_obj:number;\r\n\t\tvar commandType:number;\r\n\t\tvar frame:TimelineKeyFrame;\r\n\t\tvar label:string;\r\n\t\tvar hasDepthChanges:boolean;\r\n\t\ttotalDuration=0;\r\n\t\tfor (i = 0; i < numFrames; i++) {\r\n\t\t\tframe = new TimelineKeyFrame();\r\n\t\t\t// todo: remove the ms_per_frame to set the duration in frames\r\n\t\t\tframeDuration = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tframe.setFrameTime(totalDuration, frameDuration);\r\n\t\t\ttotalDuration += frameDuration;\r\n\t\t\t//console.log(\"duration = \" + frameDuration);\r\n\r\n\t\t\tnumLabels = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\t\tfor (j = 0; j < numLabels; j++) {\r\n\t\t\t\t// TODO: Temporary way to handle labels\r\n\t\t\t\tframe.label = this.parseVarStr();\r\n\t\t\t}\r\n\r\n\t\t\tnumCommands = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t//console.log(\"numCommands \"+numCommands);\r\n\t\t\t//traceString += \"\\n      Commands \" + numCommands;\r\n\t\t\thasDepthChanges = false;\r\n\t\t\tfor (j = 0; j < numCommands; j++) {\r\n\t\t\t\tcommandType = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\t\t\t// 1 = remove a number of objects by depth\r\n\t\t\t\t// 2 = add a object by child-id at specific depth\r\n\t\t\t\t// 3 = update a object by child-id\r\n\t\t\t\t// 4 = add / update sound - (not finished)\r\n\r\n\t\t\t\tswitch (commandType) {\r\n\r\n\t\t\t\t\tcase 1:// remove a number of objects at specific depth\r\n\t\t\t\t\t\tnumber_of_obj = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t//console.log(\"number_of_obj \", number_of_obj);\r\n\t\t\t\t\t\tvar remove_depths:Array<number>=new Array<number>();\r\n\t\t\t\t\t\tfor (c = 0; c < number_of_obj; c++) {\r\n\t\t\t\t\t\t\t// Remove Object Command\r\n\t\t\t\t\t\t\ttarget_depth = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\tremove_depths.push(target_depth);\r\n\t\t\t\t\t\t\t//console.log(\"\\n       - Remove object at depth: \" + target_depth);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tframe.addConstructCommand(new RemoveChildrenAtDepthCommand(remove_depths));\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2:// add a of object by child-id at specific depth\r\n\t\t\t\t\tcase 3:// update a object by child-id\r\n\t\t\t\t\tcase 6:// add a of button_instance\r\n\t\t\t\t\t\tobjectID = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t//console.log(\"add / update objectID \", objectID);\r\n\t\t\t\t\t\tif (commandType != 3) {\r\n\t\t\t\t\t\t\thasDepthChanges=true;\r\n\t\t\t\t\t\t\ttarget_depth = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t//console.log(\"target_depth \", target_depth);\r\n                            var potChild = timeLineContainer.getPotentialChildPrototype(objectID);\r\n\t\t\t\t\t\t\tif (potChild != undefined) {\r\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new AddChildAtDepthCommand(objectID, target_depth));\r\n\t\t\t\t\t\t\t\tif(commandType==6) {\r\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetButtonCommand(objectID));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t// if the object is a tetfield, we set the textfield-name as instancename\r\n\t\t\t\t\t\t\t\t\tif (potChild.isAsset(TextField)) {\r\n\t\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetInstanceNameCommand(objectID, potChild.name));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tconsole.log(\"ERROR: could not find the objectID \", objectID);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar props_flag = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t/*\tProps_flags\r\n\t\t\t\t\t\t 1: read display matrix - 6 x float,\r\n\t\t\t\t\t\t 2: read display matrix - read another UINT8-bitflag that determinates what matrix components to parse\r\n\t\t\t\t\t\t 3: read color matrix - 4 x float, 4 x uint16\r\n\t\t\t\t\t\t 4: read color matrix - read another UINT8-bitflag that determinates what matrix components to parse\r\n\t\t\t\t\t\t 5: blendmode - uint8\r\n\t\t\t\t\t\t 6: visible - boolean\r\n\t\t\t\t\t\t 7: AWD3Parserutils.UINT8\r\n\t\t\t\t\t\t });*/\r\n\t\t\t\t\t\t// read display matrix\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG1)) {\r\n\t\t\t\t\t\t\tvar thisMatrix = new Matrix3D();\r\n\t\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG2)) {\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[0] = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[1] = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[4] = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.rawData[5] = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisMatrix.position = new Vector3D(this._newBlockBytes.readFloat(), this._newBlockBytes.readFloat(), 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"_iMatrix3D\", thisMatrix));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// read colortransforms\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG3)) {\r\n\t\t\t\t\t\t\tvar thisColorTransform = new ColorTransform();\r\n\t\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG4)) {\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthisColorTransform.redMultiplier = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.greenMultiplier = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.blueMultiplier = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.alphaMultiplier = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\t\t\tthisColorTransform.redOffset = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.greenOffset = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.blueOffset = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t\tthisColorTransform.alphaOffset = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"colorTransform\", thisColorTransform));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG5)) {\r\n\t\t\t\t\t\t\tvar blendmode_int = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\t\t\tvar blendmode_string = this.blendModeDic[blendmode_int];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG6)) {\r\n\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"visible\", this._newBlockBytes.readByte()));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG7)) {\r\n\t\t\t\t\t\t\tvar instanceName = this.parseVarStr();\r\n\t\t\t\t\t\t\tif (instanceName.length) {\r\n\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetInstanceNameCommand(objectID, instanceName));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (BitFlags.test(props_flag, BitFlags.FLAG8)) {\r\n\t\t\t\t\t\t\tvar mask_id_nums = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\t\tvar mask_ids = new Array();\r\n\t\t\t\t\t\t\tfor (var mi_cnt = 0; mi_cnt < mask_id_nums; mi_cnt++) {\r\n\t\t\t\t\t\t\t\tmask_ids.push(this._newBlockBytes.readShort());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (mask_ids.length > 0) {\r\n\t\t\t\t\t\t\t\tif ((mask_ids.length == 1) && (mask_ids[0] == -1)) {\r\n\t\t\t\t\t\t\t\t\t// TODO: this object is used as mask\r\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new UpdatePropertyCommand(objectID, \"_iMaskID\", objectID));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\tframe.addConstructCommand(new SetMaskCommand(objectID, mask_ids));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 4:\r\n\r\n\t\t\t\t\t\t// Add Sound Command\r\n\t\t\t\t\t\t// TODO: create CommandPropsSound and check which asset to use\r\n\t\t\t\t\t\tobjectID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tresourceID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\t// TODO: implement sound in timeline\r\n\t\t\t\t\t\t//commandString += \"\\n      - Add new Sound AWD-ID = \" + resourceID.toString() + \" as object_id = \" + objectID.toString();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t//commandString += \"\\n       - Unknown Command Type = \" + commandType;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (hasDepthChanges) {\r\n\t\t\t\t// only want to do this once after all children's depth values are updated\r\n\t\t\t\tframe.addConstructCommand(new ApplyAS2DepthsCommand());\r\n\t\t\t\thasDepthChanges = false;\r\n\t\t\t}\r\n\r\n\t\t\tvar length_code = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tif (length_code > 0) {\r\n\t\t\t\t// TODO: Script should probably not be attached to keyframes?\r\n\t\t\t\tvar frame_code = this._newBlockBytes.readUTFBytes(length_code);\r\n\t\t\t\tframe.addPostConstructCommand(new ExecuteScriptCommand(frame_code));\r\n\t\t\t\t//traceString += \"\\nframe-code = \" + frame_code;\r\n\t\t\t}\r\n\t\t\t//traceString += commandString;\r\n\t\t\t//trace(\"length_code = \"+length_code+\" frame_code = \"+frame_code);\r\n\t\t\tthis._newBlockBytes.readUnsignedInt();// user attributes - skip for now\r\n\t\t\t//console.log(traceString);\r\n\t\t\ttimeLineContainer.addFrame(frame);\r\n\r\n\t\t}\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset>timeLineContainer, name);\r\n\t\tthis._blocks[blockID].data = timeLineContainer;\r\n\t\tthis.parseProperties(null);\r\n\t\tthis.parseUserAttributes();\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a TIMELINE: Name = \" + name + \"| isScene = \" + isScene + \"| sceneID = \" + sceneID + \"| numFrames = \" + numFrames);\r\n\t}\r\n\r\n\t//Block ID = 1\r\n\tprivate parseTriangleGeometrieBlock(blockID:number):void\r\n\t{\r\n\r\n\t\tvar geom:Geometry = new Geometry();\r\n\r\n\t\t// Read name and sub count\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_subs:number = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t// Read optional properties\r\n\t\tvar props:AWDProperties = this.parseProperties({1:this._geoNrType, 2:this._geoNrType});\r\n\t\tvar geoScaleU:number = props.get(1, 1);\r\n\t\tvar geoScaleV:number = props.get(2, 1);\r\n\r\n\t\t// Loop through sub meshes\r\n\t\tvar subs_parsed:number = 0;\r\n\t\twhile (subs_parsed < num_subs) {\r\n\t\t\tvar is_curve_geom:boolean=false;\r\n\t\t\tvar i:number;\r\n\t\t\tvar sm_len:number, sm_end:number;\r\n\t\t\tvar w_indices:Array<number>;\r\n\t\t\tvar weights:Array<number>;\r\n\r\n\t\t\tsm_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tsm_end = this._newBlockBytes.position + sm_len;\r\n\r\n\t\t\tvar subProps:AWDProperties = this.parseProperties({1:this._geoNrType, 2:this._geoNrType});\r\n\t\t\t// Loop through data streams\r\n\t\t\twhile (this._newBlockBytes.position < sm_end) {\r\n\t\t\t\tvar idx:number = 0;\r\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\r\n\r\n\t\t\t\t// Type, field type, length\r\n\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\r\n\r\n\t\t\t\tvar x:number, y:number, z:number;\r\n\r\n\t\t\t\tif (str_type == 1) {//vertex 3d positions\r\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\r\n\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo);\r\n\r\n\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 2) {//face indicies positions\r\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tindices[idx++] = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 3) {\r\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tuvs[idx++] = this.readNumber(this._accuracyGeo);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 4) {\r\n\r\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tnormals[idx++] = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 6) {\r\n\t\t\t\t\tw_indices = Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tw_indices[idx++] = this._newBlockBytes.readUnsignedShort()*3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (str_type == 7) {\r\n\r\n\t\t\t\t\tweights = new Array<number>();\r\n\r\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\tweights[idx++] = this.readNumber(this._accuracyGeo);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (str_type == 8) {// 2d-positions - not used yet.\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 9) {// combined vertex3D stream 13 x float32\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t} else if (str_type == 10) {// combined vertex2D stream 5 x float32\r\n\t\t\t\t\tis_curve_geom=true;\r\n\r\n\t\t\t\t\tvar curveData:ByteArray = new ByteArray();\r\n\t\t\t\t\tthis._newBlockBytes.readBytes(curveData, 0, str_len);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.parseUserAttributes(); // Ignore sub-mesh attributes for now\r\n\t\t\tif(is_curve_geom){\r\n\t\t\t\tvar vertexBuffer:AttributesBuffer = new AttributesBuffer(28, str_len/28);\r\n\t\t\t\tvertexBuffer.bufferView = new Uint8Array(<ArrayBuffer> curveData.arraybytes);\r\n\r\n\t\t\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(vertexBuffer);\r\n\t\t\t\tcurve_sub_geom.setIndices(indices);\r\n\t\t\t\tcurve_sub_geom.setPositions(new Float3Attributes(vertexBuffer));\r\n\t\t\t\tcurve_sub_geom.setCurves(new Float2Attributes(vertexBuffer));\r\n\t\t\t\tcurve_sub_geom.setUVs(new Float2Attributes(vertexBuffer));\r\n\t\t\t\tgeom.addSubGeometry(curve_sub_geom);\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a CurveSubGeometry\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar triangle_sub_geom = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\t\tif (weights)\r\n\t\t\t\t\ttriangle_sub_geom.jointsPerVertex = weights.length / (verts.length / 3);\r\n\t\t\t\tif (normals)\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveNormals = false;\r\n\t\t\t\tif (uvs)\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveUVs = false;\r\n\t\t\t\t//triangle_sub_geom.autoDeriveNormals = false;\r\n\t\t\t\tif (true) {\r\n\t\t\t\t\ttriangle_sub_geom.autoDeriveTangents = true;\r\n\t\t\t\t}\r\n\t\t\t\ttriangle_sub_geom.setIndices(indices);\r\n\t\t\t\ttriangle_sub_geom.setPositions(verts);\r\n\t\t\t\ttriangle_sub_geom.setNormals(normals);\r\n\t\t\t\ttriangle_sub_geom.setUVs(uvs);\r\n\t\t\t\ttriangle_sub_geom.setTangents(null);\r\n\t\t\t\ttriangle_sub_geom.setJointWeights(weights);\r\n\t\t\t\ttriangle_sub_geom.setJointIndices(w_indices);\r\n\r\n\t\t\t\tvar scaleU:number = subProps.get(1, 1);\r\n\t\t\t\tvar scaleV:number = subProps.get(2, 1);\r\n\t\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\r\n\r\n\t\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\r\n\t\t\t\t\tsetSubUVs = true;\r\n\t\t\t\t\tscaleU = geoScaleU / scaleU;\r\n\t\t\t\t\tscaleV = geoScaleV / scaleV;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (setSubUVs)\r\n\t\t\t\t\ttriangle_sub_geom.scaleUV(scaleU, scaleV);\r\n\t\t\t\tgeom.addSubGeometry(triangle_sub_geom);\r\n\t\t\t\tif (this._debug)\r\n\t\t\t\t\tconsole.log(\"Parsed a TriangleSubGeometry\");\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\r\n\t\t\t// when creating meshes (and their material assignments.)\r\n\r\n\t\t\tsubs_parsed++;\r\n\t\t}\r\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\r\n\t\t\tgeom.scaleUV(geoScaleU, geoScaleV);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> geom, name);\r\n\t\tthis._blocks[blockID].data = geom;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a TriangleGeometry: Name = \" + name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t//Block ID = 11\r\n\tprivate parsePrimitves(blockID:number):void\r\n\t{\r\n\t\tvar name:string;\r\n\t\tvar prefab:PrefabBase;\r\n\t\tvar primType:number;\r\n\t\tvar subs_parsed:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar bsm:Matrix3D;\r\n\r\n\t\t// Read name and sub count\r\n\t\tname = this.parseVarStr();\r\n\t\tprimType = this._newBlockBytes.readUnsignedByte();\r\n\t\tprops = this.parseProperties({101:this._geoNrType, 102:this._geoNrType, 103:this._geoNrType, 110:this._geoNrType, 111:this._geoNrType, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 303:AWDParser.UINT16, 701:AWDParser.BOOL, 702:AWDParser.BOOL, 703:AWDParser.BOOL, 704:AWDParser.BOOL});\r\n\r\n\t\tvar primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"]\r\n\r\n\t\tswitch (primType) {\r\n\t\t\t// to do, not all properties are set on all primitives\r\n\r\n\t\t\tcase 1:\r\n\t\t\t\tprefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tprefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\tprefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\r\n\t\t\t\tif (!props.get(701, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\r\n\t\t\t\tif (!props.get(702, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\r\n\t\t\t\tif (!props.get(703, true))\r\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 5:\r\n\t\t\t\tprefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 7:\r\n\t\t\t\tprefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tprefab = new PrefabBase();\r\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\r\n\t\t\t//geom.subGeometries;\r\n\t\t\t//geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\r\n\t\t}\r\n\r\n\t\tthis.parseUserAttributes();\r\n\t\tprefab.name = name;\r\n\t\tthis._pFinalizeAsset(prefab, name);\r\n\t\tthis._blocks[blockID].data = prefab;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tif ((primType < 0) || (primType > 7)) {\r\n\t\t\t\tprimType = 0;\r\n\t\t\t}\r\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + name + \"| type = \" + primitiveTypes[primType]);\r\n\t\t}\r\n\t}\r\n\r\n\t// Block ID = 22\r\n\tprivate parseContainer(blockID:number):void\r\n\t{\r\n\t\tvar name:string;\r\n\t\tvar par_id:number;\r\n\t\tvar mtx:Matrix3D;\r\n\t\tvar ctr:DisplayObjectContainer;\r\n\t\tvar parent:DisplayObjectContainer;\r\n\r\n\t\tpar_id = this._newBlockBytes.readUnsignedInt();\r\n\t\tmtx = this.parseMatrix3D();\r\n\t\tname = this.parseVarStr();\r\n\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tctr = new DisplayObjectContainer();\r\n\t\tctr.transform.matrix3D = mtx;\r\n\r\n\t\tvar returnedArray:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType]);\r\n\r\n\t\tif (returnedArray[0]) {\r\n\t\t\tvar obj:DisplayObject = (<DisplayObjectContainer> returnedArray[1]).addChild(ctr);\r\n\t\t\tparentName = (<DisplayObjectContainer> returnedArray[1]).name;\r\n\t\t} else if (par_id > 0) {\r\n\t\t\tthis._blocks[ blockID ].addError(\"Could not find a parent for this ObjectContainer3D\");\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(ctr);\r\n\t\t}\r\n\r\n\t\t// in AWD version 2.1 we read the Container properties\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tvar props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\r\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t}\r\n\t\t// in other versions we do not read the Container properties\r\n\t\telse {\r\n\t\t\tthis.parseProperties(null);\r\n\t\t}\r\n\r\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\r\n\t\tctr.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> ctr, name);\r\n\t\tthis._blocks[blockID].data = ctr;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + name + \"' | Parent-Name = \" + parentName);\r\n\t\t}\r\n\t}\r\n\r\n\t// Block ID = 23\r\n\tprivate parseMeshInstance(blockID:number):void\r\n\t{\r\n\t\tvar num_materials:number;\r\n\t\tvar materials_parsed:number;\r\n\t\tvar parent:DisplayObjectContainer;\r\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar geom:Geometry;;\r\n\t\tvar prefab:PrefabBase;\r\n\t\tvar returnedArrayGeometry:Array<any> = this.getAssetByID(data_id, [Geometry.assetType]);\r\n\t\tvar isPrefab:boolean=false;\r\n\t\tif (returnedArrayGeometry[0]) {\r\n\t\t\tgeom = <Geometry> returnedArrayGeometry[1];\r\n\t\t} else {\r\n\t\t\tvar returnedArrayGeometry2:Array<any> = this.getAssetByID(data_id, [PrimitivePrefabBase.assetType]);\r\n\t\t\tif (returnedArrayGeometry2[0]) {\r\n\t\t\t\tisPrefab=true;\r\n\t\t\t\tprefab=<PrefabBase>returnedArrayGeometry2[1];\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find a Geometry or prefab for this Mesh \" + data_id + \". A empty Geometry is created!\");\r\n\t\t\t\tgeom = new Geometry();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._blocks[blockID].geoID = data_id;\r\n\t\tvar materials:Array<MethodMaterial> = new Array<MethodMaterial>();\r\n\t\tnum_materials = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar materialNames:Array<string> = new Array<string>();\r\n\t\tmaterials_parsed = 0;\r\n\r\n\t\tvar returnedArrayMaterial:Array<any>;\r\n\r\n\t\twhile (materials_parsed < num_materials) {\r\n\t\t\tvar mat_id:number;\r\n\t\t\tmat_id = this._newBlockBytes.readUnsignedInt();\r\n\t\t\treturnedArrayMaterial = this.getAssetByID(mat_id, [MethodMaterial.assetType, BasicMaterial.assetType])\r\n\t\t\tif ((!returnedArrayMaterial[0]) && (mat_id > 0)) {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find Material Nr \" + materials_parsed + \" (ID = \" + mat_id + \" ) for this Mesh\");\r\n\t\t\t}\r\n\t\t\tvar m:MethodMaterial = <MethodMaterial> returnedArrayMaterial[1];\r\n\t\t\tmaterials.push(m);\r\n\t\t\tmaterialNames.push(m.name);\r\n\t\t\tmaterials_parsed++;\r\n\t\t}\r\n\r\n\t\tvar mesh:Mesh;\r\n\t\tif(isPrefab){\r\n\t\t\tmesh = <Mesh>prefab.getNewObject();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tmesh = new Mesh(geom, null);\r\n\t\t}\r\n\t\tmesh.transform.matrix3D = mtx;\r\n\r\n\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType])\r\n\r\n\t\tif (returnedArrayParent[0]) {\r\n\t\t\tvar objC:DisplayObjectContainer = <DisplayObjectContainer> returnedArrayParent[1];\r\n\t\t\tobjC.addChild(mesh);\r\n\t\t\tparentName = objC.name;\r\n\t\t} else if (par_id > 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Mesh\");\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\r\n\t\t}\r\n\r\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\r\n\t\t\tmesh.material = materials[0];\r\n\t\t} else if (materials.length > 1) {\r\n\t\t\tvar i:number;\r\n\r\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\r\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\r\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\r\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tvar props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8, 5:AWDParser.BOOL});\r\n\t\t\tmesh.pivot = new Vector3D(<number>props.get(1, 0), <number>props.get(2, 0), <number> props.get(3, 0));\r\n\t\t\tmesh.castsShadows = props.get(5, true);\r\n\t\t} else {\r\n\t\t\tthis.parseProperties(null);\r\n\t\t}\r\n\r\n\t\tmesh.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\r\n\t\tthis._blocks[blockID].data = mesh;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tif (isPrefab) {\r\n\t\t\t\tconsole.log(\"Parsed a Mesh for Prefab: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Prefab-Name = \" + prefab.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"Parsed a Mesh for Geometry: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//Block ID 31\r\n\tprivate parseSkyboxInstance(blockID:number):void\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar cubeTexAddr:number = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\tvar returnedArrayCubeTex:Array<any> = this.getAssetByID(cubeTexAddr, [SingleCubeTexture.assetType]);\r\n\t\tif ((!returnedArrayCubeTex[0]) && (cubeTexAddr != 0))\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find the Cubetexture (ID = \" + cubeTexAddr + \" ) for this Skybox\");\r\n\t\tvar asset:Skybox = new Skybox(<SingleCubeTexture> returnedArrayCubeTex[1]);\r\n\r\n\t\tthis.parseProperties(null)\r\n\t\tasset.extra = this.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(asset, name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + name + \"' | CubeTexture-Name = \" + (<SingleCubeTexture> returnedArrayCubeTex[1]).name);\r\n\r\n\t}\r\n\r\n\t//Block ID = 41\r\n\tprivate parseLight(blockID:number):void\r\n\t{\r\n\t\tvar light:LightBase;\r\n\t\tvar newShadowMapper:ShadowMapperBase;\r\n\r\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar lightType:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar props:AWDProperties = this.parseProperties({1:this._propsNrType, 2:this._propsNrType, 3:AWDParser.COLOR, 4:this._propsNrType, 5:this._propsNrType, 6:AWDParser.BOOL, 7:AWDParser.COLOR, 8:this._propsNrType, 9:AWDParser.UINT8, 10:AWDParser.UINT8, 11:this._propsNrType, 12:AWDParser.UINT16, 21:this._matrixNrType, 22:this._matrixNrType, 23:this._matrixNrType});\r\n\t\tvar shadowMapperType:number = props.get(9, 0);\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\r\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\r\n\r\n\t\tif (lightType == 1) {\r\n\t\t\tlight = new PointLight();\r\n\r\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\r\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 4) {\r\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.transform.matrix3D = mtx;\r\n\r\n\t\t}\r\n\r\n\t\tif (lightType == 2) {\r\n\r\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\r\n\r\n\t\t\tif (shadowMapperType > 0) {\r\n\t\t\t\tif (shadowMapperType == 1) {\r\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//if (shadowMapperType == 2)\r\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\r\n\t\t\t\t//if (shadowMapperType == 3)\r\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tlight.color = props.get(3, 0xffffff);\r\n\t\tlight.specular = props.get(4, 1.0);\r\n\t\tlight.diffuse = props.get(5, 1.0);\r\n\t\tlight.ambientColor = props.get(7, 0xffffff);\r\n\t\tlight.ambient = props.get(8, 0.0);\r\n\r\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\r\n\t\tif (newShadowMapper) {\r\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\r\n\t\t\t\tif (props.get(10, 1) != 1) {\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 1)];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (props.get(10, 2) != 2) {\r\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 2)];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlight.shadowMapper = newShadowMapper;\r\n\t\t\tlight.castsShadows = true;\r\n\t\t}\r\n\r\n\t\tif (par_id != 0) {\r\n\r\n\t\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType])\r\n\r\n\t\t\tif (returnedArrayParent[0]) {\r\n\t\t\t\t(<DisplayObjectContainer> returnedArrayParent[1]).addChild(light);\r\n\t\t\t\tparentName = (<DisplayObjectContainer> returnedArrayParent[1]).name;\r\n\t\t\t} else {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Light\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(light);\r\n\t\t}\r\n\r\n\t\tthis.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(< IAsset> light, name);\r\n\r\n\t\tthis._blocks[blockID].data = light;\r\n\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\r\n\r\n\t}\r\n\r\n\t//Block ID = 43\r\n\tprivate parseCamera(blockID:number):void\r\n\t{\r\n\r\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar parentName:string = \"Root (TopLevel)\";\r\n\t\tvar projection:ProjectionBase;\r\n\r\n\t\tthis._newBlockBytes.readUnsignedByte(); //set as active camera\r\n\t\tthis._newBlockBytes.readShort(); //lengthof lenses - not used yet\r\n\r\n\t\tvar projectiontype:number = this._newBlockBytes.readShort();\r\n\t\tvar props:AWDProperties = this.parseProperties({101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 104:this._propsNrType});\r\n\r\n\t\tswitch (projectiontype) {\r\n\t\t\tcase 5001:\r\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5002:\r\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5003:\r\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar camera:Camera = new Camera(projection);\r\n\t\tcamera.transform.matrix3D = mtx;\r\n\r\n\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType])\r\n\r\n\t\tif (returnedArrayParent[0]) {\r\n\r\n\t\t\tvar objC:DisplayObjectContainer = <DisplayObjectContainer> returnedArrayParent[1];\r\n\t\t\tobjC.addChild(camera);\r\n\r\n\t\t\tparentName = objC.name;\r\n\r\n\t\t} else if (par_id > 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Camera\");\r\n\t\t} else {\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(camera);\r\n\t\t}\r\n\r\n\t\tcamera.name = name;\r\n\t\tprops = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\r\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\tcamera.extra = this.parseUserAttributes();\r\n\r\n\t\tthis._pFinalizeAsset(camera, name);\r\n\r\n\t\tthis._blocks[blockID].data = camera\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//Block ID = 51\r\n\tprivate parseLightPicker(blockID:number):void\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar numLights:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\r\n\t\tvar k:number = 0;\r\n\t\tvar lightID:number = 0;\r\n\r\n\t\tvar returnedArrayLight:Array<any>;\r\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\r\n\r\n\t\tfor (k = 0; k < numLights; k++) {\r\n\t\t\tlightID = this._newBlockBytes.readUnsignedInt();\r\n\t\t\treturnedArrayLight = this.getAssetByID(lightID, [LightBase.assetType])\r\n\r\n\t\t\tif (returnedArrayLight[0]) {\r\n\t\t\t\tlightsArray.push(<LightBase> returnedArrayLight[1]);\r\n\t\t\t\tlightsArrayNames.push(( <LightBase> returnedArrayLight[1]).name);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find a Light Nr \" + k + \" (ID = \" + lightID + \" ) for this LightPicker\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lightsArray.length == 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not create this LightPicker, cause no Light was found.\");\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\treturn; //return without any more parsing for this block\r\n\t\t}\r\n\r\n\t\tvar lightPick:LightPickerBase = new StaticLightPicker(lightsArray);\r\n\t\tlightPick.name = name;\r\n\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> lightPick, name);\r\n\r\n\t\tthis._blocks[blockID].data = lightPick\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + name + \"' | Texture-Name = \" + lightsArrayNames.toString());\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 81\r\n\tprivate parseMaterial(blockID:number):void\r\n\t{\r\n\t\t// TODO: not used\r\n\t\t////blockLength = block.len;\r\n\t\tvar name:string;\r\n\t\tvar type:number;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar attributes:Object;\r\n\t\tvar finalize:boolean;\r\n\t\tvar num_methods:number;\r\n\t\tvar methods_parsed:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tname = this.parseVarStr();\r\n\t\ttype = this._newBlockBytes.readUnsignedByte();\r\n\t\tnum_methods = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\t// Read material numerical properties\r\n\t\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\r\n\t\tprops = this.parseProperties({ 1:AWDParser.INT32, 2:AWDParser.BADDR, 10:this._propsNrType, 11:AWDParser.BOOL, 12:this._propsNrType, 13:AWDParser.BOOL});\r\n\r\n\t\tmethods_parsed = 0;\r\n\t\twhile (methods_parsed < num_methods) {\r\n\t\t\tvar method_type:number;\r\n\r\n\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tthis.parseProperties(null);\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\tmethods_parsed += 1;\r\n\t\t}\r\n\t\tvar debugString:string = \"\";\r\n\t\tattributes = this.parseUserAttributes();\r\n\t\tif (type === 1) { // Color material\r\n\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\tvar color:number;\r\n\t\t\tcolor = props.get(1, 0xffffff);\r\n\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t} else {\r\n\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t}\r\n\t\t} else if (type === 2) {\r\n\t\t\tvar tex_addr:number = props.get(2, 0);\r\n\r\n\t\t\treturnedArray = this.getAssetByID(tex_addr, [Single2DTexture.assetType]);\r\n\r\n\t\t\tif ((!returnedArray[0]) && (tex_addr > 0))\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffsueTexture (ID = \" + tex_addr + \" ) for this Material\");\r\n\r\n\t\t\tmat = new MethodMaterial(<TextureBase> returnedArray[1]);\r\n\r\n\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n\t\t\t} else {\r\n\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmat.extra = attributes;\r\n\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\tmat.repeat = props.get(13, false);\r\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\r\n\t\tthis._blocks[blockID].data = mat;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(debugString);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t// Block ID = 81 AWD2.1\r\n\tprivate parseMaterial_v1(blockID:number):void\r\n\t{\r\n\t\tvar mat:MethodMaterial;\r\n\t\tvar normalTexture:TextureBase;\r\n\t\tvar specTexture:TextureBase;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar num_methods:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT32, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 4:AWDParser.UINT8, 5:AWDParser.BOOL, 6:AWDParser.BOOL, 7:AWDParser.BOOL, 8:AWDParser.BOOL, 9:AWDParser.UINT8, 10:this._propsNrType, 11:AWDParser.BOOL, 12:this._propsNrType, 13:AWDParser.BOOL, 15:this._propsNrType, 16:AWDParser.UINT32, 17:AWDParser.BADDR, 18:this._propsNrType, 19:this._propsNrType, 20:AWDParser.UINT32, 21:AWDParser.BADDR, 22:AWDParser.BADDR});\r\n\t\tvar spezialType:number = props.get(4, 0);\r\n\t\tvar debugString:string = \"Parsed Material \";\r\n\r\n\t\tif (spezialType >= 2) {//this is no supported material\r\n\t\t\tthis._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (type <= 2) {// Color material\r\n\t\t\tif (this.materialMode == 1)\r\n\t\t\t\tspezialType = 0;\r\n\t\t\telse if (this.materialMode == 2)\r\n\t\t\t\tspezialType = 1;\r\n\r\n\t\t\tif (spezialType < 2) {//this is SinglePass or MultiPass\r\n\r\n\t\t\t\tif (type == 1) {// Color material\r\n\t\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\r\n\r\n\t\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color);\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\r\n\r\n\t\t\t\t\t} else { //\tSinglePassMaterial\r\n\t\t\t\t\t\tmat = new MethodMaterial(color, props.get(10, 1.0));\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\t\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (type == 2) {// texture material\r\n\t\t\t\t\tvar tex_addr:number = props.get(2, 0);//TODO temporarily swapped so that diffuse texture goes to ambient\r\n\t\t\t\t\treturnedArray = this.getAssetByID(tex_addr, [Single2DTexture.assetType]);\r\n\r\n\t\t\t\t\tif ((!returnedArray[0]) && (tex_addr > 0))\r\n\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the AmbientTexture (ID = \" + tex_addr + \" ) for this MethodMaterial\");\r\n\r\n\t\t\t\t\tvar texture:Single2DTexture = returnedArray[1];\r\n\r\n\t\t\t\t\tmat = new MethodMaterial(texture);\r\n\r\n\t\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\r\n\t\t\t\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + texture.name;\r\n\t\t\t\t\t} else {//\tSinglePassMaterial\r\n\t\t\t\t\t\tmat.alpha = props.get(10, 1.0);\r\n\t\t\t\t\t\tmat.alphaBlending = props.get(11, false);\r\n\r\n\t\t\t\t\t\tdebugString += \"Parsed a MethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + texture.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar diffuseTexture:Single2DTexture;\r\n\t\t\t\tvar diffuseTex_addr:number = props.get(17, 0);\r\n\r\n\t\t\t\treturnedArray = this.getAssetByID(diffuseTex_addr, [Single2DTexture.assetType]);\r\n\r\n\t\t\t\tif ((!returnedArray[0]) && (diffuseTex_addr != 0)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffuseTexture (ID = \" + diffuseTex_addr + \" ) for this MethodMaterial\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (returnedArray[0])\r\n\t\t\t\t\tdiffuseTexture = returnedArray[1];\r\n\r\n\t\t\t\tif (diffuseTexture) {\r\n\t\t\t\t\tmat.diffuseTexture = diffuseTexture;\r\n\t\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normalTex_addr:number = props.get(3, 0);\r\n\r\n\t\t\t\treturnedArray = this.getAssetByID(normalTex_addr, [Single2DTexture.assetType]);\r\n\r\n\t\t\t\tif ((!returnedArray[0]) && (normalTex_addr != 0)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the NormalTexture (ID = \" + normalTex_addr + \" ) for this MethodMaterial\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (returnedArray[0]) {\r\n\t\t\t\t\tnormalTexture = returnedArray[1];\r\n\t\t\t\t\tdebugString += \" | NormalTexture-Name = \" + normalTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar specTex_addr:number = props.get(21, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(specTex_addr, [Single2DTexture.assetType]);\r\n\r\n\t\t\t\tif ((!returnedArray[0]) && (specTex_addr != 0)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SpecularTexture (ID = \" + specTex_addr + \" ) for this MethodMaterial\");\r\n\t\t\t\t}\r\n\t\t\t\tif (returnedArray[0]) {\r\n\t\t\t\t\tspecTexture = returnedArray[1];\r\n\t\t\t\t\tdebugString += \" | SpecularTexture-Name = \" + specTexture.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar lightPickerAddr:number = props.get(22, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(lightPickerAddr, [LightPickerBase.assetType])\r\n\r\n\t\t\t\tif ((!returnedArray[0]) && (lightPickerAddr)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightPicker (ID = \" + lightPickerAddr + \" ) for this MethodMaterial\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmat.lightPicker = <LightPickerBase> returnedArray[1];\r\n\t\t\t\t\t//debugString+=\" | Lightpicker-Name = \"+LightPickerBase(returnedArray[1]).name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmat.smooth = props.get(5, true);\r\n\t\t\t\tmat.mipmap = props.get(6, true);\r\n\t\t\t\tmat.bothSides = props.get(7, false);\r\n\t\t\t\tmat.alphaPremultiplied = props.get(8, false);\r\n\t\t\t\tmat.blendMode = this.blendModeDic[props.get(9, 0)];\r\n\t\t\t\tmat.repeat = props.get(13, false);\r\n\r\n\t\t\t\tif (normalTexture)\r\n\t\t\t\t\tmat.normalMap = normalTexture;\r\n\r\n\t\t\t\tif (specTexture)\r\n\t\t\t\t\tmat.specularMap = specTexture;\r\n\r\n\t\t\t\tmat.alphaThreshold = props.get(12, 0.0);\r\n\t\t\t\tmat.ambient = props.get(15, 1.0);\r\n\t\t\t\tmat.diffuseColor = props.get(16, 0xffffff);\r\n\t\t\t\tmat.specular = props.get(18, 1.0);\r\n\t\t\t\tmat.gloss = props.get(19, 50);\r\n\t\t\t\tmat.specularColor = props.get(20, 0xffffff);\r\n\r\n\t\t\t\tvar methods_parsed:number = 0;\r\n\t\t\t\tvar targetID:number;\r\n\r\n\t\t\t\twhile (methods_parsed < num_methods) {\r\n\t\t\t\t\tvar method_type:number;\r\n\t\t\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\t\t\t\tprops = this.parseProperties({\r\n\t\t\t\t\t\t1: AWDParser.BADDR,\r\n\t\t\t\t\t\t2: AWDParser.BADDR,\r\n\t\t\t\t\t\t3: AWDParser.BADDR,\r\n\t\t\t\t\t\t101: this._propsNrType,\r\n\t\t\t\t\t\t102: this._propsNrType,\r\n\t\t\t\t\t\t103: this._propsNrType,\r\n\t\t\t\t\t\t201: AWDParser.UINT32,\r\n\t\t\t\t\t\t202: AWDParser.UINT32,\r\n\t\t\t\t\t\t301: AWDParser.UINT16,\r\n\t\t\t\t\t\t302: AWDParser.UINT16,\r\n\t\t\t\t\t\t401: AWDParser.UINT8,\r\n\t\t\t\t\t\t402: AWDParser.UINT8,\r\n\t\t\t\t\t\t601: AWDParser.COLOR,\r\n\t\t\t\t\t\t602: AWDParser.COLOR,\r\n\t\t\t\t\t\t701: AWDParser.BOOL,\r\n\t\t\t\t\t\t702: AWDParser.BOOL,\r\n\t\t\t\t\t\t801: AWDParser.MTX4x4\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tswitch (method_type) {\r\n\t\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffektMethod returned\r\n\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [EffectMethodBase.assetType]);\r\n\r\n\t\t\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EffectMethod (ID = \" + targetID + \" ) for this Material\");\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tmat.addEffectMethod(returnedArray[1]);\r\n\r\n\t\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<EffectMethodBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\r\n\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\r\n\r\n\t\t\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the ShadowMethod (ID = \" + targetID + \" ) for this Material\");\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tmat.shadowMethod = returnedArray[1];\r\n\t\t\t\t\t\t\t\tdebugString += \" | ShadowMethod-Name = \" + (<ShadowMethodBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 1: //EnvMapAmbientMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [SingleCubeTexture.assetType]);\r\n\t\t\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this EnvMapAmbientMethodMaterial\");\r\n\t\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod();\r\n\t\t\t\t\t\t\tmat.texture = returnedArray[1];\r\n\t\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + (<SingleCubeTexture> returnedArray[1]).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 51: //DepthDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 52: //GradientDiffuseMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\r\n\t\t\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the GradientDiffuseTexture (ID = \" + targetID + \" ) for this GradientDiffuseMethod\");\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(returnedArray[1]);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + (<TextureBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 53: //WrapDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 54: //LightMapDiffuseMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\r\n\t\t\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this LightMapDiffuseMethod\");\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(returnedArray[1], this.blendModeDic[props.get(401, 10)], false, mat.diffuseMethod);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + (<TextureBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 55: //CelDiffuseMethod\r\n\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\r\n\t\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\r\n\t\t\t\t\t\t\t//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 102: //SpecularPhongMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 103: //CellSpecularMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 104: //SpecularFresnelMethod\r\n\t\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\r\n\t\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\r\n\t\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\r\n\t\t\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\r\n\t\t\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SecoundNormalMap (ID = \" + targetID + \" ) for this SimpleWaterNormalMethod\");\r\n\t\t\t\t\t\t\tif (!mat.normalMap)\r\n\t\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find a normal Map on this Material to use with this SimpleWaterNormalMethod\");\r\n\r\n\t\t\t\t\t\t\tmat.normalMap = returnedArray[1];\r\n\t\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(mat.normalMap, returnedArray[1]);\r\n\t\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + (<TextureBase> returnedArray[1]).name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.parseUserAttributes();\r\n\t\t\t\t\tmethods_parsed += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// todo: we should not need this anymore (if using texture-atlas)\r\n\t\telse if ((type>=3)&&(type<=7)){\r\n\t\t\t// if this is a basic material, we create it, finalize it, assign it to block-cache and return and return.\r\n\t\t\tvar color:number = props.get(1, 0xcccccc);\r\n\t\t\tdebugString+=color;\r\n\t\t\r\n\t\t\tvar diffuseTexture:Single2DTexture;\r\n\t\t\tvar diffuseTex_addr:number = props.get(2, 0);\r\n\t\t\r\n\t\t\treturnedArray = this.getAssetByID(diffuseTex_addr, [Single2DTexture.assetType]);\r\n\t\t\r\n\t\t\tif ((!returnedArray[0]) && (diffuseTex_addr != 0)) {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffuseTexture (ID = \" + diffuseTex_addr + \" ) for this MethodMaterial\");\r\n\t\t\t\tdiffuseTexture = DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (returnedArray[0])\r\n\t\t\t\tdiffuseTexture = returnedArray[1];\r\n\t\t\tvar basic_mat:BasicMaterial = new BasicMaterial(diffuseTexture);\r\n\t\t\t//debugString+= \" alpha = \"+props.get(10, 1.0)+\" \";\r\n\t\t\tdebugString+= \" texture = \"+diffuseTex_addr+\" \";\r\n\t\t\tbasic_mat.bothSides = true;\r\n\t\t\tbasic_mat.preserveAlpha = true;\r\n\t\t\tbasic_mat.alphaBlending = true;\r\n\t\t\tbasic_mat.extra = this.parseUserAttributes();\r\n\t\t\tthis._pFinalizeAsset(<IAsset> basic_mat, name);\r\n\t\t\tthis._blocks[blockID].data = basic_mat;\r\n\t\t\tif (this._debug)\r\n\t\t\t\tconsole.log(debugString);\r\n\t\t\treturn;\r\n\t\t\r\n\t\t}\r\n\t\tmat.extra = this.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\r\n\r\n\t\tthis._blocks[blockID].data = mat;\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(debugString);\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 82\r\n\tprivate parseTexture(blockID:number):void\r\n\t{\r\n\r\n\t\tvar asset:TextureBase;\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar data_len:number;\r\n\r\n\t\tthis._texture_users[this._cur_block_id.toString()] = [];\r\n\r\n\t\t// External\r\n\t\tif (type == 0) {\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar url:string;\r\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\r\n\r\n\t\t} else {\r\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\tvar data:ByteArray;\r\n\t\t\tdata = new ByteArray();\r\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t//\r\n\t\t\t// AWD3Parserutils - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\r\n\t\t\t//\r\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\r\n\t\t\t// This gives the browser time to initialise image width / height.\r\n\r\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\r\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\r\n\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Bitmap for Texture\");\r\n\t\t}\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\r\n\t}\r\n\r\n\t//Block ID = 83\r\n\tprivate parseCubeTexture(blockID:number):void\r\n\t{\r\n\t\t//blockLength = block.len;\r\n\t\tvar data_len:number;\r\n\t\tvar asset:SingleCubeTexture;\r\n\t\tvar i:number;\r\n\r\n\t\tthis._cubeBitmaps = new Array<BitmapImage2D>();\r\n\t\tthis._texture_users[ this._cur_block_id.toString() ] = [];\r\n\r\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\tthis._texture_users[this._cur_block_id.toString()] = [];\r\n\t\t\tthis._cubeBitmaps.push(null);\r\n\r\n\t\t\t// External\r\n\t\t\tif (type == 0) {\r\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar url:string;\r\n\t\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\r\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true, i);\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tvar data:ByteArray;\r\n\t\t\t\tdata = new ByteArray();\r\n\r\n\t\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\r\n\r\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true, i);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Ignore for now\r\n\t\tthis.parseProperties(null);\r\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\r\n\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\r\n\t\t\tconsole.log(\"Start parsing 6 \" + textureStylesNames[type] + \" Bitmaps for CubeTexture\");\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 91\r\n\tprivate parseSharedMethodBlock(blockID:number):void\r\n\t{\r\n\t\tvar asset:EffectMethodBase;\r\n\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\t\tasset = this.parseSharedMethodList(blockID);\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._blocks[blockID].data = asset;\r\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\r\n\t\t}\r\n\t}\r\n\r\n\t//Block ID = 92\r\n\tprivate parseShadowMethodBlock(blockID:number):void\r\n\t{\r\n\t\tvar type:number;\r\n\t\tvar data_len:number;\r\n\t\tvar asset:ShadowMethodBase;\r\n\t\tvar shadowLightID:number;\r\n\t\tthis._blocks[blockID].name = this.parseVarStr();\r\n\r\n\t\tshadowLightID = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar returnedArray:Array<any> = this.getAssetByID(shadowLightID, [LightBase.assetType]);\r\n\r\n\t\tif (!returnedArray[0]) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find the TargetLight (ID = \" + shadowLightID + \" ) for this ShadowMethod - ShadowMethod not created\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tasset = this.parseShadowMethodList(<LightBase> returnedArray[1], blockID);\r\n\r\n\t\tif (!asset)\r\n\t\t\treturn;\r\n\r\n\t\tthis.parseUserAttributes(); // Ignore for now\r\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\r\n\t\tthis._blocks[blockID].data = asset;\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", ( <LightBase> returnedArray[1] ).name);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//Block ID = 253\r\n\tprivate parseCommand(blockID:number):void\r\n\t{\r\n\t\tvar hasBlocks:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\r\n\t\tvar name:string = this.parseVarStr();\r\n\r\n\t\tvar parentObject:DisplayObjectContainer;\r\n\t\tvar targetObject:DisplayObjectContainer;\r\n\r\n\t\tvar returnedArray:Array<any> = this.getAssetByID(par_id, [DisplayObjectContainer.assetType, LightBase.assetType, Mesh.assetType]);\r\n\r\n\t\tif (returnedArray[0]) {\r\n\t\t\tparentObject = <DisplayObjectContainer> returnedArray[1];\r\n\t\t}\r\n\r\n\t\tvar numCommands:number = this._newBlockBytes.readShort();\r\n\t\tvar typeCommand:number = this._newBlockBytes.readShort();\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR});\r\n\r\n\t\tswitch (typeCommand) {\r\n\t\t\tcase 1:\r\n\r\n\t\t\t\tvar targetID:number = props.get(1, 0);\r\n\t\t\t\t//var returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [LightBase.assetType, TextureProjector.assetType]); //for no only light is requested!!!!\r\n\t\t\t\tvar returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [LightBase.assetType]); //for no only light is requested!!!!\r\n\r\n\t\t\t\tif ((!returnedArrayTarget[0]) && (targetID != 0)) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the light (ID = \" + targetID + \" ( for this CommandBock!\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetObject = returnedArrayTarget[1];\r\n\r\n\t\t\t\tif (parentObject) {\r\n\t\t\t\t\tparentObject.addChild(targetObject);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (targetObject) {\r\n\t\t\tprops = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\r\n\r\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\r\n\t\t\ttargetObject.extra = this.parseUserAttributes();\r\n\r\n\t\t}\r\n\t\tthis._blocks[blockID].data = targetObject\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//blockID 255\r\n\tprivate parseMetaData(blockID:number):void\r\n\t{\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT32, 2:AWDParser.AWDSTRING, 3:AWDParser.AWDSTRING, 4:AWDParser.AWDSTRING, 5:AWDParser.AWDSTRING});\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\r\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\r\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\r\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\r\n\t\t}\r\n\t}\r\n\r\n\t//blockID 254\r\n\tprivate parseNameSpace(blockID:number):void\r\n\t{\r\n\t\tvar id:number = this._newBlockBytes.readUnsignedByte();\r\n\t\tvar nameSpaceString:string = this.parseVarStr();\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\r\n\t}\r\n\r\n\t//--Parser UTILS---------------------------------------------------------------------------\r\n\r\n\t// this functions reads and creates a ShadowMethodMethod\r\n\tprivate parseShadowMethodList(light:LightBase, blockID:number):ShadowMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar shadowMethod:ShadowMethodBase;\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 201:AWDParser.UINT32, 202:AWDParser.UINT32, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 401:AWDParser.UINT8, 402:AWDParser.UINT8, 601:AWDParser.COLOR, 602:AWDParser.COLOR, 701:AWDParser.BOOL, 702:AWDParser.BOOL, 801:AWDParser.MTX4x4});\r\n\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>\r\n\t\tswitch (methodType) {\r\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this CascadeShadowMapMethod - ShadowMethod not created\");\r\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\r\n\t\t\t//\t\t\t\t\t}\r\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 1002: //ShadowNearMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [ShadowMapMethodBase.assetType]);\r\n\t\t\t\tif (!returnedArray[0]) {\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this ShadowNearMethod - ShadowMethod not created\");\r\n\t\t\t\t\treturn shadowMethod;\r\n\t\t\t\t}\r\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> returnedArray[1]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1101: //ShadowFilteredMethod\r\n\r\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 1102: //ShadowDitheredMethod\r\n\r\n\r\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1103: //ShadowSoftMethod\r\n\r\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1104: //ShadowHardMethod\r\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\r\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\treturn shadowMethod;\r\n\t}\r\n\r\n\t//Block ID 101\r\n\tprivate parseSkeleton(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar skeleton:Skeleton = new Skeleton();\r\n\t\tthis.parseProperties(null); // Discard properties for now\r\n\r\n\t\tvar joints_parsed:number /*uint*/ = 0;\r\n\t\twhile (joints_parsed < num_joints) {\r\n\t\t\tvar joint:SkeletonJoint;\r\n\t\t\tvar ibp:Matrix3D;\r\n\t\t\t// Ignore joint id\r\n\t\t\tthis._newBlockBytes.readUnsignedShort();\r\n\t\t\tjoint = new SkeletonJoint();\r\n\t\t\tjoint.parentIndex = this._newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\r\n\t\t\tjoint.name = this.parseVarStr();\r\n\r\n\t\t\tibp = this.parseMatrix3D();\r\n\t\t\tjoint.inverseBindPose = ibp.rawData;\r\n\t\t\t// Ignore joint props/attributes for now\r\n\t\t\tthis.parseProperties(null);\r\n\t\t\tthis.parseUserAttributes();\r\n\t\t\tskeleton.joints.push(joint);\r\n\t\t\tjoints_parsed++;\r\n\t\t}\r\n\r\n\t\t// Discard attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(skeleton, name);\r\n\t\tthis._blocks[blockID].data = skeleton;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + skeleton.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\t//Block ID = 102\r\n\tprivate parseSkeletonPose(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tthis.parseProperties(null); // Ignore properties for now\r\n\r\n\t\tvar pose:SkeletonPose = new SkeletonPose();\r\n\r\n\t\tvar joints_parsed:number /*uint*/ = 0;\r\n\t\twhile (joints_parsed < num_joints) {\r\n\t\t\tvar joint_pose:JointPose;\r\n\t\t\tvar has_transform:number /*uint*/;\r\n\t\t\tjoint_pose = new JointPose();\r\n\t\t\thas_transform = this._newBlockBytes.readUnsignedByte();\r\n\t\t\tif (has_transform == 1) {\r\n\t\t\t\tvar mtx_data:Array<number> = this.parseMatrix43RawData();\r\n\r\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\r\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\r\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\r\n\r\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\r\n\t\t\t}\r\n\t\t\tjoints_parsed++;\r\n\t\t}\r\n\t\t// Skip attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(pose, name);\r\n\t\tthis._blocks[blockID].data = pose;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + pose.name + \" | Number of Joints = \" + joints_parsed);\r\n\t}\r\n\r\n\t//blockID 103\r\n\tprivate parseSkeletonAnimation(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar frame_dur:number;\r\n\t\tvar pose_addr:number /*uint*/;\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\r\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tthis.parseProperties(null); // Ignore properties for now\r\n\r\n\t\tvar frames_parsed:number /*uint*/ = 0;\r\n\t\tvar returnedArray:Array<any>;\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tpose_addr = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\r\n\t\t\treturnedArray = this.getAssetByID(pose_addr, [SkeletonPose.assetType]);\r\n\t\t\tif (!returnedArray[0])\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SkeletonPose Frame # \" + frames_parsed + \" (ID = \" + pose_addr + \" ) for this SkeletonClipNode\");\r\n\t\t\telse\r\n\t\t\t\tclip.addFrame(<SkeletonPose> this._blocks[pose_addr].data, frame_dur);\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tif (clip.frames.length == 0) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not this SkeletonClipNode, because no Frames where set.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Ignore attributes for now\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(clip, name);\r\n\t\tthis._blocks[blockID].data = clip;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + clip.name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\t//Block ID = 111 /  Block ID = 112\r\n\tprivate parseMeshPoseAnimation(blockID:number /*uint*/, poseOnly:boolean = false):void\r\n\t{\r\n\t\tvar num_frames:number /*uint*/ = 1;\r\n\t\tvar num_submeshes:number /*uint*/;\r\n\t\tvar frames_parsed:number /*uint*/;\r\n\t\tvar subMeshParsed:number /*uint*/;\r\n\t\tvar frame_dur:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar str_len:number;\r\n\t\tvar str_end:number;\r\n\t\tvar geometry:Geometry;\r\n\t\tvar subGeom:TriangleSubGeometry;\r\n\t\tvar idx:number /*int*/ = 0;\r\n\t\tvar clip:VertexClipNode = new VertexClipNode();\r\n\t\tvar indices:Short3Attributes;\r\n\t\tvar verts:Array<number>;\r\n\t\tvar num_Streams:number /*int*/ = 0;\r\n\t\tvar streamsParsed:number /*int*/ = 0;\r\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\r\n\t\tvar props:AWDProperties;\r\n\t\tvar thisGeo:Geometry;\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar geoAdress:number /*int*/ = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar returnedArray:Array<any> = this.getAssetByID(geoAdress, [Geometry.assetType]);\r\n\t\tif (!returnedArray[0]) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find the target-Geometry-Object \" + geoAdress + \" ) for this VertexClipNode\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar uvs:Array<Float32Array> = this.getUVForVertexAnimation(geoAdress);\r\n\t\tif (!poseOnly)\r\n\t\t\tnum_frames = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\tnum_submeshes = this._newBlockBytes.readUnsignedShort();\r\n\t\tnum_Streams = this._newBlockBytes.readUnsignedShort();\r\n\t\tstreamsParsed = 0;\r\n\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\tstreamtypes.push(this._newBlockBytes.readUnsignedShort());\r\n\t\t\tstreamsParsed++;\r\n\t\t}\r\n\t\tprops = this.parseProperties({1:AWDParser.BOOL, 2:AWDParser.BOOL});\r\n\r\n\t\tclip.looping = props.get(1, true);\r\n\t\tclip.stitchFinalFrame = props.get(2, false);\r\n\r\n\t\tframes_parsed = 0;\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\r\n\t\t\tgeometry = new Geometry();\r\n\t\t\tsubMeshParsed = 0;\r\n\t\t\twhile (subMeshParsed < num_submeshes) {\r\n\t\t\t\tstreamsParsed = 0;\r\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\r\n\t\t\t\twhile (streamsParsed < num_Streams) {\r\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\r\n\t\t\t\t\t\tindices = (<Geometry> returnedArray[1]).subGeometries[subMeshParsed].indices;\r\n\t\t\t\t\t\tverts = new Array<number>();\r\n\t\t\t\t\t\tidx = 0;\r\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\r\n\t\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo)\r\n\t\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo)\r\n\t\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo)\r\n\t\t\t\t\t\t\tverts[idx++] = x;\r\n\t\t\t\t\t\t\tverts[idx++] = y;\r\n\t\t\t\t\t\t\tverts[idx++] = z;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsubGeom = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\t\t\t\tsubGeom.setIndices(indices);\r\n\t\t\t\t\t\tsubGeom.setPositions(verts);\r\n\t\t\t\t\t\tsubGeom.setUVs(uvs[subMeshParsed]);\r\n\t\t\t\t\t\tsubGeom.setNormals(null);\r\n\t\t\t\t\t\tsubGeom.setTangents(null);\r\n\t\t\t\t\t\tsubGeom.autoDeriveNormals = false;\r\n\t\t\t\t\t\tsubGeom.autoDeriveTangents = false;\r\n\t\t\t\t\t\tsubMeshParsed++;\r\n\t\t\t\t\t\tgeometry.addSubGeometry(subGeom)\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\r\n\t\t\t\t\tstreamsParsed++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tclip.addFrame(geometry, frame_dur);\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis._pFinalizeAsset(clip, name);\r\n\r\n\t\tthis._blocks[blockID].data = clip;\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + (<Geometry> returnedArray[1]).name + \" | Number of Frames = \" + clip.frames.length);\r\n\t}\r\n\r\n\t//BlockID 113\r\n\tprivate parseVertexAnimationSet(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar poseBlockAdress:number /*int*/\r\n\t\tvar outputString:string = \"\";\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT16});\r\n\t\tvar frames_parsed:number /*uint*/ = 0;\r\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\r\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\r\n\t\twhile (frames_parsed < num_frames) {\r\n\t\t\tposeBlockAdress = this._newBlockBytes.readUnsignedInt();\r\n\t\t\tvar returnedArray:Array<any> = this.getAssetByID(poseBlockAdress, [AnimationNodeBase.assetType]);\r\n\t\t\tif (!returnedArray[0])\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the AnimationClipNode Nr \" + frames_parsed + \" ( \" + poseBlockAdress + \" ) for this AnimationSet\");\r\n\t\t\telse {\r\n\t\t\t\tif (returnedArray[1] instanceof VertexClipNode)\r\n\t\t\t\t\tvertexFrames.push(returnedArray[1])\r\n\t\t\t\tif (returnedArray[1] instanceof SkeletonClipNode)\r\n\t\t\t\t\tskeletonFrames.push(returnedArray[1])\r\n\t\t\t}\r\n\t\t\tframes_parsed++;\r\n\t\t}\r\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not create this AnimationSet, because it contains no animations\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\tif (vertexFrames.length > 0) {\r\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\r\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\r\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\r\n\t\t\tthis._pFinalizeAsset(newVertexAnimationSet, name);\r\n\t\t\tthis._blocks[blockID].data = newVertexAnimationSet;\r\n\t\t\tif (this._debug)\r\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames.toString());\r\n\r\n\t\t} else if (skeletonFrames.length > 0) {\r\n\t\t\treturnedArray = this.getAssetByID(poseBlockAdress, [AnimationNodeBase.assetType]);\r\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\r\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\r\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\r\n\t\t\tthis._pFinalizeAsset(newSkeletonAnimationSet, name);\r\n\t\t\tthis._blocks[blockID].data = newSkeletonAnimationSet;\r\n\t\t\tif (this._debug)\r\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames.toString());\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t//BlockID 122\r\n\tprivate parseAnimatorSet(blockID:number /*uint*/):void\r\n\t{\r\n\t\tvar targetMesh:Mesh;\r\n\t\tvar animSetBlockAdress:number /*int*/\r\n\t\tvar targetAnimationSet:AnimationSetBase;\r\n\t\tvar outputString:string = \"\";\r\n\t\tvar name:string = this.parseVarStr();\r\n\t\tvar type:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR});\r\n\r\n\t\tanimSetBlockAdress = this._newBlockBytes.readUnsignedInt();\r\n\t\tvar targetMeshLength:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar meshAdresses:Array<number> /*uint*/ = new Array<number>() /*uint*/;\r\n\t\tfor (var i:number /*int*/ = 0; i < targetMeshLength; i++)\r\n\t\t\tmeshAdresses.push(this._newBlockBytes.readUnsignedInt());\r\n\r\n\t\tvar activeState:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar autoplay:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\r\n\t\tthis.parseUserAttributes();\r\n\t\tthis.parseUserAttributes();\r\n\r\n\t\tvar returnedArray:Array<any>;\r\n\t\tvar targetMeshes:Array<Mesh> = new Array<Mesh>();\r\n\r\n\t\tfor (i = 0; i < meshAdresses.length; i++) {\r\n\t\t\treturnedArray = this.getAssetByID(meshAdresses[i], [Mesh.assetType]);\r\n\t\t\tif (returnedArray[0])\r\n\t\t\t\ttargetMeshes.push(<Mesh> returnedArray[1]);\r\n\t\t}\r\n\t\treturnedArray = this.getAssetByID(animSetBlockAdress, [AnimationSetBase.assetType]);\r\n\t\tif (!returnedArray[0]) {\r\n\t\t\tthis._blocks[blockID].addError(\"Could not find the AnimationSet ( \" + animSetBlockAdress + \" ) for this Animator\");;\r\n\t\t\treturn\r\n\t\t}\r\n\t\ttargetAnimationSet = <AnimationSetBase> returnedArray[1];\r\n\t\tvar thisAnimator:AnimatorBase;\r\n\t\tif (type == 1) {\r\n\r\n\t\t\treturnedArray = this.getAssetByID(props.get(1, 0), [Skeleton.assetType]);\r\n\t\t\tif (!returnedArray[0]) {\r\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Skeleton ( \" + props.get(1, 0) + \" ) for this Animator\");\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, <Skeleton> returnedArray[1]);\r\n\r\n\t\t} else if (type == 2)\r\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\r\n\r\n\t\tthis._pFinalizeAsset(thisAnimator, name);\r\n\t\tthis._blocks[blockID].data = thisAnimator;\r\n\t\tfor (i = 0; i < targetMeshes.length; i++) {\r\n\t\t\tif (type == 1)\r\n\t\t\t\ttargetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\r\n\t\t\tif (type == 2)\r\n\t\t\t\ttargetMeshes[i].animator = (<VertexAnimator> thisAnimator);\r\n\r\n\t\t}\r\n\t\tif (this._debug)\r\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + name);\r\n\t}\r\n\r\n\t// this functions reads and creates a EffectMethod\r\n\tprivate parseSharedMethodList(blockID:number):EffectMethodBase\r\n\t{\r\n\r\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\r\n\t\tvar effectMethodReturn:EffectMethodBase;\r\n\r\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 104:this._propsNrType, 105:this._propsNrType, 106:this._propsNrType, 107:this._propsNrType, 201:AWDParser.UINT32, 202:AWDParser.UINT32, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 401:AWDParser.UINT8, 402:AWDParser.UINT8, 601:AWDParser.COLOR, 602:AWDParser.COLOR, 701:AWDParser.BOOL, 702:AWDParser.BOOL});\r\n\t\tvar targetID:number;\r\n\t\tvar returnedArray:Array<any>;\r\n\r\n\t\tswitch (methodType) {\r\n\t\t\t// Effect Methods\r\n\t\t\tcase 401: //ColorMatrix\r\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 402: //ColorTransform\r\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\r\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\r\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 403: //EnvMap\r\n\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\tconsole.log('ENV MAP', targetID);\r\n\r\n\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [ SingleCubeTexture.assetType ]);\r\n\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this EnvMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(<SingleCubeTexture> returnedArray[1], <number> props.get(101, 1));\r\n\t\t\t\ttargetID = props.get(2, 0);\r\n\t\t\t\tif (targetID > 0) {\r\n\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\r\n\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Mask-texture (ID = \" + targetID + \" ) for this EnvMapMethod\");\r\n\r\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\r\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <TextureBase> returnedArray[1];\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 404: //LightMapMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\r\n\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this LightMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(returnedArray[1], this.blendModeDic[props.get(401, 10)]); //usesecondaryUV not set\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureProjector.assetType]);\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this ProjectiveTextureMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 406: //RimLightMethod\r\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\r\n\t\t\t\tbreak;\r\n\t\t\tcase 407: //AlphaMaskMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [Single2DTexture.assetType]);\r\n\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Alpha-texture (ID = \" + targetID + \" ) for this AlphaMaskMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(returnedArray[1], props.get(701, false));\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\r\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [TextureBase.assetType], \"CubeTexture\");\r\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\r\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this RefractionEnvMapMethod\");\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\r\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\r\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\r\n\t\t\t//\t\t\t\t\tbreak;\r\n\t\t\tcase 410: //FresnelEnvMapMethod\r\n\t\t\t\ttargetID = props.get(1, 0);\r\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [SingleCubeTexture.assetType]);\r\n\t\t\t\tif (!returnedArray[0])\r\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this FresnelEnvMapMethod\");\r\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(returnedArray[1], props.get(101, 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 411: //FogMethod\r\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tthis.parseUserAttributes();\r\n\t\treturn effectMethodReturn;\r\n\r\n\t}\r\n\r\n\tprivate parseUserAttributes():Object\r\n\t{\r\n\t\tvar attributes:Object;\r\n\t\tvar list_len:number;\r\n\t\tvar attibuteCnt:number;\r\n\r\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\tif (list_len > 0) {\r\n\r\n\t\t\tvar list_end:number;\r\n\r\n\t\t\tattributes = {};\r\n\r\n\t\t\tlist_end = this._newBlockBytes.position + list_len;\r\n\r\n\t\t\twhile (this._newBlockBytes.position < list_end) {\r\n\t\t\t\tvar ns_id:number;\r\n\t\t\t\tvar attr_key:string;\r\n\t\t\t\tvar attr_type:number;\r\n\t\t\t\tvar attr_len:number;\r\n\t\t\t\tvar attr_val:any;\r\n\r\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\r\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_key = this.parseVarStr();\r\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn attributes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (attr_type) {\r\n\t\t\t\t\tcase AWDParser.AWDSTRING:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.INT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.BOOL:\r\n\t\t\t\t\tcase AWDParser.UINT8:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.UINT16:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.UINT32:\r\n\t\t\t\t\tcase AWDParser.BADDR:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.FLOAT32:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase AWDParser.FLOAT64:\r\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\r\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._debug) {\r\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattributes[attr_key] = attr_val;\r\n\t\t\t\tattibuteCnt += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\t}\r\n\r\n\tprivate parseProperties(expected:Object):AWDProperties\r\n\t{\r\n\t\tvar list_end:number;\r\n\t\tvar list_len:number;\r\n\t\tvar propertyCnt:number = 0;\r\n\t\tvar props:AWDProperties = new AWDProperties();\r\n\r\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\r\n\t\tlist_end = this._newBlockBytes.position + list_len;\r\n\r\n\t\tif (expected) {\r\n\r\n\t\t\twhile (this._newBlockBytes.position < list_end) {\r\n\t\t\t\tvar len:number;\r\n\t\t\t\tvar key:number;\r\n\t\t\t\tvar type:number;\r\n\r\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\r\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\r\n\r\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\r\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\r\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t\t\t\treturn props;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (expected.hasOwnProperty(key.toString())) {\r\n\t\t\t\t\ttype = expected[key];\r\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newBlockBytes.position += len;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpropertyCnt += 1;\r\n\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._newBlockBytes.position = list_end;\r\n\t\t}\r\n\r\n\t\treturn props;\r\n\r\n\t}\r\n\r\n\tprivate parseAttrValue(type:number, len:number):any\r\n\t{\r\n\t\tvar elem_len:number;\r\n\t\tvar read_func:Function;\r\n\r\n\t\tswitch (type) {\r\n\r\n\t\t\tcase AWDParser.BOOL:\r\n\t\t\tcase AWDParser.INT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.INT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.INT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT8:\r\n\t\t\t\telem_len = 1;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT16:\r\n\t\t\t\telem_len = 2;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.UINT32:\r\n\t\t\tcase AWDParser.COLOR:\r\n\t\t\tcase AWDParser.BADDR:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.FLOAT32:\r\n\t\t\t\telem_len = 4;\r\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.FLOAT64:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AWDParser.AWDSTRING:\r\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\r\n\t\t\tcase AWDParser.VECTOR2x1:\r\n\t\t\tcase AWDParser.VECTOR3x1:\r\n\t\t\tcase AWDParser.VECTOR4x1:\r\n\t\t\tcase AWDParser.MTX3x2:\r\n\t\t\tcase AWDParser.MTX3x3:\r\n\t\t\tcase AWDParser.MTX4x3:\r\n\t\t\tcase AWDParser.MTX4x4:\r\n\t\t\t\telem_len = 8;\r\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif (elem_len < len) {\r\n\t\t\tvar list:Array<any> = [];\r\n\t\t\tvar num_read:number = 0;\r\n\t\t\tvar num_elems:number = len/elem_len;\r\n\r\n\t\t\twhile (num_read < num_elems) {\r\n\t\t\t\tlist.push(read_func.apply(this._newBlockBytes)); // list.push(read_func());\r\n\t\t\t\tnum_read++;\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\t\t} else {\r\n\r\n\t\t\tvar val:any = read_func.apply(this._newBlockBytes);//read_func();\r\n\t\t\treturn val;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseHeader():void\r\n\t{\r\n\t\tvar flags:number;\r\n\t\tvar body_len:number;\r\n\r\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\r\n\r\n\t\tthis._version[0] = this._byteData.readUnsignedByte();\r\n\t\tthis._version[1] = this._byteData.readUnsignedByte();\r\n\r\n\t\tflags = this._byteData.readUnsignedShort(); // Parse bit flags\r\n\r\n\t\tthis._streaming = BitFlags.test(flags, BitFlags.FLAG1);\r\n\r\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\r\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG2);\r\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG3);\r\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG4);\r\n\t\t}\r\n\r\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\r\n\r\n\t\t// set storagePrecision types\r\n\t\tthis._geoNrType = AWDParser.FLOAT32;\r\n\r\n\t\tif (this._accuracyGeo) {\r\n\t\t\tthis._geoNrType = AWDParser.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._matrixNrType = AWDParser.FLOAT32;\r\n\r\n\t\tif (this._accuracyMatrix) {\r\n\t\t\tthis._matrixNrType = AWDParser.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._propsNrType = AWDParser.FLOAT32;\r\n\r\n\t\tif (this._accuracyProps) {\r\n\t\t\tthis._propsNrType = AWDParser.FLOAT64;\r\n\t\t}\r\n\r\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\r\n\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._version[0] + \" - \" + this._version[1]);\r\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\r\n\t\t}\r\n\r\n\t\t// Check file integrity\r\n\t\tbody_len = this._byteData.readUnsignedInt();\r\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable()) {\r\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\r\n\t\t}\r\n\r\n\t}\r\n\t// Helper - functions\r\n\tprivate getUVForVertexAnimation(meshID:number /*uint*/):Array<Float32Array>\r\n\t{\r\n\t\tif (this._blocks[meshID].data instanceof Mesh)\r\n\t\t\tmeshID = this._blocks[meshID].geoID;\r\n\t\tif (this._blocks[meshID].uvsForVertexAnimation)\r\n\t\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\t\tvar geometry:Geometry = (<Geometry> this._blocks[meshID].data);\r\n\t\tvar geoCnt:number /*int*/ = 0;\r\n\t\tvar sub_geom:TriangleSubGeometry;\r\n\t\tthis._blocks[meshID].uvsForVertexAnimation = new Array<Float32Array>();\r\n\t\twhile (geoCnt < geometry.subGeometries.length) {\r\n\t\t\tsub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\r\n\t\t\tthis._blocks[meshID].uvsForVertexAnimation.push(sub_geom.uvs.get(sub_geom.numVertices));\r\n\t\t\tgeoCnt++;\r\n\t\t}\r\n\t\treturn this._blocks[meshID].uvsForVertexAnimation;\r\n\t}\r\n\r\n\tprivate parseVarStr():string\r\n\t{\r\n\r\n\t\tvar len:number = this._newBlockBytes.readUnsignedShort();\r\n\t\treturn this._newBlockBytes.readUTFBytes(len);\r\n\t}\r\n\r\n\tprivate getAssetByID(assetID:number, assetTypesToGet:Array<string>):Array<any>\r\n\t{\r\n\t\tvar returnArray:Array<any> = new Array<any>();\r\n\t\tvar typeCnt:number = 0;\r\n\t\tif (assetID > 0) {\r\n\t\t\tif (this._blocks[assetID]) {\r\n\t\t\t\tif (this._blocks[assetID].data) {\r\n\t\t\t\t\twhile (typeCnt < assetTypesToGet.length) {\r\n\t\t\t\t\t\t//console.log(\"check if asset is of type = \"+assetTypesToGet[typeCnt]);\r\n\t\t\t\t\t\tvar iasset:IAsset = <IAsset> this._blocks[assetID].data;\r\n\t\t\t\t\t\t//console.log(\"asset is of type = \"+iasset.assetType);\r\n\t\t\t\t\t\tif (iasset.assetType == assetTypesToGet[typeCnt]) {\r\n\t\t\t\t\t\t\t//if the right assetType was found\r\n\t\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == SingleCubeTexture.assetType)) {\r\n\t\t\t\t\t\t\t\tif (this._blocks[assetID].data instanceof SingleCubeTexture) {\r\n\t\t\t\t\t\t\t\t\treturnArray.push(true);\r\n\t\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\r\n\t\t\t\t\t\t\t\t\treturn returnArray;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == Single2DTexture.assetType)) {\r\n\t\t\t\t\t\t\t\tif (this._blocks[assetID].data instanceof Single2DTexture) {\r\n\t\t\t\t\t\t\t\t\treturnArray.push(true);\r\n\t\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\r\n\t\t\t\t\t\t\t\t\treturn returnArray;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturnArray.push(true);\r\n\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\r\n\t\t\t\t\t\t\t\treturn returnArray;\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//if ((assetTypesToGet[typeCnt] == Geometry.assetType) && (IAsset(_blocks[assetID].data).assetType == Mesh.assetType)) {\r\n\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == Geometry.assetType) && (iasset.assetType == Mesh.assetType)) {\r\n\r\n\t\t\t\t\t\t\tvar mesh:Mesh = <Mesh> this._blocks[assetID].data;\r\n\t\t\t\t\t\t\treturnArray.push(true);\r\n\t\t\t\t\t\t\treturnArray.push(mesh.geometry);\r\n\t\t\t\t\t\t\treturn returnArray;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttypeCnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// if the has not returned anything yet, the asset is not found, or the found asset is not the right type.\r\n\t\treturnArray.push(false);\r\n\t\treturnArray.push(this.getDefaultAsset(assetTypesToGet[0]));\r\n\t\treturn returnArray;\r\n\t}\r\n\tprivate getDefaultAsset(assetType:string):IAsset\r\n\t{\r\n\t\tswitch (true) {\r\n\t\t\tcase (assetType == SingleCubeTexture.assetType):\r\n\t\t\t\treturn this.getDefaultCubeTexture();\r\n\t\t\t\tbreak;\r\n\t\t\tcase (assetType == Single2DTexture.assetType):\r\n\t\t\t\treturn DefaultMaterialManager.getDefaultTexture();\r\n\t\t\t\tbreak;\r\n\t\t\tcase (assetType == MethodMaterial.assetType):\r\n\t\t\t\treturn DefaultMaterialManager.getDefaultMaterial();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic getDefaultCubeTexture():IAsset\r\n\t{\r\n\t\tif (!this._defaultCubeTexture) {\r\n\t\t\tvar defaultBitmap:BitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\t\tvar bitmapImageCube = new BitmapImageCube(defaultBitmap.width);\r\n\r\n\t\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\t\tbitmapImageCube.draw(i, defaultBitmap);\r\n\r\n\r\n\t\t\tthis._defaultCubeTexture = new SingleCubeTexture(bitmapImageCube);\r\n\t\t\tthis._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t\t}\r\n\r\n\t\treturn <IAsset> this._defaultCubeTexture;\r\n\t}\r\n\r\n\tprivate readNumber(precision:boolean = false):number\r\n\t{\r\n\t\tif (precision)\r\n\t\t\treturn this._newBlockBytes.readDouble();\r\n\t\treturn this._newBlockBytes.readFloat();\r\n\r\n\t}\r\n\r\n\tprivate parseMatrix3D():Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\r\n\t}\r\n\r\n\tprivate parseMatrix32RawData():Array<number>\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\r\n\t\tfor (i = 0; i < 6; i++) {\r\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n\tprivate parseMatrix43RawData():Array<number>\r\n\t{\r\n\t\tvar mtx_raw:Array<number> = new Array<number>(16);\r\n\r\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[3] = 0.0;\r\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[7] = 0.0;\r\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[11] = 0.0;\r\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\r\n\t\tmtx_raw[15] = 1.0;\r\n\r\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\r\n\r\n\t\tif (isNaN(mtx_raw[0])) {\r\n\t\t\tmtx_raw[0] = 1;\r\n\t\t\tmtx_raw[1] = 0;\r\n\t\t\tmtx_raw[2] = 0;\r\n\t\t\tmtx_raw[4] = 0;\r\n\t\t\tmtx_raw[5] = 1;\r\n\t\t\tmtx_raw[6] = 0;\r\n\t\t\tmtx_raw[8] = 0;\r\n\t\t\tmtx_raw[9] = 0;\r\n\t\t\tmtx_raw[10] = 1;\r\n\t\t\tmtx_raw[12] = 0;\r\n\t\t\tmtx_raw[13] = 0;\r\n\t\t\tmtx_raw[14] = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn mtx_raw;\r\n\t}\r\n\r\n}\r\n\r\nexport = AWDParser;\r\n\r\n\r\nclass AWDProperties\r\n{\r\n\tpublic set(key:number, value:any):void\r\n\t{\r\n\t\tthis[ key.toString() ] = value;\r\n\t}\r\n\r\n\tpublic get(key:number, fallback:any):any\r\n\t{\r\n\t\tif (this.hasOwnProperty(key.toString())) {\r\n\t\t\treturn this[key.toString()];\r\n\t\t} else {\r\n\t\t\treturn fallback;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass BitFlags\r\n{\r\n\tpublic static FLAG1:number = 1;\r\n\tpublic static FLAG2:number = 2;\r\n\tpublic static FLAG3:number = 4;\r\n\tpublic static FLAG4:number = 8;\r\n\tpublic static FLAG5:number = 16;\r\n\tpublic static FLAG6:number = 32;\r\n\tpublic static FLAG7:number = 64;\r\n\tpublic static FLAG8:number = 128;\r\n\tpublic static FLAG9:number = 256;\r\n\tpublic static FLAG10:number = 512;\r\n\tpublic static FLAG11:number = 1024;\r\n\tpublic static FLAG12:number = 2048;\r\n\tpublic static FLAG13:number = 4096;\r\n\tpublic static FLAG14:number = 8192;\r\n\tpublic static FLAG15:number = 16384;\r\n\tpublic static FLAG16:number = 32768;\r\n\r\n\tpublic static test(flags:number, testFlag:number):boolean\r\n\t{\r\n\t\treturn (flags & testFlag) == testFlag;\r\n\t}\r\n}\r\n",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\n\r\n/**\r\n * MD2Parser provides a parser for the MD2 data type.\r\n */\r\nclass MD2Parser extends ParserBase\r\n{\r\n\tpublic static FPS:number /*int*/ = 6;\r\n\r\n\tprivate _clipNodes:Object = new Object();\r\n\tprivate _byteData:ByteArray;\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _parsedHeader:boolean;\r\n\tprivate _parsedUV:boolean;\r\n\tprivate _parsedFaces:boolean;\r\n\tprivate _parsedFrames:boolean;\r\n\r\n\tprivate _ident:number /*uint*/;\r\n\tprivate _version:number /*uint*/;\r\n\tprivate _skinWidth:number /*uint*/;\r\n\tprivate _skinHeight:number /*uint*/;\r\n\t//private _frameSize : number /*uint*/;\r\n\tprivate _numSkins:number /*uint*/;\r\n\tprivate _numVertices:number /*uint*/;\r\n\tprivate _numST:number /*uint*/;\r\n\tprivate _numTris:number /*uint*/;\r\n\t//private _numGlCmds : number /*uint*/;\r\n\tprivate _numFrames:number /*uint*/;\r\n\tprivate _offsetSkins:number /*uint*/;\r\n\tprivate _offsetST:number /*uint*/;\r\n\tprivate _offsetTris:number /*uint*/;\r\n\tprivate _offsetFrames:number /*uint*/;\r\n\t//private _offsetGlCmds : number /*uint*/;\r\n\tprivate _offsetEnd:number /*uint*/;\r\n\r\n\tprivate _uvIndices:Array<number>;\r\n\tprivate _indices:Array<number> /*uint*/;\r\n\tprivate _vertIndices:Array<number>;\r\n\r\n\t// the current subgeom being built\r\n\tprivate _animationSet:VertexAnimationSet = new VertexAnimationSet();\r\n\tprivate _firstSubGeom:TriangleSubGeometry;\r\n\tprivate _uvs:Array<number>;\r\n\tprivate _finalUV:Array<number>;\r\n\r\n\tprivate _materialNames:Array<string>;\r\n\tprivate _textureType:string;\r\n\tprivate _ignoreTexturePath:boolean;\r\n\tprivate _mesh:Mesh;\r\n\tprivate _geometry:Geometry;\r\n\r\n\tprivate materialFinal:boolean = false;\r\n\tprivate geoCreated:boolean = false;\r\n\r\n\t/**\r\n\t * Creates a new MD2Parser object.\r\n\t * @param textureType The extension of the texture (e.g. jpg/png/...)\r\n\t * @param ignoreTexturePath If true, the path of the texture is ignored\r\n\t */\r\n\tconstructor(textureType:string = \"jpg\", ignoreTexturePath:boolean = true)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\t\tthis._textureType = textureType;\r\n\t\tthis._ignoreTexturePath = ignoreTexturePath;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md2\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn (ParserUtils.toString(data, 4) == 'IDP2');\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.assets.length != 1)\r\n\t\t\treturn;\r\n\r\n\t\tvar asset:Single2DTexture = new Single2DTexture(<BitmapImage2D> resourceDependency.assets[0]);\r\n\r\n\t\tif (asset) {\r\n\t\t\tvar material:MethodMaterial = new MethodMaterial(asset);\r\n\r\n\t\t\tif (this.materialMode >= 2)\r\n\t\t\t\tmaterial.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t//add to the content property\r\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\tmaterial.name = this._mesh.material.name;\r\n\t\t\tthis._mesh.material = material;\r\n\t\t\tthis._pFinalizeAsset(material);\r\n\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t}\r\n\t\tthis.materialFinal = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\t// apply system default\r\n\t\tif (this.materialMode < 2) {\r\n\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\r\n\t\t} else {\r\n\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t}\r\n\r\n\t\t//add to the content property\r\n\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\tthis.materialFinal = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._byteData = this._pGetByteData();\r\n\t\t\tthis._startedParsing = true;\r\n\r\n\t\t\t// Reset bytearray read position (which may have been\r\n\t\t\t// moved forward by the supportsData() function.)\r\n\t\t\tthis._byteData.position = 0;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\tif (!this._parsedHeader) {\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\r\n\r\n\t\t\t\t// TODO: Create a mesh only when encountered (if it makes sense\r\n\t\t\t\t// for this file format) and return it using this._pFinalizeAsset()\r\n\t\t\t\tthis._geometry = new Geometry();\r\n\t\t\t\tthis._mesh = new Mesh(this._geometry, null);\r\n\t\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._mesh.material = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\t\t\t\t\t(<MethodMaterial> this._mesh.material).mode = MethodMaterialMode.MULTI_PASS;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//_geometry.animation = new VertexAnimation(2, VertexAnimationMode.ABSOLUTE);\r\n\t\t\t\t//_animator = new VertexAnimator(VertexAnimationState(_mesh.animationState));\r\n\r\n\t\t\t\t// Parse header and decompress body\r\n\t\t\t\tthis.parseHeader();\r\n\t\t\t\tthis.parseMaterialNames();\r\n\t\t\t} else if (!this._parsedUV) {\r\n\t\t\t\tthis.parseUV();\r\n\t\t\t} else if (!this._parsedFaces) {\r\n\t\t\t\tthis.parseFaces();\r\n\t\t\t} else if (!this._parsedFrames) {\r\n\t\t\t\tthis.parseFrames();\r\n\t\t\t} else if ((this.geoCreated) && (this.materialFinal)) {\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t} else if (!this.geoCreated) {\r\n\t\t\t\tthis.geoCreated = true;\r\n\t\t\t\t//create default subgeometry\r\n\t\t\t\tthis._geometry.addSubGeometry(this._firstSubGeom.clone());\r\n\t\t\t\t// Force name to be chosen by this._pFinalizeAsset()\r\n\t\t\t\tthis._mesh.name = \"\";\r\n\t\t\t\tif (this.materialFinal) {\r\n\t\t\t\t\t//add to the content property\r\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\r\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\t/**\r\n\t * Reads in all that MD2 Header data that is declared as private variables.\r\n\t * I know its a lot, and it looks ugly, but only way to do it in Flash\r\n\t */\r\n\tprivate parseHeader()\r\n\t{\r\n\t\tthis._ident = this._byteData.readInt();\r\n\t\tthis._version = this._byteData.readInt();\r\n\t\tthis._skinWidth = this._byteData.readInt();\r\n\t\tthis._skinHeight = this._byteData.readInt();\r\n\t\t//skip this._frameSize\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._numSkins = this._byteData.readInt();\r\n\t\tthis._numVertices = this._byteData.readInt();\r\n\t\tthis._numST = this._byteData.readInt();\r\n\t\tthis._numTris = this._byteData.readInt();\r\n\t\t//skip this._numGlCmds\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._numFrames = this._byteData.readInt();\r\n\t\tthis._offsetSkins = this._byteData.readInt();\r\n\t\tthis._offsetST = this._byteData.readInt();\r\n\t\tthis._offsetTris = this._byteData.readInt();\r\n\t\tthis._offsetFrames = this._byteData.readInt();\r\n\t\t//skip this._offsetGlCmds\r\n\t\tthis._byteData.readInt();\r\n\t\tthis._offsetEnd = this._byteData.readInt();\r\n\r\n\t\tthis._parsedHeader = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the file names for the materials.\r\n\t */\r\n\tprivate parseMaterialNames()\r\n\t{\r\n\t\tvar url:string;\r\n\t\tvar name:string;\r\n\t\tvar extIndex:number /*int*/;\r\n\t\tvar slashIndex:number /*int*/;\r\n\t\tthis._materialNames = new Array<string>();\r\n\t\tthis._byteData.position = this._offsetSkins;\r\n\r\n\t\tvar regExp:RegExp = new RegExp(\"[^a-zA-Z0-9\\\\_\\/.]\", \"g\");\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numSkins; ++i) {\r\n\t\t\tname = this._byteData.readUTFBytes(64);\r\n\t\t\tname = name.replace(regExp, \"\");\r\n\t\t\textIndex = name.lastIndexOf(\".\");\r\n\t\t\tif (this._ignoreTexturePath)\r\n\t\t\t\tslashIndex = name.lastIndexOf(\"/\");\r\n\t\t\tif (name.toLowerCase().indexOf(\".jpg\") == -1 && name.toLowerCase().indexOf(\".png\") == -1) {\r\n\t\t\t\tname = name.substring(slashIndex + 1, extIndex);\r\n\t\t\t\turl = name + \".\" + this._textureType;\r\n\t\t\t} else {\r\n\t\t\t\turl = name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._materialNames[i] = name;\r\n\r\n\t\t\t// only support 1 skin TODO: really?\r\n\t\t\tif (this.dependencies.length == 0)\r\n\t\t\t\tthis._pAddDependency(name, new URLRequest(url));\r\n\t\t}\r\n\r\n\t\tif (this._materialNames.length > 0)\r\n\t\t\tthis._mesh.material.name = this._materialNames[0]; else\r\n\t\t\tthis.materialFinal = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the uv data for the mesh.\r\n\t */\r\n\tprivate parseUV()\r\n\t{\r\n\t\tvar j:number /*uint*/ = 0;\r\n\r\n\t\tthis._uvs = new Array<number>(this._numST*2);\r\n\t\tthis._byteData.position = this._offsetST;\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numST; i++) {\r\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinWidth;\r\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinHeight;\r\n\t\t}\r\n\r\n\t\tthis._parsedUV = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses unique indices for the faces.\r\n\t */\r\n\tprivate parseFaces()\r\n\t{\r\n\t\tvar a:number /*uint*/, b:number /*uint*/, c:number /*uint*/, ta:number /*uint*/, tb:number /*uint*/, tc:number /*uint*/;\r\n\t\tvar i:number /*uint*/;\r\n\r\n\t\tthis._vertIndices = new Array<number>();\r\n\t\tthis._uvIndices = new Array<number>();\r\n\t\tthis._indices = new Array<number>() /*uint*/;\r\n\r\n\t\tthis._byteData.position = this._offsetTris;\r\n\r\n\t\tfor (i = 0; i < this._numTris; i++) {\r\n\t\t\t//collect vertex indices\r\n\t\t\ta = this._byteData.readUnsignedShort();\r\n\t\t\tb = this._byteData.readUnsignedShort();\r\n\t\t\tc = this._byteData.readUnsignedShort();\r\n\r\n\t\t\t//collect uv indices\r\n\t\t\tta = this._byteData.readUnsignedShort();\r\n\t\t\ttb = this._byteData.readUnsignedShort();\r\n\t\t\ttc = this._byteData.readUnsignedShort();\r\n\r\n\t\t\tthis.addIndex(a, ta);\r\n\t\t\tthis.addIndex(b, tb);\r\n\t\t\tthis.addIndex(c, tc);\r\n\t\t}\r\n\r\n\t\tvar len:number /*uint*/ = this._uvIndices.length;\r\n\t\tthis._finalUV = new Array<number>(len*2);\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tthis._finalUV[i << 1] = this._uvs[this._uvIndices[i] << 1];\r\n\t\t\tthis._finalUV[(i << 1) + 1] = this._uvs[(this._uvIndices[i] << 1) + 1];\r\n\t\t}\r\n\r\n\t\tthis._parsedFaces = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a face index to the list if it doesn't exist yet, based on vertexIndex and uvIndex, and adds the\r\n\t * corresponding vertex and uv data in the correct location.\r\n\t * @param vertexIndex The original index in the vertex list.\r\n\t * @param uvIndex The original index in the uv list.\r\n\t */\r\n\tprivate addIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/)\r\n\t{\r\n\t\tvar index:number /*int*/ = this.findIndex(vertexIndex, uvIndex);\r\n\r\n\t\tif (index == -1) {\r\n\t\t\tthis._indices.push(this._vertIndices.length);\r\n\t\t\tthis._vertIndices.push(vertexIndex);\r\n\t\t\tthis._uvIndices.push(uvIndex);\r\n\t\t} else\r\n\t\t\tthis._indices.push(index);\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the final index corresponding to the original MD2's vertex and uv indices. Returns -1 if it wasn't added yet.\r\n\t * @param vertexIndex The original index in the vertex list.\r\n\t * @param uvIndex The original index in the uv list.\r\n\t * @return The index of the final mesh corresponding to the original vertex and uv index. -1 if it doesn't exist yet.\r\n\t */\r\n\tprivate findIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/):number /*int*/\r\n\t{\r\n\t\tvar len:number /*uint*/ = this._vertIndices.length;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\r\n\t\t\tif (this._vertIndices[i] == vertexIndex && this._uvIndices[i] == uvIndex)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses all the frame geometries.\r\n\t */\r\n\tprivate parseFrames()\r\n\t{\r\n\t\tvar sx:number, sy:number, sz:number;\r\n\t\tvar tx:number, ty:number, tz:number;\r\n\t\tvar geometry:Geometry;\r\n\t\tvar subGeom:TriangleSubGeometry;\r\n\t\tvar vertLen:number /*uint*/ = this._vertIndices.length;\r\n\t\tvar fvertices:Array<number>;\r\n\t\tvar tvertices:Array<number>;\r\n\t\tvar i:number /*uint*/, j:number /*int*/, k:number /*uint*/;\r\n\t\t//var ch : number /*uint*/;\r\n\t\tvar name:string = \"\";\r\n\t\tvar prevClip:VertexClipNode = null;\r\n\r\n\t\tthis._byteData.position = this._offsetFrames;\r\n\r\n\t\tfor (i = 0; i < this._numFrames; i++) {\r\n\r\n\t\t\ttvertices = new Array<number>();\r\n\t\t\tfvertices = new Array<number>(vertLen*3);\r\n\r\n\t\t\tsx = this._byteData.readFloat();\r\n\t\t\tsy = this._byteData.readFloat();\r\n\t\t\tsz = this._byteData.readFloat();\r\n\r\n\t\t\ttx = this._byteData.readFloat();\r\n\t\t\tty = this._byteData.readFloat();\r\n\t\t\ttz = this._byteData.readFloat();\r\n\r\n\t\t\tname = this.readFrameName();\r\n\r\n\t\t\t// Note, the extra data.position++ in the for loop is there\r\n\t\t\t// to skip over a byte that holds the \"vertex normal index\"\r\n\t\t\tfor (j = 0; j < this._numVertices; j++, this._byteData.position++)\r\n\t\t\t\ttvertices.push(sx*this._byteData.readUnsignedByte() + tx, sy*this._byteData.readUnsignedByte() + ty, sz*this._byteData.readUnsignedByte() + tz);\r\n\r\n\t\t\tk = 0;\r\n\t\t\tfor (j = 0; j < vertLen; j++) {\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3];\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 2];\r\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 1];\r\n\t\t\t}\r\n\r\n\t\t\tsubGeom = new TriangleSubGeometry(new AttributesBuffer());\r\n\r\n\t\t\tif (this._firstSubGeom == null)\r\n\t\t\t\tthis._firstSubGeom = subGeom;\r\n\r\n\t\t\tgeometry = new Geometry();\r\n\t\t\tgeometry.addSubGeometry(subGeom);\r\n\r\n\t\t\tsubGeom.setIndices(this._indices);\r\n\t\t\tsubGeom.setPositions(fvertices);\r\n\t\t\tsubGeom.setUVs(this._finalUV);\r\n\t\t\t// cause explicit updates\r\n\t\t\tsubGeom.setNormals(null);\r\n\t\t\tsubGeom.setTangents(null);\r\n\t\t\t// turn auto updates off because they may be animated and set explicitly\r\n\t\t\tsubGeom.autoDeriveNormals = false;\r\n\t\t\tsubGeom.autoDeriveTangents = false;\r\n\r\n\t\t\tvar clip:VertexClipNode = this._clipNodes[name];\r\n\r\n\t\t\tif (!clip) {\r\n\t\t\t\t// If another sequence was parsed before this one, starting\r\n\t\t\t\t// a new state means the previous one is complete and can\r\n\t\t\t\t// hence be finalized.\r\n\t\t\t\tif (prevClip) {\r\n\t\t\t\t\tthis._pFinalizeAsset(prevClip);\r\n\t\t\t\t\tthis._animationSet.addAnimation(prevClip);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tclip = new VertexClipNode();\r\n\t\t\t\tclip.name = name;\r\n\t\t\t\tclip.stitchFinalFrame = true;\r\n\r\n\t\t\t\tthis._clipNodes[name] = clip;\r\n\r\n\t\t\t\tprevClip = clip;\r\n\t\t\t}\r\n\t\t\tclip.addFrame(geometry, 1000/MD2Parser.FPS);\r\n\t\t}\r\n\r\n\t\t// Finalize the last state\r\n\t\tif (prevClip) {\r\n\t\t\tthis._pFinalizeAsset(prevClip);\r\n\t\t\tthis._animationSet.addAnimation(prevClip);\r\n\t\t}\r\n\r\n\t\t// Force this._pFinalizeAsset() to decide name\r\n\t\tthis._pFinalizeAsset(this._animationSet);\r\n\r\n\t\tthis._parsedFrames = true;\r\n\t}\r\n\r\n\tprivate readFrameName():string\r\n\t{\r\n\t\tvar name:string = \"\";\r\n\t\tvar k:number /*uint*/ = 0;\r\n\t\tfor (var j:number /*uint*/ = 0; j < 16; j++) {\r\n\t\t\tvar ch:number /*uint*/ = this._byteData.readUnsignedByte();\r\n\r\n\t\t\tif (Math.floor(ch) > 0x39 && Math.floor(ch) <= 0x7A && k == 0)\r\n\t\t\t\tname += String.fromCharCode(ch);\r\n\r\n\t\t\tif (Math.floor(ch) >= 0x30 && Math.floor(ch) <= 0x39)\r\n\t\t\t\tk++;\r\n\t\t}\r\n\t\treturn name;\r\n\t}\r\n}\r\n\r\nexport = MD2Parser;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\n\r\n/**\r\n * MD5AnimParser provides a parser for the md5anim data type, providing an animation sequence for the md5 format.\r\n *\r\n * todo: optimize\r\n */\r\nclass MD5AnimParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\r\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\r\n\tpublic static NUM_FRAMES_TOKEN:string = \"numFrames\";\r\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\r\n\tpublic static FRAME_RATE_TOKEN:string = \"frameRate\";\r\n\tpublic static NUM_ANIMATED_COMPONENTS_TOKEN:string = \"numAnimatedComponents\";\r\n\r\n\tpublic static HIERARCHY_TOKEN:string = \"hierarchy\";\r\n\tpublic static BOUNDS_TOKEN:string = \"bounds\";\r\n\tpublic static BASE_FRAME_TOKEN:string = \"baseframe\";\r\n\tpublic static FRAME_TOKEN:string = \"frame\";\r\n\r\n\tpublic static COMMENT_TOKEN:string = \"//\";\r\n\r\n\tprivate _parseIndex:number /*int*/ = 0;\r\n\tprivate _reachedEOF:boolean;\r\n\tprivate _line:number /*int*/ = 0;\r\n\tprivate _charLineIndex:number /*int*/ = 0;\r\n\tprivate _version:number /*int*/;\r\n\tprivate _frameRate:number /*int*/;\r\n\tprivate _numFrames:number /*int*/;\r\n\tprivate _numJoints:number /*int*/;\r\n\tprivate _numAnimatedComponents:number /*int*/;\r\n\r\n\tprivate _hierarchy:Array<HierarchyData>;\r\n\tprivate _bounds:Array<BoundsData>;\r\n\tprivate _frameData:Array<FrameData>;\r\n\tprivate _baseFrameData:Array<BaseFrameData>;\r\n\r\n\tprivate _rotationQuat:Quaternion;\r\n\tprivate _clip:SkeletonClipNode;\r\n\r\n\t/**\r\n\t * Creates a new MD5AnimParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._rotationQuat = new Quaternion();\r\n\t\tvar t1:Quaternion = new Quaternion();\r\n\t\tvar t2:Quaternion = new Quaternion();\r\n\r\n\t\tt1.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\r\n\t\tt2.fromAxisAngle(Vector3D.Y_AXIS, -Math.PI*.5);\r\n\r\n\t\tthis._rotationQuat.multiply(t2, t1);\r\n\r\n\t\tif (additionalRotationAxis) {\r\n\t\t\tthis._rotationQuat.multiply(t2, t1);\r\n\t\t\tt1.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\r\n\t\t\tthis._rotationQuat.multiply(t1, this._rotationQuat);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md5anim\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar token:string;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\ttoken = this.getNextToken();\r\n\t\t\tswitch (token) {\r\n\t\t\t\tcase MD5AnimParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"\":\r\n\t\t\t\t\t// can occur at the end of a file\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.VERSION_TOKEN:\r\n\t\t\t\t\tthis._version = this.getNextInt();\r\n\t\t\t\t\tif (this._version != 10)\r\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.COMMAND_LINE_TOKEN:\r\n\t\t\t\t\tthis.parseCMD();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_FRAMES_TOKEN:\r\n\t\t\t\t\tthis._numFrames = this.getNextInt();\r\n\t\t\t\t\tthis._bounds = new Array<BoundsData>();\r\n\t\t\t\t\tthis._frameData = new Array<FrameData>();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_JOINTS_TOKEN:\r\n\t\t\t\t\tthis._numJoints = this.getNextInt();\r\n\t\t\t\t\tthis._hierarchy = new Array<HierarchyData>(this._numJoints);\r\n\t\t\t\t\tthis._baseFrameData = new Array<BaseFrameData>(this._numJoints);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.FRAME_RATE_TOKEN:\r\n\t\t\t\t\tthis._frameRate = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.NUM_ANIMATED_COMPONENTS_TOKEN:\r\n\t\t\t\t\tthis._numAnimatedComponents = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.HIERARCHY_TOKEN:\r\n\t\t\t\t\tthis.parseHierarchy();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.BOUNDS_TOKEN:\r\n\t\t\t\t\tthis.parseBounds();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.BASE_FRAME_TOKEN:\r\n\t\t\t\t\tthis.parseBaseFrame();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5AnimParser.FRAME_TOKEN:\r\n\t\t\t\t\tthis.parseFrame();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (!this._reachedEOF)\r\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._reachedEOF) {\r\n\t\t\t\tthis._clip = new SkeletonClipNode();\r\n\t\t\t\tthis.translateClip();\r\n\t\t\t\tthis._pFinalizeAsset(this._clip);\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts all key frame data to an SkinnedAnimationSequence.\r\n\t */\r\n\tprivate translateClip():void\r\n\t{\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numFrames; ++i)\r\n\t\t\tthis._clip.addFrame(this.translatePose(this._frameData[i]), 1000/this._frameRate);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a single key frame data to a SkeletonPose.\r\n\t * @param frameData The actual frame data.\r\n\t * @return A SkeletonPose containing the frame data's pose.\r\n\t */\r\n\tprivate translatePose(frameData:FrameData):SkeletonPose\r\n\t{\r\n\t\tvar hierarchy:HierarchyData;\r\n\t\tvar pose:JointPose;\r\n\t\tvar base:BaseFrameData;\r\n\t\tvar flags:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar translate:Vector3D = new Vector3D();\r\n\t\tvar orientation:Quaternion = new Quaternion();\r\n\t\tvar components:Array<number> = frameData.components;\r\n\t\tvar skelPose:SkeletonPose = new SkeletonPose();\r\n\t\tvar jointPoses:Array<JointPose> = skelPose.jointPoses;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numJoints; ++i) {\r\n\t\t\tj = 0;\r\n\t\t\tpose = new JointPose();\r\n\t\t\thierarchy = this._hierarchy[i];\r\n\t\t\tbase = this._baseFrameData[i];\r\n\t\t\tflags = hierarchy.flags;\r\n\t\t\ttranslate.x = base.position.x;\r\n\t\t\ttranslate.y = base.position.y;\r\n\t\t\ttranslate.z = base.position.z;\r\n\t\t\torientation.x = base.orientation.x;\r\n\t\t\torientation.y = base.orientation.y;\r\n\t\t\torientation.z = base.orientation.z;\r\n\r\n\t\t\tif (flags & 1)\r\n\t\t\t\ttranslate.x = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 2)\r\n\t\t\t\ttranslate.y = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 4)\r\n\t\t\t\ttranslate.z = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 8)\r\n\t\t\t\torientation.x = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 16)\r\n\t\t\t\torientation.y = components[hierarchy.startIndex + (j++)];\r\n\t\t\tif (flags & 32)\r\n\t\t\t\torientation.z = components[hierarchy.startIndex + (j++)];\r\n\r\n\t\t\tvar w:number = 1 - orientation.x*orientation.x - orientation.y*orientation.y - orientation.z*orientation.z;\r\n\t\t\torientation.w = w < 0? 0 : -Math.sqrt(w);\r\n\r\n\t\t\tif (hierarchy.parentIndex < 0) {\r\n\t\t\t\tpose.orientation.multiply(this._rotationQuat, orientation);\r\n\t\t\t\tpose.translation = this._rotationQuat.rotatePoint(translate);\r\n\t\t\t} else {\r\n\t\t\t\tpose.orientation.copyFrom(orientation);\r\n\t\t\t\tpose.translation.x = translate.x;\r\n\t\t\t\tpose.translation.y = translate.y;\r\n\t\t\t\tpose.translation.z = translate.z;\r\n\t\t\t}\r\n\t\t\tpose.orientation.y = -pose.orientation.y;\r\n\t\t\tpose.orientation.z = -pose.orientation.z;\r\n\t\t\tpose.translation.x = -pose.translation.x;\r\n\r\n\t\t\tjointPoses[i] = pose;\r\n\t\t}\r\n\r\n\t\treturn skelPose;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the skeleton's hierarchy data.\r\n\t */\r\n\tprivate parseHierarchy():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:HierarchyData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new HierarchyData();\r\n\t\t\tdata.name = this.parseLiteralstring();\r\n\t\t\tdata.parentIndex = this.getNextInt();\r\n\t\t\tdata.flags = this.getNextInt();\r\n\t\t\tdata.startIndex = this.getNextInt();\r\n\t\t\tthis._hierarchy[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses frame bounds.\r\n\t */\r\n\tprivate parseBounds():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:BoundsData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new BoundsData();\r\n\t\t\tdata.min = this.parseVector3D();\r\n\t\t\tdata.max = this.parseVector3D();\r\n\t\t\tthis._bounds[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the base frame.\r\n\t */\r\n\tprivate parseBaseFrame():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:BaseFrameData;\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar i:number /*int*/ = 0;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new BaseFrameData();\r\n\t\t\tdata.position = this.parseVector3D();\r\n\t\t\tdata.orientation = this.parseQuaternion();\r\n\t\t\tthis._baseFrameData[i++] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a single frame.\r\n\t */\r\n\tprivate parseFrame():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar data:FrameData;\r\n\t\tvar token:string;\r\n\t\tvar frameIndex:number /*int*/;\r\n\r\n\t\tframeIndex = this.getNextInt();\r\n\r\n\t\ttoken = this.getNextToken();\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tdata = new FrameData();\r\n\t\t\tdata.components = new Array<number>(this._numAnimatedComponents);\r\n\r\n\t\t\tfor (var i:number /*int*/ = 0; i < this._numAnimatedComponents; ++i)\r\n\t\t\t\tdata.components[i] = this.getNextNumber();\r\n\r\n\t\t\tthis._frameData[frameIndex] = data;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Puts back the last read character into the data stream.\r\n\t */\r\n\tprivate putBack():void\r\n\t{\r\n\t\tthis._parseIndex--;\r\n\t\tthis._charLineIndex--;\r\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the next token in the data stream.\r\n\t */\r\n\tprivate getNextToken():string\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar token:string = \"\";\r\n\r\n\t\twhile (!this._reachedEOF) {\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\r\n\t\t\t\tif (token != MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.skipWhiteSpace();\r\n\t\t\t\tif (token != \"\")\r\n\t\t\t\t\treturn token;\r\n\t\t\t} else\r\n\t\t\t\ttoken += ch;\r\n\r\n\t\t\tif (token == MD5AnimParser.COMMENT_TOKEN)\r\n\t\t\t\treturn token;\r\n\t\t}\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Skips all whitespace in the data stream.\r\n\t */\r\n\tprivate skipWhiteSpace():void\r\n\t{\r\n\t\tvar ch:string;\r\n\r\n\t\tdo\r\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\r\n\r\n\t\tthis.putBack();\r\n\t}\r\n\r\n\t/**\r\n\t * Skips to the next line.\r\n\t */\r\n\tprivate ignoreLine():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\r\n\t\t\tch = this.getNextChar();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next single character in the data stream.\r\n\t */\r\n\tprivate getNextChar():string\r\n\t{\r\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\r\n\r\n\t\tif (ch == \"\\n\") {\r\n\t\t\t++this._line;\r\n\t\t\tthis._charLineIndex = 0;\r\n\t\t} else if (ch != \"\\r\")\r\n\t\t\t++this._charLineIndex;\r\n\r\n\t\tif (this._parseIndex == this._textData.length)\r\n\t\t\tthis._reachedEOF = true;\r\n\r\n\t\treturn ch;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next integer in the data stream.\r\n\t */\r\n\tprivate getNextInt():number /*int*/\r\n\t{\r\n\t\tvar i:number = parseInt(this.getNextToken());\r\n\t\tif (isNaN(i))\r\n\t\t\tthis.sendParseError(\"int type\");\r\n\t\treturn i;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next floating point number in the data stream.\r\n\t */\r\n\tprivate getNextNumber():number\r\n\t{\r\n\t\tvar f:number = parseFloat(this.getNextToken());\r\n\t\tif (isNaN(f))\r\n\t\t\tthis.sendParseError(\"float type\");\r\n\t\treturn f;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next 3d vector in the data stream.\r\n\t */\r\n\tprivate parseVector3D():Vector3D\r\n\t{\r\n\t\tvar vec:Vector3D = new Vector3D();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvec.x = this.getNextNumber();\r\n\t\tvec.y = this.getNextNumber();\r\n\t\tvec.z = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next quaternion in the data stream.\r\n\t */\r\n\tprivate parseQuaternion():Quaternion\r\n\t{\r\n\t\tvar quat:Quaternion = new Quaternion();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tquat.x = this.getNextNumber();\r\n\t\tquat.y = this.getNextNumber();\r\n\t\tquat.z = this.getNextNumber();\r\n\r\n\t\t// quat supposed to be unit length\r\n\t\tvar t:number = 1 - (quat.x*quat.x) - (quat.y*quat.y) - (quat.z*quat.z);\r\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn quat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the command line data.\r\n\t */\r\n\tprivate parseCMD():void\r\n\t{\r\n\t\t// just ignore the command line property\r\n\t\tthis.parseLiteralstring();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\r\n\t * by double quotes.\r\n\t */\r\n\tprivate parseLiteralstring():string\r\n\t{\r\n\t\tthis.skipWhiteSpace();\r\n\r\n\t\tvar ch:string = this.getNextChar();\r\n\t\tvar str:string = \"\";\r\n\r\n\t\tif (ch != \"\\\"\")\r\n\t\t\tthis.sendParseError(\"\\\"\");\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch != \"\\\"\")\r\n\t\t\t\tstr += ch;\r\n\t\t} while (ch != \"\\\"\");\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an end-of-file error when a premature end of file was encountered.\r\n\t */\r\n\tprivate sendEOFError():void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected end of file\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unexpected token was encountered.\r\n\t * @param expected The token type that was actually expected.\r\n\t */\r\n\tprivate sendParseError(expected:string):void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unknown keyword was encountered.\r\n\t */\r\n\tprivate sendUnknownKeywordError():void\r\n\t{\r\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\r\n\t}\r\n}\r\n\r\nexport = MD5AnimParser;\r\n\r\n\r\n/**\r\n *\r\n */\r\nclass BaseFrameData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic position:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientation:Quaternion;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass BoundsData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic min:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic max:Vector3D;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass FrameData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic index:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic components:Array<number>;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass HierarchyData\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic name:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic parentIndex:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic flags:number /*int*/;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic startIndex:number /*int*/;\r\n}",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\n\r\n// todo: create animation system, parse skeleton\r\n\r\n/**\r\n * MD5MeshParser provides a parser for the md5mesh data type, providing the geometry of the md5 format.\r\n *\r\n * todo: optimize\r\n */\r\nclass MD5MeshParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\r\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\r\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\r\n\tpublic static NUM_MESHES_TOKEN:string = \"numMeshes\";\r\n\tpublic static COMMENT_TOKEN:string = \"//\";\r\n\tpublic static JOINTS_TOKEN:string = \"joints\";\r\n\tpublic static MESH_TOKEN:string = \"mesh\";\r\n\r\n\tpublic static MESH_SHADER_TOKEN:string = \"shader\";\r\n\tpublic static MESH_NUM_VERTS_TOKEN:string = \"numverts\";\r\n\tpublic static MESH_VERT_TOKEN:string = \"vert\";\r\n\tpublic static MESH_NUM_TRIS_TOKEN:string = \"numtris\";\r\n\tpublic static MESH_TRI_TOKEN:string = \"tri\";\r\n\tpublic static MESH_NUM_WEIGHTS_TOKEN:string = \"numweights\";\r\n\tpublic static MESH_WEIGHT_TOKEN:string = \"weight\";\r\n\r\n\tprivate _parseIndex:number /*int*/ = 0;\r\n\tprivate _reachedEOF:boolean;\r\n\tprivate _line:number /*int*/ = 0;\r\n\tprivate _charLineIndex:number /*int*/ = 0;\r\n\tprivate _version:number /*int*/;\r\n\tprivate _numJoints:number /*int*/;\r\n\tprivate _numMeshes:number /*int*/;\r\n\r\n\tprivate _mesh:Mesh;\r\n\tprivate _shaders:Array<string>;\r\n\r\n\tprivate _maxJointCount:number /*int*/;\r\n\tprivate _meshData:Array<MeshData>;\r\n\tprivate _bindPoses:Array<Matrix3D>;\r\n\tprivate _geometry:Geometry;\r\n\r\n\tprivate _skeleton:Skeleton;\r\n\tprivate _animationSet:SkeletonAnimationSet;\r\n\r\n\tprivate _rotationQuat:Quaternion;\r\n\r\n\t/**\r\n\t * Creates a new MD5MeshParser object.\r\n\t */\r\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._rotationQuat = new Quaternion();\r\n\r\n\t\tthis._rotationQuat.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\r\n\r\n\t\tif (additionalRotationAxis) {\r\n\t\t\tvar quat:Quaternion = new Quaternion();\r\n\t\t\tquat.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\r\n\t\t\tthis._rotationQuat.multiply(this._rotationQuat, quat);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"md5mesh\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar token:string;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\tthis._startedParsing = true;\r\n\t\t}\r\n\r\n\t\twhile (this._pHasTime()) {\r\n\t\t\ttoken = this.getNextToken();\r\n\t\t\tswitch (token) {\r\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.VERSION_TOKEN:\r\n\t\t\t\t\tthis._version = this.getNextInt();\r\n\t\t\t\t\tif (this._version != 10)\r\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.COMMAND_LINE_TOKEN:\r\n\t\t\t\t\tthis.parseCMD();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.NUM_JOINTS_TOKEN:\r\n\t\t\t\t\tthis._numJoints = this.getNextInt();\r\n\t\t\t\t\tthis._bindPoses = new Array<Matrix3D>(this._numJoints);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.NUM_MESHES_TOKEN:\r\n\t\t\t\t\tthis._numMeshes = this.getNextInt();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.JOINTS_TOKEN:\r\n\t\t\t\t\tthis.parseJoints();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_TOKEN:\r\n\t\t\t\t\tthis.parseMesh();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (!this._reachedEOF)\r\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._reachedEOF) {\r\n\t\t\t\tthis.calculateMaxJointCount();\r\n\t\t\t\tthis._animationSet = new SkeletonAnimationSet(this._maxJointCount);\r\n\r\n\t\t\t\tthis._mesh = new Mesh(new Geometry(), null);\r\n\t\t\t\tthis._geometry = this._mesh.geometry;\r\n\r\n\t\t\t\tfor (var i:number /*int*/ = 0; i < this._meshData.length; ++i)\r\n\t\t\t\t\tthis._geometry.addSubGeometry(this.translateGeom(this._meshData[i].vertexData, this._meshData[i].weightData, this._meshData[i].indices));\r\n\r\n\t\t\t\t//_geometry.animation = _animation;\r\n\t\t\t\t//\t\t\t\t\t_mesh.animationController = _animationController;\r\n\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(this._geometry);\r\n\t\t\t\tthis._pFinalizeAsset(this._mesh);\r\n\t\t\t\tthis._pFinalizeAsset(this._skeleton);\r\n\t\t\t\tthis._pFinalizeAsset(this._animationSet);\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate calculateMaxJointCount():void\r\n\t{\r\n\t\tthis._maxJointCount = 0;\r\n\r\n\t\tvar numMeshData:number /*int*/ = this._meshData.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < numMeshData; ++i) {\r\n\t\t\tvar meshData:MeshData = this._meshData[i];\r\n\t\t\tvar vertexData:Array<VertexData> = meshData.vertexData;\r\n\t\t\tvar numVerts:number /*int*/ = vertexData.length;\r\n\r\n\t\t\tfor (var j:number /*int*/ = 0; j < numVerts; ++j) {\r\n\t\t\t\tvar zeroWeights:number /*int*/ = this.countZeroWeightJoints(vertexData[j], meshData.weightData);\r\n\t\t\t\tvar totalJoints:number /*int*/ = vertexData[j].countWeight - zeroWeights;\r\n\t\t\t\tif (totalJoints > this._maxJointCount)\r\n\t\t\t\t\tthis._maxJointCount = totalJoints;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate countZeroWeightJoints(vertex:VertexData, weights:Array<JointData>):number /*int*/\r\n\t{\r\n\t\tvar start:number /*int*/ = vertex.startWeight;\r\n\t\tvar end:number /*int*/ = vertex.startWeight + vertex.countWeight;\r\n\t\tvar count:number /*int*/ = 0;\r\n\t\tvar weight:number;\r\n\r\n\t\tfor (var i:number /*int*/ = start; i < end; ++i) {\r\n\t\t\tweight = weights[i].bias;\r\n\t\t\tif (weight == 0)\r\n\t\t\t\t++count;\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the skeleton's joints.\r\n\t */\r\n\tprivate parseJoints():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar joint:SkeletonJoint;\r\n\t\tvar pos:Vector3D;\r\n\t\tvar quat:Quaternion;\r\n\t\tvar i:number /*int*/ = 0;\r\n\t\tvar token:string = this.getNextToken();\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tthis._skeleton = new Skeleton();\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tjoint = new SkeletonJoint();\r\n\t\t\tjoint.name = this.parseLiteralstring();\r\n\t\t\tjoint.parentIndex = this.getNextInt();\r\n\t\t\tpos = this.parseVector3D();\r\n\t\t\tpos = this._rotationQuat.rotatePoint(pos);\r\n\t\t\tquat = this.parseQuaternion();\r\n\r\n\t\t\t// todo: check if this is correct, or maybe we want to actually store it as quats?\r\n\t\t\tthis._bindPoses[i] = quat.toMatrix3D();\r\n\t\t\tthis._bindPoses[i].appendTranslation(pos.x, pos.y, pos.z);\r\n\t\t\tvar inv:Matrix3D = this._bindPoses[i].clone();\r\n\t\t\tinv.invert();\r\n\t\t\tjoint.inverseBindPose = inv.rawData;\r\n\r\n\t\t\tthis._skeleton.joints[i++] = joint;\r\n\r\n\t\t\tch = this.getNextChar();\r\n\r\n\t\t\tif (ch == \"/\") {\r\n\t\t\t\tthis.putBack();\r\n\t\t\t\tch = this.getNextToken();\r\n\t\t\t\tif (ch == MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\tch = this.getNextChar();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (ch != \"}\")\r\n\t\t\t\tthis.putBack();\r\n\t\t} while (ch != \"}\");\r\n\t}\r\n\r\n\t/**\r\n\t * Puts back the last read character into the data stream.\r\n\t */\r\n\tprivate putBack():void\r\n\t{\r\n\t\tthis._parseIndex--;\r\n\t\tthis._charLineIndex--;\r\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the mesh geometry.\r\n\t */\r\n\tprivate parseMesh():void\r\n\t{\r\n\t\tvar token:string = this.getNextToken();\r\n\t\tvar ch:string;\r\n\t\tvar vertexData:Array<VertexData>;\r\n\t\tvar weights:Array<JointData>;\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\r\n\t\tif (token != \"{\")\r\n\t\t\tthis.sendUnknownKeywordError();\r\n\r\n\t\tif (this._shaders == null)\r\n\t\t\tthis._shaders = new Array<string>();\r\n\r\n\t\twhile (ch != \"}\") {\r\n\t\t\tch = this.getNextToken();\r\n\t\t\tswitch (ch) {\r\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\r\n\t\t\t\t\tthis.ignoreLine();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_SHADER_TOKEN:\r\n\t\t\t\t\tthis._shaders.push(this.parseLiteralstring());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_VERTS_TOKEN:\r\n\t\t\t\t\tvertexData = new Array<VertexData>(this.getNextInt());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_TRIS_TOKEN:\r\n\t\t\t\t\tindices = new Array<number>(this.getNextInt()*3) /*uint*/;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_NUM_WEIGHTS_TOKEN:\r\n\t\t\t\t\tweights = new Array<JointData>(this.getNextInt());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_VERT_TOKEN:\r\n\t\t\t\t\tthis.parseVertex(vertexData);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_TRI_TOKEN:\r\n\t\t\t\t\tthis.parseTri(indices);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase MD5MeshParser.MESH_WEIGHT_TOKEN:\r\n\t\t\t\t\tthis.parseJoint(weights);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._meshData == null)\r\n\t\t\tthis._meshData = new Array<MeshData>();\r\n\r\n\t\tvar i:number /*uint*/ = this._meshData.length;\r\n\t\tthis._meshData[i] = new MeshData();\r\n\t\tthis._meshData[i].vertexData = vertexData;\r\n\t\tthis._meshData[i].weightData = weights;\r\n\t\tthis._meshData[i].indices = indices;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the mesh data to a SkinnedSub instance.\r\n\t * @param vertexData The mesh's vertices.\r\n\t * @param weights The joint weights per vertex.\r\n\t * @param indices The indices for the faces.\r\n\t * @return A SubGeometry instance containing all geometrical data for the current mesh.\r\n\t */\r\n\tprivate translateGeom(vertexData:Array<VertexData>, weights:Array<JointData>, indices:Array<number> /*uint*/):TriangleSubGeometry\r\n\t{\r\n\t\tvar len:number /*int*/ = vertexData.length;\r\n\t\tvar v1:number /*int*/, v2:number /*int*/, v3:number /*int*/;\r\n\t\tvar vertex:VertexData;\r\n\t\tvar weight:JointData;\r\n\t\tvar bindPose:Matrix3D;\r\n\t\tvar pos:Vector3D;\r\n\t\tvar subGeom:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\tvar uvs:Array<number> = new Array<number>(len*2);\r\n\t\tvar vertices:Array<number> = new Array<number>(len*3);\r\n\t\tvar jointIndices:Array<number> = new Array<number>(len*this._maxJointCount);\r\n\t\tvar jointWeights:Array<number> = new Array<number>(len*this._maxJointCount);\r\n\t\tvar l:number /*int*/ = 0;\r\n\t\tvar nonZeroWeights:number /*int*/;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i) {\r\n\t\t\tvertex = vertexData[i];\r\n\t\t\tv1 = vertex.index*3;\r\n\t\t\tv2 = v1 + 1;\r\n\t\t\tv3 = v1 + 2;\r\n\t\t\tvertices[v1] = vertices[v2] = vertices[v3] = 0;\r\n\r\n\t\t\tnonZeroWeights = 0;\r\n\t\t\tfor (var j:number /*int*/ = 0; j < vertex.countWeight; ++j) {\r\n\t\t\t\tweight = weights[vertex.startWeight + j];\r\n\t\t\t\tif (weight.bias > 0) {\r\n\t\t\t\t\tbindPose = this._bindPoses[weight.joint];\r\n\t\t\t\t\tpos = bindPose.transformVector(weight.pos);\r\n\t\t\t\t\tvertices[v1] += pos.x*weight.bias;\r\n\t\t\t\t\tvertices[v2] += pos.y*weight.bias;\r\n\t\t\t\t\tvertices[v3] += pos.z*weight.bias;\r\n\r\n\t\t\t\t\t// indices need to be multiplied by 3 (amount of matrix registers)\r\n\t\t\t\t\tjointIndices[l] = weight.joint*3;\r\n\t\t\t\t\tjointWeights[l++] = weight.bias;\r\n\t\t\t\t\t++nonZeroWeights;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = nonZeroWeights; j < this._maxJointCount; ++j) {\r\n\t\t\t\tjointIndices[l] = 0;\r\n\t\t\t\tjointWeights[l++] = 0;\r\n\t\t\t}\r\n\r\n\t\t\tv1 = vertex.index << 1;\r\n\t\t\tuvs[v1++] = vertex.s;\r\n\t\t\tuvs[v1] = vertex.t;\r\n\t\t}\r\n\r\n\t\tsubGeom.jointsPerVertex = this._maxJointCount;\r\n\t\tsubGeom.setIndices(indices);\r\n\t\tsubGeom.setPositions(vertices);\r\n\t\tsubGeom.setUVs(uvs);\r\n\t\tsubGeom.setJointIndices(jointIndices);\r\n\t\tsubGeom.setJointWeights(jointWeights);\r\n\t\t// cause explicit updates\r\n\t\tsubGeom.setNormals(null);\r\n\t\tsubGeom.setTangents(null);\r\n\t\t// turn auto updates off because they may be animated and set explicitly\r\n\t\tsubGeom.autoDeriveTangents = false;\r\n\t\tsubGeom.autoDeriveNormals = false;\r\n\r\n\t\treturn subGeom;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve the next triplet of vertex indices that form a face.\r\n\t * @param indices The index list in which to store the read data.\r\n\t */\r\n\tprivate parseTri(indices:Array<number> /*uint*/):void\r\n\t{\r\n\t\tvar index:number /*int*/ = this.getNextInt()*3;\r\n\t\tindices[index] = this.getNextInt();\r\n\t\tindices[index + 1] = this.getNextInt();\r\n\t\tindices[index + 2] = this.getNextInt();\r\n\t}\r\n\r\n\t/**\r\n\t * Reads a new joint data set for a single joint.\r\n\t * @param weights the target list to contain the weight data.\r\n\t */\r\n\tprivate parseJoint(weights:Array<JointData>):void\r\n\t{\r\n\t\tvar weight:JointData = new JointData();\r\n\t\tweight.index = this.getNextInt();\r\n\t\tweight.joint = this.getNextInt();\r\n\t\tweight.bias = this.getNextNumber();\r\n\t\tweight.pos = this.parseVector3D();\r\n\t\tweights[weight.index] = weight;\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the data for a single vertex.\r\n\t * @param vertexData The list to contain the vertex data.\r\n\t */\r\n\tprivate parseVertex(vertexData:Array<VertexData>):void\r\n\t{\r\n\t\tvar vertex:VertexData = new VertexData();\r\n\t\tvertex.index = this.getNextInt();\r\n\t\tthis.parseUV(vertex);\r\n\t\tvertex.startWeight = this.getNextInt();\r\n\t\tvertex.countWeight = this.getNextInt();\r\n\t\t//\t\t\tif (vertex.countWeight > _maxJointCount) _maxJointCount = vertex.countWeight;\r\n\t\tvertexData[vertex.index] = vertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next uv coordinate.\r\n\t * @param vertexData The vertexData to contain the UV coordinates.\r\n\t */\r\n\tprivate parseUV(vertexData:VertexData):void\r\n\t{\r\n\t\tvar ch:string = this.getNextToken();\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvertexData.s = this.getNextNumber();\r\n\t\tvertexData.t = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the next token in the data stream.\r\n\t */\r\n\tprivate getNextToken():string\r\n\t{\r\n\t\tvar ch:string;\r\n\t\tvar token:string = \"\";\r\n\r\n\t\twhile (!this._reachedEOF) {\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\r\n\t\t\t\tif (token != MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\t\tthis.skipWhiteSpace();\r\n\t\t\t\tif (token != \"\")\r\n\t\t\t\t\treturn token;\r\n\t\t\t} else\r\n\t\t\t\ttoken += ch;\r\n\r\n\t\t\tif (token == MD5MeshParser.COMMENT_TOKEN)\r\n\t\t\t\treturn token;\r\n\t\t}\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Skips all whitespace in the data stream.\r\n\t */\r\n\tprivate skipWhiteSpace():void\r\n\t{\r\n\t\tvar ch:string;\r\n\r\n\t\tdo\r\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\r\n\r\n\t\tthis.putBack();\r\n\t}\r\n\r\n\t/**\r\n\t * Skips to the next line.\r\n\t */\r\n\tprivate ignoreLine():void\r\n\t{\r\n\t\tvar ch:string;\r\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\r\n\t\t\tch = this.getNextChar();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next single character in the data stream.\r\n\t */\r\n\tprivate getNextChar():string\r\n\t{\r\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\r\n\r\n\t\tif (ch == \"\\n\") {\r\n\t\t\t++this._line;\r\n\t\t\tthis._charLineIndex = 0;\r\n\t\t} else if (ch != \"\\r\")\r\n\t\t\t++this._charLineIndex;\r\n\r\n\t\tif (this._parseIndex >= this._textData.length)\r\n\t\t\tthis._reachedEOF = true;\r\n\r\n\t\treturn ch;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next integer in the data stream.\r\n\t */\r\n\tprivate getNextInt():number /*int*/\r\n\t{\r\n\t\tvar i:number = parseInt(this.getNextToken());\r\n\t\tif (isNaN(i))\r\n\t\t\tthis.sendParseError(\"int type\");\r\n\t\treturn i;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next floating point number in the data stream.\r\n\t */\r\n\tprivate getNextNumber():number\r\n\t{\r\n\t\tvar f:number = parseFloat(this.getNextToken());\r\n\t\tif (isNaN(f))\r\n\t\t\tthis.sendParseError(\"float type\");\r\n\t\treturn f;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next 3d vector in the data stream.\r\n\t */\r\n\tprivate parseVector3D():Vector3D\r\n\t{\r\n\t\tvar vec:Vector3D = new Vector3D();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tvec.x = -this.getNextNumber();\r\n\t\tvec.y = this.getNextNumber();\r\n\t\tvec.z = this.getNextNumber();\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next quaternion in the data stream.\r\n\t */\r\n\tprivate parseQuaternion():Quaternion\r\n\t{\r\n\t\tvar quat:Quaternion = new Quaternion();\r\n\t\tvar ch:string = this.getNextToken();\r\n\r\n\t\tif (ch != \"(\")\r\n\t\t\tthis.sendParseError(\"(\");\r\n\t\tquat.x = this.getNextNumber();\r\n\t\tquat.y = -this.getNextNumber();\r\n\t\tquat.z = -this.getNextNumber();\r\n\r\n\t\t// quat supposed to be unit length\r\n\t\tvar t:number = 1 - quat.x*quat.x - quat.y*quat.y - quat.z*quat.z;\r\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\r\n\r\n\t\tif (this.getNextToken() != \")\")\r\n\t\t\tthis.sendParseError(\")\");\r\n\r\n\t\tvar rotQuat:Quaternion = new Quaternion();\r\n\t\trotQuat.multiply(this._rotationQuat, quat);\r\n\t\treturn rotQuat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the command line data.\r\n\t */\r\n\tprivate parseCMD():void\r\n\t{\r\n\t\t// just ignore the command line property\r\n\t\tthis.parseLiteralstring();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\r\n\t * by double quotes.\r\n\t */\r\n\tprivate parseLiteralstring():string\r\n\t{\r\n\t\tthis.skipWhiteSpace();\r\n\r\n\t\tvar ch:string = this.getNextChar();\r\n\t\tvar str:string = \"\";\r\n\r\n\t\tif (ch != \"\\\"\")\r\n\t\t\tthis.sendParseError(\"\\\"\");\r\n\r\n\t\tdo {\r\n\t\t\tif (this._reachedEOF)\r\n\t\t\t\tthis.sendEOFError();\r\n\t\t\tch = this.getNextChar();\r\n\t\t\tif (ch != \"\\\"\")\r\n\t\t\t\tstr += ch;\r\n\t\t} while (ch != \"\\\"\");\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an end-of-file error when a premature end of file was encountered.\r\n\t */\r\n\tprivate sendEOFError():void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected end of file\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unexpected token was encountered.\r\n\t * @param expected The token type that was actually expected.\r\n\t */\r\n\tprivate sendParseError(expected:string):void\r\n\t{\r\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\r\n\t}\r\n\r\n\t/**\r\n\t * Throws an error when an unknown keyword was encountered.\r\n\t */\r\n\tprivate sendUnknownKeywordError():void\r\n\t{\r\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\r\n\t}\r\n}\r\n\r\nexport = MD5MeshParser;\r\n\r\n\r\nclass VertexData\r\n{\r\n\tpublic index:number /*int*/;\r\n\tpublic s:number;\r\n\tpublic t:number;\r\n\tpublic startWeight:number /*int*/;\r\n\tpublic countWeight:number /*int*/;\r\n}\r\n\r\nclass JointData\r\n{\r\n\tpublic index:number /*int*/;\r\n\tpublic joint:number /*int*/;\r\n\tpublic bias:number;\r\n\tpublic pos:Vector3D;\r\n}\r\n\r\nclass MeshData\r\n{\r\n\tpublic vertexData:Array<VertexData>;\r\n\tpublic weightData:Array<JointData>;\r\n\tpublic indices:Array<number> /*uint*/;\r\n}",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\n\r\n/**\r\n * Max3DSParser provides a parser for the 3ds data type.\r\n */\r\nclass Max3DSParser extends ParserBase\r\n{\r\n\tprivate _byteData:ByteArray;\r\n\r\n\tprivate _textures:Object;\r\n\tprivate _materials:Object;\r\n\tprivate _unfinalized_objects:Object;\r\n\r\n\tprivate _cur_obj_end:number;\r\n\tprivate _cur_obj:ObjectVO;\r\n\r\n\tprivate _cur_mat_end:number;\r\n\tprivate _cur_mat:MaterialVO;\r\n\tprivate _useSmoothingGroups:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>Max3DSParser</code> object.\r\n\t *\r\n\t * @param useSmoothingGroups Determines whether the parser looks for smoothing groups in the 3ds file or assumes uniform smoothing. Defaults to true.\r\n\t */\r\n\tconstructor(useSmoothingGroups:boolean = true)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\r\n\r\n\t\tthis._useSmoothingGroups = useSmoothingGroups;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"3ds\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\tvar ba:ByteArray;\r\n\r\n\t\tba = ParserUtils.toByteArray(data);\r\n\t\tif (ba) {\r\n\t\t\tba.position = 0;\r\n\t\t\tif (ba.readShort() == 0x4d4d)\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\tif (resourceDependency.assets.length == 1) {\r\n\t\t\tvar asset:IAsset;\r\n\r\n\t\t\tasset = resourceDependency.assets[0];\r\n\t\t\tif (asset.isAsset(BitmapImage2D)) {\r\n\t\t\t\tvar tex:TextureVO;\r\n\r\n\t\t\t\ttex = this._textures[resourceDependency.id];\r\n\t\t\t\ttex.texture = new Single2DTexture(<BitmapImage2D> asset);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\t// TODO: Implement\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (!this._byteData) {\r\n\t\t\tthis._byteData = this._pGetByteData();\r\n\t\t\tthis._byteData.position = 0;\r\n\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\r\n\t\t\t//----------------------------------------------------------------------------\r\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;// Should be default\r\n\t\t\t//----------------------------------------------------------------------------\r\n\r\n\t\t\tthis._textures = {};\r\n\t\t\tthis._materials = {};\r\n\t\t\tthis._unfinalized_objects = {};\r\n\t\t}\r\n\r\n\t\t// TODO: With this construct, the loop will run no-op for as long\r\n\t\t// as there is time once file has finished reading. Consider a nice\r\n\t\t// way to stop loop when byte array is empty, without putting it in\r\n\t\t// the while-conditional, which will prevent finalizations from\r\n\t\t// happening after the last chunk.\r\n\t\twhile (this._pHasTime()) {\r\n\r\n\t\t\t// If we are currently working on an object, and the most recent chunk was\r\n\t\t\t// the last one in that object, finalize the current object.\r\n\t\t\tif (this._cur_mat && this._byteData.position >= this._cur_mat_end)\r\n\t\t\t\tthis.finalizeCurrentMaterial();\r\n\t\t\telse if (this._cur_obj && this._byteData.position >= this._cur_obj_end) {\r\n\t\t\t\t// Can't finalize at this point, because we have to wait until the full\r\n\t\t\t\t// animation section has been parsed for any potential pivot definitions\r\n\t\t\t\tthis._unfinalized_objects[this._cur_obj.name] = this._cur_obj;\r\n\t\t\t\tthis._cur_obj_end = Number.MAX_VALUE /*uint*/;\r\n\t\t\t\tthis._cur_obj = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._byteData.getBytesAvailable() > 0) {\r\n\t\t\t\tvar cid:number /*uint*/;\r\n\t\t\t\tvar len:number /*uint*/;\r\n\t\t\t\tvar end:number /*uint*/;\r\n\r\n\t\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\t\tlen = this._byteData.readUnsignedInt();\r\n\t\t\t\tend = this._byteData.position + (len - 6);\r\n\r\n\t\t\t\tswitch (cid) {\r\n\t\t\t\t\tcase 0x4D4D: // MAIN3DS\r\n\t\t\t\t\tcase 0x3D3D: // EDIT3DS\r\n\t\t\t\t\tcase 0xB000: // KEYF3DS\r\n\t\t\t\t\t\t// This types are \"container chunks\" and contain only\r\n\t\t\t\t\t\t// sub-chunks (no data on their own.) This means that\r\n\t\t\t\t\t\t// there is nothing more to parse at this point, and\r\n\t\t\t\t\t\t// instead we should progress to the next chunk, which\r\n\t\t\t\t\t\t// will be the first sub-chunk of this one.\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0xAFFF: // MATERIAL\r\n\t\t\t\t\t\tthis._cur_mat_end = end;\r\n\t\t\t\t\t\tthis._cur_mat = this.parseMaterial();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4000: // EDIT_OBJECT\r\n\t\t\t\t\t\tthis._cur_obj_end = end;\r\n\t\t\t\t\t\tthis._cur_obj = new ObjectVO();\r\n\t\t\t\t\t\tthis._cur_obj.name = this.readNulTermstring();\r\n\t\t\t\t\t\tthis._cur_obj.materials = new Array<string>();\r\n\t\t\t\t\t\tthis._cur_obj.materialFaces = {};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4100: // OBJ_TRIMESH\r\n\t\t\t\t\t\tthis._cur_obj.type = Mesh.assetType;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4110: // TRI_VERTEXL\r\n\t\t\t\t\t\tthis.parseVertexList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4120: // TRI_FACELIST\r\n\t\t\t\t\t\tthis.parseFaceList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4140: // TRI_MAPPINGCOORDS\r\n\t\t\t\t\t\tthis.parseUVList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4130: // Face materials\r\n\t\t\t\t\t\tthis.parseFaceMaterialList();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4160: // Transform\r\n\t\t\t\t\t\tthis._cur_obj.transform = this.readTransform();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0xB002: // Object animation (including pivot)\r\n\t\t\t\t\t\tthis.parseObjectAnimation(end);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 0x4150: // Smoothing groups\r\n\t\t\t\t\t\tthis.parseSmoothingGroups();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// Skip this (unknown) chunk\r\n\t\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Pause parsing if there were any dependencies found during this\r\n\t\t\t\t// iteration (i.e. if there are any dependencies that need to be\r\n\t\t\t\t// retrieved at this time.)\r\n\t\t\t\tif (this.dependencies.length) {\r\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// More parsing is required if the entire byte array has not yet\r\n\t\t// been read, or if there is a currently non-finalized object in\r\n\t\t// the pipeline.\r\n\t\tif (this._byteData.getBytesAvailable() || this._cur_obj || this._cur_mat) {\r\n\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t} else {\r\n\t\t\tvar name:string;\r\n\r\n\t\t\t// Finalize any remaining objects before ending.\r\n\t\t\tfor (name in this._unfinalized_objects) {\r\n\t\t\t\tvar obj:DisplayObjectContainer;\r\n\t\t\t\tobj = this.constructObject(this._unfinalized_objects[name]);\r\n\t\t\t\tif (obj) {\r\n\t\t\t\t\t//add to the content property\r\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(obj, name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\tprivate parseMaterial():MaterialVO\r\n\t{\r\n\t\tvar mat:MaterialVO;\r\n\r\n\t\tmat = new MaterialVO();\r\n\r\n\t\twhile (this._byteData.position < this._cur_mat_end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\t\t\tvar end:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\t\t\tend = this._byteData.position + (len - 6);\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xA000: // Material name\r\n\t\t\t\t\tmat.name = this.readNulTermstring();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA010: // Ambient color\r\n\t\t\t\t\tmat.ambientColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA020: // Diffuse color\r\n\t\t\t\t\tmat.diffuseColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA030: // Specular color\r\n\t\t\t\t\tmat.specularColor = this.readColor();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA081: // Two-sided, existence indicates \"true\"\r\n\t\t\t\t\tmat.twoSided = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA200: // Main (color) texture\r\n\t\t\t\t\tmat.colorMap = this.parseTexture(end);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xA204: // Specular map\r\n\t\t\t\t\tmat.specularMap = this.parseTexture(end);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._byteData.position = end;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn mat;\r\n\t}\r\n\r\n\tprivate parseTexture(end:number /*uint*/):TextureVO\r\n\t{\r\n\t\tvar tex:TextureVO;\r\n\r\n\t\ttex = new TextureVO();\r\n\r\n\t\twhile (this._byteData.position < end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xA300:\r\n\t\t\t\t\ttex.url = this.readNulTermstring();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// Skip this unknown texture sub-chunk\r\n\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._textures[tex.url] = tex;\r\n\t\tthis._pAddDependency(tex.url, new URLRequest(tex.url));\r\n\r\n\t\treturn tex;\r\n\t}\r\n\r\n\tprivate parseVertexList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.verts = new Array<number>(count*3);\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.verts.length;\r\n\t\twhile (i < len) {\r\n\t\t\tvar x:number, y:number, z:number;\r\n\r\n\t\t\tx = this._byteData.readFloat();\r\n\t\t\ty = this._byteData.readFloat();\r\n\t\t\tz = this._byteData.readFloat();\r\n\r\n\t\t\tthis._cur_obj.verts[i++] = x;\r\n\t\t\tthis._cur_obj.verts[i++] = z;\r\n\t\t\tthis._cur_obj.verts[i++] = y;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseFaceList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.indices = new Array<number>(count*3) /*uint*/;\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.indices.length;\r\n\t\twhile (i < len) {\r\n\t\t\tvar i0:number /*uint*/, i1:number /*uint*/, i2:number /*uint*/;\r\n\r\n\t\t\ti0 = this._byteData.readUnsignedShort();\r\n\t\t\ti1 = this._byteData.readUnsignedShort();\r\n\t\t\ti2 = this._byteData.readUnsignedShort();\r\n\r\n\t\t\tthis._cur_obj.indices[i++] = i0;\r\n\t\t\tthis._cur_obj.indices[i++] = i2;\r\n\t\t\tthis._cur_obj.indices[i++] = i1;\r\n\r\n\t\t\t// Skip \"face info\", irrelevant in Away3D\r\n\t\t\tthis._byteData.position += 2;\r\n\t\t}\r\n\r\n\t\tthis._cur_obj.smoothingGroups = new Array<number>(count) /*uint*/;\r\n\t}\r\n\r\n\tprivate parseSmoothingGroups():void\r\n\t{\r\n\t\tvar len:number /*uint*/ = this._cur_obj.indices.length/3;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\t\twhile (i < len) {\r\n\t\t\tthis._cur_obj.smoothingGroups[i] = this._byteData.readUnsignedInt();\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseUVList():void\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar count:number /*uint*/;\r\n\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\t\tthis._cur_obj.uvs = new Array<number>(count*2);\r\n\r\n\t\ti = 0;\r\n\t\tlen = this._cur_obj.uvs.length;\r\n\t\twhile (i < len) {\r\n\t\t\tthis._cur_obj.uvs[i++] = this._byteData.readFloat();\r\n\t\t\tthis._cur_obj.uvs[i++] = 1.0 - this._byteData.readFloat();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseFaceMaterialList():void\r\n\t{\r\n\t\tvar mat:string;\r\n\t\tvar count:number /*uint*/;\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar faces:Array<number> /*uint*/;\r\n\r\n\t\tmat = this.readNulTermstring();\r\n\t\tcount = this._byteData.readUnsignedShort();\r\n\r\n\t\tfaces = new Array<number>(count) /*uint*/;\r\n\t\ti = 0;\r\n\t\twhile (i < faces.length)\r\n\t\t\tfaces[i++] = this._byteData.readUnsignedShort();\r\n\r\n\t\tthis._cur_obj.materials.push(mat);\r\n\t\tthis._cur_obj.materialFaces[mat] = faces;\r\n\t}\r\n\r\n\tprivate parseObjectAnimation(end:number):void\r\n\t{\r\n\t\tvar vo:ObjectVO;\r\n\t\tvar obj:DisplayObjectContainer;\r\n\t\tvar pivot:Vector3D;\r\n\t\tvar name:string;\r\n\t\tvar hier:number /*uint*/;\r\n\r\n\t\t// Pivot defaults to origin\r\n\t\tpivot = new Vector3D;\r\n\r\n\t\twhile (this._byteData.position < end) {\r\n\t\t\tvar cid:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\r\n\t\t\tcid = this._byteData.readUnsignedShort();\r\n\t\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\t\tswitch (cid) {\r\n\t\t\t\tcase 0xb010: // Name/hierarchy\r\n\t\t\t\t\tname = this.readNulTermstring();\r\n\t\t\t\t\tthis._byteData.position += 4;\r\n\t\t\t\t\thier = this._byteData.readShort();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0xb013: // Pivot\r\n\t\t\t\t\tpivot.x = this._byteData.readFloat();\r\n\t\t\t\t\tpivot.z = this._byteData.readFloat();\r\n\t\t\t\t\tpivot.y = this._byteData.readFloat();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If name is \"$$$DUMMY\" this is an empty object (e.g. a container)\r\n\t\t// and will be ignored in this version of the parser\r\n\t\t// TODO: Implement containers in 3DS parser.\r\n\t\tif (name != '$$$DUMMY' && this._unfinalized_objects.hasOwnProperty(name)) {\r\n\t\t\tvo = this._unfinalized_objects[name];\r\n\t\t\tobj = this.constructObject(vo, pivot);\r\n\r\n\t\t\tif (obj) {\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(obj, vo.name);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tdelete this._unfinalized_objects[name];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate constructObject(obj:ObjectVO, pivot:Vector3D = null):DisplayObjectContainer\r\n\t{\r\n\t\tif (obj.type == Mesh.assetType) {\r\n\t\t\tvar i:number /*uint*/;\r\n\t\t\tvar sub:TriangleSubGeometry;\r\n\t\t\tvar geom:Geometry;\r\n\t\t\tvar mat:MaterialBase;\r\n\t\t\tvar mesh:Mesh;\r\n\t\t\tvar mtx:Matrix3D;\r\n\t\t\tvar vertices:Array<VertexVO>;\r\n\t\t\tvar faces:Array<FaceVO>;\r\n\r\n\t\t\tif (obj.materials.length > 1)\r\n\t\t\t\tconsole.log(\"The Away3D 3DS parser does not support multiple materials per mesh at this point.\");\r\n\r\n\t\t\t// Ignore empty objects\r\n\t\t\tif (!obj.indices || obj.indices.length == 0)\r\n\t\t\t\treturn null;\r\n\r\n\t\t\tvertices = new Array<VertexVO>(obj.verts.length/3);\r\n\t\t\tfaces = new Array<FaceVO>(obj.indices.length/3);\r\n\r\n\t\t\tthis.prepareData(vertices, faces, obj);\r\n\r\n\t\t\tif (this._useSmoothingGroups)\r\n\t\t\t\tthis.applySmoothGroups(vertices, faces);\r\n\r\n\t\t\tobj.verts = new Array<number>(vertices.length*3);\r\n\t\t\tfor (i = 0; i < vertices.length; i++) {\r\n\t\t\t\tobj.verts[i*3] = vertices[i].x;\r\n\t\t\t\tobj.verts[i*3 + 1] = vertices[i].y;\r\n\t\t\t\tobj.verts[i*3 + 2] = vertices[i].z;\r\n\t\t\t}\r\n\t\t\tobj.indices = new Array<number>(faces.length*3) /*uint*/;\r\n\r\n\t\t\tfor (i = 0; i < faces.length; i++) {\r\n\t\t\t\tobj.indices[i*3] = faces[i].a;\r\n\t\t\t\tobj.indices[i*3 + 1] = faces[i].b;\r\n\t\t\t\tobj.indices[i*3 + 2] = faces[i].c;\r\n\t\t\t}\r\n\r\n\t\t\tif (obj.uvs) {\r\n\t\t\t\t// If the object had UVs to start with, use UVs generated by\r\n\t\t\t\t// smoothing group splitting algorithm. Otherwise those UVs\r\n\t\t\t\t// will be nonsense and should be skipped.\r\n\t\t\t\tobj.uvs = new Array<number>(vertices.length*2);\r\n\t\t\t\tfor (i = 0; i < vertices.length; i++) {\r\n\t\t\t\t\tobj.uvs[i*2] = vertices[i].u;\r\n\t\t\t\t\tobj.uvs[i*2 + 1] = vertices[i].v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tgeom = new Geometry();\r\n\r\n\t\t\t// Construct sub-geometries (potentially splitting buffers)\r\n\t\t\t// and add them to geometry.\r\n\t\t\tsub = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\tsub.setIndices(obj.indices);\r\n\t\t\tsub.setPositions(obj.verts);\r\n\t\t\tsub.setUVs(obj.uvs);\r\n\r\n\t\t\tgeom.addSubGeometry(sub);\r\n\r\n\t\t\tif (obj.materials.length > 0) {\r\n\t\t\t\tvar mname:string;\r\n\t\t\t\tmname = obj.materials[0];\r\n\t\t\t\tmat = this._materials[mname].material;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply pivot translation to geometry if a pivot was\r\n\t\t\t// found while parsing the keyframe chunk earlier.\r\n\t\t\tif (pivot) {\r\n\t\t\t\tif (obj.transform) {\r\n\t\t\t\t\t// If a transform was found while parsing the\r\n\t\t\t\t\t// object chunk, use it to find the local pivot vector\r\n\t\t\t\t\tvar dat:Array<number> = obj.transform.concat();\r\n\t\t\t\t\tdat[12] = 0;\r\n\t\t\t\t\tdat[13] = 0;\r\n\t\t\t\t\tdat[14] = 0;\r\n\t\t\t\t\tmtx = new Matrix3D(dat);\r\n\t\t\t\t\tpivot = mtx.transformVector(pivot);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpivot.scaleBy(-1);\r\n\r\n\t\t\t\tmtx = new Matrix3D();\r\n\t\t\t\tmtx.appendTranslation(pivot.x, pivot.y, pivot.z);\r\n\t\t\t\tgeom.applyTransformation(mtx);\r\n\t\t\t}\r\n\r\n\t\t\t// Apply transformation to geometry if a transformation\r\n\t\t\t// was found while parsing the object chunk earlier.\r\n\t\t\tif (obj.transform) {\r\n\t\t\t\tmtx = new Matrix3D(obj.transform);\r\n\t\t\t\tmtx.invert();\r\n\t\t\t\tgeom.applyTransformation(mtx);\r\n\t\t\t}\r\n\r\n\t\t\t// Final transform applied to geometry. Finalize the geometry,\r\n\t\t\t// which will no longer be modified after this point.\r\n\t\t\tthis._pFinalizeAsset(geom, obj.name.concat('_geom'));\r\n\r\n\t\t\t// Build mesh and return it\r\n\t\t\tmesh = new Mesh(geom, mat);\r\n\t\t\tmesh.transform.matrix3D = new Matrix3D(obj.transform);\r\n\t\t\treturn mesh;\r\n\t\t}\r\n\r\n\t\t// If reached, unknown\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate prepareData(vertices:Array<VertexVO>, faces:Array<FaceVO>, obj:ObjectVO):void\r\n\t{\r\n\t\t// convert raw ObjectVO's data to structured VertexVO and FaceVO\r\n\t\tvar i:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar k:number /*int*/;\r\n\t\tvar len:number /*int*/ = obj.verts.length;\r\n\t\tfor (i = 0, j = 0, k = 0; i < len;) {\r\n\t\t\tvar v:VertexVO = new VertexVO;\r\n\t\t\tv.x = obj.verts[i++];\r\n\t\t\tv.y = obj.verts[i++];\r\n\t\t\tv.z = obj.verts[i++];\r\n\t\t\tif (obj.uvs) {\r\n\t\t\t\tv.u = obj.uvs[j++];\r\n\t\t\t\tv.v = obj.uvs[j++];\r\n\t\t\t}\r\n\t\t\tvertices[k++] = v;\r\n\t\t}\r\n\t\tlen = obj.indices.length;\r\n\t\tfor (i = 0, k = 0; i < len;) {\r\n\t\t\tvar f:FaceVO = new FaceVO();\r\n\t\t\tf.a = obj.indices[i++];\r\n\t\t\tf.b = obj.indices[i++];\r\n\t\t\tf.c = obj.indices[i++];\r\n\t\t\tf.smoothGroup = obj.smoothingGroups[k] || 0;\r\n\t\t\tfaces[k++] = f;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate applySmoothGroups(vertices:Array<VertexVO>, faces:Array<FaceVO>):void\r\n\t{\r\n\t\t// clone vertices according to following rule:\r\n\t\t// clone if vertex's in faces from groups 1+2 and 3\r\n\t\t// don't clone if vertex's in faces from groups 1+2, 3 and 1+3\r\n\r\n\t\tvar i:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar k:number /*int*/;\r\n\t\tvar l:number /*int*/;\r\n\t\tvar len:number /*int*/;\r\n\t\tvar numVerts:number /*uint*/ = vertices.length;\r\n\t\tvar numFaces:number /*uint*/ = faces.length;\r\n\r\n\t\t// extract groups data for vertices\r\n\t\tvar vGroups:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\r\n\t\tfor (i = 0; i < numVerts; i++)\r\n\t\t\tvGroups[i] = new Array<number>() /*uint*/;\r\n\t\tfor (i = 0; i < numFaces; i++) {\r\n\t\t\tvar face:FaceVO = faces[i];\r\n\t\t\tfor (j = 0; j < 3; j++) {\r\n\t\t\t\tvar groups:Array<number> /*uint*/ = vGroups[(j == 0)? face.a : ((j == 1)? face.b : face.c)];\r\n\t\t\t\tvar group:number /*uint*/ = face.smoothGroup;\r\n\t\t\t\tfor (k = groups.length - 1; k >= 0; k--) {\r\n\t\t\t\t\tif ((group & groups[k]) > 0) {\r\n\t\t\t\t\t\tgroup |= groups[k];\r\n\t\t\t\t\t\tgroups.splice(k, 1);\r\n\t\t\t\t\t\tk = groups.length - 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tgroups.push(group);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// clone vertices\r\n\t\tvar vClones:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\r\n\t\tfor (i = 0; i < numVerts; i++) {\r\n\t\t\tif ((len = vGroups[i].length) < 1)\r\n\t\t\t\tcontinue;\r\n\t\t\tvar clones:Array<number> /*uint*/ = new Array<number>(len) /*uint*/;\r\n\t\t\tvClones[i] = clones;\r\n\t\t\tclones[0] = i;\r\n\t\t\tvar v0:VertexVO = vertices[i];\r\n\t\t\tfor (j = 1; j < len; j++) {\r\n\t\t\t\tvar v1:VertexVO = new VertexVO;\r\n\t\t\t\tv1.x = v0.x;\r\n\t\t\t\tv1.y = v0.y;\r\n\t\t\t\tv1.z = v0.z;\r\n\t\t\t\tv1.u = v0.u;\r\n\t\t\t\tv1.v = v0.v;\r\n\t\t\t\tclones[j] = vertices.length;\r\n\t\t\t\tvertices.push(v1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tnumVerts = vertices.length;\r\n\r\n\t\tfor (i = 0; i < numFaces; i++) {\r\n\t\t\tface = faces[i];\r\n\t\t\tgroup = face.smoothGroup;\r\n\t\t\tfor (j = 0; j < 3; j++) {\r\n\t\t\t\tk = (j == 0)? face.a : ((j == 1)? face.b : face.c);\r\n\t\t\t\tgroups = vGroups[k];\r\n\t\t\t\tlen = groups.length;\r\n\t\t\t\tclones = vClones[k];\r\n\t\t\t\tfor (l = 0; l < len; l++) {\r\n\t\t\t\t\tif (((group == 0) && (groups[l] == 0)) || ((group & groups[l]) > 0)) {\r\n\t\t\t\t\t\tvar index:number /*uint*/ = clones[l];\r\n\t\t\t\t\t\tif (group == 0) {\r\n\t\t\t\t\t\t\t// vertex is unique if no smoothGroup found\r\n\t\t\t\t\t\t\tgroups.splice(l, 1);\r\n\t\t\t\t\t\t\tclones.splice(l, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (j == 0)\r\n\t\t\t\t\t\t\tface.a = index; else if (j == 1)\r\n\t\t\t\t\t\t\tface.b = index; else\r\n\t\t\t\t\t\t\tface.c = index;\r\n\t\t\t\t\t\tl = len;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate finalizeCurrentMaterial():void\r\n\t{\r\n\t\tvar mat:MethodMaterial;\r\n\r\n\t\tif (this._cur_mat.colorMap)\r\n\t\t\tmat = new MethodMaterial(this._cur_mat.colorMap.texture || DefaultMaterialManager.getDefaultTexture());\r\n\t\telse\r\n\t\t\tmat = new MethodMaterial(this._cur_mat.ambientColor);\r\n\r\n\t\tmat.diffuseColor = this._cur_mat.diffuseColor;\r\n\t\tmat.specularColor = this._cur_mat.specularColor;\r\n\r\n\t\tif (this.materialMode >= 2)\r\n\t\t\tmat.mode = MethodMaterialMode.MULTI_PASS\r\n\r\n\t\tmat.bothSides = this._cur_mat.twoSided;\r\n\r\n\t\tthis._pFinalizeAsset(mat, this._cur_mat.name);\r\n\r\n\t\tthis._materials[this._cur_mat.name] = this._cur_mat;\r\n\t\tthis._cur_mat.material = mat;\r\n\r\n\t\tthis._cur_mat = null;\r\n\t}\r\n\r\n\tprivate readNulTermstring():string\r\n\t{\r\n\t\tvar chr:number /*int*/;\r\n\t\tvar str:string = \"\";\r\n\r\n\t\twhile ((chr = this._byteData.readUnsignedByte()) > 0)\r\n\t\t\tstr += String.fromCharCode(chr);\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\tprivate readTransform():Array<number>\r\n\t{\r\n\t\tvar data:Array<number>;\r\n\r\n\t\tdata = new Array<number>(16);\r\n\r\n\t\t// X axis\r\n\t\tdata[0] = this._byteData.readFloat(); // X\r\n\t\tdata[2] = this._byteData.readFloat(); // Z\r\n\t\tdata[1] = this._byteData.readFloat(); // Y\r\n\t\tdata[3] = 0;\r\n\r\n\t\t// Z axis\r\n\t\tdata[8] = this._byteData.readFloat(); // X\r\n\t\tdata[10] = this._byteData.readFloat(); // Z\r\n\t\tdata[9] = this._byteData.readFloat(); // Y\r\n\t\tdata[11] = 0;\r\n\r\n\t\t// Y Axis\r\n\t\tdata[4] = this._byteData.readFloat(); // X\r\n\t\tdata[6] = this._byteData.readFloat(); // Z\r\n\t\tdata[5] = this._byteData.readFloat(); // Y\r\n\t\tdata[7] = 0;\r\n\r\n\t\t// Translation\r\n\t\tdata[12] = this._byteData.readFloat(); // X\r\n\t\tdata[14] = this._byteData.readFloat(); // Z\r\n\t\tdata[13] = this._byteData.readFloat(); // Y\r\n\t\tdata[15] = 1;\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tprivate readColor():number /*int*/\r\n\t{\r\n\t\tvar cid:number /*int*/;\r\n\t\tvar len:number /*int*/;\r\n\t\tvar r:number /*int*/, g:number /*int*/, b:number /*int*/;\r\n\r\n\t\tcid = this._byteData.readUnsignedShort();\r\n\t\tlen = this._byteData.readUnsignedInt();\r\n\r\n\t\tswitch (cid) {\r\n\t\t\tcase 0x0010: // Floats\r\n\t\t\t\tr = this._byteData.readFloat()*255;\r\n\t\t\t\tg = this._byteData.readFloat()*255;\r\n\t\t\t\tb = this._byteData.readFloat()*255;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0x0011: // 24-bit color\r\n\t\t\t\tr = this._byteData.readUnsignedByte();\r\n\t\t\t\tg = this._byteData.readUnsignedByte();\r\n\t\t\t\tb = this._byteData.readUnsignedByte();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis._byteData.position += (len - 6);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn (r << 16) | (g << 8) | b;\r\n\t}\r\n}\r\n\r\nexport = Max3DSParser;\r\n\r\n/**\r\n *\r\n */\r\nclass FaceVO\r\n{\r\n\tpublic a:number /*int*/;\r\n\tpublic b:number /*int*/;\r\n\tpublic c:number /*int*/;\r\n\tpublic smoothGroup:number /*int*/;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass MaterialVO\r\n{\r\n\tpublic name:string;\r\n\tpublic ambientColor:number /*int*/;\r\n\tpublic diffuseColor:number /*int*/;\r\n\tpublic specularColor:number /*int*/;\r\n\tpublic twoSided:boolean;\r\n\tpublic colorMap:TextureVO;\r\n\tpublic specularMap:TextureVO;\r\n\tpublic material:MaterialBase;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass ObjectVO\r\n{\r\n\tpublic name:string;\r\n\tpublic type:string;\r\n\tpublic pivotX:number;\r\n\tpublic pivotY:number;\r\n\tpublic pivotZ:number;\r\n\tpublic transform:Array<number>;\r\n\tpublic verts:Array<number>;\r\n\tpublic indices:Array<number> /*int*/;\r\n\tpublic uvs:Array<number>;\r\n\tpublic materialFaces:Object;\r\n\tpublic materials:Array<string>;\r\n\tpublic smoothingGroups:Array<number> /*int*/;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass TextureVO\r\n{\r\n\tpublic url:string;\r\n\tpublic texture:Single2DTexture;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass VertexVO\r\n{\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n\tpublic z:number;\r\n\tpublic u:number;\r\n\tpublic v:number;\r\n\tpublic normal:Vector3D;\r\n\tpublic tangent:Vector3D;\r\n}",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\n\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport Single2DTexture\t\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\r\n\r\n/**\r\n * OBJParser provides a parser for the OBJ data type.\r\n */\r\nclass OBJParser extends ParserBase\r\n{\r\n\tprivate _textData:string;\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _charIndex:number;\r\n\tprivate _oldIndex:number;\r\n\tprivate _stringLength:number;\r\n\tprivate _currentObject:ObjectGroup;\r\n\tprivate _currentGroup:Group;\r\n\tprivate _currentMaterialGroup:MaterialGroup;\r\n\tprivate _objects:Array<ObjectGroup>;\r\n\tprivate _materialIDs:string[];\r\n\tprivate _materialLoaded:Array<LoadedMaterial>;\r\n\tprivate _materialSpecularData:Array<SpecularData>;\r\n\tprivate _meshes:Array<Mesh>;\r\n\tprivate _lastMtlID:string;\r\n\tprivate _objectIndex:number;\r\n\tprivate _realIndices;\r\n\tprivate _vertexIndex:number;\r\n\tprivate _vertices:Array<Vertex>;\r\n\tprivate _vertexNormals:Array<Vertex>;\r\n\tprivate _uvs:Array<UV>;\r\n\tprivate _scale:number;\r\n\tprivate _mtlLib:boolean;\r\n\tprivate _mtlLibLoaded:boolean = true;\r\n\tprivate _activeMaterialID:string = \"\";\r\n\r\n\t/**\r\n\t * Creates a new OBJParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor(scale:number = 1)\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t\tthis._scale = scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Scaling factor applied directly to vertices data\r\n\t * @param value The scaling factor.\r\n\t */\r\n\tpublic set scale(value:number)\r\n\t{\r\n\t\tthis._scale = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"obj\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\tvar content:string = ParserUtils.toString(data);\r\n\t\tvar hasV:boolean = false;\r\n\t\tvar hasF:boolean = false;\r\n\r\n\t\tif (content) {\r\n\t\t\thasV = content.indexOf(\"\\nv \") != -1;\r\n\t\t\thasF = content.indexOf(\"\\nf \") != -1;\r\n\t\t}\r\n\r\n\t\treturn hasV && hasF;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.id == 'mtl') {\r\n\t\t\tvar str:string = ParserUtils.toString(resourceDependency.data);\r\n\t\t\tthis.parseMtl(str);\r\n\r\n\t\t} else {\r\n\t\t\tvar asset:IAsset;\r\n\r\n\t\t\tif (resourceDependency.assets.length != 1) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tasset = resourceDependency.assets[0];\r\n\r\n\t\t\tif (asset.isAsset(BitmapImage2D)) {\r\n\r\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\t\tlm.materialID = resourceDependency.id;\r\n\t\t\t\tlm.texture = new Single2DTexture(<BitmapImage2D> asset);\r\n\r\n\t\t\t\tthis._materialLoaded.push(lm);\r\n\r\n\t\t\t\tif (this._meshes.length > 0) {\r\n\t\t\t\t\tthis.applyMaterial(lm);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif (resourceDependency.id == \"mtl\") {\r\n\t\t\tthis._mtlLib = false;\r\n\t\t\tthis._mtlLibLoaded = false;\r\n\t\t} else {\r\n\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\tlm.materialID = resourceDependency.id;\r\n\t\t\tthis._materialLoaded.push(lm);\r\n\t\t}\r\n\r\n\t\tif (this._meshes.length > 0)\r\n\t\t\tthis.applyMaterial(lm);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar line:string;\r\n\t\tvar creturn:string = String.fromCharCode(10);\r\n\t\tvar trunk;\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._textData = this._pGetTextData();\r\n\t\t\t// Merge linebreaks that are immediately preceeded by\r\n\t\t\t// the \"escape\" backward slash into single lines.\r\n\t\t\tthis._textData = this._textData.replace(/\\\\[\\r\\n]+\\s*/gm, ' ');\r\n\t\t}\r\n\r\n\t\tif (this._textData.indexOf(creturn) == -1)\r\n\t\t\tcreturn = String.fromCharCode(13);\r\n\r\n\t\tif (!this._startedParsing) {\r\n\t\t\tthis._startedParsing = true;\r\n\t\t\tthis._vertices = new Array<Vertex>();\r\n\t\t\tthis._vertexNormals = new Array<Vertex>();\r\n\t\t\tthis._materialIDs = new Array<string>();\r\n\t\t\tthis._materialLoaded = new Array<LoadedMaterial>();\r\n\t\t\tthis._meshes = new Array<Mesh>();\r\n\t\t\tthis._uvs = new Array<UV>();\r\n\t\t\tthis._stringLength = this._textData.length;\r\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, 0);\r\n\t\t\tthis._oldIndex = 0;\r\n\t\t\tthis._objects = new Array<ObjectGroup>();\r\n\t\t\tthis._objectIndex = 0;\r\n\t\t}\r\n\r\n\t\twhile (this._charIndex < this._stringLength && this._pHasTime()) {\r\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, this._oldIndex);\r\n\r\n\t\t\tif (this._charIndex == -1)\r\n\t\t\t\tthis._charIndex = this._stringLength;\r\n\r\n\t\t\tline = this._textData.substring(this._oldIndex, this._charIndex);\r\n\t\t\tline = line.split('\\r').join(\"\");\r\n\t\t\tline = line.replace(\"  \", \" \");\r\n\t\t\ttrunk = line.split(\" \");\r\n\t\t\tthis._oldIndex = this._charIndex + 1;\r\n\t\t\tthis.parseLine(trunk);\r\n\r\n\t\t\t// If whatever was parsed on this line resulted in the\r\n\t\t\t// parsing being paused to retrieve dependencies, break\r\n\t\t\t// here and do not continue parsing until un-paused.\r\n\t\t\tif (this.parsingPaused) {\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._charIndex >= this._stringLength) {\r\n\r\n\t\t\tif (this._mtlLib && !this._mtlLibLoaded) {\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\r\n\t\t\tthis.translate();\r\n\t\t\tthis.applyMaterials();\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\r\n\t\t//create a content object for Loaders\r\n\t\tthis._pContent = new DisplayObjectContainer();\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a single line in the OBJ file.\r\n\t */\r\n\tprivate parseLine(trunk)\r\n\t{\r\n\t\tswitch (trunk[0]) {\r\n\r\n\t\t\tcase \"mtllib\":\r\n\r\n\t\t\t\tthis._mtlLib = true;\r\n\t\t\t\tthis._mtlLibLoaded = false;\r\n\t\t\t\tthis.loadMtl(trunk[1]);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"g\":\r\n\r\n\t\t\t\tthis.createGroup(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"o\":\r\n\r\n\t\t\t\tthis.createObject(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"usemtl\":\r\n\r\n\t\t\t\tif (this._mtlLib) {\r\n\r\n\t\t\t\t\tif (!trunk[1])\r\n\t\t\t\t\t\ttrunk[1] = \"def000\";\r\n\r\n\t\t\t\t\tthis._materialIDs.push(trunk[1]);\r\n\t\t\t\t\tthis._activeMaterialID = trunk[1];\r\n\r\n\t\t\t\t\tif (this._currentGroup)\r\n\t\t\t\t\t\tthis._currentGroup.materialID = this._activeMaterialID;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"v\":\r\n\r\n\t\t\t\tthis.parseVertex(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"vt\":\r\n\r\n\t\t\t\tthis.parseUV(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"vn\":\r\n\r\n\t\t\t\tthis.parseVertexNormal(trunk);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"f\":\r\n\r\n\t\t\t\tthis.parseFace(trunk);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the parsed data into an Away3D scenegraph structure\r\n\t */\r\n\tprivate translate()\r\n\t{\r\n\t\tfor (var objIndex:number = 0; objIndex < this._objects.length; ++objIndex) {\r\n\t\t\tvar groups:Array<Group> = this._objects[objIndex].groups;\r\n\t\t\tvar numGroups:number = groups.length;\r\n\t\t\tvar materialGroups:Array<MaterialGroup>;\r\n\t\t\tvar numMaterialGroups:number;\r\n\t\t\tvar geometry:Geometry;\r\n\t\t\tvar mesh:Mesh;\r\n\r\n\t\t\tvar m:number;\r\n\t\t\tvar sm:number;\r\n\t\t\tvar bmMaterial:MethodMaterial;\r\n\r\n\t\t\tfor (var g:number = 0; g < numGroups; ++g) {\r\n\t\t\t\tgeometry = new Geometry();\r\n\t\t\t\tmaterialGroups = groups[g].materialGroups;\r\n\t\t\t\tnumMaterialGroups = materialGroups.length;\r\n\r\n\t\t\t\tfor (m = 0; m < numMaterialGroups; ++m)\r\n\t\t\t\t\tthis.translateMaterialGroup(materialGroups[m], geometry);\r\n\r\n\t\t\t\tif (geometry.subGeometries.length == 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Finalize and force type-based name\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> geometry);//, \"\");\r\n\r\n\t\t\t\tbmMaterial = new MethodMaterial(DefaultMaterialManager.getDefaultTexture());\r\n\r\n\t\t\t\t//check for multipass\r\n\t\t\t\tif (this.materialMode >= 2)\r\n\t\t\t\t\tbmMaterial.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\tmesh = new Mesh(geometry, bmMaterial);\r\n\r\n\t\t\t\tif (this._objects[objIndex].name) {\r\n\t\t\t\t\t// this is a full independent object ('o' tag in OBJ file)\r\n\t\t\t\t\tmesh.name = this._objects[objIndex].name;\r\n\r\n\t\t\t\t} else if (groups[g].name) {\r\n\r\n\t\t\t\t\t// this is a group so the sub groups contain the actual mesh object names ('g' tag in OBJ file)\r\n\t\t\t\t\tmesh.name = groups[g].name;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// No name stored. Use empty string which will force it\r\n\t\t\t\t\t// to be overridden by finalizeAsset() to type default.\r\n\t\t\t\t\tmesh.name = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._meshes.push(mesh);\r\n\r\n\t\t\t\tif (groups[g].materialID != \"\")\r\n\t\t\t\t\tbmMaterial.name = groups[g].materialID + \"~\" + mesh.name; else\r\n\t\t\t\t\tbmMaterial.name = this._lastMtlID + \"~\" + mesh.name;\r\n\r\n\t\t\t\tif (mesh.subMeshes.length > 1) {\r\n\t\t\t\t\tfor (sm = 1; sm < mesh.subMeshes.length; ++sm)\r\n\t\t\t\t\t\tmesh.subMeshes[sm].material = bmMaterial;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//add to the content property\r\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\r\n\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> mesh);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Translates an obj's material group to a subgeometry.\r\n\t * @param materialGroup The material group data to convert.\r\n\t * @param geometry The Geometry to contain the converted SubGeometry.\r\n\t */\r\n\tprivate translateMaterialGroup(materialGroup:MaterialGroup, geometry:Geometry)\r\n\t{\r\n\t\tvar faces:Array<FaceData> = materialGroup.faces;\r\n\t\tvar face:FaceData;\r\n\t\tvar numFaces:number = faces.length;\r\n\t\tvar numVerts:number;\r\n\t\tvar sub:TriangleSubGeometry;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\t\tvar uvs:Array<number> = new Array<number>();\r\n\t\tvar normals:Array<number> = new Array<number>();\r\n\t\tvar indices:Array<number> /*uint*/ = new Array<number>();\r\n\r\n\t\tthis._realIndices = [];\r\n\t\tthis._vertexIndex = 0;\r\n\r\n\t\tvar j:number;\r\n\t\tfor (var i:number = 0; i < numFaces; ++i) {\r\n\r\n\t\t\tface = faces[i];\r\n\t\t\tnumVerts = face.indexIds.length - 1;\r\n\r\n\t\t\tfor (j = 1; j < numVerts; ++j) {\r\n\r\n\t\t\t\tthis.translateVertexData(face, j, vertices, uvs, indices, normals);\r\n\t\t\t\tthis.translateVertexData(face, 0, vertices, uvs, indices, normals);\r\n\t\t\t\tthis.translateVertexData(face, j + 1, vertices, uvs, indices, normals);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (vertices.length > 0) {\r\n\t\t\tsub = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\tsub.autoDeriveNormals = normals.length? false : true;\r\n\t\t\tsub.setIndices(indices);\r\n\t\t\tsub.setPositions(vertices);\r\n\t\t\tsub.setNormals(normals);\r\n\t\t\tsub.setUVs(uvs);\r\n\r\n\t\t\tgeometry.addSubGeometry(sub);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate translateVertexData(face:FaceData, vertexIndex:number, vertices:Array<number>, uvs:Array<number>, indices:Array<number> /*uint*/, normals:Array<number>)\r\n\t{\r\n\t\tvar index:number;\r\n\t\tvar vertex:Vertex;\r\n\t\tvar vertexNormal:Vertex;\r\n\t\tvar uv:UV;\r\n\r\n\t\tif (!this._realIndices[face.indexIds[vertexIndex]]) {\r\n\r\n\t\t\tindex = this._vertexIndex;\r\n\t\t\tthis._realIndices[face.indexIds[vertexIndex]] = ++this._vertexIndex;\r\n\t\t\tvertex = this._vertices[face.vertexIndices[vertexIndex] - 1];\r\n\t\t\tvertices.push(vertex.x*this._scale, vertex.y*this._scale, vertex.z*this._scale);\r\n\r\n\t\t\tif (face.normalIndices.length > 0) {\r\n\t\t\t\tvertexNormal = this._vertexNormals[face.normalIndices[vertexIndex] - 1];\r\n\t\t\t\tnormals.push(vertexNormal.x, vertexNormal.y, vertexNormal.z);\r\n\t\t\t}\r\n\r\n\t\t\tif (face.uvIndices.length > 0) {\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tuv = this._uvs[face.uvIndices[vertexIndex] - 1];\r\n\t\t\t\t\tuvs.push(uv.u, uv.v);\r\n\r\n\t\t\t\t} catch (e) {\r\n\r\n\t\t\t\t\tswitch (vertexIndex) {\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\tuvs.push(0, 1);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\tuvs.push(.5, 0);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\tuvs.push(1, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tindex = this._realIndices[face.indexIds[vertexIndex]] - 1;\r\n\t\t}\r\n\r\n\t\tindices.push(index);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new object group.\r\n\t * @param trunk The data block containing the object tag and its parameters\r\n\t */\r\n\tprivate createObject(trunk)\r\n\t{\r\n\t\tthis._currentGroup = null;\r\n\t\tthis._currentMaterialGroup = null;\r\n\t\tthis._objects.push(this._currentObject = new ObjectGroup());\r\n\r\n\t\tif (trunk)\r\n\t\t\tthis._currentObject.name = trunk[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new group.\r\n\t * @param trunk The data block containing the group tag and its parameters\r\n\t */\r\n\tprivate createGroup(trunk)\r\n\t{\r\n\t\tif (!this._currentObject)\r\n\t\t\tthis.createObject(null);\r\n\t\tthis._currentGroup = new Group();\r\n\r\n\t\tthis._currentGroup.materialID = this._activeMaterialID;\r\n\r\n\t\tif (trunk)\r\n\t\t\tthis._currentGroup.name = trunk[1];\r\n\t\tthis._currentObject.groups.push(this._currentGroup);\r\n\r\n\t\tthis.createMaterialGroup(null);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new material group.\r\n\t * @param trunk The data block containing the material tag and its parameters\r\n\t */\r\n\tprivate createMaterialGroup(trunk)\r\n\t{\r\n\t\tthis._currentMaterialGroup = new MaterialGroup();\r\n\t\tif (trunk)\r\n\t\t\tthis._currentMaterialGroup.url = trunk[1];\r\n\t\tthis._currentGroup.materialGroups.push(this._currentMaterialGroup);\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next vertex coordinates.\r\n\t * @param trunk The data block containing the vertex tag and its parameters\r\n\t */\r\n\tprivate parseVertex(trunk)\r\n\t{\r\n\t\t//for the very rare cases of other delimiters/charcodes seen in some obj files\r\n\r\n\t\tvar v1:number, v2:number , v3:number;\r\n\t\tif (trunk.length > 4) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\r\n\t\t\tv1 = <number> nTrunk[0];\r\n\t\t\tv2 = <number> nTrunk[1];\r\n\t\t\tv3 = <number> -nTrunk[2];\r\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\r\n\r\n\t\t} else {\r\n\t\t\tv1 = <number> parseFloat(trunk[1]);\r\n\t\t\tv2 = <number> parseFloat(trunk[2]);\r\n\t\t\tv3 = <number> -parseFloat(trunk[3]);\r\n\r\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next uv coordinates.\r\n\t * @param trunk The data block containing the uv tag and its parameters\r\n\t */\r\n\tprivate parseUV(trunk)\r\n\t{\r\n\t\tif (trunk.length > 3) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\t\t\tthis._uvs.push(new UV(nTrunk[0], 1 - nTrunk[1]));\r\n\r\n\t\t} else {\r\n\t\t\tthis._uvs.push(new UV(parseFloat(trunk[1]), 1 - parseFloat(trunk[2])));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next vertex normal coordinates.\r\n\t * @param trunk The data block containing the vertex normal tag and its parameters\r\n\t */\r\n\tprivate parseVertexNormal(trunk)\r\n\t{\r\n\t\tif (trunk.length > 4) {\r\n\t\t\tvar nTrunk = [];\r\n\t\t\tvar val:number;\r\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\r\n\t\t\t\tval = parseFloat(trunk[i]);\r\n\t\t\t\tif (!isNaN(val))\r\n\t\t\t\t\tnTrunk.push(val);\r\n\t\t\t}\r\n\t\t\tthis._vertexNormals.push(new Vertex(nTrunk[0], nTrunk[1], -nTrunk[2]));\r\n\r\n\t\t} else {\r\n\t\t\tthis._vertexNormals.push(new Vertex(parseFloat(trunk[1]), parseFloat(trunk[2]), -parseFloat(trunk[3])));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the next face's indices.\r\n\t * @param trunk The data block containing the face tag and its parameters\r\n\t */\r\n\tprivate parseFace(trunk)\r\n\t{\r\n\t\tvar len:number = trunk.length;\r\n\t\tvar face:FaceData = new FaceData();\r\n\r\n\t\tif (!this._currentGroup) {\r\n\t\t\tthis.createGroup(null);\r\n\t\t}\r\n\r\n\t\tvar indices;\r\n\t\tfor (var i:number = 1; i < len; ++i) {\r\n\r\n\t\t\tif (trunk[i] == \"\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tindices = trunk[i].split(\"/\");\r\n\t\t\tface.vertexIndices.push(this.parseIndex(parseInt(indices[0]), this._vertices.length));\r\n\r\n\t\t\tif (indices[1] && String(indices[1]).length > 0)\r\n\t\t\t\tface.uvIndices.push(this.parseIndex(parseInt(indices[1]), this._uvs.length));\r\n\r\n\t\t\tif (indices[2] && String(indices[2]).length > 0)\r\n\t\t\t\tface.normalIndices.push(this.parseIndex(parseInt(indices[2]), this._vertexNormals.length));\r\n\r\n\t\t\tface.indexIds.push(trunk[i]);\r\n\t\t}\r\n\r\n\t\tthis._currentMaterialGroup.faces.push(face);\r\n\t}\r\n\r\n\t/**\r\n\t * This is a hack around negative face coords\r\n\t */\r\n\tprivate parseIndex(index:number, length:number):number\r\n\t{\r\n\t\tif (index < 0)\r\n\t\t\treturn index + length + 1; else\r\n\t\t\treturn index;\r\n\t}\r\n\r\n\tprivate parseMtl(data:string)\r\n\t{\r\n\t\tvar materialDefinitions = data.split('newmtl');\r\n\t\tvar lines;\r\n\t\tvar trunk;\r\n\t\tvar j:number;\r\n\r\n\t\tvar basicSpecularMethod:SpecularBasicMethod;\r\n\t\tvar useSpecular:boolean;\r\n\t\tvar useColor:boolean;\r\n\t\tvar diffuseColor:number;\r\n\t\tvar color:number;\r\n\t\tvar specularColor:number;\r\n\t\tvar specular:number;\r\n\t\tvar alpha:number;\r\n\t\tvar mapkd:string;\r\n\r\n\t\tfor (var i:number = 0; i < materialDefinitions.length; ++i) {\r\n\r\n\r\n\t\t\tlines = (materialDefinitions[i].split('\\r')).join(\"\").split('\\n');\r\n\t\t\t//lines = (materialDefinitions[i].split('\\r') as Array).join(\"\").split('\\n');\r\n\r\n\t\t\tif (lines.length == 1)\r\n\t\t\t\tlines = materialDefinitions[i].split(String.fromCharCode(13));\r\n\r\n\t\t\tdiffuseColor = color = specularColor = 0xFFFFFF;\r\n\t\t\tspecular = 0;\r\n\t\t\tuseSpecular = false;\r\n\t\t\tuseColor = false;\r\n\t\t\talpha = 1;\r\n\t\t\tmapkd = \"\";\r\n\r\n\t\t\tfor (j = 0; j < lines.length; ++j) {\r\n\r\n\t\t\t\tlines[j] = lines[j].replace(/\\s+$/, \"\");\r\n\r\n\t\t\t\tif (lines[j].substring(0, 1) != \"#\" && (j == 0 || lines[j] != \"\")) {\r\n\t\t\t\t\ttrunk = lines[j].split(\" \");\r\n\r\n\t\t\t\t\tif (String(trunk[0]).charCodeAt(0) == 9 || String(trunk[0]).charCodeAt(0) == 32)\r\n\t\t\t\t\t\ttrunk[0] = trunk[0].substring(1, trunk[0].length);\r\n\r\n\t\t\t\t\tif (j == 0) {\r\n\t\t\t\t\t\tthis._lastMtlID = trunk.join(\"\");\r\n\t\t\t\t\t\tthis._lastMtlID = (this._lastMtlID == \"\")? \"def000\" : this._lastMtlID;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tswitch (trunk[0]) {\r\n\r\n\t\t\t\t\t\t\tcase \"Ka\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3])))\r\n\t\t\t\t\t\t\t\t\tcolor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Ks\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\r\n\t\t\t\t\t\t\t\t\tspecularColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\t\tuseSpecular = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Ns\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\r\n\t\t\t\t\t\t\t\t\tspecular = Number(trunk[1])*0.001;\r\n\t\t\t\t\t\t\t\tif (specular == 0)\r\n\t\t\t\t\t\t\t\t\tuseSpecular = false;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"Kd\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\r\n\t\t\t\t\t\t\t\t\tdiffuseColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\r\n\t\t\t\t\t\t\t\t\tuseColor = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"tr\":\r\n\t\t\t\t\t\t\tcase \"d\":\r\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\r\n\t\t\t\t\t\t\t\t\talpha = Number(trunk[1]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"map_Kd\":\r\n\t\t\t\t\t\t\t\tmapkd = this.parseMapKdString(trunk);\r\n\t\t\t\t\t\t\t\tmapkd = mapkd.replace(/\\\\/g, \"/\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (mapkd != \"\") {\r\n\r\n\t\t\t\tif (useSpecular) {\r\n\r\n\t\t\t\t\tbasicSpecularMethod = new SpecularBasicMethod();\r\n\t\t\t\t\tbasicSpecularMethod.specularColor = specularColor;\r\n\t\t\t\t\tbasicSpecularMethod.specular = specular;\r\n\r\n\t\t\t\t\tvar specularData:SpecularData = new SpecularData();\r\n\t\t\t\t\tspecularData.alpha = alpha;\r\n\t\t\t\t\tspecularData.basicSpecularMethod = basicSpecularMethod;\r\n\t\t\t\t\tspecularData.materialID = this._lastMtlID;\r\n\r\n\t\t\t\t\tif (!this._materialSpecularData)\r\n\t\t\t\t\t\tthis._materialSpecularData = new Array<SpecularData>();\r\n\r\n\t\t\t\t\tthis._materialSpecularData.push(specularData);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pAddDependency(this._lastMtlID, new URLRequest(mapkd));\r\n\r\n\t\t\t} else if (useColor && !isNaN(color)) {\r\n\r\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\r\n\t\t\t\tlm.materialID = this._lastMtlID;\r\n\r\n\t\t\t\tif (alpha == 0)\r\n\t\t\t\t\tconsole.log(\"Warning: an alpha value of 0 was found in mtl color tag (Tr or d) ref:\" + this._lastMtlID + \", mesh(es) using it will be invisible!\");\r\n\r\n\t\t\t\tvar cm:MethodMaterial;\r\n\r\n\t\t\t\tif (this.materialMode < 2) {\r\n\t\t\t\t\tcm = new MethodMaterial(color);\r\n\r\n\t\t\t\t\tvar colorMat:MethodMaterial = <MethodMaterial> cm;\r\n\r\n\t\t\t\t\tcolorMat.alpha = alpha;\r\n\t\t\t\t\tcolorMat.diffuseColor = diffuseColor;\r\n\t\t\t\t\tcolorMat.repeat = true;\r\n\r\n\t\t\t\t\tif (useSpecular) {\r\n\t\t\t\t\t\tcolorMat.specularColor = specularColor;\r\n\t\t\t\t\t\tcolorMat.specular = specular;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcm = new MethodMaterial(color);\r\n\t\t\t\t\tcm.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\tvar colorMultiMat:MethodMaterial = <MethodMaterial> cm;\r\n\r\n\r\n\t\t\t\t\tcolorMultiMat.diffuseColor = diffuseColor;\r\n\t\t\t\t\tcolorMultiMat.repeat = true;\r\n\r\n\t\t\t\t\tif (useSpecular) {\r\n\t\t\t\t\t\tcolorMultiMat.specularColor = specularColor;\r\n\t\t\t\t\t\tcolorMultiMat.specular = specular;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlm.cm = cm;\r\n\r\n\t\t\t\tthis._materialLoaded.push(lm);\r\n\r\n\t\t\t\tif (this._meshes.length > 0)\r\n\t\t\t\t\tthis.applyMaterial(lm);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._mtlLibLoaded = true;\r\n\t}\r\n\r\n\tprivate parseMapKdString(trunk):string\r\n\t{\r\n\t\tvar url:string = \"\";\r\n\t\tvar i:number;\r\n\t\tvar breakflag:boolean;\r\n\r\n\t\tfor (i = 1; i < trunk.length;) {\r\n\t\t\tswitch (trunk[i]) {\r\n\t\t\t\tcase \"-blendu\":\r\n\t\t\t\tcase \"-blendv\":\r\n\t\t\t\tcase \"-cc\":\r\n\t\t\t\tcase \"-clamp\":\r\n\t\t\t\tcase \"-texres\":\r\n\t\t\t\t\ti += 2; //Skip ahead 1 attribute\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"-mm\":\r\n\t\t\t\t\ti += 3; //Skip ahead 2 attributes\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"-o\":\r\n\t\t\t\tcase \"-s\":\r\n\t\t\t\tcase \"-t\":\r\n\t\t\t\t\ti += 4; //Skip ahead 3 attributes\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreakflag = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (breakflag)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t//Reconstruct URL/filename\r\n\t\tfor (i; i < trunk.length; i++) {\r\n\t\t\turl += trunk[i];\r\n\t\t\turl += \" \";\r\n\t\t}\r\n\r\n\t\t//Remove the extraneous space and/or newline from the right side\r\n\t\turl = url.replace(/\\s+$/, \"\");\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\tprivate loadMtl(mtlurl:string)\r\n\t{\r\n\t\t// Add raw-data dependency to queue and load dependencies now,\r\n\t\t// which will pause the parsing in the meantime.\r\n\t\tthis._pAddDependency('mtl', new URLRequest(mtlurl), true);\r\n\t\tthis._pPauseAndRetrieveDependencies();//\r\n\t}\r\n\r\n\tprivate applyMaterial(lm:LoadedMaterial)\r\n\t{\r\n\t\tvar decomposeID;\r\n\t\tvar mesh:Mesh;\r\n\t\tvar tm:MethodMaterial;\r\n\t\tvar j:number;\r\n\t\tvar specularData:SpecularData;\r\n\r\n\t\tfor (var i:number = 0; i < this._meshes.length; ++i) {\r\n\t\t\tmesh = this._meshes[i];\r\n\t\t\tdecomposeID = mesh.material.name.split(\"~\");\r\n\r\n\t\t\tif (decomposeID[0] == lm.materialID) {\r\n\r\n\t\t\t\tif (lm.cm) {\r\n\t\t\t\t\tif (mesh.material)\r\n\t\t\t\t\t\tmesh.material = null;\r\n\t\t\t\t\tmesh.material = lm.cm;\r\n\r\n\t\t\t\t} else if (lm.texture) {\r\n\t\t\t\t\tif (this.materialMode < 2) { // if materialMode is 0 or 1, we create a SinglePass\r\n\t\t\t\t\t\ttm = <MethodMaterial > mesh.material;\r\n\r\n\t\t\t\t\t\ttm.texture = lm.texture;\r\n\t\t\t\t\t\ttm.color = lm.color;\r\n\t\t\t\t\t\ttm.alpha = lm.alpha;\r\n\t\t\t\t\t\ttm.repeat = true;\r\n\r\n\t\t\t\t\t\tif (lm.specularMethod) {\r\n\r\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\r\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\r\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\r\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\r\n\t\t\t\t\t\t\ttm.specularMethod = null;\r\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\r\n\r\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\r\n\r\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\r\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\r\n\r\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\r\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\r\n\t\t\t\t\t\t\t\t\ttm.alpha = specularData.alpha;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else { //if materialMode==2 this is a MultiPassTexture\r\n\t\t\t\t\t\ttm = <MethodMaterial> mesh.material;\r\n\t\t\t\t\t\ttm.mode = MethodMaterialMode.MULTI_PASS;\r\n\r\n\t\t\t\t\t\ttm.texture = lm.texture;\r\n\t\t\t\t\t\ttm.color = lm.color;\r\n\t\t\t\t\t\ttm.repeat = true;\r\n\r\n\t\t\t\t\t\tif (lm.specularMethod) {\r\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\r\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\r\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\r\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\r\n\t\t\t\t\t\t\ttm.specularMethod = null;\r\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\r\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\r\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\r\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\r\n\r\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\r\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\r\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmesh.material.name = decomposeID[1]? decomposeID[1] : decomposeID[0];\r\n\t\t\t\tthis._meshes.splice(i, 1);\r\n\t\t\t\t--i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lm.cm || tm)\r\n\t\t\tthis._pFinalizeAsset(lm.cm || tm);\r\n\t}\r\n\r\n\tprivate applyMaterials()\r\n\t{\r\n\t\tif (this._materialLoaded.length == 0)\r\n\t\t\treturn;\r\n\r\n\t\tfor (var i:number = 0; i < this._materialLoaded.length; ++i)\r\n\t\t\tthis.applyMaterial(this._materialLoaded[i]);\r\n\t}\r\n}\r\n\r\nexport = OBJParser;\r\n\r\nclass ObjectGroup\r\n{\r\n\tpublic name:string;\r\n\tpublic groups:Group[] = new Array<Group>();\r\n}\r\n\r\nclass Group\r\n{\r\n\tpublic name:string;\r\n\tpublic materialID:string;\r\n\tpublic materialGroups:MaterialGroup[] = new Array<MaterialGroup>();\r\n}\r\n\r\nclass MaterialGroup\r\n{\r\n\tpublic url:string;\r\n\tpublic faces:FaceData[] = new Array<FaceData>();\r\n}\r\n\r\nclass SpecularData\r\n{\r\n\tpublic materialID:string;\r\n\tpublic basicSpecularMethod:SpecularBasicMethod;\r\n\tpublic color:number = 0xFFFFFF;\r\n\tpublic alpha:number = 1;\r\n}\r\n\r\nclass LoadedMaterial\r\n{\r\n\tpublic materialID:string;\r\n\tpublic texture:Single2DTexture;\r\n\tpublic cm:MaterialBase;\r\n\tpublic specularMethod:SpecularBasicMethod;\r\n\tpublic color:number = 0xFFFFFF;\r\n\tpublic alpha:number = 1;\r\n}\r\n\r\nclass FaceData\r\n{\r\n\tpublic vertexIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic uvIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic normalIndices:Array<number> /*uint*/ = new Array<number>();\r\n\tpublic indexIds:string[] = new Array<string>(); // used for real index lookups\r\n}\r\n\r\n/**\r\n* Texture coordinates value object.\r\n*/\r\nclass UV\r\n{\r\n\tprivate _u:number;\r\n\tprivate _v:number;\r\n\r\n\t/**\r\n\t * Creates a new <code>UV</code> object.\r\n\t *\r\n\t * @param    u        [optional]    The horizontal coordinate of the texture value. Defaults to 0.\r\n\t * @param    v        [optional]    The vertical coordinate of the texture value. Defaults to 0.\r\n\t */\r\n\tconstructor(u:number = 0, v:number = 0)\r\n\t{\r\n\t\tthis._u = u;\r\n\t\tthis._v = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the vertical coordinate of the texture value.\r\n\t */\r\n\tpublic get v():number\r\n\t{\r\n\t\treturn this._v;\r\n\t}\r\n\r\n\tpublic set v(value:number)\r\n\t{\r\n\t\tthis._v = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the horizontal coordinate of the texture value.\r\n\t */\r\n\tpublic get u():number\r\n\t{\r\n\t\treturn this._u;\r\n\t}\r\n\r\n\tpublic set u(value:number)\r\n\t{\r\n\t\tthis._u = value;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new UV value Object\r\n\t */\r\n\tpublic clone():UV\r\n\t{\r\n\t\treturn new UV(this._u, this._v);\r\n\t}\r\n\r\n\t/**\r\n\t * returns the value object as a string for trace/debug purpose\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn this._u + \",\" + this._v;\r\n\t}\r\n}\r\n\r\nclass Vertex\r\n{\r\n\tprivate _x:number;\r\n\tprivate _y:number;\r\n\tprivate _z:number;\r\n\tprivate _index:number;\r\n\r\n\t/**\r\n\t * Creates a new <code>Vertex</code> value object.\r\n\t *\r\n\t * @param    x            [optional]    The x value. Defaults to 0.\r\n\t * @param    y            [optional]    The y value. Defaults to 0.\r\n\t * @param    z            [optional]    The z value. Defaults to 0.\r\n\t * @param    index        [optional]    The index value. Defaults is NaN.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, index:number = 0)\r\n\t{\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._index = index;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the index of value object\r\n\t * @param    ind        The index\r\n\t */\r\n\tpublic set index(ind:number)\r\n\t{\r\n\t\tthis._index = ind;\r\n\t}\r\n\r\n\tpublic get index():number\r\n\t{\r\n\t\treturn this._index;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the x value of the value object\r\n\t * @param    value        The x value\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tthis._x = value;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the y value of the value object\r\n\t * @param    value        The y value\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tthis._y = value;\r\n\t}\r\n\r\n\t/**\r\n\t * To define/store the z value of the value object\r\n\t * @param    value        The z value\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(value:number)\r\n\t{\r\n\t\tthis._z = value;\r\n\t}\r\n\r\n\t/**\r\n\t * returns a new Vertex value Object\r\n\t */\r\n\tpublic clone():Vertex\r\n\t{\r\n\t\treturn new Vertex(this._x, this._y, this._z);\r\n\t}\r\n}",
    "import AssetLoader\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\n\r\nimport AWDParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/AWDParser\");\r\nimport Max3DSParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/Max3DSParser\");\r\nimport MD2Parser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/MD2Parser\");\r\nimport OBJParser\t\t\t\t\t\t= require(\"awayjs-parsers/lib/OBJParser\");\r\n\r\n/**\r\n *\r\n */\r\nclass Parsers\r\n{\r\n\t/**\r\n\t * A list of all parsers that come bundled with Away3D. Use this to quickly\r\n\t * enable support for all bundled parsers to the file format auto-detection\r\n\t * feature, using any of the enableParsers() methods on loaders, e.g.:\r\n\t *\r\n\t * <code>AssetLibrary.enableParsers(Parsers.ALL_BUNDLED);</code>\r\n\t *\r\n\t * Beware however that this requires all parser classes to be included in the\r\n\t * SWF file, which will add 50-100 kb to the file. When only a limited set of\r\n\t * file formats are used, SWF file size can be saved by adding the parsers\r\n\t * individually using AssetLibrary.enableParser()\r\n\t *\r\n\t * A third way is to specify a parser for each loaded file, thereby bypassing\r\n\t * the auto-detection mechanisms altogether, while at the same time allowing\r\n\t * any properties that are unique to that parser to be set for that load.\r\n\t *\r\n\t * The bundled parsers are:\r\n\t *\r\n\t * <ul>\r\n\t * <li>AC3D (.ac)</li>\r\n\t * <li>Away Data version 1 ASCII and version 2 binary (.awd). AWD1 BSP unsupported</li>\r\n\t * <li>3DMax (.3ds)</li>\r\n\t * <li>DXF (.dxf)</li>\r\n\t * <li>Quake 2 MD2 models (.md2)</li>\r\n\t * <li>Doom 3 MD5 animation clips (.md5anim)</li>\r\n\t * <li>Doom 3 MD5 meshes (.md5mesh)</li>\r\n\t * <li>Wavefront OBJ (.obj)</li>\r\n\t * <li>Collada (.dae)</li>\r\n\t * <li>Images (.jpg, .png)</li>\r\n\t * </ul>\r\n\t *\r\n\t * @see away.library.AssetLibrary.enableParser\r\n\t */\r\n\tpublic static ALL_BUNDLED:Array<Object> = Array<Object>(AWDParser, Max3DSParser, MD2Parser, OBJParser);\r\n\r\n\t/**\r\n\t * Short-hand function to enable all bundled parsers for auto-detection. In practice,\r\n\t * this is the same as invoking enableParsers(Parsers.ALL_BUNDLED) on any of the\r\n\t * loader classes SingleFileLoader, AssetLoader, AssetLibrary or Loader3D.\r\n\t *\r\n\t * See notes about file size in the documentation for the ALL_BUNDLED constant.\r\n\t *\r\n\t * @see away.parsers.Parsers.ALL_BUNDLED\r\n\t */\r\n\tpublic static enableAllBundled():void\r\n\t{\r\n\t\tAssetLoader.enableParsers(Parsers.ALL_BUNDLED);\r\n\t}\r\n}\r\n\r\nexport = Parsers;"
  ],
  "sourceRoot": ""
}