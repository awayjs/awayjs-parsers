var Geometry = require("awayjs-core/lib/data/Geometry");
var AssetEvent = require("awayjs-core/lib/events/AssetEvent");
var LoaderEvent = require("awayjs-core/lib/events/LoaderEvent");
var AssetLibrary = require("awayjs-core/lib/library/AssetLibrary");
var URLRequest = require("awayjs-core/lib/net/URLRequest");
var Debug = require("awayjs-core/lib/utils/Debug");
var RequestAnimationFrame = require("awayjs-core/lib/utils/RequestAnimationFrame");
var View = require("awayjs-display/lib/containers/View");
var Mesh = require("awayjs-display/lib/entities/Mesh");
var Skybox = require("awayjs-display/lib/entities/Skybox");
var MaterialBase = require("awayjs-display/lib/materials/MaterialBase");
var DefaultRenderer = require("awayjs-renderergl/lib/DefaultRenderer");
var MethodRendererPool = require("awayjs-methodmaterials/lib/pool/MethodRendererPool");
var AWDParser = require("awayjs-parsers/lib/AWDParser");
/**
 *
 */
var MaterialEnvMapTest = (function () {
    function MaterialEnvMapTest() {
        var _this = this;
        Debug.LOG_PI_ERRORS = true;
        Debug.THROW_ERRORS = false;
        AssetLibrary.enableParser(AWDParser);
        this._token = AssetLibrary.load(new URLRequest('assets/EnvMapTest.awd'));
        this._token.addEventListener(LoaderEvent.RESOURCE_COMPLETE, function (event) { return _this.onResourceComplete(event); });
        this._token.addEventListener(AssetEvent.ASSET_COMPLETE, function (event) { return _this.onAssetComplete(event); });
        this._view = new View(new DefaultRenderer(MethodRendererPool));
        this._timer = new RequestAnimationFrame(this.render, this);
        window.onresize = function () { return _this.resize(); };
        this._timer.start();
        this.resize();
    }
    MaterialEnvMapTest.prototype.resize = function (event) {
        if (event === void 0) { event = null; }
        this._view.y = 0;
        this._view.x = 0;
        this._view.width = window.innerWidth;
        this._view.height = window.innerHeight;
    };
    MaterialEnvMapTest.prototype.render = function (dt) {
        if (this._torus)
            this._torus.rotationY += 1;
        this._view.render();
        this._view.camera.z = -2000;
    };
    MaterialEnvMapTest.prototype.onAssetComplete = function (event) {
        console.log('------------------------------------------------------------------------------');
        console.log('away.events.AssetEvent.ASSET_COMPLETE', AssetLibrary.getAsset(event.asset.name));
        console.log('------------------------------------------------------------------------------');
    };
    MaterialEnvMapTest.prototype.onResourceComplete = function (event) {
        console.log('------------------------------------------------------------------------------');
        console.log('away.events.LoaderEvent.RESOURCE_COMPLETE', event);
        console.log('------------------------------------------------------------------------------');
        var loader = event.target;
        var numAssets = loader.baseDependency.assets.length;
        for (var i = 0; i < numAssets; ++i) {
            var asset = loader.baseDependency.assets[i];
            console.log(asset.assetType);
            switch (asset.assetType) {
                case Skybox.assetType:
                    var skybox = asset;
                    this._view.scene.addChild(skybox);
                    break;
                case Mesh.assetType:
                    this._torus = asset;
                    this._view.scene.addChild(this._torus);
                    break;
                case Geometry.assetType:
                    break;
                case MaterialBase.assetType:
                    break;
            }
        }
    };
    return MaterialEnvMapTest;
})();

//# sourceMappingURL=data:application/json;base64,