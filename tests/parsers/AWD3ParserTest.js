var AssetLibrary = require("awayjs-core/lib/library/AssetLibrary");
var AssetType = require("awayjs-core/lib/library/AssetType");
var AssetEvent = require("awayjs-core/lib/events/AssetEvent");
var URLRequest = require("awayjs-core/lib/net/URLRequest");
var LoaderEvent = require("awayjs-core/lib/events/LoaderEvent");
var Vector3D = require("awayjs-core/lib/geom/Vector3D");
var OrthographicOffCenterProjection = require("awayjs-core/lib/projections/OrthographicOffCenterProjection");
var RequestAnimationFrame = require("awayjs-core/lib/utils/RequestAnimationFrame");
var View = require("awayjs-display/lib/containers/View");
var HoverController = require("awayjs-display/lib/controllers/HoverController");
var Loader = require("awayjs-display/lib/containers/Loader");
var DefaultRenderer = require("awayjs-renderergl/lib/DefaultRenderer");
var MethodRendererPool = require("awayjs-methodmaterials/lib/pool/MethodRendererPool");
var AWDParser = require("awayjs-parsers/lib/AWDParser");
var AWD3ParserTest = (function () {
    /**
     * Constructor
     */
    function AWD3ParserTest() {
        this._time = 0;
        this.init();
    }
    /**
     * Global initialise function
     */
    AWD3ParserTest.prototype.init = function () {
        this.initEngine();
        this.initObjects();
        this.initListeners();
    };
    /**
     * Initialise the engine
     */
    AWD3ParserTest.prototype.initEngine = function () {
        //create the view
        this._view = new View(new DefaultRenderer(MethodRendererPool));
        this._view.backgroundColor = 0xffffff;
        //create custom lens
        this._view.camera.projection = new OrthographicOffCenterProjection(0, 550, -400, 0);
        this._view.camera.projection.far = 500000;
        this._view.camera.projection.near = 0.1;
        //setup controller to be used on the camera
        this._cameraController = new HoverController(this._view.camera, null, 0, 0, 300, 10, 90);
        this._cameraController.lookAtPosition = new Vector3D(0, 50, 0);
        this._cameraController.tiltAngle = 0;
        this._cameraController.panAngle = 0;
        this._cameraController.minTiltAngle = 5;
        this._cameraController.maxTiltAngle = 60;
        this._cameraController.autoUpdate = false;
    };
    /**
     * Initialise the scene objects
     */
    AWD3ParserTest.prototype.initObjects = function () {
        var _this = this;
        AssetLibrary.enableParser(AWDParser);
        //kickoff asset loading
        var loader = new Loader();
        loader.addEventListener(AssetEvent.ASSET_COMPLETE, function (event) { return _this.onAssetComplete(event); });
        loader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, function (event) { return _this.onRessourceComplete(event); });
        ;
        loader.load(new URLRequest("assets/AWD3/ScareCrow_old.awd"));
        // console.log("START LOADING");
        //this._view.scene.addChild(loader);
    };
    /**
     * Initialise the listeners
     */
    AWD3ParserTest.prototype.initListeners = function () {
        var _this = this;
        window.onresize = function (event) { return _this.onResize(event); };
        document.onmousedown = function (event) { return _this.onMouseDown(event); };
        document.onmouseup = function (event) { return _this.onMouseUp(event); };
        document.onmousemove = function (event) { return _this.onMouseMove(event); };
        document.onmousewheel = function (event) { return _this.onMouseWheel(event); };
        this.onResize();
        this._timer = new RequestAnimationFrame(this.onEnterFrame, this);
        this._timer.start();
    };
    /**
     * loader listener for asset complete events
     */
    AWD3ParserTest.prototype.onAssetComplete = function (event) {
        if (event.asset.assetType == AssetType.TIMELINE) {
            this._rootTimeLine = event.asset;
        }
    };
    /**
     * loader listener for asset complete events
     */
    AWD3ParserTest.prototype.onRessourceComplete = function (event) {
        if (this._rootTimeLine) {
            //console.log("LOADING A ROOT name = " + this._rootTimeLine.name + " duration=" + this._rootTimeLine.duration);
            this._view.scene.addChild(this._rootTimeLine);
        }
    };
    /**
     * Render loop
     */
    AWD3ParserTest.prototype.onEnterFrame = function (dt) {
        this._time += dt;
        //update camera controler
        this._cameraController.update();
        if (this._rootTimeLine != undefined) {
            //console.log("RENDER = ");
            this._rootTimeLine.update(dt);
        }
        //console.log("RENDER = ");
        //update view
        this._view.render();
    };
    AWD3ParserTest.prototype.onMouseDown = function (event) {
        this._lastPanAngle = this._cameraController.panAngle;
        this._lastTiltAngle = this._cameraController.tiltAngle;
        this._lastMouseX = event.clientX;
        this._lastMouseY = event.clientY;
        this._move = true;
    };
    AWD3ParserTest.prototype.onMouseUp = function (event) {
        this._move = false;
    };
    AWD3ParserTest.prototype.onMouseMove = function (event) {
        if (this._move) {
            this._cameraController.panAngle = 0.3 * (event.clientX - this._lastMouseX) + this._lastPanAngle;
            this._cameraController.tiltAngle = 0.3 * (event.clientY - this._lastMouseY) + this._lastTiltAngle;
        }
    };
    AWD3ParserTest.prototype.onMouseWheel = function (event) {
        this._cameraController.distance -= event.wheelDelta * 5;
        if (this._cameraController.distance < 100) {
            this._cameraController.distance = 100;
        }
        else if (this._cameraController.distance > 2000) {
            this._cameraController.distance = 2000;
        }
    };
    AWD3ParserTest.prototype.onResize = function (event) {
        if (event === void 0) { event = null; }
        this._view.y = 0;
        this._view.x = 0;
        this._view.width = window.innerWidth;
        this._view.height = window.innerHeight;
    };
    return AWD3ParserTest;
})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnNlcnMvQVdEM1BhcnNlclRlc3QudHMiXSwibmFtZXMiOlsiQVdEM1BhcnNlclRlc3QiLCJBV0QzUGFyc2VyVGVzdC5jb25zdHJ1Y3RvciIsIkFXRDNQYXJzZXJUZXN0LmluaXQiLCJBV0QzUGFyc2VyVGVzdC5pbml0RW5naW5lIiwiQVdEM1BhcnNlclRlc3QuaW5pdE9iamVjdHMiLCJBV0QzUGFyc2VyVGVzdC5pbml0TGlzdGVuZXJzIiwiQVdEM1BhcnNlclRlc3Qub25Bc3NldENvbXBsZXRlIiwiQVdEM1BhcnNlclRlc3Qub25SZXNzb3VyY2VDb21wbGV0ZSIsIkFXRDNQYXJzZXJUZXN0Lm9uRW50ZXJGcmFtZSIsIkFXRDNQYXJzZXJUZXN0Lm9uTW91c2VEb3duIiwiQVdEM1BhcnNlclRlc3Qub25Nb3VzZVVwIiwiQVdEM1BhcnNlclRlc3Qub25Nb3VzZU1vdmUiLCJBV0QzUGFyc2VyVGVzdC5vbk1vdXNlV2hlZWwiLCJBV0QzUGFyc2VyVGVzdC5vblJlc2l6ZSJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBTyxZQUFZLFdBQWUsc0NBQXNDLENBQUMsQ0FBQztBQUMxRSxJQUFPLFNBQVMsV0FBZSxtQ0FBbUMsQ0FBQyxDQUFDO0FBQ3BFLElBQU8sVUFBVSxXQUFlLG1DQUFtQyxDQUFDLENBQUM7QUFDckUsSUFBTyxVQUFVLFdBQWUsZ0NBQWdDLENBQUMsQ0FBQztBQUNsRSxJQUFPLFdBQVcsV0FBZSxvQ0FBb0MsQ0FBQyxDQUFDO0FBQ3ZFLElBQU8sUUFBUSxXQUFnQiwrQkFBK0IsQ0FBQyxDQUFDO0FBQ2hFLElBQU8sK0JBQStCLFdBQVksNkRBQTZELENBQUMsQ0FBQztBQUVqSCxJQUFPLHFCQUFxQixXQUFZLDZDQUE2QyxDQUFDLENBQUM7QUFFdkYsSUFBTyxJQUFJLFdBQWlCLG9DQUFvQyxDQUFDLENBQUM7QUFJbEUsSUFBTyxlQUFlLFdBQWMsZ0RBQWdELENBQUMsQ0FBQztBQUN0RixJQUFPLE1BQU0sV0FBZ0Isc0NBQXNDLENBQUMsQ0FBQztBQUly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InBhcnNlcnMvQVdEM1BhcnNlclRlc3QuanMiLCJzb3VyY2VSb290IjoiLi90ZXN0cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBc3NldExpYnJhcnlcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL2xpYnJhcnkvQXNzZXRMaWJyYXJ5XCIpO1xuaW1wb3J0IEFzc2V0VHlwZVx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvbGlicmFyeS9Bc3NldFR5cGVcIik7XG5pbXBvcnQgQXNzZXRFdmVudFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvZXZlbnRzL0Fzc2V0RXZlbnRcIik7XG5pbXBvcnQgVVJMUmVxdWVzdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvbmV0L1VSTFJlcXVlc3RcIik7XG5pbXBvcnQgTG9hZGVyRXZlbnRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL2V2ZW50cy9Mb2FkZXJFdmVudFwiKTtcbmltcG9ydCBWZWN0b3IzRFx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9nZW9tL1ZlY3RvcjNEXCIpO1xuaW1wb3J0IE9ydGhvZ3JhcGhpY09mZkNlbnRlclByb2plY3Rpb25cdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL3Byb2plY3Rpb25zL09ydGhvZ3JhcGhpY09mZkNlbnRlclByb2plY3Rpb25cIik7XG5pbXBvcnQgS2V5Ym9hcmRcdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvdWkvS2V5Ym9hcmRcIik7XG5pbXBvcnQgUmVxdWVzdEFuaW1hdGlvbkZyYW1lXHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi91dGlscy9SZXF1ZXN0QW5pbWF0aW9uRnJhbWVcIik7XG5cbmltcG9ydCBWaWV3XHRcdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvY29udGFpbmVycy9WaWV3XCIpO1xuaW1wb3J0IE1lc2hcdFx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9lbnRpdGllcy9NZXNoXCIpO1xuaW1wb3J0IENvbnRhaW5lclx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvY29udGFpbmVycy9EaXNwbGF5T2JqZWN0Q29udGFpbmVyXCIpO1xuaW1wb3J0IEdlb21ldHJ5XHRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL2Jhc2UvR2VvbWV0cnlcIik7XG5pbXBvcnQgSG92ZXJDb250cm9sbGVyXHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvY29udHJvbGxlcnMvSG92ZXJDb250cm9sbGVyXCIpO1xuaW1wb3J0IExvYWRlclx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9jb250YWluZXJzL0xvYWRlclwiKTtcbmltcG9ydCBDb2xvck1hdGVyaWFsXHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvbWF0ZXJpYWxzL0Jhc2ljTWF0ZXJpYWxcIik7XG5pbXBvcnQgUHJpbWl0aXZlQ3ViZVByZWZhYlx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9wcmVmYWJzL1ByaW1pdGl2ZUN1YmVQcmVmYWJcIik7XG5cbmltcG9ydCBEZWZhdWx0UmVuZGVyZXJcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9EZWZhdWx0UmVuZGVyZXJcIik7XG5cbmltcG9ydCBNZXRob2RNYXRlcmlhbFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLW1ldGhvZG1hdGVyaWFscy9saWIvTWV0aG9kTWF0ZXJpYWxcIik7XG5pbXBvcnQgTWV0aG9kUmVuZGVyZXJQb29sXHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLW1ldGhvZG1hdGVyaWFscy9saWIvcG9vbC9NZXRob2RSZW5kZXJlclBvb2xcIik7XG5cbmltcG9ydCBBV0RQYXJzZXJcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXBhcnNlcnMvbGliL0FXRFBhcnNlclwiKTtcbmltcG9ydCBNb3ZpZUNsaXBcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXBsYXllci9saWIvZmwvZGlzcGxheS9Nb3ZpZUNsaXBcIik7XG5cbmNsYXNzIEFXRDNQYXJzZXJUZXN0XG57XG4gICAgLy9lbmdpbmUgdmFyaWFibGVzXG4gICAgcHJpdmF0ZSBfdmlldzogVmlldztcbiAgICBwcml2YXRlIF9jYW1lcmFDb250cm9sbGVyOiBIb3ZlckNvbnRyb2xsZXI7XG5cbiAgICBwcml2YXRlIF9yb290VGltZUxpbmU6IE1vdmllQ2xpcDtcblxuICAgIHByaXZhdGUgX3RpbWVyOiBSZXF1ZXN0QW5pbWF0aW9uRnJhbWU7XG4gICAgcHJpdmF0ZSBfdGltZTogbnVtYmVyID0gMDtcblxuICAgIC8vbmF2aWdhdGlvblxuICAgIHByaXZhdGUgX2xhc3RQYW5BbmdsZTogbnVtYmVyO1xuICAgIHByaXZhdGUgX2xhc3RUaWx0QW5nbGU6IG51bWJlcjtcbiAgICBwcml2YXRlIF9sYXN0TW91c2VYOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfbGFzdE1vdXNlWTogbnVtYmVyO1xuICAgIHByaXZhdGUgX21vdmU6IGJvb2xlYW47XG5cbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKClcbiAgICB7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdsb2JhbCBpbml0aWFsaXNlIGZ1bmN0aW9uXG4gICAgICovXG4gICAgcHJpdmF0ZSBpbml0KCk6IHZvaWRcbiAgICB7XG4gICAgICAgIHRoaXMuaW5pdEVuZ2luZSgpO1xuICAgICAgICB0aGlzLmluaXRPYmplY3RzKCk7XG4gICAgICAgIHRoaXMuaW5pdExpc3RlbmVycygpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEluaXRpYWxpc2UgdGhlIGVuZ2luZVxuICAgICAqL1xuICAgIHByaXZhdGUgaW5pdEVuZ2luZSgpOiB2b2lkXG4gICAge1xuICAgICAgICAvL2NyZWF0ZSB0aGUgdmlld1xuICAgICAgICB0aGlzLl92aWV3ID0gbmV3IFZpZXcobmV3IERlZmF1bHRSZW5kZXJlcihNZXRob2RSZW5kZXJlclBvb2wpKTtcbiAgICAgICAgdGhpcy5fdmlldy5iYWNrZ3JvdW5kQ29sb3IgPSAweGZmZmZmZjtcblxuICAgICAgICAvL2NyZWF0ZSBjdXN0b20gbGVuc1xuICAgICAgICB0aGlzLl92aWV3LmNhbWVyYS5wcm9qZWN0aW9uID0gbmV3IE9ydGhvZ3JhcGhpY09mZkNlbnRlclByb2plY3Rpb24oMCwgNTUwLCAtNDAwLCAwKTtcbiAgICAgICAgdGhpcy5fdmlldy5jYW1lcmEucHJvamVjdGlvbi5mYXIgPSA1MDAwMDA7XG4gICAgICAgIHRoaXMuX3ZpZXcuY2FtZXJhLnByb2plY3Rpb24ubmVhciA9IDAuMTtcblxuICAgICAgICAvL3NldHVwIGNvbnRyb2xsZXIgdG8gYmUgdXNlZCBvbiB0aGUgY2FtZXJhXG4gICAgICAgIHRoaXMuX2NhbWVyYUNvbnRyb2xsZXIgPSBuZXcgSG92ZXJDb250cm9sbGVyKHRoaXMuX3ZpZXcuY2FtZXJhLCBudWxsLCAwLCAwLCAzMDAsIDEwLCA5MCk7XG4gICAgICAgIHRoaXMuX2NhbWVyYUNvbnRyb2xsZXIubG9va0F0UG9zaXRpb24gPSBuZXcgVmVjdG9yM0QoMCwgNTAsIDApO1xuICAgICAgICB0aGlzLl9jYW1lcmFDb250cm9sbGVyLnRpbHRBbmdsZSA9IDA7XG4gICAgICAgIHRoaXMuX2NhbWVyYUNvbnRyb2xsZXIucGFuQW5nbGUgPSAwO1xuICAgICAgICB0aGlzLl9jYW1lcmFDb250cm9sbGVyLm1pblRpbHRBbmdsZSA9IDU7XG4gICAgICAgIHRoaXMuX2NhbWVyYUNvbnRyb2xsZXIubWF4VGlsdEFuZ2xlID0gNjA7XG4gICAgICAgIHRoaXMuX2NhbWVyYUNvbnRyb2xsZXIuYXV0b1VwZGF0ZSA9IGZhbHNlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEluaXRpYWxpc2UgdGhlIHNjZW5lIG9iamVjdHNcbiAgICAgKi9cbiAgICBwcml2YXRlIGluaXRPYmplY3RzKCk6IHZvaWRcbiAgICB7XG4gICAgICAgIEFzc2V0TGlicmFyeS5lbmFibGVQYXJzZXIoQVdEUGFyc2VyKTtcblxuICAgICAgICAvL2tpY2tvZmYgYXNzZXQgbG9hZGluZ1xuICAgICAgICB2YXIgbG9hZGVyOkxvYWRlciA9IG5ldyBMb2FkZXIoKTtcbiAgICAgICAgbG9hZGVyLmFkZEV2ZW50TGlzdGVuZXIoQXNzZXRFdmVudC5BU1NFVF9DT01QTEVURSwgKGV2ZW50OiBBc3NldEV2ZW50KSA9PiB0aGlzLm9uQXNzZXRDb21wbGV0ZShldmVudCkpO1xuICAgICAgICBsb2FkZXIuYWRkRXZlbnRMaXN0ZW5lcihMb2FkZXJFdmVudC5SRVNPVVJDRV9DT01QTEVURSwgKGV2ZW50OiBMb2FkZXJFdmVudCkgPT4gdGhpcy5vblJlc3NvdXJjZUNvbXBsZXRlKGV2ZW50KSk7XG5cbiAgICAgICAgLypcbiAgICAgICAgIHZhciBfY3ViZTpQcmltaXRpdmVDdWJlUHJlZmFiID0gbmV3IFByaW1pdGl2ZUN1YmVQcmVmYWIoMjAuMCwgMjAuMCwgMjAuMCk7XG4gICAgICAgICB2YXIgbmV3bWVzaDI6TWVzaD08IE1lc2g+X2N1YmUuZ2V0TmV3T2JqZWN0KCk7XG4gICAgICAgICAvLyBuZXdtZXNoMi5tYXRlcmlhbD1uZXcgQ29sb3JNYXRlcmlhbCgweGZmMDAwMCwgMS4wKTtcbiAgICAgICAgIC8vbmV3bWVzaDIubWF0ZXJpYWwuYm90aFNpZGVzPXRydWU7XG4gICAgICAgICB2YXIgbWF0VHg6TWV0aG9kTWF0ZXJpYWwgPSBuZXcgTWV0aG9kTWF0ZXJpYWwgKDB4RkYwMDAwKTtcbiAgICAgICAgIG1hdFR4LmJvdGhTaWRlcyA9IHRydWU7XG4gICAgICAgICBuZXdtZXNoMi5tYXRlcmlhbD1tYXRUeDtcbiAgICAgICAgIHRoaXMuX3ZpZXcuc2NlbmUuYWRkQ2hpbGQobmV3bWVzaDIpO1xuICAgICAgICAgY29uc29sZS5sb2coXCJMT0FERVQgQSBHZW9tIG5hbWUgPSBcIikqLztcbiAgICAgICAgbG9hZGVyLmxvYWQobmV3IFVSTFJlcXVlc3QoXCJhc3NldHMvQVdEMy9TY2FyZUNyb3dfb2xkLmF3ZFwiKSk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiU1RBUlQgTE9BRElOR1wiKTtcbiAgICAgICAgLy90aGlzLl92aWV3LnNjZW5lLmFkZENoaWxkKGxvYWRlcik7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSW5pdGlhbGlzZSB0aGUgbGlzdGVuZXJzXG4gICAgICovXG4gICAgcHJpdmF0ZSBpbml0TGlzdGVuZXJzKCk6IHZvaWRcbiAgICB7XG4gICAgICAgIHdpbmRvdy5vbnJlc2l6ZSAgPSAoZXZlbnQpID0+IHRoaXMub25SZXNpemUoZXZlbnQpO1xuXG4gICAgICAgIGRvY3VtZW50Lm9ubW91c2Vkb3duID0gKGV2ZW50KSA9PiB0aGlzLm9uTW91c2VEb3duKGV2ZW50KTtcbiAgICAgICAgZG9jdW1lbnQub25tb3VzZXVwID0gKGV2ZW50KSA9PiB0aGlzLm9uTW91c2VVcChldmVudCk7XG4gICAgICAgIGRvY3VtZW50Lm9ubW91c2Vtb3ZlID0gKGV2ZW50KSA9PiB0aGlzLm9uTW91c2VNb3ZlKGV2ZW50KTtcbiAgICAgICAgZG9jdW1lbnQub25tb3VzZXdoZWVsID0gKGV2ZW50KSA9PiB0aGlzLm9uTW91c2VXaGVlbChldmVudCk7XG5cbiAgICAgICAgdGhpcy5vblJlc2l6ZSgpO1xuXG4gICAgICAgIHRoaXMuX3RpbWVyID0gbmV3IFJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLm9uRW50ZXJGcmFtZSwgdGhpcyk7XG4gICAgICAgIHRoaXMuX3RpbWVyLnN0YXJ0KCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogbG9hZGVyIGxpc3RlbmVyIGZvciBhc3NldCBjb21wbGV0ZSBldmVudHNcbiAgICAgKi9cbiAgICBwcml2YXRlIG9uQXNzZXRDb21wbGV0ZShldmVudDogQXNzZXRFdmVudCk6IHZvaWRcbiAgICB7XG4gICAgICAgIGlmKGV2ZW50LmFzc2V0LmFzc2V0VHlwZSA9PSBBc3NldFR5cGUuVElNRUxJTkUpIHtcbiAgICAgICAgICAgIHRoaXMuX3Jvb3RUaW1lTGluZSA9IDxNb3ZpZUNsaXA+IGV2ZW50LmFzc2V0O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogbG9hZGVyIGxpc3RlbmVyIGZvciBhc3NldCBjb21wbGV0ZSBldmVudHNcbiAgICAgKi9cbiAgICBwcml2YXRlIG9uUmVzc291cmNlQ29tcGxldGUoZXZlbnQ6IExvYWRlckV2ZW50KTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLl9yb290VGltZUxpbmUpIHtcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJMT0FESU5HIEEgUk9PVCBuYW1lID0gXCIgKyB0aGlzLl9yb290VGltZUxpbmUubmFtZSArIFwiIGR1cmF0aW9uPVwiICsgdGhpcy5fcm9vdFRpbWVMaW5lLmR1cmF0aW9uKTtcbiAgICAgICAgICAgIHRoaXMuX3ZpZXcuc2NlbmUuYWRkQ2hpbGQodGhpcy5fcm9vdFRpbWVMaW5lKTtcbiAgICAgICAgICAgIC8vIGF1dG9wbGF5IGxpa2UgaW4gRmxhc2hcbiAgICAgICAgICAgIC8vdGhpcy5fcm9vdFRpbWVMaW5lLnBsYXkoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlbmRlciBsb29wXG4gICAgICovXG4gICAgcHJpdmF0ZSBvbkVudGVyRnJhbWUoZHQ6IG51bWJlcik6IHZvaWQge1xuICAgICAgICB0aGlzLl90aW1lICs9IGR0O1xuXG4gICAgICAgIC8vdXBkYXRlIGNhbWVyYSBjb250cm9sZXJcbiAgICAgICAgdGhpcy5fY2FtZXJhQ29udHJvbGxlci51cGRhdGUoKTtcblxuICAgICAgICBpZiAodGhpcy5fcm9vdFRpbWVMaW5lICE9IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcIlJFTkRFUiA9IFwiKTtcbiAgICAgICAgICAgIHRoaXMuX3Jvb3RUaW1lTGluZS51cGRhdGUoZHQpO1xuICAgICAgICB9XG4gICAgICAgIC8vY29uc29sZS5sb2coXCJSRU5ERVIgPSBcIik7XG4gICAgICAgIC8vdXBkYXRlIHZpZXdcbiAgICAgICAgdGhpcy5fdmlldy5yZW5kZXIoKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIG9uTW91c2VEb3duKGV2ZW50KTogdm9pZFxuICAgIHtcbiAgICAgICAgdGhpcy5fbGFzdFBhbkFuZ2xlID0gdGhpcy5fY2FtZXJhQ29udHJvbGxlci5wYW5BbmdsZTtcbiAgICAgICAgdGhpcy5fbGFzdFRpbHRBbmdsZSA9IHRoaXMuX2NhbWVyYUNvbnRyb2xsZXIudGlsdEFuZ2xlO1xuICAgICAgICB0aGlzLl9sYXN0TW91c2VYID0gZXZlbnQuY2xpZW50WDtcbiAgICAgICAgdGhpcy5fbGFzdE1vdXNlWSA9IGV2ZW50LmNsaWVudFk7XG4gICAgICAgIHRoaXMuX21vdmUgPSB0cnVlO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25Nb3VzZVVwKGV2ZW50KTogdm9pZFxuICAgIHtcbiAgICAgICAgdGhpcy5fbW92ZSA9IGZhbHNlO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25Nb3VzZU1vdmUoZXZlbnQpXG4gICAge1xuICAgICAgICBpZiAodGhpcy5fbW92ZSkge1xuICAgICAgICAgICAgdGhpcy5fY2FtZXJhQ29udHJvbGxlci5wYW5BbmdsZSA9IDAuMyooZXZlbnQuY2xpZW50WCAtIHRoaXMuX2xhc3RNb3VzZVgpICsgdGhpcy5fbGFzdFBhbkFuZ2xlO1xuICAgICAgICAgICAgdGhpcy5fY2FtZXJhQ29udHJvbGxlci50aWx0QW5nbGUgPSAwLjMqKGV2ZW50LmNsaWVudFkgLSB0aGlzLl9sYXN0TW91c2VZKSArIHRoaXMuX2xhc3RUaWx0QW5nbGU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIG9uTW91c2VXaGVlbChldmVudCk6IHZvaWRcbiAgICB7XG4gICAgICAgIHRoaXMuX2NhbWVyYUNvbnRyb2xsZXIuZGlzdGFuY2UgLT0gZXZlbnQud2hlZWxEZWx0YSAqIDU7XG5cbiAgICAgICAgaWYgKHRoaXMuX2NhbWVyYUNvbnRyb2xsZXIuZGlzdGFuY2UgPCAxMDApIHtcbiAgICAgICAgICAgIHRoaXMuX2NhbWVyYUNvbnRyb2xsZXIuZGlzdGFuY2UgPSAxMDA7XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5fY2FtZXJhQ29udHJvbGxlci5kaXN0YW5jZSA+IDIwMDApIHtcbiAgICAgICAgICAgIHRoaXMuX2NhbWVyYUNvbnRyb2xsZXIuZGlzdGFuY2UgPSAyMDAwO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvblJlc2l6ZShldmVudCA9IG51bGwpOiB2b2lkXG4gICAge1xuICAgICAgICB0aGlzLl92aWV3LnkgICAgICAgICA9IDA7XG4gICAgICAgIHRoaXMuX3ZpZXcueCAgICAgICAgID0gMDtcbiAgICAgICAgdGhpcy5fdmlldy53aWR0aCAgICAgPSB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgICAgICAgdGhpcy5fdmlldy5oZWlnaHQgICAgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gICAgfVxufSJdfQ==