/*

 AWD3 file loading example in AwayJS

 Demonstrates:

 How to use the Loader object to load an embedded internal awd model.

 Code by Rob Bateman
 rob@infiniteturtles.co.uk
 http://www.infiniteturtles.co.uk

 This code is distributed under the MIT License

 Copyright (c) The Away Foundation http://www.theawayfoundation.org

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the “Software”), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.

 */
var AssetLibrary = require("awayjs-core/lib/library/AssetLibrary");
var Loader = require("awayjs-core/lib/library/Loader");
var AssetEvent = require("awayjs-core/lib/events/AssetEvent");
var URLRequest = require("awayjs-core/lib/net/URLRequest");
var LoaderEvent = require("awayjs-core/lib/events/LoaderEvent");
var OrthographicProjection = require("awayjs-core/lib/projections/OrthographicProjection");
var RequestAnimationFrame = require("awayjs-core/lib/utils/RequestAnimationFrame");
var View = require("awayjs-display/lib/containers/View");
var MovieClip = require("awayjs-display/lib/entities/MovieClip");
var HoverController = require("awayjs-display/lib/controllers/HoverController");
var SceneGraphPartition = require("awayjs-display/lib/partition/SceneGraphPartition");
var DefaultRenderer = require("awayjs-renderergl/lib/DefaultRenderer");
var AWDParser = require("awayjs-parsers/lib/AWDParser");
var CoordinateSystem = require("awayjs-core/lib/projections/CoordinateSystem");
var PerspectiveProjection = require("awayjs-core/lib/projections/PerspectiveProjection");
var Camera = require("awayjs-display/lib/entities/Camera");
var AWD3ParserTest = (function () {
    /**
     * Constructor
     */
    function AWD3ParserTest() {
        this._time = 0;
        this.init();
    }
    /**
     * Global initialise function
     */
    AWD3ParserTest.prototype.init = function () {
        this.initEngine();
        this.initObjects();
        this.initListeners();
    };
    /**
     * Initialise the engine
     */
    AWD3ParserTest.prototype.initEngine = function () {
        //create the view
        this._view = new View(new DefaultRenderer());
        //this._view.renderer.renderableSorter = new RenderableNullSort();
        this._view.backgroundColor = 0xffffff;
        //this._view.backgroundColor = parseInt(document.getElementById("bgColor").innerHTML.replace("#", "0x"));
        this._stage_width = 550; //parseInt(document.getElementById("awdWidth").innerHTML);
        this._stage_height = 400; //parseInt(document.getElementById("awdHeight").innerHTML);
        this._isperspective = true;
        this._projection = new PerspectiveProjection();
        this._projection.coordinateSystem = CoordinateSystem.RIGHT_HANDED;
        this._projection.focalLength = 1000;
        this._projection.preserveFocalLength = true;
        this._projection.originX = 0.5;
        this._projection.originY = 0.5;
        this._camera_perspective = new Camera();
        this._camera_perspective.projection = this._projection;
        //this._projection.far = 500000;
        this._hoverControl = new HoverController(this._camera_perspective, null, 180, 0, 1000);
        this._ortho_projection = new OrthographicProjection(500);
        this._ortho_projection.coordinateSystem = CoordinateSystem.RIGHT_HANDED;
        this._ortho_projection.far = 500000;
        this._ortho_projection.near = 0.1;
        this._ortho_projection.originX = 0.5;
        this._ortho_projection.originY = 0.5;
        this._camera_ortho = new Camera();
        this._camera_ortho.projection = this._ortho_projection;
        this._view.camera = this._camera_perspective;
        this._camera_ortho.x = 0;
        this._camera_ortho.y = 0;
        this._camera_ortho.scaleY = -1;
        this._camera_ortho.z = 0;
    };
    /**
     * Initialise the scene objects
     */
    AWD3ParserTest.prototype.initObjects = function () {
        var _this = this;
        AssetLibrary.enableParser(AWDParser);
        //kickoff asset loading
        var loader = new Loader();
        loader.addEventListener(AssetEvent.ASSET_COMPLETE, function (event) { return _this.onAssetComplete(event); });
        loader.addEventListener(LoaderEvent.LOAD_COMPLETE, function (event) { return _this.onLoadComplete(event); });
        //loader.load(new URLRequest(document.getElementById("awdPath").innerHTML));
        loader.load(new URLRequest("assets/AWD3/ScareCrow.awd"));
        //loader.load(new URLRequest("assets/AWD3/NestedTween.awd"));
        //loader.load(new URLRequest("assets/AWD3/SimpleShape.awd"));
        //loader.load(new URLRequest("assets/AWD3/ComplexShape.awd"));
        //loader.load(new URLRequest("assets/AWD3/Simple_mask_test.awd"));
    };
    /**
     * Initialise the listeners
     */
    AWD3ParserTest.prototype.initListeners = function () {
        var _this = this;
        window.onresize = function (event) { return _this.onResize(event); };
        document.onkeydown = function (event) { return _this.onKeyDown(event); };
        document.onmousedown = function (event) { return _this.onMouseDown(event); };
        document.onmouseup = function (event) { return _this.onMouseUp(event); };
        document.onmousemove = function (event) { return _this.onMouseMove(event); };
        document.onmousewheel = function (event) { return _this.onMouseWheel(event); };
        this.onResize();
        this._timer = new RequestAnimationFrame(this.onEnterFrame, this);
        this._timer.start();
    };
    /**
     * loader listener for asset complete events
     */
    AWD3ParserTest.prototype.onAssetComplete = function (event) {
        if (event.asset.isAsset(MovieClip)) {
            this._rootTimeLine = event.asset;
            this._rootTimeLine.partition = new SceneGraphPartition();
        }
    };
    /**
     * loader listener for asset complete events
     */
    AWD3ParserTest.prototype.onLoadComplete = function (event) {
        if (this._rootTimeLine) {
            //console.log("LOADING A ROOT name = " + this._rootTimeLine.name + " duration=" + this._rootTimeLine.duration);
            this._view.scene.addChild(this._rootTimeLine);
            this._rootTimeLine.x = -this._stage_width / 2;
            this._rootTimeLine.y = -this._stage_height / 2;
        }
    };
    /**
     * Render loop
     */
    AWD3ParserTest.prototype.onEnterFrame = function (dt) {
        this._time += dt;
        //update camera controler
        // this._cameraController.update();
        if (this._rootTimeLine != undefined) {
            //console.log("RENDER = ");
            this._rootTimeLine.update();
        }
        //console.log("RENDER = ");
        //update view
        this._view.render();
    };
    AWD3ParserTest.prototype.onKeyDown = function (event) {
        console.log("keycode = " + event.keyCode);
        if (event.keyCode == 80) {
            this._isperspective = true;
            this._view.camera = this._camera_perspective;
        }
        if (event.keyCode == 79) {
            this._isperspective = false;
            this._view.camera = this._camera_ortho;
        }
        if (event.keyCode == 81) {
            if (this._isperspective) {
                this._hoverControl.distance += 5;
            }
            else {
                this._ortho_projection.projectionHeight += 5;
            }
        }
        else if (event.keyCode == 87) {
            if (this._isperspective) {
                this._hoverControl.distance -= 5;
            }
            else {
                this._ortho_projection.projectionHeight -= 5;
            }
        }
        if (event.keyCode == 65) {
            if (this._isperspective) {
                this._hoverControl.distance += 50;
            }
            else {
                this._ortho_projection.projectionHeight += 50;
            }
        }
        else if (event.keyCode == 83) {
            if (this._isperspective) {
                this._hoverControl.distance -= 50;
            }
            else {
                this._ortho_projection.projectionHeight -= 50;
            }
        }
    };
    AWD3ParserTest.prototype.onMouseDown = function (event) {
        this._lastPanAngle = this._hoverControl.panAngle;
        this._lastTiltAngle = this._hoverControl.tiltAngle;
        this._lastMouseX = event.clientX;
        this._lastMouseY = event.clientY;
        this._move = true;
    };
    AWD3ParserTest.prototype.onMouseUp = function (event) {
        this._move = false;
    };
    AWD3ParserTest.prototype.onMouseMove = function (event) {
        if (this._move) {
            if (this._isperspective) {
                this._hoverControl.panAngle = 0.3 * (event.clientX - this._lastMouseX) + this._lastPanAngle;
                this._hoverControl.tiltAngle = -0.3 * (event.clientY - this._lastMouseY) + this._lastTiltAngle;
            }
            else {
                if (event.clientX > (this._lastMouseX + 10))
                    this._camera_ortho.x -= 10;
                else if (event.clientX > this._lastMouseX)
                    this._camera_ortho.x--;
                else if (event.clientX < (this._lastMouseX - 10))
                    this._camera_ortho.x += 10;
                else if (event.clientX < this._lastMouseX)
                    this._camera_ortho.x++;
                if (event.clientY > (this._lastMouseY + 10))
                    this._camera_ortho.y -= 10;
                else if (event.clientY > this._lastMouseY)
                    this._camera_ortho.y--;
                else if (event.clientY < (this._lastMouseY - 10))
                    this._camera_ortho.y += 10;
                else if (event.clientY < this._lastMouseY)
                    this._camera_ortho.y++;
                this._lastMouseX = event.clientX;
                this._lastMouseY = event.clientY;
            }
        }
    };
    AWD3ParserTest.prototype.onMouseWheel = function (event) {
        if (this._isperspective) {
            this._hoverControl.distance -= event.wheelDelta * 5;
            if (this._hoverControl.distance < 100) {
                this._hoverControl.distance = 100;
            }
        }
        else {
            this._ortho_projection.projectionHeight -= event.wheelDelta * 5;
            if (this._ortho_projection.projectionHeight < 5) {
                this._ortho_projection.projectionHeight = 5;
            }
        }
    };
    AWD3ParserTest.prototype.onResize = function (event) {
        if (event === void 0) { event = null; }
        this._view.y = 0;
        this._view.x = 0;
        this._view.width = window.innerWidth;
        this._view.height = window.innerHeight;
    };
    return AWD3ParserTest;
})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnNlcnMvQVdEM1BhcnNlclRlc3QudHMiXSwibmFtZXMiOlsiQVdEM1BhcnNlclRlc3QiLCJBV0QzUGFyc2VyVGVzdC5jb25zdHJ1Y3RvciIsIkFXRDNQYXJzZXJUZXN0LmluaXQiLCJBV0QzUGFyc2VyVGVzdC5pbml0RW5naW5lIiwiQVdEM1BhcnNlclRlc3QuaW5pdE9iamVjdHMiLCJBV0QzUGFyc2VyVGVzdC5pbml0TGlzdGVuZXJzIiwiQVdEM1BhcnNlclRlc3Qub25Bc3NldENvbXBsZXRlIiwiQVdEM1BhcnNlclRlc3Qub25Mb2FkQ29tcGxldGUiLCJBV0QzUGFyc2VyVGVzdC5vbkVudGVyRnJhbWUiLCJBV0QzUGFyc2VyVGVzdC5vbktleURvd24iLCJBV0QzUGFyc2VyVGVzdC5vbk1vdXNlRG93biIsIkFXRDNQYXJzZXJUZXN0Lm9uTW91c2VVcCIsIkFXRDNQYXJzZXJUZXN0Lm9uTW91c2VNb3ZlIiwiQVdEM1BhcnNlclRlc3Qub25Nb3VzZVdoZWVsIiwiQVdEM1BhcnNlclRlc3Qub25SZXNpemUiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBa0NHO0FBRUgsSUFBTyxZQUFZLFdBQWUsc0NBQXNDLENBQUMsQ0FBQztBQUMxRSxJQUFPLE1BQU0sV0FBZ0IsZ0NBQWdDLENBQUMsQ0FBQztBQUMvRCxJQUFPLFVBQVUsV0FBZSxtQ0FBbUMsQ0FBQyxDQUFDO0FBQ3JFLElBQU8sVUFBVSxXQUFlLGdDQUFnQyxDQUFDLENBQUM7QUFDbEUsSUFBTyxXQUFXLFdBQWUsb0NBQW9DLENBQUMsQ0FBQztBQUd2RSxJQUFPLHNCQUFzQixXQUFZLG9EQUFvRCxDQUFDLENBQUM7QUFFL0YsSUFBTyxxQkFBcUIsV0FBWSw2Q0FBNkMsQ0FBQyxDQUFDO0FBR3ZGLElBQU8sSUFBSSxXQUFpQixvQ0FBb0MsQ0FBQyxDQUFDO0FBRWxFLElBQU8sU0FBUyxXQUFlLHVDQUF1QyxDQUFDLENBQUM7QUFFeEUsSUFBTyxlQUFl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QTtBQUFEQSxDQXhSQSxBQXdSQ0EsSUFBQSIsImZpbGUiOiJwYXJzZXJzL0FXRDNQYXJzZXJUZXN0LmpzIiwic291cmNlUm9vdCI6Ii4vdGVzdHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuXG4gQVdEMyBmaWxlIGxvYWRpbmcgZXhhbXBsZSBpbiBBd2F5SlNcblxuIERlbW9uc3RyYXRlczpcblxuIEhvdyB0byB1c2UgdGhlIExvYWRlciBvYmplY3QgdG8gbG9hZCBhbiBlbWJlZGRlZCBpbnRlcm5hbCBhd2QgbW9kZWwuXG5cbiBDb2RlIGJ5IFJvYiBCYXRlbWFuXG4gcm9iQGluZmluaXRldHVydGxlcy5jby51a1xuIGh0dHA6Ly93d3cuaW5maW5pdGV0dXJ0bGVzLmNvLnVrXG5cbiBUaGlzIGNvZGUgaXMgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlXG5cbiBDb3B5cmlnaHQgKGMpIFRoZSBBd2F5IEZvdW5kYXRpb24gaHR0cDovL3d3dy50aGVhd2F5Zm91bmRhdGlvbi5vcmdcblxuIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbiBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSDigJxTb2Z0d2FyZeKAnSksIHRvIGRlYWxcbiBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG5cbiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuXG4gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIOKAnEFTIElT4oCdLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuIFRIRSBTT0ZUV0FSRS5cblxuICovXG5cbmltcG9ydCBBc3NldExpYnJhcnlcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL2xpYnJhcnkvQXNzZXRMaWJyYXJ5XCIpO1xuaW1wb3J0IExvYWRlclx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9saWJyYXJ5L0xvYWRlclwiKTtcbmltcG9ydCBBc3NldEV2ZW50XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9ldmVudHMvQXNzZXRFdmVudFwiKTtcbmltcG9ydCBVUkxSZXF1ZXN0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9uZXQvVVJMUmVxdWVzdFwiKTtcbmltcG9ydCBMb2FkZXJFdmVudFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvZXZlbnRzL0xvYWRlckV2ZW50XCIpO1xuaW1wb3J0IFZlY3RvcjNEXHRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL2dlb20vVmVjdG9yM0RcIik7XG5pbXBvcnQgT3J0aG9ncmFwaGljT2ZmQ2VudGVyUHJvamVjdGlvblx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvcHJvamVjdGlvbnMvT3J0aG9ncmFwaGljT2ZmQ2VudGVyUHJvamVjdGlvblwiKTtcbmltcG9ydCBPcnRob2dyYXBoaWNQcm9qZWN0aW9uXHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9wcm9qZWN0aW9ucy9PcnRob2dyYXBoaWNQcm9qZWN0aW9uXCIpO1xuaW1wb3J0IEtleWJvYXJkXHRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL3VpL0tleWJvYXJkXCIpO1xuaW1wb3J0IFJlcXVlc3RBbmltYXRpb25GcmFtZVx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvdXRpbHMvUmVxdWVzdEFuaW1hdGlvbkZyYW1lXCIpO1xuXG5pbXBvcnQgR2VvbWV0cnlcdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvYmFzZS9HZW9tZXRyeVwiKTtcbmltcG9ydCBWaWV3XHRcdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvY29udGFpbmVycy9WaWV3XCIpO1xuaW1wb3J0IE1lc2hcdFx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9lbnRpdGllcy9NZXNoXCIpO1xuaW1wb3J0IE1vdmllQ2xpcFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvZW50aXRpZXMvTW92aWVDbGlwXCIpO1xuaW1wb3J0IENvbnRhaW5lclx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvY29udGFpbmVycy9EaXNwbGF5T2JqZWN0Q29udGFpbmVyXCIpO1xuaW1wb3J0IEhvdmVyQ29udHJvbGxlclx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL2NvbnRyb2xsZXJzL0hvdmVyQ29udHJvbGxlclwiKTtcbmltcG9ydCBMb2FkZXJDb250YWluZXJcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9jb250YWluZXJzL0xvYWRlckNvbnRhaW5lclwiKTtcbmltcG9ydCBTY2VuZUdyYXBoUGFydGl0aW9uXHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL3BhcnRpdGlvbi9TY2VuZUdyYXBoUGFydGl0aW9uXCIpO1xuaW1wb3J0IFByaW1pdGl2ZUN1YmVQcmVmYWJcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvcHJlZmFicy9QcmltaXRpdmVDdWJlUHJlZmFiXCIpO1xuXG5pbXBvcnQgRGVmYXVsdFJlbmRlcmVyXHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtcmVuZGVyZXJnbC9saWIvRGVmYXVsdFJlbmRlcmVyXCIpO1xuaW1wb3J0IFJlbmRlcmFibGVOdWxsU29ydFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9zb3J0L1JlbmRlcmFibGVOdWxsU29ydFwiKTtcblxuaW1wb3J0IE1ldGhvZE1hdGVyaWFsXHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtbWV0aG9kbWF0ZXJpYWxzL2xpYi9NZXRob2RNYXRlcmlhbFwiKTtcblxuaW1wb3J0IEFXRFBhcnNlclx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtcGFyc2Vycy9saWIvQVdEUGFyc2VyXCIpO1xuXG5pbXBvcnQgQ29vcmRpbmF0ZVN5c3RlbSA9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvcHJvamVjdGlvbnMvQ29vcmRpbmF0ZVN5c3RlbVwiKTtcbmltcG9ydCBQZXJzcGVjdGl2ZVByb2plY3Rpb24gPSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL3Byb2plY3Rpb25zL1BlcnNwZWN0aXZlUHJvamVjdGlvblwiKTtcbmltcG9ydCBDYW1lcmEgPSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL2VudGl0aWVzL0NhbWVyYVwiKTtcblxuY2xhc3MgQVdEM1BhcnNlclRlc3Rcbntcblx0Ly9lbmdpbmUgdmFyaWFibGVzXG5cdHByaXZhdGUgX3ZpZXc6VmlldztcblxuXHRwcml2YXRlIF9yb290VGltZUxpbmU6TW92aWVDbGlwO1xuXG5cdHByaXZhdGUgX3RpbWVyOlJlcXVlc3RBbmltYXRpb25GcmFtZTtcblx0cHJpdmF0ZSBfdGltZTpudW1iZXIgPSAwO1xuXG5cdC8vbmF2aWdhdGlvblxuXHRwcml2YXRlIF9sYXN0UGFuQW5nbGU6bnVtYmVyO1xuXHRwcml2YXRlIF9sYXN0VGlsdEFuZ2xlOm51bWJlcjtcblx0cHJpdmF0ZSBfbGFzdE1vdXNlWDpudW1iZXI7XG5cdHByaXZhdGUgX2xhc3RNb3VzZVk6bnVtYmVyO1xuXHRwcml2YXRlIF9tb3ZlOmJvb2xlYW47XG5cdHByaXZhdGUgX2lzcGVyc3BlY3RpdmU6Ym9vbGVhbjtcblx0cHJpdmF0ZSBfcHJvamVjdGlvbjpQZXJzcGVjdGl2ZVByb2plY3Rpb247XG5cdHByaXZhdGUgX29ydGhvX3Byb2plY3Rpb246T3J0aG9ncmFwaGljUHJvamVjdGlvbjtcblx0cHJpdmF0ZSBfaG92ZXJDb250cm9sOkhvdmVyQ29udHJvbGxlcjtcblx0cHJpdmF0ZSBfY2FtZXJhX3BlcnNwZWN0aXZlOkNhbWVyYTtcblx0cHJpdmF0ZSBfY2FtZXJhX29ydGhvOkNhbWVyYTtcblx0cHJpdmF0ZSBfc3RhZ2Vfd2lkdGg6bnVtYmVyO1xuXHRwcml2YXRlIF9zdGFnZV9oZWlnaHQ6bnVtYmVyO1xuXG5cdC8qKlxuXHQgKiBDb25zdHJ1Y3RvclxuXHQgKi9cblx0Y29uc3RydWN0b3IoKVxuXHR7XG5cdFx0dGhpcy5pbml0KCk7XG5cdH1cblxuXHQvKipcblx0ICogR2xvYmFsIGluaXRpYWxpc2UgZnVuY3Rpb25cblx0ICovXG5cdHByaXZhdGUgaW5pdCgpXG5cdHtcblx0XHR0aGlzLmluaXRFbmdpbmUoKTtcblx0XHR0aGlzLmluaXRPYmplY3RzKCk7XG5cdFx0dGhpcy5pbml0TGlzdGVuZXJzKCk7XG5cdH1cblxuXHQvKipcblx0ICogSW5pdGlhbGlzZSB0aGUgZW5naW5lXG5cdCAqL1xuXHRwcml2YXRlIGluaXRFbmdpbmUoKVxuXHR7XG5cdFx0Ly9jcmVhdGUgdGhlIHZpZXdcblx0XHR0aGlzLl92aWV3ID0gbmV3IFZpZXcobmV3IERlZmF1bHRSZW5kZXJlcigpKTtcblx0XHQvL3RoaXMuX3ZpZXcucmVuZGVyZXIucmVuZGVyYWJsZVNvcnRlciA9IG5ldyBSZW5kZXJhYmxlTnVsbFNvcnQoKTtcblx0XHR0aGlzLl92aWV3LmJhY2tncm91bmRDb2xvciA9IDB4ZmZmZmZmO1xuXHRcdC8vdGhpcy5fdmlldy5iYWNrZ3JvdW5kQ29sb3IgPSBwYXJzZUludChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJnQ29sb3JcIikuaW5uZXJIVE1MLnJlcGxhY2UoXCIjXCIsIFwiMHhcIikpO1xuXHRcdHRoaXMuX3N0YWdlX3dpZHRoID0gNTUwOyAvL3BhcnNlSW50KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYXdkV2lkdGhcIikuaW5uZXJIVE1MKTtcblx0XHR0aGlzLl9zdGFnZV9oZWlnaHQgPSA0MDA7IC8vcGFyc2VJbnQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhd2RIZWlnaHRcIikuaW5uZXJIVE1MKTtcblx0XHR0aGlzLl9pc3BlcnNwZWN0aXZlPXRydWU7XG5cdFx0dGhpcy5fcHJvamVjdGlvbiA9IG5ldyBQZXJzcGVjdGl2ZVByb2plY3Rpb24oKTtcblx0XHR0aGlzLl9wcm9qZWN0aW9uLmNvb3JkaW5hdGVTeXN0ZW0gPSBDb29yZGluYXRlU3lzdGVtLlJJR0hUX0hBTkRFRDtcblx0XHR0aGlzLl9wcm9qZWN0aW9uLmZvY2FsTGVuZ3RoID0gMTAwMDtcblx0XHR0aGlzLl9wcm9qZWN0aW9uLnByZXNlcnZlRm9jYWxMZW5ndGggPSB0cnVlO1xuXHRcdHRoaXMuX3Byb2plY3Rpb24ub3JpZ2luWCA9IDAuNTtcblx0XHR0aGlzLl9wcm9qZWN0aW9uLm9yaWdpblkgPSAwLjU7XG5cdFx0dGhpcy5fY2FtZXJhX3BlcnNwZWN0aXZlID0gbmV3IENhbWVyYSgpO1xuXHRcdHRoaXMuX2NhbWVyYV9wZXJzcGVjdGl2ZS5wcm9qZWN0aW9uID0gdGhpcy5fcHJvamVjdGlvbjtcblx0XHQvL3RoaXMuX3Byb2plY3Rpb24uZmFyID0gNTAwMDAwO1xuXHRcdHRoaXMuX2hvdmVyQ29udHJvbCA9IG5ldyBIb3ZlckNvbnRyb2xsZXIodGhpcy5fY2FtZXJhX3BlcnNwZWN0aXZlLCBudWxsLCAxODAsIDAsIDEwMDApO1xuXHRcdHRoaXMuX29ydGhvX3Byb2plY3Rpb24gPSBuZXcgT3J0aG9ncmFwaGljUHJvamVjdGlvbig1MDApO1xuXHRcdHRoaXMuX29ydGhvX3Byb2plY3Rpb24uY29vcmRpbmF0ZVN5c3RlbSA9IENvb3JkaW5hdGVTeXN0ZW0uUklHSFRfSEFOREVEO1xuXHRcdHRoaXMuX29ydGhvX3Byb2plY3Rpb24uZmFyID0gNTAwMDAwO1xuXHRcdHRoaXMuX29ydGhvX3Byb2plY3Rpb24ubmVhciA9IDAuMTtcblx0XHR0aGlzLl9vcnRob19wcm9qZWN0aW9uLm9yaWdpblggPSAwLjU7XG5cdFx0dGhpcy5fb3J0aG9fcHJvamVjdGlvbi5vcmlnaW5ZID0gMC41O1xuXHRcdHRoaXMuX2NhbWVyYV9vcnRobyA9IG5ldyBDYW1lcmEoKTtcblx0XHR0aGlzLl9jYW1lcmFfb3J0aG8ucHJvamVjdGlvbiA9IHRoaXMuX29ydGhvX3Byb2plY3Rpb247XG5cdFx0dGhpcy5fdmlldy5jYW1lcmEgPSB0aGlzLl9jYW1lcmFfcGVyc3BlY3RpdmU7XG5cdFx0dGhpcy5fY2FtZXJhX29ydGhvLnggPSAwO1xuXHRcdHRoaXMuX2NhbWVyYV9vcnRoby55ID0gMDtcblx0XHR0aGlzLl9jYW1lcmFfb3J0aG8uc2NhbGVZID0gLTE7XG5cdFx0dGhpcy5fY2FtZXJhX29ydGhvLnogPSAwO1xuXHR9XG5cblx0LyoqXG5cdCAqIEluaXRpYWxpc2UgdGhlIHNjZW5lIG9iamVjdHNcblx0ICovXG5cdHByaXZhdGUgaW5pdE9iamVjdHMoKVxuXHR7XG5cdFx0QXNzZXRMaWJyYXJ5LmVuYWJsZVBhcnNlcihBV0RQYXJzZXIpO1xuXG5cdFx0Ly9raWNrb2ZmIGFzc2V0IGxvYWRpbmdcblx0XHR2YXIgbG9hZGVyOkxvYWRlciA9IG5ldyBMb2FkZXIoKTtcblx0XHRsb2FkZXIuYWRkRXZlbnRMaXN0ZW5lcihBc3NldEV2ZW50LkFTU0VUX0NPTVBMRVRFLCAoZXZlbnQ6QXNzZXRFdmVudCkgPT4gdGhpcy5vbkFzc2V0Q29tcGxldGUoZXZlbnQpKTtcblx0XHRsb2FkZXIuYWRkRXZlbnRMaXN0ZW5lcihMb2FkZXJFdmVudC5MT0FEX0NPTVBMRVRFLCAoZXZlbnQ6TG9hZGVyRXZlbnQpID0+IHRoaXMub25Mb2FkQ29tcGxldGUoZXZlbnQpKTtcblxuXG5cdFx0Ly9sb2FkZXIubG9hZChuZXcgVVJMUmVxdWVzdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImF3ZFBhdGhcIikuaW5uZXJIVE1MKSk7XG5cdFx0bG9hZGVyLmxvYWQobmV3IFVSTFJlcXVlc3QoXCJhc3NldHMvQVdEMy9TY2FyZUNyb3cuYXdkXCIpKTtcblx0XHQvL2xvYWRlci5sb2FkKG5ldyBVUkxSZXF1ZXN0KFwiYXNzZXRzL0FXRDMvTmVzdGVkVHdlZW4uYXdkXCIpKTtcblx0XHQvL2xvYWRlci5sb2FkKG5ldyBVUkxSZXF1ZXN0KFwiYXNzZXRzL0FXRDMvU2ltcGxlU2hhcGUuYXdkXCIpKTtcblx0XHQvL2xvYWRlci5sb2FkKG5ldyBVUkxSZXF1ZXN0KFwiYXNzZXRzL0FXRDMvQ29tcGxleFNoYXBlLmF3ZFwiKSk7XG5cdFx0Ly9sb2FkZXIubG9hZChuZXcgVVJMUmVxdWVzdChcImFzc2V0cy9BV0QzL1NpbXBsZV9tYXNrX3Rlc3QuYXdkXCIpKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBJbml0aWFsaXNlIHRoZSBsaXN0ZW5lcnNcblx0ICovXG5cdHByaXZhdGUgaW5pdExpc3RlbmVycygpXG5cdHtcblx0XHR3aW5kb3cub25yZXNpemUgID0gKGV2ZW50KSA9PiB0aGlzLm9uUmVzaXplKGV2ZW50KTtcblxuXHRcdGRvY3VtZW50Lm9ua2V5ZG93biA9IChldmVudCkgPT4gdGhpcy5vbktleURvd24oZXZlbnQpO1xuXHRcdGRvY3VtZW50Lm9ubW91c2Vkb3duID0gKGV2ZW50KSA9PiB0aGlzLm9uTW91c2VEb3duKGV2ZW50KTtcblx0XHRkb2N1bWVudC5vbm1vdXNldXAgPSAoZXZlbnQpID0+IHRoaXMub25Nb3VzZVVwKGV2ZW50KTtcblx0XHRkb2N1bWVudC5vbm1vdXNlbW92ZSA9IChldmVudCkgPT4gdGhpcy5vbk1vdXNlTW92ZShldmVudCk7XG5cdFx0ZG9jdW1lbnQub25tb3VzZXdoZWVsID0gKGV2ZW50KSA9PiB0aGlzLm9uTW91c2VXaGVlbChldmVudCk7XG5cblx0XHR0aGlzLm9uUmVzaXplKCk7XG5cblx0XHR0aGlzLl90aW1lciA9IG5ldyBSZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5vbkVudGVyRnJhbWUsIHRoaXMpO1xuXHRcdHRoaXMuX3RpbWVyLnN0YXJ0KCk7XG5cdH1cblxuXHQvKipcblx0ICogbG9hZGVyIGxpc3RlbmVyIGZvciBhc3NldCBjb21wbGV0ZSBldmVudHNcblx0ICovXG5cdHByaXZhdGUgb25Bc3NldENvbXBsZXRlKGV2ZW50OkFzc2V0RXZlbnQpXG5cdHtcblx0XHRpZihldmVudC5hc3NldC5pc0Fzc2V0KE1vdmllQ2xpcCkpIHtcblx0XHRcdHRoaXMuX3Jvb3RUaW1lTGluZSA9IDxNb3ZpZUNsaXA+IGV2ZW50LmFzc2V0O1xuXHRcdFx0dGhpcy5fcm9vdFRpbWVMaW5lLnBhcnRpdGlvbiA9IG5ldyBTY2VuZUdyYXBoUGFydGl0aW9uKCk7XG5cdFx0fVxuXHR9XG5cblx0LyoqXG5cdCAqIGxvYWRlciBsaXN0ZW5lciBmb3IgYXNzZXQgY29tcGxldGUgZXZlbnRzXG5cdCAqL1xuXHRwcml2YXRlIG9uTG9hZENvbXBsZXRlKGV2ZW50OkxvYWRlckV2ZW50KVxuXHR7XG5cdFx0aWYgKHRoaXMuX3Jvb3RUaW1lTGluZSkge1xuXHRcdFx0Ly9jb25zb2xlLmxvZyhcIkxPQURJTkcgQSBST09UIG5hbWUgPSBcIiArIHRoaXMuX3Jvb3RUaW1lTGluZS5uYW1lICsgXCIgZHVyYXRpb249XCIgKyB0aGlzLl9yb290VGltZUxpbmUuZHVyYXRpb24pO1xuXHRcdFx0dGhpcy5fdmlldy5zY2VuZS5hZGRDaGlsZCh0aGlzLl9yb290VGltZUxpbmUpO1xuXHRcdFx0dGhpcy5fcm9vdFRpbWVMaW5lLng9LXRoaXMuX3N0YWdlX3dpZHRoLzI7XG5cdFx0XHR0aGlzLl9yb290VGltZUxpbmUueT0tdGhpcy5fc3RhZ2VfaGVpZ2h0LzI7XG5cdFx0XHQvLyBhdXRvcGxheSBsaWtlIGluIEZsYXNoXG5cdFx0XHQvL3RoaXMuX3Jvb3RUaW1lTGluZS5wbGF5KCk7XG5cdFx0fVxuXHR9XG5cblx0LyoqXG5cdCAqIFJlbmRlciBsb29wXG5cdCAqL1xuXHRwcml2YXRlIG9uRW50ZXJGcmFtZShkdDpudW1iZXIpXG5cdHtcblx0XHR0aGlzLl90aW1lICs9IGR0O1xuXG5cdFx0Ly91cGRhdGUgY2FtZXJhIGNvbnRyb2xlclxuXHRcdC8vIHRoaXMuX2NhbWVyYUNvbnRyb2xsZXIudXBkYXRlKCk7XG5cblx0XHRpZiAodGhpcy5fcm9vdFRpbWVMaW5lICE9IHVuZGVmaW5lZCkge1xuXHRcdFx0Ly9jb25zb2xlLmxvZyhcIlJFTkRFUiA9IFwiKTtcblx0XHRcdHRoaXMuX3Jvb3RUaW1lTGluZS51cGRhdGUoKTtcblx0XHR9XG5cdFx0Ly9jb25zb2xlLmxvZyhcIlJFTkRFUiA9IFwiKTtcblx0XHQvL3VwZGF0ZSB2aWV3XG5cdFx0dGhpcy5fdmlldy5yZW5kZXIoKTtcblx0fVxuXG5cdHByaXZhdGUgb25LZXlEb3duKGV2ZW50KVxuXHR7XG5cdFx0Y29uc29sZS5sb2coXCJrZXljb2RlID0gXCIrZXZlbnQua2V5Q29kZSk7XG5cdFx0aWYgKGV2ZW50LmtleUNvZGUgPT0gODApIHtcblx0XHRcdHRoaXMuX2lzcGVyc3BlY3RpdmUgPSB0cnVlO1xuXHRcdFx0dGhpcy5fdmlldy5jYW1lcmEgPSB0aGlzLl9jYW1lcmFfcGVyc3BlY3RpdmU7XG5cdFx0fVxuXHRcdGlmIChldmVudC5rZXlDb2RlID09IDc5KSB7XG5cdFx0XHR0aGlzLl9pc3BlcnNwZWN0aXZlID0gZmFsc2U7XG5cdFx0XHR0aGlzLl92aWV3LmNhbWVyYSA9IHRoaXMuX2NhbWVyYV9vcnRobztcblx0XHR9XG5cdFx0aWYgKGV2ZW50LmtleUNvZGUgPT0gODEpIHtcblx0XHRcdGlmICh0aGlzLl9pc3BlcnNwZWN0aXZlKSB7XG5cdFx0XHRcdHRoaXMuX2hvdmVyQ29udHJvbC5kaXN0YW5jZSArPSA1O1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSB7XG5cdFx0XHRcdHRoaXMuX29ydGhvX3Byb2plY3Rpb24ucHJvamVjdGlvbkhlaWdodCArPSA1O1xuXHRcdFx0fVxuXHRcdH1cblx0XHRlbHNlIGlmIChldmVudC5rZXlDb2RlID09IDg3KSB7XG5cdFx0XHRpZiAodGhpcy5faXNwZXJzcGVjdGl2ZSkge1xuXHRcdFx0XHR0aGlzLl9ob3ZlckNvbnRyb2wuZGlzdGFuY2UgLT0gNTtcblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHR0aGlzLl9vcnRob19wcm9qZWN0aW9uLnByb2plY3Rpb25IZWlnaHQgLT0gNTtcblx0XHRcdH1cblx0XHR9XG5cdFx0aWYgKGV2ZW50LmtleUNvZGUgPT0gNjUpIHtcblx0XHRcdGlmICh0aGlzLl9pc3BlcnNwZWN0aXZlKSB7XG5cdFx0XHRcdHRoaXMuX2hvdmVyQ29udHJvbC5kaXN0YW5jZSArPSA1MDtcblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHR0aGlzLl9vcnRob19wcm9qZWN0aW9uLnByb2plY3Rpb25IZWlnaHQgKz0gNTA7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGVsc2UgaWYgKGV2ZW50LmtleUNvZGUgPT0gODMpIHtcblx0XHRcdGlmICh0aGlzLl9pc3BlcnNwZWN0aXZlKSB7XG5cdFx0XHRcdHRoaXMuX2hvdmVyQ29udHJvbC5kaXN0YW5jZSAtPSA1MDtcblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHR0aGlzLl9vcnRob19wcm9qZWN0aW9uLnByb2plY3Rpb25IZWlnaHQgLT0gNTA7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cHJpdmF0ZSBvbk1vdXNlRG93bihldmVudClcblx0e1xuXHRcdHRoaXMuX2xhc3RQYW5BbmdsZSA9IHRoaXMuX2hvdmVyQ29udHJvbC5wYW5BbmdsZTtcblx0XHR0aGlzLl9sYXN0VGlsdEFuZ2xlID0gdGhpcy5faG92ZXJDb250cm9sLnRpbHRBbmdsZTtcblx0XHR0aGlzLl9sYXN0TW91c2VYID0gZXZlbnQuY2xpZW50WDtcblx0XHR0aGlzLl9sYXN0TW91c2VZID0gZXZlbnQuY2xpZW50WTtcblx0XHR0aGlzLl9tb3ZlID0gdHJ1ZTtcblx0fVxuXG5cdHByaXZhdGUgb25Nb3VzZVVwKGV2ZW50KVxuXHR7XG5cdFx0dGhpcy5fbW92ZSA9IGZhbHNlO1xuXHR9XG5cblx0cHJpdmF0ZSBvbk1vdXNlTW92ZShldmVudClcblx0e1xuXHRcdGlmICh0aGlzLl9tb3ZlKSB7XG5cdFx0XHRpZiAodGhpcy5faXNwZXJzcGVjdGl2ZSkge1xuXHRcdFx0XHR0aGlzLl9ob3ZlckNvbnRyb2wucGFuQW5nbGUgPSAwLjMgKiAoZXZlbnQuY2xpZW50WCAtIHRoaXMuX2xhc3RNb3VzZVgpICsgdGhpcy5fbGFzdFBhbkFuZ2xlO1xuXHRcdFx0XHR0aGlzLl9ob3ZlckNvbnRyb2wudGlsdEFuZ2xlID0gLTAuMyAqIChldmVudC5jbGllbnRZIC0gdGhpcy5fbGFzdE1vdXNlWSkgKyB0aGlzLl9sYXN0VGlsdEFuZ2xlO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSB7XG5cdFx0XHRcdGlmIChldmVudC5jbGllbnRYID4gKHRoaXMuX2xhc3RNb3VzZVggKyAxMCkpXG5cdFx0XHRcdFx0dGhpcy5fY2FtZXJhX29ydGhvLnggLT0gMTA7XG5cdFx0XHRcdGVsc2UgaWYgKGV2ZW50LmNsaWVudFggPiB0aGlzLl9sYXN0TW91c2VYKVxuXHRcdFx0XHRcdHRoaXMuX2NhbWVyYV9vcnRoby54LS07XG5cdFx0XHRcdGVsc2UgaWYgKGV2ZW50LmNsaWVudFggPCAodGhpcy5fbGFzdE1vdXNlWCAtIDEwKSlcblx0XHRcdFx0XHR0aGlzLl9jYW1lcmFfb3J0aG8ueCArPSAxMDtcblx0XHRcdFx0ZWxzZSBpZiAoZXZlbnQuY2xpZW50WCA8IHRoaXMuX2xhc3RNb3VzZVgpXG5cdFx0XHRcdFx0dGhpcy5fY2FtZXJhX29ydGhvLngrKztcblx0XHRcdFx0aWYgKGV2ZW50LmNsaWVudFkgPiAodGhpcy5fbGFzdE1vdXNlWSArIDEwKSlcblx0XHRcdFx0XHR0aGlzLl9jYW1lcmFfb3J0aG8ueSAtPSAxMDtcblx0XHRcdFx0ZWxzZSBpZiAoZXZlbnQuY2xpZW50WSA+IHRoaXMuX2xhc3RNb3VzZVkpXG5cdFx0XHRcdFx0dGhpcy5fY2FtZXJhX29ydGhvLnktLTtcblx0XHRcdFx0ZWxzZSBpZiAoZXZlbnQuY2xpZW50WSA8ICh0aGlzLl9sYXN0TW91c2VZIC0gMTApKVxuXHRcdFx0XHRcdHRoaXMuX2NhbWVyYV9vcnRoby55ICs9IDEwO1xuXHRcdFx0XHRlbHNlIGlmIChldmVudC5jbGllbnRZIDwgdGhpcy5fbGFzdE1vdXNlWSlcblx0XHRcdFx0XHR0aGlzLl9jYW1lcmFfb3J0aG8ueSsrO1xuXHRcdFx0XHR0aGlzLl9sYXN0TW91c2VYID0gZXZlbnQuY2xpZW50WDtcblx0XHRcdFx0dGhpcy5fbGFzdE1vdXNlWSA9IGV2ZW50LmNsaWVudFk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cHJpdmF0ZSBvbk1vdXNlV2hlZWwoZXZlbnQpXG5cdHtcblxuXHRcdGlmICh0aGlzLl9pc3BlcnNwZWN0aXZlKSB7XG5cdFx0XHR0aGlzLl9ob3ZlckNvbnRyb2wuZGlzdGFuY2UgLT0gZXZlbnQud2hlZWxEZWx0YSAqIDU7XG5cdFx0XHRpZiAodGhpcy5faG92ZXJDb250cm9sLmRpc3RhbmNlIDwgMTAwKSB7XG5cdFx0XHRcdHRoaXMuX2hvdmVyQ29udHJvbC5kaXN0YW5jZSA9IDEwMDtcblx0XHRcdH1cblx0XHR9XG5cdFx0ZWxzZSB7XG5cdFx0XHR0aGlzLl9vcnRob19wcm9qZWN0aW9uLnByb2plY3Rpb25IZWlnaHQgLT0gZXZlbnQud2hlZWxEZWx0YSAqIDU7XG5cdFx0XHRpZiAodGhpcy5fb3J0aG9fcHJvamVjdGlvbi5wcm9qZWN0aW9uSGVpZ2h0IDwgNSkge1xuXHRcdFx0XHR0aGlzLl9vcnRob19wcm9qZWN0aW9uLnByb2plY3Rpb25IZWlnaHQgPSA1O1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHByaXZhdGUgb25SZXNpemUoZXZlbnQgPSBudWxsKVxuXHR7XG5cdFx0dGhpcy5fdmlldy55ICAgICAgICAgPSAwO1xuXHRcdHRoaXMuX3ZpZXcueCAgICAgICAgID0gMDtcblx0XHR0aGlzLl92aWV3LndpZHRoICAgICA9IHdpbmRvdy5pbm5lcldpZHRoO1xuXHRcdHRoaXMuX3ZpZXcuaGVpZ2h0ICAgID0gd2luZG93LmlubmVySGVpZ2h0O1xuXHR9XG5cbn1cblxuIl19