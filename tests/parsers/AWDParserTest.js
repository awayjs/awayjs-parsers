var Geometry = require("awayjs-core/lib/data/Geometry");
var AssetEvent = require("awayjs-core/lib/events/AssetEvent");
var LoaderEvent = require("awayjs-core/lib/events/LoaderEvent");
var Vector3D = require("awayjs-core/lib/geom/Vector3D");
var AssetLibrary = require("awayjs-core/lib/library/AssetLibrary");
var URLRequest = require("awayjs-core/lib/net/URLRequest");
var Debug = require("awayjs-core/lib/utils/Debug");
var RequestAnimationFrame = require("awayjs-core/lib/utils/RequestAnimationFrame");
var View = require("awayjs-display/lib/containers/View");
var Mesh = require("awayjs-display/lib/entities/Mesh");
var MaterialBase = require("awayjs-display/lib/materials/MaterialBase");
var DefaultRenderer = require("awayjs-renderergl/lib/DefaultRenderer");
var MethodRendererPool = require("awayjs-methodmaterials/lib/pool/MethodRendererPool");
var AWD3Parser = require("awayjs-parsers/lib/AWD3Parser");
var AWDParserTest = (function () {
    function AWDParserTest() {
        var _this = this;
        Debug.LOG_PI_ERRORS = true;
        Debug.THROW_ERRORS = false;
        AssetLibrary.enableParser(AWD3Parser);
        this._token = AssetLibrary.load(new URLRequest('assets/suzanne.awd'));
        this._token.addEventListener(LoaderEvent.RESOURCE_COMPLETE, function (event) { return _this.onResourceComplete(event); });
        this._token.addEventListener(AssetEvent.ASSET_COMPLETE, function (event) { return _this.onAssetComplete(event); });
        this._view = new View(new DefaultRenderer(MethodRendererPool));
        this._timer = new RequestAnimationFrame(this.render, this);
        window.onresize = function (event) { return _this.resize(event); };
        this._timer.start();
        this.resize();
    }
    AWDParserTest.prototype.resize = function (event) {
        if (event === void 0) { event = null; }
        this._view.y = 0;
        this._view.x = 0;
        this._view.width = window.innerWidth;
        this._view.height = window.innerHeight;
    };
    AWDParserTest.prototype.render = function (dt) {
        if (this._suzanne)
            this._suzanne.rotationY += 1;
        this._view.render();
        this._view.camera.z = -2000;
    };
    AWDParserTest.prototype.onAssetComplete = function (event) {
        //console.log('------------------------------------------------------------------------------');
        //console.log('events.AssetEvent.ASSET_COMPLETE', AssetLibrary.getAsset(event.asset.name));
        //console.log('------------------------------------------------------------------------------');
    };
    AWDParserTest.prototype.onResourceComplete = function (event) {
        console.log('------------------------------------------------------------------------------');
        console.log('events.LoaderEvent.RESOURCE_COMPLETE', event);
        console.log('------------------------------------------------------------------------------');
        var loader = event.target;
        var numAssets = loader.baseDependency.assets.length;
        for (var i = 0; i < numAssets; ++i) {
            var asset = loader.baseDependency.assets[i];
            switch (asset.assetType) {
                case Mesh.assetType:
                    this._suzanne = asset;
                    this._suzanne.transform.scale = new Vector3D(600, 600, 600);
                    this._view.scene.addChild(this._suzanne);
                    break;
                case Geometry.assetType:
                    break;
                case MaterialBase.assetType:
                    break;
            }
        }
    };
    return AWDParserTest;
})();

//# sourceMappingURL=data:application/json;base64,