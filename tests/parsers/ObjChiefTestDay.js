var LoaderEvent = require("awayjs-core/lib/events/LoaderEvent");
var Vector3D = require("awayjs-core/lib/geom/Vector3D");
var AssetLibrary = require("awayjs-core/lib/library/AssetLibrary");
var AssetType = require("awayjs-core/lib/library/AssetType");
var URLRequest = require("awayjs-core/lib/net/URLRequest");
var Debug = require("awayjs-core/lib/utils/Debug");
var RequestAnimationFrame = require("awayjs-core/lib/utils/RequestAnimationFrame");
var View = require("awayjs-display/lib/containers/View");
var DisplayObjectContainer = require("awayjs-display/lib/containers/DisplayObjectContainer");
var DirectionalLight = require("awayjs-display/lib/entities/DirectionalLight");
var StaticLightPicker = require("awayjs-display/lib/materials/lightpickers/StaticLightPicker");
var DefaultRenderer = require("awayjs-renderergl/lib/DefaultRenderer");
var MethodMaterial = require("awayjs-methodmaterials/lib/MethodMaterial");
var MethodRendererPool = require("awayjs-methodmaterials/lib/pool/MethodRendererPool");
var OBJParser = require("awayjs-parsers/lib/OBJParser");
/**
 *
 */
var ObjChiefTestDay = (function () {
    function ObjChiefTestDay() {
        var _this = this;
        this.meshes = new Array();
        this.spartan = new DisplayObjectContainer();
        this.spartanFlag = false;
        this.terrainObjFlag = false;
        Debug.LOG_PI_ERRORS = false;
        Debug.THROW_ERRORS = false;
        this.view = new View(new DefaultRenderer(MethodRendererPool));
        this.view.camera.z = -50;
        this.view.camera.y = 20;
        this.view.camera.projection.near = 0.1;
        this.view.backgroundColor = 0xCEC8C6;
        this.raf = new RequestAnimationFrame(this.render, this);
        this.light = new DirectionalLight();
        this.light.color = 0xc1582d;
        this.light.direction = new Vector3D(1, 0, 0);
        this.light.ambient = 0.4;
        this.light.ambientColor = 0x85b2cd;
        this.light.diffuse = 2.8;
        this.light.specular = 1.8;
        this.spartan.transform.scale = new Vector3D(.25, .25, .25);
        this.spartan.y = 0;
        this.view.scene.addChild(this.light);
        AssetLibrary.enableParser(OBJParser);
        this.token = AssetLibrary.load(new URLRequest('assets/Halo_3_SPARTAN4.obj'));
        this.token.addEventListener(LoaderEvent.RESOURCE_COMPLETE, function (event) { return _this.onResourceComplete(event); });
        this.token = AssetLibrary.load(new URLRequest('assets/terrain.obj'));
        this.token.addEventListener(LoaderEvent.RESOURCE_COMPLETE, function (event) { return _this.onResourceComplete(event); });
        this.token = AssetLibrary.load(new URLRequest('assets/masterchief_base.png'));
        this.token.addEventListener(LoaderEvent.RESOURCE_COMPLETE, function (event) { return _this.onResourceComplete(event); });
        this.token = AssetLibrary.load(new URLRequest('assets/stone_tx.jpg'));
        this.token.addEventListener(LoaderEvent.RESOURCE_COMPLETE, function (event) { return _this.onResourceComplete(event); });
        window.onresize = function (event) { return _this.onResize(); };
        this.raf.start();
    }
    ObjChiefTestDay.prototype.render = function () {
        if (this.terrain)
            this.terrain.rotationY += 0.4;
        this.spartan.rotationY += 0.4;
        this.view.render();
    };
    ObjChiefTestDay.prototype.onResourceComplete = function (event) {
        var loader = event.target;
        var l = loader.baseDependency.assets.length;
        console.log('------------------------------------------------------------------------------');
        console.log('events.LoaderEvent.RESOURCE_COMPLETE', event, l, loader);
        console.log('------------------------------------------------------------------------------');
        var loader = event.target;
        var l = loader.baseDependency.assets.length;
        for (var c = 0; c < l; c++) {
            var d = loader.baseDependency.assets[c];
            console.log(d.name, event.url);
            switch (d.assetType) {
                case AssetType.MESH:
                    if (event.url == 'assets/Halo_3_SPARTAN4.obj') {
                        var mesh = d;
                        this.spartan.addChild(mesh);
                        this.spartanFlag = true;
                        this.meshes.push(mesh);
                    }
                    else if (event.url == 'assets/terrain.obj') {
                        this.terrainObjFlag = true;
                        this.terrain = d;
                        this.terrain.y = 98;
                        this.view.scene.addChild(this.terrain);
                    }
                    break;
                case AssetType.TEXTURE:
                    if (event.url == 'assets/masterchief_base.png') {
                        this.mat = new MethodMaterial(d, true, true, false);
                        this.mat.lightPicker = new StaticLightPicker([this.light]);
                    }
                    else if (event.url == 'assets/stone_tx.jpg') {
                        this.terrainMaterial = new MethodMaterial(d, true, true, false);
                        this.terrainMaterial.lightPicker = new StaticLightPicker([this.light]);
                    }
                    break;
            }
        }
        if (this.terrainObjFlag && this.terrainMaterial) {
            this.terrain.material = this.terrainMaterial;
            this.terrain.geometry.scaleUV(20, 20);
        }
        if (this.mat && this.spartanFlag)
            for (var c = 0; c < this.meshes.length; c++)
                this.meshes[c].material = this.mat;
        this.view.scene.addChild(this.spartan);
        this.onResize();
    };
    ObjChiefTestDay.prototype.onResize = function (event) {
        if (event === void 0) { event = null; }
        this.view.y = 0;
        this.view.x = 0;
        this.view.width = window.innerWidth;
        this.view.height = window.innerHeight;
    };
    return ObjChiefTestDay;
})();

//# sourceMappingURL=data:application/json;base64,